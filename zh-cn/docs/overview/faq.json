{
  "filename": "faq.md",
  "__html": "<h1>常见问题</h1>\n<p><a href=\"#0\" target=\"_self\">0.8、0.9如何升级到1.0？</a></p>\n<p><a href=\"#1\" target=\"_self\">1.Seata 目前可以用于生产环境吗？</a></p>\n<p><a href=\"#2\" target=\"_self\">2.Seata 目前支持高可用吗？</a></p>\n<p><a href=\"#3\" target=\"_self\">3.undo_log表log_status=1的记录是做什么用的？</a></p>\n<p><a href=\"#4\" target=\"_self\">4.怎么使用Seata框架，来保证事务的隔离性？</a></p>\n<p><a href=\"#5\" target=\"_self\">5.脏数据回滚失败如何处理?</a></p>\n<p><a href=\"#6\" target=\"_self\">6.为什么分支事务注册时, 全局事务状态不是begin？</a></p>\n<p><a href=\"#7\" target=\"_self\">7.Nacos 作为 Seata 配置中心时，项目启动报错找不到服务。如何排查，如何处理?</a></p>\n<p><a href=\"#8\" target=\"_self\">8.Eureka做注册中心，TC高可用时，如何在TC端覆盖Eureka属性?</a></p>\n<p><a href=\"#9\" target=\"_self\">9.java.lang.NoSuchMethodError: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonToken;)?</a></p>\n<p><a href=\"#10\" target=\"_self\">10.为什么mybatis没有返回自增ID? </a></p>\n<p><a href=\"#11\" target=\"_self\">11.io.seata.codec.protobuf.generated不存在，导致seata server启动不了? </a></p>\n<p><a href=\"#12\" target=\"_self\">12.TC如何使用mysql8? </a></p>\n<p><a href=\"#13\" target=\"_self\">13.支持多主键? </a></p>\n<p><a href=\"#14\" target=\"_self\">14.使用HikariDataSource报错如何解决? </a><br>\n<a href=\"#15\" target=\"_self\">15.是否可以不使用conf类型配置文件，直接将配置写入application.properties? </a></p>\n<hr>\n<h3 id='0'>Q: 0.8、0.9如何升级到1.0？</h3>\n<p><strong>A:</strong></p>\n<ul>\n<li>（可选）1.0支持yml、properties，需用seata-spring-boot-starter替换掉seata-all</li>\n<li>（必选）TC端表lock_table字段branch_id增加普通索引</li>\n<li>（可选）部分参数命名改动，<a href=\"https://seata.io/zh-cn/docs/user/configurations.html\" target=\"_blank\">点击查看参数配置</a></li>\n<li>（可选） client.report.success.enable可以置为false，提升性能</li>\n</ul>\n<hr>\n<h3 id='1'>Q: 1.Seata 目前可以用于生产环境吗？</h3>\n<p><strong>A:</strong>\n0.4.2版本之后就可以上生产环境，欢迎已经在使用的企业参与此issue:<a href=\"https://github.com/seata/seata/issues/1246\">who's using Seata</a></p>\n<hr>\n<h3 id='2'>Q: 2.Seata 目前支持高可用吗？</h3>\n<p><strong>A:</strong>\n0.6版本开始支持，tc使用db模式共享全局事务会话信息，注册中心使用非file的seata支持的第三方注册中心</p>\n<hr>\n<h3 id='3'>Q: 3.undo_log表log_status=1的记录是做什么用的？</h3>\n<p><strong>A:</strong></p>\n<ul>\n<li>场景 ： 分支事务a注册TC后，a的本地事务提交前发生了全局事务回滚</li>\n<li>后果 ： 全局事务回滚成功，a资源被占用掉，产生了资源悬挂问题</li>\n<li>防悬挂措施： a回滚时发现回滚undo还未插入，则插入一条log_status=1的undo记录，a本地事务（业务写操作sql和对应undo为一个本地事务）提交时会因为undo表主键冲突而提交失败。</li>\n</ul>\n<hr>\n<h3 id='4'>Q: 4.怎么使用Seata框架，来保证事务的隔离性？</h3>\n<p><strong>A:</strong>\n因seata一阶段本地事务已提交，为防止其他事务脏读脏写需要加强隔离。</p>\n<ol>\n<li>脏读 select语句加for update，代理方法增加@GlobalLock或@GlobalTransaction</li>\n<li>脏写 必须使用@GlobalTransaction<br>\n注：如果你查询的业务的接口没有GlobalTransactional 包裹，也就是这个方法上压根没有分布式事务的需求，这时你可以在方法上标注@GlobalLock 注解，并且在查询语句上加 for update。\n如果你查询的接口在事务链路上外层有GlobalTransactional注解，那么你查询的语句只要加for update就行。设计这个注解的原因是在没有这个注解之前，需要查询分布式事务读已提交的数据，但业务本身不需要分布式事务。\n若使用GlobalTransactional注解就会增加一些没用的额外的rpc开销比如begin 返回xid，提交事务等。GlobalLock简化了rpc过程，使其做到更高的性能。</li>\n</ol>\n<hr>\n<h3 id='5'>Q: 5.脏数据回滚失败如何处理?</h3>\n<p><strong>A:</strong></p>\n<ol>\n<li>脏数据需手动处理，根据日志提示修正数据或者将对应undo删除（可自定义实现FailureHandler做邮件通知或其他）</li>\n<li>关闭回滚时undo镜像校验，不推荐该方案。</li>\n</ol>\n<pre><code>注：建议事前做好隔离保证无脏数据\n</code></pre>\n<hr>\n<h3 id='6'>Q: 6.为什么分支事务注册时, 全局事务状态不是begin?</h3>\n<p><strong>A:</strong></p>\n<ul>\n<li>异常：Could not register branch into global session xid = status = Rollbacked（还有Rollbacking、AsyncCommitting等等二阶段状态） while expecting Begin</li>\n<li>描述：分支事务注册时，全局事务状态需是一阶段状态begin，非begin不允许注册。属于seata框架层面正常的处理，用户可以从自身业务层面解决。</li>\n<li>出现场景（可继续补充）</li>\n</ul>\n<pre><code>  1. 分支事务是异步，全局事务无法感知它的执行进度，全局事务已进入二阶段，该异步分支才来注册\n  2. 服务a rpc 服务b超时（dubbo、feign等默认1秒超时），a上抛异常给tm，tm通知tc回滚，但是b还是收到了请求（网络延迟或rpc框架重试），然后去tc注册时发现全局事务已在回滚\n  3. tc感知全局事务超时(@GlobalTransactional(timeoutMills = 默认60秒))，主动变更状态并通知各分支事务回滚，此时有新的分支事务来注册\n</code></pre>\n<hr>\n<h3 id='7'>Q: 7.Nacos 作为 Seata 配置中心时，项目启动报错找不到服务。如何排查，如何处理?</h3>\n<p><strong>A：</strong>\n异常：io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.</p>\n<ol>\n<li>查看nacos配置列表，seata配置是否已经导入成功</li>\n<li>查看nacos服务列表，serverAddr是否已经注册成功</li>\n<li>检查client端的registry.conf里面的namespace，registry.nacos.namespace和config.nacos.namespace填入nacos的命名空间ID，默认&quot;&quot;，server端和client端对应，namespace\n为public是nacos的一个保留控件，如果您需要创建自己的namespace，最好不要和public重名，以一个实际业务场景有具体语义的名字来命名</li>\n<li>nacos上服务列表，serverAddr地址对应ip地址应为seata启动指定ip地址，如：sh <a href=\"http://seata-server.sh\">seata-server.sh</a> -p 8091 -h 122.51.204.197 -m file</li>\n<li>查看seata/conf/nacos-config.txt 事务分组service.vgroup_mapping.trade_group=default配置与项目分组配置名称是否一致</li>\n<li>telnet ip 端口 查看端口是都开放，以及防火墙状态</li>\n</ol>\n<pre><code>注：1.080版本启动指定ip问题，出现异常Exception in thread &quot;main&quot; java.lang.RuntimeException: java.net.BindException: Cannot assign request address，请升级到081以上版本  \n    2.项目使用jdk13，启动出现\n</code></pre>\n<pre><code class=\"language-verilog\">Error: Could <span class=\"hljs-keyword\">not</span> create the Java Virtual Machine.\nError: A fatal exception has occurred. Program will exit.\n</code></pre>\n<pre><code>    如环境为sh，替换脚本中最后一段：\n</code></pre>\n<pre><code class=\"language-shell\">        exec \"$JAVACMD\" $JAVA_OPTS -server -Xmx2048m -Xms2048m -Xmn1024m -Xss512k -XX:SurvivorRatio=10 -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=256m -XX:MaxDirectMemorySize=1024m -XX:-OmitStackTraceInFastThrow -XX:-UseAdaptiveSizePolicy -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=\"$BASEDIR\"/logs/java_heapdump.hprof -XX:+DisableExplicitGC -XX:+CMSParallelRemarkEnabled -XX:+\nUseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=75 -verbose:gc -Dio.netty.leakDetectionLevel=advanced \\\n      -classpath \"$CLASSPATH\" \\\n          -Dapp.name=\"seata-server\" \\\n          -Dapp.pid=\"$$\" \\\n          -Dapp.repo=\"$REPO\" \\\n          -Dapp.home=\"$BASEDIR\" \\\n          -Dbasedir=\"$BASEDIR\" \\\n          io.seata.server.Server \\\n          \"$@\"\n</code></pre>\n<hr>\n<h3 id='8'>Q: 8.Eureka做注册中心，TC高可用时，如何在TC端覆盖Eureka属性?</h3>\n<p><strong>A：</strong>\n在seata\\conf目录下新增eureka-client.properties文件，添加要覆盖的Eureka属性即可。<br>\n例如，要覆盖eureka.instance.lease-renewal-interval-in-seconds和eureka.instance.lease-expiration-duration-in-seconds，添加如下内容：</p>\n<pre><code>eureka.lease.renewalInterval=1\neureka.lease.duration=2\n</code></pre>\n<p>属性前缀为eureka，其后的属性名可以参考类com.netflix.appinfo.PropertyBasedInstanceConfigConstants，也可研究seata源码中的discovery模块的seata-discovery-eureka工程</p>\n<hr>\n<h3 id='9'>Q: 9.发生下面异常是啥原因？ java.lang.NoSuchMethodError: com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonToken;)?</h3>\n<p><strong>A:</strong>\nundolog序列化配置为jackson时，jackson版本需要为2.9.9+</p>\n<hr>\n<h3 id='10'>Q: 10.为什么mybatis没有返回自增ID?</h3>\n<p><strong>A:</strong>\n需要修改mybatis的配置: 在<code>@Options(useGeneratedKeys = true, keyProperty = &quot;id&quot;)</code>或者在xml中指定useGeneratedKeys 和 keyProperty属性</p>\n<hr>\n<h3 id='11'>Q: 11.io.seata.codec.protobuf.generated不存在，导致seata server启动不了?</h3>\n<p><strong>A:</strong>\n本地执行下:mvn clean install -DskipTests=true,相关代码在0.8.1已经移除。</p>\n<hr>\n<h3 id='12'>Q: 12.TC如何使用mysql8?</h3>\n<p><strong>A:</strong> 1.修改file.conf的驱动配置store.db.driver-class-name;  2.lib目录下删除mysql5驱动,添加mysql8驱动<br>\nps: oracle同理</p>\n<hr>\n<h3 id='13'>Q: 13.支持多主键?</h3>\n<p><strong>A:</strong>\n暂不支持，建议先建一列自增id主键，原复合主键改为唯一键来规避下</p>\n<hr>\n<h3 id='14'>Q: 14.使用HikariDataSource报错如何解决?</h3>\n<p><strong>A:</strong></p>\n<pre><code>异常1:ClassCastException: com.sun.proxy.$Proxy153 cannot be cast to com.zaxxer.hikari.HikariDataSource\n原因: 自动代理时，实例类型转换错误，注入的是$Proxy153实例，不是HikariDataSource的本身或子类实例。\n解决: seata自动代理数据源功能使用jdk proxy, 对DataSource进行代理，生成的代理类 extends Proxy implements DataSource, 接收方可改成DataSource接收实现。\n1.1.0将同时支持jdk proxy和cglib，届时该问题还可切换cglib解决。\n</code></pre>\n<hr>\n<h3 id='15'>Q: 15.是否可以不使用conf类型配置文件，直接将配置写入application.properties?</h3>\n<p><strong>A:</strong>\n目前seata-all是需要使用conf类型配置文件，后续会支持properties和yml类型文件。当前可以在项目中依赖seata-spring-boot-starter，然后将配置项写入到application\n.properties 这样可以不使用conf类型文件。</p>\n<hr>\n<hr>\n",
  "link": "/zh-cn/docs/overview/faq.html",
  "meta": {
    "title": "Seata常见问题",
    "keywords": "Seata",
    "description": "Seata 常见问题。"
  }
}