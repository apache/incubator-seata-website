{
  "filename": "dfdaemon.md",
  "__html": "<h1>dfdaemon</h1>\n<p>dfdaemon is a proxy between pouchd/dockerd and registry used for pulling images. You can use the dfdaemon command in the command line tool.</p>\n<h2>Name</h2>\n<p>dfdaemon - a proxy between pouchd/dockerd and registry used for pulling images.</p>\n<h2>Synopsis</h2>\n<p><code>dfdaemon [options]...</code></p>\n<h2>Options</h2>\n<pre><code class=\"language-text\">  -callsystem string\n        caller name (default &quot;com_ops_dragonfly&quot;)\n  -certpem string\n        cert.pem file path\n  -dfpath string\n        dfget path (default is your installed path)\n  -h    help\n  -hostIp string\n        dfdaemon host ip, default: 127.0.0.1 (default &quot;127.0.0.1&quot;)\n  -keypem string\n        key.pem file path\n  -localrepo string\n        temp output dir of dfdaemon (default is &quot;${HOME}/.small-dragonfly/dfdaemon/data&quot;)\n  -maxprocs int\n        the maximum number of CPUs that the dfdaemon can use (default 4)\n  -notbs\n        not try back source to download if throw exception (default true)\n  -port uint\n        dfdaemon will listen the port (default 65001)\n  -ratelimit string\n        net speed limit,format:xxxM/K\n  -registry string\n        registry addr(https://abc.xx.x or http://abc.xx.x) and must exist if dfdaemon is used to mirror mode\n  -rule string\n        download the url by P2P if url matches the specified pattern,format:reg1,reg2,reg3\n  -urlfilter string\n        filter specified url fields (default &quot;Signature&amp;Expires&amp;OSSAccessKeyId&quot;)\n  -v    version\n  -verbose\n        verbose\n</code></pre>\n<h2>Files</h2>\n<h3>Local Repository Directory</h3>\n<p>The default local repository is <code>${HOME}/.small-dragonfly/dfdaemon/data/</code>. You can change it by setting the option <code>-localrep</code>.</p>\n",
  "link": "/zh-cn/docs/cli_ref/dfdaemon.html",
  "meta": {}
}