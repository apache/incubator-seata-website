!(function (e, t) {
  'object' == typeof exports && 'object' == typeof module
    ? (module.exports = t())
    : 'function' == typeof define && define.amd
    ? define([], t)
    : 'object' == typeof exports
    ? (exports.mseArc = t())
    : (e.mseArc = t());
})(self, function () {
  return (function () {
    var e,
      t,
      n = {
        791: function (e, t, n) {
          var r = n(896).default;
          'object' ===
            ('undefined' == typeof window ? 'undefined' : r(window)) &&
            window.NodeList &&
            !NodeList.prototype.forEach &&
            (NodeList.prototype.forEach = Array.prototype.forEach),
            [
              Element.prototype,
              Document.prototype,
              DocumentFragment.prototype,
            ].forEach(function (e) {
              Object.prototype.hasOwnProperty.call(e, 'append') ||
                Object.defineProperty(e, 'append', {
                  configurable: !0,
                  enumerable: !0,
                  writable: !0,
                  value: function () {
                    for (
                      var e = document.createDocumentFragment(),
                        t = arguments.length,
                        n = new Array(t),
                        r = 0;
                      r < t;
                      r++
                    )
                      n[r] = arguments[r];
                    n.forEach(function (t) {
                      var n = t instanceof Node;
                      e.appendChild(n ? t : document.createTextNode(String(t)));
                    }),
                      this.appendChild(e);
                  },
                });
            });
        },
        967: function (e, t, n) {
          var r,
            i = n(896).default;
          !(function () {
            'use strict';
            var o = {}.hasOwnProperty;
            function a() {
              for (var e = [], t = 0; t < arguments.length; t++) {
                var n = arguments[t];
                if (n) {
                  var r = i(n);
                  if ('string' === r || 'number' === r) e.push(n);
                  else if (Array.isArray(n)) {
                    if (n.length) {
                      var s = a.apply(null, n);
                      s && e.push(s);
                    }
                  } else if ('object' === r) {
                    if (
                      n.toString !== Object.prototype.toString &&
                      !n.toString.toString().includes('[native code]')
                    ) {
                      e.push(n.toString());
                      continue;
                    }
                    for (var l in n) o.call(n, l) && n[l] && e.push(l);
                  }
                }
              }
              return e.join(' ');
            }
            e.exports
              ? ((a.default = a), (e.exports = a))
              : 'object' === i(n.amdO) && n.amdO
              ? void 0 ===
                  (r = function () {
                    return a;
                  }.apply(t, [])) || (e.exports = r)
              : (window.classNames = a);
          })();
        },
        801: function (e, t, n) {
          'use strict';
          var r = n(896).default,
            i = n(534),
            o = n(547);
          function a(e) {
            for (
              var t =
                  'https://reactjs.org/docs/error-decoder.html?invariant=' + e,
                n = 1;
              n < arguments.length;
              n++
            )
              t += '&args[]=' + encodeURIComponent(arguments[n]);
            return (
              'Minified React error #' +
              e +
              '; visit ' +
              t +
              ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.'
            );
          }
          var s = new Set(),
            l = {};
          function u(e, t) {
            c(e, t), c(e + 'Capture', t);
          }
          function c(e, t) {
            for (l[e] = t, e = 0; e < t.length; e++) s.add(t[e]);
          }
          var f = !(
              'undefined' == typeof window ||
              void 0 === window.document ||
              void 0 === window.document.createElement
            ),
            h = Object.prototype.hasOwnProperty,
            d =
              /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
            g = {},
            p = {};
          function v(e, t, n, i) {
            if (
              null == t ||
              (function (e, t, n, i) {
                if (null !== n && 0 === n.type) return !1;
                switch (r(t)) {
                  case 'function':
                  case 'symbol':
                    return !0;
                  case 'boolean':
                    return (
                      !i &&
                      (null !== n
                        ? !n.acceptsBooleans
                        : 'data-' !== (e = e.toLowerCase().slice(0, 5)) &&
                          'aria-' !== e)
                    );
                  default:
                    return !1;
                }
              })(e, t, n, i)
            )
              return !0;
            if (i) return !1;
            if (null !== n)
              switch (n.type) {
                case 3:
                  return !t;
                case 4:
                  return !1 === t;
                case 5:
                  return isNaN(t);
                case 6:
                  return isNaN(t) || 1 > t;
              }
            return !1;
          }
          function y(e, t, n, r, i, o, a) {
            (this.acceptsBooleans = 2 === t || 3 === t || 4 === t),
              (this.attributeName = r),
              (this.attributeNamespace = i),
              (this.mustUseProperty = n),
              (this.propertyName = e),
              (this.type = t),
              (this.sanitizeURL = o),
              (this.removeEmptyString = a);
          }
          var m = {};
          'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
            .split(' ')
            .forEach(function (e) {
              m[e] = new y(e, 0, !1, e, null, !1, !1);
            }),
            [
              ['acceptCharset', 'accept-charset'],
              ['className', 'class'],
              ['htmlFor', 'for'],
              ['httpEquiv', 'http-equiv'],
            ].forEach(function (e) {
              var t = e[0];
              m[t] = new y(t, 1, !1, e[1], null, !1, !1);
            }),
            ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(
              function (e) {
                m[e] = new y(e, 2, !1, e.toLowerCase(), null, !1, !1);
              }
            ),
            [
              'autoReverse',
              'externalResourcesRequired',
              'focusable',
              'preserveAlpha',
            ].forEach(function (e) {
              m[e] = new y(e, 2, !1, e, null, !1, !1);
            }),
            'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
              .split(' ')
              .forEach(function (e) {
                m[e] = new y(e, 3, !1, e.toLowerCase(), null, !1, !1);
              }),
            ['checked', 'multiple', 'muted', 'selected'].forEach(function (e) {
              m[e] = new y(e, 3, !0, e, null, !1, !1);
            }),
            ['capture', 'download'].forEach(function (e) {
              m[e] = new y(e, 4, !1, e, null, !1, !1);
            }),
            ['cols', 'rows', 'size', 'span'].forEach(function (e) {
              m[e] = new y(e, 6, !1, e, null, !1, !1);
            }),
            ['rowSpan', 'start'].forEach(function (e) {
              m[e] = new y(e, 5, !1, e.toLowerCase(), null, !1, !1);
            });
          var b = /[\-:]([a-z])/g;
          function k(e) {
            return e[1].toUpperCase();
          }
          function w(e, t, n, r) {
            var i = m.hasOwnProperty(t) ? m[t] : null;
            (null !== i
              ? 0 !== i.type
              : r ||
                !(2 < t.length) ||
                ('o' !== t[0] && 'O' !== t[0]) ||
                ('n' !== t[1] && 'N' !== t[1])) &&
              (v(t, n, i, r) && (n = null),
              r || null === i
                ? (function (e) {
                    return (
                      !!h.call(p, e) ||
                      (!h.call(g, e) &&
                        (d.test(e) ? (p[e] = !0) : ((g[e] = !0), !1)))
                    );
                  })(t) &&
                  (null === n
                    ? e.removeAttribute(t)
                    : e.setAttribute(t, '' + n))
                : i.mustUseProperty
                ? (e[i.propertyName] = null === n ? 3 !== i.type && '' : n)
                : ((t = i.attributeName),
                  (r = i.attributeNamespace),
                  null === n
                    ? e.removeAttribute(t)
                    : ((n =
                        3 === (i = i.type) || (4 === i && !0 === n)
                          ? ''
                          : '' + n),
                      r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))));
          }
          'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
            .split(' ')
            .forEach(function (e) {
              var t = e.replace(b, k);
              m[t] = new y(t, 1, !1, e, null, !1, !1);
            }),
            'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'
              .split(' ')
              .forEach(function (e) {
                var t = e.replace(b, k);
                m[t] = new y(
                  t,
                  1,
                  !1,
                  e,
                  'http://www.w3.org/1999/xlink',
                  !1,
                  !1
                );
              }),
            ['xml:base', 'xml:lang', 'xml:space'].forEach(function (e) {
              var t = e.replace(b, k);
              m[t] = new y(
                t,
                1,
                !1,
                e,
                'http://www.w3.org/XML/1998/namespace',
                !1,
                !1
              );
            }),
            ['tabIndex', 'crossOrigin'].forEach(function (e) {
              m[e] = new y(e, 1, !1, e.toLowerCase(), null, !1, !1);
            }),
            (m.xlinkHref = new y(
              'xlinkHref',
              1,
              !1,
              'xlink:href',
              'http://www.w3.org/1999/xlink',
              !0,
              !1
            )),
            ['src', 'href', 'action', 'formAction'].forEach(function (e) {
              m[e] = new y(e, 1, !1, e.toLowerCase(), null, !0, !0);
            });
          var x = i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
            C = Symbol.for('react.element'),
            S = Symbol.for('react.portal'),
            E = Symbol.for('react.fragment'),
            O = Symbol.for('react.strict_mode'),
            P = Symbol.for('react.profiler'),
            A = Symbol.for('react.provider'),
            M = Symbol.for('react.context'),
            T = Symbol.for('react.forward_ref'),
            N = Symbol.for('react.suspense'),
            j = Symbol.for('react.suspense_list'),
            L = Symbol.for('react.memo'),
            R = Symbol.for('react.lazy');
          Symbol.for('react.scope'), Symbol.for('react.debug_trace_mode');
          var _ = Symbol.for('react.offscreen');
          Symbol.for('react.legacy_hidden'),
            Symbol.for('react.cache'),
            Symbol.for('react.tracing_marker');
          var I = Symbol.iterator;
          function D(e) {
            return null === e || 'object' !== r(e)
              ? null
              : 'function' == typeof (e = (I && e[I]) || e['@@iterator'])
              ? e
              : null;
          }
          var z,
            B = Object.assign;
          function V(e) {
            if (void 0 === z)
              try {
                throw Error();
              } catch (e) {
                var t = e.stack.trim().match(/\n( *(at )?)/);
                z = (t && t[1]) || '';
              }
            return '\n' + z + e;
          }
          var F = !1;
          function U(e, t) {
            if (!e || F) return '';
            F = !0;
            var n = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            try {
              if (t)
                if (
                  ((t = function () {
                    throw Error();
                  }),
                  Object.defineProperty(t.prototype, 'props', {
                    set: function () {
                      throw Error();
                    },
                  }),
                  'object' ===
                    ('undefined' == typeof Reflect
                      ? 'undefined'
                      : r(Reflect)) && Reflect.construct)
                ) {
                  try {
                    Reflect.construct(t, []);
                  } catch (e) {
                    var i = e;
                  }
                  Reflect.construct(e, [], t);
                } else {
                  try {
                    t.call();
                  } catch (e) {
                    i = e;
                  }
                  e.call(t.prototype);
                }
              else {
                try {
                  throw Error();
                } catch (e) {
                  i = e;
                }
                e();
              }
            } catch (t) {
              if (t && i && 'string' == typeof t.stack) {
                for (
                  var o = t.stack.split('\n'),
                    a = i.stack.split('\n'),
                    s = o.length - 1,
                    l = a.length - 1;
                  1 <= s && 0 <= l && o[s] !== a[l];

                )
                  l--;
                for (; 1 <= s && 0 <= l; s--, l--)
                  if (o[s] !== a[l]) {
                    if (1 !== s || 1 !== l)
                      do {
                        if ((s--, 0 > --l || o[s] !== a[l])) {
                          var u = '\n' + o[s].replace(' at new ', ' at ');
                          return (
                            e.displayName &&
                              u.includes('<anonymous>') &&
                              (u = u.replace('<anonymous>', e.displayName)),
                            u
                          );
                        }
                      } while (1 <= s && 0 <= l);
                    break;
                  }
              }
            } finally {
              (F = !1), (Error.prepareStackTrace = n);
            }
            return (e = e ? e.displayName || e.name : '') ? V(e) : '';
          }
          function H(e) {
            switch (e.tag) {
              case 5:
                return V(e.type);
              case 16:
                return V('Lazy');
              case 13:
                return V('Suspense');
              case 19:
                return V('SuspenseList');
              case 0:
              case 2:
              case 15:
                return (e = U(e.type, !1));
              case 11:
                return (e = U(e.type.render, !1));
              case 1:
                return (e = U(e.type, !0));
              default:
                return '';
            }
          }
          function G(e) {
            if (null == e) return null;
            if ('function' == typeof e) return e.displayName || e.name || null;
            if ('string' == typeof e) return e;
            switch (e) {
              case E:
                return 'Fragment';
              case S:
                return 'Portal';
              case P:
                return 'Profiler';
              case O:
                return 'StrictMode';
              case N:
                return 'Suspense';
              case j:
                return 'SuspenseList';
            }
            if ('object' === r(e))
              switch (e.$$typeof) {
                case M:
                  return (e.displayName || 'Context') + '.Consumer';
                case A:
                  return (e._context.displayName || 'Context') + '.Provider';
                case T:
                  var t = e.render;
                  return (
                    (e = e.displayName) ||
                      (e =
                        '' !== (e = t.displayName || t.name || '')
                          ? 'ForwardRef(' + e + ')'
                          : 'ForwardRef'),
                    e
                  );
                case L:
                  return null !== (t = e.displayName || null)
                    ? t
                    : G(e.type) || 'Memo';
                case R:
                  (t = e._payload), (e = e._init);
                  try {
                    return G(e(t));
                  } catch (e) {}
              }
            return null;
          }
          function W(e) {
            var t = e.type;
            switch (e.tag) {
              case 24:
                return 'Cache';
              case 9:
                return (t.displayName || 'Context') + '.Consumer';
              case 10:
                return (t._context.displayName || 'Context') + '.Provider';
              case 18:
                return 'DehydratedFragment';
              case 11:
                return (
                  (e = (e = t.render).displayName || e.name || ''),
                  t.displayName ||
                    ('' !== e ? 'ForwardRef(' + e + ')' : 'ForwardRef')
                );
              case 7:
                return 'Fragment';
              case 5:
                return t;
              case 4:
                return 'Portal';
              case 3:
                return 'Root';
              case 6:
                return 'Text';
              case 16:
                return G(t);
              case 8:
                return t === O ? 'StrictMode' : 'Mode';
              case 22:
                return 'Offscreen';
              case 12:
                return 'Profiler';
              case 21:
                return 'Scope';
              case 13:
                return 'Suspense';
              case 19:
                return 'SuspenseList';
              case 25:
                return 'TracingMarker';
              case 1:
              case 0:
              case 17:
              case 2:
              case 14:
              case 15:
                if ('function' == typeof t)
                  return t.displayName || t.name || null;
                if ('string' == typeof t) return t;
            }
            return null;
          }
          function q(e) {
            switch (r(e)) {
              case 'boolean':
              case 'number':
              case 'string':
              case 'undefined':
              case 'object':
                return e;
              default:
                return '';
            }
          }
          function X(e) {
            var t = e.type;
            return (
              (e = e.nodeName) &&
              'input' === e.toLowerCase() &&
              ('checkbox' === t || 'radio' === t)
            );
          }
          function Y(e) {
            e._valueTracker ||
              (e._valueTracker = (function (e) {
                var t = X(e) ? 'checked' : 'value',
                  n = Object.getOwnPropertyDescriptor(
                    e.constructor.prototype,
                    t
                  ),
                  r = '' + e[t];
                if (
                  !e.hasOwnProperty(t) &&
                  void 0 !== n &&
                  'function' == typeof n.get &&
                  'function' == typeof n.set
                ) {
                  var i = n.get,
                    o = n.set;
                  return (
                    Object.defineProperty(e, t, {
                      configurable: !0,
                      get: function () {
                        return i.call(this);
                      },
                      set: function (e) {
                        (r = '' + e), o.call(this, e);
                      },
                    }),
                    Object.defineProperty(e, t, { enumerable: n.enumerable }),
                    {
                      getValue: function () {
                        return r;
                      },
                      setValue: function (e) {
                        r = '' + e;
                      },
                      stopTracking: function () {
                        (e._valueTracker = null), delete e[t];
                      },
                    }
                  );
                }
              })(e));
          }
          function J(e) {
            if (!e) return !1;
            var t = e._valueTracker;
            if (!t) return !0;
            var n = t.getValue(),
              r = '';
            return (
              e && (r = X(e) ? (e.checked ? 'true' : 'false') : e.value),
              (e = r) !== n && (t.setValue(e), !0)
            );
          }
          function $(e) {
            if (
              void 0 ===
              (e = e || ('undefined' != typeof document ? document : void 0))
            )
              return null;
            try {
              return e.activeElement || e.body;
            } catch (t) {
              return e.body;
            }
          }
          function Q(e, t) {
            var n = t.checked;
            return B({}, t, {
              defaultChecked: void 0,
              defaultValue: void 0,
              value: void 0,
              checked: null != n ? n : e._wrapperState.initialChecked,
            });
          }
          function K(e, t) {
            var n = null == t.defaultValue ? '' : t.defaultValue,
              r = null != t.checked ? t.checked : t.defaultChecked;
            (n = q(null != t.value ? t.value : n)),
              (e._wrapperState = {
                initialChecked: r,
                initialValue: n,
                controlled:
                  'checkbox' === t.type || 'radio' === t.type
                    ? null != t.checked
                    : null != t.value,
              });
          }
          function Z(e, t) {
            null != (t = t.checked) && w(e, 'checked', t, !1);
          }
          function ee(e, t) {
            Z(e, t);
            var n = q(t.value),
              r = t.type;
            if (null != n)
              'number' === r
                ? ((0 === n && '' === e.value) || e.value != n) &&
                  (e.value = '' + n)
                : e.value !== '' + n && (e.value = '' + n);
            else if ('submit' === r || 'reset' === r)
              return void e.removeAttribute('value');
            t.hasOwnProperty('value')
              ? ne(e, t.type, n)
              : t.hasOwnProperty('defaultValue') &&
                ne(e, t.type, q(t.defaultValue)),
              null == t.checked &&
                null != t.defaultChecked &&
                (e.defaultChecked = !!t.defaultChecked);
          }
          function te(e, t, n) {
            if (t.hasOwnProperty('value') || t.hasOwnProperty('defaultValue')) {
              var r = t.type;
              if (
                !(
                  ('submit' !== r && 'reset' !== r) ||
                  (void 0 !== t.value && null !== t.value)
                )
              )
                return;
              (t = '' + e._wrapperState.initialValue),
                n || t === e.value || (e.value = t),
                (e.defaultValue = t);
            }
            '' !== (n = e.name) && (e.name = ''),
              (e.defaultChecked = !!e._wrapperState.initialChecked),
              '' !== n && (e.name = n);
          }
          function ne(e, t, n) {
            ('number' === t && $(e.ownerDocument) === e) ||
              (null == n
                ? (e.defaultValue = '' + e._wrapperState.initialValue)
                : e.defaultValue !== '' + n && (e.defaultValue = '' + n));
          }
          var re = Array.isArray;
          function ie(e, t, n, r) {
            if (((e = e.options), t)) {
              t = {};
              for (var i = 0; i < n.length; i++) t['$' + n[i]] = !0;
              for (n = 0; n < e.length; n++)
                (i = t.hasOwnProperty('$' + e[n].value)),
                  e[n].selected !== i && (e[n].selected = i),
                  i && r && (e[n].defaultSelected = !0);
            } else {
              for (n = '' + q(n), t = null, i = 0; i < e.length; i++) {
                if (e[i].value === n)
                  return (
                    (e[i].selected = !0),
                    void (r && (e[i].defaultSelected = !0))
                  );
                null !== t || e[i].disabled || (t = e[i]);
              }
              null !== t && (t.selected = !0);
            }
          }
          function oe(e, t) {
            if (null != t.dangerouslySetInnerHTML) throw Error(a(91));
            return B({}, t, {
              value: void 0,
              defaultValue: void 0,
              children: '' + e._wrapperState.initialValue,
            });
          }
          function ae(e, t) {
            var n = t.value;
            if (null == n) {
              if (((n = t.children), (t = t.defaultValue), null != n)) {
                if (null != t) throw Error(a(92));
                if (re(n)) {
                  if (1 < n.length) throw Error(a(93));
                  n = n[0];
                }
                t = n;
              }
              null == t && (t = ''), (n = t);
            }
            e._wrapperState = { initialValue: q(n) };
          }
          function se(e, t) {
            var n = q(t.value),
              r = q(t.defaultValue);
            null != n &&
              ((n = '' + n) !== e.value && (e.value = n),
              null == t.defaultValue &&
                e.defaultValue !== n &&
                (e.defaultValue = n)),
              null != r && (e.defaultValue = '' + r);
          }
          function le(e) {
            var t = e.textContent;
            t === e._wrapperState.initialValue &&
              '' !== t &&
              null !== t &&
              (e.value = t);
          }
          function ue(e) {
            switch (e) {
              case 'svg':
                return 'http://www.w3.org/2000/svg';
              case 'math':
                return 'http://www.w3.org/1998/Math/MathML';
              default:
                return 'http://www.w3.org/1999/xhtml';
            }
          }
          function ce(e, t) {
            return null == e || 'http://www.w3.org/1999/xhtml' === e
              ? ue(t)
              : 'http://www.w3.org/2000/svg' === e && 'foreignObject' === t
              ? 'http://www.w3.org/1999/xhtml'
              : e;
          }
          var fe,
            he,
            de =
              ((he = function (e, t) {
                if (
                  'http://www.w3.org/2000/svg' !== e.namespaceURI ||
                  'innerHTML' in e
                )
                  e.innerHTML = t;
                else {
                  for (
                    (fe = fe || document.createElement('div')).innerHTML =
                      '<svg>' + t.valueOf().toString() + '</svg>',
                      t = fe.firstChild;
                    e.firstChild;

                  )
                    e.removeChild(e.firstChild);
                  for (; t.firstChild; ) e.appendChild(t.firstChild);
                }
              }),
              'undefined' != typeof MSApp && MSApp.execUnsafeLocalFunction
                ? function (e, t, n, r) {
                    MSApp.execUnsafeLocalFunction(function () {
                      return he(e, t);
                    });
                  }
                : he);
          function ge(e, t) {
            if (t) {
              var n = e.firstChild;
              if (n && n === e.lastChild && 3 === n.nodeType)
                return void (n.nodeValue = t);
            }
            e.textContent = t;
          }
          var pe = {
              animationIterationCount: !0,
              aspectRatio: !0,
              borderImageOutset: !0,
              borderImageSlice: !0,
              borderImageWidth: !0,
              boxFlex: !0,
              boxFlexGroup: !0,
              boxOrdinalGroup: !0,
              columnCount: !0,
              columns: !0,
              flex: !0,
              flexGrow: !0,
              flexPositive: !0,
              flexShrink: !0,
              flexNegative: !0,
              flexOrder: !0,
              gridArea: !0,
              gridRow: !0,
              gridRowEnd: !0,
              gridRowSpan: !0,
              gridRowStart: !0,
              gridColumn: !0,
              gridColumnEnd: !0,
              gridColumnSpan: !0,
              gridColumnStart: !0,
              fontWeight: !0,
              lineClamp: !0,
              lineHeight: !0,
              opacity: !0,
              order: !0,
              orphans: !0,
              tabSize: !0,
              widows: !0,
              zIndex: !0,
              zoom: !0,
              fillOpacity: !0,
              floodOpacity: !0,
              stopOpacity: !0,
              strokeDasharray: !0,
              strokeDashoffset: !0,
              strokeMiterlimit: !0,
              strokeOpacity: !0,
              strokeWidth: !0,
            },
            ve = ['Webkit', 'ms', 'Moz', 'O'];
          function ye(e, t, n) {
            return null == t || 'boolean' == typeof t || '' === t
              ? ''
              : n ||
                'number' != typeof t ||
                0 === t ||
                (pe.hasOwnProperty(e) && pe[e])
              ? ('' + t).trim()
              : t + 'px';
          }
          function me(e, t) {
            for (var n in ((e = e.style), t))
              if (t.hasOwnProperty(n)) {
                var r = 0 === n.indexOf('--'),
                  i = ye(n, t[n], r);
                'float' === n && (n = 'cssFloat'),
                  r ? e.setProperty(n, i) : (e[n] = i);
              }
          }
          Object.keys(pe).forEach(function (e) {
            ve.forEach(function (t) {
              (t = t + e.charAt(0).toUpperCase() + e.substring(1)),
                (pe[t] = pe[e]);
            });
          });
          var be = B(
            { menuitem: !0 },
            {
              area: !0,
              base: !0,
              br: !0,
              col: !0,
              embed: !0,
              hr: !0,
              img: !0,
              input: !0,
              keygen: !0,
              link: !0,
              meta: !0,
              param: !0,
              source: !0,
              track: !0,
              wbr: !0,
            }
          );
          function ke(e, t) {
            if (t) {
              if (
                be[e] &&
                (null != t.children || null != t.dangerouslySetInnerHTML)
              )
                throw Error(a(137, e));
              if (null != t.dangerouslySetInnerHTML) {
                if (null != t.children) throw Error(a(60));
                if (
                  'object' !== r(t.dangerouslySetInnerHTML) ||
                  !('__html' in t.dangerouslySetInnerHTML)
                )
                  throw Error(a(61));
              }
              if (null != t.style && 'object' !== r(t.style))
                throw Error(a(62));
            }
          }
          function we(e, t) {
            if (-1 === e.indexOf('-')) return 'string' == typeof t.is;
            switch (e) {
              case 'annotation-xml':
              case 'color-profile':
              case 'font-face':
              case 'font-face-src':
              case 'font-face-uri':
              case 'font-face-format':
              case 'font-face-name':
              case 'missing-glyph':
                return !1;
              default:
                return !0;
            }
          }
          var xe = null;
          function Ce(e) {
            return (
              (e = e.target || e.srcElement || window)
                .correspondingUseElement && (e = e.correspondingUseElement),
              3 === e.nodeType ? e.parentNode : e
            );
          }
          var Se = null,
            Ee = null,
            Oe = null;
          function Pe(e) {
            if ((e = wi(e))) {
              if ('function' != typeof Se) throw Error(a(280));
              var t = e.stateNode;
              t && ((t = Ci(t)), Se(e.stateNode, e.type, t));
            }
          }
          function Ae(e) {
            Ee ? (Oe ? Oe.push(e) : (Oe = [e])) : (Ee = e);
          }
          function Me() {
            if (Ee) {
              var e = Ee,
                t = Oe;
              if (((Oe = Ee = null), Pe(e), t))
                for (e = 0; e < t.length; e++) Pe(t[e]);
            }
          }
          function Te(e, t) {
            return e(t);
          }
          function Ne() {}
          var je = !1;
          function Le(e, t, n) {
            if (je) return e(t, n);
            je = !0;
            try {
              return Te(e, t, n);
            } finally {
              (je = !1), (null !== Ee || null !== Oe) && (Ne(), Me());
            }
          }
          function Re(e, t) {
            var n = e.stateNode;
            if (null === n) return null;
            var i = Ci(n);
            if (null === i) return null;
            n = i[t];
            e: switch (t) {
              case 'onClick':
              case 'onClickCapture':
              case 'onDoubleClick':
              case 'onDoubleClickCapture':
              case 'onMouseDown':
              case 'onMouseDownCapture':
              case 'onMouseMove':
              case 'onMouseMoveCapture':
              case 'onMouseUp':
              case 'onMouseUpCapture':
              case 'onMouseEnter':
                (i = !i.disabled) ||
                  (i = !(
                    'button' === (e = e.type) ||
                    'input' === e ||
                    'select' === e ||
                    'textarea' === e
                  )),
                  (e = !i);
                break e;
              default:
                e = !1;
            }
            if (e) return null;
            if (n && 'function' != typeof n) throw Error(a(231, t, r(n)));
            return n;
          }
          var _e = !1;
          if (f)
            try {
              var Ie = {};
              Object.defineProperty(Ie, 'passive', {
                get: function () {
                  _e = !0;
                },
              }),
                window.addEventListener('test', Ie, Ie),
                window.removeEventListener('test', Ie, Ie);
            } catch (he) {
              _e = !1;
            }
          function De(e, t, n, r, i, o, a, s, l) {
            var u = Array.prototype.slice.call(arguments, 3);
            try {
              t.apply(n, u);
            } catch (e) {
              this.onError(e);
            }
          }
          var ze = !1,
            Be = null,
            Ve = !1,
            Fe = null,
            Ue = {
              onError: function (e) {
                (ze = !0), (Be = e);
              },
            };
          function He(e, t, n, r, i, o, a, s, l) {
            (ze = !1), (Be = null), De.apply(Ue, arguments);
          }
          function Ge(e) {
            var t = e,
              n = e;
            if (e.alternate) for (; t.return; ) t = t.return;
            else {
              e = t;
              do {
                0 != (4098 & (t = e).flags) && (n = t.return), (e = t.return);
              } while (e);
            }
            return 3 === t.tag ? n : null;
          }
          function We(e) {
            if (13 === e.tag) {
              var t = e.memoizedState;
              if (
                (null === t &&
                  null !== (e = e.alternate) &&
                  (t = e.memoizedState),
                null !== t)
              )
                return t.dehydrated;
            }
            return null;
          }
          function qe(e) {
            if (Ge(e) !== e) throw Error(a(188));
          }
          function Xe(e) {
            return null !==
              (e = (function (e) {
                var t = e.alternate;
                if (!t) {
                  if (null === (t = Ge(e))) throw Error(a(188));
                  return t !== e ? null : e;
                }
                for (var n = e, r = t; ; ) {
                  var i = n.return;
                  if (null === i) break;
                  var o = i.alternate;
                  if (null === o) {
                    if (null !== (r = i.return)) {
                      n = r;
                      continue;
                    }
                    break;
                  }
                  if (i.child === o.child) {
                    for (o = i.child; o; ) {
                      if (o === n) return qe(i), e;
                      if (o === r) return qe(i), t;
                      o = o.sibling;
                    }
                    throw Error(a(188));
                  }
                  if (n.return !== r.return) (n = i), (r = o);
                  else {
                    for (var s = !1, l = i.child; l; ) {
                      if (l === n) {
                        (s = !0), (n = i), (r = o);
                        break;
                      }
                      if (l === r) {
                        (s = !0), (r = i), (n = o);
                        break;
                      }
                      l = l.sibling;
                    }
                    if (!s) {
                      for (l = o.child; l; ) {
                        if (l === n) {
                          (s = !0), (n = o), (r = i);
                          break;
                        }
                        if (l === r) {
                          (s = !0), (r = o), (n = i);
                          break;
                        }
                        l = l.sibling;
                      }
                      if (!s) throw Error(a(189));
                    }
                  }
                  if (n.alternate !== r) throw Error(a(190));
                }
                if (3 !== n.tag) throw Error(a(188));
                return n.stateNode.current === n ? e : t;
              })(e))
              ? Ye(e)
              : null;
          }
          function Ye(e) {
            if (5 === e.tag || 6 === e.tag) return e;
            for (e = e.child; null !== e; ) {
              var t = Ye(e);
              if (null !== t) return t;
              e = e.sibling;
            }
            return null;
          }
          var Je = o.unstable_scheduleCallback,
            $e = o.unstable_cancelCallback,
            Qe = o.unstable_shouldYield,
            Ke = o.unstable_requestPaint,
            Ze = o.unstable_now,
            et = o.unstable_getCurrentPriorityLevel,
            tt = o.unstable_ImmediatePriority,
            nt = o.unstable_UserBlockingPriority,
            rt = o.unstable_NormalPriority,
            it = o.unstable_LowPriority,
            ot = o.unstable_IdlePriority,
            at = null,
            st = null;
          var lt = Math.clz32
              ? Math.clz32
              : function (e) {
                  return (
                    (e >>>= 0), 0 === e ? 32 : (31 - ((ut(e) / ct) | 0)) | 0
                  );
                },
            ut = Math.log,
            ct = Math.LN2;
          var ft = 64,
            ht = 4194304;
          function dt(e) {
            switch (e & -e) {
              case 1:
                return 1;
              case 2:
                return 2;
              case 4:
                return 4;
              case 8:
                return 8;
              case 16:
                return 16;
              case 32:
                return 32;
              case 64:
              case 128:
              case 256:
              case 512:
              case 1024:
              case 2048:
              case 4096:
              case 8192:
              case 16384:
              case 32768:
              case 65536:
              case 131072:
              case 262144:
              case 524288:
              case 1048576:
              case 2097152:
                return 4194240 & e;
              case 4194304:
              case 8388608:
              case 16777216:
              case 33554432:
              case 67108864:
                return 130023424 & e;
              case 134217728:
                return 134217728;
              case 268435456:
                return 268435456;
              case 536870912:
                return 536870912;
              case 1073741824:
                return 1073741824;
              default:
                return e;
            }
          }
          function gt(e, t) {
            var n = e.pendingLanes;
            if (0 === n) return 0;
            var r = 0,
              i = e.suspendedLanes,
              o = e.pingedLanes,
              a = 268435455 & n;
            if (0 !== a) {
              var s = a & ~i;
              0 !== s ? (r = dt(s)) : 0 !== (o &= a) && (r = dt(o));
            } else 0 !== (a = n & ~i) ? (r = dt(a)) : 0 !== o && (r = dt(o));
            if (0 === r) return 0;
            if (
              0 !== t &&
              t !== r &&
              0 == (t & i) &&
              ((i = r & -r) >= (o = t & -t) || (16 === i && 0 != (4194240 & o)))
            )
              return t;
            if ((0 != (4 & r) && (r |= 16 & n), 0 !== (t = e.entangledLanes)))
              for (e = e.entanglements, t &= r; 0 < t; )
                (i = 1 << (n = 31 - lt(t))), (r |= e[n]), (t &= ~i);
            return r;
          }
          function pt(e, t) {
            switch (e) {
              case 1:
              case 2:
              case 4:
                return t + 250;
              case 8:
              case 16:
              case 32:
              case 64:
              case 128:
              case 256:
              case 512:
              case 1024:
              case 2048:
              case 4096:
              case 8192:
              case 16384:
              case 32768:
              case 65536:
              case 131072:
              case 262144:
              case 524288:
              case 1048576:
              case 2097152:
                return t + 5e3;
              default:
                return -1;
            }
          }
          function vt(e) {
            return 0 !== (e = -1073741825 & e.pendingLanes)
              ? e
              : 1073741824 & e
              ? 1073741824
              : 0;
          }
          function yt() {
            var e = ft;
            return 0 == (4194240 & (ft <<= 1)) && (ft = 64), e;
          }
          function mt(e) {
            for (var t = [], n = 0; 31 > n; n++) t.push(e);
            return t;
          }
          function bt(e, t, n) {
            (e.pendingLanes |= t),
              536870912 !== t && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
              ((e = e.eventTimes)[(t = 31 - lt(t))] = n);
          }
          function kt(e, t) {
            var n = (e.entangledLanes |= t);
            for (e = e.entanglements; n; ) {
              var r = 31 - lt(n),
                i = 1 << r;
              (i & t) | (e[r] & t) && (e[r] |= t), (n &= ~i);
            }
          }
          var wt = 0;
          function xt(e) {
            return 1 < (e &= -e)
              ? 4 < e
                ? 0 != (268435455 & e)
                  ? 16
                  : 536870912
                : 4
              : 1;
          }
          var Ct,
            St,
            Et,
            Ot,
            Pt,
            At = !1,
            Mt = [],
            Tt = null,
            Nt = null,
            jt = null,
            Lt = new Map(),
            Rt = new Map(),
            _t = [],
            It =
              'mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit'.split(
                ' '
              );
          function Dt(e, t) {
            switch (e) {
              case 'focusin':
              case 'focusout':
                Tt = null;
                break;
              case 'dragenter':
              case 'dragleave':
                Nt = null;
                break;
              case 'mouseover':
              case 'mouseout':
                jt = null;
                break;
              case 'pointerover':
              case 'pointerout':
                Lt.delete(t.pointerId);
                break;
              case 'gotpointercapture':
              case 'lostpointercapture':
                Rt.delete(t.pointerId);
            }
          }
          function zt(e, t, n, r, i, o) {
            return null === e || e.nativeEvent !== o
              ? ((e = {
                  blockedOn: t,
                  domEventName: n,
                  eventSystemFlags: r,
                  nativeEvent: o,
                  targetContainers: [i],
                }),
                null !== t && null !== (t = wi(t)) && St(t),
                e)
              : ((e.eventSystemFlags |= r),
                (t = e.targetContainers),
                null !== i && -1 === t.indexOf(i) && t.push(i),
                e);
          }
          function Bt(e) {
            var t = ki(e.target);
            if (null !== t) {
              var n = Ge(t);
              if (null !== n)
                if (13 === (t = n.tag)) {
                  if (null !== (t = We(n)))
                    return (
                      (e.blockedOn = t),
                      void Pt(e.priority, function () {
                        Et(n);
                      })
                    );
                } else if (
                  3 === t &&
                  n.stateNode.current.memoizedState.isDehydrated
                )
                  return void (e.blockedOn =
                    3 === n.tag ? n.stateNode.containerInfo : null);
            }
            e.blockedOn = null;
          }
          function Vt(e) {
            if (null !== e.blockedOn) return !1;
            for (var t = e.targetContainers; 0 < t.length; ) {
              var n = Qt(
                e.domEventName,
                e.eventSystemFlags,
                t[0],
                e.nativeEvent
              );
              if (null !== n)
                return null !== (t = wi(n)) && St(t), (e.blockedOn = n), !1;
              var r = new (n = e.nativeEvent).constructor(n.type, n);
              (xe = r), n.target.dispatchEvent(r), (xe = null), t.shift();
            }
            return !0;
          }
          function Ft(e, t, n) {
            Vt(e) && n.delete(t);
          }
          function Ut() {
            (At = !1),
              null !== Tt && Vt(Tt) && (Tt = null),
              null !== Nt && Vt(Nt) && (Nt = null),
              null !== jt && Vt(jt) && (jt = null),
              Lt.forEach(Ft),
              Rt.forEach(Ft);
          }
          function Ht(e, t) {
            e.blockedOn === t &&
              ((e.blockedOn = null),
              At ||
                ((At = !0),
                o.unstable_scheduleCallback(o.unstable_NormalPriority, Ut)));
          }
          function Gt(e) {
            function t(t) {
              return Ht(t, e);
            }
            if (0 < Mt.length) {
              Ht(Mt[0], e);
              for (var n = 1; n < Mt.length; n++) {
                var r = Mt[n];
                r.blockedOn === e && (r.blockedOn = null);
              }
            }
            for (
              null !== Tt && Ht(Tt, e),
                null !== Nt && Ht(Nt, e),
                null !== jt && Ht(jt, e),
                Lt.forEach(t),
                Rt.forEach(t),
                n = 0;
              n < _t.length;
              n++
            )
              (r = _t[n]).blockedOn === e && (r.blockedOn = null);
            for (; 0 < _t.length && null === (n = _t[0]).blockedOn; )
              Bt(n), null === n.blockedOn && _t.shift();
          }
          var Wt = x.ReactCurrentBatchConfig,
            qt = !0;
          function Xt(e, t, n, r) {
            var i = wt,
              o = Wt.transition;
            Wt.transition = null;
            try {
              (wt = 1), Jt(e, t, n, r);
            } finally {
              (wt = i), (Wt.transition = o);
            }
          }
          function Yt(e, t, n, r) {
            var i = wt,
              o = Wt.transition;
            Wt.transition = null;
            try {
              (wt = 4), Jt(e, t, n, r);
            } finally {
              (wt = i), (Wt.transition = o);
            }
          }
          function Jt(e, t, n, r) {
            if (qt) {
              var i = Qt(e, t, n, r);
              if (null === i) qr(e, t, r, $t, n), Dt(e, r);
              else if (
                (function (e, t, n, r, i) {
                  switch (t) {
                    case 'focusin':
                      return (Tt = zt(Tt, e, t, n, r, i)), !0;
                    case 'dragenter':
                      return (Nt = zt(Nt, e, t, n, r, i)), !0;
                    case 'mouseover':
                      return (jt = zt(jt, e, t, n, r, i)), !0;
                    case 'pointerover':
                      var o = i.pointerId;
                      return (
                        Lt.set(o, zt(Lt.get(o) || null, e, t, n, r, i)), !0
                      );
                    case 'gotpointercapture':
                      return (
                        (o = i.pointerId),
                        Rt.set(o, zt(Rt.get(o) || null, e, t, n, r, i)),
                        !0
                      );
                  }
                  return !1;
                })(i, e, t, n, r)
              )
                r.stopPropagation();
              else if ((Dt(e, r), 4 & t && -1 < It.indexOf(e))) {
                for (; null !== i; ) {
                  var o = wi(i);
                  if (
                    (null !== o && Ct(o),
                    null === (o = Qt(e, t, n, r)) && qr(e, t, r, $t, n),
                    o === i)
                  )
                    break;
                  i = o;
                }
                null !== i && r.stopPropagation();
              } else qr(e, t, r, null, n);
            }
          }
          var $t = null;
          function Qt(e, t, n, r) {
            if ((($t = null), null !== (e = ki((e = Ce(r))))))
              if (null === (t = Ge(e))) e = null;
              else if (13 === (n = t.tag)) {
                if (null !== (e = We(t))) return e;
                e = null;
              } else if (3 === n) {
                if (t.stateNode.current.memoizedState.isDehydrated)
                  return 3 === t.tag ? t.stateNode.containerInfo : null;
                e = null;
              } else t !== e && (e = null);
            return ($t = e), null;
          }
          function Kt(e) {
            switch (e) {
              case 'cancel':
              case 'click':
              case 'close':
              case 'contextmenu':
              case 'copy':
              case 'cut':
              case 'auxclick':
              case 'dblclick':
              case 'dragend':
              case 'dragstart':
              case 'drop':
              case 'focusin':
              case 'focusout':
              case 'input':
              case 'invalid':
              case 'keydown':
              case 'keypress':
              case 'keyup':
              case 'mousedown':
              case 'mouseup':
              case 'paste':
              case 'pause':
              case 'play':
              case 'pointercancel':
              case 'pointerdown':
              case 'pointerup':
              case 'ratechange':
              case 'reset':
              case 'resize':
              case 'seeked':
              case 'submit':
              case 'touchcancel':
              case 'touchend':
              case 'touchstart':
              case 'volumechange':
              case 'change':
              case 'selectionchange':
              case 'textInput':
              case 'compositionstart':
              case 'compositionend':
              case 'compositionupdate':
              case 'beforeblur':
              case 'afterblur':
              case 'beforeinput':
              case 'blur':
              case 'fullscreenchange':
              case 'focus':
              case 'hashchange':
              case 'popstate':
              case 'select':
              case 'selectstart':
                return 1;
              case 'drag':
              case 'dragenter':
              case 'dragexit':
              case 'dragleave':
              case 'dragover':
              case 'mousemove':
              case 'mouseout':
              case 'mouseover':
              case 'pointermove':
              case 'pointerout':
              case 'pointerover':
              case 'scroll':
              case 'toggle':
              case 'touchmove':
              case 'wheel':
              case 'mouseenter':
              case 'mouseleave':
              case 'pointerenter':
              case 'pointerleave':
                return 4;
              case 'message':
                switch (et()) {
                  case tt:
                    return 1;
                  case nt:
                    return 4;
                  case rt:
                  case it:
                    return 16;
                  case ot:
                    return 536870912;
                  default:
                    return 16;
                }
              default:
                return 16;
            }
          }
          var Zt = null,
            en = null,
            tn = null;
          function nn() {
            if (tn) return tn;
            var e,
              t,
              n = en,
              r = n.length,
              i = 'value' in Zt ? Zt.value : Zt.textContent,
              o = i.length;
            for (e = 0; e < r && n[e] === i[e]; e++);
            var a = r - e;
            for (t = 1; t <= a && n[r - t] === i[o - t]; t++);
            return (tn = i.slice(e, 1 < t ? 1 - t : void 0));
          }
          function rn(e) {
            var t = e.keyCode;
            return (
              'charCode' in e
                ? 0 === (e = e.charCode) && 13 === t && (e = 13)
                : (e = t),
              10 === e && (e = 13),
              32 <= e || 13 === e ? e : 0
            );
          }
          function on() {
            return !0;
          }
          function an() {
            return !1;
          }
          function sn(e) {
            function t(t, n, r, i, o) {
              for (var a in ((this._reactName = t),
              (this._targetInst = r),
              (this.type = n),
              (this.nativeEvent = i),
              (this.target = o),
              (this.currentTarget = null),
              e))
                e.hasOwnProperty(a) &&
                  ((t = e[a]), (this[a] = t ? t(i) : i[a]));
              return (
                (this.isDefaultPrevented = (
                  null != i.defaultPrevented
                    ? i.defaultPrevented
                    : !1 === i.returnValue
                )
                  ? on
                  : an),
                (this.isPropagationStopped = an),
                this
              );
            }
            return (
              B(t.prototype, {
                preventDefault: function () {
                  this.defaultPrevented = !0;
                  var e = this.nativeEvent;
                  e &&
                    (e.preventDefault
                      ? e.preventDefault()
                      : 'unknown' != typeof e.returnValue &&
                        (e.returnValue = !1),
                    (this.isDefaultPrevented = on));
                },
                stopPropagation: function () {
                  var e = this.nativeEvent;
                  e &&
                    (e.stopPropagation
                      ? e.stopPropagation()
                      : 'unknown' != typeof e.cancelBubble &&
                        (e.cancelBubble = !0),
                    (this.isPropagationStopped = on));
                },
                persist: function () {},
                isPersistent: on,
              }),
              t
            );
          }
          var ln,
            un,
            cn,
            fn = {
              eventPhase: 0,
              bubbles: 0,
              cancelable: 0,
              timeStamp: function (e) {
                return e.timeStamp || Date.now();
              },
              defaultPrevented: 0,
              isTrusted: 0,
            },
            hn = sn(fn),
            dn = B({}, fn, { view: 0, detail: 0 }),
            gn = sn(dn),
            pn = B({}, dn, {
              screenX: 0,
              screenY: 0,
              clientX: 0,
              clientY: 0,
              pageX: 0,
              pageY: 0,
              ctrlKey: 0,
              shiftKey: 0,
              altKey: 0,
              metaKey: 0,
              getModifierState: Pn,
              button: 0,
              buttons: 0,
              relatedTarget: function (e) {
                return void 0 === e.relatedTarget
                  ? e.fromElement === e.srcElement
                    ? e.toElement
                    : e.fromElement
                  : e.relatedTarget;
              },
              movementX: function (e) {
                return 'movementX' in e
                  ? e.movementX
                  : (e !== cn &&
                      (cn && 'mousemove' === e.type
                        ? ((ln = e.screenX - cn.screenX),
                          (un = e.screenY - cn.screenY))
                        : (un = ln = 0),
                      (cn = e)),
                    ln);
              },
              movementY: function (e) {
                return 'movementY' in e ? e.movementY : un;
              },
            }),
            vn = sn(pn),
            yn = sn(B({}, pn, { dataTransfer: 0 })),
            mn = sn(B({}, dn, { relatedTarget: 0 })),
            bn = sn(
              B({}, fn, { animationName: 0, elapsedTime: 0, pseudoElement: 0 })
            ),
            kn = B({}, fn, {
              clipboardData: function (e) {
                return 'clipboardData' in e
                  ? e.clipboardData
                  : window.clipboardData;
              },
            }),
            wn = sn(kn),
            xn = sn(B({}, fn, { data: 0 })),
            Cn = {
              Esc: 'Escape',
              Spacebar: ' ',
              Left: 'ArrowLeft',
              Up: 'ArrowUp',
              Right: 'ArrowRight',
              Down: 'ArrowDown',
              Del: 'Delete',
              Win: 'OS',
              Menu: 'ContextMenu',
              Apps: 'ContextMenu',
              Scroll: 'ScrollLock',
              MozPrintableKey: 'Unidentified',
            },
            Sn = {
              8: 'Backspace',
              9: 'Tab',
              12: 'Clear',
              13: 'Enter',
              16: 'Shift',
              17: 'Control',
              18: 'Alt',
              19: 'Pause',
              20: 'CapsLock',
              27: 'Escape',
              32: ' ',
              33: 'PageUp',
              34: 'PageDown',
              35: 'End',
              36: 'Home',
              37: 'ArrowLeft',
              38: 'ArrowUp',
              39: 'ArrowRight',
              40: 'ArrowDown',
              45: 'Insert',
              46: 'Delete',
              112: 'F1',
              113: 'F2',
              114: 'F3',
              115: 'F4',
              116: 'F5',
              117: 'F6',
              118: 'F7',
              119: 'F8',
              120: 'F9',
              121: 'F10',
              122: 'F11',
              123: 'F12',
              144: 'NumLock',
              145: 'ScrollLock',
              224: 'Meta',
            },
            En = {
              Alt: 'altKey',
              Control: 'ctrlKey',
              Meta: 'metaKey',
              Shift: 'shiftKey',
            };
          function On(e) {
            var t = this.nativeEvent;
            return t.getModifierState
              ? t.getModifierState(e)
              : !!(e = En[e]) && !!t[e];
          }
          function Pn() {
            return On;
          }
          var An = B({}, dn, {
              key: function (e) {
                if (e.key) {
                  var t = Cn[e.key] || e.key;
                  if ('Unidentified' !== t) return t;
                }
                return 'keypress' === e.type
                  ? 13 === (e = rn(e))
                    ? 'Enter'
                    : String.fromCharCode(e)
                  : 'keydown' === e.type || 'keyup' === e.type
                  ? Sn[e.keyCode] || 'Unidentified'
                  : '';
              },
              code: 0,
              location: 0,
              ctrlKey: 0,
              shiftKey: 0,
              altKey: 0,
              metaKey: 0,
              repeat: 0,
              locale: 0,
              getModifierState: Pn,
              charCode: function (e) {
                return 'keypress' === e.type ? rn(e) : 0;
              },
              keyCode: function (e) {
                return 'keydown' === e.type || 'keyup' === e.type
                  ? e.keyCode
                  : 0;
              },
              which: function (e) {
                return 'keypress' === e.type
                  ? rn(e)
                  : 'keydown' === e.type || 'keyup' === e.type
                  ? e.keyCode
                  : 0;
              },
            }),
            Mn = sn(An),
            Tn = sn(
              B({}, pn, {
                pointerId: 0,
                width: 0,
                height: 0,
                pressure: 0,
                tangentialPressure: 0,
                tiltX: 0,
                tiltY: 0,
                twist: 0,
                pointerType: 0,
                isPrimary: 0,
              })
            ),
            Nn = sn(
              B({}, dn, {
                touches: 0,
                targetTouches: 0,
                changedTouches: 0,
                altKey: 0,
                metaKey: 0,
                ctrlKey: 0,
                shiftKey: 0,
                getModifierState: Pn,
              })
            ),
            jn = sn(
              B({}, fn, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 })
            ),
            Ln = B({}, pn, {
              deltaX: function (e) {
                return 'deltaX' in e
                  ? e.deltaX
                  : 'wheelDeltaX' in e
                  ? -e.wheelDeltaX
                  : 0;
              },
              deltaY: function (e) {
                return 'deltaY' in e
                  ? e.deltaY
                  : 'wheelDeltaY' in e
                  ? -e.wheelDeltaY
                  : 'wheelDelta' in e
                  ? -e.wheelDelta
                  : 0;
              },
              deltaZ: 0,
              deltaMode: 0,
            }),
            Rn = sn(Ln),
            _n = [9, 13, 27, 32],
            In = f && 'CompositionEvent' in window,
            Dn = null;
          f && 'documentMode' in document && (Dn = document.documentMode);
          var zn = f && 'TextEvent' in window && !Dn,
            Bn = f && (!In || (Dn && 8 < Dn && 11 >= Dn)),
            Vn = String.fromCharCode(32),
            Fn = !1;
          function Un(e, t) {
            switch (e) {
              case 'keyup':
                return -1 !== _n.indexOf(t.keyCode);
              case 'keydown':
                return 229 !== t.keyCode;
              case 'keypress':
              case 'mousedown':
              case 'focusout':
                return !0;
              default:
                return !1;
            }
          }
          function Hn(e) {
            return (
              (e = e.detail), 'object' === r(e) && 'data' in e ? e.data : null
            );
          }
          var Gn = !1;
          var Wn = {
            color: !0,
            date: !0,
            datetime: !0,
            'datetime-local': !0,
            email: !0,
            month: !0,
            number: !0,
            password: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0,
          };
          function qn(e) {
            var t = e && e.nodeName && e.nodeName.toLowerCase();
            return 'input' === t ? !!Wn[e.type] : 'textarea' === t;
          }
          function Xn(e, t, n, r) {
            Ae(r),
              0 < (t = Yr(t, 'onChange')).length &&
                ((n = new hn('onChange', 'change', null, n, r)),
                e.push({ event: n, listeners: t }));
          }
          var Yn = null,
            Jn = null;
          function $n(e) {
            Vr(e, 0);
          }
          function Qn(e) {
            if (J(xi(e))) return e;
          }
          function Kn(e, t) {
            if ('change' === e) return t;
          }
          var Zn = !1;
          if (f) {
            var er;
            if (f) {
              var tr = 'oninput' in document;
              if (!tr) {
                var nr = document.createElement('div');
                nr.setAttribute('oninput', 'return;'),
                  (tr = 'function' == typeof nr.oninput);
              }
              er = tr;
            } else er = !1;
            Zn = er && (!document.documentMode || 9 < document.documentMode);
          }
          function rr() {
            Yn && (Yn.detachEvent('onpropertychange', ir), (Jn = Yn = null));
          }
          function ir(e) {
            if ('value' === e.propertyName && Qn(Jn)) {
              var t = [];
              Xn(t, Jn, e, Ce(e)), Le($n, t);
            }
          }
          function or(e, t, n) {
            'focusin' === e
              ? (rr(), (Jn = n), (Yn = t).attachEvent('onpropertychange', ir))
              : 'focusout' === e && rr();
          }
          function ar(e) {
            if ('selectionchange' === e || 'keyup' === e || 'keydown' === e)
              return Qn(Jn);
          }
          function sr(e, t) {
            if ('click' === e) return Qn(t);
          }
          function lr(e, t) {
            if ('input' === e || 'change' === e) return Qn(t);
          }
          var ur =
            'function' == typeof Object.is
              ? Object.is
              : function (e, t) {
                  return (
                    (e === t && (0 !== e || 1 / e == 1 / t)) ||
                    (e != e && t != t)
                  );
                };
          function cr(e, t) {
            if (ur(e, t)) return !0;
            if (
              'object' !== r(e) ||
              null === e ||
              'object' !== r(t) ||
              null === t
            )
              return !1;
            var n = Object.keys(e),
              i = Object.keys(t);
            if (n.length !== i.length) return !1;
            for (i = 0; i < n.length; i++) {
              var o = n[i];
              if (!h.call(t, o) || !ur(e[o], t[o])) return !1;
            }
            return !0;
          }
          function fr(e) {
            for (; e && e.firstChild; ) e = e.firstChild;
            return e;
          }
          function hr(e, t) {
            var n,
              r = fr(e);
            for (e = 0; r; ) {
              if (3 === r.nodeType) {
                if (((n = e + r.textContent.length), e <= t && n >= t))
                  return { node: r, offset: t - e };
                e = n;
              }
              e: {
                for (; r; ) {
                  if (r.nextSibling) {
                    r = r.nextSibling;
                    break e;
                  }
                  r = r.parentNode;
                }
                r = void 0;
              }
              r = fr(r);
            }
          }
          function dr(e, t) {
            return (
              !(!e || !t) &&
              (e === t ||
                ((!e || 3 !== e.nodeType) &&
                  (t && 3 === t.nodeType
                    ? dr(e, t.parentNode)
                    : 'contains' in e
                    ? e.contains(t)
                    : !!e.compareDocumentPosition &&
                      !!(16 & e.compareDocumentPosition(t)))))
            );
          }
          function gr() {
            for (var e = window, t = $(); t instanceof e.HTMLIFrameElement; ) {
              try {
                var n = 'string' == typeof t.contentWindow.location.href;
              } catch (e) {
                n = !1;
              }
              if (!n) break;
              t = $((e = t.contentWindow).document);
            }
            return t;
          }
          function pr(e) {
            var t = e && e.nodeName && e.nodeName.toLowerCase();
            return (
              t &&
              (('input' === t &&
                ('text' === e.type ||
                  'search' === e.type ||
                  'tel' === e.type ||
                  'url' === e.type ||
                  'password' === e.type)) ||
                'textarea' === t ||
                'true' === e.contentEditable)
            );
          }
          function vr(e) {
            var t = gr(),
              n = e.focusedElem,
              r = e.selectionRange;
            if (
              t !== n &&
              n &&
              n.ownerDocument &&
              dr(n.ownerDocument.documentElement, n)
            ) {
              if (null !== r && pr(n))
                if (
                  ((t = r.start),
                  void 0 === (e = r.end) && (e = t),
                  'selectionStart' in n)
                )
                  (n.selectionStart = t),
                    (n.selectionEnd = Math.min(e, n.value.length));
                else if (
                  (e =
                    ((t = n.ownerDocument || document) && t.defaultView) ||
                    window).getSelection
                ) {
                  e = e.getSelection();
                  var i = n.textContent.length,
                    o = Math.min(r.start, i);
                  (r = void 0 === r.end ? o : Math.min(r.end, i)),
                    !e.extend && o > r && ((i = r), (r = o), (o = i)),
                    (i = hr(n, o));
                  var a = hr(n, r);
                  i &&
                    a &&
                    (1 !== e.rangeCount ||
                      e.anchorNode !== i.node ||
                      e.anchorOffset !== i.offset ||
                      e.focusNode !== a.node ||
                      e.focusOffset !== a.offset) &&
                    ((t = t.createRange()).setStart(i.node, i.offset),
                    e.removeAllRanges(),
                    o > r
                      ? (e.addRange(t), e.extend(a.node, a.offset))
                      : (t.setEnd(a.node, a.offset), e.addRange(t)));
                }
              for (t = [], e = n; (e = e.parentNode); )
                1 === e.nodeType &&
                  t.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
              for (
                'function' == typeof n.focus && n.focus(), n = 0;
                n < t.length;
                n++
              )
                ((e = t[n]).element.scrollLeft = e.left),
                  (e.element.scrollTop = e.top);
            }
          }
          var yr =
              f && 'documentMode' in document && 11 >= document.documentMode,
            mr = null,
            br = null,
            kr = null,
            wr = !1;
          function xr(e, t, n) {
            var r =
              n.window === n
                ? n.document
                : 9 === n.nodeType
                ? n
                : n.ownerDocument;
            wr ||
              null == mr ||
              mr !== $(r) ||
              ('selectionStart' in (r = mr) && pr(r)
                ? (r = { start: r.selectionStart, end: r.selectionEnd })
                : (r = {
                    anchorNode: (r = (
                      (r.ownerDocument && r.ownerDocument.defaultView) ||
                      window
                    ).getSelection()).anchorNode,
                    anchorOffset: r.anchorOffset,
                    focusNode: r.focusNode,
                    focusOffset: r.focusOffset,
                  }),
              (kr && cr(kr, r)) ||
                ((kr = r),
                0 < (r = Yr(br, 'onSelect')).length &&
                  ((t = new hn('onSelect', 'select', null, t, n)),
                  e.push({ event: t, listeners: r }),
                  (t.target = mr))));
          }
          function Cr(e, t) {
            var n = {};
            return (
              (n[e.toLowerCase()] = t.toLowerCase()),
              (n['Webkit' + e] = 'webkit' + t),
              (n['Moz' + e] = 'moz' + t),
              n
            );
          }
          var Sr = {
              animationend: Cr('Animation', 'AnimationEnd'),
              animationiteration: Cr('Animation', 'AnimationIteration'),
              animationstart: Cr('Animation', 'AnimationStart'),
              transitionend: Cr('Transition', 'TransitionEnd'),
            },
            Er = {},
            Or = {};
          function Pr(e) {
            if (Er[e]) return Er[e];
            if (!Sr[e]) return e;
            var t,
              n = Sr[e];
            for (t in n)
              if (n.hasOwnProperty(t) && t in Or) return (Er[e] = n[t]);
            return e;
          }
          f &&
            ((Or = document.createElement('div').style),
            'AnimationEvent' in window ||
              (delete Sr.animationend.animation,
              delete Sr.animationiteration.animation,
              delete Sr.animationstart.animation),
            'TransitionEvent' in window || delete Sr.transitionend.transition);
          var Ar = Pr('animationend'),
            Mr = Pr('animationiteration'),
            Tr = Pr('animationstart'),
            Nr = Pr('transitionend'),
            jr = new Map(),
            Lr =
              'abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel'.split(
                ' '
              );
          function Rr(e, t) {
            jr.set(e, t), u(t, [e]);
          }
          for (var _r = 0; _r < Lr.length; _r++) {
            var Ir = Lr[_r];
            Rr(Ir.toLowerCase(), 'on' + (Ir[0].toUpperCase() + Ir.slice(1)));
          }
          Rr(Ar, 'onAnimationEnd'),
            Rr(Mr, 'onAnimationIteration'),
            Rr(Tr, 'onAnimationStart'),
            Rr('dblclick', 'onDoubleClick'),
            Rr('focusin', 'onFocus'),
            Rr('focusout', 'onBlur'),
            Rr(Nr, 'onTransitionEnd'),
            c('onMouseEnter', ['mouseout', 'mouseover']),
            c('onMouseLeave', ['mouseout', 'mouseover']),
            c('onPointerEnter', ['pointerout', 'pointerover']),
            c('onPointerLeave', ['pointerout', 'pointerover']),
            u(
              'onChange',
              'change click focusin focusout input keydown keyup selectionchange'.split(
                ' '
              )
            ),
            u(
              'onSelect',
              'focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange'.split(
                ' '
              )
            ),
            u('onBeforeInput', [
              'compositionend',
              'keypress',
              'textInput',
              'paste',
            ]),
            u(
              'onCompositionEnd',
              'compositionend focusout keydown keypress keyup mousedown'.split(
                ' '
              )
            ),
            u(
              'onCompositionStart',
              'compositionstart focusout keydown keypress keyup mousedown'.split(
                ' '
              )
            ),
            u(
              'onCompositionUpdate',
              'compositionupdate focusout keydown keypress keyup mousedown'.split(
                ' '
              )
            );
          var Dr =
              'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting'.split(
                ' '
              ),
            zr = new Set(
              'cancel close invalid load scroll toggle'.split(' ').concat(Dr)
            );
          function Br(e, t, n) {
            var r = e.type || 'unknown-event';
            (e.currentTarget = n),
              (function (e, t, n, r, i, o, s, l, u) {
                if ((He.apply(this, arguments), ze)) {
                  if (!ze) throw Error(a(198));
                  var c = Be;
                  (ze = !1), (Be = null), Ve || ((Ve = !0), (Fe = c));
                }
              })(r, t, void 0, e),
              (e.currentTarget = null);
          }
          function Vr(e, t) {
            t = 0 != (4 & t);
            for (var n = 0; n < e.length; n++) {
              var r = e[n],
                i = r.event;
              r = r.listeners;
              e: {
                var o = void 0;
                if (t)
                  for (var a = r.length - 1; 0 <= a; a--) {
                    var s = r[a],
                      l = s.instance,
                      u = s.currentTarget;
                    if (((s = s.listener), l !== o && i.isPropagationStopped()))
                      break e;
                    Br(i, s, u), (o = l);
                  }
                else
                  for (a = 0; a < r.length; a++) {
                    if (
                      ((l = (s = r[a]).instance),
                      (u = s.currentTarget),
                      (s = s.listener),
                      l !== o && i.isPropagationStopped())
                    )
                      break e;
                    Br(i, s, u), (o = l);
                  }
              }
            }
            if (Ve) throw ((e = Fe), (Ve = !1), (Fe = null), e);
          }
          function Fr(e, t) {
            var n = t[yi];
            void 0 === n && (n = t[yi] = new Set());
            var r = e + '__bubble';
            n.has(r) || (Wr(t, e, 2, !1), n.add(r));
          }
          function Ur(e, t, n) {
            var r = 0;
            t && (r |= 4), Wr(n, e, r, t);
          }
          var Hr = '_reactListening' + Math.random().toString(36).slice(2);
          function Gr(e) {
            if (!e[Hr]) {
              (e[Hr] = !0),
                s.forEach(function (t) {
                  'selectionchange' !== t &&
                    (zr.has(t) || Ur(t, !1, e), Ur(t, !0, e));
                });
              var t = 9 === e.nodeType ? e : e.ownerDocument;
              null === t ||
                t[Hr] ||
                ((t[Hr] = !0), Ur('selectionchange', !1, t));
            }
          }
          function Wr(e, t, n, r) {
            switch (Kt(t)) {
              case 1:
                var i = Xt;
                break;
              case 4:
                i = Yt;
                break;
              default:
                i = Jt;
            }
            (n = i.bind(null, t, n, e)),
              (i = void 0),
              !_e ||
                ('touchstart' !== t && 'touchmove' !== t && 'wheel' !== t) ||
                (i = !0),
              r
                ? void 0 !== i
                  ? e.addEventListener(t, n, { capture: !0, passive: i })
                  : e.addEventListener(t, n, !0)
                : void 0 !== i
                ? e.addEventListener(t, n, { passive: i })
                : e.addEventListener(t, n, !1);
          }
          function qr(e, t, n, r, i) {
            var o = r;
            if (0 == (1 & t) && 0 == (2 & t) && null !== r)
              e: for (;;) {
                if (null === r) return;
                var a = r.tag;
                if (3 === a || 4 === a) {
                  var s = r.stateNode.containerInfo;
                  if (s === i || (8 === s.nodeType && s.parentNode === i))
                    break;
                  if (4 === a)
                    for (a = r.return; null !== a; ) {
                      var l = a.tag;
                      if (
                        (3 === l || 4 === l) &&
                        ((l = a.stateNode.containerInfo) === i ||
                          (8 === l.nodeType && l.parentNode === i))
                      )
                        return;
                      a = a.return;
                    }
                  for (; null !== s; ) {
                    if (null === (a = ki(s))) return;
                    if (5 === (l = a.tag) || 6 === l) {
                      r = o = a;
                      continue e;
                    }
                    s = s.parentNode;
                  }
                }
                r = r.return;
              }
            Le(function () {
              var r = o,
                i = Ce(n),
                a = [];
              e: {
                var s = jr.get(e);
                if (void 0 !== s) {
                  var l = hn,
                    u = e;
                  switch (e) {
                    case 'keypress':
                      if (0 === rn(n)) break e;
                    case 'keydown':
                    case 'keyup':
                      l = Mn;
                      break;
                    case 'focusin':
                      (u = 'focus'), (l = mn);
                      break;
                    case 'focusout':
                      (u = 'blur'), (l = mn);
                      break;
                    case 'beforeblur':
                    case 'afterblur':
                      l = mn;
                      break;
                    case 'click':
                      if (2 === n.button) break e;
                    case 'auxclick':
                    case 'dblclick':
                    case 'mousedown':
                    case 'mousemove':
                    case 'mouseup':
                    case 'mouseout':
                    case 'mouseover':
                    case 'contextmenu':
                      l = vn;
                      break;
                    case 'drag':
                    case 'dragend':
                    case 'dragenter':
                    case 'dragexit':
                    case 'dragleave':
                    case 'dragover':
                    case 'dragstart':
                    case 'drop':
                      l = yn;
                      break;
                    case 'touchcancel':
                    case 'touchend':
                    case 'touchmove':
                    case 'touchstart':
                      l = Nn;
                      break;
                    case Ar:
                    case Mr:
                    case Tr:
                      l = bn;
                      break;
                    case Nr:
                      l = jn;
                      break;
                    case 'scroll':
                      l = gn;
                      break;
                    case 'wheel':
                      l = Rn;
                      break;
                    case 'copy':
                    case 'cut':
                    case 'paste':
                      l = wn;
                      break;
                    case 'gotpointercapture':
                    case 'lostpointercapture':
                    case 'pointercancel':
                    case 'pointerdown':
                    case 'pointermove':
                    case 'pointerout':
                    case 'pointerover':
                    case 'pointerup':
                      l = Tn;
                  }
                  var c = 0 != (4 & t),
                    f = !c && 'scroll' === e,
                    h = c ? (null !== s ? s + 'Capture' : null) : s;
                  c = [];
                  for (var d, g = r; null !== g; ) {
                    var p = (d = g).stateNode;
                    if (
                      (5 === d.tag &&
                        null !== p &&
                        ((d = p),
                        null !== h &&
                          null != (p = Re(g, h)) &&
                          c.push(Xr(g, p, d))),
                      f)
                    )
                      break;
                    g = g.return;
                  }
                  0 < c.length &&
                    ((s = new l(s, u, null, n, i)),
                    a.push({ event: s, listeners: c }));
                }
              }
              if (0 == (7 & t)) {
                if (
                  ((l = 'mouseout' === e || 'pointerout' === e),
                  (!(s = 'mouseover' === e || 'pointerover' === e) ||
                    n === xe ||
                    !(u = n.relatedTarget || n.fromElement) ||
                    (!ki(u) && !u[vi])) &&
                    (l || s) &&
                    ((s =
                      i.window === i
                        ? i
                        : (s = i.ownerDocument)
                        ? s.defaultView || s.parentWindow
                        : window),
                    l
                      ? ((l = r),
                        null !==
                          (u = (u = n.relatedTarget || n.toElement)
                            ? ki(u)
                            : null) &&
                          (u !== (f = Ge(u)) || (5 !== u.tag && 6 !== u.tag)) &&
                          (u = null))
                      : ((l = null), (u = r)),
                    l !== u))
                ) {
                  if (
                    ((c = vn),
                    (p = 'onMouseLeave'),
                    (h = 'onMouseEnter'),
                    (g = 'mouse'),
                    ('pointerout' !== e && 'pointerover' !== e) ||
                      ((c = Tn),
                      (p = 'onPointerLeave'),
                      (h = 'onPointerEnter'),
                      (g = 'pointer')),
                    (f = null == l ? s : xi(l)),
                    (d = null == u ? s : xi(u)),
                    ((s = new c(p, g + 'leave', l, n, i)).target = f),
                    (s.relatedTarget = d),
                    (p = null),
                    ki(i) === r &&
                      (((c = new c(h, g + 'enter', u, n, i)).target = d),
                      (c.relatedTarget = f),
                      (p = c)),
                    (f = p),
                    l && u)
                  )
                    e: {
                      for (h = u, g = 0, d = c = l; d; d = Jr(d)) g++;
                      for (d = 0, p = h; p; p = Jr(p)) d++;
                      for (; 0 < g - d; ) (c = Jr(c)), g--;
                      for (; 0 < d - g; ) (h = Jr(h)), d--;
                      for (; g--; ) {
                        if (c === h || (null !== h && c === h.alternate))
                          break e;
                        (c = Jr(c)), (h = Jr(h));
                      }
                      c = null;
                    }
                  else c = null;
                  null !== l && $r(a, s, l, c, !1),
                    null !== u && null !== f && $r(a, f, u, c, !0);
                }
                if (
                  'select' ===
                    (l =
                      (s = r ? xi(r) : window).nodeName &&
                      s.nodeName.toLowerCase()) ||
                  ('input' === l && 'file' === s.type)
                )
                  var v = Kn;
                else if (qn(s))
                  if (Zn) v = lr;
                  else {
                    v = ar;
                    var y = or;
                  }
                else
                  (l = s.nodeName) &&
                    'input' === l.toLowerCase() &&
                    ('checkbox' === s.type || 'radio' === s.type) &&
                    (v = sr);
                switch (
                  (v && (v = v(e, r))
                    ? Xn(a, v, n, i)
                    : (y && y(e, s, r),
                      'focusout' === e &&
                        (y = s._wrapperState) &&
                        y.controlled &&
                        'number' === s.type &&
                        ne(s, 'number', s.value)),
                  (y = r ? xi(r) : window),
                  e)
                ) {
                  case 'focusin':
                    (qn(y) || 'true' === y.contentEditable) &&
                      ((mr = y), (br = r), (kr = null));
                    break;
                  case 'focusout':
                    kr = br = mr = null;
                    break;
                  case 'mousedown':
                    wr = !0;
                    break;
                  case 'contextmenu':
                  case 'mouseup':
                  case 'dragend':
                    (wr = !1), xr(a, n, i);
                    break;
                  case 'selectionchange':
                    if (yr) break;
                  case 'keydown':
                  case 'keyup':
                    xr(a, n, i);
                }
                var m;
                if (In)
                  e: {
                    switch (e) {
                      case 'compositionstart':
                        var b = 'onCompositionStart';
                        break e;
                      case 'compositionend':
                        b = 'onCompositionEnd';
                        break e;
                      case 'compositionupdate':
                        b = 'onCompositionUpdate';
                        break e;
                    }
                    b = void 0;
                  }
                else
                  Gn
                    ? Un(e, n) && (b = 'onCompositionEnd')
                    : 'keydown' === e &&
                      229 === n.keyCode &&
                      (b = 'onCompositionStart');
                b &&
                  (Bn &&
                    'ko' !== n.locale &&
                    (Gn || 'onCompositionStart' !== b
                      ? 'onCompositionEnd' === b && Gn && (m = nn())
                      : ((en = 'value' in (Zt = i) ? Zt.value : Zt.textContent),
                        (Gn = !0))),
                  0 < (y = Yr(r, b)).length &&
                    ((b = new xn(b, e, null, n, i)),
                    a.push({ event: b, listeners: y }),
                    m ? (b.data = m) : null !== (m = Hn(n)) && (b.data = m))),
                  (m = zn
                    ? (function (e, t) {
                        switch (e) {
                          case 'compositionend':
                            return Hn(t);
                          case 'keypress':
                            return 32 !== t.which ? null : ((Fn = !0), Vn);
                          case 'textInput':
                            return (e = t.data) === Vn && Fn ? null : e;
                          default:
                            return null;
                        }
                      })(e, n)
                    : (function (e, t) {
                        if (Gn)
                          return 'compositionend' === e || (!In && Un(e, t))
                            ? ((e = nn()), (tn = en = Zt = null), (Gn = !1), e)
                            : null;
                        switch (e) {
                          case 'paste':
                          default:
                            return null;
                          case 'keypress':
                            if (
                              !(t.ctrlKey || t.altKey || t.metaKey) ||
                              (t.ctrlKey && t.altKey)
                            ) {
                              if (t.char && 1 < t.char.length) return t.char;
                              if (t.which) return String.fromCharCode(t.which);
                            }
                            return null;
                          case 'compositionend':
                            return Bn && 'ko' !== t.locale ? null : t.data;
                        }
                      })(e, n)) &&
                    0 < (r = Yr(r, 'onBeforeInput')).length &&
                    ((i = new xn('onBeforeInput', 'beforeinput', null, n, i)),
                    a.push({ event: i, listeners: r }),
                    (i.data = m));
              }
              Vr(a, t);
            });
          }
          function Xr(e, t, n) {
            return { instance: e, listener: t, currentTarget: n };
          }
          function Yr(e, t) {
            for (var n = t + 'Capture', r = []; null !== e; ) {
              var i = e,
                o = i.stateNode;
              5 === i.tag &&
                null !== o &&
                ((i = o),
                null != (o = Re(e, n)) && r.unshift(Xr(e, o, i)),
                null != (o = Re(e, t)) && r.push(Xr(e, o, i))),
                (e = e.return);
            }
            return r;
          }
          function Jr(e) {
            if (null === e) return null;
            do {
              e = e.return;
            } while (e && 5 !== e.tag);
            return e || null;
          }
          function $r(e, t, n, r, i) {
            for (var o = t._reactName, a = []; null !== n && n !== r; ) {
              var s = n,
                l = s.alternate,
                u = s.stateNode;
              if (null !== l && l === r) break;
              5 === s.tag &&
                null !== u &&
                ((s = u),
                i
                  ? null != (l = Re(n, o)) && a.unshift(Xr(n, l, s))
                  : i || (null != (l = Re(n, o)) && a.push(Xr(n, l, s)))),
                (n = n.return);
            }
            0 !== a.length && e.push({ event: t, listeners: a });
          }
          var Qr = /\r\n?/g,
            Kr = /\u0000|\uFFFD/g;
          function Zr(e) {
            return ('string' == typeof e ? e : '' + e)
              .replace(Qr, '\n')
              .replace(Kr, '');
          }
          function ei(e, t, n) {
            if (((t = Zr(t)), Zr(e) !== t && n)) throw Error(a(425));
          }
          function ti() {}
          var ni = null,
            ri = null;
          function ii(e, t) {
            return (
              'textarea' === e ||
              'noscript' === e ||
              'string' == typeof t.children ||
              'number' == typeof t.children ||
              ('object' === r(t.dangerouslySetInnerHTML) &&
                null !== t.dangerouslySetInnerHTML &&
                null != t.dangerouslySetInnerHTML.__html)
            );
          }
          var oi = 'function' == typeof setTimeout ? setTimeout : void 0,
            ai = 'function' == typeof clearTimeout ? clearTimeout : void 0,
            si = 'function' == typeof Promise ? Promise : void 0,
            li =
              'function' == typeof queueMicrotask
                ? queueMicrotask
                : void 0 !== si
                ? function (e) {
                    return si.resolve(null).then(e).catch(ui);
                  }
                : oi;
          function ui(e) {
            setTimeout(function () {
              throw e;
            });
          }
          function ci(e, t) {
            var n = t,
              r = 0;
            do {
              var i = n.nextSibling;
              if ((e.removeChild(n), i && 8 === i.nodeType))
                if ('/$' === (n = i.data)) {
                  if (0 === r) return e.removeChild(i), void Gt(t);
                  r--;
                } else ('$' !== n && '$?' !== n && '$!' !== n) || r++;
              n = i;
            } while (n);
            Gt(t);
          }
          function fi(e) {
            for (; null != e; e = e.nextSibling) {
              var t = e.nodeType;
              if (1 === t || 3 === t) break;
              if (8 === t) {
                if ('$' === (t = e.data) || '$!' === t || '$?' === t) break;
                if ('/$' === t) return null;
              }
            }
            return e;
          }
          function hi(e) {
            e = e.previousSibling;
            for (var t = 0; e; ) {
              if (8 === e.nodeType) {
                var n = e.data;
                if ('$' === n || '$!' === n || '$?' === n) {
                  if (0 === t) return e;
                  t--;
                } else '/$' === n && t++;
              }
              e = e.previousSibling;
            }
            return null;
          }
          var di = Math.random().toString(36).slice(2),
            gi = '__reactFiber$' + di,
            pi = '__reactProps$' + di,
            vi = '__reactContainer$' + di,
            yi = '__reactEvents$' + di,
            mi = '__reactListeners$' + di,
            bi = '__reactHandles$' + di;
          function ki(e) {
            var t = e[gi];
            if (t) return t;
            for (var n = e.parentNode; n; ) {
              if ((t = n[vi] || n[gi])) {
                if (
                  ((n = t.alternate),
                  null !== t.child || (null !== n && null !== n.child))
                )
                  for (e = hi(e); null !== e; ) {
                    if ((n = e[gi])) return n;
                    e = hi(e);
                  }
                return t;
              }
              n = (e = n).parentNode;
            }
            return null;
          }
          function wi(e) {
            return !(e = e[gi] || e[vi]) ||
              (5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag)
              ? null
              : e;
          }
          function xi(e) {
            if (5 === e.tag || 6 === e.tag) return e.stateNode;
            throw Error(a(33));
          }
          function Ci(e) {
            return e[pi] || null;
          }
          var Si = [],
            Ei = -1;
          function Oi(e) {
            return { current: e };
          }
          function Pi(e) {
            0 > Ei || ((e.current = Si[Ei]), (Si[Ei] = null), Ei--);
          }
          function Ai(e, t) {
            Ei++, (Si[Ei] = e.current), (e.current = t);
          }
          var Mi = {},
            Ti = Oi(Mi),
            Ni = Oi(!1),
            ji = Mi;
          function Li(e, t) {
            var n = e.type.contextTypes;
            if (!n) return Mi;
            var r = e.stateNode;
            if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
              return r.__reactInternalMemoizedMaskedChildContext;
            var i,
              o = {};
            for (i in n) o[i] = t[i];
            return (
              r &&
                (((e =
                  e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t),
                (e.__reactInternalMemoizedMaskedChildContext = o)),
              o
            );
          }
          function Ri(e) {
            return null != (e = e.childContextTypes);
          }
          function _i() {
            Pi(Ni), Pi(Ti);
          }
          function Ii(e, t, n) {
            if (Ti.current !== Mi) throw Error(a(168));
            Ai(Ti, t), Ai(Ni, n);
          }
          function Di(e, t, n) {
            var r = e.stateNode;
            if (
              ((t = t.childContextTypes),
              'function' != typeof r.getChildContext)
            )
              return n;
            for (var i in (r = r.getChildContext()))
              if (!(i in t)) throw Error(a(108, W(e) || 'Unknown', i));
            return B({}, n, r);
          }
          function zi(e) {
            return (
              (e =
                ((e = e.stateNode) &&
                  e.__reactInternalMemoizedMergedChildContext) ||
                Mi),
              (ji = Ti.current),
              Ai(Ti, e),
              Ai(Ni, Ni.current),
              !0
            );
          }
          function Bi(e, t, n) {
            var r = e.stateNode;
            if (!r) throw Error(a(169));
            n
              ? ((e = Di(e, t, ji)),
                (r.__reactInternalMemoizedMergedChildContext = e),
                Pi(Ni),
                Pi(Ti),
                Ai(Ti, e))
              : Pi(Ni),
              Ai(Ni, n);
          }
          var Vi = null,
            Fi = !1,
            Ui = !1;
          function Hi(e) {
            null === Vi ? (Vi = [e]) : Vi.push(e);
          }
          function Gi() {
            if (!Ui && null !== Vi) {
              Ui = !0;
              var e = 0,
                t = wt;
              try {
                var n = Vi;
                for (wt = 1; e < n.length; e++) {
                  var r = n[e];
                  do {
                    r = r(!0);
                  } while (null !== r);
                }
                (Vi = null), (Fi = !1);
              } catch (t) {
                throw (null !== Vi && (Vi = Vi.slice(e + 1)), Je(tt, Gi), t);
              } finally {
                (wt = t), (Ui = !1);
              }
            }
            return null;
          }
          var Wi = [],
            qi = 0,
            Xi = null,
            Yi = 0,
            Ji = [],
            $i = 0,
            Qi = null,
            Ki = 1,
            Zi = '';
          function eo(e, t) {
            (Wi[qi++] = Yi), (Wi[qi++] = Xi), (Xi = e), (Yi = t);
          }
          function to(e, t, n) {
            (Ji[$i++] = Ki), (Ji[$i++] = Zi), (Ji[$i++] = Qi), (Qi = e);
            var r = Ki;
            e = Zi;
            var i = 32 - lt(r) - 1;
            (r &= ~(1 << i)), (n += 1);
            var o = 32 - lt(t) + i;
            if (30 < o) {
              var a = i - (i % 5);
              (o = (r & ((1 << a) - 1)).toString(32)),
                (r >>= a),
                (i -= a),
                (Ki = (1 << (32 - lt(t) + i)) | (n << i) | r),
                (Zi = o + e);
            } else (Ki = (1 << o) | (n << i) | r), (Zi = e);
          }
          function no(e) {
            null !== e.return && (eo(e, 1), to(e, 1, 0));
          }
          function ro(e) {
            for (; e === Xi; )
              (Xi = Wi[--qi]),
                (Wi[qi] = null),
                (Yi = Wi[--qi]),
                (Wi[qi] = null);
            for (; e === Qi; )
              (Qi = Ji[--$i]),
                (Ji[$i] = null),
                (Zi = Ji[--$i]),
                (Ji[$i] = null),
                (Ki = Ji[--$i]),
                (Ji[$i] = null);
          }
          var io = null,
            oo = null,
            ao = !1,
            so = null;
          function lo(e, t) {
            var n = Lu(5, null, null, 0);
            (n.elementType = 'DELETED'),
              (n.stateNode = t),
              (n.return = e),
              null === (t = e.deletions)
                ? ((e.deletions = [n]), (e.flags |= 16))
                : t.push(n);
          }
          function uo(e, t) {
            switch (e.tag) {
              case 5:
                var n = e.type;
                return (
                  null !==
                    (t =
                      1 !== t.nodeType ||
                      n.toLowerCase() !== t.nodeName.toLowerCase()
                        ? null
                        : t) &&
                  ((e.stateNode = t), (io = e), (oo = fi(t.firstChild)), !0)
                );
              case 6:
                return (
                  null !==
                    (t =
                      '' === e.pendingProps || 3 !== t.nodeType ? null : t) &&
                  ((e.stateNode = t), (io = e), (oo = null), !0)
                );
              case 13:
                return (
                  null !== (t = 8 !== t.nodeType ? null : t) &&
                  ((n = null !== Qi ? { id: Ki, overflow: Zi } : null),
                  (e.memoizedState = {
                    dehydrated: t,
                    treeContext: n,
                    retryLane: 1073741824,
                  }),
                  ((n = Lu(18, null, null, 0)).stateNode = t),
                  (n.return = e),
                  (e.child = n),
                  (io = e),
                  (oo = null),
                  !0)
                );
              default:
                return !1;
            }
          }
          function co(e) {
            return 0 != (1 & e.mode) && 0 == (128 & e.flags);
          }
          function fo(e) {
            if (ao) {
              var t = oo;
              if (t) {
                var n = t;
                if (!uo(e, t)) {
                  if (co(e)) throw Error(a(418));
                  t = fi(n.nextSibling);
                  var r = io;
                  t && uo(e, t)
                    ? lo(r, n)
                    : ((e.flags = (-4097 & e.flags) | 2), (ao = !1), (io = e));
                }
              } else {
                if (co(e)) throw Error(a(418));
                (e.flags = (-4097 & e.flags) | 2), (ao = !1), (io = e);
              }
            }
          }
          function ho(e) {
            for (
              e = e.return;
              null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag;

            )
              e = e.return;
            io = e;
          }
          function go(e) {
            if (e !== io) return !1;
            if (!ao) return ho(e), (ao = !0), !1;
            var t;
            if (
              ((t = 3 !== e.tag) &&
                !(t = 5 !== e.tag) &&
                (t =
                  'head' !== (t = e.type) &&
                  'body' !== t &&
                  !ii(e.type, e.memoizedProps)),
              t && (t = oo))
            ) {
              if (co(e)) throw (po(), Error(a(418)));
              for (; t; ) lo(e, t), (t = fi(t.nextSibling));
            }
            if ((ho(e), 13 === e.tag)) {
              if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
                throw Error(a(317));
              e: {
                for (e = e.nextSibling, t = 0; e; ) {
                  if (8 === e.nodeType) {
                    var n = e.data;
                    if ('/$' === n) {
                      if (0 === t) {
                        oo = fi(e.nextSibling);
                        break e;
                      }
                      t--;
                    } else ('$' !== n && '$!' !== n && '$?' !== n) || t++;
                  }
                  e = e.nextSibling;
                }
                oo = null;
              }
            } else oo = io ? fi(e.stateNode.nextSibling) : null;
            return !0;
          }
          function po() {
            for (var e = oo; e; ) e = fi(e.nextSibling);
          }
          function vo() {
            (oo = io = null), (ao = !1);
          }
          function yo(e) {
            null === so ? (so = [e]) : so.push(e);
          }
          var mo = x.ReactCurrentBatchConfig;
          function bo(e, t) {
            if (e && e.defaultProps) {
              for (var n in ((t = B({}, t)), (e = e.defaultProps)))
                void 0 === t[n] && (t[n] = e[n]);
              return t;
            }
            return t;
          }
          var ko = Oi(null),
            wo = null,
            xo = null,
            Co = null;
          function So() {
            Co = xo = wo = null;
          }
          function Eo(e) {
            var t = ko.current;
            Pi(ko), (e._currentValue = t);
          }
          function Oo(e, t, n) {
            for (; null !== e; ) {
              var r = e.alternate;
              if (
                ((e.childLanes & t) !== t
                  ? ((e.childLanes |= t), null !== r && (r.childLanes |= t))
                  : null !== r &&
                    (r.childLanes & t) !== t &&
                    (r.childLanes |= t),
                e === n)
              )
                break;
              e = e.return;
            }
          }
          function Po(e, t) {
            (wo = e),
              (Co = xo = null),
              null !== (e = e.dependencies) &&
                null !== e.firstContext &&
                (0 != (e.lanes & t) && (xs = !0), (e.firstContext = null));
          }
          function Ao(e) {
            var t = e._currentValue;
            if (Co !== e)
              if (
                ((e = { context: e, memoizedValue: t, next: null }),
                null === xo)
              ) {
                if (null === wo) throw Error(a(308));
                (xo = e), (wo.dependencies = { lanes: 0, firstContext: e });
              } else xo = xo.next = e;
            return t;
          }
          var Mo = null;
          function To(e) {
            null === Mo ? (Mo = [e]) : Mo.push(e);
          }
          function No(e, t, n, r) {
            var i = t.interleaved;
            return (
              null === i
                ? ((n.next = n), To(t))
                : ((n.next = i.next), (i.next = n)),
              (t.interleaved = n),
              jo(e, r)
            );
          }
          function jo(e, t) {
            e.lanes |= t;
            var n = e.alternate;
            for (
              null !== n && (n.lanes |= t), n = e, e = e.return;
              null !== e;

            )
              (e.childLanes |= t),
                null !== (n = e.alternate) && (n.childLanes |= t),
                (n = e),
                (e = e.return);
            return 3 === n.tag ? n.stateNode : null;
          }
          var Lo = !1;
          function Ro(e) {
            e.updateQueue = {
              baseState: e.memoizedState,
              firstBaseUpdate: null,
              lastBaseUpdate: null,
              shared: { pending: null, interleaved: null, lanes: 0 },
              effects: null,
            };
          }
          function _o(e, t) {
            (e = e.updateQueue),
              t.updateQueue === e &&
                (t.updateQueue = {
                  baseState: e.baseState,
                  firstBaseUpdate: e.firstBaseUpdate,
                  lastBaseUpdate: e.lastBaseUpdate,
                  shared: e.shared,
                  effects: e.effects,
                });
          }
          function Io(e, t) {
            return {
              eventTime: e,
              lane: t,
              tag: 0,
              payload: null,
              callback: null,
              next: null,
            };
          }
          function Do(e, t, n) {
            var r = e.updateQueue;
            if (null === r) return null;
            if (((r = r.shared), 0 != (2 & Tl))) {
              var i = r.pending;
              return (
                null === i ? (t.next = t) : ((t.next = i.next), (i.next = t)),
                (r.pending = t),
                jo(e, n)
              );
            }
            return (
              null === (i = r.interleaved)
                ? ((t.next = t), To(r))
                : ((t.next = i.next), (i.next = t)),
              (r.interleaved = t),
              jo(e, n)
            );
          }
          function zo(e, t, n) {
            if (
              null !== (t = t.updateQueue) &&
              ((t = t.shared), 0 != (4194240 & n))
            ) {
              var r = t.lanes;
              (n |= r &= e.pendingLanes), (t.lanes = n), kt(e, n);
            }
          }
          function Bo(e, t) {
            var n = e.updateQueue,
              r = e.alternate;
            if (null !== r && n === (r = r.updateQueue)) {
              var i = null,
                o = null;
              if (null !== (n = n.firstBaseUpdate)) {
                do {
                  var a = {
                    eventTime: n.eventTime,
                    lane: n.lane,
                    tag: n.tag,
                    payload: n.payload,
                    callback: n.callback,
                    next: null,
                  };
                  null === o ? (i = o = a) : (o = o.next = a), (n = n.next);
                } while (null !== n);
                null === o ? (i = o = t) : (o = o.next = t);
              } else i = o = t;
              return (
                (n = {
                  baseState: r.baseState,
                  firstBaseUpdate: i,
                  lastBaseUpdate: o,
                  shared: r.shared,
                  effects: r.effects,
                }),
                void (e.updateQueue = n)
              );
            }
            null === (e = n.lastBaseUpdate)
              ? (n.firstBaseUpdate = t)
              : (e.next = t),
              (n.lastBaseUpdate = t);
          }
          function Vo(e, t, n, r) {
            var i = e.updateQueue;
            Lo = !1;
            var o = i.firstBaseUpdate,
              a = i.lastBaseUpdate,
              s = i.shared.pending;
            if (null !== s) {
              i.shared.pending = null;
              var l = s,
                u = l.next;
              (l.next = null), null === a ? (o = u) : (a.next = u), (a = l);
              var c = e.alternate;
              null !== c &&
                (s = (c = c.updateQueue).lastBaseUpdate) !== a &&
                (null === s ? (c.firstBaseUpdate = u) : (s.next = u),
                (c.lastBaseUpdate = l));
            }
            if (null !== o) {
              var f = i.baseState;
              for (a = 0, c = u = l = null, s = o; ; ) {
                var h = s.lane,
                  d = s.eventTime;
                if ((r & h) === h) {
                  null !== c &&
                    (c = c.next =
                      {
                        eventTime: d,
                        lane: 0,
                        tag: s.tag,
                        payload: s.payload,
                        callback: s.callback,
                        next: null,
                      });
                  e: {
                    var g = e,
                      p = s;
                    switch (((h = t), (d = n), p.tag)) {
                      case 1:
                        if ('function' == typeof (g = p.payload)) {
                          f = g.call(d, f, h);
                          break e;
                        }
                        f = g;
                        break e;
                      case 3:
                        g.flags = (-65537 & g.flags) | 128;
                      case 0:
                        if (
                          null ==
                          (h =
                            'function' == typeof (g = p.payload)
                              ? g.call(d, f, h)
                              : g)
                        )
                          break e;
                        f = B({}, f, h);
                        break e;
                      case 2:
                        Lo = !0;
                    }
                  }
                  null !== s.callback &&
                    0 !== s.lane &&
                    ((e.flags |= 64),
                    null === (h = i.effects) ? (i.effects = [s]) : h.push(s));
                } else
                  (d = {
                    eventTime: d,
                    lane: h,
                    tag: s.tag,
                    payload: s.payload,
                    callback: s.callback,
                    next: null,
                  }),
                    null === c ? ((u = c = d), (l = f)) : (c = c.next = d),
                    (a |= h);
                if (null === (s = s.next)) {
                  if (null === (s = i.shared.pending)) break;
                  (s = (h = s).next),
                    (h.next = null),
                    (i.lastBaseUpdate = h),
                    (i.shared.pending = null);
                }
              }
              if (
                (null === c && (l = f),
                (i.baseState = l),
                (i.firstBaseUpdate = u),
                (i.lastBaseUpdate = c),
                null !== (t = i.shared.interleaved))
              ) {
                i = t;
                do {
                  (a |= i.lane), (i = i.next);
                } while (i !== t);
              } else null === o && (i.shared.lanes = 0);
              (zl |= a), (e.lanes = a), (e.memoizedState = f);
            }
          }
          function Fo(e, t, n) {
            if (((e = t.effects), (t.effects = null), null !== e))
              for (t = 0; t < e.length; t++) {
                var r = e[t],
                  i = r.callback;
                if (null !== i) {
                  if (((r.callback = null), (r = n), 'function' != typeof i))
                    throw Error(a(191, i));
                  i.call(r);
                }
              }
          }
          var Uo = new i.Component().refs;
          function Ho(e, t, n, r) {
            (n = null == (n = n(r, (t = e.memoizedState))) ? t : B({}, t, n)),
              (e.memoizedState = n),
              0 === e.lanes && (e.updateQueue.baseState = n);
          }
          var Go = {
            isMounted: function (e) {
              return !!(e = e._reactInternals) && Ge(e) === e;
            },
            enqueueSetState: function (e, t, n) {
              e = e._reactInternals;
              var r = nu(),
                i = ru(e),
                o = Io(r, i);
              (o.payload = t),
                null != n && (o.callback = n),
                null !== (t = Do(e, o, i)) && (iu(t, e, i, r), zo(t, e, i));
            },
            enqueueReplaceState: function (e, t, n) {
              e = e._reactInternals;
              var r = nu(),
                i = ru(e),
                o = Io(r, i);
              (o.tag = 1),
                (o.payload = t),
                null != n && (o.callback = n),
                null !== (t = Do(e, o, i)) && (iu(t, e, i, r), zo(t, e, i));
            },
            enqueueForceUpdate: function (e, t) {
              e = e._reactInternals;
              var n = nu(),
                r = ru(e),
                i = Io(n, r);
              (i.tag = 2),
                null != t && (i.callback = t),
                null !== (t = Do(e, i, r)) && (iu(t, e, r, n), zo(t, e, r));
            },
          };
          function Wo(e, t, n, r, i, o, a) {
            return 'function' == typeof (e = e.stateNode).shouldComponentUpdate
              ? e.shouldComponentUpdate(r, o, a)
              : !t.prototype ||
                  !t.prototype.isPureReactComponent ||
                  !cr(n, r) ||
                  !cr(i, o);
          }
          function qo(e, t, n) {
            var i = !1,
              o = Mi,
              a = t.contextType;
            return (
              'object' === r(a) && null !== a
                ? (a = Ao(a))
                : ((o = Ri(t) ? ji : Ti.current),
                  (a = (i = null != (i = t.contextTypes)) ? Li(e, o) : Mi)),
              (t = new t(n, a)),
              (e.memoizedState =
                null !== t.state && void 0 !== t.state ? t.state : null),
              (t.updater = Go),
              (e.stateNode = t),
              (t._reactInternals = e),
              i &&
                (((e =
                  e.stateNode).__reactInternalMemoizedUnmaskedChildContext = o),
                (e.__reactInternalMemoizedMaskedChildContext = a)),
              t
            );
          }
          function Xo(e, t, n, r) {
            (e = t.state),
              'function' == typeof t.componentWillReceiveProps &&
                t.componentWillReceiveProps(n, r),
              'function' == typeof t.UNSAFE_componentWillReceiveProps &&
                t.UNSAFE_componentWillReceiveProps(n, r),
              t.state !== e && Go.enqueueReplaceState(t, t.state, null);
          }
          function Yo(e, t, n, i) {
            var o = e.stateNode;
            (o.props = n), (o.state = e.memoizedState), (o.refs = Uo), Ro(e);
            var a = t.contextType;
            'object' === r(a) && null !== a
              ? (o.context = Ao(a))
              : ((a = Ri(t) ? ji : Ti.current), (o.context = Li(e, a))),
              (o.state = e.memoizedState),
              'function' == typeof (a = t.getDerivedStateFromProps) &&
                (Ho(e, t, a, n), (o.state = e.memoizedState)),
              'function' == typeof t.getDerivedStateFromProps ||
                'function' == typeof o.getSnapshotBeforeUpdate ||
                ('function' != typeof o.UNSAFE_componentWillMount &&
                  'function' != typeof o.componentWillMount) ||
                ((t = o.state),
                'function' == typeof o.componentWillMount &&
                  o.componentWillMount(),
                'function' == typeof o.UNSAFE_componentWillMount &&
                  o.UNSAFE_componentWillMount(),
                t !== o.state && Go.enqueueReplaceState(o, o.state, null),
                Vo(e, n, o, i),
                (o.state = e.memoizedState)),
              'function' == typeof o.componentDidMount && (e.flags |= 4194308);
          }
          function Jo(e, t, n) {
            if (
              null !== (e = n.ref) &&
              'function' != typeof e &&
              'object' !== r(e)
            ) {
              if (n._owner) {
                if ((n = n._owner)) {
                  if (1 !== n.tag) throw Error(a(309));
                  var i = n.stateNode;
                }
                if (!i) throw Error(a(147, e));
                var o = i,
                  s = '' + e;
                return null !== t &&
                  null !== t.ref &&
                  'function' == typeof t.ref &&
                  t.ref._stringRef === s
                  ? t.ref
                  : ((t = function (e) {
                      var t = o.refs;
                      t === Uo && (t = o.refs = {}),
                        null === e ? delete t[s] : (t[s] = e);
                    }),
                    (t._stringRef = s),
                    t);
              }
              if ('string' != typeof e) throw Error(a(284));
              if (!n._owner) throw Error(a(290, e));
            }
            return e;
          }
          function $o(e, t) {
            throw (
              ((e = Object.prototype.toString.call(t)),
              Error(
                a(
                  31,
                  '[object Object]' === e
                    ? 'object with keys {' + Object.keys(t).join(', ') + '}'
                    : e
                )
              ))
            );
          }
          function Qo(e) {
            return (0, e._init)(e._payload);
          }
          function Ko(e) {
            function t(t, n) {
              if (e) {
                var r = t.deletions;
                null === r ? ((t.deletions = [n]), (t.flags |= 16)) : r.push(n);
              }
            }
            function n(n, r) {
              if (!e) return null;
              for (; null !== r; ) t(n, r), (r = r.sibling);
              return null;
            }
            function i(e, t) {
              for (e = new Map(); null !== t; )
                null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                  (t = t.sibling);
              return e;
            }
            function o(e, t) {
              return ((e = _u(e, t)).index = 0), (e.sibling = null), e;
            }
            function s(t, n, r) {
              return (
                (t.index = r),
                e
                  ? null !== (r = t.alternate)
                    ? (r = r.index) < n
                      ? ((t.flags |= 2), n)
                      : r
                    : ((t.flags |= 2), n)
                  : ((t.flags |= 1048576), n)
              );
            }
            function l(t) {
              return e && null === t.alternate && (t.flags |= 2), t;
            }
            function u(e, t, n, r) {
              return null === t || 6 !== t.tag
                ? (((t = Bu(n, e.mode, r)).return = e), t)
                : (((t = o(t, n)).return = e), t);
            }
            function c(e, t, n, i) {
              var a = n.type;
              return a === E
                ? h(e, t, n.props.children, i, n.key)
                : null !== t &&
                  (t.elementType === a ||
                    ('object' === r(a) &&
                      null !== a &&
                      a.$$typeof === R &&
                      Qo(a) === t.type))
                ? (((i = o(t, n.props)).ref = Jo(e, t, n)), (i.return = e), i)
                : (((i = Iu(n.type, n.key, n.props, null, e.mode, i)).ref = Jo(
                    e,
                    t,
                    n
                  )),
                  (i.return = e),
                  i);
            }
            function f(e, t, n, r) {
              return null === t ||
                4 !== t.tag ||
                t.stateNode.containerInfo !== n.containerInfo ||
                t.stateNode.implementation !== n.implementation
                ? (((t = Vu(n, e.mode, r)).return = e), t)
                : (((t = o(t, n.children || [])).return = e), t);
            }
            function h(e, t, n, r, i) {
              return null === t || 7 !== t.tag
                ? (((t = Du(n, e.mode, r, i)).return = e), t)
                : (((t = o(t, n)).return = e), t);
            }
            function d(e, t, n) {
              if (('string' == typeof t && '' !== t) || 'number' == typeof t)
                return ((t = Bu('' + t, e.mode, n)).return = e), t;
              if ('object' === r(t) && null !== t) {
                switch (t.$$typeof) {
                  case C:
                    return (
                      ((n = Iu(t.type, t.key, t.props, null, e.mode, n)).ref =
                        Jo(e, null, t)),
                      (n.return = e),
                      n
                    );
                  case S:
                    return ((t = Vu(t, e.mode, n)).return = e), t;
                  case R:
                    return d(e, (0, t._init)(t._payload), n);
                }
                if (re(t) || D(t))
                  return ((t = Du(t, e.mode, n, null)).return = e), t;
                $o(e, t);
              }
              return null;
            }
            function g(e, t, n, i) {
              var o = null !== t ? t.key : null;
              if (('string' == typeof n && '' !== n) || 'number' == typeof n)
                return null !== o ? null : u(e, t, '' + n, i);
              if ('object' === r(n) && null !== n) {
                switch (n.$$typeof) {
                  case C:
                    return n.key === o ? c(e, t, n, i) : null;
                  case S:
                    return n.key === o ? f(e, t, n, i) : null;
                  case R:
                    return g(e, t, (o = n._init)(n._payload), i);
                }
                if (re(n) || D(n))
                  return null !== o ? null : h(e, t, n, i, null);
                $o(e, n);
              }
              return null;
            }
            function p(e, t, n, i, o) {
              if (('string' == typeof i && '' !== i) || 'number' == typeof i)
                return u(t, (e = e.get(n) || null), '' + i, o);
              if ('object' === r(i) && null !== i) {
                switch (i.$$typeof) {
                  case C:
                    return c(
                      t,
                      (e = e.get(null === i.key ? n : i.key) || null),
                      i,
                      o
                    );
                  case S:
                    return f(
                      t,
                      (e = e.get(null === i.key ? n : i.key) || null),
                      i,
                      o
                    );
                  case R:
                    return p(e, t, n, (0, i._init)(i._payload), o);
                }
                if (re(i) || D(i))
                  return h(t, (e = e.get(n) || null), i, o, null);
                $o(t, i);
              }
              return null;
            }
            function v(r, o, a, l) {
              for (
                var u = null, c = null, f = o, h = (o = 0), v = null;
                null !== f && h < a.length;
                h++
              ) {
                f.index > h ? ((v = f), (f = null)) : (v = f.sibling);
                var y = g(r, f, a[h], l);
                if (null === y) {
                  null === f && (f = v);
                  break;
                }
                e && f && null === y.alternate && t(r, f),
                  (o = s(y, o, h)),
                  null === c ? (u = y) : (c.sibling = y),
                  (c = y),
                  (f = v);
              }
              if (h === a.length) return n(r, f), ao && eo(r, h), u;
              if (null === f) {
                for (; h < a.length; h++)
                  null !== (f = d(r, a[h], l)) &&
                    ((o = s(f, o, h)),
                    null === c ? (u = f) : (c.sibling = f),
                    (c = f));
                return ao && eo(r, h), u;
              }
              for (f = i(r, f); h < a.length; h++)
                null !== (v = p(f, r, h, a[h], l)) &&
                  (e &&
                    null !== v.alternate &&
                    f.delete(null === v.key ? h : v.key),
                  (o = s(v, o, h)),
                  null === c ? (u = v) : (c.sibling = v),
                  (c = v));
              return (
                e &&
                  f.forEach(function (e) {
                    return t(r, e);
                  }),
                ao && eo(r, h),
                u
              );
            }
            function y(r, o, l, u) {
              var c = D(l);
              if ('function' != typeof c) throw Error(a(150));
              if (null == (l = c.call(l))) throw Error(a(151));
              for (
                var f = (c = null), h = o, v = (o = 0), y = null, m = l.next();
                null !== h && !m.done;
                v++, m = l.next()
              ) {
                h.index > v ? ((y = h), (h = null)) : (y = h.sibling);
                var b = g(r, h, m.value, u);
                if (null === b) {
                  null === h && (h = y);
                  break;
                }
                e && h && null === b.alternate && t(r, h),
                  (o = s(b, o, v)),
                  null === f ? (c = b) : (f.sibling = b),
                  (f = b),
                  (h = y);
              }
              if (m.done) return n(r, h), ao && eo(r, v), c;
              if (null === h) {
                for (; !m.done; v++, m = l.next())
                  null !== (m = d(r, m.value, u)) &&
                    ((o = s(m, o, v)),
                    null === f ? (c = m) : (f.sibling = m),
                    (f = m));
                return ao && eo(r, v), c;
              }
              for (h = i(r, h); !m.done; v++, m = l.next())
                null !== (m = p(h, r, v, m.value, u)) &&
                  (e &&
                    null !== m.alternate &&
                    h.delete(null === m.key ? v : m.key),
                  (o = s(m, o, v)),
                  null === f ? (c = m) : (f.sibling = m),
                  (f = m));
              return (
                e &&
                  h.forEach(function (e) {
                    return t(r, e);
                  }),
                ao && eo(r, v),
                c
              );
            }
            return function e(i, a, s, u) {
              if (
                ('object' === r(s) &&
                  null !== s &&
                  s.type === E &&
                  null === s.key &&
                  (s = s.props.children),
                'object' === r(s) && null !== s)
              ) {
                switch (s.$$typeof) {
                  case C:
                    e: {
                      for (var c = s.key, f = a; null !== f; ) {
                        if (f.key === c) {
                          if ((c = s.type) === E) {
                            if (7 === f.tag) {
                              n(i, f.sibling),
                                ((a = o(f, s.props.children)).return = i),
                                (i = a);
                              break e;
                            }
                          } else if (
                            f.elementType === c ||
                            ('object' === r(c) &&
                              null !== c &&
                              c.$$typeof === R &&
                              Qo(c) === f.type)
                          ) {
                            n(i, f.sibling),
                              ((a = o(f, s.props)).ref = Jo(i, f, s)),
                              (a.return = i),
                              (i = a);
                            break e;
                          }
                          n(i, f);
                          break;
                        }
                        t(i, f), (f = f.sibling);
                      }
                      s.type === E
                        ? (((a = Du(
                            s.props.children,
                            i.mode,
                            u,
                            s.key
                          )).return = i),
                          (i = a))
                        : (((u = Iu(
                            s.type,
                            s.key,
                            s.props,
                            null,
                            i.mode,
                            u
                          )).ref = Jo(i, a, s)),
                          (u.return = i),
                          (i = u));
                    }
                    return l(i);
                  case S:
                    e: {
                      for (f = s.key; null !== a; ) {
                        if (a.key === f) {
                          if (
                            4 === a.tag &&
                            a.stateNode.containerInfo === s.containerInfo &&
                            a.stateNode.implementation === s.implementation
                          ) {
                            n(i, a.sibling),
                              ((a = o(a, s.children || [])).return = i),
                              (i = a);
                            break e;
                          }
                          n(i, a);
                          break;
                        }
                        t(i, a), (a = a.sibling);
                      }
                      ((a = Vu(s, i.mode, u)).return = i), (i = a);
                    }
                    return l(i);
                  case R:
                    return e(i, a, (f = s._init)(s._payload), u);
                }
                if (re(s)) return v(i, a, s, u);
                if (D(s)) return y(i, a, s, u);
                $o(i, s);
              }
              return ('string' == typeof s && '' !== s) || 'number' == typeof s
                ? ((s = '' + s),
                  null !== a && 6 === a.tag
                    ? (n(i, a.sibling), ((a = o(a, s)).return = i), (i = a))
                    : (n(i, a), ((a = Bu(s, i.mode, u)).return = i), (i = a)),
                  l(i))
                : n(i, a);
            };
          }
          var Zo = Ko(!0),
            ea = Ko(!1),
            ta = {},
            na = Oi(ta),
            ra = Oi(ta),
            ia = Oi(ta);
          function oa(e) {
            if (e === ta) throw Error(a(174));
            return e;
          }
          function aa(e, t) {
            switch ((Ai(ia, t), Ai(ra, e), Ai(na, ta), (e = t.nodeType))) {
              case 9:
              case 11:
                t = (t = t.documentElement) ? t.namespaceURI : ce(null, '');
                break;
              default:
                t = ce(
                  (t = (e = 8 === e ? t.parentNode : t).namespaceURI || null),
                  (e = e.tagName)
                );
            }
            Pi(na), Ai(na, t);
          }
          function sa() {
            Pi(na), Pi(ra), Pi(ia);
          }
          function la(e) {
            oa(ia.current);
            var t = oa(na.current),
              n = ce(t, e.type);
            t !== n && (Ai(ra, e), Ai(na, n));
          }
          function ua(e) {
            ra.current === e && (Pi(na), Pi(ra));
          }
          var ca = Oi(0);
          function fa(e) {
            for (var t = e; null !== t; ) {
              if (13 === t.tag) {
                var n = t.memoizedState;
                if (
                  null !== n &&
                  (null === (n = n.dehydrated) ||
                    '$?' === n.data ||
                    '$!' === n.data)
                )
                  return t;
              } else if (
                19 === t.tag &&
                void 0 !== t.memoizedProps.revealOrder
              ) {
                if (0 != (128 & t.flags)) return t;
              } else if (null !== t.child) {
                (t.child.return = t), (t = t.child);
                continue;
              }
              if (t === e) break;
              for (; null === t.sibling; ) {
                if (null === t.return || t.return === e) return null;
                t = t.return;
              }
              (t.sibling.return = t.return), (t = t.sibling);
            }
            return null;
          }
          var ha = [];
          function da() {
            for (var e = 0; e < ha.length; e++)
              ha[e]._workInProgressVersionPrimary = null;
            ha.length = 0;
          }
          var ga = x.ReactCurrentDispatcher,
            pa = x.ReactCurrentBatchConfig,
            va = 0,
            ya = null,
            ma = null,
            ba = null,
            ka = !1,
            wa = !1,
            xa = 0,
            Ca = 0;
          function Sa() {
            throw Error(a(321));
          }
          function Ea(e, t) {
            if (null === t) return !1;
            for (var n = 0; n < t.length && n < e.length; n++)
              if (!ur(e[n], t[n])) return !1;
            return !0;
          }
          function Oa(e, t, n, r, i, o) {
            if (
              ((va = o),
              (ya = t),
              (t.memoizedState = null),
              (t.updateQueue = null),
              (t.lanes = 0),
              (ga.current = null === e || null === e.memoizedState ? us : cs),
              (e = n(r, i)),
              wa)
            ) {
              o = 0;
              do {
                if (((wa = !1), (xa = 0), 25 <= o)) throw Error(a(301));
                (o += 1),
                  (ba = ma = null),
                  (t.updateQueue = null),
                  (ga.current = fs),
                  (e = n(r, i));
              } while (wa);
            }
            if (
              ((ga.current = ls),
              (t = null !== ma && null !== ma.next),
              (va = 0),
              (ba = ma = ya = null),
              (ka = !1),
              t)
            )
              throw Error(a(300));
            return e;
          }
          function Pa() {
            var e = 0 !== xa;
            return (xa = 0), e;
          }
          function Aa() {
            var e = {
              memoizedState: null,
              baseState: null,
              baseQueue: null,
              queue: null,
              next: null,
            };
            return (
              null === ba ? (ya.memoizedState = ba = e) : (ba = ba.next = e), ba
            );
          }
          function Ma() {
            if (null === ma) {
              var e = ya.alternate;
              e = null !== e ? e.memoizedState : null;
            } else e = ma.next;
            var t = null === ba ? ya.memoizedState : ba.next;
            if (null !== t) (ba = t), (ma = e);
            else {
              if (null === e) throw Error(a(310));
              (e = {
                memoizedState: (ma = e).memoizedState,
                baseState: ma.baseState,
                baseQueue: ma.baseQueue,
                queue: ma.queue,
                next: null,
              }),
                null === ba ? (ya.memoizedState = ba = e) : (ba = ba.next = e);
            }
            return ba;
          }
          function Ta(e, t) {
            return 'function' == typeof t ? t(e) : t;
          }
          function Na(e) {
            var t = Ma(),
              n = t.queue;
            if (null === n) throw Error(a(311));
            n.lastRenderedReducer = e;
            var r = ma,
              i = r.baseQueue,
              o = n.pending;
            if (null !== o) {
              if (null !== i) {
                var s = i.next;
                (i.next = o.next), (o.next = s);
              }
              (r.baseQueue = i = o), (n.pending = null);
            }
            if (null !== i) {
              (o = i.next), (r = r.baseState);
              var l = (s = null),
                u = null,
                c = o;
              do {
                var f = c.lane;
                if ((va & f) === f)
                  null !== u &&
                    (u = u.next =
                      {
                        lane: 0,
                        action: c.action,
                        hasEagerState: c.hasEagerState,
                        eagerState: c.eagerState,
                        next: null,
                      }),
                    (r = c.hasEagerState ? c.eagerState : e(r, c.action));
                else {
                  var h = {
                    lane: f,
                    action: c.action,
                    hasEagerState: c.hasEagerState,
                    eagerState: c.eagerState,
                    next: null,
                  };
                  null === u ? ((l = u = h), (s = r)) : (u = u.next = h),
                    (ya.lanes |= f),
                    (zl |= f);
                }
                c = c.next;
              } while (null !== c && c !== o);
              null === u ? (s = r) : (u.next = l),
                ur(r, t.memoizedState) || (xs = !0),
                (t.memoizedState = r),
                (t.baseState = s),
                (t.baseQueue = u),
                (n.lastRenderedState = r);
            }
            if (null !== (e = n.interleaved)) {
              i = e;
              do {
                (o = i.lane), (ya.lanes |= o), (zl |= o), (i = i.next);
              } while (i !== e);
            } else null === i && (n.lanes = 0);
            return [t.memoizedState, n.dispatch];
          }
          function ja(e) {
            var t = Ma(),
              n = t.queue;
            if (null === n) throw Error(a(311));
            n.lastRenderedReducer = e;
            var r = n.dispatch,
              i = n.pending,
              o = t.memoizedState;
            if (null !== i) {
              n.pending = null;
              var s = (i = i.next);
              do {
                (o = e(o, s.action)), (s = s.next);
              } while (s !== i);
              ur(o, t.memoizedState) || (xs = !0),
                (t.memoizedState = o),
                null === t.baseQueue && (t.baseState = o),
                (n.lastRenderedState = o);
            }
            return [o, r];
          }
          function La() {}
          function Ra(e, t) {
            var n = ya,
              r = Ma(),
              i = t(),
              o = !ur(r.memoizedState, i);
            if (
              (o && ((r.memoizedState = i), (xs = !0)),
              (r = r.queue),
              qa(Da.bind(null, n, r, e), [e]),
              r.getSnapshot !== t ||
                o ||
                (null !== ba && 1 & ba.memoizedState.tag))
            ) {
              if (
                ((n.flags |= 2048),
                Fa(9, Ia.bind(null, n, r, i, t), void 0, null),
                null === Nl)
              )
                throw Error(a(349));
              0 != (30 & va) || _a(n, t, i);
            }
            return i;
          }
          function _a(e, t, n) {
            (e.flags |= 16384),
              (e = { getSnapshot: t, value: n }),
              null === (t = ya.updateQueue)
                ? ((t = { lastEffect: null, stores: null }),
                  (ya.updateQueue = t),
                  (t.stores = [e]))
                : null === (n = t.stores)
                ? (t.stores = [e])
                : n.push(e);
          }
          function Ia(e, t, n, r) {
            (t.value = n), (t.getSnapshot = r), za(t) && Ba(e);
          }
          function Da(e, t, n) {
            return n(function () {
              za(t) && Ba(e);
            });
          }
          function za(e) {
            var t = e.getSnapshot;
            e = e.value;
            try {
              var n = t();
              return !ur(e, n);
            } catch (e) {
              return !0;
            }
          }
          function Ba(e) {
            var t = jo(e, 1);
            null !== t && iu(t, e, 1, -1);
          }
          function Va(e) {
            var t = Aa();
            return (
              'function' == typeof e && (e = e()),
              (t.memoizedState = t.baseState = e),
              (e = {
                pending: null,
                interleaved: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: Ta,
                lastRenderedState: e,
              }),
              (t.queue = e),
              (e = e.dispatch = is.bind(null, ya, e)),
              [t.memoizedState, e]
            );
          }
          function Fa(e, t, n, r) {
            return (
              (e = { tag: e, create: t, destroy: n, deps: r, next: null }),
              null === (t = ya.updateQueue)
                ? ((t = { lastEffect: null, stores: null }),
                  (ya.updateQueue = t),
                  (t.lastEffect = e.next = e))
                : null === (n = t.lastEffect)
                ? (t.lastEffect = e.next = e)
                : ((r = n.next),
                  (n.next = e),
                  (e.next = r),
                  (t.lastEffect = e)),
              e
            );
          }
          function Ua() {
            return Ma().memoizedState;
          }
          function Ha(e, t, n, r) {
            var i = Aa();
            (ya.flags |= e),
              (i.memoizedState = Fa(1 | t, n, void 0, void 0 === r ? null : r));
          }
          function Ga(e, t, n, r) {
            var i = Ma();
            r = void 0 === r ? null : r;
            var o = void 0;
            if (null !== ma) {
              var a = ma.memoizedState;
              if (((o = a.destroy), null !== r && Ea(r, a.deps)))
                return void (i.memoizedState = Fa(t, n, o, r));
            }
            (ya.flags |= e), (i.memoizedState = Fa(1 | t, n, o, r));
          }
          function Wa(e, t) {
            return Ha(8390656, 8, e, t);
          }
          function qa(e, t) {
            return Ga(2048, 8, e, t);
          }
          function Xa(e, t) {
            return Ga(4, 2, e, t);
          }
          function Ya(e, t) {
            return Ga(4, 4, e, t);
          }
          function Ja(e, t) {
            return 'function' == typeof t
              ? ((e = e()),
                t(e),
                function () {
                  t(null);
                })
              : null != t
              ? ((e = e()),
                (t.current = e),
                function () {
                  t.current = null;
                })
              : void 0;
          }
          function $a(e, t, n) {
            return (
              (n = null != n ? n.concat([e]) : null),
              Ga(4, 4, Ja.bind(null, t, e), n)
            );
          }
          function Qa() {}
          function Ka(e, t) {
            var n = Ma();
            t = void 0 === t ? null : t;
            var r = n.memoizedState;
            return null !== r && null !== t && Ea(t, r[1])
              ? r[0]
              : ((n.memoizedState = [e, t]), e);
          }
          function Za(e, t) {
            var n = Ma();
            t = void 0 === t ? null : t;
            var r = n.memoizedState;
            return null !== r && null !== t && Ea(t, r[1])
              ? r[0]
              : ((e = e()), (n.memoizedState = [e, t]), e);
          }
          function es(e, t, n) {
            return 0 == (21 & va)
              ? (e.baseState && ((e.baseState = !1), (xs = !0)),
                (e.memoizedState = n))
              : (ur(n, t) ||
                  ((n = yt()), (ya.lanes |= n), (zl |= n), (e.baseState = !0)),
                t);
          }
          function ts(e, t) {
            var n = wt;
            (wt = 0 !== n && 4 > n ? n : 4), e(!0);
            var r = pa.transition;
            pa.transition = {};
            try {
              e(!1), t();
            } finally {
              (wt = n), (pa.transition = r);
            }
          }
          function ns() {
            return Ma().memoizedState;
          }
          function rs(e, t, n) {
            var r = ru(e);
            if (
              ((n = {
                lane: r,
                action: n,
                hasEagerState: !1,
                eagerState: null,
                next: null,
              }),
              os(e))
            )
              as(t, n);
            else if (null !== (n = No(e, t, n, r))) {
              iu(n, e, r, nu()), ss(n, t, r);
            }
          }
          function is(e, t, n) {
            var r = ru(e),
              i = {
                lane: r,
                action: n,
                hasEagerState: !1,
                eagerState: null,
                next: null,
              };
            if (os(e)) as(t, i);
            else {
              var o = e.alternate;
              if (
                0 === e.lanes &&
                (null === o || 0 === o.lanes) &&
                null !== (o = t.lastRenderedReducer)
              )
                try {
                  var a = t.lastRenderedState,
                    s = o(a, n);
                  if (((i.hasEagerState = !0), (i.eagerState = s), ur(s, a))) {
                    var l = t.interleaved;
                    return (
                      null === l
                        ? ((i.next = i), To(t))
                        : ((i.next = l.next), (l.next = i)),
                      void (t.interleaved = i)
                    );
                  }
                } catch (e) {}
              null !== (n = No(e, t, i, r)) &&
                (iu(n, e, r, (i = nu())), ss(n, t, r));
            }
          }
          function os(e) {
            var t = e.alternate;
            return e === ya || (null !== t && t === ya);
          }
          function as(e, t) {
            wa = ka = !0;
            var n = e.pending;
            null === n ? (t.next = t) : ((t.next = n.next), (n.next = t)),
              (e.pending = t);
          }
          function ss(e, t, n) {
            if (0 != (4194240 & n)) {
              var r = t.lanes;
              (n |= r &= e.pendingLanes), (t.lanes = n), kt(e, n);
            }
          }
          var ls = {
              readContext: Ao,
              useCallback: Sa,
              useContext: Sa,
              useEffect: Sa,
              useImperativeHandle: Sa,
              useInsertionEffect: Sa,
              useLayoutEffect: Sa,
              useMemo: Sa,
              useReducer: Sa,
              useRef: Sa,
              useState: Sa,
              useDebugValue: Sa,
              useDeferredValue: Sa,
              useTransition: Sa,
              useMutableSource: Sa,
              useSyncExternalStore: Sa,
              useId: Sa,
              unstable_isNewReconciler: !1,
            },
            us = {
              readContext: Ao,
              useCallback: function (e, t) {
                return (Aa().memoizedState = [e, void 0 === t ? null : t]), e;
              },
              useContext: Ao,
              useEffect: Wa,
              useImperativeHandle: function (e, t, n) {
                return (
                  (n = null != n ? n.concat([e]) : null),
                  Ha(4194308, 4, Ja.bind(null, t, e), n)
                );
              },
              useLayoutEffect: function (e, t) {
                return Ha(4194308, 4, e, t);
              },
              useInsertionEffect: function (e, t) {
                return Ha(4, 2, e, t);
              },
              useMemo: function (e, t) {
                var n = Aa();
                return (
                  (t = void 0 === t ? null : t),
                  (e = e()),
                  (n.memoizedState = [e, t]),
                  e
                );
              },
              useReducer: function (e, t, n) {
                var r = Aa();
                return (
                  (t = void 0 !== n ? n(t) : t),
                  (r.memoizedState = r.baseState = t),
                  (e = {
                    pending: null,
                    interleaved: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: e,
                    lastRenderedState: t,
                  }),
                  (r.queue = e),
                  (e = e.dispatch = rs.bind(null, ya, e)),
                  [r.memoizedState, e]
                );
              },
              useRef: function (e) {
                return (e = { current: e }), (Aa().memoizedState = e);
              },
              useState: Va,
              useDebugValue: Qa,
              useDeferredValue: function (e) {
                return (Aa().memoizedState = e);
              },
              useTransition: function () {
                var e = Va(!1),
                  t = e[0];
                return (
                  (e = ts.bind(null, e[1])), (Aa().memoizedState = e), [t, e]
                );
              },
              useMutableSource: function () {},
              useSyncExternalStore: function (e, t, n) {
                var r = ya,
                  i = Aa();
                if (ao) {
                  if (void 0 === n) throw Error(a(407));
                  n = n();
                } else {
                  if (((n = t()), null === Nl)) throw Error(a(349));
                  0 != (30 & va) || _a(r, t, n);
                }
                i.memoizedState = n;
                var o = { value: n, getSnapshot: t };
                return (
                  (i.queue = o),
                  Wa(Da.bind(null, r, o, e), [e]),
                  (r.flags |= 2048),
                  Fa(9, Ia.bind(null, r, o, n, t), void 0, null),
                  n
                );
              },
              useId: function () {
                var e = Aa(),
                  t = Nl.identifierPrefix;
                if (ao) {
                  var n = Zi;
                  (t =
                    ':' +
                    t +
                    'R' +
                    (n = (Ki & ~(1 << (32 - lt(Ki) - 1))).toString(32) + n)),
                    0 < (n = xa++) && (t += 'H' + n.toString(32)),
                    (t += ':');
                } else t = ':' + t + 'r' + (n = Ca++).toString(32) + ':';
                return (e.memoizedState = t);
              },
              unstable_isNewReconciler: !1,
            },
            cs = {
              readContext: Ao,
              useCallback: Ka,
              useContext: Ao,
              useEffect: qa,
              useImperativeHandle: $a,
              useInsertionEffect: Xa,
              useLayoutEffect: Ya,
              useMemo: Za,
              useReducer: Na,
              useRef: Ua,
              useState: function () {
                return Na(Ta);
              },
              useDebugValue: Qa,
              useDeferredValue: function (e) {
                return es(Ma(), ma.memoizedState, e);
              },
              useTransition: function () {
                return [Na(Ta)[0], Ma().memoizedState];
              },
              useMutableSource: La,
              useSyncExternalStore: Ra,
              useId: ns,
              unstable_isNewReconciler: !1,
            },
            fs = {
              readContext: Ao,
              useCallback: Ka,
              useContext: Ao,
              useEffect: qa,
              useImperativeHandle: $a,
              useInsertionEffect: Xa,
              useLayoutEffect: Ya,
              useMemo: Za,
              useReducer: ja,
              useRef: Ua,
              useState: function () {
                return ja(Ta);
              },
              useDebugValue: Qa,
              useDeferredValue: function (e) {
                var t = Ma();
                return null === ma
                  ? (t.memoizedState = e)
                  : es(t, ma.memoizedState, e);
              },
              useTransition: function () {
                return [ja(Ta)[0], Ma().memoizedState];
              },
              useMutableSource: La,
              useSyncExternalStore: Ra,
              useId: ns,
              unstable_isNewReconciler: !1,
            };
          function hs(e, t) {
            try {
              var n = '',
                r = t;
              do {
                (n += H(r)), (r = r.return);
              } while (r);
              var i = n;
            } catch (e) {
              i = '\nError generating stack: ' + e.message + '\n' + e.stack;
            }
            return { value: e, source: t, stack: i, digest: null };
          }
          function ds(e, t, n) {
            return {
              value: e,
              source: null,
              stack: null != n ? n : null,
              digest: null != t ? t : null,
            };
          }
          function gs(e, t) {
            try {
              console.error(t.value);
            } catch (e) {
              setTimeout(function () {
                throw e;
              });
            }
          }
          var ps = 'function' == typeof WeakMap ? WeakMap : Map;
          function vs(e, t, n) {
            ((n = Io(-1, n)).tag = 3), (n.payload = { element: null });
            var r = t.value;
            return (
              (n.callback = function () {
                ql || ((ql = !0), (Xl = r)), gs(0, t);
              }),
              n
            );
          }
          function ys(e, t, n) {
            (n = Io(-1, n)).tag = 3;
            var r = e.type.getDerivedStateFromError;
            if ('function' == typeof r) {
              var i = t.value;
              (n.payload = function () {
                return r(i);
              }),
                (n.callback = function () {
                  gs(0, t);
                });
            }
            var o = e.stateNode;
            return (
              null !== o &&
                'function' == typeof o.componentDidCatch &&
                (n.callback = function () {
                  gs(0, t),
                    'function' != typeof r &&
                      (null === Yl ? (Yl = new Set([this])) : Yl.add(this));
                  var e = t.stack;
                  this.componentDidCatch(t.value, {
                    componentStack: null !== e ? e : '',
                  });
                }),
              n
            );
          }
          function ms(e, t, n) {
            var r = e.pingCache;
            if (null === r) {
              r = e.pingCache = new ps();
              var i = new Set();
              r.set(t, i);
            } else void 0 === (i = r.get(t)) && ((i = new Set()), r.set(t, i));
            i.has(n) || (i.add(n), (e = Pu.bind(null, e, t, n)), t.then(e, e));
          }
          function bs(e) {
            do {
              var t;
              if (
                ((t = 13 === e.tag) &&
                  (t = null === (t = e.memoizedState) || null !== t.dehydrated),
                t)
              )
                return e;
              e = e.return;
            } while (null !== e);
            return null;
          }
          function ks(e, t, n, r, i) {
            return 0 == (1 & e.mode)
              ? (e === t
                  ? (e.flags |= 65536)
                  : ((e.flags |= 128),
                    (n.flags |= 131072),
                    (n.flags &= -52805),
                    1 === n.tag &&
                      (null === n.alternate
                        ? (n.tag = 17)
                        : (((t = Io(-1, 1)).tag = 2), Do(n, t, 1))),
                    (n.lanes |= 1)),
                e)
              : ((e.flags |= 65536), (e.lanes = i), e);
          }
          var ws = x.ReactCurrentOwner,
            xs = !1;
          function Cs(e, t, n, r) {
            t.child = null === e ? ea(t, null, n, r) : Zo(t, e.child, n, r);
          }
          function Ss(e, t, n, r, i) {
            n = n.render;
            var o = t.ref;
            return (
              Po(t, i),
              (r = Oa(e, t, n, r, o, i)),
              (n = Pa()),
              null === e || xs
                ? (ao && n && no(t), (t.flags |= 1), Cs(e, t, r, i), t.child)
                : ((t.updateQueue = e.updateQueue),
                  (t.flags &= -2053),
                  (e.lanes &= ~i),
                  qs(e, t, i))
            );
          }
          function Es(e, t, n, r, i) {
            if (null === e) {
              var o = n.type;
              return 'function' != typeof o ||
                Ru(o) ||
                void 0 !== o.defaultProps ||
                null !== n.compare ||
                void 0 !== n.defaultProps
                ? (((e = Iu(n.type, null, r, t, t.mode, i)).ref = t.ref),
                  (e.return = t),
                  (t.child = e))
                : ((t.tag = 15), (t.type = o), Os(e, t, o, r, i));
            }
            if (((o = e.child), 0 == (e.lanes & i))) {
              var a = o.memoizedProps;
              if (
                (n = null !== (n = n.compare) ? n : cr)(a, r) &&
                e.ref === t.ref
              )
                return qs(e, t, i);
            }
            return (
              (t.flags |= 1),
              ((e = _u(o, r)).ref = t.ref),
              (e.return = t),
              (t.child = e)
            );
          }
          function Os(e, t, n, r, i) {
            if (null !== e) {
              var o = e.memoizedProps;
              if (cr(o, r) && e.ref === t.ref) {
                if (((xs = !1), (t.pendingProps = r = o), 0 == (e.lanes & i)))
                  return (t.lanes = e.lanes), qs(e, t, i);
                0 != (131072 & e.flags) && (xs = !0);
              }
            }
            return Ms(e, t, n, r, i);
          }
          function Ps(e, t, n) {
            var r = t.pendingProps,
              i = r.children,
              o = null !== e ? e.memoizedState : null;
            if ('hidden' === r.mode)
              if (0 == (1 & t.mode))
                (t.memoizedState = {
                  baseLanes: 0,
                  cachePool: null,
                  transitions: null,
                }),
                  Ai(_l, Rl),
                  (Rl |= n);
              else {
                if (0 == (1073741824 & n))
                  return (
                    (e = null !== o ? o.baseLanes | n : n),
                    (t.lanes = t.childLanes = 1073741824),
                    (t.memoizedState = {
                      baseLanes: e,
                      cachePool: null,
                      transitions: null,
                    }),
                    (t.updateQueue = null),
                    Ai(_l, Rl),
                    (Rl |= e),
                    null
                  );
                (t.memoizedState = {
                  baseLanes: 0,
                  cachePool: null,
                  transitions: null,
                }),
                  (r = null !== o ? o.baseLanes : n),
                  Ai(_l, Rl),
                  (Rl |= r);
              }
            else
              null !== o
                ? ((r = o.baseLanes | n), (t.memoizedState = null))
                : (r = n),
                Ai(_l, Rl),
                (Rl |= r);
            return Cs(e, t, i, n), t.child;
          }
          function As(e, t) {
            var n = t.ref;
            ((null === e && null !== n) || (null !== e && e.ref !== n)) &&
              ((t.flags |= 512), (t.flags |= 2097152));
          }
          function Ms(e, t, n, r, i) {
            var o = Ri(n) ? ji : Ti.current;
            return (
              (o = Li(t, o)),
              Po(t, i),
              (n = Oa(e, t, n, r, o, i)),
              (r = Pa()),
              null === e || xs
                ? (ao && r && no(t), (t.flags |= 1), Cs(e, t, n, i), t.child)
                : ((t.updateQueue = e.updateQueue),
                  (t.flags &= -2053),
                  (e.lanes &= ~i),
                  qs(e, t, i))
            );
          }
          function Ts(e, t, n, i, o) {
            if (Ri(n)) {
              var a = !0;
              zi(t);
            } else a = !1;
            if ((Po(t, o), null === t.stateNode))
              Ws(e, t), qo(t, n, i), Yo(t, n, i, o), (i = !0);
            else if (null === e) {
              var s = t.stateNode,
                l = t.memoizedProps;
              s.props = l;
              var u = s.context,
                c = n.contextType;
              'object' === r(c) && null !== c
                ? (c = Ao(c))
                : (c = Li(t, (c = Ri(n) ? ji : Ti.current)));
              var f = n.getDerivedStateFromProps,
                h =
                  'function' == typeof f ||
                  'function' == typeof s.getSnapshotBeforeUpdate;
              h ||
                ('function' != typeof s.UNSAFE_componentWillReceiveProps &&
                  'function' != typeof s.componentWillReceiveProps) ||
                ((l !== i || u !== c) && Xo(t, s, i, c)),
                (Lo = !1);
              var d = t.memoizedState;
              (s.state = d),
                Vo(t, i, s, o),
                (u = t.memoizedState),
                l !== i || d !== u || Ni.current || Lo
                  ? ('function' == typeof f &&
                      (Ho(t, n, f, i), (u = t.memoizedState)),
                    (l = Lo || Wo(t, n, l, i, d, u, c))
                      ? (h ||
                          ('function' != typeof s.UNSAFE_componentWillMount &&
                            'function' != typeof s.componentWillMount) ||
                          ('function' == typeof s.componentWillMount &&
                            s.componentWillMount(),
                          'function' == typeof s.UNSAFE_componentWillMount &&
                            s.UNSAFE_componentWillMount()),
                        'function' == typeof s.componentDidMount &&
                          (t.flags |= 4194308))
                      : ('function' == typeof s.componentDidMount &&
                          (t.flags |= 4194308),
                        (t.memoizedProps = i),
                        (t.memoizedState = u)),
                    (s.props = i),
                    (s.state = u),
                    (s.context = c),
                    (i = l))
                  : ('function' == typeof s.componentDidMount &&
                      (t.flags |= 4194308),
                    (i = !1));
            } else {
              (s = t.stateNode),
                _o(e, t),
                (l = t.memoizedProps),
                (c = t.type === t.elementType ? l : bo(t.type, l)),
                (s.props = c),
                (h = t.pendingProps),
                (d = s.context),
                (u = n.contextType),
                'object' === r(u) && null !== u
                  ? (u = Ao(u))
                  : (u = Li(t, (u = Ri(n) ? ji : Ti.current)));
              var g = n.getDerivedStateFromProps;
              (f =
                'function' == typeof g ||
                'function' == typeof s.getSnapshotBeforeUpdate) ||
                ('function' != typeof s.UNSAFE_componentWillReceiveProps &&
                  'function' != typeof s.componentWillReceiveProps) ||
                ((l !== h || d !== u) && Xo(t, s, i, u)),
                (Lo = !1),
                (d = t.memoizedState),
                (s.state = d),
                Vo(t, i, s, o);
              var p = t.memoizedState;
              l !== h || d !== p || Ni.current || Lo
                ? ('function' == typeof g &&
                    (Ho(t, n, g, i), (p = t.memoizedState)),
                  (c = Lo || Wo(t, n, c, i, d, p, u) || !1)
                    ? (f ||
                        ('function' != typeof s.UNSAFE_componentWillUpdate &&
                          'function' != typeof s.componentWillUpdate) ||
                        ('function' == typeof s.componentWillUpdate &&
                          s.componentWillUpdate(i, p, u),
                        'function' == typeof s.UNSAFE_componentWillUpdate &&
                          s.UNSAFE_componentWillUpdate(i, p, u)),
                      'function' == typeof s.componentDidUpdate &&
                        (t.flags |= 4),
                      'function' == typeof s.getSnapshotBeforeUpdate &&
                        (t.flags |= 1024))
                    : ('function' != typeof s.componentDidUpdate ||
                        (l === e.memoizedProps && d === e.memoizedState) ||
                        (t.flags |= 4),
                      'function' != typeof s.getSnapshotBeforeUpdate ||
                        (l === e.memoizedProps && d === e.memoizedState) ||
                        (t.flags |= 1024),
                      (t.memoizedProps = i),
                      (t.memoizedState = p)),
                  (s.props = i),
                  (s.state = p),
                  (s.context = u),
                  (i = c))
                : ('function' != typeof s.componentDidUpdate ||
                    (l === e.memoizedProps && d === e.memoizedState) ||
                    (t.flags |= 4),
                  'function' != typeof s.getSnapshotBeforeUpdate ||
                    (l === e.memoizedProps && d === e.memoizedState) ||
                    (t.flags |= 1024),
                  (i = !1));
            }
            return Ns(e, t, n, i, a, o);
          }
          function Ns(e, t, n, r, i, o) {
            As(e, t);
            var a = 0 != (128 & t.flags);
            if (!r && !a) return i && Bi(t, n, !1), qs(e, t, o);
            (r = t.stateNode), (ws.current = t);
            var s =
              a && 'function' != typeof n.getDerivedStateFromError
                ? null
                : r.render();
            return (
              (t.flags |= 1),
              null !== e && a
                ? ((t.child = Zo(t, e.child, null, o)),
                  (t.child = Zo(t, null, s, o)))
                : Cs(e, t, s, o),
              (t.memoizedState = r.state),
              i && Bi(t, n, !0),
              t.child
            );
          }
          function js(e) {
            var t = e.stateNode;
            t.pendingContext
              ? Ii(0, t.pendingContext, t.pendingContext !== t.context)
              : t.context && Ii(0, t.context, !1),
              aa(e, t.containerInfo);
          }
          function Ls(e, t, n, r, i) {
            return vo(), yo(i), (t.flags |= 256), Cs(e, t, n, r), t.child;
          }
          var Rs,
            _s,
            Is,
            Ds = { dehydrated: null, treeContext: null, retryLane: 0 };
          function zs(e) {
            return { baseLanes: e, cachePool: null, transitions: null };
          }
          function Bs(e, t, n) {
            var r,
              i = t.pendingProps,
              o = ca.current,
              s = !1,
              l = 0 != (128 & t.flags);
            if (
              ((r = l) ||
                (r = (null === e || null !== e.memoizedState) && 0 != (2 & o)),
              r
                ? ((s = !0), (t.flags &= -129))
                : (null !== e && null === e.memoizedState) || (o |= 1),
              Ai(ca, 1 & o),
              null === e)
            )
              return (
                fo(t),
                null !== (e = t.memoizedState) && null !== (e = e.dehydrated)
                  ? (0 == (1 & t.mode)
                      ? (t.lanes = 1)
                      : '$!' === e.data
                      ? (t.lanes = 8)
                      : (t.lanes = 1073741824),
                    null)
                  : ((l = i.children),
                    (e = i.fallback),
                    s
                      ? ((i = t.mode),
                        (s = t.child),
                        (l = { mode: 'hidden', children: l }),
                        0 == (1 & i) && null !== s
                          ? ((s.childLanes = 0), (s.pendingProps = l))
                          : (s = zu(l, i, 0, null)),
                        (e = Du(e, i, n, null)),
                        (s.return = t),
                        (e.return = t),
                        (s.sibling = e),
                        (t.child = s),
                        (t.child.memoizedState = zs(n)),
                        (t.memoizedState = Ds),
                        e)
                      : Vs(t, l))
              );
            if (null !== (o = e.memoizedState) && null !== (r = o.dehydrated))
              return (function (e, t, n, r, i, o, s) {
                if (n)
                  return 256 & t.flags
                    ? ((t.flags &= -257), Fs(e, t, s, (r = ds(Error(a(422))))))
                    : null !== t.memoizedState
                    ? ((t.child = e.child), (t.flags |= 128), null)
                    : ((o = r.fallback),
                      (i = t.mode),
                      (r = zu(
                        { mode: 'visible', children: r.children },
                        i,
                        0,
                        null
                      )),
                      ((o = Du(o, i, s, null)).flags |= 2),
                      (r.return = t),
                      (o.return = t),
                      (r.sibling = o),
                      (t.child = r),
                      0 != (1 & t.mode) && Zo(t, e.child, null, s),
                      (t.child.memoizedState = zs(s)),
                      (t.memoizedState = Ds),
                      o);
                if (0 == (1 & t.mode)) return Fs(e, t, s, null);
                if ('$!' === i.data) {
                  if ((r = i.nextSibling && i.nextSibling.dataset))
                    var l = r.dgst;
                  return (
                    (r = l),
                    Fs(e, t, s, (r = ds((o = Error(a(419))), r, void 0)))
                  );
                }
                if (((l = 0 != (s & e.childLanes)), xs || l)) {
                  if (null !== (r = Nl)) {
                    switch (s & -s) {
                      case 4:
                        i = 2;
                        break;
                      case 16:
                        i = 8;
                        break;
                      case 64:
                      case 128:
                      case 256:
                      case 512:
                      case 1024:
                      case 2048:
                      case 4096:
                      case 8192:
                      case 16384:
                      case 32768:
                      case 65536:
                      case 131072:
                      case 262144:
                      case 524288:
                      case 1048576:
                      case 2097152:
                      case 4194304:
                      case 8388608:
                      case 16777216:
                      case 33554432:
                      case 67108864:
                        i = 32;
                        break;
                      case 536870912:
                        i = 268435456;
                        break;
                      default:
                        i = 0;
                    }
                    0 !== (i = 0 != (i & (r.suspendedLanes | s)) ? 0 : i) &&
                      i !== o.retryLane &&
                      ((o.retryLane = i), jo(e, i), iu(r, e, i, -1));
                  }
                  return yu(), Fs(e, t, s, (r = ds(Error(a(421)))));
                }
                return '$?' === i.data
                  ? ((t.flags |= 128),
                    (t.child = e.child),
                    (t = Mu.bind(null, e)),
                    (i._reactRetry = t),
                    null)
                  : ((e = o.treeContext),
                    (oo = fi(i.nextSibling)),
                    (io = t),
                    (ao = !0),
                    (so = null),
                    null !== e &&
                      ((Ji[$i++] = Ki),
                      (Ji[$i++] = Zi),
                      (Ji[$i++] = Qi),
                      (Ki = e.id),
                      (Zi = e.overflow),
                      (Qi = t)),
                    (t = Vs(t, r.children)),
                    (t.flags |= 4096),
                    t);
              })(e, t, l, i, r, o, n);
            if (s) {
              (s = i.fallback), (l = t.mode), (r = (o = e.child).sibling);
              var u = { mode: 'hidden', children: i.children };
              return (
                0 == (1 & l) && t.child !== o
                  ? (((i = t.child).childLanes = 0),
                    (i.pendingProps = u),
                    (t.deletions = null))
                  : ((i = _u(o, u)).subtreeFlags = 14680064 & o.subtreeFlags),
                null !== r
                  ? (s = _u(r, s))
                  : ((s = Du(s, l, n, null)).flags |= 2),
                (s.return = t),
                (i.return = t),
                (i.sibling = s),
                (t.child = i),
                (i = s),
                (s = t.child),
                (l =
                  null === (l = e.child.memoizedState)
                    ? zs(n)
                    : {
                        baseLanes: l.baseLanes | n,
                        cachePool: null,
                        transitions: l.transitions,
                      }),
                (s.memoizedState = l),
                (s.childLanes = e.childLanes & ~n),
                (t.memoizedState = Ds),
                i
              );
            }
            return (
              (e = (s = e.child).sibling),
              (i = _u(s, { mode: 'visible', children: i.children })),
              0 == (1 & t.mode) && (i.lanes = n),
              (i.return = t),
              (i.sibling = null),
              null !== e &&
                (null === (n = t.deletions)
                  ? ((t.deletions = [e]), (t.flags |= 16))
                  : n.push(e)),
              (t.child = i),
              (t.memoizedState = null),
              i
            );
          }
          function Vs(e, t) {
            return (
              ((t = zu(
                { mode: 'visible', children: t },
                e.mode,
                0,
                null
              )).return = e),
              (e.child = t)
            );
          }
          function Fs(e, t, n, r) {
            return (
              null !== r && yo(r),
              Zo(t, e.child, null, n),
              ((e = Vs(t, t.pendingProps.children)).flags |= 2),
              (t.memoizedState = null),
              e
            );
          }
          function Us(e, t, n) {
            e.lanes |= t;
            var r = e.alternate;
            null !== r && (r.lanes |= t), Oo(e.return, t, n);
          }
          function Hs(e, t, n, r, i) {
            var o = e.memoizedState;
            null === o
              ? (e.memoizedState = {
                  isBackwards: t,
                  rendering: null,
                  renderingStartTime: 0,
                  last: r,
                  tail: n,
                  tailMode: i,
                })
              : ((o.isBackwards = t),
                (o.rendering = null),
                (o.renderingStartTime = 0),
                (o.last = r),
                (o.tail = n),
                (o.tailMode = i));
          }
          function Gs(e, t, n) {
            var r = t.pendingProps,
              i = r.revealOrder,
              o = r.tail;
            if ((Cs(e, t, r.children, n), 0 != (2 & (r = ca.current))))
              (r = (1 & r) | 2), (t.flags |= 128);
            else {
              if (null !== e && 0 != (128 & e.flags))
                e: for (e = t.child; null !== e; ) {
                  if (13 === e.tag) null !== e.memoizedState && Us(e, n, t);
                  else if (19 === e.tag) Us(e, n, t);
                  else if (null !== e.child) {
                    (e.child.return = e), (e = e.child);
                    continue;
                  }
                  if (e === t) break e;
                  for (; null === e.sibling; ) {
                    if (null === e.return || e.return === t) break e;
                    e = e.return;
                  }
                  (e.sibling.return = e.return), (e = e.sibling);
                }
              r &= 1;
            }
            if ((Ai(ca, r), 0 == (1 & t.mode))) t.memoizedState = null;
            else
              switch (i) {
                case 'forwards':
                  for (n = t.child, i = null; null !== n; )
                    null !== (e = n.alternate) && null === fa(e) && (i = n),
                      (n = n.sibling);
                  null === (n = i)
                    ? ((i = t.child), (t.child = null))
                    : ((i = n.sibling), (n.sibling = null)),
                    Hs(t, !1, i, n, o);
                  break;
                case 'backwards':
                  for (n = null, i = t.child, t.child = null; null !== i; ) {
                    if (null !== (e = i.alternate) && null === fa(e)) {
                      t.child = i;
                      break;
                    }
                    (e = i.sibling), (i.sibling = n), (n = i), (i = e);
                  }
                  Hs(t, !0, n, null, o);
                  break;
                case 'together':
                  Hs(t, !1, null, null, void 0);
                  break;
                default:
                  t.memoizedState = null;
              }
            return t.child;
          }
          function Ws(e, t) {
            0 == (1 & t.mode) &&
              null !== e &&
              ((e.alternate = null), (t.alternate = null), (t.flags |= 2));
          }
          function qs(e, t, n) {
            if (
              (null !== e && (t.dependencies = e.dependencies),
              (zl |= t.lanes),
              0 == (n & t.childLanes))
            )
              return null;
            if (null !== e && t.child !== e.child) throw Error(a(153));
            if (null !== t.child) {
              for (
                n = _u((e = t.child), e.pendingProps),
                  t.child = n,
                  n.return = t;
                null !== e.sibling;

              )
                (e = e.sibling),
                  ((n = n.sibling = _u(e, e.pendingProps)).return = t);
              n.sibling = null;
            }
            return t.child;
          }
          function Xs(e, t) {
            if (!ao)
              switch (e.tailMode) {
                case 'hidden':
                  t = e.tail;
                  for (var n = null; null !== t; )
                    null !== t.alternate && (n = t), (t = t.sibling);
                  null === n ? (e.tail = null) : (n.sibling = null);
                  break;
                case 'collapsed':
                  n = e.tail;
                  for (var r = null; null !== n; )
                    null !== n.alternate && (r = n), (n = n.sibling);
                  null === r
                    ? t || null === e.tail
                      ? (e.tail = null)
                      : (e.tail.sibling = null)
                    : (r.sibling = null);
              }
          }
          function Ys(e) {
            var t = null !== e.alternate && e.alternate.child === e.child,
              n = 0,
              r = 0;
            if (t)
              for (var i = e.child; null !== i; )
                (n |= i.lanes | i.childLanes),
                  (r |= 14680064 & i.subtreeFlags),
                  (r |= 14680064 & i.flags),
                  (i.return = e),
                  (i = i.sibling);
            else
              for (i = e.child; null !== i; )
                (n |= i.lanes | i.childLanes),
                  (r |= i.subtreeFlags),
                  (r |= i.flags),
                  (i.return = e),
                  (i = i.sibling);
            return (e.subtreeFlags |= r), (e.childLanes = n), t;
          }
          function Js(e, t, n) {
            var r = t.pendingProps;
            switch ((ro(t), t.tag)) {
              case 2:
              case 16:
              case 15:
              case 0:
              case 11:
              case 7:
              case 8:
              case 12:
              case 9:
              case 14:
                return Ys(t), null;
              case 1:
              case 17:
                return Ri(t.type) && _i(), Ys(t), null;
              case 3:
                return (
                  (r = t.stateNode),
                  sa(),
                  Pi(Ni),
                  Pi(Ti),
                  da(),
                  r.pendingContext &&
                    ((r.context = r.pendingContext), (r.pendingContext = null)),
                  (null !== e && null !== e.child) ||
                    (go(t)
                      ? (t.flags |= 4)
                      : null === e ||
                        (e.memoizedState.isDehydrated &&
                          0 == (256 & t.flags)) ||
                        ((t.flags |= 1024),
                        null !== so && (lu(so), (so = null)))),
                  Ys(t),
                  null
                );
              case 5:
                ua(t);
                var i = oa(ia.current);
                if (((n = t.type), null !== e && null != t.stateNode))
                  _s(e, t, n, r),
                    e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
                else {
                  if (!r) {
                    if (null === t.stateNode) throw Error(a(166));
                    return Ys(t), null;
                  }
                  if (((e = oa(na.current)), go(t))) {
                    (r = t.stateNode), (n = t.type);
                    var o = t.memoizedProps;
                    switch (
                      ((r[gi] = t), (r[pi] = o), (e = 0 != (1 & t.mode)), n)
                    ) {
                      case 'dialog':
                        Fr('cancel', r), Fr('close', r);
                        break;
                      case 'iframe':
                      case 'object':
                      case 'embed':
                        Fr('load', r);
                        break;
                      case 'video':
                      case 'audio':
                        for (i = 0; i < Dr.length; i++) Fr(Dr[i], r);
                        break;
                      case 'source':
                        Fr('error', r);
                        break;
                      case 'img':
                      case 'image':
                      case 'link':
                        Fr('error', r), Fr('load', r);
                        break;
                      case 'details':
                        Fr('toggle', r);
                        break;
                      case 'input':
                        K(r, o), Fr('invalid', r);
                        break;
                      case 'select':
                        (r._wrapperState = { wasMultiple: !!o.multiple }),
                          Fr('invalid', r);
                        break;
                      case 'textarea':
                        ae(r, o), Fr('invalid', r);
                    }
                    for (var s in (ke(n, o), (i = null), o))
                      if (o.hasOwnProperty(s)) {
                        var u = o[s];
                        'children' === s
                          ? 'string' == typeof u
                            ? r.textContent !== u &&
                              (!0 !== o.suppressHydrationWarning &&
                                ei(r.textContent, u, e),
                              (i = ['children', u]))
                            : 'number' == typeof u &&
                              r.textContent !== '' + u &&
                              (!0 !== o.suppressHydrationWarning &&
                                ei(r.textContent, u, e),
                              (i = ['children', '' + u]))
                          : l.hasOwnProperty(s) &&
                            null != u &&
                            'onScroll' === s &&
                            Fr('scroll', r);
                      }
                    switch (n) {
                      case 'input':
                        Y(r), te(r, o, !0);
                        break;
                      case 'textarea':
                        Y(r), le(r);
                        break;
                      case 'select':
                      case 'option':
                        break;
                      default:
                        'function' == typeof o.onClick && (r.onclick = ti);
                    }
                    (r = i), (t.updateQueue = r), null !== r && (t.flags |= 4);
                  } else {
                    (s = 9 === i.nodeType ? i : i.ownerDocument),
                      'http://www.w3.org/1999/xhtml' === e && (e = ue(n)),
                      'http://www.w3.org/1999/xhtml' === e
                        ? 'script' === n
                          ? (((e = s.createElement('div')).innerHTML =
                              '<script></script>'),
                            (e = e.removeChild(e.firstChild)))
                          : 'string' == typeof r.is
                          ? (e = s.createElement(n, { is: r.is }))
                          : ((e = s.createElement(n)),
                            'select' === n &&
                              ((s = e),
                              r.multiple
                                ? (s.multiple = !0)
                                : r.size && (s.size = r.size)))
                        : (e = s.createElementNS(e, n)),
                      (e[gi] = t),
                      (e[pi] = r),
                      Rs(e, t),
                      (t.stateNode = e);
                    e: {
                      switch (((s = we(n, r)), n)) {
                        case 'dialog':
                          Fr('cancel', e), Fr('close', e), (i = r);
                          break;
                        case 'iframe':
                        case 'object':
                        case 'embed':
                          Fr('load', e), (i = r);
                          break;
                        case 'video':
                        case 'audio':
                          for (i = 0; i < Dr.length; i++) Fr(Dr[i], e);
                          i = r;
                          break;
                        case 'source':
                          Fr('error', e), (i = r);
                          break;
                        case 'img':
                        case 'image':
                        case 'link':
                          Fr('error', e), Fr('load', e), (i = r);
                          break;
                        case 'details':
                          Fr('toggle', e), (i = r);
                          break;
                        case 'input':
                          K(e, r), (i = Q(e, r)), Fr('invalid', e);
                          break;
                        case 'option':
                        default:
                          i = r;
                          break;
                        case 'select':
                          (e._wrapperState = { wasMultiple: !!r.multiple }),
                            (i = B({}, r, { value: void 0 })),
                            Fr('invalid', e);
                          break;
                        case 'textarea':
                          ae(e, r), (i = oe(e, r)), Fr('invalid', e);
                      }
                      for (o in (ke(n, i), (u = i)))
                        if (u.hasOwnProperty(o)) {
                          var c = u[o];
                          'style' === o
                            ? me(e, c)
                            : 'dangerouslySetInnerHTML' === o
                            ? null != (c = c ? c.__html : void 0) && de(e, c)
                            : 'children' === o
                            ? 'string' == typeof c
                              ? ('textarea' !== n || '' !== c) && ge(e, c)
                              : 'number' == typeof c && ge(e, '' + c)
                            : 'suppressContentEditableWarning' !== o &&
                              'suppressHydrationWarning' !== o &&
                              'autoFocus' !== o &&
                              (l.hasOwnProperty(o)
                                ? null != c &&
                                  'onScroll' === o &&
                                  Fr('scroll', e)
                                : null != c && w(e, o, c, s));
                        }
                      switch (n) {
                        case 'input':
                          Y(e), te(e, r, !1);
                          break;
                        case 'textarea':
                          Y(e), le(e);
                          break;
                        case 'option':
                          null != r.value &&
                            e.setAttribute('value', '' + q(r.value));
                          break;
                        case 'select':
                          (e.multiple = !!r.multiple),
                            null != (o = r.value)
                              ? ie(e, !!r.multiple, o, !1)
                              : null != r.defaultValue &&
                                ie(e, !!r.multiple, r.defaultValue, !0);
                          break;
                        default:
                          'function' == typeof i.onClick && (e.onclick = ti);
                      }
                      switch (n) {
                        case 'button':
                        case 'input':
                        case 'select':
                        case 'textarea':
                          r = !!r.autoFocus;
                          break e;
                        case 'img':
                          r = !0;
                          break e;
                        default:
                          r = !1;
                      }
                    }
                    r && (t.flags |= 4);
                  }
                  null !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
                }
                return Ys(t), null;
              case 6:
                if (e && null != t.stateNode) Is(0, t, e.memoizedProps, r);
                else {
                  if ('string' != typeof r && null === t.stateNode)
                    throw Error(a(166));
                  if (((n = oa(ia.current)), oa(na.current), go(t))) {
                    if (
                      ((r = t.stateNode),
                      (n = t.memoizedProps),
                      (r[gi] = t),
                      (o = r.nodeValue !== n) && null !== (e = io))
                    )
                      switch (e.tag) {
                        case 3:
                          ei(r.nodeValue, n, 0 != (1 & e.mode));
                          break;
                        case 5:
                          !0 !== e.memoizedProps.suppressHydrationWarning &&
                            ei(r.nodeValue, n, 0 != (1 & e.mode));
                      }
                    o && (t.flags |= 4);
                  } else
                    ((r = (
                      9 === n.nodeType ? n : n.ownerDocument
                    ).createTextNode(r))[gi] = t),
                      (t.stateNode = r);
                }
                return Ys(t), null;
              case 13:
                if (
                  (Pi(ca),
                  (r = t.memoizedState),
                  null === e ||
                    (null !== e.memoizedState &&
                      null !== e.memoizedState.dehydrated))
                ) {
                  if (
                    ao &&
                    null !== oo &&
                    0 != (1 & t.mode) &&
                    0 == (128 & t.flags)
                  )
                    po(), vo(), (t.flags |= 98560), (o = !1);
                  else if (((o = go(t)), null !== r && null !== r.dehydrated)) {
                    if (null === e) {
                      if (!o) throw Error(a(318));
                      if (
                        !(o =
                          null !== (o = t.memoizedState) ? o.dehydrated : null)
                      )
                        throw Error(a(317));
                      o[gi] = t;
                    } else
                      vo(),
                        0 == (128 & t.flags) && (t.memoizedState = null),
                        (t.flags |= 4);
                    Ys(t), (o = !1);
                  } else null !== so && (lu(so), (so = null)), (o = !0);
                  if (!o) return 65536 & t.flags ? t : null;
                }
                return 0 != (128 & t.flags)
                  ? ((t.lanes = n), t)
                  : ((r = null !== r) !==
                      (null !== e && null !== e.memoizedState) &&
                      r &&
                      ((t.child.flags |= 8192),
                      0 != (1 & t.mode) &&
                        (null === e || 0 != (1 & ca.current)
                          ? 0 === Il && (Il = 3)
                          : yu())),
                    null !== t.updateQueue && (t.flags |= 4),
                    Ys(t),
                    null);
              case 4:
                return (
                  sa(), null === e && Gr(t.stateNode.containerInfo), Ys(t), null
                );
              case 10:
                return Eo(t.type._context), Ys(t), null;
              case 19:
                if ((Pi(ca), null === (o = t.memoizedState)))
                  return Ys(t), null;
                if (((r = 0 != (128 & t.flags)), null === (s = o.rendering)))
                  if (r) Xs(o, !1);
                  else {
                    if (0 !== Il || (null !== e && 0 != (128 & e.flags)))
                      for (e = t.child; null !== e; ) {
                        if (null !== (s = fa(e))) {
                          for (
                            t.flags |= 128,
                              Xs(o, !1),
                              null !== (r = s.updateQueue) &&
                                ((t.updateQueue = r), (t.flags |= 4)),
                              t.subtreeFlags = 0,
                              r = n,
                              n = t.child;
                            null !== n;

                          )
                            (e = r),
                              ((o = n).flags &= 14680066),
                              null === (s = o.alternate)
                                ? ((o.childLanes = 0),
                                  (o.lanes = e),
                                  (o.child = null),
                                  (o.subtreeFlags = 0),
                                  (o.memoizedProps = null),
                                  (o.memoizedState = null),
                                  (o.updateQueue = null),
                                  (o.dependencies = null),
                                  (o.stateNode = null))
                                : ((o.childLanes = s.childLanes),
                                  (o.lanes = s.lanes),
                                  (o.child = s.child),
                                  (o.subtreeFlags = 0),
                                  (o.deletions = null),
                                  (o.memoizedProps = s.memoizedProps),
                                  (o.memoizedState = s.memoizedState),
                                  (o.updateQueue = s.updateQueue),
                                  (o.type = s.type),
                                  (e = s.dependencies),
                                  (o.dependencies =
                                    null === e
                                      ? null
                                      : {
                                          lanes: e.lanes,
                                          firstContext: e.firstContext,
                                        })),
                              (n = n.sibling);
                          return Ai(ca, (1 & ca.current) | 2), t.child;
                        }
                        e = e.sibling;
                      }
                    null !== o.tail &&
                      Ze() > Gl &&
                      ((t.flags |= 128),
                      (r = !0),
                      Xs(o, !1),
                      (t.lanes = 4194304));
                  }
                else {
                  if (!r)
                    if (null !== (e = fa(s))) {
                      if (
                        ((t.flags |= 128),
                        (r = !0),
                        null !== (n = e.updateQueue) &&
                          ((t.updateQueue = n), (t.flags |= 4)),
                        Xs(o, !0),
                        null === o.tail &&
                          'hidden' === o.tailMode &&
                          !s.alternate &&
                          !ao)
                      )
                        return Ys(t), null;
                    } else
                      2 * Ze() - o.renderingStartTime > Gl &&
                        1073741824 !== n &&
                        ((t.flags |= 128),
                        (r = !0),
                        Xs(o, !1),
                        (t.lanes = 4194304));
                  o.isBackwards
                    ? ((s.sibling = t.child), (t.child = s))
                    : (null !== (n = o.last) ? (n.sibling = s) : (t.child = s),
                      (o.last = s));
                }
                return null !== o.tail
                  ? ((t = o.tail),
                    (o.rendering = t),
                    (o.tail = t.sibling),
                    (o.renderingStartTime = Ze()),
                    (t.sibling = null),
                    (n = ca.current),
                    Ai(ca, r ? (1 & n) | 2 : 1 & n),
                    t)
                  : (Ys(t), null);
              case 22:
              case 23:
                return (
                  du(),
                  (r = null !== t.memoizedState),
                  null !== e &&
                    (null !== e.memoizedState) !== r &&
                    (t.flags |= 8192),
                  r && 0 != (1 & t.mode)
                    ? 0 != (1073741824 & Rl) &&
                      (Ys(t), 6 & t.subtreeFlags && (t.flags |= 8192))
                    : Ys(t),
                  null
                );
              case 24:
              case 25:
                return null;
            }
            throw Error(a(156, t.tag));
          }
          function $s(e, t) {
            switch ((ro(t), t.tag)) {
              case 1:
                return (
                  Ri(t.type) && _i(),
                  65536 & (e = t.flags)
                    ? ((t.flags = (-65537 & e) | 128), t)
                    : null
                );
              case 3:
                return (
                  sa(),
                  Pi(Ni),
                  Pi(Ti),
                  da(),
                  0 != (65536 & (e = t.flags)) && 0 == (128 & e)
                    ? ((t.flags = (-65537 & e) | 128), t)
                    : null
                );
              case 5:
                return ua(t), null;
              case 13:
                if (
                  (Pi(ca),
                  null !== (e = t.memoizedState) && null !== e.dehydrated)
                ) {
                  if (null === t.alternate) throw Error(a(340));
                  vo();
                }
                return 65536 & (e = t.flags)
                  ? ((t.flags = (-65537 & e) | 128), t)
                  : null;
              case 19:
                return Pi(ca), null;
              case 4:
                return sa(), null;
              case 10:
                return Eo(t.type._context), null;
              case 22:
              case 23:
                return du(), null;
              default:
                return null;
            }
          }
          (Rs = function (e, t) {
            for (var n = t.child; null !== n; ) {
              if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
              else if (4 !== n.tag && null !== n.child) {
                (n.child.return = n), (n = n.child);
                continue;
              }
              if (n === t) break;
              for (; null === n.sibling; ) {
                if (null === n.return || n.return === t) return;
                n = n.return;
              }
              (n.sibling.return = n.return), (n = n.sibling);
            }
          }),
            (_s = function (e, t, n, r) {
              var i = e.memoizedProps;
              if (i !== r) {
                (e = t.stateNode), oa(na.current);
                var o,
                  a = null;
                switch (n) {
                  case 'input':
                    (i = Q(e, i)), (r = Q(e, r)), (a = []);
                    break;
                  case 'select':
                    (i = B({}, i, { value: void 0 })),
                      (r = B({}, r, { value: void 0 })),
                      (a = []);
                    break;
                  case 'textarea':
                    (i = oe(e, i)), (r = oe(e, r)), (a = []);
                    break;
                  default:
                    'function' != typeof i.onClick &&
                      'function' == typeof r.onClick &&
                      (e.onclick = ti);
                }
                for (c in (ke(n, r), (n = null), i))
                  if (
                    !r.hasOwnProperty(c) &&
                    i.hasOwnProperty(c) &&
                    null != i[c]
                  )
                    if ('style' === c) {
                      var s = i[c];
                      for (o in s)
                        s.hasOwnProperty(o) && (n || (n = {}), (n[o] = ''));
                    } else
                      'dangerouslySetInnerHTML' !== c &&
                        'children' !== c &&
                        'suppressContentEditableWarning' !== c &&
                        'suppressHydrationWarning' !== c &&
                        'autoFocus' !== c &&
                        (l.hasOwnProperty(c)
                          ? a || (a = [])
                          : (a = a || []).push(c, null));
                for (c in r) {
                  var u = r[c];
                  if (
                    ((s = null != i ? i[c] : void 0),
                    r.hasOwnProperty(c) && u !== s && (null != u || null != s))
                  )
                    if ('style' === c)
                      if (s) {
                        for (o in s)
                          !s.hasOwnProperty(o) ||
                            (u && u.hasOwnProperty(o)) ||
                            (n || (n = {}), (n[o] = ''));
                        for (o in u)
                          u.hasOwnProperty(o) &&
                            s[o] !== u[o] &&
                            (n || (n = {}), (n[o] = u[o]));
                      } else n || (a || (a = []), a.push(c, n)), (n = u);
                    else
                      'dangerouslySetInnerHTML' === c
                        ? ((u = u ? u.__html : void 0),
                          (s = s ? s.__html : void 0),
                          null != u && s !== u && (a = a || []).push(c, u))
                        : 'children' === c
                        ? ('string' != typeof u && 'number' != typeof u) ||
                          (a = a || []).push(c, '' + u)
                        : 'suppressContentEditableWarning' !== c &&
                          'suppressHydrationWarning' !== c &&
                          (l.hasOwnProperty(c)
                            ? (null != u && 'onScroll' === c && Fr('scroll', e),
                              a || s === u || (a = []))
                            : (a = a || []).push(c, u));
                }
                n && (a = a || []).push('style', n);
                var c = a;
                (t.updateQueue = c) && (t.flags |= 4);
              }
            }),
            (Is = function (e, t, n, r) {
              n !== r && (t.flags |= 4);
            });
          var Qs = !1,
            Ks = !1,
            Zs = 'function' == typeof WeakSet ? WeakSet : Set,
            el = null;
          function tl(e, t) {
            var n = e.ref;
            if (null !== n)
              if ('function' == typeof n)
                try {
                  n(null);
                } catch (n) {
                  Ou(e, t, n);
                }
              else n.current = null;
          }
          function nl(e, t, n) {
            try {
              n();
            } catch (n) {
              Ou(e, t, n);
            }
          }
          var rl = !1;
          function il(e, t, n) {
            var r = t.updateQueue;
            if (null !== (r = null !== r ? r.lastEffect : null)) {
              var i = (r = r.next);
              do {
                if ((i.tag & e) === e) {
                  var o = i.destroy;
                  (i.destroy = void 0), void 0 !== o && nl(t, n, o);
                }
                i = i.next;
              } while (i !== r);
            }
          }
          function ol(e, t) {
            if (
              null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)
            ) {
              var n = (t = t.next);
              do {
                if ((n.tag & e) === e) {
                  var r = n.create;
                  n.destroy = r();
                }
                n = n.next;
              } while (n !== t);
            }
          }
          function al(e) {
            var t = e.ref;
            if (null !== t) {
              var n = e.stateNode;
              e.tag, (e = n), 'function' == typeof t ? t(e) : (t.current = e);
            }
          }
          function sl(e) {
            var t = e.alternate;
            null !== t && ((e.alternate = null), sl(t)),
              (e.child = null),
              (e.deletions = null),
              (e.sibling = null),
              5 === e.tag &&
                null !== (t = e.stateNode) &&
                (delete t[gi],
                delete t[pi],
                delete t[yi],
                delete t[mi],
                delete t[bi]),
              (e.stateNode = null),
              (e.return = null),
              (e.dependencies = null),
              (e.memoizedProps = null),
              (e.memoizedState = null),
              (e.pendingProps = null),
              (e.stateNode = null),
              (e.updateQueue = null);
          }
          function ll(e) {
            return 5 === e.tag || 3 === e.tag || 4 === e.tag;
          }
          function ul(e) {
            e: for (;;) {
              for (; null === e.sibling; ) {
                if (null === e.return || ll(e.return)) return null;
                e = e.return;
              }
              for (
                e.sibling.return = e.return, e = e.sibling;
                5 !== e.tag && 6 !== e.tag && 18 !== e.tag;

              ) {
                if (2 & e.flags) continue e;
                if (null === e.child || 4 === e.tag) continue e;
                (e.child.return = e), (e = e.child);
              }
              if (!(2 & e.flags)) return e.stateNode;
            }
          }
          function cl(e, t, n) {
            var r = e.tag;
            if (5 === r || 6 === r)
              (e = e.stateNode),
                t
                  ? 8 === n.nodeType
                    ? n.parentNode.insertBefore(e, t)
                    : n.insertBefore(e, t)
                  : (8 === n.nodeType
                      ? (t = n.parentNode).insertBefore(e, n)
                      : (t = n).appendChild(e),
                    null != (n = n._reactRootContainer) ||
                      null !== t.onclick ||
                      (t.onclick = ti));
            else if (4 !== r && null !== (e = e.child))
              for (cl(e, t, n), e = e.sibling; null !== e; )
                cl(e, t, n), (e = e.sibling);
          }
          function fl(e, t, n) {
            var r = e.tag;
            if (5 === r || 6 === r)
              (e = e.stateNode), t ? n.insertBefore(e, t) : n.appendChild(e);
            else if (4 !== r && null !== (e = e.child))
              for (fl(e, t, n), e = e.sibling; null !== e; )
                fl(e, t, n), (e = e.sibling);
          }
          var hl = null,
            dl = !1;
          function gl(e, t, n) {
            for (n = n.child; null !== n; ) pl(e, t, n), (n = n.sibling);
          }
          function pl(e, t, n) {
            if (st && 'function' == typeof st.onCommitFiberUnmount)
              try {
                st.onCommitFiberUnmount(at, n);
              } catch (e) {}
            switch (n.tag) {
              case 5:
                Ks || tl(n, t);
              case 6:
                var r = hl,
                  i = dl;
                (hl = null),
                  gl(e, t, n),
                  (dl = i),
                  null !== (hl = r) &&
                    (dl
                      ? ((e = hl),
                        (n = n.stateNode),
                        8 === e.nodeType
                          ? e.parentNode.removeChild(n)
                          : e.removeChild(n))
                      : hl.removeChild(n.stateNode));
                break;
              case 18:
                null !== hl &&
                  (dl
                    ? ((e = hl),
                      (n = n.stateNode),
                      8 === e.nodeType
                        ? ci(e.parentNode, n)
                        : 1 === e.nodeType && ci(e, n),
                      Gt(e))
                    : ci(hl, n.stateNode));
                break;
              case 4:
                (r = hl),
                  (i = dl),
                  (hl = n.stateNode.containerInfo),
                  (dl = !0),
                  gl(e, t, n),
                  (hl = r),
                  (dl = i);
                break;
              case 0:
              case 11:
              case 14:
              case 15:
                if (
                  !Ks &&
                  null !== (r = n.updateQueue) &&
                  null !== (r = r.lastEffect)
                ) {
                  i = r = r.next;
                  do {
                    var o = i,
                      a = o.destroy;
                    (o = o.tag),
                      void 0 !== a &&
                        (0 != (2 & o) || 0 != (4 & o)) &&
                        nl(n, t, a),
                      (i = i.next);
                  } while (i !== r);
                }
                gl(e, t, n);
                break;
              case 1:
                if (
                  !Ks &&
                  (tl(n, t),
                  'function' == typeof (r = n.stateNode).componentWillUnmount)
                )
                  try {
                    (r.props = n.memoizedProps),
                      (r.state = n.memoizedState),
                      r.componentWillUnmount();
                  } catch (e) {
                    Ou(n, t, e);
                  }
                gl(e, t, n);
                break;
              case 21:
                gl(e, t, n);
                break;
              case 22:
                1 & n.mode
                  ? ((Ks = (r = Ks) || null !== n.memoizedState),
                    gl(e, t, n),
                    (Ks = r))
                  : gl(e, t, n);
                break;
              default:
                gl(e, t, n);
            }
          }
          function vl(e) {
            var t = e.updateQueue;
            if (null !== t) {
              e.updateQueue = null;
              var n = e.stateNode;
              null === n && (n = e.stateNode = new Zs()),
                t.forEach(function (t) {
                  var r = Tu.bind(null, e, t);
                  n.has(t) || (n.add(t), t.then(r, r));
                });
            }
          }
          function yl(e, t) {
            var n = t.deletions;
            if (null !== n)
              for (var r = 0; r < n.length; r++) {
                var i = n[r];
                try {
                  var o = e,
                    s = t,
                    l = s;
                  e: for (; null !== l; ) {
                    switch (l.tag) {
                      case 5:
                        (hl = l.stateNode), (dl = !1);
                        break e;
                      case 3:
                      case 4:
                        (hl = l.stateNode.containerInfo), (dl = !0);
                        break e;
                    }
                    l = l.return;
                  }
                  if (null === hl) throw Error(a(160));
                  pl(o, s, i), (hl = null), (dl = !1);
                  var u = i.alternate;
                  null !== u && (u.return = null), (i.return = null);
                } catch (e) {
                  Ou(i, t, e);
                }
              }
            if (12854 & t.subtreeFlags)
              for (t = t.child; null !== t; ) ml(t, e), (t = t.sibling);
          }
          function ml(e, t) {
            var n = e.alternate,
              r = e.flags;
            switch (e.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                if ((yl(t, e), bl(e), 4 & r)) {
                  try {
                    il(3, e, e.return), ol(3, e);
                  } catch (t) {
                    Ou(e, e.return, t);
                  }
                  try {
                    il(5, e, e.return);
                  } catch (t) {
                    Ou(e, e.return, t);
                  }
                }
                break;
              case 1:
                yl(t, e), bl(e), 512 & r && null !== n && tl(n, n.return);
                break;
              case 5:
                if (
                  (yl(t, e),
                  bl(e),
                  512 & r && null !== n && tl(n, n.return),
                  32 & e.flags)
                ) {
                  var i = e.stateNode;
                  try {
                    ge(i, '');
                  } catch (t) {
                    Ou(e, e.return, t);
                  }
                }
                if (4 & r && null != (i = e.stateNode)) {
                  var o = e.memoizedProps,
                    s = null !== n ? n.memoizedProps : o,
                    l = e.type,
                    u = e.updateQueue;
                  if (((e.updateQueue = null), null !== u))
                    try {
                      'input' === l &&
                        'radio' === o.type &&
                        null != o.name &&
                        Z(i, o),
                        we(l, s);
                      var c = we(l, o);
                      for (s = 0; s < u.length; s += 2) {
                        var f = u[s],
                          h = u[s + 1];
                        'style' === f
                          ? me(i, h)
                          : 'dangerouslySetInnerHTML' === f
                          ? de(i, h)
                          : 'children' === f
                          ? ge(i, h)
                          : w(i, f, h, c);
                      }
                      switch (l) {
                        case 'input':
                          ee(i, o);
                          break;
                        case 'textarea':
                          se(i, o);
                          break;
                        case 'select':
                          var d = i._wrapperState.wasMultiple;
                          i._wrapperState.wasMultiple = !!o.multiple;
                          var g = o.value;
                          null != g
                            ? ie(i, !!o.multiple, g, !1)
                            : d !== !!o.multiple &&
                              (null != o.defaultValue
                                ? ie(i, !!o.multiple, o.defaultValue, !0)
                                : ie(
                                    i,
                                    !!o.multiple,
                                    o.multiple ? [] : '',
                                    !1
                                  ));
                      }
                      i[pi] = o;
                    } catch (t) {
                      Ou(e, e.return, t);
                    }
                }
                break;
              case 6:
                if ((yl(t, e), bl(e), 4 & r)) {
                  if (null === e.stateNode) throw Error(a(162));
                  (i = e.stateNode), (o = e.memoizedProps);
                  try {
                    i.nodeValue = o;
                  } catch (t) {
                    Ou(e, e.return, t);
                  }
                }
                break;
              case 3:
                if (
                  (yl(t, e),
                  bl(e),
                  4 & r && null !== n && n.memoizedState.isDehydrated)
                )
                  try {
                    Gt(t.containerInfo);
                  } catch (t) {
                    Ou(e, e.return, t);
                  }
                break;
              case 4:
              default:
                yl(t, e), bl(e);
                break;
              case 13:
                yl(t, e),
                  bl(e),
                  8192 & (i = e.child).flags &&
                    ((o = null !== i.memoizedState),
                    (i.stateNode.isHidden = o),
                    !o ||
                      (null !== i.alternate &&
                        null !== i.alternate.memoizedState) ||
                      (Hl = Ze())),
                  4 & r && vl(e);
                break;
              case 22:
                if (
                  ((f = null !== n && null !== n.memoizedState),
                  1 & e.mode
                    ? ((Ks = (c = Ks) || f), yl(t, e), (Ks = c))
                    : yl(t, e),
                  bl(e),
                  8192 & r)
                ) {
                  if (
                    ((c = null !== e.memoizedState),
                    (e.stateNode.isHidden = c) && !f && 0 != (1 & e.mode))
                  )
                    for (el = e, f = e.child; null !== f; ) {
                      for (h = el = f; null !== el; ) {
                        switch (((g = (d = el).child), d.tag)) {
                          case 0:
                          case 11:
                          case 14:
                          case 15:
                            il(4, d, d.return);
                            break;
                          case 1:
                            tl(d, d.return);
                            var p = d.stateNode;
                            if ('function' == typeof p.componentWillUnmount) {
                              (r = d), (n = d.return);
                              try {
                                (t = r),
                                  (p.props = t.memoizedProps),
                                  (p.state = t.memoizedState),
                                  p.componentWillUnmount();
                              } catch (e) {
                                Ou(r, n, e);
                              }
                            }
                            break;
                          case 5:
                            tl(d, d.return);
                            break;
                          case 22:
                            if (null !== d.memoizedState) {
                              Cl(h);
                              continue;
                            }
                        }
                        null !== g ? ((g.return = d), (el = g)) : Cl(h);
                      }
                      f = f.sibling;
                    }
                  e: for (f = null, h = e; ; ) {
                    if (5 === h.tag) {
                      if (null === f) {
                        f = h;
                        try {
                          (i = h.stateNode),
                            c
                              ? 'function' == typeof (o = i.style).setProperty
                                ? o.setProperty('display', 'none', 'important')
                                : (o.display = 'none')
                              : ((l = h.stateNode),
                                (s =
                                  null != (u = h.memoizedProps.style) &&
                                  u.hasOwnProperty('display')
                                    ? u.display
                                    : null),
                                (l.style.display = ye('display', s)));
                        } catch (t) {
                          Ou(e, e.return, t);
                        }
                      }
                    } else if (6 === h.tag) {
                      if (null === f)
                        try {
                          h.stateNode.nodeValue = c ? '' : h.memoizedProps;
                        } catch (t) {
                          Ou(e, e.return, t);
                        }
                    } else if (
                      ((22 !== h.tag && 23 !== h.tag) ||
                        null === h.memoizedState ||
                        h === e) &&
                      null !== h.child
                    ) {
                      (h.child.return = h), (h = h.child);
                      continue;
                    }
                    if (h === e) break e;
                    for (; null === h.sibling; ) {
                      if (null === h.return || h.return === e) break e;
                      f === h && (f = null), (h = h.return);
                    }
                    f === h && (f = null),
                      (h.sibling.return = h.return),
                      (h = h.sibling);
                  }
                }
                break;
              case 19:
                yl(t, e), bl(e), 4 & r && vl(e);
              case 21:
            }
          }
          function bl(e) {
            var t = e.flags;
            if (2 & t) {
              try {
                e: {
                  for (var n = e.return; null !== n; ) {
                    if (ll(n)) {
                      var r = n;
                      break e;
                    }
                    n = n.return;
                  }
                  throw Error(a(160));
                }
                switch (r.tag) {
                  case 5:
                    var i = r.stateNode;
                    32 & r.flags && (ge(i, ''), (r.flags &= -33)),
                      fl(e, ul(e), i);
                    break;
                  case 3:
                  case 4:
                    var o = r.stateNode.containerInfo;
                    cl(e, ul(e), o);
                    break;
                  default:
                    throw Error(a(161));
                }
              } catch (t) {
                Ou(e, e.return, t);
              }
              e.flags &= -3;
            }
            4096 & t && (e.flags &= -4097);
          }
          function kl(e, t, n) {
            (el = e), wl(e, t, n);
          }
          function wl(e, t, n) {
            for (var r = 0 != (1 & e.mode); null !== el; ) {
              var i = el,
                o = i.child;
              if (22 === i.tag && r) {
                var a = null !== i.memoizedState || Qs;
                if (!a) {
                  var s = i.alternate,
                    l = (null !== s && null !== s.memoizedState) || Ks;
                  s = Qs;
                  var u = Ks;
                  if (((Qs = a), (Ks = l) && !u))
                    for (el = i; null !== el; )
                      (l = (a = el).child),
                        22 === a.tag && null !== a.memoizedState
                          ? Sl(i)
                          : null !== l
                          ? ((l.return = a), (el = l))
                          : Sl(i);
                  for (; null !== o; ) (el = o), wl(o, t, n), (o = o.sibling);
                  (el = i), (Qs = s), (Ks = u);
                }
                xl(e);
              } else
                0 != (8772 & i.subtreeFlags) && null !== o
                  ? ((o.return = i), (el = o))
                  : xl(e);
            }
          }
          function xl(e) {
            for (; null !== el; ) {
              var t = el;
              if (0 != (8772 & t.flags)) {
                var n = t.alternate;
                try {
                  if (0 != (8772 & t.flags))
                    switch (t.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Ks || ol(5, t);
                        break;
                      case 1:
                        var r = t.stateNode;
                        if (4 & t.flags && !Ks)
                          if (null === n) r.componentDidMount();
                          else {
                            var i =
                              t.elementType === t.type
                                ? n.memoizedProps
                                : bo(t.type, n.memoizedProps);
                            r.componentDidUpdate(
                              i,
                              n.memoizedState,
                              r.__reactInternalSnapshotBeforeUpdate
                            );
                          }
                        var o = t.updateQueue;
                        null !== o && Fo(t, o, r);
                        break;
                      case 3:
                        var s = t.updateQueue;
                        if (null !== s) {
                          if (((n = null), null !== t.child))
                            switch (t.child.tag) {
                              case 5:
                              case 1:
                                n = t.child.stateNode;
                            }
                          Fo(t, s, n);
                        }
                        break;
                      case 5:
                        var l = t.stateNode;
                        if (null === n && 4 & t.flags) {
                          n = l;
                          var u = t.memoizedProps;
                          switch (t.type) {
                            case 'button':
                            case 'input':
                            case 'select':
                            case 'textarea':
                              u.autoFocus && n.focus();
                              break;
                            case 'img':
                              u.src && (n.src = u.src);
                          }
                        }
                        break;
                      case 6:
                      case 4:
                      case 12:
                      case 19:
                      case 17:
                      case 21:
                      case 22:
                      case 23:
                      case 25:
                        break;
                      case 13:
                        if (null === t.memoizedState) {
                          var c = t.alternate;
                          if (null !== c) {
                            var f = c.memoizedState;
                            if (null !== f) {
                              var h = f.dehydrated;
                              null !== h && Gt(h);
                            }
                          }
                        }
                        break;
                      default:
                        throw Error(a(163));
                    }
                  Ks || (512 & t.flags && al(t));
                } catch (e) {
                  Ou(t, t.return, e);
                }
              }
              if (t === e) {
                el = null;
                break;
              }
              if (null !== (n = t.sibling)) {
                (n.return = t.return), (el = n);
                break;
              }
              el = t.return;
            }
          }
          function Cl(e) {
            for (; null !== el; ) {
              var t = el;
              if (t === e) {
                el = null;
                break;
              }
              var n = t.sibling;
              if (null !== n) {
                (n.return = t.return), (el = n);
                break;
              }
              el = t.return;
            }
          }
          function Sl(e) {
            for (; null !== el; ) {
              var t = el;
              try {
                switch (t.tag) {
                  case 0:
                  case 11:
                  case 15:
                    var n = t.return;
                    try {
                      ol(4, t);
                    } catch (e) {
                      Ou(t, n, e);
                    }
                    break;
                  case 1:
                    var r = t.stateNode;
                    if ('function' == typeof r.componentDidMount) {
                      var i = t.return;
                      try {
                        r.componentDidMount();
                      } catch (e) {
                        Ou(t, i, e);
                      }
                    }
                    var o = t.return;
                    try {
                      al(t);
                    } catch (e) {
                      Ou(t, o, e);
                    }
                    break;
                  case 5:
                    var a = t.return;
                    try {
                      al(t);
                    } catch (e) {
                      Ou(t, a, e);
                    }
                }
              } catch (e) {
                Ou(t, t.return, e);
              }
              if (t === e) {
                el = null;
                break;
              }
              var s = t.sibling;
              if (null !== s) {
                (s.return = t.return), (el = s);
                break;
              }
              el = t.return;
            }
          }
          var El,
            Ol = Math.ceil,
            Pl = x.ReactCurrentDispatcher,
            Al = x.ReactCurrentOwner,
            Ml = x.ReactCurrentBatchConfig,
            Tl = 0,
            Nl = null,
            jl = null,
            Ll = 0,
            Rl = 0,
            _l = Oi(0),
            Il = 0,
            Dl = null,
            zl = 0,
            Bl = 0,
            Vl = 0,
            Fl = null,
            Ul = null,
            Hl = 0,
            Gl = 1 / 0,
            Wl = null,
            ql = !1,
            Xl = null,
            Yl = null,
            Jl = !1,
            $l = null,
            Ql = 0,
            Kl = 0,
            Zl = null,
            eu = -1,
            tu = 0;
          function nu() {
            return 0 != (6 & Tl) ? Ze() : -1 !== eu ? eu : (eu = Ze());
          }
          function ru(e) {
            return 0 == (1 & e.mode)
              ? 1
              : 0 != (2 & Tl) && 0 !== Ll
              ? Ll & -Ll
              : null !== mo.transition
              ? (0 === tu && (tu = yt()), tu)
              : 0 !== (e = wt)
              ? e
              : (e = void 0 === (e = window.event) ? 16 : Kt(e.type));
          }
          function iu(e, t, n, r) {
            if (50 < Kl) throw ((Kl = 0), (Zl = null), Error(a(185)));
            bt(e, n, r),
              (0 != (2 & Tl) && e === Nl) ||
                (e === Nl &&
                  (0 == (2 & Tl) && (Bl |= n), 4 === Il && uu(e, Ll)),
                ou(e, r),
                1 === n &&
                  0 === Tl &&
                  0 == (1 & t.mode) &&
                  ((Gl = Ze() + 500), Fi && Gi()));
          }
          function ou(e, t) {
            var n = e.callbackNode;
            !(function (e, t) {
              for (
                var n = e.suspendedLanes,
                  r = e.pingedLanes,
                  i = e.expirationTimes,
                  o = e.pendingLanes;
                0 < o;

              ) {
                var a = 31 - lt(o),
                  s = 1 << a,
                  l = i[a];
                -1 === l
                  ? (0 != (s & n) && 0 == (s & r)) || (i[a] = pt(s, t))
                  : l <= t && (e.expiredLanes |= s),
                  (o &= ~s);
              }
            })(e, t);
            var r = gt(e, e === Nl ? Ll : 0);
            if (0 === r)
              null !== n && $e(n),
                (e.callbackNode = null),
                (e.callbackPriority = 0);
            else if (((t = r & -r), e.callbackPriority !== t)) {
              if ((null != n && $e(n), 1 === t))
                0 === e.tag
                  ? (function (e) {
                      (Fi = !0), Hi(e);
                    })(cu.bind(null, e))
                  : Hi(cu.bind(null, e)),
                  li(function () {
                    0 == (6 & Tl) && Gi();
                  }),
                  (n = null);
              else {
                switch (xt(r)) {
                  case 1:
                    n = tt;
                    break;
                  case 4:
                    n = nt;
                    break;
                  case 16:
                  default:
                    n = rt;
                    break;
                  case 536870912:
                    n = ot;
                }
                n = Nu(n, au.bind(null, e));
              }
              (e.callbackPriority = t), (e.callbackNode = n);
            }
          }
          function au(e, t) {
            if (((eu = -1), (tu = 0), 0 != (6 & Tl))) throw Error(a(327));
            var n = e.callbackNode;
            if (Su() && e.callbackNode !== n) return null;
            var r = gt(e, e === Nl ? Ll : 0);
            if (0 === r) return null;
            if (0 != (30 & r) || 0 != (r & e.expiredLanes) || t) t = mu(e, r);
            else {
              t = r;
              var i = Tl;
              Tl |= 2;
              var o = vu();
              for (
                (Nl === e && Ll === t) ||
                ((Wl = null), (Gl = Ze() + 500), gu(e, t));
                ;

              )
                try {
                  ku();
                  break;
                } catch (t) {
                  pu(e, t);
                }
              So(),
                (Pl.current = o),
                (Tl = i),
                null !== jl ? (t = 0) : ((Nl = null), (Ll = 0), (t = Il));
            }
            if (0 !== t) {
              if (
                (2 === t && 0 !== (i = vt(e)) && ((r = i), (t = su(e, i))),
                1 === t)
              )
                throw ((n = Dl), gu(e, 0), uu(e, r), ou(e, Ze()), n);
              if (6 === t) uu(e, r);
              else {
                if (
                  ((i = e.current.alternate),
                  0 == (30 & r) &&
                    !(function (e) {
                      for (var t = e; ; ) {
                        if (16384 & t.flags) {
                          var n = t.updateQueue;
                          if (null !== n && null !== (n = n.stores))
                            for (var r = 0; r < n.length; r++) {
                              var i = n[r],
                                o = i.getSnapshot;
                              i = i.value;
                              try {
                                if (!ur(o(), i)) return !1;
                              } catch (e) {
                                return !1;
                              }
                            }
                        }
                        if (
                          ((n = t.child), 16384 & t.subtreeFlags && null !== n)
                        )
                          (n.return = t), (t = n);
                        else {
                          if (t === e) break;
                          for (; null === t.sibling; ) {
                            if (null === t.return || t.return === e) return !0;
                            t = t.return;
                          }
                          (t.sibling.return = t.return), (t = t.sibling);
                        }
                      }
                      return !0;
                    })(i) &&
                    (2 === (t = mu(e, r)) &&
                      0 !== (o = vt(e)) &&
                      ((r = o), (t = su(e, o))),
                    1 === t))
                )
                  throw ((n = Dl), gu(e, 0), uu(e, r), ou(e, Ze()), n);
                switch (((e.finishedWork = i), (e.finishedLanes = r), t)) {
                  case 0:
                  case 1:
                    throw Error(a(345));
                  case 2:
                  case 5:
                    Cu(e, Ul, Wl);
                    break;
                  case 3:
                    if (
                      (uu(e, r),
                      (130023424 & r) === r && 10 < (t = Hl + 500 - Ze()))
                    ) {
                      if (0 !== gt(e, 0)) break;
                      if (((i = e.suspendedLanes) & r) !== r) {
                        nu(), (e.pingedLanes |= e.suspendedLanes & i);
                        break;
                      }
                      e.timeoutHandle = oi(Cu.bind(null, e, Ul, Wl), t);
                      break;
                    }
                    Cu(e, Ul, Wl);
                    break;
                  case 4:
                    if ((uu(e, r), (4194240 & r) === r)) break;
                    for (t = e.eventTimes, i = -1; 0 < r; ) {
                      var s = 31 - lt(r);
                      (o = 1 << s), (s = t[s]) > i && (i = s), (r &= ~o);
                    }
                    if (
                      ((r = i),
                      10 <
                        (r =
                          (120 > (r = Ze() - r)
                            ? 120
                            : 480 > r
                            ? 480
                            : 1080 > r
                            ? 1080
                            : 1920 > r
                            ? 1920
                            : 3e3 > r
                            ? 3e3
                            : 4320 > r
                            ? 4320
                            : 1960 * Ol(r / 1960)) - r))
                    ) {
                      e.timeoutHandle = oi(Cu.bind(null, e, Ul, Wl), r);
                      break;
                    }
                    Cu(e, Ul, Wl);
                    break;
                  default:
                    throw Error(a(329));
                }
              }
            }
            return ou(e, Ze()), e.callbackNode === n ? au.bind(null, e) : null;
          }
          function su(e, t) {
            var n = Fl;
            return (
              e.current.memoizedState.isDehydrated && (gu(e, t).flags |= 256),
              2 !== (e = mu(e, t)) && ((t = Ul), (Ul = n), null !== t && lu(t)),
              e
            );
          }
          function lu(e) {
            null === Ul ? (Ul = e) : Ul.push.apply(Ul, e);
          }
          function uu(e, t) {
            for (
              t &= ~Vl,
                t &= ~Bl,
                e.suspendedLanes |= t,
                e.pingedLanes &= ~t,
                e = e.expirationTimes;
              0 < t;

            ) {
              var n = 31 - lt(t),
                r = 1 << n;
              (e[n] = -1), (t &= ~r);
            }
          }
          function cu(e) {
            if (0 != (6 & Tl)) throw Error(a(327));
            Su();
            var t = gt(e, 0);
            if (0 == (1 & t)) return ou(e, Ze()), null;
            var n = mu(e, t);
            if (0 !== e.tag && 2 === n) {
              var r = vt(e);
              0 !== r && ((t = r), (n = su(e, r)));
            }
            if (1 === n) throw ((n = Dl), gu(e, 0), uu(e, t), ou(e, Ze()), n);
            if (6 === n) throw Error(a(345));
            return (
              (e.finishedWork = e.current.alternate),
              (e.finishedLanes = t),
              Cu(e, Ul, Wl),
              ou(e, Ze()),
              null
            );
          }
          function fu(e, t) {
            var n = Tl;
            Tl |= 1;
            try {
              return e(t);
            } finally {
              0 === (Tl = n) && ((Gl = Ze() + 500), Fi && Gi());
            }
          }
          function hu(e) {
            null !== $l && 0 === $l.tag && 0 == (6 & Tl) && Su();
            var t = Tl;
            Tl |= 1;
            var n = Ml.transition,
              r = wt;
            try {
              if (((Ml.transition = null), (wt = 1), e)) return e();
            } finally {
              (wt = r), (Ml.transition = n), 0 == (6 & (Tl = t)) && Gi();
            }
          }
          function du() {
            (Rl = _l.current), Pi(_l);
          }
          function gu(e, t) {
            (e.finishedWork = null), (e.finishedLanes = 0);
            var n = e.timeoutHandle;
            if ((-1 !== n && ((e.timeoutHandle = -1), ai(n)), null !== jl))
              for (n = jl.return; null !== n; ) {
                var r = n;
                switch ((ro(r), r.tag)) {
                  case 1:
                    null != (r = r.type.childContextTypes) && _i();
                    break;
                  case 3:
                    sa(), Pi(Ni), Pi(Ti), da();
                    break;
                  case 5:
                    ua(r);
                    break;
                  case 4:
                    sa();
                    break;
                  case 13:
                  case 19:
                    Pi(ca);
                    break;
                  case 10:
                    Eo(r.type._context);
                    break;
                  case 22:
                  case 23:
                    du();
                }
                n = n.return;
              }
            if (
              ((Nl = e),
              (jl = e = _u(e.current, null)),
              (Ll = Rl = t),
              (Il = 0),
              (Dl = null),
              (Vl = Bl = zl = 0),
              (Ul = Fl = null),
              null !== Mo)
            ) {
              for (t = 0; t < Mo.length; t++)
                if (null !== (r = (n = Mo[t]).interleaved)) {
                  n.interleaved = null;
                  var i = r.next,
                    o = n.pending;
                  if (null !== o) {
                    var a = o.next;
                    (o.next = i), (r.next = a);
                  }
                  n.pending = r;
                }
              Mo = null;
            }
            return e;
          }
          function pu(e, t) {
            for (;;) {
              var n = jl;
              try {
                if ((So(), (ga.current = ls), ka)) {
                  for (var i = ya.memoizedState; null !== i; ) {
                    var o = i.queue;
                    null !== o && (o.pending = null), (i = i.next);
                  }
                  ka = !1;
                }
                if (
                  ((va = 0),
                  (ba = ma = ya = null),
                  (wa = !1),
                  (xa = 0),
                  (Al.current = null),
                  null === n || null === n.return)
                ) {
                  (Il = 1), (Dl = t), (jl = null);
                  break;
                }
                e: {
                  var s = e,
                    l = n.return,
                    u = n,
                    c = t;
                  if (
                    ((t = Ll),
                    (u.flags |= 32768),
                    null !== c &&
                      'object' === r(c) &&
                      'function' == typeof c.then)
                  ) {
                    var f = c,
                      h = u,
                      d = h.tag;
                    if (
                      0 == (1 & h.mode) &&
                      (0 === d || 11 === d || 15 === d)
                    ) {
                      var g = h.alternate;
                      g
                        ? ((h.updateQueue = g.updateQueue),
                          (h.memoizedState = g.memoizedState),
                          (h.lanes = g.lanes))
                        : ((h.updateQueue = null), (h.memoizedState = null));
                    }
                    var p = bs(l);
                    if (null !== p) {
                      (p.flags &= -257),
                        ks(p, l, u, 0, t),
                        1 & p.mode && ms(s, f, t),
                        (c = f);
                      var v = (t = p).updateQueue;
                      if (null === v) {
                        var y = new Set();
                        y.add(c), (t.updateQueue = y);
                      } else v.add(c);
                      break e;
                    }
                    if (0 == (1 & t)) {
                      ms(s, f, t), yu();
                      break e;
                    }
                    c = Error(a(426));
                  } else if (ao && 1 & u.mode) {
                    var m = bs(l);
                    if (null !== m) {
                      0 == (65536 & m.flags) && (m.flags |= 256),
                        ks(m, l, u, 0, t),
                        yo(hs(c, u));
                      break e;
                    }
                  }
                  (s = c = hs(c, u)),
                    4 !== Il && (Il = 2),
                    null === Fl ? (Fl = [s]) : Fl.push(s),
                    (s = l);
                  do {
                    switch (s.tag) {
                      case 3:
                        (s.flags |= 65536),
                          (t &= -t),
                          (s.lanes |= t),
                          Bo(s, vs(0, c, t));
                        break e;
                      case 1:
                        u = c;
                        var b = s.type,
                          k = s.stateNode;
                        if (
                          0 == (128 & s.flags) &&
                          ('function' == typeof b.getDerivedStateFromError ||
                            (null !== k &&
                              'function' == typeof k.componentDidCatch &&
                              (null === Yl || !Yl.has(k))))
                        ) {
                          (s.flags |= 65536),
                            (t &= -t),
                            (s.lanes |= t),
                            Bo(s, ys(s, u, t));
                          break e;
                        }
                    }
                    s = s.return;
                  } while (null !== s);
                }
                xu(n);
              } catch (e) {
                (t = e), jl === n && null !== n && (jl = n = n.return);
                continue;
              }
              break;
            }
          }
          function vu() {
            var e = Pl.current;
            return (Pl.current = ls), null === e ? ls : e;
          }
          function yu() {
            (0 !== Il && 3 !== Il && 2 !== Il) || (Il = 4),
              null === Nl ||
                (0 == (268435455 & zl) && 0 == (268435455 & Bl)) ||
                uu(Nl, Ll);
          }
          function mu(e, t) {
            var n = Tl;
            Tl |= 2;
            var r = vu();
            for ((Nl === e && Ll === t) || ((Wl = null), gu(e, t)); ; )
              try {
                bu();
                break;
              } catch (t) {
                pu(e, t);
              }
            if ((So(), (Tl = n), (Pl.current = r), null !== jl))
              throw Error(a(261));
            return (Nl = null), (Ll = 0), Il;
          }
          function bu() {
            for (; null !== jl; ) wu(jl);
          }
          function ku() {
            for (; null !== jl && !Qe(); ) wu(jl);
          }
          function wu(e) {
            var t = El(e.alternate, e, Rl);
            (e.memoizedProps = e.pendingProps),
              null === t ? xu(e) : (jl = t),
              (Al.current = null);
          }
          function xu(e) {
            var t = e;
            do {
              var n = t.alternate;
              if (((e = t.return), 0 == (32768 & t.flags))) {
                if (null !== (n = Js(n, t, Rl))) return void (jl = n);
              } else {
                if (null !== (n = $s(n, t)))
                  return (n.flags &= 32767), void (jl = n);
                if (null === e) return (Il = 6), void (jl = null);
                (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
              }
              if (null !== (t = t.sibling)) return void (jl = t);
              jl = t = e;
            } while (null !== t);
            0 === Il && (Il = 5);
          }
          function Cu(e, t, n) {
            var r = wt,
              i = Ml.transition;
            try {
              (Ml.transition = null),
                (wt = 1),
                (function (e, t, n, r) {
                  do {
                    Su();
                  } while (null !== $l);
                  if (0 != (6 & Tl)) throw Error(a(327));
                  n = e.finishedWork;
                  var i = e.finishedLanes;
                  if (null === n) return null;
                  if (
                    ((e.finishedWork = null),
                    (e.finishedLanes = 0),
                    n === e.current)
                  )
                    throw Error(a(177));
                  (e.callbackNode = null), (e.callbackPriority = 0);
                  var o = n.lanes | n.childLanes;
                  if (
                    ((function (e, t) {
                      var n = e.pendingLanes & ~t;
                      (e.pendingLanes = t),
                        (e.suspendedLanes = 0),
                        (e.pingedLanes = 0),
                        (e.expiredLanes &= t),
                        (e.mutableReadLanes &= t),
                        (e.entangledLanes &= t),
                        (t = e.entanglements);
                      var r = e.eventTimes;
                      for (e = e.expirationTimes; 0 < n; ) {
                        var i = 31 - lt(n),
                          o = 1 << i;
                        (t[i] = 0), (r[i] = -1), (e[i] = -1), (n &= ~o);
                      }
                    })(e, o),
                    e === Nl && ((jl = Nl = null), (Ll = 0)),
                    (0 == (2064 & n.subtreeFlags) && 0 == (2064 & n.flags)) ||
                      Jl ||
                      ((Jl = !0),
                      Nu(rt, function () {
                        return Su(), null;
                      })),
                    (o = 0 != (15990 & n.flags)),
                    0 != (15990 & n.subtreeFlags) || o)
                  ) {
                    (o = Ml.transition), (Ml.transition = null);
                    var s = wt;
                    wt = 1;
                    var l = Tl;
                    (Tl |= 4),
                      (Al.current = null),
                      (function (e, t) {
                        if (((ni = qt), pr((e = gr())))) {
                          if ('selectionStart' in e)
                            var n = {
                              start: e.selectionStart,
                              end: e.selectionEnd,
                            };
                          else
                            e: {
                              var r =
                                (n =
                                  ((n = e.ownerDocument) && n.defaultView) ||
                                  window).getSelection && n.getSelection();
                              if (r && 0 !== r.rangeCount) {
                                n = r.anchorNode;
                                var i = r.anchorOffset,
                                  o = r.focusNode;
                                r = r.focusOffset;
                                try {
                                  n.nodeType, o.nodeType;
                                } catch (e) {
                                  n = null;
                                  break e;
                                }
                                var s = 0,
                                  l = -1,
                                  u = -1,
                                  c = 0,
                                  f = 0,
                                  h = e,
                                  d = null;
                                t: for (;;) {
                                  for (
                                    var g;
                                    h !== n ||
                                      (0 !== i && 3 !== h.nodeType) ||
                                      (l = s + i),
                                      h !== o ||
                                        (0 !== r && 3 !== h.nodeType) ||
                                        (u = s + r),
                                      3 === h.nodeType &&
                                        (s += h.nodeValue.length),
                                      null !== (g = h.firstChild);

                                  )
                                    (d = h), (h = g);
                                  for (;;) {
                                    if (h === e) break t;
                                    if (
                                      (d === n && ++c === i && (l = s),
                                      d === o && ++f === r && (u = s),
                                      null !== (g = h.nextSibling))
                                    )
                                      break;
                                    d = (h = d).parentNode;
                                  }
                                  h = g;
                                }
                                n =
                                  -1 === l || -1 === u
                                    ? null
                                    : { start: l, end: u };
                              } else n = null;
                            }
                          n = n || { start: 0, end: 0 };
                        } else n = null;
                        for (
                          ri = { focusedElem: e, selectionRange: n },
                            qt = !1,
                            el = t;
                          null !== el;

                        )
                          if (
                            ((e = (t = el).child),
                            0 != (1028 & t.subtreeFlags) && null !== e)
                          )
                            (e.return = t), (el = e);
                          else
                            for (; null !== el; ) {
                              t = el;
                              try {
                                var p = t.alternate;
                                if (0 != (1024 & t.flags))
                                  switch (t.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                    case 5:
                                    case 6:
                                    case 4:
                                    case 17:
                                      break;
                                    case 1:
                                      if (null !== p) {
                                        var v = p.memoizedProps,
                                          y = p.memoizedState,
                                          m = t.stateNode,
                                          b = m.getSnapshotBeforeUpdate(
                                            t.elementType === t.type
                                              ? v
                                              : bo(t.type, v),
                                            y
                                          );
                                        m.__reactInternalSnapshotBeforeUpdate =
                                          b;
                                      }
                                      break;
                                    case 3:
                                      var k = t.stateNode.containerInfo;
                                      1 === k.nodeType
                                        ? (k.textContent = '')
                                        : 9 === k.nodeType &&
                                          k.documentElement &&
                                          k.removeChild(k.documentElement);
                                      break;
                                    default:
                                      throw Error(a(163));
                                  }
                              } catch (e) {
                                Ou(t, t.return, e);
                              }
                              if (null !== (e = t.sibling)) {
                                (e.return = t.return), (el = e);
                                break;
                              }
                              el = t.return;
                            }
                        (p = rl), (rl = !1);
                      })(e, n),
                      ml(n, e),
                      vr(ri),
                      (qt = !!ni),
                      (ri = ni = null),
                      (e.current = n),
                      kl(n, e, i),
                      Ke(),
                      (Tl = l),
                      (wt = s),
                      (Ml.transition = o);
                  } else e.current = n;
                  if (
                    (Jl && ((Jl = !1), ($l = e), (Ql = i)),
                    (o = e.pendingLanes),
                    0 === o && (Yl = null),
                    (function (e) {
                      if (st && 'function' == typeof st.onCommitFiberRoot)
                        try {
                          st.onCommitFiberRoot(
                            at,
                            e,
                            void 0,
                            128 == (128 & e.current.flags)
                          );
                        } catch (e) {}
                    })(n.stateNode),
                    ou(e, Ze()),
                    null !== t)
                  )
                    for (r = e.onRecoverableError, n = 0; n < t.length; n++)
                      (i = t[n]),
                        r(i.value, {
                          componentStack: i.stack,
                          digest: i.digest,
                        });
                  if (ql) throw ((ql = !1), (e = Xl), (Xl = null), e);
                  0 != (1 & Ql) && 0 !== e.tag && Su(),
                    (o = e.pendingLanes),
                    0 != (1 & o)
                      ? e === Zl
                        ? Kl++
                        : ((Kl = 0), (Zl = e))
                      : (Kl = 0),
                    Gi();
                })(e, t, n, r);
            } finally {
              (Ml.transition = i), (wt = r);
            }
            return null;
          }
          function Su() {
            if (null !== $l) {
              var e = xt(Ql),
                t = Ml.transition,
                n = wt;
              try {
                if (
                  ((Ml.transition = null), (wt = 16 > e ? 16 : e), null === $l)
                )
                  var r = !1;
                else {
                  if (((e = $l), ($l = null), (Ql = 0), 0 != (6 & Tl)))
                    throw Error(a(331));
                  var i = Tl;
                  for (Tl |= 4, el = e.current; null !== el; ) {
                    var o = el,
                      s = o.child;
                    if (0 != (16 & el.flags)) {
                      var l = o.deletions;
                      if (null !== l) {
                        for (var u = 0; u < l.length; u++) {
                          var c = l[u];
                          for (el = c; null !== el; ) {
                            var f = el;
                            switch (f.tag) {
                              case 0:
                              case 11:
                              case 15:
                                il(8, f, o);
                            }
                            var h = f.child;
                            if (null !== h) (h.return = f), (el = h);
                            else
                              for (; null !== el; ) {
                                var d = (f = el).sibling,
                                  g = f.return;
                                if ((sl(f), f === c)) {
                                  el = null;
                                  break;
                                }
                                if (null !== d) {
                                  (d.return = g), (el = d);
                                  break;
                                }
                                el = g;
                              }
                          }
                        }
                        var p = o.alternate;
                        if (null !== p) {
                          var v = p.child;
                          if (null !== v) {
                            p.child = null;
                            do {
                              var y = v.sibling;
                              (v.sibling = null), (v = y);
                            } while (null !== v);
                          }
                        }
                        el = o;
                      }
                    }
                    if (0 != (2064 & o.subtreeFlags) && null !== s)
                      (s.return = o), (el = s);
                    else
                      e: for (; null !== el; ) {
                        if (0 != (2048 & (o = el).flags))
                          switch (o.tag) {
                            case 0:
                            case 11:
                            case 15:
                              il(9, o, o.return);
                          }
                        var m = o.sibling;
                        if (null !== m) {
                          (m.return = o.return), (el = m);
                          break e;
                        }
                        el = o.return;
                      }
                  }
                  var b = e.current;
                  for (el = b; null !== el; ) {
                    var k = (s = el).child;
                    if (0 != (2064 & s.subtreeFlags) && null !== k)
                      (k.return = s), (el = k);
                    else
                      e: for (s = b; null !== el; ) {
                        if (0 != (2048 & (l = el).flags))
                          try {
                            switch (l.tag) {
                              case 0:
                              case 11:
                              case 15:
                                ol(9, l);
                            }
                          } catch (e) {
                            Ou(l, l.return, e);
                          }
                        if (l === s) {
                          el = null;
                          break e;
                        }
                        var w = l.sibling;
                        if (null !== w) {
                          (w.return = l.return), (el = w);
                          break e;
                        }
                        el = l.return;
                      }
                  }
                  if (
                    ((Tl = i),
                    Gi(),
                    st && 'function' == typeof st.onPostCommitFiberRoot)
                  )
                    try {
                      st.onPostCommitFiberRoot(at, e);
                    } catch (e) {}
                  r = !0;
                }
                return r;
              } finally {
                (wt = n), (Ml.transition = t);
              }
            }
            return !1;
          }
          function Eu(e, t, n) {
            (e = Do(e, (t = vs(0, (t = hs(n, t)), 1)), 1)),
              (t = nu()),
              null !== e && (bt(e, 1, t), ou(e, t));
          }
          function Ou(e, t, n) {
            if (3 === e.tag) Eu(e, e, n);
            else
              for (; null !== t; ) {
                if (3 === t.tag) {
                  Eu(t, e, n);
                  break;
                }
                if (1 === t.tag) {
                  var r = t.stateNode;
                  if (
                    'function' == typeof t.type.getDerivedStateFromError ||
                    ('function' == typeof r.componentDidCatch &&
                      (null === Yl || !Yl.has(r)))
                  ) {
                    (t = Do(t, (e = ys(t, (e = hs(n, e)), 1)), 1)),
                      (e = nu()),
                      null !== t && (bt(t, 1, e), ou(t, e));
                    break;
                  }
                }
                t = t.return;
              }
          }
          function Pu(e, t, n) {
            var r = e.pingCache;
            null !== r && r.delete(t),
              (t = nu()),
              (e.pingedLanes |= e.suspendedLanes & n),
              Nl === e &&
                (Ll & n) === n &&
                (4 === Il ||
                (3 === Il && (130023424 & Ll) === Ll && 500 > Ze() - Hl)
                  ? gu(e, 0)
                  : (Vl |= n)),
              ou(e, t);
          }
          function Au(e, t) {
            0 === t &&
              (0 == (1 & e.mode)
                ? (t = 1)
                : ((t = ht), 0 == (130023424 & (ht <<= 1)) && (ht = 4194304)));
            var n = nu();
            null !== (e = jo(e, t)) && (bt(e, t, n), ou(e, n));
          }
          function Mu(e) {
            var t = e.memoizedState,
              n = 0;
            null !== t && (n = t.retryLane), Au(e, n);
          }
          function Tu(e, t) {
            var n = 0;
            switch (e.tag) {
              case 13:
                var r = e.stateNode,
                  i = e.memoizedState;
                null !== i && (n = i.retryLane);
                break;
              case 19:
                r = e.stateNode;
                break;
              default:
                throw Error(a(314));
            }
            null !== r && r.delete(t), Au(e, n);
          }
          function Nu(e, t) {
            return Je(e, t);
          }
          function ju(e, t, n, r) {
            (this.tag = e),
              (this.key = n),
              (this.sibling =
                this.child =
                this.return =
                this.stateNode =
                this.type =
                this.elementType =
                  null),
              (this.index = 0),
              (this.ref = null),
              (this.pendingProps = t),
              (this.dependencies =
                this.memoizedState =
                this.updateQueue =
                this.memoizedProps =
                  null),
              (this.mode = r),
              (this.subtreeFlags = this.flags = 0),
              (this.deletions = null),
              (this.childLanes = this.lanes = 0),
              (this.alternate = null);
          }
          function Lu(e, t, n, r) {
            return new ju(e, t, n, r);
          }
          function Ru(e) {
            return !(!(e = e.prototype) || !e.isReactComponent);
          }
          function _u(e, t) {
            var n = e.alternate;
            return (
              null === n
                ? (((n = Lu(e.tag, t, e.key, e.mode)).elementType =
                    e.elementType),
                  (n.type = e.type),
                  (n.stateNode = e.stateNode),
                  (n.alternate = e),
                  (e.alternate = n))
                : ((n.pendingProps = t),
                  (n.type = e.type),
                  (n.flags = 0),
                  (n.subtreeFlags = 0),
                  (n.deletions = null)),
              (n.flags = 14680064 & e.flags),
              (n.childLanes = e.childLanes),
              (n.lanes = e.lanes),
              (n.child = e.child),
              (n.memoizedProps = e.memoizedProps),
              (n.memoizedState = e.memoizedState),
              (n.updateQueue = e.updateQueue),
              (t = e.dependencies),
              (n.dependencies =
                null === t
                  ? null
                  : { lanes: t.lanes, firstContext: t.firstContext }),
              (n.sibling = e.sibling),
              (n.index = e.index),
              (n.ref = e.ref),
              n
            );
          }
          function Iu(e, t, n, i, o, s) {
            var l = 2;
            if (((i = e), 'function' == typeof e)) Ru(e) && (l = 1);
            else if ('string' == typeof e) l = 5;
            else
              e: switch (e) {
                case E:
                  return Du(n.children, o, s, t);
                case O:
                  (l = 8), (o |= 8);
                  break;
                case P:
                  return (
                    ((e = Lu(12, n, t, 2 | o)).elementType = P),
                    (e.lanes = s),
                    e
                  );
                case N:
                  return (
                    ((e = Lu(13, n, t, o)).elementType = N), (e.lanes = s), e
                  );
                case j:
                  return (
                    ((e = Lu(19, n, t, o)).elementType = j), (e.lanes = s), e
                  );
                case _:
                  return zu(n, o, s, t);
                default:
                  if ('object' === r(e) && null !== e)
                    switch (e.$$typeof) {
                      case A:
                        l = 10;
                        break e;
                      case M:
                        l = 9;
                        break e;
                      case T:
                        l = 11;
                        break e;
                      case L:
                        l = 14;
                        break e;
                      case R:
                        (l = 16), (i = null);
                        break e;
                    }
                  throw Error(a(130, null == e ? e : r(e), ''));
              }
            return (
              ((t = Lu(l, n, t, o)).elementType = e),
              (t.type = i),
              (t.lanes = s),
              t
            );
          }
          function Du(e, t, n, r) {
            return ((e = Lu(7, e, r, t)).lanes = n), e;
          }
          function zu(e, t, n, r) {
            return (
              ((e = Lu(22, e, r, t)).elementType = _),
              (e.lanes = n),
              (e.stateNode = { isHidden: !1 }),
              e
            );
          }
          function Bu(e, t, n) {
            return ((e = Lu(6, e, null, t)).lanes = n), e;
          }
          function Vu(e, t, n) {
            return (
              ((t = Lu(
                4,
                null !== e.children ? e.children : [],
                e.key,
                t
              )).lanes = n),
              (t.stateNode = {
                containerInfo: e.containerInfo,
                pendingChildren: null,
                implementation: e.implementation,
              }),
              t
            );
          }
          function Fu(e, t, n, r, i) {
            (this.tag = t),
              (this.containerInfo = e),
              (this.finishedWork =
                this.pingCache =
                this.current =
                this.pendingChildren =
                  null),
              (this.timeoutHandle = -1),
              (this.callbackNode = this.pendingContext = this.context = null),
              (this.callbackPriority = 0),
              (this.eventTimes = mt(0)),
              (this.expirationTimes = mt(-1)),
              (this.entangledLanes =
                this.finishedLanes =
                this.mutableReadLanes =
                this.expiredLanes =
                this.pingedLanes =
                this.suspendedLanes =
                this.pendingLanes =
                  0),
              (this.entanglements = mt(0)),
              (this.identifierPrefix = r),
              (this.onRecoverableError = i),
              (this.mutableSourceEagerHydrationData = null);
          }
          function Uu(e, t, n, r, i, o, a, s, l) {
            return (
              (e = new Fu(e, t, n, s, l)),
              1 === t ? ((t = 1), !0 === o && (t |= 8)) : (t = 0),
              (o = Lu(3, null, null, t)),
              (e.current = o),
              (o.stateNode = e),
              (o.memoizedState = {
                element: r,
                isDehydrated: n,
                cache: null,
                transitions: null,
                pendingSuspenseBoundaries: null,
              }),
              Ro(o),
              e
            );
          }
          function Hu(e, t, n) {
            var r =
              3 < arguments.length && void 0 !== arguments[3]
                ? arguments[3]
                : null;
            return {
              $$typeof: S,
              key: null == r ? null : '' + r,
              children: e,
              containerInfo: t,
              implementation: n,
            };
          }
          function Gu(e) {
            if (!e) return Mi;
            e: {
              if (Ge((e = e._reactInternals)) !== e || 1 !== e.tag)
                throw Error(a(170));
              var t = e;
              do {
                switch (t.tag) {
                  case 3:
                    t = t.stateNode.context;
                    break e;
                  case 1:
                    if (Ri(t.type)) {
                      t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                      break e;
                    }
                }
                t = t.return;
              } while (null !== t);
              throw Error(a(171));
            }
            if (1 === e.tag) {
              var n = e.type;
              if (Ri(n)) return Di(e, n, t);
            }
            return t;
          }
          function Wu(e, t, n, r, i, o, a, s, l) {
            return (
              ((e = Uu(n, r, !0, e, 0, o, 0, s, l)).context = Gu(null)),
              (n = e.current),
              ((o = Io((r = nu()), (i = ru(n)))).callback =
                null != t ? t : null),
              Do(n, o, i),
              (e.current.lanes = i),
              bt(e, i, r),
              ou(e, r),
              e
            );
          }
          function qu(e, t, n, r) {
            var i = t.current,
              o = nu(),
              a = ru(i);
            return (
              (n = Gu(n)),
              null === t.context ? (t.context = n) : (t.pendingContext = n),
              ((t = Io(o, a)).payload = { element: e }),
              null !== (r = void 0 === r ? null : r) && (t.callback = r),
              null !== (e = Do(i, t, a)) && (iu(e, i, a, o), zo(e, i, a)),
              a
            );
          }
          function Xu(e) {
            return (e = e.current).child
              ? (e.child.tag, e.child.stateNode)
              : null;
          }
          function Yu(e, t) {
            if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
              var n = e.retryLane;
              e.retryLane = 0 !== n && n < t ? n : t;
            }
          }
          function Ju(e, t) {
            Yu(e, t), (e = e.alternate) && Yu(e, t);
          }
          El = function (e, t, n) {
            if (null !== e)
              if (e.memoizedProps !== t.pendingProps || Ni.current) xs = !0;
              else {
                if (0 == (e.lanes & n) && 0 == (128 & t.flags))
                  return (
                    (xs = !1),
                    (function (e, t, n) {
                      switch (t.tag) {
                        case 3:
                          js(t), vo();
                          break;
                        case 5:
                          la(t);
                          break;
                        case 1:
                          Ri(t.type) && zi(t);
                          break;
                        case 4:
                          aa(t, t.stateNode.containerInfo);
                          break;
                        case 10:
                          var r = t.type._context,
                            i = t.memoizedProps.value;
                          Ai(ko, r._currentValue), (r._currentValue = i);
                          break;
                        case 13:
                          if (null !== (r = t.memoizedState))
                            return null !== r.dehydrated
                              ? (Ai(ca, 1 & ca.current), (t.flags |= 128), null)
                              : 0 != (n & t.child.childLanes)
                              ? Bs(e, t, n)
                              : (Ai(ca, 1 & ca.current),
                                null !== (e = qs(e, t, n)) ? e.sibling : null);
                          Ai(ca, 1 & ca.current);
                          break;
                        case 19:
                          if (
                            ((r = 0 != (n & t.childLanes)),
                            0 != (128 & e.flags))
                          ) {
                            if (r) return Gs(e, t, n);
                            t.flags |= 128;
                          }
                          if (
                            (null !== (i = t.memoizedState) &&
                              ((i.rendering = null),
                              (i.tail = null),
                              (i.lastEffect = null)),
                            Ai(ca, ca.current),
                            r)
                          )
                            break;
                          return null;
                        case 22:
                        case 23:
                          return (t.lanes = 0), Ps(e, t, n);
                      }
                      return qs(e, t, n);
                    })(e, t, n)
                  );
                xs = 0 != (131072 & e.flags);
              }
            else
              (xs = !1), ao && 0 != (1048576 & t.flags) && to(t, Yi, t.index);
            switch (((t.lanes = 0), t.tag)) {
              case 2:
                var i = t.type;
                Ws(e, t), (e = t.pendingProps);
                var o = Li(t, Ti.current);
                Po(t, n), (o = Oa(null, t, i, e, o, n));
                var s = Pa();
                return (
                  (t.flags |= 1),
                  'object' === r(o) &&
                  null !== o &&
                  'function' == typeof o.render &&
                  void 0 === o.$$typeof
                    ? ((t.tag = 1),
                      (t.memoizedState = null),
                      (t.updateQueue = null),
                      Ri(i) ? ((s = !0), zi(t)) : (s = !1),
                      (t.memoizedState =
                        null !== o.state && void 0 !== o.state
                          ? o.state
                          : null),
                      Ro(t),
                      (o.updater = Go),
                      (t.stateNode = o),
                      (o._reactInternals = t),
                      Yo(t, i, e, n),
                      (t = Ns(null, t, i, !0, s, n)))
                    : ((t.tag = 0),
                      ao && s && no(t),
                      Cs(null, t, o, n),
                      (t = t.child)),
                  t
                );
              case 16:
                i = t.elementType;
                e: {
                  switch (
                    (Ws(e, t),
                    (e = t.pendingProps),
                    (i = (o = i._init)(i._payload)),
                    (t.type = i),
                    (o = t.tag =
                      (function (e) {
                        if ('function' == typeof e) return Ru(e) ? 1 : 0;
                        if (null != e) {
                          if ((e = e.$$typeof) === T) return 11;
                          if (e === L) return 14;
                        }
                        return 2;
                      })(i)),
                    (e = bo(i, e)),
                    o)
                  ) {
                    case 0:
                      t = Ms(null, t, i, e, n);
                      break e;
                    case 1:
                      t = Ts(null, t, i, e, n);
                      break e;
                    case 11:
                      t = Ss(null, t, i, e, n);
                      break e;
                    case 14:
                      t = Es(null, t, i, bo(i.type, e), n);
                      break e;
                  }
                  throw Error(a(306, i, ''));
                }
                return t;
              case 0:
                return (
                  (i = t.type),
                  (o = t.pendingProps),
                  Ms(e, t, i, (o = t.elementType === i ? o : bo(i, o)), n)
                );
              case 1:
                return (
                  (i = t.type),
                  (o = t.pendingProps),
                  Ts(e, t, i, (o = t.elementType === i ? o : bo(i, o)), n)
                );
              case 3:
                e: {
                  if ((js(t), null === e)) throw Error(a(387));
                  (i = t.pendingProps),
                    (o = (s = t.memoizedState).element),
                    _o(e, t),
                    Vo(t, i, null, n);
                  var l = t.memoizedState;
                  if (((i = l.element), s.isDehydrated)) {
                    if (
                      ((s = {
                        element: i,
                        isDehydrated: !1,
                        cache: l.cache,
                        pendingSuspenseBoundaries: l.pendingSuspenseBoundaries,
                        transitions: l.transitions,
                      }),
                      (t.updateQueue.baseState = s),
                      (t.memoizedState = s),
                      256 & t.flags)
                    ) {
                      t = Ls(e, t, i, n, (o = hs(Error(a(423)), t)));
                      break e;
                    }
                    if (i !== o) {
                      t = Ls(e, t, i, n, (o = hs(Error(a(424)), t)));
                      break e;
                    }
                    for (
                      oo = fi(t.stateNode.containerInfo.firstChild),
                        io = t,
                        ao = !0,
                        so = null,
                        n = ea(t, null, i, n),
                        t.child = n;
                      n;

                    )
                      (n.flags = (-3 & n.flags) | 4096), (n = n.sibling);
                  } else {
                    if ((vo(), i === o)) {
                      t = qs(e, t, n);
                      break e;
                    }
                    Cs(e, t, i, n);
                  }
                  t = t.child;
                }
                return t;
              case 5:
                return (
                  la(t),
                  null === e && fo(t),
                  (i = t.type),
                  (o = t.pendingProps),
                  (s = null !== e ? e.memoizedProps : null),
                  (l = o.children),
                  ii(i, o)
                    ? (l = null)
                    : null !== s && ii(i, s) && (t.flags |= 32),
                  As(e, t),
                  Cs(e, t, l, n),
                  t.child
                );
              case 6:
                return null === e && fo(t), null;
              case 13:
                return Bs(e, t, n);
              case 4:
                return (
                  aa(t, t.stateNode.containerInfo),
                  (i = t.pendingProps),
                  null === e ? (t.child = Zo(t, null, i, n)) : Cs(e, t, i, n),
                  t.child
                );
              case 11:
                return (
                  (i = t.type),
                  (o = t.pendingProps),
                  Ss(e, t, i, (o = t.elementType === i ? o : bo(i, o)), n)
                );
              case 7:
                return Cs(e, t, t.pendingProps, n), t.child;
              case 8:
              case 12:
                return Cs(e, t, t.pendingProps.children, n), t.child;
              case 10:
                e: {
                  if (
                    ((i = t.type._context),
                    (o = t.pendingProps),
                    (s = t.memoizedProps),
                    (l = o.value),
                    Ai(ko, i._currentValue),
                    (i._currentValue = l),
                    null !== s)
                  )
                    if (ur(s.value, l)) {
                      if (s.children === o.children && !Ni.current) {
                        t = qs(e, t, n);
                        break e;
                      }
                    } else
                      for (
                        null !== (s = t.child) && (s.return = t);
                        null !== s;

                      ) {
                        var u = s.dependencies;
                        if (null !== u) {
                          l = s.child;
                          for (var c = u.firstContext; null !== c; ) {
                            if (c.context === i) {
                              if (1 === s.tag) {
                                (c = Io(-1, n & -n)).tag = 2;
                                var f = s.updateQueue;
                                if (null !== f) {
                                  var h = (f = f.shared).pending;
                                  null === h
                                    ? (c.next = c)
                                    : ((c.next = h.next), (h.next = c)),
                                    (f.pending = c);
                                }
                              }
                              (s.lanes |= n),
                                null !== (c = s.alternate) && (c.lanes |= n),
                                Oo(s.return, n, t),
                                (u.lanes |= n);
                              break;
                            }
                            c = c.next;
                          }
                        } else if (10 === s.tag)
                          l = s.type === t.type ? null : s.child;
                        else if (18 === s.tag) {
                          if (null === (l = s.return)) throw Error(a(341));
                          (l.lanes |= n),
                            null !== (u = l.alternate) && (u.lanes |= n),
                            Oo(l, n, t),
                            (l = s.sibling);
                        } else l = s.child;
                        if (null !== l) l.return = s;
                        else
                          for (l = s; null !== l; ) {
                            if (l === t) {
                              l = null;
                              break;
                            }
                            if (null !== (s = l.sibling)) {
                              (s.return = l.return), (l = s);
                              break;
                            }
                            l = l.return;
                          }
                        s = l;
                      }
                  Cs(e, t, o.children, n), (t = t.child);
                }
                return t;
              case 9:
                return (
                  (o = t.type),
                  (i = t.pendingProps.children),
                  Po(t, n),
                  (i = i((o = Ao(o)))),
                  (t.flags |= 1),
                  Cs(e, t, i, n),
                  t.child
                );
              case 14:
                return (
                  (o = bo((i = t.type), t.pendingProps)),
                  Es(e, t, i, (o = bo(i.type, o)), n)
                );
              case 15:
                return Os(e, t, t.type, t.pendingProps, n);
              case 17:
                return (
                  (i = t.type),
                  (o = t.pendingProps),
                  (o = t.elementType === i ? o : bo(i, o)),
                  Ws(e, t),
                  (t.tag = 1),
                  Ri(i) ? ((e = !0), zi(t)) : (e = !1),
                  Po(t, n),
                  qo(t, i, o),
                  Yo(t, i, o, n),
                  Ns(null, t, i, !0, e, n)
                );
              case 19:
                return Gs(e, t, n);
              case 22:
                return Ps(e, t, n);
            }
            throw Error(a(156, t.tag));
          };
          var $u =
            'function' == typeof reportError
              ? reportError
              : function (e) {
                  console.error(e);
                };
          function Qu(e) {
            this._internalRoot = e;
          }
          function Ku(e) {
            this._internalRoot = e;
          }
          function Zu(e) {
            return !(
              !e ||
              (1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType)
            );
          }
          function ec(e) {
            return !(
              !e ||
              (1 !== e.nodeType &&
                9 !== e.nodeType &&
                11 !== e.nodeType &&
                (8 !== e.nodeType ||
                  ' react-mount-point-unstable ' !== e.nodeValue))
            );
          }
          function tc() {}
          function nc(e, t, n, r, i) {
            var o = n._reactRootContainer;
            if (o) {
              var a = o;
              if ('function' == typeof i) {
                var s = i;
                i = function () {
                  var e = Xu(a);
                  s.call(e);
                };
              }
              qu(t, a, e, i);
            } else
              a = (function (e, t, n, r, i) {
                if (i) {
                  if ('function' == typeof r) {
                    var o = r;
                    r = function () {
                      var e = Xu(a);
                      o.call(e);
                    };
                  }
                  var a = Wu(t, r, e, 0, null, !1, 0, '', tc);
                  return (
                    (e._reactRootContainer = a),
                    (e[vi] = a.current),
                    Gr(8 === e.nodeType ? e.parentNode : e),
                    hu(),
                    a
                  );
                }
                for (; (i = e.lastChild); ) e.removeChild(i);
                if ('function' == typeof r) {
                  var s = r;
                  r = function () {
                    var e = Xu(l);
                    s.call(e);
                  };
                }
                var l = Uu(e, 0, !1, null, 0, !1, 0, '', tc);
                return (
                  (e._reactRootContainer = l),
                  (e[vi] = l.current),
                  Gr(8 === e.nodeType ? e.parentNode : e),
                  hu(function () {
                    qu(t, l, n, r);
                  }),
                  l
                );
              })(n, t, e, i, r);
            return Xu(a);
          }
          (Ku.prototype.render = Qu.prototype.render =
            function (e) {
              var t = this._internalRoot;
              if (null === t) throw Error(a(409));
              qu(e, t, null, null);
            }),
            (Ku.prototype.unmount = Qu.prototype.unmount =
              function () {
                var e = this._internalRoot;
                if (null !== e) {
                  this._internalRoot = null;
                  var t = e.containerInfo;
                  hu(function () {
                    qu(null, e, null, null);
                  }),
                    (t[vi] = null);
                }
              }),
            (Ku.prototype.unstable_scheduleHydration = function (e) {
              if (e) {
                var t = Ot();
                e = { blockedOn: null, target: e, priority: t };
                for (
                  var n = 0;
                  n < _t.length && 0 !== t && t < _t[n].priority;
                  n++
                );
                _t.splice(n, 0, e), 0 === n && Bt(e);
              }
            }),
            (Ct = function (e) {
              switch (e.tag) {
                case 3:
                  var t = e.stateNode;
                  if (t.current.memoizedState.isDehydrated) {
                    var n = dt(t.pendingLanes);
                    0 !== n &&
                      (kt(t, 1 | n),
                      ou(t, Ze()),
                      0 == (6 & Tl) && ((Gl = Ze() + 500), Gi()));
                  }
                  break;
                case 13:
                  hu(function () {
                    var t = jo(e, 1);
                    if (null !== t) {
                      var n = nu();
                      iu(t, e, 1, n);
                    }
                  }),
                    Ju(e, 1);
              }
            }),
            (St = function (e) {
              if (13 === e.tag) {
                var t = jo(e, 134217728);
                if (null !== t) iu(t, e, 134217728, nu());
                Ju(e, 134217728);
              }
            }),
            (Et = function (e) {
              if (13 === e.tag) {
                var t = ru(e),
                  n = jo(e, t);
                if (null !== n) iu(n, e, t, nu());
                Ju(e, t);
              }
            }),
            (Ot = function () {
              return wt;
            }),
            (Pt = function (e, t) {
              var n = wt;
              try {
                return (wt = e), t();
              } finally {
                wt = n;
              }
            }),
            (Se = function (e, t, n) {
              switch (t) {
                case 'input':
                  if (
                    (ee(e, n), (t = n.name), 'radio' === n.type && null != t)
                  ) {
                    for (n = e; n.parentNode; ) n = n.parentNode;
                    for (
                      n = n.querySelectorAll(
                        'input[name=' +
                          JSON.stringify('' + t) +
                          '][type="radio"]'
                      ),
                        t = 0;
                      t < n.length;
                      t++
                    ) {
                      var r = n[t];
                      if (r !== e && r.form === e.form) {
                        var i = Ci(r);
                        if (!i) throw Error(a(90));
                        J(r), ee(r, i);
                      }
                    }
                  }
                  break;
                case 'textarea':
                  se(e, n);
                  break;
                case 'select':
                  null != (t = n.value) && ie(e, !!n.multiple, t, !1);
              }
            }),
            (Te = fu),
            (Ne = hu);
          var rc = {
              usingClientEntryPoint: !1,
              Events: [wi, xi, Ci, Ae, Me, fu],
            },
            ic = {
              findFiberByHostInstance: ki,
              bundleType: 0,
              version: '18.2.0',
              rendererPackageName: 'react-dom',
            },
            oc = {
              bundleType: ic.bundleType,
              version: ic.version,
              rendererPackageName: ic.rendererPackageName,
              rendererConfig: ic.rendererConfig,
              overrideHookState: null,
              overrideHookStateDeletePath: null,
              overrideHookStateRenamePath: null,
              overrideProps: null,
              overridePropsDeletePath: null,
              overridePropsRenamePath: null,
              setErrorHandler: null,
              setSuspenseHandler: null,
              scheduleUpdate: null,
              currentDispatcherRef: x.ReactCurrentDispatcher,
              findHostInstanceByFiber: function (e) {
                return null === (e = Xe(e)) ? null : e.stateNode;
              },
              findFiberByHostInstance:
                ic.findFiberByHostInstance ||
                function () {
                  return null;
                },
              findHostInstancesForRefresh: null,
              scheduleRefresh: null,
              scheduleRoot: null,
              setRefreshHandler: null,
              getCurrentFiber: null,
              reconcilerVersion: '18.2.0-next-9e3b772b8-20220608',
            };
          if ('undefined' != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
            var ac = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (!ac.isDisabled && ac.supportsFiber)
              try {
                (at = ac.inject(oc)), (st = ac);
              } catch (he) {}
          }
          (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = rc),
            (t.createPortal = function (e, t) {
              var n =
                2 < arguments.length && void 0 !== arguments[2]
                  ? arguments[2]
                  : null;
              if (!Zu(t)) throw Error(a(200));
              return Hu(e, t, null, n);
            }),
            (t.createRoot = function (e, t) {
              if (!Zu(e)) throw Error(a(299));
              var n = !1,
                r = '',
                i = $u;
              return (
                null != t &&
                  (!0 === t.unstable_strictMode && (n = !0),
                  void 0 !== t.identifierPrefix && (r = t.identifierPrefix),
                  void 0 !== t.onRecoverableError &&
                    (i = t.onRecoverableError)),
                (t = Uu(e, 1, !1, null, 0, n, 0, r, i)),
                (e[vi] = t.current),
                Gr(8 === e.nodeType ? e.parentNode : e),
                new Qu(t)
              );
            }),
            (t.findDOMNode = function (e) {
              if (null == e) return null;
              if (1 === e.nodeType) return e;
              var t = e._reactInternals;
              if (void 0 === t) {
                if ('function' == typeof e.render) throw Error(a(188));
                throw ((e = Object.keys(e).join(',')), Error(a(268, e)));
              }
              return (e = null === (e = Xe(t)) ? null : e.stateNode);
            }),
            (t.flushSync = function (e) {
              return hu(e);
            }),
            (t.hydrate = function (e, t, n) {
              if (!ec(t)) throw Error(a(200));
              return nc(null, e, t, !0, n);
            }),
            (t.hydrateRoot = function (e, t, n) {
              if (!Zu(e)) throw Error(a(405));
              var r = (null != n && n.hydratedSources) || null,
                i = !1,
                o = '',
                s = $u;
              if (
                (null != n &&
                  (!0 === n.unstable_strictMode && (i = !0),
                  void 0 !== n.identifierPrefix && (o = n.identifierPrefix),
                  void 0 !== n.onRecoverableError &&
                    (s = n.onRecoverableError)),
                (t = Wu(t, null, e, 1, null != n ? n : null, i, 0, o, s)),
                (e[vi] = t.current),
                Gr(e),
                r)
              )
                for (e = 0; e < r.length; e++)
                  (i = (i = (n = r[e])._getVersion)(n._source)),
                    null == t.mutableSourceEagerHydrationData
                      ? (t.mutableSourceEagerHydrationData = [n, i])
                      : t.mutableSourceEagerHydrationData.push(n, i);
              return new Ku(t);
            }),
            (t.render = function (e, t, n) {
              if (!ec(t)) throw Error(a(200));
              return nc(null, e, t, !1, n);
            }),
            (t.unmountComponentAtNode = function (e) {
              if (!ec(e)) throw Error(a(40));
              return (
                !!e._reactRootContainer &&
                (hu(function () {
                  nc(null, null, e, !1, function () {
                    (e._reactRootContainer = null), (e[vi] = null);
                  });
                }),
                !0)
              );
            }),
            (t.unstable_batchedUpdates = fu),
            (t.unstable_renderSubtreeIntoContainer = function (e, t, n, r) {
              if (!ec(n)) throw Error(a(200));
              if (null == e || void 0 === e._reactInternals) throw Error(a(38));
              return nc(e, t, n, !1, r);
            }),
            (t.version = '18.2.0-next-9e3b772b8-20220608');
        },
        793: function (e, t, n) {
          'use strict';
          var r = n(629);
          (t.s = r.createRoot), r.hydrateRoot;
        },
        629: function (e, t, n) {
          'use strict';
          !(function e() {
            if (
              'undefined' != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
              'function' == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE
            )
              try {
                __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
              } catch (e) {
                console.error(e);
              }
          })(),
            (e.exports = n(801));
        },
        926: function (e, t, n) {
          'use strict';
          var r = n(896).default,
            i = 'function' == typeof Symbol && Symbol.for,
            o = i ? Symbol.for('react.element') : 60103,
            a = i ? Symbol.for('react.portal') : 60106,
            s = i ? Symbol.for('react.fragment') : 60107,
            l = i ? Symbol.for('react.strict_mode') : 60108,
            u = i ? Symbol.for('react.profiler') : 60114,
            c = i ? Symbol.for('react.provider') : 60109,
            f = i ? Symbol.for('react.context') : 60110,
            h = i ? Symbol.for('react.async_mode') : 60111,
            d = i ? Symbol.for('react.concurrent_mode') : 60111,
            g = i ? Symbol.for('react.forward_ref') : 60112,
            p = i ? Symbol.for('react.suspense') : 60113,
            v = i ? Symbol.for('react.suspense_list') : 60120,
            y = i ? Symbol.for('react.memo') : 60115,
            m = i ? Symbol.for('react.lazy') : 60116,
            b = i ? Symbol.for('react.block') : 60121,
            k = i ? Symbol.for('react.fundamental') : 60117,
            w = i ? Symbol.for('react.responder') : 60118,
            x = i ? Symbol.for('react.scope') : 60119;
          function C(e) {
            if ('object' === r(e) && null !== e) {
              var t = e.$$typeof;
              switch (t) {
                case o:
                  switch ((e = e.type)) {
                    case h:
                    case d:
                    case s:
                    case u:
                    case l:
                    case p:
                      return e;
                    default:
                      switch ((e = e && e.$$typeof)) {
                        case f:
                        case g:
                        case m:
                        case y:
                        case c:
                          return e;
                        default:
                          return t;
                      }
                  }
                case a:
                  return t;
              }
            }
          }
          function S(e) {
            return C(e) === d;
          }
          (t.isFragment = function (e) {
            return C(e) === s;
          }),
            (t.isMemo = function (e) {
              return C(e) === y;
            });
        },
        201: function (e, t, n) {
          'use strict';
          e.exports = n(926);
        },
        313: function (e, t, n) {
          'use strict';
          var r = n(896).default,
            i = Symbol.for('react.element'),
            o = Symbol.for('react.portal'),
            a = Symbol.for('react.fragment'),
            s = Symbol.for('react.strict_mode'),
            l = Symbol.for('react.profiler'),
            u = Symbol.for('react.provider'),
            c = Symbol.for('react.context'),
            f = Symbol.for('react.forward_ref'),
            h = Symbol.for('react.suspense'),
            d = Symbol.for('react.memo'),
            g = Symbol.for('react.lazy'),
            p = Symbol.iterator;
          var v = {
              isMounted: function () {
                return !1;
              },
              enqueueForceUpdate: function () {},
              enqueueReplaceState: function () {},
              enqueueSetState: function () {},
            },
            y = Object.assign,
            m = {};
          function b(e, t, n) {
            (this.props = e),
              (this.context = t),
              (this.refs = m),
              (this.updater = n || v);
          }
          function k() {}
          function w(e, t, n) {
            (this.props = e),
              (this.context = t),
              (this.refs = m),
              (this.updater = n || v);
          }
          (b.prototype.isReactComponent = {}),
            (b.prototype.setState = function (e, t) {
              if ('object' !== r(e) && 'function' != typeof e && null != e)
                throw Error(
                  'setState(...): takes an object of state variables to update or a function which returns an object of state variables.'
                );
              this.updater.enqueueSetState(this, e, t, 'setState');
            }),
            (b.prototype.forceUpdate = function (e) {
              this.updater.enqueueForceUpdate(this, e, 'forceUpdate');
            }),
            (k.prototype = b.prototype);
          var x = (w.prototype = new k());
          (x.constructor = w), y(x, b.prototype), (x.isPureReactComponent = !0);
          var C = Array.isArray,
            S = Object.prototype.hasOwnProperty,
            E = { current: null },
            O = { key: !0, ref: !0, __self: !0, __source: !0 };
          function P(e, t, n) {
            var r,
              o = {},
              a = null,
              s = null;
            if (null != t)
              for (r in (void 0 !== t.ref && (s = t.ref),
              void 0 !== t.key && (a = '' + t.key),
              t))
                S.call(t, r) && !O.hasOwnProperty(r) && (o[r] = t[r]);
            var l = arguments.length - 2;
            if (1 === l) o.children = n;
            else if (1 < l) {
              for (var u = Array(l), c = 0; c < l; c++) u[c] = arguments[c + 2];
              o.children = u;
            }
            if (e && e.defaultProps)
              for (r in (l = e.defaultProps)) void 0 === o[r] && (o[r] = l[r]);
            return {
              $$typeof: i,
              type: e,
              key: a,
              ref: s,
              props: o,
              _owner: E.current,
            };
          }
          function A(e) {
            return 'object' === r(e) && null !== e && e.$$typeof === i;
          }
          var M = /\/+/g;
          function T(e, t) {
            return 'object' === r(e) && null !== e && null != e.key
              ? (function (e) {
                  var t = { '=': '=0', ':': '=2' };
                  return (
                    '$' +
                    e.replace(/[=:]/g, function (e) {
                      return t[e];
                    })
                  );
                })('' + e.key)
              : t.toString(36);
          }
          function N(e, t, n, a, s) {
            var l = r(e);
            ('undefined' !== l && 'boolean' !== l) || (e = null);
            var u = !1;
            if (null === e) u = !0;
            else
              switch (l) {
                case 'string':
                case 'number':
                  u = !0;
                  break;
                case 'object':
                  switch (e.$$typeof) {
                    case i:
                    case o:
                      u = !0;
                  }
              }
            if (u)
              return (
                (s = s((u = e))),
                (e = '' === a ? '.' + T(u, 0) : a),
                C(s)
                  ? ((n = ''),
                    null != e && (n = e.replace(M, '$&/') + '/'),
                    N(s, t, n, '', function (e) {
                      return e;
                    }))
                  : null != s &&
                    (A(s) &&
                      (s = (function (e, t) {
                        return {
                          $$typeof: i,
                          type: e.type,
                          key: t,
                          ref: e.ref,
                          props: e.props,
                          _owner: e._owner,
                        };
                      })(
                        s,
                        n +
                          (!s.key || (u && u.key === s.key)
                            ? ''
                            : ('' + s.key).replace(M, '$&/') + '/') +
                          e
                      )),
                    t.push(s)),
                1
              );
            if (((u = 0), (a = '' === a ? '.' : a + ':'), C(e)))
              for (var c = 0; c < e.length; c++) {
                var f = a + T((l = e[c]), c);
                u += N(l, t, n, f, s);
              }
            else if (
              ((f = (function (e) {
                return null === e || 'object' !== r(e)
                  ? null
                  : 'function' == typeof (e = (p && e[p]) || e['@@iterator'])
                  ? e
                  : null;
              })(e)),
              'function' == typeof f)
            )
              for (e = f.call(e), c = 0; !(l = e.next()).done; )
                u += N((l = l.value), t, n, (f = a + T(l, c++)), s);
            else if ('object' === l)
              throw (
                ((t = String(e)),
                Error(
                  'Objects are not valid as a React child (found: ' +
                    ('[object Object]' === t
                      ? 'object with keys {' + Object.keys(e).join(', ') + '}'
                      : t) +
                    '). If you meant to render a collection of children, use an array instead.'
                ))
              );
            return u;
          }
          function j(e, t, n) {
            if (null == e) return e;
            var r = [],
              i = 0;
            return (
              N(e, r, '', '', function (e) {
                return t.call(n, e, i++);
              }),
              r
            );
          }
          function L(e) {
            if (-1 === e._status) {
              var t = e._result;
              (t = t()).then(
                function (t) {
                  (0 !== e._status && -1 !== e._status) ||
                    ((e._status = 1), (e._result = t));
                },
                function (t) {
                  (0 !== e._status && -1 !== e._status) ||
                    ((e._status = 2), (e._result = t));
                }
              ),
                -1 === e._status && ((e._status = 0), (e._result = t));
            }
            if (1 === e._status) return e._result.default;
            throw e._result;
          }
          var R = { current: null },
            _ = { transition: null },
            I = {
              ReactCurrentDispatcher: R,
              ReactCurrentBatchConfig: _,
              ReactCurrentOwner: E,
            };
          (t.Children = {
            map: j,
            forEach: function (e, t, n) {
              j(
                e,
                function () {
                  t.apply(this, arguments);
                },
                n
              );
            },
            count: function (e) {
              var t = 0;
              return (
                j(e, function () {
                  t++;
                }),
                t
              );
            },
            toArray: function (e) {
              return (
                j(e, function (e) {
                  return e;
                }) || []
              );
            },
            only: function (e) {
              if (!A(e))
                throw Error(
                  'React.Children.only expected to receive a single React element child.'
                );
              return e;
            },
          }),
            (t.Component = b),
            (t.Fragment = a),
            (t.Profiler = l),
            (t.PureComponent = w),
            (t.StrictMode = s),
            (t.Suspense = h),
            (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = I),
            (t.cloneElement = function (e, t, n) {
              if (null == e)
                throw Error(
                  'React.cloneElement(...): The argument must be a React element, but you passed ' +
                    e +
                    '.'
                );
              var r = y({}, e.props),
                o = e.key,
                a = e.ref,
                s = e._owner;
              if (null != t) {
                if (
                  (void 0 !== t.ref && ((a = t.ref), (s = E.current)),
                  void 0 !== t.key && (o = '' + t.key),
                  e.type && e.type.defaultProps)
                )
                  var l = e.type.defaultProps;
                for (u in t)
                  S.call(t, u) &&
                    !O.hasOwnProperty(u) &&
                    (r[u] = void 0 === t[u] && void 0 !== l ? l[u] : t[u]);
              }
              var u = arguments.length - 2;
              if (1 === u) r.children = n;
              else if (1 < u) {
                l = Array(u);
                for (var c = 0; c < u; c++) l[c] = arguments[c + 2];
                r.children = l;
              }
              return {
                $$typeof: i,
                type: e.type,
                key: o,
                ref: a,
                props: r,
                _owner: s,
              };
            }),
            (t.createContext = function (e) {
              return (
                ((e = {
                  $$typeof: c,
                  _currentValue: e,
                  _currentValue2: e,
                  _threadCount: 0,
                  Provider: null,
                  Consumer: null,
                  _defaultValue: null,
                  _globalName: null,
                }).Provider = { $$typeof: u, _context: e }),
                (e.Consumer = e)
              );
            }),
            (t.createElement = P),
            (t.createFactory = function (e) {
              var t = P.bind(null, e);
              return (t.type = e), t;
            }),
            (t.createRef = function () {
              return { current: null };
            }),
            (t.forwardRef = function (e) {
              return { $$typeof: f, render: e };
            }),
            (t.isValidElement = A),
            (t.lazy = function (e) {
              return {
                $$typeof: g,
                _payload: { _status: -1, _result: e },
                _init: L,
              };
            }),
            (t.memo = function (e, t) {
              return { $$typeof: d, type: e, compare: void 0 === t ? null : t };
            }),
            (t.startTransition = function (e) {
              var t = _.transition;
              _.transition = {};
              try {
                e();
              } finally {
                _.transition = t;
              }
            }),
            (t.unstable_act = function () {
              throw Error(
                'act(...) is not supported in production builds of React.'
              );
            }),
            (t.useCallback = function (e, t) {
              return R.current.useCallback(e, t);
            }),
            (t.useContext = function (e) {
              return R.current.useContext(e);
            }),
            (t.useDebugValue = function () {}),
            (t.useDeferredValue = function (e) {
              return R.current.useDeferredValue(e);
            }),
            (t.useEffect = function (e, t) {
              return R.current.useEffect(e, t);
            }),
            (t.useId = function () {
              return R.current.useId();
            }),
            (t.useImperativeHandle = function (e, t, n) {
              return R.current.useImperativeHandle(e, t, n);
            }),
            (t.useInsertionEffect = function (e, t) {
              return R.current.useInsertionEffect(e, t);
            }),
            (t.useLayoutEffect = function (e, t) {
              return R.current.useLayoutEffect(e, t);
            }),
            (t.useMemo = function (e, t) {
              return R.current.useMemo(e, t);
            }),
            (t.useReducer = function (e, t, n) {
              return R.current.useReducer(e, t, n);
            }),
            (t.useRef = function (e) {
              return R.current.useRef(e);
            }),
            (t.useState = function (e) {
              return R.current.useState(e);
            }),
            (t.useSyncExternalStore = function (e, t, n) {
              return R.current.useSyncExternalStore(e, t, n);
            }),
            (t.useTransition = function () {
              return R.current.useTransition();
            }),
            (t.version = '18.2.0');
        },
        534: function (e, t, n) {
          'use strict';
          e.exports = n(313);
        },
        899: function (e, t, n) {
          'use strict';
          var r = n(896).default;
          function i(e, t) {
            var n = e.length;
            e.push(t);
            e: for (; 0 < n; ) {
              var r = (n - 1) >>> 1,
                i = e[r];
              if (!(0 < s(i, t))) break e;
              (e[r] = t), (e[n] = i), (n = r);
            }
          }
          function o(e) {
            return 0 === e.length ? null : e[0];
          }
          function a(e) {
            if (0 === e.length) return null;
            var t = e[0],
              n = e.pop();
            if (n !== t) {
              e[0] = n;
              e: for (var r = 0, i = e.length, o = i >>> 1; r < o; ) {
                var a = 2 * (r + 1) - 1,
                  l = e[a],
                  u = a + 1,
                  c = e[u];
                if (0 > s(l, n))
                  u < i && 0 > s(c, l)
                    ? ((e[r] = c), (e[u] = n), (r = u))
                    : ((e[r] = l), (e[a] = n), (r = a));
                else {
                  if (!(u < i && 0 > s(c, n))) break e;
                  (e[r] = c), (e[u] = n), (r = u);
                }
              }
            }
            return t;
          }
          function s(e, t) {
            var n = e.sortIndex - t.sortIndex;
            return 0 !== n ? n : e.id - t.id;
          }
          if (
            'object' ===
              ('undefined' == typeof performance
                ? 'undefined'
                : r(performance)) &&
            'function' == typeof performance.now
          ) {
            var l = performance;
            t.unstable_now = function () {
              return l.now();
            };
          } else {
            var u = Date,
              c = u.now();
            t.unstable_now = function () {
              return u.now() - c;
            };
          }
          var f = [],
            h = [],
            d = 1,
            g = null,
            p = 3,
            v = !1,
            y = !1,
            m = !1,
            b = 'function' == typeof setTimeout ? setTimeout : null,
            k = 'function' == typeof clearTimeout ? clearTimeout : null,
            w = 'undefined' != typeof setImmediate ? setImmediate : null;
          function x(e) {
            for (var t = o(h); null !== t; ) {
              if (null === t.callback) a(h);
              else {
                if (!(t.startTime <= e)) break;
                a(h), (t.sortIndex = t.expirationTime), i(f, t);
              }
              t = o(h);
            }
          }
          function C(e) {
            if (((m = !1), x(e), !y))
              if (null !== o(f)) (y = !0), _(S);
              else {
                var t = o(h);
                null !== t && I(C, t.startTime - e);
              }
          }
          function S(e, n) {
            (y = !1), m && ((m = !1), k(A), (A = -1)), (v = !0);
            var r = p;
            try {
              for (
                x(n), g = o(f);
                null !== g && (!(g.expirationTime > n) || (e && !N()));

              ) {
                var i = g.callback;
                if ('function' == typeof i) {
                  (g.callback = null), (p = g.priorityLevel);
                  var s = i(g.expirationTime <= n);
                  (n = t.unstable_now()),
                    'function' == typeof s
                      ? (g.callback = s)
                      : g === o(f) && a(f),
                    x(n);
                } else a(f);
                g = o(f);
              }
              if (null !== g) var l = !0;
              else {
                var u = o(h);
                null !== u && I(C, u.startTime - n), (l = !1);
              }
              return l;
            } finally {
              (g = null), (p = r), (v = !1);
            }
          }
          'undefined' != typeof navigator &&
            void 0 !== navigator.scheduling &&
            void 0 !== navigator.scheduling.isInputPending &&
            navigator.scheduling.isInputPending.bind(navigator.scheduling);
          var E,
            O = !1,
            P = null,
            A = -1,
            M = 5,
            T = -1;
          function N() {
            return !(t.unstable_now() - T < M);
          }
          function j() {
            if (null !== P) {
              var e = t.unstable_now();
              T = e;
              var n = !0;
              try {
                n = P(!0, e);
              } finally {
                n ? E() : ((O = !1), (P = null));
              }
            } else O = !1;
          }
          if ('function' == typeof w)
            E = function () {
              w(j);
            };
          else if ('undefined' != typeof MessageChannel) {
            var L = new MessageChannel(),
              R = L.port2;
            (L.port1.onmessage = j),
              (E = function () {
                R.postMessage(null);
              });
          } else
            E = function () {
              b(j, 0);
            };
          function _(e) {
            (P = e), O || ((O = !0), E());
          }
          function I(e, n) {
            A = b(function () {
              e(t.unstable_now());
            }, n);
          }
          (t.unstable_IdlePriority = 5),
            (t.unstable_ImmediatePriority = 1),
            (t.unstable_LowPriority = 4),
            (t.unstable_NormalPriority = 3),
            (t.unstable_Profiling = null),
            (t.unstable_UserBlockingPriority = 2),
            (t.unstable_cancelCallback = function (e) {
              e.callback = null;
            }),
            (t.unstable_continueExecution = function () {
              y || v || ((y = !0), _(S));
            }),
            (t.unstable_forceFrameRate = function (e) {
              0 > e || 125 < e
                ? console.error(
                    'forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported'
                  )
                : (M = 0 < e ? Math.floor(1e3 / e) : 5);
            }),
            (t.unstable_getCurrentPriorityLevel = function () {
              return p;
            }),
            (t.unstable_getFirstCallbackNode = function () {
              return o(f);
            }),
            (t.unstable_next = function (e) {
              switch (p) {
                case 1:
                case 2:
                case 3:
                  var t = 3;
                  break;
                default:
                  t = p;
              }
              var n = p;
              p = t;
              try {
                return e();
              } finally {
                p = n;
              }
            }),
            (t.unstable_pauseExecution = function () {}),
            (t.unstable_requestPaint = function () {}),
            (t.unstable_runWithPriority = function (e, t) {
              switch (e) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                  break;
                default:
                  e = 3;
              }
              var n = p;
              p = e;
              try {
                return t();
              } finally {
                p = n;
              }
            }),
            (t.unstable_scheduleCallback = function (e, n, a) {
              var s = t.unstable_now();
              switch (
                ('object' === r(a) && null !== a
                  ? (a = 'number' == typeof (a = a.delay) && 0 < a ? s + a : s)
                  : (a = s),
                e)
              ) {
                case 1:
                  var l = -1;
                  break;
                case 2:
                  l = 250;
                  break;
                case 5:
                  l = 1073741823;
                  break;
                case 4:
                  l = 1e4;
                  break;
                default:
                  l = 5e3;
              }
              return (
                (e = {
                  id: d++,
                  callback: n,
                  priorityLevel: e,
                  startTime: a,
                  expirationTime: (l = a + l),
                  sortIndex: -1,
                }),
                a > s
                  ? ((e.sortIndex = a),
                    i(h, e),
                    null === o(f) &&
                      e === o(h) &&
                      (m ? (k(A), (A = -1)) : (m = !0), I(C, a - s)))
                  : ((e.sortIndex = l), i(f, e), y || v || ((y = !0), _(S))),
                e
              );
            }),
            (t.unstable_shouldYield = N),
            (t.unstable_wrapCallback = function (e) {
              var t = p;
              return function () {
                var n = p;
                p = t;
                try {
                  return e.apply(this, arguments);
                } finally {
                  p = n;
                }
              };
            });
        },
        547: function (e, t, n) {
          'use strict';
          e.exports = n(899);
        },
        473: function (e) {
          (e.exports = function (e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        609: function (e) {
          (e.exports = function (e) {
            if (Array.isArray(e)) return e;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        688: function (e, t, n) {
          var r = n(473);
          (e.exports = function (e) {
            if (Array.isArray(e)) return r(e);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        343: function (e) {
          (e.exports = function (e) {
            if (void 0 === e)
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            return e;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        459: function (e) {
          (e.exports = function (e, t) {
            if (!(e instanceof t))
              throw new TypeError('Cannot call a class as a function');
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        383: function (e, t, n) {
          var r = n(697);
          function i(e, t) {
            for (var n = 0; n < t.length; n++) {
              var i = t[n];
              (i.enumerable = i.enumerable || !1),
                (i.configurable = !0),
                'value' in i && (i.writable = !0),
                Object.defineProperty(e, r(i.key), i);
            }
          }
          (e.exports = function (e, t, n) {
            return (
              t && i(e.prototype, t),
              n && i(e, n),
              Object.defineProperty(e, 'prototype', { writable: !1 }),
              e
            );
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        304: function (e, t, n) {
          var r = n(349);
          (e.exports = function (e, t) {
            var n =
              ('undefined' != typeof Symbol && e[Symbol.iterator]) ||
              e['@@iterator'];
            if (!n) {
              if (
                Array.isArray(e) ||
                (n = r(e)) ||
                (t && e && 'number' == typeof e.length)
              ) {
                n && (e = n);
                var i = 0,
                  o = function () {};
                return {
                  s: o,
                  n: function () {
                    return i >= e.length
                      ? { done: !0 }
                      : { done: !1, value: e[i++] };
                  },
                  e: function (e) {
                    throw e;
                  },
                  f: o,
                };
              }
              throw new TypeError(
                'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
              );
            }
            var a,
              s = !0,
              l = !1;
            return {
              s: function () {
                n = n.call(e);
              },
              n: function () {
                var e = n.next();
                return (s = e.done), e;
              },
              e: function (e) {
                (l = !0), (a = e);
              },
              f: function () {
                try {
                  s || null == n.return || n.return();
                } finally {
                  if (l) throw a;
                }
              },
            };
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        525: function (e, t, n) {
          var r = n(53),
            i = n(500),
            o = n(378);
          (e.exports = function (e) {
            var t = i();
            return function () {
              var n,
                i = r(e);
              if (t) {
                var a = r(this).constructor;
                n = Reflect.construct(i, arguments, a);
              } else n = i.apply(this, arguments);
              return o(this, n);
            };
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        430: function (e, t, n) {
          var r = n(697);
          (e.exports = function (e, t, n) {
            return (
              (t = r(t)) in e
                ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                  })
                : (e[t] = n),
              e
            );
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        929: function (e, t, n) {
          var r = n(872);
          function i() {
            return (
              'undefined' != typeof Reflect && Reflect.get
                ? ((e.exports = i = Reflect.get.bind()),
                  (e.exports.__esModule = !0),
                  (e.exports.default = e.exports))
                : ((e.exports = i =
                    function (e, t, n) {
                      var i = r(e, t);
                      if (i) {
                        var o = Object.getOwnPropertyDescriptor(i, t);
                        return o.get
                          ? o.get.call(arguments.length < 3 ? e : n)
                          : o.value;
                      }
                    }),
                  (e.exports.__esModule = !0),
                  (e.exports.default = e.exports)),
              i.apply(this, arguments)
            );
          }
          (e.exports = i),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        53: function (e) {
          function t(n) {
            return (
              (e.exports = t =
                Object.setPrototypeOf
                  ? Object.getPrototypeOf.bind()
                  : function (e) {
                      return e.__proto__ || Object.getPrototypeOf(e);
                    }),
              (e.exports.__esModule = !0),
              (e.exports.default = e.exports),
              t(n)
            );
          }
          (e.exports = t),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        486: function (e, t, n) {
          var r = n(335);
          (e.exports = function (e, t) {
            if ('function' != typeof t && null !== t)
              throw new TypeError(
                'Super expression must either be null or a function'
              );
            (e.prototype = Object.create(t && t.prototype, {
              constructor: { value: e, writable: !0, configurable: !0 },
            })),
              Object.defineProperty(e, 'prototype', { writable: !1 }),
              t && r(e, t);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        500: function (e) {
          (e.exports = function () {
            if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ('function' == typeof Proxy) return !0;
            try {
              return (
                Boolean.prototype.valueOf.call(
                  Reflect.construct(Boolean, [], function () {})
                ),
                !0
              );
            } catch (e) {
              return !1;
            }
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        495: function (e) {
          (e.exports = function (e) {
            if (
              ('undefined' != typeof Symbol && null != e[Symbol.iterator]) ||
              null != e['@@iterator']
            )
              return Array.from(e);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        166: function (e) {
          (e.exports = function (e, t) {
            var n =
              null == e
                ? null
                : ('undefined' != typeof Symbol && e[Symbol.iterator]) ||
                  e['@@iterator'];
            if (null != n) {
              var r,
                i,
                o,
                a,
                s = [],
                l = !0,
                u = !1;
              try {
                if (((o = (n = n.call(e)).next), 0 === t)) {
                  if (Object(n) !== n) return;
                  l = !1;
                } else
                  for (
                    ;
                    !(l = (r = o.call(n)).done) &&
                    (s.push(r.value), s.length !== t);
                    l = !0
                  );
              } catch (e) {
                (u = !0), (i = e);
              } finally {
                try {
                  if (
                    !l &&
                    null != n.return &&
                    ((a = n.return()), Object(a) !== a)
                  )
                    return;
                } finally {
                  if (u) throw i;
                }
              }
              return s;
            }
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        374: function (e) {
          (e.exports = function () {
            throw new TypeError(
              'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
            );
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        194: function (e) {
          (e.exports = function () {
            throw new TypeError(
              'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
            );
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        488: function (e, t, n) {
          var r = n(430);
          function i(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
              var r = Object.getOwnPropertySymbols(e);
              t &&
                (r = r.filter(function (t) {
                  return Object.getOwnPropertyDescriptor(e, t).enumerable;
                })),
                n.push.apply(n, r);
            }
            return n;
          }
          (e.exports = function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = null != arguments[t] ? arguments[t] : {};
              t % 2
                ? i(Object(n), !0).forEach(function (t) {
                    r(e, t, n[t]);
                  })
                : Object.getOwnPropertyDescriptors
                ? Object.defineProperties(
                    e,
                    Object.getOwnPropertyDescriptors(n)
                  )
                : i(Object(n)).forEach(function (t) {
                    Object.defineProperty(
                      e,
                      t,
                      Object.getOwnPropertyDescriptor(n, t)
                    );
                  });
            }
            return e;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        378: function (e, t, n) {
          var r = n(896).default,
            i = n(343);
          (e.exports = function (e, t) {
            if (t && ('object' === r(t) || 'function' == typeof t)) return t;
            if (void 0 !== t)
              throw new TypeError(
                'Derived constructors may only return object or undefined'
              );
            return i(e);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        335: function (e) {
          function t(n, r) {
            return (
              (e.exports = t =
                Object.setPrototypeOf
                  ? Object.setPrototypeOf.bind()
                  : function (e, t) {
                      return (e.__proto__ = t), e;
                    }),
              (e.exports.__esModule = !0),
              (e.exports.default = e.exports),
              t(n, r)
            );
          }
          (e.exports = t),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        709: function (e, t, n) {
          var r = n(609),
            i = n(166),
            o = n(349),
            a = n(374);
          (e.exports = function (e, t) {
            return r(e) || i(e, t) || o(e, t) || a();
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        872: function (e, t, n) {
          var r = n(53);
          (e.exports = function (e, t) {
            for (
              ;
              !Object.prototype.hasOwnProperty.call(e, t) &&
              null !== (e = r(e));

            );
            return e;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        966: function (e, t, n) {
          var r = n(688),
            i = n(495),
            o = n(349),
            a = n(194);
          (e.exports = function (e) {
            return r(e) || i(e) || o(e) || a();
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        462: function (e, t, n) {
          var r = n(896).default;
          (e.exports = function (e, t) {
            if ('object' !== r(e) || null === e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
              var i = n.call(e, t || 'default');
              if ('object' !== r(i)) return i;
              throw new TypeError(
                '@@toPrimitive must return a primitive value.'
              );
            }
            return ('string' === t ? String : Number)(e);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        697: function (e, t, n) {
          var r = n(896).default,
            i = n(462);
          (e.exports = function (e) {
            var t = i(e, 'string');
            return 'symbol' === r(t) ? t : String(t);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        896: function (e) {
          function t(n) {
            return (
              (e.exports = t =
                'function' == typeof Symbol &&
                'symbol' == typeof Symbol.iterator
                  ? function (e) {
                      return typeof e;
                    }
                  : function (e) {
                      return e &&
                        'function' == typeof Symbol &&
                        e.constructor === Symbol &&
                        e !== Symbol.prototype
                        ? 'symbol'
                        : typeof e;
                    }),
              (e.exports.__esModule = !0),
              (e.exports.default = e.exports),
              t(n)
            );
          }
          (e.exports = t),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        349: function (e, t, n) {
          var r = n(473);
          (e.exports = function (e, t) {
            if (e) {
              if ('string' == typeof e) return r(e, t);
              var n = Object.prototype.toString.call(e).slice(8, -1);
              return (
                'Object' === n && e.constructor && (n = e.constructor.name),
                'Map' === n || 'Set' === n
                  ? Array.from(e)
                  : 'Arguments' === n ||
                    /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                  ? r(e, t)
                  : void 0
              );
            }
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
      },
      r = {};
    function i(e) {
      var t = r[e];
      if (void 0 !== t) return t.exports;
      var o = (r[e] = { exports: {} });
      return n[e](o, o.exports, i), o.exports;
    }
    (i.amdO = {}),
      (i.n = function (e) {
        var t =
          e && e.__esModule
            ? function () {
                return e.default;
              }
            : function () {
                return e;
              };
        return i.d(t, { a: t }), t;
      }),
      (t = Object.getPrototypeOf
        ? function (e) {
            return Object.getPrototypeOf(e);
          }
        : function (e) {
            return e.__proto__;
          }),
      (i.t = function (n, r) {
        if ((1 & r && (n = this(n)), 8 & r)) return n;
        if ('object' == typeof n && n) {
          if (4 & r && n.__esModule) return n;
          if (16 & r && 'function' == typeof n.then) return n;
        }
        var o = Object.create(null);
        i.r(o);
        var a = {};
        e = e || [null, t({}), t([]), t(t)];
        for (
          var s = 2 & r && n;
          'object' == typeof s && !~e.indexOf(s);
          s = t(s)
        )
          Object.getOwnPropertyNames(s).forEach(function (e) {
            a[e] = function () {
              return n[e];
            };
          });
        return (
          (a.default = function () {
            return n;
          }),
          i.d(o, a),
          o
        );
      }),
      (i.d = function (e, t) {
        for (var n in t)
          i.o(t, n) &&
            !i.o(e, n) &&
            Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
      }),
      (i.g = (function () {
        if ('object' == typeof globalThis) return globalThis;
        try {
          return this || new Function('return this')();
        } catch (e) {
          if ('object' == typeof window) return window;
        }
      })()),
      (i.o = function (e, t) {
        return Object.prototype.hasOwnProperty.call(e, t);
      }),
      (i.r = function (e) {
        'undefined' != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
          Object.defineProperty(e, '__esModule', { value: !0 });
      });
    var o = {};
    return (
      (function () {
        'use strict';
        i.r(o),
          i.d(o, {
            default: function () {
              return HO;
            },
          });
        var e = {};
        i.r(e),
          i.d(e, {
            dot: function () {
              return Oc;
            },
            doubleMesh: function () {
              return Mc;
            },
            fixedDot: function () {
              return Pc;
            },
            mesh: function () {
              return Ac;
            },
          });
        var t = {};
        i.r(t),
          i.d(t, {
            flipX: function () {
              return Lc;
            },
            flipXY: function () {
              return _c;
            },
            flipY: function () {
              return Rc;
            },
            watermark: function () {
              return Ic;
            },
          });
        var n = {};
        i.r(n),
          i.d(n, {
            blur: function () {
              return Fc;
            },
            brightness: function () {
              return Yc;
            },
            contrast: function () {
              return Jc;
            },
            dropShadow: function () {
              return Uc;
            },
            grayScale: function () {
              return Hc;
            },
            highlight: function () {
              return Vc;
            },
            hueRotate: function () {
              return qc;
            },
            invert: function () {
              return Xc;
            },
            outline: function () {
              return Bc;
            },
            saturate: function () {
              return Wc;
            },
            sepia: function () {
              return Gc;
            },
          });
        var r = {};
        i.r(r),
          i.d(r, {
            async: function () {
              return lh;
            },
            block: function () {
              return Qf;
            },
            circle: function () {
              return ch;
            },
            circlePlus: function () {
              return fh;
            },
            classic: function () {
              return Kf;
            },
            cross: function () {
              return ah;
            },
            diamond: function () {
              return nh;
            },
            ellipse: function () {
              return dh;
            },
            path: function () {
              return ih;
            },
          });
        var a = {};
        i.r(a),
          i.d(a, {
            annotations: function () {
              return Df;
            },
            atConnectionLength: function () {
              return Ah;
            },
            atConnectionLengthIgnoreGradient: function () {
              return Eh;
            },
            atConnectionLengthKeepGradient: function () {
              return Sh;
            },
            atConnectionRatio: function () {
              return Mh;
            },
            atConnectionRatioIgnoreGradient: function () {
              return Ph;
            },
            atConnectionRatioKeepGradient: function () {
              return Oh;
            },
            connection: function () {
              return Ch;
            },
            displayEmpty: function () {
              return Bf;
            },
            eol: function () {
              return zf;
            },
            fill: function () {
              return Mf;
            },
            filter: function () {
              return Xf;
            },
            html: function () {
              return qf;
            },
            lineHeight: function () {
              return Rf;
            },
            port: function () {
              return Yf;
            },
            ref: function () {
              return Zc;
            },
            refCx: function () {
              return ff;
            },
            refCy: function () {
              return hf;
            },
            refD: function () {
              return mf;
            },
            refDKeepOffset: function () {
              return gf;
            },
            refDResetOffset: function () {
              return df;
            },
            refDx: function () {
              return nf;
            },
            refDy: function () {
              return rf;
            },
            refHeight: function () {
              return af;
            },
            refHeight2: function () {
              return Cf;
            },
            refPoints: function () {
              return bf;
            },
            refPointsKeepOffset: function () {
              return vf;
            },
            refPointsResetOffset: function () {
              return pf;
            },
            refR: function () {
              return yf;
            },
            refRCircumscribed: function () {
              return cf;
            },
            refRInscribed: function () {
              return uf;
            },
            refRx: function () {
              return sf;
            },
            refRy: function () {
              return lf;
            },
            refWidth: function () {
              return of;
            },
            refWidth2: function () {
              return xf;
            },
            refX: function () {
              return ef;
            },
            refX2: function () {
              return kf;
            },
            refY: function () {
              return tf;
            },
            refY2: function () {
              return wf;
            },
            resetOffset: function () {
              return Hf;
            },
            sourceMarker: function () {
              return vh;
            },
            stroke: function () {
              return Tf;
            },
            style: function () {
              return Wf;
            },
            targetMarker: function () {
              return yh;
            },
            text: function () {
              return Nf;
            },
            textPath: function () {
              return If;
            },
            textVerticalAnchor: function () {
              return _f;
            },
            textWrap: function () {
              return jf;
            },
            title: function () {
              return Vf;
            },
            vertexMarker: function () {
              return mh;
            },
            xAlign: function () {
              return Ff;
            },
            yAlign: function () {
              return Uf;
            },
          });
        var s = {};
        i.r(s),
          i.d(s, {
            className: function () {
              return Rh;
            },
            opacity: function () {
              return Ih;
            },
            stroke: function () {
              return Vh;
            },
          });
        var l = {};
        i.r(l),
          i.d(l, {
            absolute: function () {
              return Hh;
            },
            bottom: function () {
              return Zh;
            },
            ellipse: function () {
              return Gh;
            },
            ellipseSpread: function () {
              return Wh;
            },
            left: function () {
              return $h;
            },
            line: function () {
              return Jh;
            },
            right: function () {
              return Qh;
            },
            top: function () {
              return Kh;
            },
          });
        var u = {};
        i.r(u),
          i.d(u, {
            bottom: function () {
              return sd;
            },
            inside: function () {
              return cd;
            },
            insideOriented: function () {
              return fd;
            },
            left: function () {
              return id;
            },
            manual: function () {
              return rd;
            },
            outside: function () {
              return ld;
            },
            outsideOriented: function () {
              return ud;
            },
            radial: function () {
              return vd;
            },
            radialOriented: function () {
              return yd;
            },
            right: function () {
              return od;
            },
            top: function () {
              return ad;
            },
          });
        var c = {};
        i.r(c),
          i.d(c, {
            noop: function () {
              return jd;
            },
            pinAbsolute: function () {
              return Dd;
            },
            pinRelative: function () {
              return Id;
            },
          });
        var f = {};
        i.r(f),
          i.d(f, {
            bottom: function () {
              return ig;
            },
            bottomLeft: function () {
              return ug;
            },
            bottomRight: function () {
              return cg;
            },
            center: function () {
              return ng;
            },
            left: function () {
              return og;
            },
            midSide: function () {
              return yg;
            },
            nodeCenter: function () {
              return vg;
            },
            orth: function () {
              return pg;
            },
            right: function () {
              return ag;
            },
            top: function () {
              return rg;
            },
            topLeft: function () {
              return sg;
            },
            topRight: function () {
              return lg;
            },
          });
        var h = {};
        i.r(h),
          i.d(h, {
            closest: function () {
              return xg;
            },
            length: function () {
              return kg;
            },
            orth: function () {
              return Cg;
            },
            ratio: function () {
              return bg;
            },
          });
        var d = {};
        i.r(d),
          i.d(d, {
            anchor: function () {
              return Tg;
            },
            bbox: function () {
              return Og;
            },
            boundary: function () {
              return Ag;
            },
            rect: function () {
              return Pg;
            },
          });
        var g = {};
        i.r(g),
          i.d(g, {
            er: function () {
              return sp;
            },
            loop: function () {
              return cp;
            },
            manhattan: function () {
              return ip;
            },
            metro: function () {
              return ap;
            },
            normal: function () {
              return Ng;
            },
            oneSide: function () {
              return jg;
            },
            orth: function () {
              return zg;
            },
          });
        var p = {};
        i.r(p),
          i.d(p, {
            jumpover: function () {
              return Op;
            },
            loop: function () {
              return gp;
            },
            normal: function () {
              return dp;
            },
            rounded: function () {
              return pp;
            },
            smooth: function () {
              return vp;
            },
          });
        var v = i(459),
          y = i.n(v),
          m = i(383),
          b = i.n(m),
          k = i(430),
          w = i.n(k),
          x = i(488),
          C = i.n(x),
          S = i(534),
          E = i.t(S, 2),
          O =
            (i(791),
            (function () {
              function e() {
                y()(this, e);
              }
              return (
                b()(e, [
                  {
                    key: 'disposed',
                    get: function () {
                      return !0 === this._disposed;
                    },
                  },
                  {
                    key: 'dispose',
                    value: function () {
                      this._disposed = !0;
                    },
                  },
                ]),
                e
              );
            })());
        !(function (e) {
          e.dispose = function () {
            return function (e, t, n) {
              var r = n.value,
                i = e.__proto__;
              n.value = function () {
                this.disposed || (r.call(this), i.dispose.call(this));
              };
            };
          };
        })(O || (O = {}));
        var P = (function () {
          function e() {
            y()(this, e), (this.isDisposed = !1), (this.items = new Set());
          }
          return (
            b()(e, [
              {
                key: 'disposed',
                get: function () {
                  return this.isDisposed;
                },
              },
              {
                key: 'dispose',
                value: function () {
                  this.isDisposed ||
                    ((this.isDisposed = !0),
                    this.items.forEach(function (e) {
                      e.dispose();
                    }),
                    this.items.clear());
                },
              },
              {
                key: 'contains',
                value: function (e) {
                  return this.items.has(e);
                },
              },
              {
                key: 'add',
                value: function (e) {
                  this.items.add(e);
                },
              },
              {
                key: 'remove',
                value: function (e) {
                  this.items.delete(e);
                },
              },
              {
                key: 'clear',
                value: function () {
                  this.items.clear();
                },
              },
            ]),
            e
          );
        })();
        !(function (e) {
          e.from = function (t) {
            var n = new e();
            return (
              t.forEach(function (e) {
                n.add(e);
              }),
              n
            );
          };
        })(P || (P = {}));
        var A = i(486),
          M = i.n(A),
          T = i(525),
          N = i.n(T),
          j = i(966),
          L = i.n(j),
          R = i(896),
          _ = i.n(R);
        var I = function (e) {
            var t = R(e);
            return null != e && ('object' == t || 'function' == t);
          },
          D =
            'object' ==
              ('undefined' == typeof global ? 'undefined' : R(global)) &&
            global &&
            global.Object === Object &&
            global,
          z =
            'object' == ('undefined' == typeof self ? 'undefined' : R(self)) &&
            self &&
            self.Object === Object &&
            self,
          B = D || z || Function('return this')(),
          V = function () {
            return B.Date.now();
          },
          F = /\s/;
        var U = function (e) {
            for (var t = e.length; t-- && F.test(e.charAt(t)); );
            return t;
          },
          H = /^\s+/;
        var G = function (e) {
            return e ? e.slice(0, U(e) + 1).replace(H, '') : e;
          },
          W = B.Symbol,
          q = Object.prototype,
          X = q.hasOwnProperty,
          Y = q.toString,
          J = W ? W.toStringTag : void 0;
        var $ = function (e) {
            var t = X.call(e, J),
              n = e[J];
            try {
              e[J] = void 0;
              var r = !0;
            } catch (e) {}
            var i = Y.call(e);
            return r && (t ? (e[J] = n) : delete e[J]), i;
          },
          Q = Object.prototype.toString;
        var K = function (e) {
            return Q.call(e);
          },
          Z = W ? W.toStringTag : void 0;
        var ee = function (e) {
          return null == e
            ? void 0 === e
              ? '[object Undefined]'
              : '[object Null]'
            : Z && Z in Object(e)
            ? $(e)
            : K(e);
        };
        var te = function (e) {
          return null != e && 'object' == R(e);
        };
        var ne = function (e) {
            return 'symbol' == R(e) || (te(e) && '[object Symbol]' == ee(e));
          },
          re = /^[-+]0x[0-9a-f]+$/i,
          ie = /^0b[01]+$/i,
          oe = /^0o[0-7]+$/i,
          ae = parseInt;
        var se = function (e) {
            if ('number' == typeof e) return e;
            if (ne(e)) return NaN;
            if (I(e)) {
              var t = 'function' == typeof e.valueOf ? e.valueOf() : e;
              e = I(t) ? t + '' : t;
            }
            if ('string' != typeof e) return 0 === e ? e : +e;
            e = G(e);
            var n = ie.test(e);
            return n || oe.test(e)
              ? ae(e.slice(2), n ? 2 : 8)
              : re.test(e)
              ? NaN
              : +e;
          },
          le = Math.max,
          ue = Math.min;
        var ce = function (e, t, n) {
          var r,
            i,
            o,
            a,
            s,
            l,
            u = 0,
            c = !1,
            f = !1,
            h = !0;
          if ('function' != typeof e)
            throw new TypeError('Expected a function');
          function d(t) {
            var n = r,
              o = i;
            return (r = i = void 0), (u = t), (a = e.apply(o, n));
          }
          function g(e) {
            return (u = e), (s = setTimeout(v, t)), c ? d(e) : a;
          }
          function p(e) {
            var n = e - l;
            return void 0 === l || n >= t || n < 0 || (f && e - u >= o);
          }
          function v() {
            var e = V();
            if (p(e)) return y(e);
            s = setTimeout(
              v,
              (function (e) {
                var n = t - (e - l);
                return f ? ue(n, o - (e - u)) : n;
              })(e)
            );
          }
          function y(e) {
            return (s = void 0), h && r ? d(e) : ((r = i = void 0), a);
          }
          function m() {
            var e = V(),
              n = p(e);
            if (((r = arguments), (i = this), (l = e), n)) {
              if (void 0 === s) return g(l);
              if (f) return clearTimeout(s), (s = setTimeout(v, t)), d(l);
            }
            return void 0 === s && (s = setTimeout(v, t)), a;
          }
          return (
            (t = se(t) || 0),
            I(n) &&
              ((c = !!n.leading),
              (o = (f = 'maxWait' in n) ? le(se(n.maxWait) || 0, t) : o),
              (h = 'trailing' in n ? !!n.trailing : h)),
            (m.cancel = function () {
              void 0 !== s && clearTimeout(s),
                (u = 0),
                (r = l = i = s = void 0);
            }),
            (m.flush = function () {
              return void 0 === s ? a : y(V());
            }),
            m
          );
        };
        var fe = function (e, t, n) {
          var r = !0,
            i = !0;
          if ('function' != typeof e)
            throw new TypeError('Expected a function');
          return (
            I(n) &&
              ((r = 'leading' in n ? !!n.leading : r),
              (i = 'trailing' in n ? !!n.trailing : i)),
            ce(e, t, { leading: r, maxWait: t, trailing: i })
          );
        };
        function he(e, t, n) {
          if (n)
            switch (n.length) {
              case 0:
                return e.call(t);
              case 1:
                return e.call(t, n[0]);
              case 2:
                return e.call(t, n[0], n[1]);
              case 3:
                return e.call(t, n[0], n[1], n[2]);
              case 4:
                return e.call(t, n[0], n[1], n[2], n[3]);
              case 5:
                return e.call(t, n[0], n[1], n[2], n[3], n[4]);
              case 6:
                return e.call(t, n[0], n[1], n[2], n[3], n[4], n[5]);
              default:
                return e.apply(t, n);
            }
          return e.call(t);
        }
        function de(e, t) {
          for (
            var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), i = 2;
            i < n;
            i++
          )
            r[i - 2] = arguments[i];
          return he(e, t, r);
        }
        function ge(e) {
          return (
            null != e &&
            (e instanceof Promise ||
              (function (e) {
                return (
                  'object' === _()(e) && e.then && 'function' == typeof e.then
                );
              })(e))
          );
        }
        function pe() {
          for (
            var e = [], t = arguments.length, n = new Array(t), r = 0;
            r < t;
            r++
          )
            n[r] = arguments[r];
          n.forEach(function (t) {
            Array.isArray(t) ? e.push.apply(e, L()(t)) : e.push(t);
          });
          var i = e.some(function (e) {
            return ge(e);
          });
          if (i) {
            var o = e.map(function (e) {
              return ge(e) ? e : Promise.resolve(!1 !== e);
            });
            return Promise.all(o).then(function (e) {
              return e.reduce(function (e, t) {
                return !1 !== t && e;
              }, !0);
            });
          }
          return e.every(function (e) {
            return !1 !== e;
          });
        }
        function ve(e, t) {
          for (var n = [], r = 0; r < e.length; r += 2) {
            var i = he(e[r], e[r + 1], Array.isArray(t) ? t : [t]);
            n.push(i);
          }
          return pe(n);
        }
        var ye = (function () {
            function e() {
              y()(this, e), (this.listeners = {});
            }
            return (
              b()(e, [
                {
                  key: 'on',
                  value: function (e, t, n) {
                    return (
                      null == t ||
                        (this.listeners[e] || (this.listeners[e] = []),
                        this.listeners[e].push(t, n)),
                      this
                    );
                  },
                },
                {
                  key: 'once',
                  value: function (e, t, n) {
                    var r = this;
                    return this.on(
                      e,
                      function i() {
                        r.off(e, i);
                        for (
                          var o = arguments.length, a = new Array(o), s = 0;
                          s < o;
                          s++
                        )
                          a[s] = arguments[s];
                        return ve([t, n], a);
                      },
                      this
                    );
                  },
                },
                {
                  key: 'off',
                  value: function (e, t, n) {
                    if (!(e || t || n)) return (this.listeners = {}), this;
                    var r = this.listeners;
                    return (
                      (e ? [e] : Object.keys(r)).forEach(function (e) {
                        var i = r[e];
                        if (i)
                          if (t || n)
                            for (var o = i.length - 2; o >= 0; o -= 2)
                              (t && i[o] !== t) ||
                                (n && i[o + 1] !== n) ||
                                i.splice(o, 2);
                          else delete r[e];
                      }),
                      this
                    );
                  },
                },
                {
                  key: 'trigger',
                  value: function (e) {
                    for (
                      var t = !0,
                        n = arguments.length,
                        r = new Array(n > 1 ? n - 1 : 0),
                        i = 1;
                      i < n;
                      i++
                    )
                      r[i - 1] = arguments[i];
                    if ('*' !== e) {
                      var o = this.listeners[e];
                      null != o && (t = ve(L()(o), r));
                    }
                    var a = this.listeners['*'];
                    return null != a ? pe([t, ve(L()(a), [e].concat(r))]) : t;
                  },
                },
                {
                  key: 'emit',
                  value: function (e) {
                    for (
                      var t = arguments.length,
                        n = new Array(t > 1 ? t - 1 : 0),
                        r = 1;
                      r < t;
                      r++
                    )
                      n[r - 1] = arguments[r];
                    return this.trigger.apply(this, [e].concat(n));
                  },
                },
              ]),
              e
            );
          })(),
          me = Object.prototype.hasOwnProperty;
        var be = function (e, t) {
            return null != e && me.call(e, t);
          },
          ke = Array.isArray,
          we = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
          xe = /^\w*$/;
        var Ce = function (e, t) {
          if (ke(e)) return !1;
          var n = R(e);
          return (
            !(
              'number' != n &&
              'symbol' != n &&
              'boolean' != n &&
              null != e &&
              !ne(e)
            ) ||
            xe.test(e) ||
            !we.test(e) ||
            (null != t && e in Object(t))
          );
        };
        var Se,
          Ee = function (e) {
            if (!I(e)) return !1;
            var t = ee(e);
            return (
              '[object Function]' == t ||
              '[object GeneratorFunction]' == t ||
              '[object AsyncFunction]' == t ||
              '[object Proxy]' == t
            );
          },
          Oe = B['__core-js_shared__'],
          Pe = (Se = /[^.]+$/.exec((Oe && Oe.keys && Oe.keys.IE_PROTO) || ''))
            ? 'Symbol(src)_1.' + Se
            : '';
        var Ae = function (e) {
            return !!Pe && Pe in e;
          },
          Me = Function.prototype.toString;
        var Te = function (e) {
            if (null != e) {
              try {
                return Me.call(e);
              } catch (e) {}
              try {
                return e + '';
              } catch (e) {}
            }
            return '';
          },
          Ne = /^\[object .+?Constructor\]$/,
          je = Function.prototype,
          Le = Object.prototype,
          Re = je.toString,
          _e = Le.hasOwnProperty,
          Ie = RegExp(
            '^' +
              Re.call(_e)
                .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
                .replace(
                  /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                  '$1.*?'
                ) +
              '$'
          );
        var De = function (e) {
          return !(!I(e) || Ae(e)) && (Ee(e) ? Ie : Ne).test(Te(e));
        };
        var ze = function (e, t) {
          return null == e ? void 0 : e[t];
        };
        var Be = function (e, t) {
            var n = ze(e, t);
            return De(n) ? n : void 0;
          },
          Ve = Be(Object, 'create');
        var Fe = function () {
          (this.__data__ = Ve ? Ve(null) : {}), (this.size = 0);
        };
        var Ue = function (e) {
            var t = this.has(e) && delete this.__data__[e];
            return (this.size -= t ? 1 : 0), t;
          },
          He = Object.prototype.hasOwnProperty;
        var Ge = function (e) {
            var t = this.__data__;
            if (Ve) {
              var n = t[e];
              return '__lodash_hash_undefined__' === n ? void 0 : n;
            }
            return He.call(t, e) ? t[e] : void 0;
          },
          We = Object.prototype.hasOwnProperty;
        var qe = function (e) {
          var t = this.__data__;
          return Ve ? void 0 !== t[e] : We.call(t, e);
        };
        var Xe = function (e, t) {
          var n = this.__data__;
          return (
            (this.size += this.has(e) ? 0 : 1),
            (n[e] = Ve && void 0 === t ? '__lodash_hash_undefined__' : t),
            this
          );
        };
        function Ye(e) {
          var t = -1,
            n = null == e ? 0 : e.length;
          for (this.clear(); ++t < n; ) {
            var r = e[t];
            this.set(r[0], r[1]);
          }
        }
        (Ye.prototype.clear = Fe),
          (Ye.prototype.delete = Ue),
          (Ye.prototype.get = Ge),
          (Ye.prototype.has = qe),
          (Ye.prototype.set = Xe);
        var Je = Ye;
        var $e = function () {
          (this.__data__ = []), (this.size = 0);
        };
        var Qe = function (e, t) {
          return e === t || (e != e && t != t);
        };
        var Ke = function (e, t) {
            for (var n = e.length; n--; ) if (Qe(e[n][0], t)) return n;
            return -1;
          },
          Ze = Array.prototype.splice;
        var et = function (e) {
          var t = this.__data__,
            n = Ke(t, e);
          return (
            !(n < 0) &&
            (n == t.length - 1 ? t.pop() : Ze.call(t, n, 1), --this.size, !0)
          );
        };
        var tt = function (e) {
          var t = this.__data__,
            n = Ke(t, e);
          return n < 0 ? void 0 : t[n][1];
        };
        var nt = function (e) {
          return Ke(this.__data__, e) > -1;
        };
        var rt = function (e, t) {
          var n = this.__data__,
            r = Ke(n, e);
          return r < 0 ? (++this.size, n.push([e, t])) : (n[r][1] = t), this;
        };
        function it(e) {
          var t = -1,
            n = null == e ? 0 : e.length;
          for (this.clear(); ++t < n; ) {
            var r = e[t];
            this.set(r[0], r[1]);
          }
        }
        (it.prototype.clear = $e),
          (it.prototype.delete = et),
          (it.prototype.get = tt),
          (it.prototype.has = nt),
          (it.prototype.set = rt);
        var ot = it,
          at = Be(B, 'Map');
        var st = function () {
          (this.size = 0),
            (this.__data__ = {
              hash: new Je(),
              map: new (at || ot)(),
              string: new Je(),
            });
        };
        var lt = function (e) {
          var t = R(e);
          return 'string' == t ||
            'number' == t ||
            'symbol' == t ||
            'boolean' == t
            ? '__proto__' !== e
            : null === e;
        };
        var ut = function (e, t) {
          var n = e.__data__;
          return lt(t) ? n['string' == typeof t ? 'string' : 'hash'] : n.map;
        };
        var ct = function (e) {
          var t = ut(this, e).delete(e);
          return (this.size -= t ? 1 : 0), t;
        };
        var ft = function (e) {
          return ut(this, e).get(e);
        };
        var ht = function (e) {
          return ut(this, e).has(e);
        };
        var dt = function (e, t) {
          var n = ut(this, e),
            r = n.size;
          return n.set(e, t), (this.size += n.size == r ? 0 : 1), this;
        };
        function gt(e) {
          var t = -1,
            n = null == e ? 0 : e.length;
          for (this.clear(); ++t < n; ) {
            var r = e[t];
            this.set(r[0], r[1]);
          }
        }
        (gt.prototype.clear = st),
          (gt.prototype.delete = ct),
          (gt.prototype.get = ft),
          (gt.prototype.has = ht),
          (gt.prototype.set = dt);
        var pt = gt;
        function vt(e, t) {
          if ('function' != typeof e || (null != t && 'function' != typeof t))
            throw new TypeError('Expected a function');
          var n = function n() {
            var r = arguments,
              i = t ? t.apply(this, r) : r[0],
              o = n.cache;
            if (o.has(i)) return o.get(i);
            var a = e.apply(this, r);
            return (n.cache = o.set(i, a) || o), a;
          };
          return (n.cache = new (vt.Cache || pt)()), n;
        }
        vt.Cache = pt;
        var yt = vt;
        var mt =
            /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
          bt = /\\(\\)?/g,
          kt = (function (e) {
            var t = yt(e, function (e) {
                return 500 === n.size && n.clear(), e;
              }),
              n = t.cache;
            return t;
          })(function (e) {
            var t = [];
            return (
              46 === e.charCodeAt(0) && t.push(''),
              e.replace(mt, function (e, n, r, i) {
                t.push(r ? i.replace(bt, '$1') : n || e);
              }),
              t
            );
          }),
          wt = kt;
        var xt = function (e, t) {
            for (
              var n = -1, r = null == e ? 0 : e.length, i = Array(r);
              ++n < r;

            )
              i[n] = t(e[n], n, e);
            return i;
          },
          Ct = W ? W.prototype : void 0,
          St = Ct ? Ct.toString : void 0;
        var Et = function e(t) {
          if ('string' == typeof t) return t;
          if (ke(t)) return xt(t, e) + '';
          if (ne(t)) return St ? St.call(t) : '';
          var n = t + '';
          return '0' == n && 1 / t == -Infinity ? '-0' : n;
        };
        var Ot = function (e) {
          return null == e ? '' : Et(e);
        };
        var Pt = function (e, t) {
          return ke(e) ? e : Ce(e, t) ? [e] : wt(Ot(e));
        };
        var At = function (e) {
            return te(e) && '[object Arguments]' == ee(e);
          },
          Mt = Object.prototype,
          Tt = Mt.hasOwnProperty,
          Nt = Mt.propertyIsEnumerable,
          jt = At(
            (function () {
              return arguments;
            })()
          )
            ? At
            : function (e) {
                return te(e) && Tt.call(e, 'callee') && !Nt.call(e, 'callee');
              },
          Lt = jt,
          Rt = /^(?:0|[1-9]\d*)$/;
        var _t = function (e, t) {
          var n = R(e);
          return (
            !!(t = null == t ? 9007199254740991 : t) &&
            ('number' == n || ('symbol' != n && Rt.test(e))) &&
            e > -1 &&
            e % 1 == 0 &&
            e < t
          );
        };
        var It = function (e) {
          return (
            'number' == typeof e &&
            e > -1 &&
            e % 1 == 0 &&
            e <= 9007199254740991
          );
        };
        var Dt = function (e) {
          if ('string' == typeof e || ne(e)) return e;
          var t = e + '';
          return '0' == t && 1 / e == -Infinity ? '-0' : t;
        };
        var zt = function (e, t, n) {
          for (var r = -1, i = (t = Pt(t, e)).length, o = !1; ++r < i; ) {
            var a = Dt(t[r]);
            if (!(o = null != e && n(e, a))) break;
            e = e[a];
          }
          return o || ++r != i
            ? o
            : !!(i = null == e ? 0 : e.length) &&
                It(i) &&
                _t(a, i) &&
                (ke(e) || Lt(e));
        };
        var Bt = function (e, t) {
          return null != e && zt(e, t, be);
        };
        var Vt = function (e, t) {
            for (var n = 0, r = (t = Pt(t, e)).length; null != e && n < r; )
              e = e[Dt(t[n++])];
            return n && n == r ? e : void 0;
          },
          Ft = (function () {
            try {
              var e = Be(Object, 'defineProperty');
              return e({}, '', {}), e;
            } catch (e) {}
          })();
        var Ut = function (e, t, n) {
            '__proto__' == t && Ft
              ? Ft(e, t, {
                  configurable: !0,
                  enumerable: !0,
                  value: n,
                  writable: !0,
                })
              : (e[t] = n);
          },
          Ht = Object.prototype.hasOwnProperty;
        var Gt = function (e, t, n) {
          var r = e[t];
          (Ht.call(e, t) && Qe(r, n) && (void 0 !== n || t in e)) ||
            Ut(e, t, n);
        };
        var Wt = function (e, t, n, r) {
          if (!I(e)) return e;
          for (
            var i = -1, o = (t = Pt(t, e)).length, a = o - 1, s = e;
            null != s && ++i < o;

          ) {
            var l = Dt(t[i]),
              u = n;
            if ('__proto__' === l || 'constructor' === l || 'prototype' === l)
              return e;
            if (i != a) {
              var c = s[l];
              void 0 === (u = r ? r(c, l, s) : void 0) &&
                (u = I(c) ? c : _t(t[i + 1]) ? [] : {});
            }
            Gt(s, l, u), (s = s[l]);
          }
          return e;
        };
        var qt = function (e, t, n) {
          for (var r = -1, i = t.length, o = {}; ++r < i; ) {
            var a = t[r],
              s = Vt(e, a);
            n(s, a) && Wt(o, Pt(a, e), s);
          }
          return o;
        };
        var Xt = function (e, t) {
          return null != e && t in Object(e);
        };
        var Yt = function (e, t) {
          return null != e && zt(e, t, Xt);
        };
        var Jt = function (e, t) {
          return qt(e, t, function (t, n) {
            return Yt(e, n);
          });
        };
        var $t = function (e, t) {
            for (var n = -1, r = t.length, i = e.length; ++n < r; )
              e[i + n] = t[n];
            return e;
          },
          Qt = W ? W.isConcatSpreadable : void 0;
        var Kt = function (e) {
          return ke(e) || Lt(e) || !!(Qt && e && e[Qt]);
        };
        var Zt = function e(t, n, r, i, o) {
          var a = -1,
            s = t.length;
          for (r || (r = Kt), o || (o = []); ++a < s; ) {
            var l = t[a];
            n > 0 && r(l)
              ? n > 1
                ? e(l, n - 1, r, i, o)
                : $t(o, l)
              : i || (o[o.length] = l);
          }
          return o;
        };
        var en = function (e) {
          return (null == e ? 0 : e.length) ? Zt(e, 1) : [];
        };
        var tn = function (e, t, n) {
            switch (n.length) {
              case 0:
                return e.call(t);
              case 1:
                return e.call(t, n[0]);
              case 2:
                return e.call(t, n[0], n[1]);
              case 3:
                return e.call(t, n[0], n[1], n[2]);
            }
            return e.apply(t, n);
          },
          nn = Math.max;
        var rn = function (e, t, n) {
          return (
            (t = nn(void 0 === t ? e.length - 1 : t, 0)),
            function () {
              for (
                var r = arguments,
                  i = -1,
                  o = nn(r.length - t, 0),
                  a = Array(o);
                ++i < o;

              )
                a[i] = r[t + i];
              i = -1;
              for (var s = Array(t + 1); ++i < t; ) s[i] = r[i];
              return (s[t] = n(a)), tn(e, this, s);
            }
          );
        };
        var on = function (e) {
          return function () {
            return e;
          };
        };
        var an = function (e) {
            return e;
          },
          sn = Ft
            ? function (e, t) {
                return Ft(e, 'toString', {
                  configurable: !0,
                  enumerable: !1,
                  value: on(t),
                  writable: !0,
                });
              }
            : an,
          ln = Date.now;
        var un = function (e) {
            var t = 0,
              n = 0;
            return function () {
              var r = ln(),
                i = 16 - (r - n);
              if (((n = r), i > 0)) {
                if (++t >= 800) return arguments[0];
              } else t = 0;
              return e.apply(void 0, arguments);
            };
          },
          cn = un(sn);
        (fn = function (e, t) {
          return null == e ? {} : Jt(e, t);
        }),
          cn(rn(fn, void 0, en), fn + '');
        var fn;
        var hn = function () {
          (this.__data__ = new ot()), (this.size = 0);
        };
        var dn = function (e) {
          var t = this.__data__,
            n = t.delete(e);
          return (this.size = t.size), n;
        };
        var gn = function (e) {
          return this.__data__.get(e);
        };
        var pn = function (e) {
          return this.__data__.has(e);
        };
        var vn = function (e, t) {
          var n = this.__data__;
          if (n instanceof ot) {
            var r = n.__data__;
            if (!at || r.length < 199)
              return r.push([e, t]), (this.size = ++n.size), this;
            n = this.__data__ = new pt(r);
          }
          return n.set(e, t), (this.size = n.size), this;
        };
        function yn(e) {
          var t = (this.__data__ = new ot(e));
          this.size = t.size;
        }
        (yn.prototype.clear = hn),
          (yn.prototype.delete = dn),
          (yn.prototype.get = gn),
          (yn.prototype.has = pn),
          (yn.prototype.set = vn);
        var mn = yn;
        var bn = function (e, t, n) {
          ((void 0 !== n && !Qe(e[t], n)) || (void 0 === n && !(t in e))) &&
            Ut(e, t, n);
        };
        var kn = function (e) {
            return function (t, n, r) {
              for (var i = -1, o = Object(t), a = r(t), s = a.length; s--; ) {
                var l = a[e ? s : ++i];
                if (!1 === n(o[l], l, o)) break;
              }
              return t;
            };
          },
          wn = kn(),
          xn =
            'object' ==
              ('undefined' == typeof exports ? 'undefined' : R(exports)) &&
            exports &&
            !exports.nodeType &&
            exports,
          Cn =
            xn &&
            'object' ==
              ('undefined' == typeof module ? 'undefined' : R(module)) &&
            module &&
            !module.nodeType &&
            module,
          Sn = Cn && Cn.exports === xn ? B.Buffer : void 0,
          En = Sn ? Sn.allocUnsafe : void 0;
        var On = function (e, t) {
            if (t) return e.slice();
            var n = e.length,
              r = En ? En(n) : new e.constructor(n);
            return e.copy(r), r;
          },
          Pn = B.Uint8Array;
        var An = function (e) {
          var t = new e.constructor(e.byteLength);
          return new Pn(t).set(new Pn(e)), t;
        };
        var Mn = function (e, t) {
          var n = t ? An(e.buffer) : e.buffer;
          return new e.constructor(n, e.byteOffset, e.length);
        };
        var Tn = function (e, t) {
            var n = -1,
              r = e.length;
            for (t || (t = Array(r)); ++n < r; ) t[n] = e[n];
            return t;
          },
          Nn = Object.create,
          jn = (function () {
            function e() {}
            return function (t) {
              if (!I(t)) return {};
              if (Nn) return Nn(t);
              e.prototype = t;
              var n = new e();
              return (e.prototype = void 0), n;
            };
          })();
        var Ln = function (e, t) {
            return function (n) {
              return e(t(n));
            };
          },
          Rn = Ln(Object.getPrototypeOf, Object),
          _n = Object.prototype;
        var In = function (e) {
          var t = e && e.constructor;
          return e === (('function' == typeof t && t.prototype) || _n);
        };
        var Dn = function (e) {
          return 'function' != typeof e.constructor || In(e) ? {} : jn(Rn(e));
        };
        var zn = function (e) {
          return null != e && It(e.length) && !Ee(e);
        };
        var Bn = function (e) {
          return te(e) && zn(e);
        };
        var Vn = function () {
            return !1;
          },
          Fn =
            'object' ==
              ('undefined' == typeof exports ? 'undefined' : R(exports)) &&
            exports &&
            !exports.nodeType &&
            exports,
          Un =
            Fn &&
            'object' ==
              ('undefined' == typeof module ? 'undefined' : R(module)) &&
            module &&
            !module.nodeType &&
            module,
          Hn = Un && Un.exports === Fn ? B.Buffer : void 0,
          Gn = (Hn ? Hn.isBuffer : void 0) || Vn,
          Wn = Function.prototype,
          qn = Object.prototype,
          Xn = Wn.toString,
          Yn = qn.hasOwnProperty,
          Jn = Xn.call(Object);
        var $n = function (e) {
            if (!te(e) || '[object Object]' != ee(e)) return !1;
            var t = Rn(e);
            if (null === t) return !0;
            var n = Yn.call(t, 'constructor') && t.constructor;
            return 'function' == typeof n && n instanceof n && Xn.call(n) == Jn;
          },
          Qn = {};
        (Qn['[object Float32Array]'] =
          Qn['[object Float64Array]'] =
          Qn['[object Int8Array]'] =
          Qn['[object Int16Array]'] =
          Qn['[object Int32Array]'] =
          Qn['[object Uint8Array]'] =
          Qn['[object Uint8ClampedArray]'] =
          Qn['[object Uint16Array]'] =
          Qn['[object Uint32Array]'] =
            !0),
          (Qn['[object Arguments]'] =
            Qn['[object Array]'] =
            Qn['[object ArrayBuffer]'] =
            Qn['[object Boolean]'] =
            Qn['[object DataView]'] =
            Qn['[object Date]'] =
            Qn['[object Error]'] =
            Qn['[object Function]'] =
            Qn['[object Map]'] =
            Qn['[object Number]'] =
            Qn['[object Object]'] =
            Qn['[object RegExp]'] =
            Qn['[object Set]'] =
            Qn['[object String]'] =
            Qn['[object WeakMap]'] =
              !1);
        var Kn = function (e) {
          return te(e) && It(e.length) && !!Qn[ee(e)];
        };
        var Zn = function (e) {
            return function (t) {
              return e(t);
            };
          },
          er =
            'object' ==
              ('undefined' == typeof exports ? 'undefined' : R(exports)) &&
            exports &&
            !exports.nodeType &&
            exports,
          tr =
            er &&
            'object' ==
              ('undefined' == typeof module ? 'undefined' : R(module)) &&
            module &&
            !module.nodeType &&
            module,
          nr = tr && tr.exports === er && D.process,
          rr = (function () {
            try {
              var e = tr && tr.require && tr.require('util').types;
              return e || (nr && nr.binding && nr.binding('util'));
            } catch (e) {}
          })(),
          ir = rr && rr.isTypedArray,
          or = ir ? Zn(ir) : Kn;
        var ar = function (e, t) {
          if (
            ('constructor' !== t || 'function' != typeof e[t]) &&
            '__proto__' != t
          )
            return e[t];
        };
        var sr = function (e, t, n, r) {
          var i = !n;
          n || (n = {});
          for (var o = -1, a = t.length; ++o < a; ) {
            var s = t[o],
              l = r ? r(n[s], e[s], s, n, e) : void 0;
            void 0 === l && (l = e[s]), i ? Ut(n, s, l) : Gt(n, s, l);
          }
          return n;
        };
        var lr = function (e, t) {
            for (var n = -1, r = Array(e); ++n < e; ) r[n] = t(n);
            return r;
          },
          ur = Object.prototype.hasOwnProperty;
        var cr = function (e, t) {
          var n = ke(e),
            r = !n && Lt(e),
            i = !n && !r && Gn(e),
            o = !n && !r && !i && or(e),
            a = n || r || i || o,
            s = a ? lr(e.length, String) : [],
            l = s.length;
          for (var u in e)
            (!t && !ur.call(e, u)) ||
              (a &&
                ('length' == u ||
                  (i && ('offset' == u || 'parent' == u)) ||
                  (o &&
                    ('buffer' == u ||
                      'byteLength' == u ||
                      'byteOffset' == u)) ||
                  _t(u, l))) ||
              s.push(u);
          return s;
        };
        var fr = function (e) {
            var t = [];
            if (null != e) for (var n in Object(e)) t.push(n);
            return t;
          },
          hr = Object.prototype.hasOwnProperty;
        var dr = function (e) {
          if (!I(e)) return fr(e);
          var t = In(e),
            n = [];
          for (var r in e)
            ('constructor' != r || (!t && hr.call(e, r))) && n.push(r);
          return n;
        };
        var gr = function (e) {
          return zn(e) ? cr(e, !0) : dr(e);
        };
        var pr = function (e) {
          return sr(e, gr(e));
        };
        var vr = function (e, t, n, r, i, o, a) {
          var s = ar(e, n),
            l = ar(t, n),
            u = a.get(l);
          if (u) bn(e, n, u);
          else {
            var c = o ? o(s, l, n + '', e, t, a) : void 0,
              f = void 0 === c;
            if (f) {
              var h = ke(l),
                d = !h && Gn(l),
                g = !h && !d && or(l);
              (c = l),
                h || d || g
                  ? ke(s)
                    ? (c = s)
                    : Bn(s)
                    ? (c = Tn(s))
                    : d
                    ? ((f = !1), (c = On(l, !0)))
                    : g
                    ? ((f = !1), (c = Mn(l, !0)))
                    : (c = [])
                  : $n(l) || Lt(l)
                  ? ((c = s),
                    Lt(s) ? (c = pr(s)) : (I(s) && !Ee(s)) || (c = Dn(l)))
                  : (f = !1);
            }
            f && (a.set(l, c), i(c, l, r, o, a), a.delete(l)), bn(e, n, c);
          }
        };
        var yr = function e(t, n, r, i, o) {
          t !== n &&
            wn(
              n,
              function (a, s) {
                if ((o || (o = new mn()), I(a))) vr(t, n, s, r, e, i, o);
                else {
                  var l = i ? i(ar(t, s), a, s + '', t, n, o) : void 0;
                  void 0 === l && (l = a), bn(t, s, l);
                }
              },
              gr
            );
        };
        var mr = function (e, t) {
          return cn(rn(e, t, an), e + '');
        };
        var br = function (e, t, n) {
          if (!I(n)) return !1;
          var r = R(t);
          return (
            !!('number' == r
              ? zn(n) && _t(t, n.length)
              : 'string' == r && t in n) && Qe(n[t], e)
          );
        };
        var kr = function (e) {
            return mr(function (t, n) {
              var r = -1,
                i = n.length,
                o = i > 1 ? n[i - 1] : void 0,
                a = i > 2 ? n[2] : void 0;
              for (
                o = e.length > 3 && 'function' == typeof o ? (i--, o) : void 0,
                  a && br(n[0], n[1], a) && ((o = i < 3 ? void 0 : o), (i = 1)),
                  t = Object(t);
                ++r < i;

              ) {
                var s = n[r];
                s && e(t, s, r, o);
              }
              return t;
            });
          },
          wr = kr(function (e, t, n) {
            yr(e, t, n);
          });
        var xr = function (e) {
          return this.__data__.set(e, '__lodash_hash_undefined__'), this;
        };
        var Cr = function (e) {
          return this.__data__.has(e);
        };
        function Sr(e) {
          var t = -1,
            n = null == e ? 0 : e.length;
          for (this.__data__ = new pt(); ++t < n; ) this.add(e[t]);
        }
        (Sr.prototype.add = Sr.prototype.push = xr), (Sr.prototype.has = Cr);
        var Er = Sr;
        var Or = function (e, t) {
          for (var n = -1, r = null == e ? 0 : e.length; ++n < r; )
            if (t(e[n], n, e)) return !0;
          return !1;
        };
        var Pr = function (e, t) {
          return e.has(t);
        };
        var Ar = function (e, t, n, r, i, o) {
          var a = 1 & n,
            s = e.length,
            l = t.length;
          if (s != l && !(a && l > s)) return !1;
          var u = o.get(e),
            c = o.get(t);
          if (u && c) return u == t && c == e;
          var f = -1,
            h = !0,
            d = 2 & n ? new Er() : void 0;
          for (o.set(e, t), o.set(t, e); ++f < s; ) {
            var g = e[f],
              p = t[f];
            if (r) var v = a ? r(p, g, f, t, e, o) : r(g, p, f, e, t, o);
            if (void 0 !== v) {
              if (v) continue;
              h = !1;
              break;
            }
            if (d) {
              if (
                !Or(t, function (e, t) {
                  if (!Pr(d, t) && (g === e || i(g, e, n, r, o)))
                    return d.push(t);
                })
              ) {
                h = !1;
                break;
              }
            } else if (g !== p && !i(g, p, n, r, o)) {
              h = !1;
              break;
            }
          }
          return o.delete(e), o.delete(t), h;
        };
        var Mr = function (e) {
          var t = -1,
            n = Array(e.size);
          return (
            e.forEach(function (e, r) {
              n[++t] = [r, e];
            }),
            n
          );
        };
        var Tr = function (e) {
            var t = -1,
              n = Array(e.size);
            return (
              e.forEach(function (e) {
                n[++t] = e;
              }),
              n
            );
          },
          Nr = W ? W.prototype : void 0,
          jr = Nr ? Nr.valueOf : void 0;
        var Lr = function (e, t, n, r, i, o, a) {
          switch (n) {
            case '[object DataView]':
              if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
                return !1;
              (e = e.buffer), (t = t.buffer);
            case '[object ArrayBuffer]':
              return !(
                e.byteLength != t.byteLength || !o(new Pn(e), new Pn(t))
              );
            case '[object Boolean]':
            case '[object Date]':
            case '[object Number]':
              return Qe(+e, +t);
            case '[object Error]':
              return e.name == t.name && e.message == t.message;
            case '[object RegExp]':
            case '[object String]':
              return e == t + '';
            case '[object Map]':
              var s = Mr;
            case '[object Set]':
              var l = 1 & r;
              if ((s || (s = Tr), e.size != t.size && !l)) return !1;
              var u = a.get(e);
              if (u) return u == t;
              (r |= 2), a.set(e, t);
              var c = Ar(s(e), s(t), r, i, o, a);
              return a.delete(e), c;
            case '[object Symbol]':
              if (jr) return jr.call(e) == jr.call(t);
          }
          return !1;
        };
        var Rr = function (e, t, n) {
          var r = t(e);
          return ke(e) ? r : $t(r, n(e));
        };
        var _r = function (e, t) {
          for (
            var n = -1, r = null == e ? 0 : e.length, i = 0, o = [];
            ++n < r;

          ) {
            var a = e[n];
            t(a, n, e) && (o[i++] = a);
          }
          return o;
        };
        var Ir = function () {
            return [];
          },
          Dr = Object.prototype.propertyIsEnumerable,
          zr = Object.getOwnPropertySymbols,
          Br = zr
            ? function (e) {
                return null == e
                  ? []
                  : ((e = Object(e)),
                    _r(zr(e), function (t) {
                      return Dr.call(e, t);
                    }));
              }
            : Ir,
          Vr = Ln(Object.keys, Object),
          Fr = Object.prototype.hasOwnProperty;
        var Ur = function (e) {
          if (!In(e)) return Vr(e);
          var t = [];
          for (var n in Object(e))
            Fr.call(e, n) && 'constructor' != n && t.push(n);
          return t;
        };
        var Hr = function (e) {
          return zn(e) ? cr(e) : Ur(e);
        };
        var Gr = function (e) {
            return Rr(e, Hr, Br);
          },
          Wr = Object.prototype.hasOwnProperty;
        var qr = function (e, t, n, r, i, o) {
            var a = 1 & n,
              s = Gr(e),
              l = s.length;
            if (l != Gr(t).length && !a) return !1;
            for (var u = l; u--; ) {
              var c = s[u];
              if (!(a ? c in t : Wr.call(t, c))) return !1;
            }
            var f = o.get(e),
              h = o.get(t);
            if (f && h) return f == t && h == e;
            var d = !0;
            o.set(e, t), o.set(t, e);
            for (var g = a; ++u < l; ) {
              var p = e[(c = s[u])],
                v = t[c];
              if (r) var y = a ? r(v, p, c, t, e, o) : r(p, v, c, e, t, o);
              if (!(void 0 === y ? p === v || i(p, v, n, r, o) : y)) {
                d = !1;
                break;
              }
              g || (g = 'constructor' == c);
            }
            if (d && !g) {
              var m = e.constructor,
                b = t.constructor;
              m == b ||
                !('constructor' in e) ||
                !('constructor' in t) ||
                ('function' == typeof m &&
                  m instanceof m &&
                  'function' == typeof b &&
                  b instanceof b) ||
                (d = !1);
            }
            return o.delete(e), o.delete(t), d;
          },
          Xr = Be(B, 'DataView'),
          Yr = Be(B, 'Promise'),
          Jr = Be(B, 'Set'),
          $r = Be(B, 'WeakMap'),
          Qr = '[object Map]',
          Kr = '[object Promise]',
          Zr = '[object Set]',
          ei = '[object WeakMap]',
          ti = '[object DataView]',
          ni = Te(Xr),
          ri = Te(at),
          ii = Te(Yr),
          oi = Te(Jr),
          ai = Te($r),
          si = ee;
        ((Xr && si(new Xr(new ArrayBuffer(1))) != ti) ||
          (at && si(new at()) != Qr) ||
          (Yr && si(Yr.resolve()) != Kr) ||
          (Jr && si(new Jr()) != Zr) ||
          ($r && si(new $r()) != ei)) &&
          (si = function (e) {
            var t = ee(e),
              n = '[object Object]' == t ? e.constructor : void 0,
              r = n ? Te(n) : '';
            if (r)
              switch (r) {
                case ni:
                  return ti;
                case ri:
                  return Qr;
                case ii:
                  return Kr;
                case oi:
                  return Zr;
                case ai:
                  return ei;
              }
            return t;
          });
        var li = si,
          ui = '[object Arguments]',
          ci = '[object Array]',
          fi = '[object Object]',
          hi = Object.prototype.hasOwnProperty;
        var di = function (e, t, n, r, i, o) {
          var a = ke(e),
            s = ke(t),
            l = a ? ci : li(e),
            u = s ? ci : li(t),
            c = (l = l == ui ? fi : l) == fi,
            f = (u = u == ui ? fi : u) == fi,
            h = l == u;
          if (h && Gn(e)) {
            if (!Gn(t)) return !1;
            (a = !0), (c = !1);
          }
          if (h && !c)
            return (
              o || (o = new mn()),
              a || or(e) ? Ar(e, t, n, r, i, o) : Lr(e, t, l, n, r, i, o)
            );
          if (!(1 & n)) {
            var d = c && hi.call(e, '__wrapped__'),
              g = f && hi.call(t, '__wrapped__');
            if (d || g) {
              var p = d ? e.value() : e,
                v = g ? t.value() : t;
              return o || (o = new mn()), i(p, v, n, r, o);
            }
          }
          return !!h && (o || (o = new mn()), qr(e, t, n, r, i, o));
        };
        var gi = function e(t, n, r, i, o) {
          return (
            t === n ||
            (null == t || null == n || (!te(t) && !te(n))
              ? t != t && n != n
              : di(t, n, r, i, e, o))
          );
        };
        var pi = function (e, t) {
            return gi(e, t);
          },
          vi = Object.prototype.hasOwnProperty;
        var yi = function (e) {
          if (null == e) return !0;
          if (
            zn(e) &&
            (ke(e) ||
              'string' == typeof e ||
              'function' == typeof e.splice ||
              Gn(e) ||
              or(e) ||
              Lt(e))
          )
            return !e.length;
          var t = li(e);
          if ('[object Map]' == t || '[object Set]' == t) return !e.size;
          if (In(e)) return !Ur(e).length;
          for (var n in e) if (vi.call(e, n)) return !1;
          return !0;
        };
        var mi = function (e, t) {
          for (
            var n = -1, r = null == e ? 0 : e.length;
            ++n < r && !1 !== t(e[n], n, e);

          );
          return e;
        };
        var bi = function (e, t) {
          return e && sr(t, Hr(t), e);
        };
        var ki = function (e, t) {
          return e && sr(t, gr(t), e);
        };
        var wi = function (e, t) {
            return sr(e, Br(e), t);
          },
          xi = Object.getOwnPropertySymbols
            ? function (e) {
                for (var t = []; e; ) $t(t, Br(e)), (e = Rn(e));
                return t;
              }
            : Ir;
        var Ci = function (e, t) {
          return sr(e, xi(e), t);
        };
        var Si = function (e) {
            return Rr(e, gr, xi);
          },
          Ei = Object.prototype.hasOwnProperty;
        var Oi = function (e) {
          var t = e.length,
            n = new e.constructor(t);
          return (
            t &&
              'string' == typeof e[0] &&
              Ei.call(e, 'index') &&
              ((n.index = e.index), (n.input = e.input)),
            n
          );
        };
        var Pi = function (e, t) {
            var n = t ? An(e.buffer) : e.buffer;
            return new e.constructor(n, e.byteOffset, e.byteLength);
          },
          Ai = /\w*$/;
        var Mi = function (e) {
            var t = new e.constructor(e.source, Ai.exec(e));
            return (t.lastIndex = e.lastIndex), t;
          },
          Ti = W ? W.prototype : void 0,
          Ni = Ti ? Ti.valueOf : void 0;
        var ji = function (e) {
          return Ni ? Object(Ni.call(e)) : {};
        };
        var Li = function (e, t, n) {
          var r = e.constructor;
          switch (t) {
            case '[object ArrayBuffer]':
              return An(e);
            case '[object Boolean]':
            case '[object Date]':
              return new r(+e);
            case '[object DataView]':
              return Pi(e, n);
            case '[object Float32Array]':
            case '[object Float64Array]':
            case '[object Int8Array]':
            case '[object Int16Array]':
            case '[object Int32Array]':
            case '[object Uint8Array]':
            case '[object Uint8ClampedArray]':
            case '[object Uint16Array]':
            case '[object Uint32Array]':
              return Mn(e, n);
            case '[object Map]':
            case '[object Set]':
              return new r();
            case '[object Number]':
            case '[object String]':
              return new r(e);
            case '[object RegExp]':
              return Mi(e);
            case '[object Symbol]':
              return ji(e);
          }
        };
        var Ri = function (e) {
            return te(e) && '[object Map]' == li(e);
          },
          _i = rr && rr.isMap,
          Ii = _i ? Zn(_i) : Ri;
        var Di = function (e) {
            return te(e) && '[object Set]' == li(e);
          },
          zi = rr && rr.isSet,
          Bi = zi ? Zn(zi) : Di,
          Vi = '[object Arguments]',
          Fi = '[object Function]',
          Ui = '[object Object]',
          Hi = {};
        (Hi[Vi] =
          Hi['[object Array]'] =
          Hi['[object ArrayBuffer]'] =
          Hi['[object DataView]'] =
          Hi['[object Boolean]'] =
          Hi['[object Date]'] =
          Hi['[object Float32Array]'] =
          Hi['[object Float64Array]'] =
          Hi['[object Int8Array]'] =
          Hi['[object Int16Array]'] =
          Hi['[object Int32Array]'] =
          Hi['[object Map]'] =
          Hi['[object Number]'] =
          Hi[Ui] =
          Hi['[object RegExp]'] =
          Hi['[object Set]'] =
          Hi['[object String]'] =
          Hi['[object Symbol]'] =
          Hi['[object Uint8Array]'] =
          Hi['[object Uint8ClampedArray]'] =
          Hi['[object Uint16Array]'] =
          Hi['[object Uint32Array]'] =
            !0),
          (Hi['[object Error]'] = Hi[Fi] = Hi['[object WeakMap]'] = !1);
        var Gi = function e(t, n, r, i, o, a) {
          var s,
            l = 1 & n,
            u = 2 & n,
            c = 4 & n;
          if ((r && (s = o ? r(t, i, o, a) : r(t)), void 0 !== s)) return s;
          if (!I(t)) return t;
          var f = ke(t);
          if (f) {
            if (((s = Oi(t)), !l)) return Tn(t, s);
          } else {
            var h = li(t),
              d = h == Fi || '[object GeneratorFunction]' == h;
            if (Gn(t)) return On(t, l);
            if (h == Ui || h == Vi || (d && !o)) {
              if (((s = u || d ? {} : Dn(t)), !l))
                return u ? Ci(t, ki(s, t)) : wi(t, bi(s, t));
            } else {
              if (!Hi[h]) return o ? t : {};
              s = Li(t, h, l);
            }
          }
          a || (a = new mn());
          var g = a.get(t);
          if (g) return g;
          a.set(t, s),
            Bi(t)
              ? t.forEach(function (i) {
                  s.add(e(i, n, r, i, t, a));
                })
              : Ii(t) &&
                t.forEach(function (i, o) {
                  s.set(o, e(i, n, r, o, t, a));
                });
          var p = f ? void 0 : (c ? (u ? Si : Gr) : u ? gr : Hr)(t);
          return (
            mi(p || t, function (i, o) {
              p && (i = t[(o = i)]), Gt(s, o, e(i, n, r, o, t, a));
            }),
            s
          );
        };
        var Wi = function (e) {
          return Gi(e, 4);
        };
        var qi = function (e) {
            return Gi(e, 5);
          },
          Xi = Object.prototype,
          Yi = Xi.hasOwnProperty,
          Ji = mr(function (e, t) {
            e = Object(e);
            var n = -1,
              r = t.length,
              i = r > 2 ? t[2] : void 0;
            for (i && br(t[0], t[1], i) && (r = 1); ++n < r; )
              for (var o = t[n], a = gr(o), s = -1, l = a.length; ++s < l; ) {
                var u = a[s],
                  c = e[u];
                (void 0 === c || (Qe(c, Xi[u]) && !Yi.call(e, u))) &&
                  (e[u] = o[u]);
              }
            return e;
          }),
          $i = Ji;
        var Qi = function e(t, n, r, i, o, a) {
            return (
              I(t) &&
                I(n) &&
                (a.set(n, t), yr(t, n, void 0, e, a), a.delete(n)),
              t
            );
          },
          Ki = kr(function (e, t, n, r) {
            yr(e, t, n, r);
          }),
          Zi = mr(function (e) {
            return e.push(void 0, Qi), tn(Ki, void 0, e);
          });
        var eo =
          Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array &&
            function (e, t) {
              e.__proto__ = t;
            }) ||
          function (e, t) {
            for (var n in t)
              Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
          };
        var to =
          /^\s*class\s+/.test(
            ''.concat(
              b()(function e() {
                y()(this, e);
              })
            )
          ) ||
          /^\s*class\s*\{/.test(
            ''.concat(
              (function () {
                return b()(function e() {
                  y()(this, e);
                });
              })()
            )
          );
        function no(e, t) {
          var n;
          return (
            to
              ? (n = (function (e) {
                  M()(n, e);
                  var t = N()(n);
                  function n() {
                    return y()(this, n), t.apply(this, arguments);
                  }
                  return b()(n);
                })(t))
              : ((n = function () {
                  return t.apply(this, arguments);
                }),
                (function (e, t) {
                  function n() {
                    this.constructor = e;
                  }
                  eo(e, t),
                    (e.prototype =
                      null === t
                        ? Object.create(t)
                        : ((n.prototype = t.prototype), new n()));
                })(n, t)),
            Object.defineProperty(n, 'name', { value: e }),
            n
          );
        }
        function ro(e) {
          return '__proto__' === e;
        }
        function io(e, t) {
          var n,
            r =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : '/',
            i = Array.isArray(t) ? t : t.split(r);
          if (i.length)
            for (n = e; i.length; ) {
              var o = i.shift();
              if (Object(n) !== n || !o || !(o in n)) return;
              n = n[o];
            }
          return n;
        }
        function oo(e, t, n) {
          var r =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : '/',
            i = Array.isArray(t) ? t : t.split(r),
            o = i.pop();
          if (o && !ro(o)) {
            var a = e;
            i.forEach(function (e) {
              ro(e) || (null == a[e] && (a[e] = {}), (a = a[e]));
            }),
              (a[o] = n);
          }
          return e;
        }
        function ao(e, t) {
          var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : '/',
            r = Array.isArray(t) ? t.slice() : t.split(n),
            i = r.pop();
          if (i)
            if (r.length > 0) {
              var o = io(e, r);
              o && delete o[i];
            } else delete e[i];
          return e;
        }
        var so = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n() {
            return y()(this, n), t.apply(this, arguments);
          }
          return b()(n);
        })(ye);
        !(function (e) {
          e.dispose = O.dispose;
        })(so || (so = {})),
          (function (e) {
            for (
              var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1;
              r < t;
              r++
            )
              n[r - 1] = arguments[r];
            n.forEach(function (t) {
              Object.getOwnPropertyNames(t.prototype).forEach(function (n) {
                'constructor' !== n &&
                  Object.defineProperty(
                    e.prototype,
                    n,
                    Object.getOwnPropertyDescriptor(t.prototype, n)
                  );
              });
            });
          })(so, O);
        var lo = function (e, t, n, r) {
          for (var i = e.length, o = n + (r ? 1 : -1); r ? o-- : ++o < i; )
            if (t(e[o], o, e)) return o;
          return -1;
        };
        var uo = function (e) {
          return e != e;
        };
        var co = function (e, t, n) {
          for (var r = n - 1, i = e.length; ++r < i; ) if (e[r] === t) return r;
          return -1;
        };
        var fo = function (e, t, n) {
          return t == t ? co(e, t, n) : lo(e, uo, n);
        };
        var ho = function (e, t) {
          return !!(null == e ? 0 : e.length) && fo(e, t, 0) > -1;
        };
        var go = function (e, t, n) {
          for (var r = -1, i = null == e ? 0 : e.length; ++r < i; )
            if (n(t, e[r])) return !0;
          return !1;
        };
        var po = function () {},
          vo =
            Jr && 1 / Tr(new Jr([, -0]))[1] == 1 / 0
              ? function (e) {
                  return new Jr(e);
                }
              : po;
        var yo = function (e, t, n) {
          var r = -1,
            i = ho,
            o = e.length,
            a = !0,
            s = [],
            l = s;
          if (n) (a = !1), (i = go);
          else if (o >= 200) {
            var u = t ? null : vo(e);
            if (u) return Tr(u);
            (a = !1), (i = Pr), (l = new Er());
          } else l = t ? [] : s;
          e: for (; ++r < o; ) {
            var c = e[r],
              f = t ? t(c) : c;
            if (((c = n || 0 !== c ? c : 0), a && f == f)) {
              for (var h = l.length; h--; ) if (l[h] === f) continue e;
              t && l.push(f), s.push(c);
            } else i(l, f, n) || (l !== s && l.push(f), s.push(c));
          }
          return s;
        };
        var mo = function (e) {
            return e && e.length ? yo(e) : [];
          },
          bo = mr(function (e) {
            return yo(Zt(e, 1, Bn, !0));
          }),
          ko = Math.floor,
          wo = Math.min;
        var xo = function (e, t, n, r) {
          var i = 0,
            o = null == e ? 0 : e.length;
          if (0 === o) return 0;
          for (
            var a = (t = n(t)) != t,
              s = null === t,
              l = ne(t),
              u = void 0 === t;
            i < o;

          ) {
            var c = ko((i + o) / 2),
              f = n(e[c]),
              h = void 0 !== f,
              d = null === f,
              g = f == f,
              p = ne(f);
            if (a) var v = r || g;
            else
              v = u
                ? g && (r || h)
                : s
                ? g && h && (r || !d)
                : l
                ? g && h && !d && (r || !p)
                : !d && !p && (r ? f <= t : f < t);
            v ? (i = c + 1) : (o = c);
          }
          return wo(o, 4294967294);
        };
        var Co = function (e, t, n) {
          var r = 0,
            i = null == e ? r : e.length;
          if ('number' == typeof t && t == t && i <= 2147483647) {
            for (; r < i; ) {
              var o = (r + i) >>> 1,
                a = e[o];
              null !== a && !ne(a) && (n ? a <= t : a < t)
                ? (r = o + 1)
                : (i = o);
            }
            return i;
          }
          return xo(e, t, an, n);
        };
        var So = function (e, t) {
          return Co(e, t);
        };
        var Eo = function (e, t, n, r) {
          var i = n.length,
            o = i,
            a = !r;
          if (null == e) return !o;
          for (e = Object(e); i--; ) {
            var s = n[i];
            if (a && s[2] ? s[1] !== e[s[0]] : !(s[0] in e)) return !1;
          }
          for (; ++i < o; ) {
            var l = (s = n[i])[0],
              u = e[l],
              c = s[1];
            if (a && s[2]) {
              if (void 0 === u && !(l in e)) return !1;
            } else {
              var f = new mn();
              if (r) var h = r(u, c, l, e, t, f);
              if (!(void 0 === h ? gi(c, u, 3, r, f) : h)) return !1;
            }
          }
          return !0;
        };
        var Oo = function (e) {
          return e == e && !I(e);
        };
        var Po = function (e) {
          for (var t = Hr(e), n = t.length; n--; ) {
            var r = t[n],
              i = e[r];
            t[n] = [r, i, Oo(i)];
          }
          return t;
        };
        var Ao = function (e, t) {
          return function (n) {
            return null != n && n[e] === t && (void 0 !== t || e in Object(n));
          };
        };
        var Mo = function (e) {
          var t = Po(e);
          return 1 == t.length && t[0][2]
            ? Ao(t[0][0], t[0][1])
            : function (n) {
                return n === e || Eo(n, e, t);
              };
        };
        var To = function (e, t, n) {
          var r = null == e ? void 0 : Vt(e, t);
          return void 0 === r ? n : r;
        };
        var No = function (e, t) {
          return Ce(e) && Oo(t)
            ? Ao(Dt(e), t)
            : function (n) {
                var r = To(n, e);
                return void 0 === r && r === t ? Yt(n, e) : gi(t, r, 3);
              };
        };
        var jo = function (e) {
          return function (t) {
            return null == t ? void 0 : t[e];
          };
        };
        var Lo = function (e) {
          return function (t) {
            return Vt(t, e);
          };
        };
        var Ro = function (e) {
          return Ce(e) ? jo(Dt(e)) : Lo(e);
        };
        var _o = function (e) {
          return 'function' == typeof e
            ? e
            : null == e
            ? an
            : 'object' == R(e)
            ? ke(e)
              ? No(e[0], e[1])
              : Mo(e)
            : Ro(e);
        };
        var Io = function (e, t, n) {
          return xo(e, t, _o(n, 2));
        };
        var Do = function (e, t) {
            return function (n, r) {
              if (null == n) return n;
              if (!zn(n)) return e(n, r);
              for (
                var i = n.length, o = t ? i : -1, a = Object(n);
                (t ? o-- : ++o < i) && !1 !== r(a[o], o, a);

              );
              return n;
            };
          },
          zo = Do(function (e, t) {
            return e && wn(e, t, Hr);
          });
        var Bo = function (e, t) {
          var n = -1,
            r = zn(e) ? Array(e.length) : [];
          return (
            zo(e, function (e, i, o) {
              r[++n] = t(e, i, o);
            }),
            r
          );
        };
        var Vo = function (e, t) {
          var n = e.length;
          for (e.sort(t); n--; ) e[n] = e[n].value;
          return e;
        };
        var Fo = function (e, t) {
          if (e !== t) {
            var n = void 0 !== e,
              r = null === e,
              i = e == e,
              o = ne(e),
              a = void 0 !== t,
              s = null === t,
              l = t == t,
              u = ne(t);
            if (
              (!s && !u && !o && e > t) ||
              (o && a && l && !s && !u) ||
              (r && a && l) ||
              (!n && l) ||
              !i
            )
              return 1;
            if (
              (!r && !o && !u && e < t) ||
              (u && n && i && !r && !o) ||
              (s && n && i) ||
              (!a && i) ||
              !l
            )
              return -1;
          }
          return 0;
        };
        var Uo = function (e, t, n) {
          for (
            var r = -1,
              i = e.criteria,
              o = t.criteria,
              a = i.length,
              s = n.length;
            ++r < a;

          ) {
            var l = Fo(i[r], o[r]);
            if (l) return r >= s ? l : l * ('desc' == n[r] ? -1 : 1);
          }
          return e.index - t.index;
        };
        var Ho = function (e, t, n) {
            t = t.length
              ? xt(t, function (e) {
                  return ke(e)
                    ? function (t) {
                        return Vt(t, 1 === e.length ? e[0] : e);
                      }
                    : e;
                })
              : [an];
            var r = -1;
            t = xt(t, Zn(_o));
            var i = Bo(e, function (e, n, i) {
              return {
                criteria: xt(t, function (t) {
                  return t(e);
                }),
                index: ++r,
                value: e,
              };
            });
            return Vo(i, function (e, t) {
              return Uo(e, t, n);
            });
          },
          Go = mr(function (e, t) {
            if (null == e) return [];
            var n = t.length;
            return (
              n > 1 && br(e, t[0], t[1])
                ? (t = [])
                : n > 2 && br(t[0], t[1], t[2]) && (t = [t[0]]),
              Ho(e, Zt(t, 1), [])
            );
          });
        var Wo = function (e, t, n, r) {
          for (var i = -1, o = null == e ? 0 : e.length; ++i < o; ) {
            var a = e[i];
            t(r, a, n(a), e);
          }
          return r;
        };
        var qo = function (e, t, n, r) {
          return (
            zo(e, function (e, i, o) {
              t(r, e, n(e), o);
            }),
            r
          );
        };
        var Xo = function (e, t) {
            return function (n, r) {
              var i = ke(n) ? Wo : qo,
                o = t ? t() : {};
              return i(n, e, _o(r, 2), o);
            };
          },
          Yo = Object.prototype.hasOwnProperty,
          Jo = Xo(function (e, t, n) {
            Yo.call(e, n) ? e[n].push(t) : Ut(e, n, [t]);
          });
        var $o = function (e, t, n, r) {
            var i = -1,
              o = ho,
              a = !0,
              s = e.length,
              l = [],
              u = t.length;
            if (!s) return l;
            n && (t = xt(t, Zn(n))),
              r
                ? ((o = go), (a = !1))
                : t.length >= 200 && ((o = Pr), (a = !1), (t = new Er(t)));
            e: for (; ++i < s; ) {
              var c = e[i],
                f = null == n ? c : n(c);
              if (((c = r || 0 !== c ? c : 0), a && f == f)) {
                for (var h = u; h--; ) if (t[h] === f) continue e;
                l.push(c);
              } else o(t, f, r) || l.push(c);
            }
            return l;
          },
          Qo = mr(function (e, t) {
            return Bn(e) ? $o(e, Zt(t, 1, Bn, !0)) : [];
          });
        var Ko = function (e, t, n) {
          for (var r = -1, i = e.length; ++r < i; ) {
            var o = e[r],
              a = t(o);
            if (null != a && (void 0 === s ? a == a && !ne(a) : n(a, s)))
              var s = a,
                l = o;
          }
          return l;
        };
        var Zo = function (e, t) {
          return e > t;
        };
        var ea = function (e) {
          return e && e.length ? Ko(e, an, Zo) : void 0;
        };
        var ta = function (e, t, n, r) {
          var i = -1,
            o = null == e ? 0 : e.length;
          for (r && o && (n = e[++i]); ++i < o; ) n = t(n, e[i], i, e);
          return n;
        };
        var na = (function (e) {
            return function (t) {
              return null == e ? void 0 : e[t];
            };
          })({
            À: 'A',
            Á: 'A',
            Â: 'A',
            Ã: 'A',
            Ä: 'A',
            Å: 'A',
            à: 'a',
            á: 'a',
            â: 'a',
            ã: 'a',
            ä: 'a',
            å: 'a',
            Ç: 'C',
            ç: 'c',
            Ð: 'D',
            ð: 'd',
            È: 'E',
            É: 'E',
            Ê: 'E',
            Ë: 'E',
            è: 'e',
            é: 'e',
            ê: 'e',
            ë: 'e',
            Ì: 'I',
            Í: 'I',
            Î: 'I',
            Ï: 'I',
            ì: 'i',
            í: 'i',
            î: 'i',
            ï: 'i',
            Ñ: 'N',
            ñ: 'n',
            Ò: 'O',
            Ó: 'O',
            Ô: 'O',
            Õ: 'O',
            Ö: 'O',
            Ø: 'O',
            ò: 'o',
            ó: 'o',
            ô: 'o',
            õ: 'o',
            ö: 'o',
            ø: 'o',
            Ù: 'U',
            Ú: 'U',
            Û: 'U',
            Ü: 'U',
            ù: 'u',
            ú: 'u',
            û: 'u',
            ü: 'u',
            Ý: 'Y',
            ý: 'y',
            ÿ: 'y',
            Æ: 'Ae',
            æ: 'ae',
            Þ: 'Th',
            þ: 'th',
            ß: 'ss',
            Ā: 'A',
            Ă: 'A',
            Ą: 'A',
            ā: 'a',
            ă: 'a',
            ą: 'a',
            Ć: 'C',
            Ĉ: 'C',
            Ċ: 'C',
            Č: 'C',
            ć: 'c',
            ĉ: 'c',
            ċ: 'c',
            č: 'c',
            Ď: 'D',
            Đ: 'D',
            ď: 'd',
            đ: 'd',
            Ē: 'E',
            Ĕ: 'E',
            Ė: 'E',
            Ę: 'E',
            Ě: 'E',
            ē: 'e',
            ĕ: 'e',
            ė: 'e',
            ę: 'e',
            ě: 'e',
            Ĝ: 'G',
            Ğ: 'G',
            Ġ: 'G',
            Ģ: 'G',
            ĝ: 'g',
            ğ: 'g',
            ġ: 'g',
            ģ: 'g',
            Ĥ: 'H',
            Ħ: 'H',
            ĥ: 'h',
            ħ: 'h',
            Ĩ: 'I',
            Ī: 'I',
            Ĭ: 'I',
            Į: 'I',
            İ: 'I',
            ĩ: 'i',
            ī: 'i',
            ĭ: 'i',
            į: 'i',
            ı: 'i',
            Ĵ: 'J',
            ĵ: 'j',
            Ķ: 'K',
            ķ: 'k',
            ĸ: 'k',
            Ĺ: 'L',
            Ļ: 'L',
            Ľ: 'L',
            Ŀ: 'L',
            Ł: 'L',
            ĺ: 'l',
            ļ: 'l',
            ľ: 'l',
            ŀ: 'l',
            ł: 'l',
            Ń: 'N',
            Ņ: 'N',
            Ň: 'N',
            Ŋ: 'N',
            ń: 'n',
            ņ: 'n',
            ň: 'n',
            ŋ: 'n',
            Ō: 'O',
            Ŏ: 'O',
            Ő: 'O',
            ō: 'o',
            ŏ: 'o',
            ő: 'o',
            Ŕ: 'R',
            Ŗ: 'R',
            Ř: 'R',
            ŕ: 'r',
            ŗ: 'r',
            ř: 'r',
            Ś: 'S',
            Ŝ: 'S',
            Ş: 'S',
            Š: 'S',
            ś: 's',
            ŝ: 's',
            ş: 's',
            š: 's',
            Ţ: 'T',
            Ť: 'T',
            Ŧ: 'T',
            ţ: 't',
            ť: 't',
            ŧ: 't',
            Ũ: 'U',
            Ū: 'U',
            Ŭ: 'U',
            Ů: 'U',
            Ű: 'U',
            Ų: 'U',
            ũ: 'u',
            ū: 'u',
            ŭ: 'u',
            ů: 'u',
            ű: 'u',
            ų: 'u',
            Ŵ: 'W',
            ŵ: 'w',
            Ŷ: 'Y',
            ŷ: 'y',
            Ÿ: 'Y',
            Ź: 'Z',
            Ż: 'Z',
            Ž: 'Z',
            ź: 'z',
            ż: 'z',
            ž: 'z',
            Ĳ: 'IJ',
            ĳ: 'ij',
            Œ: 'Oe',
            œ: 'oe',
            ŉ: "'n",
            ſ: 's',
          }),
          ra = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
          ia = RegExp('[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]', 'g');
        var oa = function (e) {
            return (e = Ot(e)) && e.replace(ra, na).replace(ia, '');
          },
          aa = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
        var sa = function (e) {
            return e.match(aa) || [];
          },
          la =
            /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
        var ua = function (e) {
            return la.test(e);
          },
          ca = '\\ud800-\\udfff',
          fa = '\\u2700-\\u27bf',
          ha = 'a-z\\xdf-\\xf6\\xf8-\\xff',
          da = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
          ga =
            '\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
          pa = '[' + ga + ']',
          va = '\\d+',
          ya = '[' + fa + ']',
          ma = '[' + ha + ']',
          ba = '[^' + ca + ga + va + fa + ha + da + ']',
          ka = '(?:\\ud83c[\\udde6-\\uddff]){2}',
          wa = '[\\ud800-\\udbff][\\udc00-\\udfff]',
          xa = '[' + da + ']',
          Ca = '(?:' + ma + '|' + ba + ')',
          Sa = '(?:' + xa + '|' + ba + ')',
          Ea = "(?:['’](?:d|ll|m|re|s|t|ve))?",
          Oa = "(?:['’](?:D|LL|M|RE|S|T|VE))?",
          Pa =
            '(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?',
          Aa = '[\\ufe0e\\ufe0f]?',
          Ma =
            Aa +
            Pa +
            ('(?:\\u200d(?:' +
              ['[^' + ca + ']', ka, wa].join('|') +
              ')' +
              Aa +
              Pa +
              ')*'),
          Ta = '(?:' + [ya, ka, wa].join('|') + ')' + Ma,
          Na = RegExp(
            [
              xa + '?' + ma + '+' + Ea + '(?=' + [pa, xa, '$'].join('|') + ')',
              Sa + '+' + Oa + '(?=' + [pa, xa + Ca, '$'].join('|') + ')',
              xa + '?' + Ca + '+' + Ea,
              xa + '+' + Oa,
              '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
              '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
              va,
              Ta,
            ].join('|'),
            'g'
          );
        var ja = function (e) {
          return e.match(Na) || [];
        };
        var La = function (e, t, n) {
            return (
              (e = Ot(e)),
              void 0 === (t = n ? void 0 : t)
                ? ua(e)
                  ? ja(e)
                  : sa(e)
                : e.match(t) || []
            );
          },
          Ra = RegExp("['’]", 'g');
        var _a = function (e) {
          return function (t) {
            return ta(La(oa(t).replace(Ra, '')), e, '');
          };
        };
        var Ia = function (e, t, n) {
          var r = -1,
            i = e.length;
          t < 0 && (t = -t > i ? 0 : i + t),
            (n = n > i ? i : n) < 0 && (n += i),
            (i = t > n ? 0 : (n - t) >>> 0),
            (t >>>= 0);
          for (var o = Array(i); ++r < i; ) o[r] = e[r + t];
          return o;
        };
        var Da = function (e, t, n) {
            var r = e.length;
            return (n = void 0 === n ? r : n), !t && n >= r ? e : Ia(e, t, n);
          },
          za = RegExp(
            '[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]'
          );
        var Ba = function (e) {
          return za.test(e);
        };
        var Va = function (e) {
            return e.split('');
          },
          Fa = '\\ud800-\\udfff',
          Ua = '[' + Fa + ']',
          Ha = '[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]',
          Ga = '\\ud83c[\\udffb-\\udfff]',
          Wa = '[^' + Fa + ']',
          qa = '(?:\\ud83c[\\udde6-\\uddff]){2}',
          Xa = '[\\ud800-\\udbff][\\udc00-\\udfff]',
          Ya = '(?:' + Ha + '|' + Ga + ')' + '?',
          Ja = '[\\ufe0e\\ufe0f]?',
          $a =
            Ja +
            Ya +
            ('(?:\\u200d(?:' + [Wa, qa, Xa].join('|') + ')' + Ja + Ya + ')*'),
          Qa = '(?:' + [Wa + Ha + '?', Ha, qa, Xa, Ua].join('|') + ')',
          Ka = RegExp(Ga + '(?=' + Ga + ')|' + Qa + $a, 'g');
        var Za = function (e) {
          return e.match(Ka) || [];
        };
        var es = function (e) {
          return Ba(e) ? Za(e) : Va(e);
        };
        var ts = function (e) {
            return function (t) {
              t = Ot(t);
              var n = Ba(t) ? es(t) : void 0,
                r = n ? n[0] : t.charAt(0),
                i = n ? Da(n, 1).join('') : t.slice(1);
              return r[e]() + i;
            };
          },
          ns = ts('toUpperCase'),
          rs = _a(function (e, t, n) {
            return e + (n ? ' ' : '') + ns(t);
          }),
          is = rs;
        var os = function (e) {
            return ns(Ot(e).toLowerCase());
          },
          as = _a(function (e, t, n) {
            return (t = t.toLowerCase()), e + (n ? os(t) : t);
          }),
          ss = as,
          ls = _a(function (e, t, n) {
            return e + (n ? ' ' : '') + t.toUpperCase();
          }),
          us = ls,
          cs = _a(function (e, t, n) {
            return e + (n ? ' ' : '') + t.toLowerCase();
          }),
          fs = cs,
          hs = ts('toLowerCase'),
          ds = function (e) {
            var t = Object.create(null);
            return function (n) {
              return t[n] || (t[n] = e(n));
            };
          },
          gs = ds(function (e) {
            return e.replace(/\B([A-Z])/g, '-$1').toLowerCase();
          }),
          ps = ds(function (e) {
            return is(ss(e)).replace(/ /g, '');
          });
        ds(function (e) {
          return us(e).replace(/ /g, '_');
        }),
          ds(function (e) {
            return fs(e).replace(/ /g, '.');
          }),
          ds(function (e) {
            return fs(e).replace(/ /g, '/');
          }),
          ds(function (e) {
            return ns(fs(e));
          }),
          ds(function (e) {
            return is(ss(e));
          });
        function vs(e) {
          for (
            var t = 2166136261, n = !1, r = e, i = 0, o = r.length;
            i < o;
            i += 1
          ) {
            var a = r.charCodeAt(i);
            a > 127 &&
              !n &&
              ((a = (r = unescape(encodeURIComponent(r))).charCodeAt(i)),
              (n = !0)),
              (t ^= a),
              (t += (t << 1) + (t << 4) + (t << 7) + (t << 8) + (t << 24));
          }
          return t >>> 0;
        }
        function ys() {
          for (
            var e = '',
              t = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx',
              n = 0,
              r = t.length;
            n < r;
            n += 1
          ) {
            var i = t[n],
              o = (16 * Math.random()) | 0;
            e += ('x' === i ? o : 'y' === i ? (3 & o) | 8 : i).toString(16);
          }
          return e;
        }
        var ms = i(304),
          bs = i.n(ms);
        function ks(e, t, n) {
          for (
            var r = new Array(t.length + 1),
              i = new Array(t.length + 1),
              o = n + 1,
              a = 0;
            a <= t.length;
            a += 1
          )
            r[a] = a;
          for (var s = 1; s <= e.length; s += 1) {
            var l = e.charCodeAt(s - 1),
              u = s > n ? s - n : 1,
              c = t.length > n + s ? n + s : t.length;
            i[0] = s;
            for (var f = s, h = 1; h < u; h += 1) i[h] = o;
            for (var d = u; d <= c; d += 1) {
              var g =
                l === t.charCodeAt(d - 1)
                  ? r[d - 1]
                  : Math.min(r[d] + 1, i[d - 1] + 1, r[d - 1] + 2);
              (i[d] = g), (f = Math.min(f, g));
            }
            for (var p = c + 1; p <= t.length; p += 1) i[p] = o;
            if (f > n) return;
            var v = r;
            (r = i), (i = v);
          }
          var y = r[t.length];
          return y > n ? void 0 : y;
        }
        var ws = function (e) {
          return 'number' == typeof e || (te(e) && '[object Number]' == ee(e));
        };
        var xs = function (e, t, n) {
          return (
            e == e &&
              (void 0 !== n && (e = e <= n ? e : n),
              void 0 !== t && (e = e >= t ? e : t)),
            e
          );
        };
        var Cs = function (e, t, n) {
          return (
            void 0 === n && ((n = t), (t = void 0)),
            void 0 !== n && (n = (n = se(n)) == n ? n : 0),
            void 0 !== t && (t = (t = se(t)) == t ? t : 0),
            xs(se(e), t, n)
          );
        };
        function Ss(e) {
          return 'string' == typeof e && '%' === e.slice(-1);
        }
        function Es(e, t) {
          if (null == e) return 0;
          var n;
          if ('string' == typeof e) {
            if (
              ((n = parseFloat(e)), Ss(e) && ((n /= 100), Number.isFinite(n)))
            )
              return n * t;
          } else n = e;
          return Number.isFinite(n) ? (n > 0 && n < 1 ? n * t : n) : 0;
        }
        function Os(e) {
          if ('object' === _()(e)) {
            var t = 0,
              n = 0,
              r = 0,
              i = 0;
            return (
              null != e.vertical &&
                Number.isFinite(e.vertical) &&
                (n = i = e.vertical),
              null != e.horizontal &&
                Number.isFinite(e.horizontal) &&
                (r = t = e.horizontal),
              null != e.left && Number.isFinite(e.left) && (t = e.left),
              null != e.top && Number.isFinite(e.top) && (n = e.top),
              null != e.right && Number.isFinite(e.right) && (r = e.right),
              null != e.bottom && Number.isFinite(e.bottom) && (i = e.bottom),
              { top: n, right: r, bottom: i, left: t }
            );
          }
          var o = 0;
          return (
            null != e && Number.isFinite(e) && (o = e),
            { top: o, right: o, bottom: o, left: o }
          );
        }
        var Ps,
          As = !1,
          Ms = !1,
          Ts = !1,
          Ns = !1,
          js = !1,
          Ls = !1,
          Rs = !1,
          _s = !1,
          Is = !1,
          Ds = !1,
          zs = !1,
          Bs = !1,
          Vs = !1,
          Fs = !1,
          Us = !1,
          Hs = !1;
        if (
          'object' ===
          ('undefined' == typeof navigator ? 'undefined' : _()(navigator))
        ) {
          var Gs = navigator.userAgent;
          (As = Gs.indexOf('Macintosh') >= 0),
            (Ms = !!Gs.match(/(iPad|iPhone|iPod)/g)),
            (Ts = Gs.indexOf('Windows') >= 0),
            (Ns = Gs.indexOf('MSIE') >= 0),
            (js = !!Gs.match(/Trident\/7\./)),
            (Ls = !!Gs.match(/Edge\//)),
            (Rs =
              Gs.indexOf('Mozilla/') >= 0 &&
              Gs.indexOf('MSIE') < 0 &&
              Gs.indexOf('Edge/') < 0),
            (Is = Gs.indexOf('Chrome/') >= 0 && Gs.indexOf('Edge/') < 0),
            (Ds = Gs.indexOf('Opera/') >= 0 || Gs.indexOf('OPR/') >= 0),
            (zs = Gs.indexOf('Firefox/') >= 0),
            (Bs =
              Gs.indexOf('AppleWebKit/') >= 0 &&
              Gs.indexOf('Chrome/') < 0 &&
              Gs.indexOf('Edge/') < 0),
            'object' ===
              ('undefined' == typeof document ? 'undefined' : _()(document)) &&
              (Hs =
                !document.createElementNS ||
                '[object SVGForeignObjectElement]' !==
                  ''.concat(
                    document.createElementNS(
                      'http://www.w3.org/2000/svg',
                      'foreignObject'
                    )
                  ) ||
                Gs.indexOf('Opera/') >= 0);
        }
        if (
          ('object' ===
            ('undefined' == typeof window ? 'undefined' : _()(window)) &&
            ((_s =
              null != window.chrome &&
              null != window.chrome.app &&
              null != window.chrome.app.runtime),
            (Fs = null != window.PointerEvent && !As)),
          'object' ===
            ('undefined' == typeof document ? 'undefined' : _()(document)))
        ) {
          Vs = 'ontouchstart' in document.documentElement;
          try {
            var Ws = Object.defineProperty({}, 'passive', {
                get: function () {
                  Us = !0;
                },
              }),
              qs = document.createElement('div');
            qs.addEventListener &&
              qs.addEventListener('click', function () {}, Ws);
          } catch (e) {}
        }
        !(function (e) {
          (e.IS_MAC = As),
            (e.IS_IOS = Ms),
            (e.IS_WINDOWS = Ts),
            (e.IS_IE = Ns),
            (e.IS_IE11 = js),
            (e.IS_EDGE = Ls),
            (e.IS_NETSCAPE = Rs),
            (e.IS_CHROME_APP = _s),
            (e.IS_CHROME = Is),
            (e.IS_OPERA = Ds),
            (e.IS_FIREFOX = zs),
            (e.IS_SAFARI = Bs),
            (e.SUPPORT_TOUCH = Vs),
            (e.SUPPORT_POINTER = Fs),
            (e.SUPPORT_PASSIVE = Us),
            (e.NO_FOREIGNOBJECT = Hs),
            (e.SUPPORT_FOREIGNOBJECT = !e.NO_FOREIGNOBJECT);
        })(Ps || (Ps = {})),
          (function (e) {
            function t() {
              var e = window.module;
              return null != e && null != e.hot && null != e.hot.status
                ? e.hot.status()
                : 'unkonwn';
            }
            (e.getHMRStatus = t),
              (e.isApplyingHMR = function () {
                return 'apply' === t();
              });
            var n = {
              select: 'input',
              change: 'input',
              submit: 'form',
              reset: 'form',
              error: 'img',
              load: 'img',
              abort: 'img',
            };
            e.isEventSupported = function (e) {
              var t = document.createElement(n[e] || 'div'),
                r = 'on'.concat(e),
                i = r in t;
              return (
                i ||
                  (t.setAttribute(r, 'return;'),
                  (i = 'function' == typeof t[r])),
                i
              );
            };
          })(Ps || (Ps = {}));
        var Xs = /[\t\r\n\f]/g,
          Ys = /\S+/g,
          Js = function (e) {
            return ' '.concat(e, ' ');
          };
        function $s(e) {
          return (e && e.getAttribute && e.getAttribute('class')) || '';
        }
        function Qs(e, t) {
          if (null == e || null == t) return !1;
          var n = Js($s(e)),
            r = Js(t);
          return 1 === e.nodeType && n.replace(Xs, ' ').includes(r);
        }
        function Ks(e, t) {
          if (null != e && null != t) {
            if ('function' == typeof t) return Ks(e, t($s(e)));
            if ('string' == typeof t && 1 === e.nodeType) {
              var n = t.match(Ys) || [],
                r = Js($s(e)).replace(Xs, ' '),
                i = n.reduce(function (e, t) {
                  return e.indexOf(Js(t)) < 0 ? ''.concat(e).concat(t, ' ') : e;
                }, r);
              r !== (i = i.trim()) && e.setAttribute('class', i);
            }
          }
        }
        function Zs(e, t) {
          if (null != e) {
            if ('function' == typeof t) return Zs(e, t($s(e)));
            if ((!t || 'string' == typeof t) && 1 === e.nodeType) {
              var n = (t || '').match(Ys) || [],
                r = Js($s(e)).replace(Xs, ' '),
                i = n.reduce(function (e, t) {
                  var n = Js(t);
                  return e.indexOf(n) > -1 ? e.replace(n, ' ') : e;
                }, r);
              r !== (i = t ? i.trim() : '') && e.setAttribute('class', i);
            }
          }
        }
        function el(e, t, n) {
          if (null != e && null != t)
            if (null == n || 'string' != typeof t) {
              if ('function' == typeof t) return el(e, t($s(e), n), n);
              if ('string' == typeof t)
                (t.match(Ys) || []).forEach(function (t) {
                  Qs(e, t) ? Zs(e, t) : Ks(e, t);
                });
            } else n ? Ks(e, t) : Zs(e, t);
        }
        var tl = 0;
        function nl(e) {
          return (
            (null != e.id && '' !== e.id) || (e.id = 'v'.concat((tl += 1))),
            e.id
          );
        }
        function rl(e) {
          return (
            null != e &&
            'function' == typeof e.getScreenCTM &&
            e instanceof SVGElement
          );
        }
        var il = {
          svg: 'http://www.w3.org/2000/svg',
          xmlns: 'http://www.w3.org/2000/xmlns/',
          xml: 'http://www.w3.org/XML/1998/namespace',
          xlink: 'http://www.w3.org/1999/xlink',
          xhtml: 'http://www.w3.org/1999/xhtml',
        };
        function ol(e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : document;
          return t.createElement(e);
        }
        function al(e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : il.xhtml,
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : document;
          return n.createElementNS(t, e);
        }
        function sl(e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : document;
          return al(e, il.svg, t);
        }
        function ll(e) {
          if (e) {
            var t = (function (e) {
              var t,
                n =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
              try {
                var r = new DOMParser();
                if (null != n.async) r.async = n.async;
                t = r.parseFromString(e, n.mimeType || 'text/xml');
              } catch (e) {
                t = void 0;
              }
              if (!t || t.getElementsByTagName('parsererror').length)
                throw new Error('Invalid XML: '.concat(e));
              return t;
            })(
              '<svg xmlns="'
                .concat(il.svg, '" xmlns:xlink="')
                .concat(il.xlink, '" version="')
                .concat('1.1', '">')
                .concat(e, '</svg>'),
              { async: !1 }
            );
            return t.documentElement;
          }
          var n = document.createElementNS(il.svg, 'svg');
          return (
            n.setAttributeNS(il.xmlns, 'xmlns:xlink', il.xlink),
            n.setAttribute('version', '1.1'),
            n
          );
        }
        function ul(e) {
          for (var t = 0, n = e.previousSibling; n; )
            1 === n.nodeType && (t += 1), (n = n.previousSibling);
          return t;
        }
        function cl(e, t, n) {
          for (
            var r = e.ownerSVGElement, i = e.parentNode;
            i && i !== n && i !== r;

          ) {
            if (Qs(i, t)) return i;
            i = i.parentNode;
          }
          return null;
        }
        function fl(e, t) {
          var n = t && t.parentNode;
          return (
            e === n ||
            !!(n && 1 === n.nodeType && 16 & e.compareDocumentPosition(n))
          );
        }
        function hl(e) {
          e &&
            (Array.isArray(e) ? e : [e]).forEach(function (e) {
              e.parentNode && e.parentNode.removeChild(e);
            });
        }
        function dl(e) {
          for (; e.firstChild; ) e.removeChild(e.firstChild);
        }
        function gl(e, t) {
          (Array.isArray(t) ? t : [t]).forEach(function (t) {
            null != t && e.appendChild(t);
          });
        }
        function pl(e, t) {
          var n = e.parentNode;
          n &&
            (Array.isArray(t) ? t : [t]).forEach(function (t) {
              null != t && n.insertBefore(t, e);
            });
        }
        function vl(e) {
          try {
            return e instanceof HTMLElement;
          } catch (t) {
            return (
              'object' === _()(e) &&
              1 === e.nodeType &&
              'object' === _()(e.style) &&
              'object' === _()(e.ownerDocument)
            );
          }
        }
        var yl,
          ml,
          bl = [
            'viewBox',
            'attributeName',
            'attributeType',
            'repeatCount',
            'textLength',
            'lengthAdjust',
          ];
        function kl(e, t) {
          var n = Sl(t);
          n.ns
            ? e.hasAttributeNS(n.ns, n.local) &&
              e.removeAttributeNS(n.ns, n.local)
            : e.hasAttribute(t) && e.removeAttribute(t);
        }
        function wl(e, t, n) {
          if (null == n) return kl(e, t);
          var r = Sl(t);
          r.ns && 'string' == typeof n
            ? e.setAttributeNS(r.ns, t, n)
            : 'id' === t
            ? (e.id = ''.concat(n))
            : e.setAttribute(t, ''.concat(n));
        }
        function xl(e, t) {
          Object.keys(t).forEach(function (n) {
            wl(e, n, t[n]);
          });
        }
        function Cl(e, t, n) {
          if (null == t) {
            for (var r = e.attributes, i = {}, o = 0; o < r.length; o += 1)
              i[r[o].name] = r[o].value;
            return i;
          }
          if ('string' == typeof t && void 0 === n) return e.getAttribute(t);
          'object' === _()(t) ? xl(e, t) : wl(e, t, n);
        }
        function Sl(e) {
          if (-1 !== e.indexOf(':')) {
            var t = e.split(':');
            return { ns: il[t[0]], local: t[1] };
          }
          return { ns: null, local: e };
        }
        function El(e) {
          var t = {};
          return (
            Object.keys(e).forEach(function (n) {
              var r = bl.includes(n) ? n : gs(n);
              t[r] = e[n];
            }),
            t
          );
        }
        function Ol(e) {
          var t = {};
          return (
            e.split(';').forEach(function (e) {
              var n = e.trim();
              if (n) {
                var r = n.split('=');
                r.length && (t[r[0].trim()] = r[1] ? r[1].trim() : '');
              }
            }),
            t
          );
        }
        function Pl(e, t) {
          return (
            Object.keys(t).forEach(function (n) {
              if ('class' === n)
                e[n] = e[n] ? ''.concat(e[n], ' ').concat(t[n]) : t[n];
              else if ('style' === n) {
                var r,
                  i,
                  o = 'object' === _()(e[n]),
                  a = 'object' === _()(t[n]);
                o && a
                  ? ((r = e[n]), (i = t[n]))
                  : o
                  ? ((r = e[n]), (i = Ol(t[n])))
                  : a
                  ? ((r = Ol(e[n])), (i = t[n]))
                  : ((r = Ol(e[n])), (i = Ol(t[n]))),
                  (e[n] = Pl(r, i));
              } else e[n] = t[n];
            }),
            e
          );
        }
        function Al(e, t) {
          for (
            var n,
              r,
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {},
              o = i.offset || 0,
              a = [],
              s = [],
              l = null,
              u = 0;
            u < e.length;
            u += 1
          ) {
            n = s[u] = e[u];
            for (var c = 0, f = t.length; c < f; c += 1) {
              var h = t[c],
                d = h.start + o,
                g = h.end + o;
              u >= d &&
                u < g &&
                ('string' == typeof n
                  ? (n = s[u] = { t: e[u], attrs: h.attrs })
                  : (n.attrs = Pl(Pl({}, n.attrs), h.attrs)),
                i.includeAnnotationIndices &&
                  (null == n.annotations && (n.annotations = []),
                  n.annotations.push(c)));
            }
            (r = s[u - 1])
              ? I(n) && I(r)
                ? JSON.stringify(n.attrs) === JSON.stringify(r.attrs)
                  ? (l.t += n.t)
                  : (a.push(l), (l = n))
                : I(n) || I(r)
                ? (a.push(l), (l = n))
                : (l = (l || '') + n)
              : (l = n);
          }
          return null != l && a.push(l), a;
        }
        function Ml(e) {
          return e.replace(/ /g, ' ');
        }
        !(function (e) {
          function t(e) {
            var t = 'data:';
            return e.substr(0, t.length) === t;
          }
          function n(e) {
            var t,
              n = e.replace(/\s/g, ''),
              r = (n = decodeURIComponent(n)).indexOf(','),
              i = n.slice(0, r),
              o = i.split(':')[1].split(';')[0],
              a = n.slice(r + 1);
            t =
              i.indexOf('base64') >= 0
                ? atob(a)
                : unescape(encodeURIComponent(a));
            for (var s = new Uint8Array(t.length), l = 0; l < t.length; l += 1)
              s[l] = t.charCodeAt(l);
            return new Blob([s], { type: o });
          }
          function r(e, t) {
            var n = window.navigator.msSaveBlob;
            if (n) n(e, t);
            else {
              var r = window.URL.createObjectURL(e),
                i = document.createElement('a');
              (i.href = r),
                (i.download = t),
                document.body.appendChild(i),
                i.click(),
                document.body.removeChild(i),
                window.URL.revokeObjectURL(r);
            }
          }
          function i(e) {
            var t = e.match(/<svg[^>]*viewBox\s*=\s*(["']?)(.+?)\1[^>]*>/i);
            return t && t[2] ? t[2].replace(/\s+/, ' ').split(' ') : null;
          }
          function o(e) {
            var t = parseFloat(e);
            return Number.isNaN(t) ? null : t;
          }
          (e.isDataUrl = t),
            (e.imageToDataUri = function (e, n) {
              if (e && !t(e)) {
                var r = function () {
                    n(new Error('Failed to load image: '.concat(e)));
                  },
                  i = window.FileReader
                    ? function (e) {
                        if (200 === e.status) {
                          var t = new FileReader();
                          (t.onload = function (e) {
                            var t = e.target.result;
                            n(null, t);
                          }),
                            (t.onerror = r),
                            t.readAsDataURL(e.response);
                        } else r();
                      }
                    : function (t) {
                        if (200 === t.status) {
                          var i = e.split('.').pop() || 'png';
                          'svg' === i && (i = 'svg+xml');
                          var o = 'data:image/'.concat(i, ';base64,'),
                            a = new Uint8Array(t.response),
                            s =
                              o +
                              btoa(
                                (function (e) {
                                  for (
                                    var t = [], n = 0;
                                    n < e.length;
                                    n += 32768
                                  )
                                    t.push(
                                      String.fromCharCode.apply(
                                        null,
                                        e.subarray(n, n + 32768)
                                      )
                                    );
                                  return t.join('');
                                })(a)
                              );
                          n(null, s);
                        } else r();
                      },
                  o = new XMLHttpRequest();
                (o.responseType = window.FileReader ? 'blob' : 'arraybuffer'),
                  o.open('GET', e, !0),
                  o.addEventListener('error', r),
                  o.addEventListener('load', function () {
                    return i(o);
                  }),
                  o.send();
              } else
                setTimeout(function () {
                  return n(null, e);
                });
            }),
            (e.dataUriToBlob = n),
            (e.downloadBlob = r),
            (e.downloadDataUri = function (e, t) {
              r(n(e), t);
            }),
            (e.svgToDataUrl = function (e) {
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {},
                n = null,
                r = function (t) {
                  return null == n && (n = i(e)), null != n ? o(n[t]) : null;
                },
                a = function (t) {
                  var n = e.match(t);
                  return n && n[2] ? o(n[2]) : null;
                },
                s = t.width;
              if (
                (null == s &&
                  (s = a(/<svg[^>]*width\s*=\s*(["']?)(.+?)\1[^>]*>/i)),
                null == s && (s = r(2)),
                null == s)
              )
                throw new Error('Can not parse width from svg string');
              var l = t.height;
              if (
                (null == l &&
                  (l = a(/<svg[^>]*height\s*=\s*(["']?)(.+?)\1[^>]*>/i)),
                null == l && (l = r(3)),
                null == l)
              )
                throw new Error('Can not parse height from svg string');
              var u = encodeURIComponent(e)
                  .replace(/'/g, '%27')
                  .replace(/"/g, '%22'),
                c = 'data:image/svg+xml',
                f = ''.concat(c, ',').concat(u);
              return f;
            });
        })(yl || (yl = {}));
        var Tl,
          Nl = {
            px: function (e) {
              return e;
            },
            mm: function (e) {
              return ml * e;
            },
            cm: function (e) {
              return ml * e * 10;
            },
            in: function (e) {
              return ml * e * 25.4;
            },
            pt: function (e) {
              return ml * ((25.4 * e) / 72);
            },
            pc: function (e) {
              return ml * ((25.4 * e) / 6);
            },
          };
        !(function (e) {
          function t(e, t, n) {
            var r = document.createElement('div'),
              i = r.style;
            (i.display = 'inline-block'),
              (i.position = 'absolute'),
              (i.left = '-15000px'),
              (i.top = '-15000px'),
              (i.width = e + (n || 'px')),
              (i.height = t + (n || 'px')),
              document.body.appendChild(r);
            var o = r.getBoundingClientRect(),
              a = { width: o.width || 0, height: o.height || 0 };
            return document.body.removeChild(r), a;
          }
          (e.measure = t),
            (e.toPx = function (e, n) {
              null == ml && (ml = t('1', '1', 'mm').width);
              var r = n ? Nl[n] : null;
              return r ? r(e) : e;
            });
        })(Tl || (Tl = {}));
        var jl = /-(.)/g;
        var Ll = {},
          Rl = ['webkit', 'ms', 'moz', 'o'],
          _l = document ? document.createElement('div').style : {};
        function Il(e) {
          var t = e.replace(jl, function (e, t) {
            return t.toUpperCase();
          });
          if (null == Ll[t]) {
            var n = t.charAt(0).toUpperCase() + t.slice(1);
            Ll[t] =
              t in _l
                ? t
                : (function (e) {
                    for (var t = 0; t < Rl.length; t += 1) {
                      var n = Rl[t] + e;
                      if (n in _l) return n;
                    }
                    return null;
                  })(n);
          }
          return Ll[t];
        }
        function Dl(e, t) {
          var n =
            e.ownerDocument &&
            e.ownerDocument.defaultView &&
            e.ownerDocument.defaultView.opener
              ? e.ownerDocument.defaultView.getComputedStyle(e, null)
              : window.getComputedStyle(e, null);
          return n && t ? n.getPropertyValue(t) || n[t] : n;
        }
        (zl = document).selection || window.getSelection;
        var zl,
          Bl = {
            animationIterationCount: !0,
            columnCount: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            gridArea: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnStart: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowStart: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
          };
        function Vl(e, t, n) {
          var r = window.getComputedStyle(e, null);
          return n ? r.getPropertyValue(t) || void 0 : r[t] || e.style[t];
        }
        function Fl(e, t, n) {
          if ('string' != typeof t) for (var r in t) Fl(e, r, t[r]);
          else {
            var i = (function (e) {
              return /^--/.test(e);
            })(t);
            if ((i || (t = Il(t)), void 0 === n)) return Vl(e, t, i);
            i ||
              (n = (function (e, t) {
                return Bl[e] || 'number' != typeof t ? t : ''.concat(t, 'px');
              })(t, n));
            var o = e.style;
            i ? o.setProperty(t, n) : (o[t] = n);
          }
        }
        var Ul = new WeakMap();
        function Hl(e, t) {
          var n = ss(t),
            r = Ul.get(e);
          if (r) return r[n];
        }
        function Gl(e, t, n) {
          if (!t) {
            var r = {};
            return (
              Object.keys(Ul).forEach(function (t) {
                r[t] = Hl(e, t);
              }),
              r
            );
          }
          if ('string' == typeof t)
            return void 0 === n
              ? Hl(e, t)
              : void (function (e, t, n) {
                  var r = ss(t),
                    i = Ul.get(e);
                  i ? (i[r] = n) : Ul.set(e, w()({}, r, n));
                })(e, t, n);
          for (var i in t) Gl(e, i, t[i]);
        }
        var Wl = i(709),
          ql = i.n(Wl),
          Xl = (function (e) {
            function t(e, n, r) {
              if ((y()(this, t), !e))
                throw new TypeError('Invalid element to create vector');
              var i;
              if (t.isVector(e)) i = e.node;
              else if ('string' == typeof e)
                if ('svg' === e.toLowerCase()) i = ll();
                else if ('<' === e[0]) {
                  var o = ll(e);
                  i = document.importNode(o.firstChild, !0);
                } else i = document.createElementNS(il.svg, e);
              else i = e;
              (this.node = i), n && this.setAttributes(n), r && this.append(r);
            }
            return (
              b()(t, [
                {
                  key: e,
                  get: function () {
                    return t.toStringTag;
                  },
                },
                {
                  key: 'type',
                  get: function () {
                    return this.node.nodeName;
                  },
                },
                {
                  key: 'id',
                  get: function () {
                    return this.node.id;
                  },
                },
                {
                  key: 'id',
                  set: function (e) {
                    this.node.id = e;
                  },
                },
                {
                  key: 'transform',
                  value: function (e, t) {
                    return null == e
                      ? Su(this.node)
                      : (Su(this.node, e, t), this);
                  },
                },
                {
                  key: 'translate',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0,
                      n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {};
                    return null == e
                      ? Eu(this.node)
                      : (Eu(this.node, e, t, n), this);
                  },
                },
                {
                  key: 'rotate',
                  value: function (e, t, n) {
                    var r =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : {};
                    return null == e
                      ? Ou(this.node)
                      : (Ou(this.node, e, t, n, r), this);
                  },
                },
                {
                  key: 'scale',
                  value: function (e, t) {
                    return null == e
                      ? Pu(this.node)
                      : (Pu(this.node, e, t), this);
                  },
                },
                {
                  key: 'getTransformToElement',
                  value: function (e) {
                    var n = t.toNode(e);
                    return Au(this.node, n);
                  },
                },
                {
                  key: 'removeAttribute',
                  value: function (e) {
                    return kl(this.node, e), this;
                  },
                },
                {
                  key: 'getAttribute',
                  value: function (e) {
                    return (function (e, t) {
                      return e.getAttribute(t);
                    })(this.node, e);
                  },
                },
                {
                  key: 'setAttribute',
                  value: function (e, t) {
                    return wl(this.node, e, t), this;
                  },
                },
                {
                  key: 'setAttributes',
                  value: function (e) {
                    return xl(this.node, e), this;
                  },
                },
                {
                  key: 'attr',
                  value: function (e, t) {
                    return null == e
                      ? Cl(this.node)
                      : 'string' == typeof e && void 0 === t
                      ? Cl(this.node, e)
                      : ('object' === _()(e)
                          ? Cl(this.node, e)
                          : Cl(this.node, e, t),
                        this);
                  },
                },
                {
                  key: 'svg',
                  value: function () {
                    return this.node instanceof SVGSVGElement
                      ? this
                      : t.create(this.node.ownerSVGElement);
                  },
                },
                {
                  key: 'defs',
                  value: function () {
                    var e = this.svg() || this,
                      n = e.node.getElementsByTagName('defs')[0];
                    return n ? t.create(n) : t.create('defs').appendTo(e);
                  },
                },
                {
                  key: 'text',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return eu(this.node, e, t), this;
                  },
                },
                {
                  key: 'tagName',
                  value: function () {
                    return (function (e) {
                      var t =
                          !(arguments.length > 1 && void 0 !== arguments[1]) ||
                          arguments[1],
                        n = e.nodeName;
                      return t ? n.toLowerCase() : n.toUpperCase();
                    })(this.node);
                  },
                },
                {
                  key: 'clone',
                  value: function () {
                    return t.create(this.node.cloneNode(!0));
                  },
                },
                {
                  key: 'remove',
                  value: function () {
                    return hl(this.node), this;
                  },
                },
                {
                  key: 'empty',
                  value: function () {
                    return dl(this.node), this;
                  },
                },
                {
                  key: 'append',
                  value: function (e) {
                    return gl(this.node, t.toNodes(e)), this;
                  },
                },
                {
                  key: 'appendTo',
                  value: function (e) {
                    return (
                      (function (e, t) {
                        null != t && t.appendChild(e);
                      })(this.node, t.isVector(e) ? e.node : e),
                      this
                    );
                  },
                },
                {
                  key: 'prepend',
                  value: function (e) {
                    return (
                      (function (e, t) {
                        var n = e.firstChild;
                        n ? pl(n, t) : gl(e, t);
                      })(this.node, t.toNodes(e)),
                      this
                    );
                  },
                },
                {
                  key: 'before',
                  value: function (e) {
                    return pl(this.node, t.toNodes(e)), this;
                  },
                },
                {
                  key: 'replace',
                  value: function (e) {
                    return (
                      this.node.parentNode &&
                        this.node.parentNode.replaceChild(
                          t.toNode(e),
                          this.node
                        ),
                      t.create(e)
                    );
                  },
                },
                {
                  key: 'first',
                  value: function () {
                    return this.node.firstChild
                      ? t.create(this.node.firstChild)
                      : null;
                  },
                },
                {
                  key: 'last',
                  value: function () {
                    return this.node.lastChild
                      ? t.create(this.node.lastChild)
                      : null;
                  },
                },
                {
                  key: 'get',
                  value: function (e) {
                    var n = this.node.childNodes[e];
                    return n ? t.create(n) : null;
                  },
                },
                {
                  key: 'indexOf',
                  value: function (e) {
                    return Array.prototype.slice
                      .call(this.node.childNodes)
                      .indexOf(t.toNode(e));
                  },
                },
                {
                  key: 'find',
                  value: function (e) {
                    var n = [],
                      r = (function (e, t) {
                        return e.querySelectorAll(t);
                      })(this.node, e);
                    if (r)
                      for (var i = 0, o = r.length; i < o; i += 1)
                        n.push(t.create(r[i]));
                    return n;
                  },
                },
                {
                  key: 'findOne',
                  value: function (e) {
                    var n = (function (e, t) {
                      return e.querySelector(t);
                    })(this.node, e);
                    return n ? t.create(n) : null;
                  },
                },
                {
                  key: 'findParentByClass',
                  value: function (e, n) {
                    var r = cl(this.node, e, n);
                    return r ? t.create(r) : null;
                  },
                },
                {
                  key: 'matches',
                  value: function (e) {
                    var t = this.node,
                      n =
                        (this.node.matches,
                        t.matches ||
                          t.matchesSelector ||
                          t.msMatchesSelector ||
                          t.mozMatchesSelector ||
                          t.webkitMatchesSelector ||
                          t.oMatchesSelector ||
                          null);
                    return n && n.call(t, e);
                  },
                },
                {
                  key: 'contains',
                  value: function (e) {
                    return fl(this.node, t.isVector(e) ? e.node : e);
                  },
                },
                {
                  key: 'wrap',
                  value: function (e) {
                    var n = t.create(e),
                      r = this.node.parentNode;
                    return (
                      null != r && r.insertBefore(n.node, this.node),
                      n.append(this)
                    );
                  },
                },
                {
                  key: 'parent',
                  value: function (e) {
                    var n = this;
                    if (null == n.node.parentNode) return null;
                    if (((n = t.create(n.node.parentNode)), null == e))
                      return n;
                    do {
                      if ('string' == typeof e ? n.matches(e) : n instanceof e)
                        return n;
                    } while ((n = t.create(n.node.parentNode)));
                    return n;
                  },
                },
                {
                  key: 'children',
                  value: function () {
                    for (
                      var e = this.node.childNodes, n = [], r = 0;
                      r < e.length;
                      r += 1
                    ) {
                      1 === e[r].nodeType && n.push(t.create(e[r]));
                    }
                    return n;
                  },
                },
                {
                  key: 'eachChild',
                  value: function (e, t) {
                    for (
                      var n = this.children(), r = 0, i = n.length;
                      r < i;
                      r += 1
                    )
                      e.call(n[r], n[r], r, n), t && n[r].eachChild(e, t);
                    return this;
                  },
                },
                {
                  key: 'index',
                  value: function () {
                    return ul(this.node);
                  },
                },
                {
                  key: 'hasClass',
                  value: function (e) {
                    return Qs(this.node, e);
                  },
                },
                {
                  key: 'addClass',
                  value: function (e) {
                    return Ks(this.node, e), this;
                  },
                },
                {
                  key: 'removeClass',
                  value: function (e) {
                    return Zs(this.node, e), this;
                  },
                },
                {
                  key: 'toggleClass',
                  value: function (e, t) {
                    return el(this.node, e, t), this;
                  },
                },
                {
                  key: 'toLocalPoint',
                  value: function (e, t) {
                    return (function (e, t, n) {
                      var r =
                          e instanceof SVGSVGElement ? e : e.ownerSVGElement,
                        i = r.createSVGPoint();
                      (i.x = t), (i.y = n);
                      try {
                        var o = r.getScreenCTM(),
                          a = i.matrixTransform(o.inverse()),
                          s = Au(e, r).inverse();
                        return a.matrixTransform(s);
                      } catch (e) {
                        return i;
                      }
                    })(this.node, e, t);
                  },
                },
                {
                  key: 'sample',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : 1;
                    return this.node instanceof SVGPathElement
                      ? ou(this.node, e)
                      : [];
                  },
                },
                {
                  key: 'toPath',
                  value: function () {
                    return t.create(
                      (function (e) {
                        var t = sl('path');
                        Cl(t, Cl(e));
                        var n = uu(e);
                        n && t.setAttribute('d', n);
                        return t;
                      })(this.node)
                    );
                  },
                },
                {
                  key: 'toPathData',
                  value: function () {
                    return uu(this.node);
                  },
                },
              ]),
              t
            );
          })(Symbol.toStringTag);
        !(function (e) {
          function t(t) {
            if (null == t) return !1;
            if (t instanceof e) return !0;
            var n = t[Symbol.toStringTag],
              r = t;
            return (
              (null == n || n === e.toStringTag) &&
              r.node instanceof SVGElement &&
              'function' == typeof r.sample &&
              'function' == typeof r.toPath
            );
          }
          function n(t, n, r) {
            return new e(t, n, r);
          }
          function r(e) {
            return t(e) ? e.node : e;
          }
          (e.toStringTag = 'X6.'.concat(e.name)),
            (e.isVector = t),
            (e.create = n),
            (e.createVectors = function (e) {
              if ('<' === e[0]) {
                for (
                  var t = ll(e), r = [], i = 0, o = t.childNodes.length;
                  i < o;
                  i += 1
                ) {
                  var a = t.childNodes[i];
                  r.push(n(document.importNode(a, !0)));
                }
                return r;
              }
              return [n(e)];
            }),
            (e.toNode = r),
            (e.toNodes = function (e) {
              return Array.isArray(e)
                ? e.map(function (e) {
                    return r(e);
                  })
                : [r(e)];
            });
        })(Xl || (Xl = {}));
        var Yl = document.createElement('canvas').getContext('2d');
        function Jl(e, t) {
          var n = Xl.create(t),
            r = Xl.create('textPath'),
            i = e.d;
          if (i && void 0 === e['xlink:href']) {
            var o = Xl.create('path').attr('d', i).appendTo(n.defs());
            r.attr('xlink:href', '#'.concat(o.id));
          }
          return 'object' === _()(e) && r.attr(e), r.node;
        }
        function $l(e, t, n) {
          for (
            var r,
              i = n.eol,
              o = n.baseSize,
              a = n.lineHeight,
              s = 0,
              l = {},
              u = t.length - 1,
              c = 0;
            c <= u;
            c += 1
          ) {
            var f = t[c],
              h = null;
            if ('object' === _()(f)) {
              var d = f.attrs,
                g = Xl.create('tspan', d);
              r = g.node;
              var p = f.t;
              i && c === u && (p += i), (r.textContent = p);
              var v = d.class;
              v && g.addClass(v),
                n.includeAnnotationIndices &&
                  g.attr('annotations', f.annotations.join(',')),
                void 0 === (h = parseFloat(d['font-size'])) && (h = o),
                h && h > s && (s = h);
            } else
              i && c === u && (f += i),
                (r = document.createTextNode(f || ' ')),
                o && o > s && (s = o);
            e.appendChild(r);
          }
          return (
            s && (l.maxFontSize = s),
            a ? (l.lineHeight = a) : s && (l.lineHeight = 1.2 * s),
            l
          );
        }
        var Ql = /em$/;
        function Kl(e, t) {
          var n = parseFloat(e);
          return Ql.test(e) ? n * t : n;
        }
        function Zl(e, t, n, r) {
          if (!Array.isArray(t)) return 0;
          var i = t.length;
          if (!i) return 0;
          for (
            var o = t[0],
              a = Kl(o.maxFontSize, n) || n,
              s = 0,
              l = Kl(r, n),
              u = 1;
            u < i;
            u += 1
          ) {
            s += Kl((o = t[u]).lineHeight, n) || l;
          }
          var c,
            f = Kl(o.maxFontSize, n) || n;
          switch (e) {
            case 'middle':
              c = a / 2 - 0.15 * f - s / 2;
              break;
            case 'bottom':
              c = -0.25 * f - s;
              break;
            default:
              c = 0.8 * a;
          }
          return c;
        }
        function eu(e, t) {
          var n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          t = Ml(t);
          var r = n.eol,
            i = n.textPath,
            o = n.textVerticalAnchor,
            a = 'middle' === o || 'bottom' === o || 'top' === o,
            s = n.x;
          void 0 === s && (s = e.getAttribute('x') || 0);
          var l = n.includeAnnotationIndices,
            u = n.annotations;
          u && !Array.isArray(u) && (u = [u]);
          var c = n.lineHeight,
            f = 'auto' === c,
            h = f ? '1.5em' : c || '1em',
            d = !0,
            g = e.children;
          1 === g.length && 'TITLE' === g[0].tagName.toUpperCase() && (d = !1),
            d && dl(e),
            Cl(e, {
              'xml:space': 'preserve',
              display: t || n.displayEmpty ? null : 'none',
            });
          var p,
            v,
            y = Cl(e, 'font-size'),
            m = parseFloat(y);
          m || ((m = 16), (!a && !u) || y || Cl(e, 'font-size', ''.concat(m))),
            i
              ? ('string' == typeof i && (i = { d: i }), (p = Jl(i, e)))
              : (p = document.createDocumentFragment());
          for (
            var b, k = 0, w = t.split('\n'), x = [], C = w.length - 1, S = 0;
            S <= C;
            S += 1
          ) {
            v = h;
            var E = 'v-line',
              O = sl('tspan'),
              P = void 0,
              A = w[S];
            if (A)
              if (u) {
                var M = Al(A, u, { offset: -k, includeAnnotationIndices: l }),
                  T = (P = $l(O, M, {
                    eol: S !== C && r,
                    baseSize: m,
                    lineHeight: f ? null : h,
                    includeAnnotationIndices: l,
                  })).lineHeight;
                T && f && 0 !== S && (v = T),
                  0 === S && (b = 0.8 * P.maxFontSize);
              } else r && S !== C && (A += r), (O.textContent = A);
            else {
              (O.textContent = '-'), (E += ' v-empty-line');
              var N = O.style;
              (N.fillOpacity = 0), (N.strokeOpacity = 0), u && (P = {});
            }
            P && x.push(P),
              S > 0 && O.setAttribute('dy', v),
              (S > 0 || i) && O.setAttribute('x', s),
              (O.className.baseVal = E),
              p.appendChild(O),
              (k += A.length + 1);
          }
          if (a)
            if (u) v = Zl(o, x, m, h);
            else if ('top' === o) v = '0.8em';
            else {
              var j;
              switch (
                (C > 0
                  ? ((j = parseFloat(h) || 1), (j *= C), Ql.test(h) || (j /= m))
                  : (j = 0),
                o)
              ) {
                case 'middle':
                  v = ''.concat(0.3 - j / 2, 'em');
                  break;
                case 'bottom':
                  v = ''.concat(-j - 0.3, 'em');
              }
            }
          else
            0 === o
              ? (v = '0em')
              : o
              ? (v = o)
              : ((v = 0),
                null == e.getAttribute('y') &&
                  e.setAttribute('y', ''.concat(b || '0.8em')));
          var L = p.firstChild;
          L.setAttribute('dy', v), e.appendChild(p);
        }
        function tu(e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (!e) return { width: 0 };
          var n = [],
            r = t['font-size']
              ? ''.concat(parseFloat(t['font-size']), 'px')
              : '14px';
          return (
            n.push(t['font-style'] || 'normal'),
            n.push(t['font-variant'] || 'normal'),
            n.push(t['font-weight'] || 400),
            n.push(r),
            n.push(t['font-family'] || 'sans-serif'),
            (Yl.font = n.join(' ')),
            Yl.measureText(e)
          );
        }
        function nu(e, t, n) {
          var r =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
          if (t >= n) return [e, ''];
          var i = e.length,
            o = {},
            a = Math.round((t / n) * i - 1);
          for (a < 0 && (a = 0); a >= 0 && a < i; ) {
            var s = e.slice(0, a),
              l = o[s] || tu(s, r).width,
              u = e.slice(0, a + 1),
              c = o[u] || tu(u, r).width;
            if (((o[s] = l), (o[u] = c), l > t)) a -= 1;
            else {
              if (!(c <= t)) break;
              a += 1;
            }
          }
          return [e.slice(0, a), e.slice(a)];
        }
        var ru = 0.551784;
        function iu(e, t) {
          var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : NaN,
            r = e.getAttribute(t);
          if (null == r) return n;
          var i = parseFloat(r);
          return Number.isNaN(i) ? n : i;
        }
        function ou(e) {
          for (
            var t,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              r = e.getTotalLength(),
              i = [],
              o = 0;
            o < r;

          )
            (t = e.getPointAtLength(o)),
              i.push({ distance: o, x: t.x, y: t.y }),
              (o += n);
          return i;
        }
        function au(e) {
          var t = e.map(function (e) {
            return ''.concat(e.x, ' ').concat(e.y);
          });
          return 'M '.concat(t.join(' L'));
        }
        function su(e) {
          var t = [],
            n = e.points;
          if (n)
            for (var r = 0, i = n.numberOfItems; r < i; r += 1)
              t.push(n.getItem(r));
          return t;
        }
        function lu(e) {
          var t = e.x,
            n = e.y,
            r = e.width,
            i = e.height,
            o = Math.min(e.rx || e['top-rx'] || 0, r / 2),
            a = Math.min(e.rx || e['bottom-rx'] || 0, r / 2),
            s = Math.min(e.ry || e['top-ry'] || 0, i / 2),
            l = Math.min(e.ry || e['bottom-ry'] || 0, i / 2);
          return (
            o || a || s || l
              ? [
                  'M',
                  t,
                  n + s,
                  'v',
                  i - s - l,
                  'a',
                  a,
                  l,
                  0,
                  0,
                  0,
                  a,
                  l,
                  'h',
                  r - 2 * a,
                  'a',
                  a,
                  l,
                  0,
                  0,
                  0,
                  a,
                  -l,
                  'v',
                  -(i - l - s),
                  'a',
                  o,
                  s,
                  0,
                  0,
                  0,
                  -o,
                  -s,
                  'h',
                  -(r - 2 * o),
                  'a',
                  o,
                  s,
                  0,
                  0,
                  0,
                  -o,
                  s,
                  'Z',
                ]
              : ['M', t, n, 'H', t + r, 'V', n + i, 'H', t, 'V', n, 'Z']
          ).join(' ');
        }
        function uu(e) {
          var t,
            n = e.tagName.toLowerCase();
          switch (n) {
            case 'path':
              return e.getAttribute('d');
            case 'line':
              return (function (e) {
                return [
                  'M',
                  iu(e, 'x1'),
                  iu(e, 'y1'),
                  'L',
                  iu(e, 'x2'),
                  iu(e, 'y2'),
                ].join(' ');
              })(e);
            case 'polygon':
              return 0 === (t = su(e)).length ? null : ''.concat(au(t), ' Z');
            case 'polyline':
              return (function (e) {
                var t = su(e);
                return 0 === t.length ? null : au(t);
              })(e);
            case 'ellipse':
              return (function (e) {
                var t = iu(e, 'cx', 0),
                  n = iu(e, 'cy', 0),
                  r = iu(e, 'rx'),
                  i = iu(e, 'ry') || r,
                  o = r * ru,
                  a = i * ru;
                return [
                  'M',
                  t,
                  n - i,
                  'C',
                  t + o,
                  n - i,
                  t + r,
                  n - a,
                  t + r,
                  n,
                  'C',
                  t + r,
                  n + a,
                  t + o,
                  n + i,
                  t,
                  n + i,
                  'C',
                  t - o,
                  n + i,
                  t - r,
                  n + a,
                  t - r,
                  n,
                  'C',
                  t - r,
                  n - a,
                  t - o,
                  n - i,
                  t,
                  n - i,
                  'Z',
                ].join(' ');
              })(e);
            case 'circle':
              return (function (e) {
                var t = iu(e, 'cx', 0),
                  n = iu(e, 'cy', 0),
                  r = iu(e, 'r'),
                  i = r * ru;
                return [
                  'M',
                  t,
                  n - r,
                  'C',
                  t + i,
                  n - r,
                  t + r,
                  n - i,
                  t + r,
                  n,
                  'C',
                  t + r,
                  n + i,
                  t + i,
                  n + r,
                  t,
                  n + r,
                  'C',
                  t - i,
                  n + r,
                  t - r,
                  n + i,
                  t - r,
                  n,
                  'C',
                  t - r,
                  n - i,
                  t - i,
                  n - r,
                  t,
                  n - r,
                  'Z',
                ].join(' ');
              })(e);
            case 'rect':
              return (function (e) {
                return lu({
                  x: iu(e, 'x', 0),
                  y: iu(e, 'y', 0),
                  width: iu(e, 'width', 0),
                  height: iu(e, 'height', 0),
                  rx: iu(e, 'rx', 0),
                  ry: iu(e, 'ry', 0),
                });
              })(e);
          }
          throw new Error(
            '"'.concat(n, '" cannot be converted to svg path element.')
          );
        }
        var cu,
          fu,
          hu,
          du = sl('svg'),
          gu = /(\w+)\(([^,)]+),?([^)]+)?\)/gi,
          pu = /[ ,]+/,
          vu = /^(\w+)\((.*)\)/;
        function yu(e, t) {
          var n = du.createSVGPoint();
          return (n.x = e), (n.y = t), n;
        }
        function mu(e) {
          var t = du.createSVGMatrix();
          if (null != e) {
            var n = e,
              r = t;
            for (var i in n) r[i] = n[i];
          }
          return t;
        }
        function bu(e) {
          return null != e
            ? (e instanceof DOMMatrix || (e = mu(e)),
              du.createSVGTransformFromMatrix(e))
            : du.createSVGTransform();
        }
        function ku(e) {
          var t = mu(),
            n = null != e && e.match(gu);
          if (!n) return t;
          for (var r = 0, i = n.length; r < i; r += 1) {
            var o = n[r].match(vu);
            if (o) {
              var a = void 0,
                s = void 0,
                l = void 0,
                u = void 0,
                c = void 0,
                f = mu(),
                h = o[2].split(pu);
              switch (o[1].toLowerCase()) {
                case 'scale':
                  (a = parseFloat(h[0])),
                    (s = void 0 === h[1] ? a : parseFloat(h[1])),
                    (f = f.scaleNonUniform(a, s));
                  break;
                case 'translate':
                  (l = parseFloat(h[0])),
                    (u = parseFloat(h[1])),
                    (f = f.translate(l, u));
                  break;
                case 'rotate':
                  (c = parseFloat(h[0])),
                    (l = parseFloat(h[1]) || 0),
                    (u = parseFloat(h[2]) || 0),
                    (f =
                      0 !== l || 0 !== u
                        ? f.translate(l, u).rotate(c).translate(-l, -u)
                        : f.rotate(c));
                  break;
                case 'skewx':
                  (c = parseFloat(h[0])), (f = f.skewX(c));
                  break;
                case 'skewy':
                  (c = parseFloat(h[0])), (f = f.skewY(c));
                  break;
                case 'matrix':
                  (f.a = parseFloat(h[0])),
                    (f.b = parseFloat(h[1])),
                    (f.c = parseFloat(h[2])),
                    (f.d = parseFloat(h[3])),
                    (f.e = parseFloat(h[4])),
                    (f.f = parseFloat(h[5]));
                  break;
                default:
                  continue;
              }
              t = t.multiply(f);
            }
          }
          return t;
        }
        function wu(e) {
          var t = e || {},
            n = null != t.a ? t.a : 1,
            r = null != t.b ? t.b : 0,
            i = null != t.c ? t.c : 0,
            o = null != t.d ? t.d : 1,
            a = null != t.e ? t.e : 0,
            s = null != t.f ? t.f : 0;
          return 'matrix('
            .concat(n, ',')
            .concat(r, ',')
            .concat(i, ',')
            .concat(o, ',')
            .concat(a, ',')
            .concat(s, ')');
        }
        function xu(e) {
          var t, n, r;
          if (e) {
            var i = pu;
            if (e.trim().indexOf('matrix') >= 0) {
              var o = (function (e) {
                var t = Cu(e, { x: 0, y: 1 }),
                  n = Cu(e, { x: 1, y: 0 }),
                  r = (180 / Math.PI) * Math.atan2(t.y, t.x) - 90,
                  i = (180 / Math.PI) * Math.atan2(n.y, n.x);
                return {
                  skewX: r,
                  skewY: i,
                  translateX: e.e,
                  translateY: e.f,
                  scaleX: Math.sqrt(e.a * e.a + e.b * e.b),
                  scaleY: Math.sqrt(e.c * e.c + e.d * e.d),
                  rotation: r,
                };
              })(ku(e));
              (t = [o.translateX, o.translateY]),
                (n = [o.rotation]),
                (r = [o.scaleX, o.scaleY]);
              var a = [];
              (0 === t[0] && 0 === t[1]) ||
                a.push('translate('.concat(t.join(','), ')')),
                (1 === r[0] && 1 === r[1]) ||
                  a.push('scale('.concat(r.join(','), ')')),
                0 !== n[0] && a.push('rotate('.concat(n[0], ')')),
                (e = a.join(' '));
            } else {
              var s = e.match(/translate\((.*?)\)/);
              s && (t = s[1].split(i));
              var l = e.match(/rotate\((.*?)\)/);
              l && (n = l[1].split(i));
              var u = e.match(/scale\((.*?)\)/);
              u && (r = u[1].split(i));
            }
          }
          var c = r && r[0] ? parseFloat(r[0]) : 1;
          return {
            raw: e || '',
            translation: {
              tx: t && t[0] ? parseInt(t[0], 10) : 0,
              ty: t && t[1] ? parseInt(t[1], 10) : 0,
            },
            rotation: {
              angle: n && n[0] ? parseInt(n[0], 10) : 0,
              cx: n && n[1] ? parseInt(n[1], 10) : void 0,
              cy: n && n[2] ? parseInt(n[2], 10) : void 0,
            },
            scale: { sx: c, sy: r && r[1] ? parseFloat(r[1]) : c },
          };
        }
        function Cu(e, t) {
          return { x: t.x * e.a + t.y * e.c + 0, y: t.x * e.b + t.y * e.d + 0 };
        }
        function Su(e, t) {
          var n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          if (null == t) return ku(Cl(e, 'transform'));
          if (n.absolute) e.setAttribute('transform', wu(t));
          else {
            var r = e.transform,
              i = bu(t);
            r.baseVal.appendItem(i);
          }
        }
        function Eu(e, t) {
          var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0,
            r =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {},
            i = Cl(e, 'transform'),
            o = xu(i);
          if (null == t) return o.translation;
          i = (i = o.raw).replace(/translate\([^)]*\)/g, '').trim();
          var a = r.absolute ? t : o.translation.tx + t,
            s = r.absolute ? n : o.translation.ty + n,
            l = 'translate('.concat(a, ',').concat(s, ')');
          e.setAttribute('transform', ''.concat(l, ' ').concat(i).trim());
        }
        function Ou(e, t, n, r) {
          var i =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : {},
            o = Cl(e, 'transform'),
            a = xu(o);
          if (null == t) return a.rotation;
          (o = (o = a.raw).replace(/rotate\([^)]*\)/g, '').trim()), (t %= 360);
          var s = i.absolute ? t : a.rotation.angle + t,
            l = null != n && null != r ? ','.concat(n, ',').concat(r) : '',
            u = 'rotate('.concat(s).concat(l, ')');
          e.setAttribute('transform', ''.concat(o, ' ').concat(u).trim());
        }
        function Pu(e, t, n) {
          var r = Cl(e, 'transform'),
            i = xu(r);
          if (null == t) return i.scale;
          (n = null == n ? t : n),
            (r = (r = i.raw).replace(/scale\([^)]*\)/g, '').trim());
          var o = 'scale('.concat(t, ',').concat(n, ')');
          e.setAttribute('transform', ''.concat(r, ' ').concat(o).trim());
        }
        function Au(e, t) {
          if (rl(t) && rl(e)) {
            var n = t.getScreenCTM(),
              r = e.getScreenCTM();
            if (n && r) return n.inverse().multiply(r);
          }
          return mu();
        }
        !(function (e) {
          var t = {};
          (e.get = function (e) {
            return t[e] || {};
          }),
            (e.register = function (e, n) {
              t[e] = n;
            }),
            (e.unregister = function (e) {
              delete t[e];
            });
        })(cu || (cu = {})),
          (function (e) {
            var t = new WeakMap();
            (e.ensure = function (e) {
              return (
                t.has(e) || t.set(e, { events: Object.create(null) }), t.get(e)
              );
            }),
              (e.get = function (e) {
                return t.get(e);
              }),
              (e.remove = function (e) {
                return t.delete(e);
              });
          })(fu || (fu = {})),
          (function (e) {
            (e.returnTrue = function () {
              return !0;
            }),
              (e.returnFalse = function () {
                return !1;
              }),
              (e.stopPropagationCallback = function (e) {
                e.stopPropagation();
              }),
              (e.addEventListener = function (e, t, n) {
                null != e.addEventListener && e.addEventListener(t, n);
              }),
              (e.removeEventListener = function (e, t, n) {
                null != e.removeEventListener && e.removeEventListener(t, n);
              });
          })(hu || (hu = {})),
          (function (e) {
            var t = /[^\x20\t\r\n\f]+/g,
              n = /^([^.]*)(?:\.(.+)|)/;
            (e.splitType = function (e) {
              return (e || '').match(t) || [''];
            }),
              (e.normalizeType = function (e) {
                var t = n.exec(e) || [];
                return {
                  originType: t[1] ? t[1].trim() : t[1],
                  namespaces: t[2]
                    ? t[2]
                        .split('.')
                        .map(function (e) {
                          return e.trim();
                        })
                        .sort()
                    : [],
                };
              }),
              (e.isValidTarget = function (e) {
                return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType;
              }),
              (e.isValidSelector = function (e, t) {
                if (t) {
                  var n = e;
                  return null != n.querySelector && null != n.querySelector(t);
                }
                return !0;
              });
          })(hu || (hu = {})),
          (function (e) {
            var t = 0,
              n = new WeakMap();
            (e.ensureHandlerId = function (e) {
              return n.has(e) || (n.set(e, t), (t += 1)), n.get(e);
            }),
              (e.getHandlerId = function (e) {
                return n.get(e);
              }),
              (e.removeHandlerId = function (e) {
                return n.delete(e);
              }),
              (e.setHandlerId = function (e, t) {
                return n.set(e, t);
              });
          })(hu || (hu = {})),
          (function (e) {
            e.getHandlerQueue = function (e, t) {
              var n = [],
                r = fu.get(e),
                i = r && r.events && r.events[t.type],
                o = (i && i.handlers) || [],
                a = i ? i.delegateCount : 0;
              if (
                a > 0 &&
                !(
                  'click' === t.type &&
                  'number' == typeof t.button &&
                  t.button >= 1
                )
              )
                for (var s = t.target; s !== e; s = s.parentNode || e)
                  if (
                    1 === s.nodeType &&
                    ('click' !== t.type || !0 !== s.disabled)
                  ) {
                    for (
                      var l = [],
                        u = {},
                        c = function () {
                          var t = o[f],
                            n = t.selector;
                          if (null != n && null == u[n]) {
                            var r = [];
                            e.querySelectorAll(n).forEach(function (e) {
                              r.push(e);
                            }),
                              (u[n] = r.includes(s));
                          }
                          u[n] && l.push(t);
                        },
                        f = 0;
                      f < a;
                      f += 1
                    )
                      c();
                    l.length && n.push({ elem: s, handlers: l });
                  }
              return (
                a < o.length && n.push({ elem: e, handlers: o.slice(a) }), n
              );
            };
          })(hu || (hu = {})),
          (function (e) {
            e.isWindow = function (e) {
              return null != e && e === e.window;
            };
          })(hu || (hu = {})),
          (function (e) {
            e.contains = function (e, t) {
              var n = 9 === e.nodeType ? e.documentElement : e,
                r = t && t.parentNode;
              return (
                e === r ||
                !(
                  !r ||
                  1 !== r.nodeType ||
                  !(n.contains
                    ? n.contains(r)
                    : e.compareDocumentPosition &&
                      16 & e.compareDocumentPosition(r))
                )
              );
            };
          })(hu || (hu = {}));
        var Mu,
          Tu = (function () {
            function e(t, n) {
              y()(this, e),
                (this.isDefaultPrevented = hu.returnFalse),
                (this.isPropagationStopped = hu.returnFalse),
                (this.isImmediatePropagationStopped = hu.returnFalse),
                (this.isSimulated = !1),
                'string' == typeof t
                  ? (this.type = t)
                  : t.type &&
                    ((this.originalEvent = t),
                    (this.type = t.type),
                    (this.isDefaultPrevented = t.defaultPrevented
                      ? hu.returnTrue
                      : hu.returnFalse),
                    (this.target = t.target),
                    (this.currentTarget = t.currentTarget),
                    (this.relatedTarget = t.relatedTarget),
                    (this.timeStamp = t.timeStamp)),
                n && Object.assign(this, n),
                this.timeStamp || (this.timeStamp = Date.now());
            }
            return (
              b()(e, [
                {
                  key: 'preventDefault',
                  value: function () {
                    var e = this.originalEvent;
                    (this.isDefaultPrevented = hu.returnTrue),
                      e && !this.isSimulated && e.preventDefault();
                  },
                },
                {
                  key: 'stopPropagation',
                  value: function () {
                    var e = this.originalEvent;
                    (this.isPropagationStopped = hu.returnTrue),
                      e && !this.isSimulated && e.stopPropagation();
                  },
                },
                {
                  key: 'stopImmediatePropagation',
                  value: function () {
                    var e = this.originalEvent;
                    (this.isImmediatePropagationStopped = hu.returnTrue),
                      e && !this.isSimulated && e.stopImmediatePropagation(),
                      this.stopPropagation();
                  },
                },
              ]),
              e
            );
          })();
        !(function (e) {
          e.create = function (t) {
            return t instanceof e ? t : new e(t);
          };
        })(Tu || (Tu = {})),
          (function (e) {
            e.addProperty = function (t, n) {
              Object.defineProperty(e.prototype, t, {
                enumerable: !0,
                configurable: !0,
                get:
                  'function' == typeof n
                    ? function () {
                        if (this.originalEvent) return n(this.originalEvent);
                      }
                    : function () {
                        if (this.originalEvent) return this.originalEvent[t];
                      },
                set: function (e) {
                  Object.defineProperty(this, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: e,
                  });
                },
              });
            };
          })(Tu || (Tu = {})),
          (function (e) {
            var t = {
              bubbles: !0,
              cancelable: !0,
              eventPhase: !0,
              detail: !0,
              view: !0,
              button: !0,
              buttons: !0,
              clientX: !0,
              clientY: !0,
              offsetX: !0,
              offsetY: !0,
              pageX: !0,
              pageY: !0,
              screenX: !0,
              screenY: !0,
              toElement: !0,
              pointerId: !0,
              pointerType: !0,
              char: !0,
              code: !0,
              charCode: !0,
              key: !0,
              keyCode: !0,
              touches: !0,
              changedTouches: !0,
              targetTouches: !0,
              which: !0,
              altKey: !0,
              ctrlKey: !0,
              metaKey: !0,
              shiftKey: !0,
            };
            Object.keys(t).forEach(function (n) {
              return e.addProperty(n, t[n]);
            });
          })(Tu || (Tu = {})),
          Mu || (Mu = {}),
          cu.register('load', { noBubble: !0 }),
          Mu || (Mu = {}),
          cu.register('beforeunload', {
            postDispatch: function (e, t) {
              void 0 !== t.result &&
                t.originalEvent &&
                (t.originalEvent.returnValue = t.result);
            },
          }),
          Mu || (Mu = {}),
          cu.register('mouseenter', {
            delegateType: 'mouseover',
            bindType: 'mouseover',
            handle: function (e, t) {
              var n,
                r = t.relatedTarget,
                i = t.handleObj;
              return (
                (r && (r === e || hu.contains(e, r))) ||
                  ((t.type = i.originType),
                  (n = i.handler.call(e, t)),
                  (t.type = 'mouseover')),
                n
              );
            },
          }),
          cu.register('mouseleave', {
            delegateType: 'mouseout',
            bindType: 'mouseout',
            handle: function (e, t) {
              var n,
                r = t.relatedTarget,
                i = t.handleObj;
              return (
                (r && (r === e || hu.contains(e, r))) ||
                  ((t.type = i.originType),
                  (n = i.handler.call(e, t)),
                  (t.type = 'mouseout')),
                n
              );
            },
          });
        var Nu,
          ju,
          Lu,
          Ru = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          };
        !(function (e) {
          var t;
          function n(e, t) {
            var n = Tu.create(t);
            n.delegateTarget = e;
            var r = cu.get(n.type);
            if (!r.preDispatch || !1 !== r.preDispatch(e, n)) {
              for (
                var i = hu.getHandlerQueue(e, n),
                  o = arguments.length,
                  a = new Array(o > 2 ? o - 2 : 0),
                  s = 2;
                s < o;
                s++
              )
                a[s - 2] = arguments[s];
              for (
                var l = 0, u = i.length;
                l < u && !n.isPropagationStopped();
                l += 1
              ) {
                var c = i[l];
                n.currentTarget = c.elem;
                for (
                  var f = 0, h = c.handlers.length;
                  f < h && !n.isImmediatePropagationStopped();
                  f += 1
                ) {
                  var d = c.handlers[f];
                  if (
                    null == n.rnamespace ||
                    (d.namespace && n.rnamespace.test(d.namespace))
                  ) {
                    var g;
                    (n.handleObj = d), (n.data = d.data);
                    var p = cu.get(d.originType).handle,
                      v = p
                        ? p.apply(void 0, [c.elem, n].concat(a))
                        : (g = d.handler).call.apply(g, [c.elem, n].concat(a));
                    void 0 !== v &&
                      ((n.result = v),
                      !1 === v && (n.preventDefault(), n.stopPropagation()));
                  }
                }
              }
              return r.postDispatch && r.postDispatch(e, n), n.result;
            }
          }
          (e.on = function (e, r, i, o, a) {
            if (hu.isValidTarget(e)) {
              var s;
              if ('function' != typeof i) {
                var l = i,
                  u = l.handler,
                  c = l.selector,
                  f = Ru(i, ['handler', 'selector']);
                (i = u), (a = c), (s = f);
              }
              var h = fu.ensure(e),
                d = h.handler;
              null == d &&
                (d = h.handler =
                  function (r) {
                    for (
                      var i = arguments.length,
                        o = new Array(i > 1 ? i - 1 : 0),
                        a = 1;
                      a < i;
                      a++
                    )
                      o[a - 1] = arguments[a];
                    return t !== r.type
                      ? n.apply(void 0, [e, r].concat(o))
                      : void 0;
                  });
              var g = hu.ensureHandlerId(i);
              hu.splitType(r).forEach(function (t) {
                var n = hu.normalizeType(t),
                  r = n.originType,
                  l = n.namespaces;
                if (r) {
                  var u = r,
                    c = cu.get(u);
                  (u = (a ? c.delegateType : c.bindType) || u), (c = cu.get(u));
                  var f = Object.assign(
                      {
                        type: u,
                        originType: r,
                        data: o,
                        selector: a,
                        guid: g,
                        handler: i,
                        namespace: l.join('.'),
                      },
                      s
                    ),
                    p = h.events,
                    v = p[u];
                  v ||
                    ((v = p[u] = { handlers: [], delegateCount: 0 }),
                    (c.setup && !1 !== c.setup(e, o, l, d)) ||
                      hu.addEventListener(e, u, d)),
                    c.add &&
                      (hu.removeHandlerId(f.handler),
                      c.add(e, f),
                      hu.setHandlerId(f.handler, g)),
                    a
                      ? (v.handlers.splice(v.delegateCount, 0, f),
                        (v.delegateCount += 1))
                      : v.handlers.push(f);
                }
              });
            }
          }),
            (e.off = function e(t, n, r, i, o) {
              var a = fu.get(t);
              if (a) {
                var s = a.events;
                s &&
                  (hu.splitType(n).forEach(function (n) {
                    var l = hu.normalizeType(n),
                      u = l.originType,
                      c = l.namespaces;
                    if (u) {
                      var f = u,
                        h = cu.get(f);
                      f = (i ? h.delegateType : h.bindType) || f;
                      for (
                        var d = s[f] || {},
                          g =
                            c.length > 0
                              ? new RegExp(
                                  '(^|\\.)'.concat(
                                    c.join('\\.(?:.*\\.|)'),
                                    '(\\.|$)'
                                  )
                                )
                              : null,
                          p = d.handlers.length,
                          v = d.handlers.length - 1;
                        v >= 0;
                        v -= 1
                      ) {
                        var y = d.handlers[v];
                        (!o && u !== y.originType) ||
                          (r && hu.getHandlerId(r) !== y.guid) ||
                          !(
                            null == g ||
                            (y.namespace && g.test(y.namespace))
                          ) ||
                          !(
                            null == i ||
                            i === y.selector ||
                            ('**' === i && y.selector)
                          ) ||
                          (d.handlers.splice(v, 1),
                          y.selector && (d.delegateCount -= 1),
                          h.remove && h.remove(t, y));
                      }
                      p &&
                        0 === d.handlers.length &&
                        ((h.teardown && !1 !== h.teardown(t, c, a.handler)) ||
                          hu.removeEventListener(t, f, a.handler),
                        delete s[f]);
                    } else
                      Object.keys(s).forEach(function (o) {
                        e(t, o + n, r, i, !0);
                      });
                  }),
                  0 === Object.keys(s).length && fu.remove(t));
              }
            }),
            (e.dispatch = n),
            (e.trigger = function (e, n, r, i) {
              var o = e,
                a = 'string' == typeof e ? e : e.type,
                s =
                  'string' == typeof e || null == o.namespace
                    ? []
                    : o.namespace.split('.'),
                l = r;
              if (3 !== l.nodeType && 8 !== l.nodeType) {
                a.indexOf('.') > -1 &&
                  ((s = a.split('.')), (a = s.shift()), s.sort());
                var u = a.indexOf(':') < 0 && 'on'.concat(a);
                ((o =
                  e instanceof Tu
                    ? e
                    : new Tu(a, 'object' === _()(e) ? e : null)).namespace =
                  s.join('.')),
                  (o.rnamespace = o.namespace
                    ? new RegExp(
                        '(^|\\.)'.concat(s.join('\\.(?:.*\\.|)'), '(\\.|$)')
                      )
                    : null),
                  (o.result = void 0),
                  o.target || (o.target = l);
                var c = [o];
                Array.isArray(n) ? c.push.apply(c, L()(n)) : c.push(n);
                var f = cu.get(a);
                if (i || !f.trigger || !1 !== f.trigger(l, o, n)) {
                  var h,
                    d = [l];
                  if (!i && !f.noBubble && !hu.isWindow(l)) {
                    h = f.delegateType || a;
                    for (var g = l, p = l.parentNode; null != p; )
                      d.push(p), (g = p), (p = p.parentNode);
                    if (g === (l.ownerDocument || document)) {
                      var v = g.defaultView || g.parentWindow || window;
                      d.push(v);
                    }
                  }
                  for (
                    var y = l, m = 0, b = d.length;
                    m < b && !o.isPropagationStopped();
                    m += 1
                  ) {
                    var k = d[m];
                    (y = k), (o.type = m > 1 ? h : f.bindType || a);
                    var w,
                      x = fu.get(k);
                    if (x)
                      if (x.events[o.type] && x.handler)
                        (w = x.handler).call.apply(w, [k].concat(c));
                    var C = (u && k[u]) || null;
                    C &&
                      hu.isValidTarget(k) &&
                      ((o.result = C.call.apply(C, [k].concat(c))),
                      !1 === o.result && o.preventDefault());
                  }
                  if (((o.type = a), !i && !o.isDefaultPrevented())) {
                    var S = f.preventDefault;
                    if (
                      (null == S || !1 === S(d.pop(), o, n)) &&
                      hu.isValidTarget(l) &&
                      u &&
                      'function' == typeof l[a] &&
                      !hu.isWindow(l)
                    ) {
                      var E = l[u];
                      E && (l[u] = null),
                        (t = a),
                        o.isPropagationStopped() &&
                          y.addEventListener(a, hu.stopPropagationCallback),
                        l[a](),
                        o.isPropagationStopped() &&
                          y.removeEventListener(a, hu.stopPropagationCallback),
                        (t = void 0),
                        E && (l[u] = E);
                    }
                  }
                  return o.result;
                }
              }
            });
        })(Nu || (Nu = {})),
          (function (e) {
            (e.on = function (e, t, n, r, i) {
              return Lu.on(e, t, n, r, i), e;
            }),
              (e.once = function (e, t, n, r, i) {
                return Lu.on(e, t, n, r, i, !0), e;
              }),
              (e.off = function (e, t, n, r) {
                return Lu.off(e, t, n, r), e;
              }),
              (e.trigger = function (e, t, n, r) {
                return Nu.trigger(t, n, e, r), e;
              });
          })(ju || (ju = {})),
          (function (e) {
            (e.on = function t(n, r, i, o, a, s) {
              if ('object' === _()(r))
                return (
                  'string' != typeof i && ((o = o || i), (i = void 0)),
                  void Object.keys(r).forEach(function (e) {
                    return t(n, e, i, o, r[e], s);
                  })
                );
              if (
                (null == o && null == a
                  ? ((a = i), (o = i = void 0))
                  : null == a &&
                    ('string' == typeof i
                      ? ((a = o), (o = void 0))
                      : ((a = o), (o = i), (i = void 0))),
                !1 === a)
              )
                a = hu.returnFalse;
              else if (!a) return;
              if (s) {
                var l = a;
                (a = function (t) {
                  e.off(n, t);
                  for (
                    var r = arguments.length,
                      i = new Array(r > 1 ? r - 1 : 0),
                      o = 1;
                    o < r;
                    o++
                  )
                    i[o - 1] = arguments[o];
                  return l.call.apply(l, [this, t].concat(i));
                }),
                  hu.setHandlerId(a, hu.ensureHandlerId(l));
              }
              Nu.on(n, r, a, o, i);
            }),
              (e.off = function e(t, n, r, i) {
                var o = n;
                if (o && null != o.preventDefault && null != o.handleObj) {
                  var a = o.handleObj;
                  e(
                    o.delegateTarget,
                    a.namespace
                      ? ''.concat(a.originType, '.').concat(a.namespace)
                      : a.originType,
                    a.selector,
                    a.handler
                  );
                } else if ('object' !== _()(n))
                  (!1 !== r && 'function' != typeof r) ||
                    ((i = r), (r = void 0)),
                    !1 === i && (i = hu.returnFalse),
                    Nu.off(t, n, i, r);
                else {
                  var s = n;
                  Object.keys(s).forEach(function (n) {
                    return e(t, n, r, s[n]);
                  });
                }
              });
          })(Lu || (Lu = {}));
        var _u = (function () {
          function e(t, n, r) {
            y()(this, e),
              (this.animationFrameId = 0),
              (this.deltaX = 0),
              (this.deltaY = 0),
              (this.eventName = Ps.isEventSupported('wheel')
                ? 'wheel'
                : 'mousewheel'),
              (this.target = t),
              (this.onWheelCallback = n),
              (this.onWheelGuard = r),
              (this.onWheel = this.onWheel.bind(this)),
              (this.didWheel = this.didWheel.bind(this));
          }
          return (
            b()(e, [
              {
                key: 'enable',
                value: function () {
                  this.target.addEventListener(this.eventName, this.onWheel, {
                    passive: !1,
                  });
                },
              },
              {
                key: 'disable',
                value: function () {
                  this.target.removeEventListener(this.eventName, this.onWheel);
                },
              },
              {
                key: 'onWheel',
                value: function (e) {
                  var t,
                    n = this;
                  (null == this.onWheelGuard || this.onWheelGuard(e)) &&
                    ((this.deltaX += e.deltaX),
                    (this.deltaY += e.deltaY),
                    e.preventDefault(),
                    (0 === this.deltaX && 0 === this.deltaY) ||
                      (e.stopPropagation(), (t = !0)),
                    !0 === t &&
                      0 === this.animationFrameId &&
                      (this.animationFrameId = requestAnimationFrame(
                        function () {
                          n.didWheel(e);
                        }
                      )));
                },
              },
              {
                key: 'didWheel',
                value: function (e) {
                  (this.animationFrameId = 0),
                    this.onWheelCallback(e, this.deltaX, this.deltaY),
                    (this.deltaX = 0),
                    (this.deltaY = 0);
                },
              },
            ]),
            e
          );
        })();
        function Iu(e) {
          var t = this,
            n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 60,
            r = null;
          return function () {
            for (var i = arguments.length, o = new Array(i), a = 0; a < i; a++)
              o[a] = arguments[a];
            r && clearTimeout(r),
              (r = window.setTimeout(function () {
                e.apply(t, o);
              }, n));
          };
        }
        var Du,
          zu =
            'undefined' != typeof ResizeObserver
              ? function (e) {
                  var t = null,
                    n = [],
                    r = Iu(function () {
                      n.forEach(function (t) {
                        t(e);
                      });
                    }),
                    i = function () {
                      t && (t.disconnect(), (n = []), (t = null));
                    };
                  return {
                    element: e,
                    bind: function (i) {
                      var o;
                      t ||
                        ((o = new ResizeObserver(r)).observe(e), r(), (t = o)),
                        -1 === n.indexOf(i) && n.push(i);
                    },
                    destroy: i,
                    unbind: function (e) {
                      var r = n.indexOf(e);
                      -1 !== r && n.splice(r, 1), 0 === n.length && t && i();
                    },
                  };
                }
              : function (e) {
                  var t = null,
                    n = [],
                    r = Iu(function () {
                      n.forEach(function (t) {
                        return t(e);
                      });
                    }),
                    i = function () {
                      t &&
                        t.parentNode &&
                        (t.contentDocument &&
                          t.contentDocument.defaultView.removeEventListener(
                            'resize',
                            r
                          ),
                        t.parentNode.removeChild(t),
                        (t = null),
                        (n = []));
                    };
                  return {
                    element: e,
                    bind: function (i) {
                      t ||
                        (t = (function () {
                          'static' === getComputedStyle(e).position &&
                            (e.style.position = 'relative');
                          var t = document.createElement('object');
                          return (
                            (t.onload = function () {
                              t.contentDocument.defaultView.addEventListener(
                                'resize',
                                r
                              ),
                                r();
                            }),
                            (t.style.display = 'block'),
                            (t.style.position = 'absolute'),
                            (t.style.top = '0'),
                            (t.style.left = '0'),
                            (t.style.height = '100%'),
                            (t.style.width = '100%'),
                            (t.style.overflow = 'hidden'),
                            (t.style.pointerEvents = 'none'),
                            (t.style.zIndex = '-1'),
                            (t.style.opacity = '0'),
                            t.setAttribute('tabindex', '-1'),
                            (t.type = 'text/html'),
                            e.appendChild(t),
                            (t.data = 'about:blank'),
                            t
                          );
                        })()),
                        -1 === n.indexOf(i) && n.push(i);
                    },
                    destroy: i,
                    unbind: function (e) {
                      var r = n.indexOf(e);
                      -1 !== r && n.splice(r, 1), 0 === n.length && t && i();
                    },
                  };
                };
        !(function (e) {
          var t = new WeakMap();
          function n(e) {
            var n = t.get(e);
            return n || ((n = zu(e)), t.set(e, n), n);
          }
          (e.bind = function (e, t) {
            var r = n(e);
            return (
              r.bind(t),
              function () {
                return r.unbind(t);
              }
            );
          }),
            (e.clear = function (e) {
              !(function (e) {
                e.destroy(), t.delete(e.element);
              })(n(e));
            });
        })(Du || (Du = {}));
        var Bu,
          Vu = (function () {
            function e() {
              var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
              y()(this, e),
                (this.comparator = t.comparator || e.defaultComparator),
                (this.index = {}),
                (this.data = t.data || []),
                this.heapify();
            }
            return (
              b()(e, [
                {
                  key: 'isEmpty',
                  value: function () {
                    return 0 === this.data.length;
                  },
                },
                {
                  key: 'insert',
                  value: function (e, t, n) {
                    var r = { priority: e, value: t },
                      i = this.data.length;
                    return (
                      n && ((r.id = n), (this.index[n] = i)),
                      this.data.push(r),
                      this.bubbleUp(i),
                      this
                    );
                  },
                },
                {
                  key: 'peek',
                  value: function () {
                    return this.data[0] ? this.data[0].value : null;
                  },
                },
                {
                  key: 'peekPriority',
                  value: function () {
                    return this.data[0] ? this.data[0].priority : null;
                  },
                },
                {
                  key: 'updatePriority',
                  value: function (e, t) {
                    var n = this.index[e];
                    if (void 0 === n)
                      throw new Error(
                        "Node with id '".concat(
                          e,
                          "' was not found in the heap."
                        )
                      );
                    var r = this.data,
                      i = r[n].priority,
                      o = this.comparator(t, i);
                    o < 0
                      ? ((r[n].priority = t), this.bubbleUp(n))
                      : o > 0 && ((r[n].priority = t), this.bubbleDown(n));
                  },
                },
                {
                  key: 'remove',
                  value: function () {
                    var e = this.data,
                      t = e[0],
                      n = e.pop();
                    return (
                      t.id && delete this.index[t.id],
                      e.length > 0 &&
                        ((e[0] = n),
                        n.id && (this.index[n.id] = 0),
                        this.bubbleDown(0)),
                      t ? t.value : null
                    );
                  },
                },
                {
                  key: 'heapify',
                  value: function () {
                    for (var e = 0; e < this.data.length; e += 1)
                      this.bubbleUp(e);
                  },
                },
                {
                  key: 'bubbleUp',
                  value: function (e) {
                    for (
                      var t, n, r = this.data, i = e;
                      i > 0 &&
                      ((n = (i - 1) >>> 1),
                      this.comparator(r[i].priority, r[n].priority) < 0);

                    ) {
                      (t = r[n]), (r[n] = r[i]);
                      var o = r[i].id;
                      null != o && (this.index[o] = n),
                        (r[i] = t),
                        null != (o = r[i].id) && (this.index[o] = i),
                        (i = n);
                    }
                  },
                },
                {
                  key: 'bubbleDown',
                  value: function (e) {
                    for (var t = this.data, n = t.length - 1, r = e; ; ) {
                      var i = 1 + (r << 1),
                        o = i + 1,
                        a = r;
                      if (
                        (i <= n &&
                          this.comparator(t[i].priority, t[a].priority) < 0 &&
                          (a = i),
                        o <= n &&
                          this.comparator(t[o].priority, t[a].priority) < 0 &&
                          (a = o),
                        a === r)
                      )
                        break;
                      var s = t[a];
                      t[a] = t[r];
                      var l = t[r].id;
                      null != l && (this.index[l] = a),
                        (t[r] = s),
                        null != (l = t[r].id) && (this.index[l] = r),
                        (r = a);
                    }
                  },
                },
              ]),
              e
            );
          })();
        !(function (e) {
          e.defaultComparator = function (e, t) {
            return e - t;
          };
        })(Vu || (Vu = {})),
          (function (e) {
            e.run = function (e, t) {
              var n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : function (e, t) {
                        return 1;
                      },
                r = {},
                i = {},
                o = {},
                a = new Vu();
              for (
                r[t] = 0,
                  Object.keys(e).forEach(function (e) {
                    e !== t && (r[e] = 1 / 0), a.insert(r[e], e, e);
                  });
                !a.isEmpty();

              ) {
                var s = a.remove();
                o[s] = !0;
                for (var l = e[s] || [], u = 0; u < l.length; u += 1) {
                  var c = l[u];
                  if (!o[c]) {
                    var f = r[s] + n(s, c);
                    f < r[c] &&
                      ((r[c] = f), (i[c] = s), a.updatePriority(c, f));
                  }
                }
              }
              return i;
            };
          })(Bu || (Bu = {}));
        var Fu = (function () {
          function e(t, n, r, i) {
            return (
              y()(this, e),
              null == t
                ? this.set(255, 255, 255, 1)
                : 'number' == typeof t
                ? this.set(t, n, r, i)
                : 'string' == typeof t
                ? e.fromString(t) || this
                : Array.isArray(t)
                ? this.set(t)
                : void this.set(t.r, t.g, t.b, null == t.a ? 1 : t.a)
            );
          }
          return (
            b()(e, [
              {
                key: 'blend',
                value: function (e, t, n) {
                  this.set(
                    e.r + (t.r - e.r) * n,
                    e.g + (t.g - e.g) * n,
                    e.b + (t.b - e.b) * n,
                    e.a + (t.a - e.a) * n
                  );
                },
              },
              {
                key: 'lighten',
                value: function (t) {
                  var n = e.lighten(this.toArray(), t);
                  (this.r = n[0]),
                    (this.g = n[1]),
                    (this.b = n[2]),
                    (this.a = n[3]);
                },
              },
              {
                key: 'darken',
                value: function (e) {
                  this.lighten(-e);
                },
              },
              {
                key: 'set',
                value: function (e, t, n, r) {
                  var i = Array.isArray(e) ? e[0] : e,
                    o = Array.isArray(e) ? e[1] : t,
                    a = Array.isArray(e) ? e[2] : n,
                    s = Array.isArray(e) ? e[3] : r;
                  return (
                    (this.r = Math.round(Cs(i, 0, 255))),
                    (this.g = Math.round(Cs(o, 0, 255))),
                    (this.b = Math.round(Cs(a, 0, 255))),
                    (this.a = null == s ? 1 : Cs(s, 0, 1)),
                    this
                  );
                },
              },
              {
                key: 'toHex',
                value: function () {
                  var e = this,
                    t = ['r', 'g', 'b'].map(function (t) {
                      var n = e[t].toString(16);
                      return n.length < 2 ? '0'.concat(n) : n;
                    });
                  return '#'.concat(t.join(''));
                },
              },
              {
                key: 'toRGBA',
                value: function () {
                  return this.toArray();
                },
              },
              {
                key: 'toHSLA',
                value: function () {
                  return e.rgba2hsla(this.r, this.g, this.b, this.a);
                },
              },
              {
                key: 'toCSS',
                value: function (e) {
                  var t = ''
                    .concat(this.r, ',')
                    .concat(this.g, ',')
                    .concat(this.b, ',');
                  return e
                    ? 'rgb('.concat(t, ')')
                    : 'rgba('.concat(t, ',').concat(this.a, ')');
                },
              },
              {
                key: 'toGrey',
                value: function () {
                  return e.makeGrey(
                    Math.round((this.r + this.g + this.b) / 3),
                    this.a
                  );
                },
              },
              {
                key: 'toArray',
                value: function () {
                  return [this.r, this.g, this.b, this.a];
                },
              },
              {
                key: 'toString',
                value: function () {
                  return this.toCSS();
                },
              },
            ]),
            e
          );
        })();
        !(function (e) {
          function t(t) {
            return new e([].concat(L()(s(t)), [1]));
          }
          function n(t) {
            var n = t.toLowerCase().match(/^rgba?\(([\s.,0-9]+)\)/);
            if (n) {
              var r = n[1].split(/\s*,\s*/).map(function (e) {
                return parseInt(e, 10);
              });
              return new e(r);
            }
            return null;
          }
          function r(e, t, n) {
            n < 0 && ++n, n > 1 && --n;
            var r = 6 * n;
            return r < 1
              ? e + (t - e) * r
              : 2 * n < 1
              ? t
              : 3 * n < 2
              ? e + (t - e) * (2 / 3 - n) * 6
              : e;
          }
          function i(t) {
            var n = t.toLowerCase().match(/^hsla?\(([\s.,0-9]+)\)/);
            if (n) {
              var r = n[2].split(/\s*,\s*/),
                i = (((parseFloat(r[0]) % 360) + 360) % 360) / 360,
                a = parseFloat(r[1]) / 100,
                s = parseFloat(r[2]) / 100,
                l = null == r[3] ? 1 : parseInt(r[3], 10);
              return new e(o(i, a, s, l));
            }
            return null;
          }
          function o(e, t, n, i) {
            var o = Array.isArray(e) ? e[0] : e,
              a = Array.isArray(e) ? e[1] : t,
              s = Array.isArray(e) ? e[2] : n,
              l = Array.isArray(e) ? e[3] : i,
              u = s <= 0.5 ? s * (a + 1) : s + a - s * a,
              c = 2 * s - u;
            return [
              256 * r(c, u, o + 1 / 3),
              256 * r(c, u, o),
              256 * r(c, u, o - 1 / 3),
              null == l ? 1 : l,
            ];
          }
          function a(t) {
            return new e(
              Math.round(256 * Math.random()),
              Math.round(256 * Math.random()),
              Math.round(256 * Math.random()),
              t ? void 0 : parseFloat(Math.random().toFixed(2))
            );
          }
          function s(e) {
            var t = 0 === e.indexOf('#') ? e : '#'.concat(e),
              n = Number('0x'.concat(t.substr(1)));
            if ((4 !== t.length && 7 !== t.length) || Number.isNaN(n))
              throw new Error('Invalid hex color.');
            var r = 4 === t.length ? 4 : 8,
              i = (1 << r) - 1,
              o = ['b', 'g', 'r'].map(function () {
                var e = n & i;
                return (n >>= r), 4 === r ? 17 * e : e;
              });
            return [o[2], o[1], o[0]];
          }
          function l(e, t, n) {
            var r = function (e) {
              return e.length < 2 ? '0'.concat(e) : e;
            };
            return ''
              .concat(r(e.toString(16)))
              .concat(r(t.toString(16)))
              .concat(r(n.toString(16)));
          }
          function u(e, t) {
            if ('string' == typeof e) {
              var n = '#' === e[0],
                r = parseInt(n ? e.substr(1) : e, 16),
                i = Cs((r >> 16) + t, 0, 255),
                o = Cs(((r >> 8) & 255) + t, 0, 255),
                a = Cs((255 & r) + t, 0, 255);
              return ''
                .concat(n ? '#' : '')
                .concat((a | (o << 8) | (i << 16)).toString(16));
            }
            var c = s(u(l(e[0], e[1], e[2]), t));
            return [c[0], c[1], c[2], e[3]];
          }
          (e.fromArray = function (t) {
            return new e(t);
          }),
            (e.fromHex = t),
            (e.fromRGBA = n),
            (e.fromHSLA = i),
            (e.fromString = function (r) {
              if (r.startsWith('#')) return t(r);
              if (r.startsWith('rgb')) return n(r);
              var o = e.named[r];
              return o ? t(o) : i(r);
            }),
            (e.makeGrey = function (t, n) {
              return e.fromArray([t, t, t, n]);
            }),
            (e.rgba2hsla = function (e, t, n, r) {
              var i = Array.isArray(e) ? e[0] : e,
                o = Array.isArray(e) ? e[1] : t,
                a = Array.isArray(e) ? e[2] : n,
                s = Array.isArray(e) ? e[3] : r,
                l = Math.max(i, o, a),
                u = Math.min(i, o, a),
                c = (l + u) / 2,
                f = 0,
                h = 0;
              if (u !== l) {
                var d = l - u;
                switch (((h = c > 0.5 ? d / (2 - l - u) : d / (l + u)), l)) {
                  case i:
                    f = (o - a) / d + (o < a ? 6 : 0);
                    break;
                  case o:
                    f = (a - i) / d + 2;
                    break;
                  case a:
                    f = (i - o) / d + 4;
                }
                f /= 6;
              }
              return [f, h, c, null == s ? 1 : s];
            }),
            (e.hsla2rgba = o),
            (e.random = a),
            (e.randomHex = function () {
              for (var e = '#', t = 0; t < 6; t += 1)
                e += '0123456789ABCDEF'[Math.floor(16 * Math.random())];
              return e;
            }),
            (e.randomRGBA = function (e) {
              return a(e).toString();
            }),
            (e.invert = function (e, t) {
              if ('string' == typeof e) {
                var n = '#' === e[0],
                  r = s(e),
                  i = ql()(r, 3),
                  o = i[0],
                  a = i[1],
                  u = i[2];
                return t
                  ? 0.299 * o + 0.587 * a + 0.114 * u > 186
                    ? '#000000'
                    : '#ffffff'
                  : ''
                      .concat(n ? '#' : '')
                      .concat(l(255 - o, 255 - a, 255 - u));
              }
              var c = e[0],
                f = e[1],
                h = e[2],
                d = e[3];
              return t
                ? 0.299 * c + 0.587 * f + 0.114 * h > 186
                  ? [0, 0, 0, d]
                  : [255, 255, 255, d]
                : [255 - c, 255 - f, 255 - h, d];
            }),
            (e.lighten = function (e, t) {
              return u(e, t);
            }),
            (e.darken = function (e, t) {
              return u(e, -t);
            });
        })(Fu || (Fu = {})),
          (function (e) {
            e.named = {
              aliceblue: '#f0f8ff',
              antiquewhite: '#faebd7',
              aqua: '#00ffff',
              aquamarine: '#7fffd4',
              azure: '#f0ffff',
              beige: '#f5f5dc',
              bisque: '#ffe4c4',
              black: '#000000',
              blanchedalmond: '#ffebcd',
              blue: '#0000ff',
              blueviolet: '#8a2be2',
              brown: '#a52a2a',
              burlywood: '#deb887',
              burntsienna: '#ea7e5d',
              cadetblue: '#5f9ea0',
              chartreuse: '#7fff00',
              chocolate: '#d2691e',
              coral: '#ff7f50',
              cornflowerblue: '#6495ed',
              cornsilk: '#fff8dc',
              crimson: '#dc143c',
              cyan: '#00ffff',
              darkblue: '#00008b',
              darkcyan: '#008b8b',
              darkgoldenrod: '#b8860b',
              darkgray: '#a9a9a9',
              darkgreen: '#006400',
              darkgrey: '#a9a9a9',
              darkkhaki: '#bdb76b',
              darkmagenta: '#8b008b',
              darkolivegreen: '#556b2f',
              darkorange: '#ff8c00',
              darkorchid: '#9932cc',
              darkred: '#8b0000',
              darksalmon: '#e9967a',
              darkseagreen: '#8fbc8f',
              darkslateblue: '#483d8b',
              darkslategray: '#2f4f4f',
              darkslategrey: '#2f4f4f',
              darkturquoise: '#00ced1',
              darkviolet: '#9400d3',
              deeppink: '#ff1493',
              deepskyblue: '#00bfff',
              dimgray: '#696969',
              dimgrey: '#696969',
              dodgerblue: '#1e90ff',
              firebrick: '#b22222',
              floralwhite: '#fffaf0',
              forestgreen: '#228b22',
              fuchsia: '#ff00ff',
              gainsboro: '#dcdcdc',
              ghostwhite: '#f8f8ff',
              gold: '#ffd700',
              goldenrod: '#daa520',
              gray: '#808080',
              green: '#008000',
              greenyellow: '#adff2f',
              grey: '#808080',
              honeydew: '#f0fff0',
              hotpink: '#ff69b4',
              indianred: '#cd5c5c',
              indigo: '#4b0082',
              ivory: '#fffff0',
              khaki: '#f0e68c',
              lavender: '#e6e6fa',
              lavenderblush: '#fff0f5',
              lawngreen: '#7cfc00',
              lemonchiffon: '#fffacd',
              lightblue: '#add8e6',
              lightcoral: '#f08080',
              lightcyan: '#e0ffff',
              lightgoldenrodyellow: '#fafad2',
              lightgray: '#d3d3d3',
              lightgreen: '#90ee90',
              lightgrey: '#d3d3d3',
              lightpink: '#ffb6c1',
              lightsalmon: '#ffa07a',
              lightseagreen: '#20b2aa',
              lightskyblue: '#87cefa',
              lightslategray: '#778899',
              lightslategrey: '#778899',
              lightsteelblue: '#b0c4de',
              lightyellow: '#ffffe0',
              lime: '#00ff00',
              limegreen: '#32cd32',
              linen: '#faf0e6',
              magenta: '#ff00ff',
              maroon: '#800000',
              mediumaquamarine: '#66cdaa',
              mediumblue: '#0000cd',
              mediumorchid: '#ba55d3',
              mediumpurple: '#9370db',
              mediumseagreen: '#3cb371',
              mediumslateblue: '#7b68ee',
              mediumspringgreen: '#00fa9a',
              mediumturquoise: '#48d1cc',
              mediumvioletred: '#c71585',
              midnightblue: '#191970',
              mintcream: '#f5fffa',
              mistyrose: '#ffe4e1',
              moccasin: '#ffe4b5',
              navajowhite: '#ffdead',
              navy: '#000080',
              oldlace: '#fdf5e6',
              olive: '#808000',
              olivedrab: '#6b8e23',
              orange: '#ffa500',
              orangered: '#ff4500',
              orchid: '#da70d6',
              palegoldenrod: '#eee8aa',
              palegreen: '#98fb98',
              paleturquoise: '#afeeee',
              palevioletred: '#db7093',
              papayawhip: '#ffefd5',
              peachpuff: '#ffdab9',
              peru: '#cd853f',
              pink: '#ffc0cb',
              plum: '#dda0dd',
              powderblue: '#b0e0e6',
              purple: '#800080',
              rebeccapurple: '#663399',
              red: '#ff0000',
              rosybrown: '#bc8f8f',
              royalblue: '#4169e1',
              saddlebrown: '#8b4513',
              salmon: '#fa8072',
              sandybrown: '#f4a460',
              seagreen: '#2e8b57',
              seashell: '#fff5ee',
              sienna: '#a0522d',
              silver: '#c0c0c0',
              skyblue: '#87ceeb',
              slateblue: '#6a5acd',
              slategray: '#708090',
              slategrey: '#708090',
              snow: '#fffafa',
              springgreen: '#00ff7f',
              steelblue: '#4682b4',
              tan: '#d2b48c',
              teal: '#008080',
              thistle: '#d8bfd8',
              tomato: '#ff6347',
              turquoise: '#40e0d0',
              violet: '#ee82ee',
              wheat: '#f5deb3',
              white: '#ffffff',
              whitesmoke: '#f5f5f5',
              yellow: '#ffff00',
              yellowgreen: '#9acd32',
            };
          })(Fu || (Fu = {}));
        var Uu,
          Hu,
          Gu,
          Wu = (function () {
            function e() {
              y()(this, e), this.clear();
            }
            return (
              b()(e, [
                {
                  key: 'clear',
                  value: function () {
                    (this.map = new WeakMap()), (this.arr = []);
                  },
                },
                {
                  key: 'has',
                  value: function (e) {
                    return this.map.has(e);
                  },
                },
                {
                  key: 'get',
                  value: function (e) {
                    return this.map.get(e);
                  },
                },
                {
                  key: 'set',
                  value: function (e, t) {
                    this.map.set(e, t), this.arr.push(e);
                  },
                },
                {
                  key: 'delete',
                  value: function (e) {
                    var t = this.arr.indexOf(e);
                    t >= 0 && this.arr.splice(t, 1);
                    var n = this.map.get(e);
                    return this.map.delete(e), n;
                  },
                },
                {
                  key: 'each',
                  value: function (e) {
                    var t = this;
                    this.arr.forEach(function (n) {
                      var r = t.map.get(n);
                      e(r, n);
                    });
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    this.clear();
                  },
                },
              ]),
              e
            );
          })();
        !(function (e) {
          function t(e) {
            var t = [],
              n = [];
            return (
              Array.isArray(e)
                ? t.push.apply(t, L()(e))
                : e.split('|').forEach(function (e) {
                    -1 === e.indexOf('&')
                      ? t.push(e)
                      : n.push.apply(n, L()(e.split('&')));
                  }),
              { or: t, and: n }
            );
          }
          (e.parse = t),
            (e.equals = function (e, n) {
              if (null != e && null != n) {
                var r = t(e),
                  i = t(n),
                  o = r.or.sort(),
                  a = i.or.sort(),
                  s = r.and.sort(),
                  l = i.and.sort(),
                  u = function (e, t) {
                    return (
                      e.length === t.length &&
                      (0 === e.length ||
                        e.every(function (e, n) {
                          return e === t[n];
                        }))
                    );
                  };
                return u(o, a) && u(s, l);
              }
              return null == e && null == n;
            }),
            (e.isMatch = function (e, n, r) {
              if (null == n || (Array.isArray(n) && 0 === n.length))
                return (
                  !r ||
                  (!0 !== e.altKey &&
                    !0 !== e.ctrlKey &&
                    !0 !== e.metaKey &&
                    !0 !== e.shiftKey)
                );
              var i = t(n),
                o = i.or,
                a = i.and,
                s = function (t) {
                  var n = ''.concat(t.toLowerCase(), 'Key');
                  return !0 === e[n];
                };
              return (
                o.some(function (e) {
                  return s(e);
                }) &&
                a.every(function (e) {
                  return s(e);
                })
              );
            });
        })(Uu || (Uu = {})),
          (function (e) {
            (e.linear = function (e) {
              return e;
            }),
              (e.quad = function (e) {
                return e * e;
              }),
              (e.cubic = function (e) {
                return e * e * e;
              }),
              (e.inout = function (e) {
                if (e <= 0) return 0;
                if (e >= 1) return 1;
                var t = e * e,
                  n = t * e;
                return 4 * (e < 0.5 ? n : 3 * (e - t) + n - 0.75);
              }),
              (e.exponential = function (e) {
                return Math.pow(2, 10 * (e - 1));
              }),
              (e.bounce = function (e) {
                for (var t = 0, n = 1; ; t += n, n /= 2)
                  if (e >= (7 - 4 * t) / 11) {
                    var r = (11 - 6 * t - 11 * e) / 4;
                    return -r * r + n * n;
                  }
              });
          })(Hu || (Hu = {})),
          (function (e) {
            e.decorators = {
              reverse: function (e) {
                return function (t) {
                  return 1 - e(1 - t);
                };
              },
              reflect: function (e) {
                return function (t) {
                  return 0.5 * (t < 0.5 ? e(2 * t) : 2 - e(2 - 2 * t));
                };
              },
              clamp: function (e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0,
                  n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 1;
                return function (r) {
                  var i = e(r);
                  return i < t ? t : i > n ? n : i;
                };
              },
              back: function () {
                var e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 1.70158;
                return function (t) {
                  return t * t * ((e + 1) * t - e);
                };
              },
              elastic: function () {
                var e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 1.5;
                return function (t) {
                  return (
                    Math.pow(2, 10 * (t - 1)) *
                    Math.cos(((20 * Math.PI * e) / 3) * t)
                  );
                };
              },
            };
          })(Hu || (Hu = {})),
          (function (e) {
            function t(e) {
              var t = e / 1;
              if (t < 1 / 2.75) return 7.5625 * t * t;
              if (t < 2 / 2.75) {
                var n = t - 1.5 / 2.75;
                return 7.5625 * n * n + 0.75;
              }
              if (t < 2.5 / 2.75) {
                var r = t - 2.25 / 2.75;
                return 7.5625 * r * r + 0.9375;
              }
              var i = t - 2.625 / 2.75;
              return 7.5625 * i * i + 0.984375;
            }
            function n(e) {
              return 1 - t(1 - e);
            }
            (e.easeInSine = function (e) {
              return -1 * Math.cos(e * (Math.PI / 2)) + 1;
            }),
              (e.easeOutSine = function (e) {
                return Math.sin(e * (Math.PI / 2));
              }),
              (e.easeInOutSine = function (e) {
                return -0.5 * (Math.cos(Math.PI * e) - 1);
              }),
              (e.easeInQuad = function (e) {
                return e * e;
              }),
              (e.easeOutQuad = function (e) {
                return e * (2 - e);
              }),
              (e.easeInOutQuad = function (e) {
                return e < 0.5 ? 2 * e * e : (4 - 2 * e) * e - 1;
              }),
              (e.easeInCubic = function (e) {
                return e * e * e;
              }),
              (e.easeOutCubic = function (e) {
                var t = e - 1;
                return t * t * t + 1;
              }),
              (e.easeInOutCubic = function (e) {
                return e < 0.5
                  ? 4 * e * e * e
                  : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1;
              }),
              (e.easeInQuart = function (e) {
                return e * e * e * e;
              }),
              (e.easeOutQuart = function (e) {
                var t = e - 1;
                return 1 - t * t * t * t;
              }),
              (e.easeInOutQuart = function (e) {
                var t = e - 1;
                return e < 0.5 ? 8 * e * e * e * e : 1 - 8 * t * t * t * t;
              }),
              (e.easeInQuint = function (e) {
                return e * e * e * e * e;
              }),
              (e.easeOutQuint = function (e) {
                var t = e - 1;
                return 1 + t * t * t * t * t;
              }),
              (e.easeInOutQuint = function (e) {
                var t = e - 1;
                return e < 0.5
                  ? 16 * e * e * e * e * e
                  : 1 + 16 * t * t * t * t * t;
              }),
              (e.easeInExpo = function (e) {
                return 0 === e ? 0 : Math.pow(2, 10 * (e - 1));
              }),
              (e.easeOutExpo = function (e) {
                return 1 === e ? 1 : 1 - Math.pow(2, -10 * e);
              }),
              (e.easeInOutExpo = function (e) {
                if (0 === e || 1 === e) return e;
                var t = 2 * e,
                  n = t - 1;
                return t < 1
                  ? 0.5 * Math.pow(2, 10 * n)
                  : 0.5 * (2 - Math.pow(2, -10 * n));
              }),
              (e.easeInCirc = function (e) {
                var t = e / 1;
                return -1 * (Math.sqrt(1 - t * e) - 1);
              }),
              (e.easeOutCirc = function (e) {
                var t = e - 1;
                return Math.sqrt(1 - t * t);
              }),
              (e.easeInOutCirc = function (e) {
                var t = 2 * e,
                  n = t - 2;
                return t < 1
                  ? -0.5 * (Math.sqrt(1 - t * t) - 1)
                  : 0.5 * (Math.sqrt(1 - n * n) + 1);
              }),
              (e.easeInBack = function (e) {
                var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 1.70158;
                return e * e * ((t + 1) * e - t);
              }),
              (e.easeOutBack = function (e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 1.70158,
                  n = e / 1 - 1;
                return n * n * ((t + 1) * n + t) + 1;
              }),
              (e.easeInOutBack = function (e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 1.70158,
                  n = 2 * e,
                  r = n - 2,
                  i = 1.525 * t;
                return n < 1
                  ? 0.5 * n * n * ((i + 1) * n - i)
                  : 0.5 * (r * r * ((i + 1) * r + i) + 2);
              }),
              (e.easeInElastic = function (e) {
                var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 0.7;
                if (0 === e || 1 === e) return e;
                var n = e / 1,
                  r = n - 1,
                  i = 1 - t,
                  o = (i / (2 * Math.PI)) * Math.asin(1);
                return (
                  -Math.pow(2, 10 * r) * Math.sin(((r - o) * (2 * Math.PI)) / i)
                );
              }),
              (e.easeOutElastic = function (e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0.7,
                  n = 1 - t,
                  r = 2 * e;
                if (0 === e || 1 === e) return e;
                var i = (n / (2 * Math.PI)) * Math.asin(1);
                return (
                  Math.pow(2, -10 * r) *
                    Math.sin(((r - i) * (2 * Math.PI)) / n) +
                  1
                );
              }),
              (e.easeInOutElastic = function (e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0.65,
                  n = 1 - t;
                if (0 === e || 1 === e) return e;
                var r = 2 * e,
                  i = r - 1,
                  o = (n / (2 * Math.PI)) * Math.asin(1);
                return r < 1
                  ? Math.pow(2, 10 * i) *
                      Math.sin(((i - o) * (2 * Math.PI)) / n) *
                      -0.5
                  : Math.pow(2, -10 * i) *
                      Math.sin(((i - o) * (2 * Math.PI)) / n) *
                      0.5 +
                      1;
              }),
              (e.easeOutBounce = t),
              (e.easeInBounce = n),
              (e.easeInOutBounce = function (e) {
                return e < 0.5 ? 0.5 * n(2 * e) : 0.5 * t(2 * e - 1) + 0.5;
              });
          })(Hu || (Hu = {})),
          (function (e) {
            (e.number = function (e, t) {
              var n = t - e;
              return function (t) {
                return e + n * t;
              };
            }),
              (e.object = function (e, t) {
                var n = Object.keys(e);
                return function (r) {
                  for (var i = {}, o = n.length - 1; -1 !== o; o -= 1) {
                    var a = n[o];
                    i[a] = e[a] + (t[a] - e[a]) * r;
                  }
                  return i;
                };
              }),
              (e.unit = function (e, t) {
                var n = /(-?[0-9]*.[0-9]*)(px|em|cm|mm|in|pt|pc|%)/,
                  r = n.exec(e),
                  i = n.exec(t),
                  o = i ? i[1] : '',
                  a = r ? +r[1] : 0,
                  s = i ? +i[1] : 0,
                  l = o.indexOf('.'),
                  u = l > 0 ? o[1].length - l - 1 : 0,
                  c = s - a,
                  f = r ? r[2] : '';
                return function (e) {
                  return (a + c * e).toFixed(u) + f;
                };
              }),
              (e.color = function (e, t) {
                var n = parseInt(e.slice(1), 16),
                  r = parseInt(t.slice(1), 16),
                  i = 255 & n,
                  o = (255 & r) - i,
                  a = 65280 & n,
                  s = (65280 & r) - a,
                  l = 16711680 & n,
                  u = (16711680 & r) - l;
                return function (e) {
                  return '#'.concat(
                    (
                      (1 << 24) |
                      ((i + o * e) & 255) |
                      ((a + s * e) & 65280) |
                      ((l + u * e) & 16711680)
                    )
                      .toString(16)
                      .slice(1)
                  );
                };
              });
          })(Gu || (Gu = {}));
        var qu = [];
        var Xu,
          Yu,
          Ju = i(343),
          $u = i.n(Ju);
        !(function (e) {
          (e.toDeg = function (e) {
            return ((180 * e) / Math.PI) % 360;
          }),
            (e.toRad = function (e) {
              var t =
                  arguments.length > 1 &&
                  void 0 !== arguments[1] &&
                  arguments[1],
                n = t ? e : e % 360;
              return (n * Math.PI) / 180;
            }),
            (e.normalize = function (e) {
              return (e % 360) + (e < 0 ? 360 : 0);
            });
        })(Xu || (Xu = {})),
          (function (e) {
            (e.round = function (e) {
              var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
              return Number.isInteger(e) ? e : +e.toFixed(t);
            }),
              (e.random = function (e, t) {
                var n, r;
                if (
                  (null == t
                    ? ((r = null == e ? 1 : e), (n = 0))
                    : ((r = t), (n = null == e ? 0 : e)),
                  r < n)
                ) {
                  var i = n;
                  (n = r), (r = i);
                }
                return Math.floor(Math.random() * (r - n + 1) + n);
              }),
              (e.clamp = function (e, t, n) {
                return Number.isNaN(e)
                  ? NaN
                  : Number.isNaN(t) || Number.isNaN(n)
                  ? 0
                  : t < n
                  ? e < t
                    ? t
                    : e > n
                    ? n
                    : e
                  : e < n
                  ? n
                  : e > t
                  ? t
                  : e;
              }),
              (e.snapToGrid = function (e, t) {
                return t * Math.round(e / t);
              }),
              (e.containsPoint = function (e, t) {
                return (
                  null != t &&
                  null != e &&
                  t.x >= e.x &&
                  t.x <= e.x + e.width &&
                  t.y >= e.y &&
                  t.y <= e.y + e.height
                );
              }),
              (e.squaredLength = function (e, t) {
                var n = e.x - t.x,
                  r = e.y - t.y;
                return n * n + r * r;
              });
          })(Yu || (Yu = {}));
        var Qu = (function () {
            function e() {
              y()(this, e);
            }
            return (
              b()(e, [
                {
                  key: 'valueOf',
                  value: function () {
                    return this.toJSON();
                  },
                },
                {
                  key: 'toString',
                  value: function () {
                    return JSON.stringify(this.toJSON());
                  },
                },
              ]),
              e
            );
          })(),
          Ku = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n(e, r) {
              var i;
              return (
                y()(this, n),
                ((i = t.call(this)).x = null == e ? 0 : e),
                (i.y = null == r ? 0 : r),
                i
              );
            }
            return (
              b()(n, [
                {
                  key: 'round',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : 0;
                    return (
                      (this.x = Yu.round(this.x, e)),
                      (this.y = Yu.round(this.y, e)),
                      this
                    );
                  },
                },
                {
                  key: 'add',
                  value: function (e, t) {
                    var r = n.create(e, t);
                    return (this.x += r.x), (this.y += r.y), this;
                  },
                },
                {
                  key: 'update',
                  value: function (e, t) {
                    var r = n.create(e, t);
                    return (this.x = r.x), (this.y = r.y), this;
                  },
                },
                {
                  key: 'translate',
                  value: function (e, t) {
                    var r = n.create(e, t);
                    return (this.x += r.x), (this.y += r.y), this;
                  },
                },
                {
                  key: 'rotate',
                  value: function (e, t) {
                    var r = n.rotate(this, e, t);
                    return (this.x = r.x), (this.y = r.y), this;
                  },
                },
                {
                  key: 'scale',
                  value: function (e, t) {
                    var r =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : new n(),
                      i = n.create(r);
                    return (
                      (this.x = i.x + e * (this.x - i.x)),
                      (this.y = i.y + t * (this.y - i.y)),
                      this
                    );
                  },
                },
                {
                  key: 'closest',
                  value: function (e) {
                    var t = this;
                    if (1 === e.length) return n.create(e[0]);
                    var r = null,
                      i = 1 / 0;
                    return (
                      e.forEach(function (e) {
                        var n = t.squaredDistance(e);
                        n < i && ((r = e), (i = n));
                      }),
                      r ? n.create(r) : null
                    );
                  },
                },
                {
                  key: 'distance',
                  value: function (e) {
                    return Math.sqrt(this.squaredDistance(e));
                  },
                },
                {
                  key: 'squaredDistance',
                  value: function (e) {
                    var t = n.create(e),
                      r = this.x - t.x,
                      i = this.y - t.y;
                    return r * r + i * i;
                  },
                },
                {
                  key: 'manhattanDistance',
                  value: function (e) {
                    var t = n.create(e);
                    return Math.abs(t.x - this.x) + Math.abs(t.y - this.y);
                  },
                },
                {
                  key: 'magnitude',
                  value: function () {
                    return Math.sqrt(this.x * this.x + this.y * this.y) || 0.01;
                  },
                },
                {
                  key: 'theta',
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : new n(),
                      t = n.create(e),
                      r = -(t.y - this.y),
                      i = t.x - this.x,
                      o = Math.atan2(r, i);
                    return o < 0 && (o = 2 * Math.PI + o), (180 * o) / Math.PI;
                  },
                },
                {
                  key: 'angleBetween',
                  value: function (e, t) {
                    if (this.equals(e) || this.equals(t)) return NaN;
                    var n = this.theta(t) - this.theta(e);
                    return n < 0 && (n += 360), n;
                  },
                },
                {
                  key: 'vectorAngle',
                  value: function (e) {
                    return new n(0, 0).angleBetween(this, e);
                  },
                },
                {
                  key: 'toPolar',
                  value: function (e) {
                    return this.update(n.toPolar(this, e)), this;
                  },
                },
                {
                  key: 'changeInAngle',
                  value: function (e, t) {
                    var r =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : new n();
                    return (
                      this.clone().translate(-e, -t).theta(r) - this.theta(r)
                    );
                  },
                },
                {
                  key: 'adhereToRect',
                  value: function (e) {
                    return (
                      Yu.containsPoint(e, this) ||
                        ((this.x = Math.min(
                          Math.max(this.x, e.x),
                          e.x + e.width
                        )),
                        (this.y = Math.min(
                          Math.max(this.y, e.y),
                          e.y + e.height
                        ))),
                      this
                    );
                  },
                },
                {
                  key: 'bearing',
                  value: function (e) {
                    var t = n.create(e),
                      r = Xu.toRad(this.y),
                      i = Xu.toRad(t.y),
                      o = this.x,
                      a = t.x,
                      s = Xu.toRad(a - o),
                      l = Math.sin(s) * Math.cos(i),
                      u =
                        Math.cos(r) * Math.sin(i) -
                        Math.sin(r) * Math.cos(i) * Math.cos(s),
                      c = Xu.toDeg(Math.atan2(l, u)) - 22.5;
                    return (
                      c < 0 && (c += 360),
                      ['NE', 'E', 'SE', 'S', 'SW', 'W', 'NW', 'N'][
                        (c = parseInt(c / 45, 10))
                      ]
                    );
                  },
                },
                {
                  key: 'cross',
                  value: function (e, t) {
                    if (null != e && null != t) {
                      var r = n.create(e),
                        i = n.create(t);
                      return (
                        (i.x - this.x) * (r.y - this.y) -
                        (i.y - this.y) * (r.x - this.x)
                      );
                    }
                    return NaN;
                  },
                },
                {
                  key: 'dot',
                  value: function (e) {
                    var t = n.create(e);
                    return this.x * t.x + this.y * t.y;
                  },
                },
                {
                  key: 'diff',
                  value: function (e, t) {
                    if ('number' == typeof e)
                      return new n(this.x - e, this.y - t);
                    var r = n.create(e);
                    return new n(this.x - r.x, this.y - r.y);
                  },
                },
                {
                  key: 'lerp',
                  value: function (e, t) {
                    var r = n.create(e);
                    return new n(
                      (1 - t) * this.x + t * r.x,
                      (1 - t) * this.y + t * r.y
                    );
                  },
                },
                {
                  key: 'normalize',
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 1,
                      t = e / this.magnitude();
                    return this.scale(t, t);
                  },
                },
                {
                  key: 'move',
                  value: function (e, t) {
                    var r = n.create(e),
                      i = Xu.toRad(r.theta(this));
                    return this.translate(Math.cos(i) * t, -Math.sin(i) * t);
                  },
                },
                {
                  key: 'reflection',
                  value: function (e) {
                    return n.create(e).move(this, this.distance(e));
                  },
                },
                {
                  key: 'snapToGrid',
                  value: function (e, t) {
                    return (
                      (this.x = Yu.snapToGrid(this.x, e)),
                      (this.y = Yu.snapToGrid(this.y, null == t ? e : t)),
                      this
                    );
                  },
                },
                {
                  key: 'equals',
                  value: function (e) {
                    var t = n.create(e);
                    return null != t && t.x === this.x && t.y === this.y;
                  },
                },
                {
                  key: 'clone',
                  value: function () {
                    return n.clone(this);
                  },
                },
                {
                  key: 'toJSON',
                  value: function () {
                    return n.toJSON(this);
                  },
                },
                {
                  key: 'serialize',
                  value: function () {
                    return ''.concat(this.x, ' ').concat(this.y);
                  },
                },
              ]),
              n
            );
          })(Qu);
        !(function (e) {
          e.isPoint = function (t) {
            return null != t && t instanceof e;
          };
        })(Ku || (Ku = {})),
          (function (e) {
            (e.isPointLike = function (e) {
              return (
                null != e &&
                'object' === _()(e) &&
                'number' == typeof e.x &&
                'number' == typeof e.y
              );
            }),
              (e.isPointData = function (e) {
                return (
                  null != e &&
                  Array.isArray(e) &&
                  2 === e.length &&
                  'number' == typeof e[0] &&
                  'number' == typeof e[1]
                );
              });
          })(Ku || (Ku = {})),
          (function (e) {
            function t(t) {
              return e.isPoint(t)
                ? new e(t.x, t.y)
                : Array.isArray(t)
                ? new e(t[0], t[1])
                : new e(t.x, t.y);
            }
            function n(e, t) {
              return (
                e === t ||
                (null != e && null != t && e.x === t.x && e.y === t.y)
              );
            }
            function r(n, r, i) {
              var o =
                  arguments.length > 3 && void 0 !== arguments[3]
                    ? arguments[3]
                    : new e(),
                a = t(n),
                s = t(o),
                l = a.x - s.x,
                u = a.y - s.y,
                c = l * r - u * i,
                f = u * r + l * i;
              return new e(c + s.x, f + s.y);
            }
            (e.create = function (n, r) {
              return null == n || 'number' == typeof n ? new e(n, r) : t(n);
            }),
              (e.clone = t),
              (e.toJSON = function (t) {
                return e.isPoint(t)
                  ? { x: t.x, y: t.y }
                  : Array.isArray(t)
                  ? { x: t[0], y: t[1] }
                  : { x: t.x, y: t.y };
              }),
              (e.fromPolar = function (n, r) {
                var i =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : new e(),
                  o = Math.abs(n * Math.cos(r)),
                  a = Math.abs(n * Math.sin(r)),
                  s = t(i),
                  l = Xu.normalize(Xu.toDeg(r));
                return (
                  l < 90
                    ? (a = -a)
                    : l < 180
                    ? ((o = -o), (a = -a))
                    : l < 270 && (o = -o),
                  new e(s.x + o, s.y + a)
                );
              }),
              (e.toPolar = function (n) {
                var r =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : new e(),
                  i = t(n),
                  o = t(r),
                  a = i.x - o.x,
                  s = i.y - o.y;
                return new e(Math.sqrt(a * a + s * s), Xu.toRad(o.theta(i)));
              }),
              (e.equals = n),
              (e.equalPoints = function (e, t) {
                if (
                  (null == e && null != t) ||
                  (null != e && null == t) ||
                  (null != e && null != t && e.length !== t.length)
                )
                  return !1;
                if (null != e && null != t)
                  for (var r = 0, i = e.length; r < i; r += 1)
                    if (!n(e[r], t[r])) return !1;
                return !0;
              }),
              (e.random = function (t, n, r, i) {
                return new e(Yu.random(t, n), Yu.random(r, i));
              }),
              (e.rotate = function (e, t, n) {
                var i = Xu.toRad(Xu.normalize(-t)),
                  o = Math.sin(i);
                return r(e, Math.cos(i), o, n);
              }),
              (e.rotateEx = r);
          })(Ku || (Ku = {}));
        var Zu = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n(e, r, i, o) {
            var a;
            return (
              y()(this, n),
              ((a = t.call(this)).x = null == e ? 0 : e),
              (a.y = null == r ? 0 : r),
              (a.width = null == i ? 0 : i),
              (a.height = null == o ? 0 : o),
              a
            );
          }
          return (
            b()(n, [
              {
                key: 'left',
                get: function () {
                  return this.x;
                },
              },
              {
                key: 'top',
                get: function () {
                  return this.y;
                },
              },
              {
                key: 'right',
                get: function () {
                  return this.x + this.width;
                },
              },
              {
                key: 'bottom',
                get: function () {
                  return this.y + this.height;
                },
              },
              {
                key: 'origin',
                get: function () {
                  return new Ku(this.x, this.y);
                },
              },
              {
                key: 'topLeft',
                get: function () {
                  return new Ku(this.x, this.y);
                },
              },
              {
                key: 'topCenter',
                get: function () {
                  return new Ku(this.x + this.width / 2, this.y);
                },
              },
              {
                key: 'topRight',
                get: function () {
                  return new Ku(this.x + this.width, this.y);
                },
              },
              {
                key: 'center',
                get: function () {
                  return new Ku(
                    this.x + this.width / 2,
                    this.y + this.height / 2
                  );
                },
              },
              {
                key: 'bottomLeft',
                get: function () {
                  return new Ku(this.x, this.y + this.height);
                },
              },
              {
                key: 'bottomCenter',
                get: function () {
                  return new Ku(this.x + this.width / 2, this.y + this.height);
                },
              },
              {
                key: 'bottomRight',
                get: function () {
                  return new Ku(this.x + this.width, this.y + this.height);
                },
              },
              {
                key: 'corner',
                get: function () {
                  return new Ku(this.x + this.width, this.y + this.height);
                },
              },
              {
                key: 'rightMiddle',
                get: function () {
                  return new Ku(this.x + this.width, this.y + this.height / 2);
                },
              },
              {
                key: 'leftMiddle',
                get: function () {
                  return new Ku(this.x, this.y + this.height / 2);
                },
              },
              {
                key: 'topLine',
                get: function () {
                  return new ec(this.topLeft, this.topRight);
                },
              },
              {
                key: 'rightLine',
                get: function () {
                  return new ec(this.topRight, this.bottomRight);
                },
              },
              {
                key: 'bottomLine',
                get: function () {
                  return new ec(this.bottomLeft, this.bottomRight);
                },
              },
              {
                key: 'leftLine',
                get: function () {
                  return new ec(this.topLeft, this.bottomLeft);
                },
              },
              {
                key: 'getOrigin',
                value: function () {
                  return this.origin;
                },
              },
              {
                key: 'getTopLeft',
                value: function () {
                  return this.topLeft;
                },
              },
              {
                key: 'getTopCenter',
                value: function () {
                  return this.topCenter;
                },
              },
              {
                key: 'getTopRight',
                value: function () {
                  return this.topRight;
                },
              },
              {
                key: 'getCenter',
                value: function () {
                  return this.center;
                },
              },
              {
                key: 'getCenterX',
                value: function () {
                  return this.x + this.width / 2;
                },
              },
              {
                key: 'getCenterY',
                value: function () {
                  return this.y + this.height / 2;
                },
              },
              {
                key: 'getBottomLeft',
                value: function () {
                  return this.bottomLeft;
                },
              },
              {
                key: 'getBottomCenter',
                value: function () {
                  return this.bottomCenter;
                },
              },
              {
                key: 'getBottomRight',
                value: function () {
                  return this.bottomRight;
                },
              },
              {
                key: 'getCorner',
                value: function () {
                  return this.corner;
                },
              },
              {
                key: 'getRightMiddle',
                value: function () {
                  return this.rightMiddle;
                },
              },
              {
                key: 'getLeftMiddle',
                value: function () {
                  return this.leftMiddle;
                },
              },
              {
                key: 'getTopLine',
                value: function () {
                  return this.topLine;
                },
              },
              {
                key: 'getRightLine',
                value: function () {
                  return this.rightLine;
                },
              },
              {
                key: 'getBottomLine',
                value: function () {
                  return this.bottomLine;
                },
              },
              {
                key: 'getLeftLine',
                value: function () {
                  return this.leftLine;
                },
              },
              {
                key: 'bbox',
                value: function (e) {
                  if (!e) return this.clone();
                  var t = Xu.toRad(e),
                    r = Math.abs(Math.sin(t)),
                    i = Math.abs(Math.cos(t)),
                    o = this.width * i + this.height * r,
                    a = this.width * r + this.height * i;
                  return new n(
                    this.x + (this.width - o) / 2,
                    this.y + (this.height - a) / 2,
                    o,
                    a
                  );
                },
              },
              {
                key: 'round',
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : 0;
                  return (
                    (this.x = Yu.round(this.x, e)),
                    (this.y = Yu.round(this.y, e)),
                    (this.width = Yu.round(this.width, e)),
                    (this.height = Yu.round(this.height, e)),
                    this
                  );
                },
              },
              {
                key: 'add',
                value: function (e, t, r, i) {
                  var o = n.create(e, t, r, i),
                    a = Math.min(this.x, o.x),
                    s = Math.min(this.y, o.y),
                    l = Math.max(this.x + this.width, o.x + o.width),
                    u = Math.max(this.y + this.height, o.y + o.height);
                  return (
                    (this.x = a),
                    (this.y = s),
                    (this.width = l - a),
                    (this.height = u - s),
                    this
                  );
                },
              },
              {
                key: 'update',
                value: function (e, t, r, i) {
                  var o = n.create(e, t, r, i);
                  return (
                    (this.x = o.x),
                    (this.y = o.y),
                    (this.width = o.width),
                    (this.height = o.height),
                    this
                  );
                },
              },
              {
                key: 'inflate',
                value: function (e, t) {
                  var n = e,
                    r = null != t ? t : e;
                  return (
                    (this.x -= n),
                    (this.y -= r),
                    (this.width += 2 * n),
                    (this.height += 2 * r),
                    this
                  );
                },
              },
              {
                key: 'snapToGrid',
                value: function (e, t) {
                  var n = this.origin.snapToGrid(e, t),
                    r = this.corner.snapToGrid(e, t);
                  return (
                    (this.x = n.x),
                    (this.y = n.y),
                    (this.width = r.x - n.x),
                    (this.height = r.y - n.y),
                    this
                  );
                },
              },
              {
                key: 'translate',
                value: function (e, t) {
                  var n = Ku.create(e, t);
                  return (this.x += n.x), (this.y += n.y), this;
                },
              },
              {
                key: 'scale',
                value: function (e, t) {
                  var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : new Ku(),
                    r = this.origin.scale(e, t, n);
                  return (
                    (this.x = r.x),
                    (this.y = r.y),
                    (this.width *= e),
                    (this.height *= t),
                    this
                  );
                },
              },
              {
                key: 'rotate',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : this.getCenter();
                  if (0 !== e) {
                    var r = Xu.toRad(e),
                      i = Math.cos(r),
                      o = Math.sin(r),
                      a = this.getOrigin(),
                      s = this.getTopRight(),
                      l = this.getBottomRight(),
                      u = this.getBottomLeft();
                    (a = Ku.rotateEx(a, i, o, t)),
                      (s = Ku.rotateEx(s, i, o, t)),
                      (l = Ku.rotateEx(l, i, o, t)),
                      (u = Ku.rotateEx(u, i, o, t));
                    var c = new n(a.x, a.y, 0, 0);
                    c.add(s.x, s.y, 0, 0),
                      c.add(l.x, l.y, 0, 0),
                      c.add(u.x, u.y, 0, 0),
                      this.update(c);
                  }
                  return this;
                },
              },
              {
                key: 'rotate90',
                value: function () {
                  var e = (this.width - this.height) / 2;
                  (this.x += e), (this.y -= e);
                  var t = this.width;
                  return (this.width = this.height), (this.height = t), this;
                },
              },
              {
                key: 'moveAndExpand',
                value: function (e) {
                  var t = n.clone(e);
                  return (
                    (this.x += t.x || 0),
                    (this.y += t.y || 0),
                    (this.width += t.width || 0),
                    (this.height += t.height || 0),
                    this
                  );
                },
              },
              {
                key: 'getMaxScaleToFit',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : this.center,
                    r = n.clone(e),
                    i = t.x,
                    o = t.y,
                    a = 1 / 0,
                    s = 1 / 0,
                    l = 1 / 0,
                    u = 1 / 0,
                    c = 1 / 0,
                    f = 1 / 0,
                    h = 1 / 0,
                    d = 1 / 0,
                    g = r.topLeft;
                  g.x < i && (a = (this.x - i) / (g.x - i)),
                    g.y < o && (c = (this.y - o) / (g.y - o));
                  var p = r.bottomRight;
                  p.x > i && (s = (this.x + this.width - i) / (p.x - i)),
                    p.y > o && (f = (this.y + this.height - o) / (p.y - o));
                  var v = r.topRight;
                  v.x > i && (l = (this.x + this.width - i) / (v.x - i)),
                    v.y < o && (h = (this.y - o) / (v.y - o));
                  var y = r.bottomLeft;
                  return (
                    y.x < i && (u = (this.x - i) / (y.x - i)),
                    y.y > o && (d = (this.y + this.height - o) / (y.y - o)),
                    { sx: Math.min(a, s, l, u), sy: Math.min(c, f, h, d) }
                  );
                },
              },
              {
                key: 'getMaxUniformScaleToFit',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : this.center,
                    n = this.getMaxScaleToFit(e, t);
                  return Math.min(n.sx, n.sy);
                },
              },
              {
                key: 'containsPoint',
                value: function (e, t) {
                  return Yu.containsPoint(this, Ku.create(e, t));
                },
              },
              {
                key: 'containsRect',
                value: function (e, t, r, i) {
                  var o = n.create(e, t, r, i),
                    a = this.x,
                    s = this.y,
                    l = this.width,
                    u = this.height,
                    c = o.x,
                    f = o.y,
                    h = o.width,
                    d = o.height;
                  return (
                    0 !== l &&
                    0 !== u &&
                    0 !== h &&
                    0 !== d &&
                    c >= a &&
                    f >= s &&
                    c + h <= a + l &&
                    f + d <= s + u
                  );
                },
              },
              {
                key: 'intersectsWithLine',
                value: function (e) {
                  var t = [
                      this.topLine,
                      this.rightLine,
                      this.bottomLine,
                      this.leftLine,
                    ],
                    n = [],
                    r = [];
                  return (
                    t.forEach(function (t) {
                      var i = e.intersectsWithLine(t);
                      null !== i &&
                        r.indexOf(i.toString()) < 0 &&
                        (n.push(i), r.push(i.toString()));
                    }),
                    n.length > 0 ? n : null
                  );
                },
              },
              {
                key: 'intersectsWithLineFromCenterToPoint',
                value: function (e, t) {
                  var n = Ku.clone(e),
                    r = this.center,
                    i = null;
                  null != t && 0 !== t && n.rotate(t, r);
                  for (
                    var o = [
                        this.topLine,
                        this.rightLine,
                        this.bottomLine,
                        this.leftLine,
                      ],
                      a = new ec(r, n),
                      s = o.length - 1;
                    s >= 0;
                    s -= 1
                  ) {
                    var l = o[s].intersectsWithLine(a);
                    if (null !== l) {
                      i = l;
                      break;
                    }
                  }
                  return i && null != t && 0 !== t && i.rotate(-t, r), i;
                },
              },
              {
                key: 'intersectsWithRect',
                value: function (e, t, r, i) {
                  var o = n.create(e, t, r, i);
                  if (!this.isIntersectWithRect(o)) return null;
                  var a = this.origin,
                    s = this.corner,
                    l = o.origin,
                    u = o.corner,
                    c = Math.max(a.x, l.x),
                    f = Math.max(a.y, l.y);
                  return new n(
                    c,
                    f,
                    Math.min(s.x, u.x) - c,
                    Math.min(s.y, u.y) - f
                  );
                },
              },
              {
                key: 'isIntersectWithRect',
                value: function (e, t, r, i) {
                  var o = n.create(e, t, r, i),
                    a = this.origin,
                    s = this.corner,
                    l = o.origin,
                    u = o.corner;
                  return !(
                    u.x <= a.x ||
                    u.y <= a.y ||
                    l.x >= s.x ||
                    l.y >= s.y
                  );
                },
              },
              {
                key: 'normalize',
                value: function () {
                  var e = this.x,
                    t = this.y,
                    n = this.width,
                    r = this.height;
                  return (
                    this.width < 0 &&
                      ((e = this.x + this.width), (n = -this.width)),
                    this.height < 0 &&
                      ((t = this.y + this.height), (r = -this.height)),
                    (this.x = e),
                    (this.y = t),
                    (this.width = n),
                    (this.height = r),
                    this
                  );
                },
              },
              {
                key: 'union',
                value: function (e) {
                  var t = n.clone(e),
                    r = this.origin,
                    i = this.corner,
                    o = t.origin,
                    a = t.corner,
                    s = Math.min(r.x, o.x),
                    l = Math.min(r.y, o.y);
                  return new n(
                    s,
                    l,
                    Math.max(i.x, a.x) - s,
                    Math.max(i.y, a.y) - l
                  );
                },
              },
              {
                key: 'getNearestSideToPoint',
                value: function (e) {
                  var t = Ku.clone(e),
                    n = t.x - this.x,
                    r = this.x + this.width - t.x,
                    i = t.y - this.y,
                    o = n,
                    a = 'left';
                  return (
                    r < o && ((o = r), (a = 'right')),
                    i < o && ((o = i), (a = 'top')),
                    this.y + this.height - t.y < o && (a = 'bottom'),
                    a
                  );
                },
              },
              {
                key: 'getNearestPointToPoint',
                value: function (e) {
                  var t = Ku.clone(e);
                  if (this.containsPoint(t)) {
                    var n = this.getNearestSideToPoint(t);
                    if ('left' === n) return new Ku(this.x, t.y);
                    if ('top' === n) return new Ku(t.x, this.y);
                    if ('right' === n) return new Ku(this.x + this.width, t.y);
                    if ('bottom' === n)
                      return new Ku(t.x, this.y + this.height);
                  }
                  return t.adhereToRect(this);
                },
              },
              {
                key: 'equals',
                value: function (e) {
                  return (
                    null != e &&
                    e.x === this.x &&
                    e.y === this.y &&
                    e.width === this.width &&
                    e.height === this.height
                  );
                },
              },
              {
                key: 'clone',
                value: function () {
                  return new n(this.x, this.y, this.width, this.height);
                },
              },
              {
                key: 'toJSON',
                value: function () {
                  return {
                    x: this.x,
                    y: this.y,
                    width: this.width,
                    height: this.height,
                  };
                },
              },
              {
                key: 'serialize',
                value: function () {
                  return ''
                    .concat(this.x, ' ')
                    .concat(this.y, ' ')
                    .concat(this.width, ' ')
                    .concat(this.height);
                },
              },
            ]),
            n
          );
        })(Qu);
        !(function (e) {
          e.isRectangle = function (t) {
            return null != t && t instanceof e;
          };
        })(Zu || (Zu = {})),
          (function (e) {
            e.isRectangleLike = function (e) {
              return (
                null != e &&
                'object' === _()(e) &&
                'number' == typeof e.x &&
                'number' == typeof e.y &&
                'number' == typeof e.width &&
                'number' == typeof e.height
              );
            };
          })(Zu || (Zu = {})),
          (function (e) {
            function t(t) {
              return e.isRectangle(t)
                ? t.clone()
                : Array.isArray(t)
                ? new e(t[0], t[1], t[2], t[3])
                : new e(t.x, t.y, t.width, t.height);
            }
            (e.create = function (n, r, i, o) {
              return null == n || 'number' == typeof n
                ? new e(n, r, i, o)
                : t(n);
            }),
              (e.clone = t),
              (e.fromEllipse = function (t) {
                return new e(t.x - t.a, t.y - t.b, 2 * t.a, 2 * t.b);
              }),
              (e.fromSize = function (t) {
                return new e(0, 0, t.width, t.height);
              }),
              (e.fromPositionAndSize = function (t, n) {
                return new e(t.x, t.y, n.width, n.height);
              });
          })(Zu || (Zu = {}));
        var ec = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n(e, r, i, o) {
            var a;
            return (
              y()(this, n),
              (a = t.call(this)),
              'number' == typeof e && 'number' == typeof r
                ? ((a.start = new Ku(e, r)), (a.end = new Ku(i, o)))
                : ((a.start = Ku.create(e)), (a.end = Ku.create(r))),
              a
            );
          }
          return (
            b()(n, [
              {
                key: 'center',
                get: function () {
                  return new Ku(
                    (this.start.x + this.end.x) / 2,
                    (this.start.y + this.end.y) / 2
                  );
                },
              },
              {
                key: 'getCenter',
                value: function () {
                  return this.center;
                },
              },
              {
                key: 'round',
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : 0;
                  return this.start.round(e), this.end.round(e), this;
                },
              },
              {
                key: 'translate',
                value: function (e, t) {
                  return (
                    'number' == typeof e
                      ? (this.start.translate(e, t), this.end.translate(e, t))
                      : (this.start.translate(e), this.end.translate(e)),
                    this
                  );
                },
              },
              {
                key: 'rotate',
                value: function (e, t) {
                  return this.start.rotate(e, t), this.end.rotate(e, t), this;
                },
              },
              {
                key: 'scale',
                value: function (e, t, n) {
                  return (
                    this.start.scale(e, t, n), this.end.scale(e, t, n), this
                  );
                },
              },
              {
                key: 'length',
                value: function () {
                  return Math.sqrt(this.squaredLength());
                },
              },
              {
                key: 'squaredLength',
                value: function () {
                  var e = this.start.x - this.end.x,
                    t = this.start.y - this.end.y;
                  return e * e + t * t;
                },
              },
              {
                key: 'setLength',
                value: function (e) {
                  var t = this.length();
                  if (!t) return this;
                  var n = e / t;
                  return this.scale(n, n, this.start);
                },
              },
              {
                key: 'parallel',
                value: function (e) {
                  var t = this.clone();
                  if (!t.isDifferentiable()) return t;
                  var n = t.start,
                    r = t.end,
                    i = n.clone().rotate(270, r),
                    o = r.clone().rotate(90, n);
                  return n.move(o, e), r.move(i, e), t;
                },
              },
              {
                key: 'vector',
                value: function () {
                  return new Ku(
                    this.end.x - this.start.x,
                    this.end.y - this.start.y
                  );
                },
              },
              {
                key: 'angle',
                value: function () {
                  var e = new Ku(this.start.x + 1, this.start.y);
                  return this.start.angleBetween(this.end, e);
                },
              },
              {
                key: 'bbox',
                value: function () {
                  var e = Math.min(this.start.x, this.end.x),
                    t = Math.min(this.start.y, this.end.y),
                    n = Math.max(this.start.x, this.end.x),
                    r = Math.max(this.start.y, this.end.y);
                  return new Zu(e, t, n - e, r - t);
                },
              },
              {
                key: 'bearing',
                value: function () {
                  return this.start.bearing(this.end);
                },
              },
              {
                key: 'closestPoint',
                value: function (e) {
                  return this.pointAt(this.closestPointNormalizedLength(e));
                },
              },
              {
                key: 'closestPointLength',
                value: function (e) {
                  return this.closestPointNormalizedLength(e) * this.length();
                },
              },
              {
                key: 'closestPointTangent',
                value: function (e) {
                  return this.tangentAt(this.closestPointNormalizedLength(e));
                },
              },
              {
                key: 'closestPointNormalizedLength',
                value: function (e) {
                  var t = this.vector().dot(new n(this.start, e).vector()),
                    r = Math.min(1, Math.max(0, t / this.squaredLength()));
                  return Number.isNaN(r) ? 0 : r;
                },
              },
              {
                key: 'pointAt',
                value: function (e) {
                  var t = this.start,
                    n = this.end;
                  return e <= 0 ? t.clone() : e >= 1 ? n.clone() : t.lerp(n, e);
                },
              },
              {
                key: 'pointAtLength',
                value: function (e) {
                  var t = this.start,
                    n = this.end,
                    r = !0;
                  e < 0 && ((r = !1), (e = -e));
                  var i = this.length();
                  if (e >= i) return r ? n.clone() : t.clone();
                  var o = (r ? e : i - e) / i;
                  return this.pointAt(o);
                },
              },
              {
                key: 'divideAt',
                value: function (e) {
                  var t = this.pointAt(e);
                  return [new n(this.start, t), new n(t, this.end)];
                },
              },
              {
                key: 'divideAtLength',
                value: function (e) {
                  var t = this.pointAtLength(e);
                  return [new n(this.start, t), new n(t, this.end)];
                },
              },
              {
                key: 'containsPoint',
                value: function (e) {
                  var t = this.start,
                    r = this.end;
                  if (0 !== t.cross(e, r)) return !1;
                  var i = this.length();
                  return (
                    !(new n(t, e).length() > i) && !(new n(e, r).length() > i)
                  );
                },
              },
              {
                key: 'intersect',
                value: function (e, t) {
                  var n = e.intersectsWithLine(this, t);
                  return n ? (Array.isArray(n) ? n : [n]) : null;
                },
              },
              {
                key: 'intersectsWithLine',
                value: function (e) {
                  var t = new Ku(
                      this.end.x - this.start.x,
                      this.end.y - this.start.y
                    ),
                    n = new Ku(e.end.x - e.start.x, e.end.y - e.start.y),
                    r = t.x * n.y - t.y * n.x,
                    i = new Ku(
                      e.start.x - this.start.x,
                      e.start.y - this.start.y
                    ),
                    o = i.x * n.y - i.y * n.x,
                    a = i.x * t.y - i.y * t.x;
                  if (0 === r || o * r < 0 || a * r < 0) return null;
                  if (r > 0) {
                    if (o > r || a > r) return null;
                  } else if (o < r || a < r) return null;
                  return new Ku(
                    this.start.x + (o * t.x) / r,
                    this.start.y + (o * t.y) / r
                  );
                },
              },
              {
                key: 'isDifferentiable',
                value: function () {
                  return !this.start.equals(this.end);
                },
              },
              {
                key: 'pointOffset',
                value: function (e) {
                  var t = Ku.clone(e),
                    n = this.start,
                    r = this.end;
                  return (
                    ((r.x - n.x) * (t.y - n.y) - (r.y - n.y) * (t.x - n.x)) /
                    this.length()
                  );
                },
              },
              {
                key: 'pointSquaredDistance',
                value: function (e, t) {
                  var n = Ku.create(e, t);
                  return this.closestPoint(n).squaredDistance(n);
                },
              },
              {
                key: 'pointDistance',
                value: function (e, t) {
                  var n = Ku.create(e, t);
                  return this.closestPoint(n).distance(n);
                },
              },
              {
                key: 'tangentAt',
                value: function (e) {
                  if (!this.isDifferentiable()) return null;
                  var t = this.start,
                    r = this.end,
                    i = this.pointAt(e),
                    o = new n(t, r);
                  return o.translate(i.x - t.x, i.y - t.y), o;
                },
              },
              {
                key: 'tangentAtLength',
                value: function (e) {
                  if (!this.isDifferentiable()) return null;
                  var t = this.start,
                    r = this.end,
                    i = this.pointAtLength(e),
                    o = new n(t, r);
                  return o.translate(i.x - t.x, i.y - t.y), o;
                },
              },
              {
                key: 'relativeCcw',
                value: function (e, t) {
                  var n = Ku.create(e, t),
                    r = n.x - this.start.x,
                    i = n.y - this.start.y,
                    o = this.end.x - this.start.x,
                    a = this.end.y - this.start.y,
                    s = r * a - i * o;
                  return (
                    0 === s &&
                      (s = r * o + i * a) > 0 &&
                      (s = (r -= o) * o + (i -= a) * a) < 0 &&
                      (s = 0),
                    s < 0 ? -1 : s > 0 ? 1 : 0
                  );
                },
              },
              {
                key: 'equals',
                value: function (e) {
                  return (
                    null != e &&
                    this.start.x === e.start.x &&
                    this.start.y === e.start.y &&
                    this.end.x === e.end.x &&
                    this.end.y === e.end.y
                  );
                },
              },
              {
                key: 'clone',
                value: function () {
                  return new n(this.start, this.end);
                },
              },
              {
                key: 'toJSON',
                value: function () {
                  return { start: this.start.toJSON(), end: this.end.toJSON() };
                },
              },
              {
                key: 'serialize',
                value: function () {
                  return [this.start.serialize(), this.end.serialize()].join(
                    ' '
                  );
                },
              },
            ]),
            n
          );
        })(Qu);
        !(function (e) {
          e.isLine = function (t) {
            return null != t && t instanceof e;
          };
        })(ec || (ec = {}));
        var tc = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n(e, r, i, o) {
            var a;
            return (
              y()(this, n),
              ((a = t.call(this)).x = null == e ? 0 : e),
              (a.y = null == r ? 0 : r),
              (a.a = null == i ? 0 : i),
              (a.b = null == o ? 0 : o),
              a
            );
          }
          return (
            b()(n, [
              {
                key: 'center',
                get: function () {
                  return new Ku(this.x, this.y);
                },
              },
              {
                key: 'bbox',
                value: function () {
                  return Zu.fromEllipse(this);
                },
              },
              {
                key: 'getCenter',
                value: function () {
                  return this.center;
                },
              },
              {
                key: 'inflate',
                value: function (e, t) {
                  var n = e,
                    r = null != t ? t : e;
                  return (this.a += 2 * n), (this.b += 2 * r), this;
                },
              },
              {
                key: 'normalizedDistance',
                value: function (e, t) {
                  var n = Ku.create(e, t),
                    r = n.x - this.x,
                    i = n.y - this.y,
                    o = this.a,
                    a = this.b;
                  return (r * r) / (o * o) + (i * i) / (a * a);
                },
              },
              {
                key: 'containsPoint',
                value: function (e, t) {
                  return this.normalizedDistance(e, t) <= 1;
                },
              },
              {
                key: 'intersectsWithLine',
                value: function (e) {
                  var t = [],
                    n = this.a,
                    r = this.b,
                    i = e.start,
                    o = e.end,
                    a = e.vector(),
                    s = i.diff(new Ku(this.x, this.y)),
                    l = new Ku(a.x / (n * n), a.y / (r * r)),
                    u = new Ku(s.x / (n * n), s.y / (r * r)),
                    c = a.dot(l),
                    f = a.dot(u),
                    h = f * f - c * (s.dot(u) - 1);
                  if (h < 0) return null;
                  if (h > 0) {
                    var d = Math.sqrt(h),
                      g = (-f - d) / c,
                      p = (-f + d) / c;
                    if ((g < 0 || g > 1) && (p < 0 || p > 1)) return null;
                    g >= 0 && g <= 1 && t.push(i.lerp(o, g)),
                      p >= 0 && p <= 1 && t.push(i.lerp(o, p));
                  } else {
                    var v = -f / c;
                    if (!(v >= 0 && v <= 1)) return null;
                    t.push(i.lerp(o, v));
                  }
                  return t;
                },
              },
              {
                key: 'intersectsWithLineFromCenterToPoint',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n = Ku.clone(e);
                  t && n.rotate(t, this.getCenter());
                  var r,
                    i = n.x - this.x,
                    o = n.y - this.y;
                  if (0 === i)
                    return (
                      (r = this.bbox().getNearestPointToPoint(n)),
                      t ? r.rotate(-t, this.getCenter()) : r
                    );
                  var a = o / i,
                    s = a * a,
                    l = this.a * this.a,
                    u = this.b * this.b,
                    c = Math.sqrt(1 / (1 / l + s / u)),
                    f = a * (c = i < 0 ? -c : c);
                  return (
                    (r = new Ku(this.x + c, this.y + f)),
                    t ? r.rotate(-t, this.getCenter()) : r
                  );
                },
              },
              {
                key: 'tangentTheta',
                value: function (e) {
                  var t,
                    n,
                    r = Ku.clone(e),
                    i = r.x,
                    o = r.y,
                    a = this.a,
                    s = this.b,
                    l = this.bbox().center,
                    u = l.x,
                    c = l.y,
                    f = i > l.x + a / 2,
                    h = i < l.x - a / 2;
                  return (
                    f || h
                      ? (t =
                          (a * a) / (i - u) -
                          (a *
                            a *
                            (o - c) *
                            ((n = i > l.x ? o - 30 : o + 30) - c)) /
                            (s * s * (i - u)) +
                          u)
                      : (n =
                          (s * s) / (o - c) -
                          (s *
                            s *
                            (i - u) *
                            ((t = o > l.y ? i + 30 : i - 30) - u)) /
                            (a * a * (o - c)) +
                          c),
                    new Ku(t, n).theta(r)
                  );
                },
              },
              {
                key: 'scale',
                value: function (e, t) {
                  return (this.a *= e), (this.b *= t), this;
                },
              },
              {
                key: 'rotate',
                value: function (e, t) {
                  var r = Zu.fromEllipse(this);
                  r.rotate(e, t);
                  var i = n.fromRect(r);
                  return (
                    (this.a = i.a),
                    (this.b = i.b),
                    (this.x = i.x),
                    (this.y = i.y),
                    this
                  );
                },
              },
              {
                key: 'translate',
                value: function (e, t) {
                  var n = Ku.create(e, t);
                  return (this.x += n.x), (this.y += n.y), this;
                },
              },
              {
                key: 'equals',
                value: function (e) {
                  return (
                    null != e &&
                    e.x === this.x &&
                    e.y === this.y &&
                    e.a === this.a &&
                    e.b === this.b
                  );
                },
              },
              {
                key: 'clone',
                value: function () {
                  return new n(this.x, this.y, this.a, this.b);
                },
              },
              {
                key: 'toJSON',
                value: function () {
                  return { x: this.x, y: this.y, a: this.a, b: this.b };
                },
              },
              {
                key: 'serialize',
                value: function () {
                  return ''
                    .concat(this.x, ' ')
                    .concat(this.y, ' ')
                    .concat(this.a, ' ')
                    .concat(this.b);
                },
              },
            ]),
            n
          );
        })(Qu);
        !(function (e) {
          e.isEllipse = function (t) {
            return null != t && t instanceof e;
          };
        })(tc || (tc = {})),
          (function (e) {
            function t(t) {
              return e.isEllipse(t)
                ? t.clone()
                : Array.isArray(t)
                ? new e(t[0], t[1], t[2], t[3])
                : new e(t.x, t.y, t.a, t.b);
            }
            (e.create = function (n, r, i, o) {
              return null == n || 'number' == typeof n
                ? new e(n, r, i, o)
                : t(n);
            }),
              (e.parse = t),
              (e.fromRect = function (t) {
                var n = t.center;
                return new e(n.x, n.y, t.width / 2, t.height / 2);
              });
          })(tc || (tc = {}));
        var nc = new RegExp('^[\\s\\dLMCZz,.]*$');
        function rc(e) {
          return 'string' == typeof e && nc.test(e);
        }
        function ic(e, t) {
          return ((e % t) + t) % t;
        }
        function oc(e, t, n, r, i) {
          var o = [],
            a = e[e.length - 1],
            s = null != t && t > 0,
            l = t || 0;
          if (r && s) {
            var u = (e = e.slice())[0],
              c = new Ku(a.x + (u.x - a.x) / 2, a.y + (u.y - a.y) / 2);
            e.splice(0, 0, c);
          }
          var f = e[0],
            h = 1;
          for (
            n ? o.push('M', f.x, f.y) : o.push('L', f.x, f.y);
            h < (r ? e.length : e.length - 1);

          ) {
            var d = e[ic(h, e.length)],
              g = f.x - d.x,
              p = f.y - d.y;
            if (
              s &&
              (0 !== g || 0 !== p) &&
              (null == i || i.indexOf(h - 1) < 0)
            ) {
              var v = Math.sqrt(g * g + p * p),
                y = (g * Math.min(l, v / 2)) / v,
                m = (p * Math.min(l, v / 2)) / v,
                b = d.x + y,
                k = d.y + m;
              o.push('L', b, k);
              for (
                var w = e[ic(h + 1, e.length)];
                h < e.length - 2 &&
                0 === Math.round(w.x - d.x) &&
                0 === Math.round(w.y - d.y);

              )
                (w = e[ic(h + 2, e.length)]), (h += 1);
              (g = w.x - d.x),
                (p = w.y - d.y),
                (v = Math.max(1, Math.sqrt(g * g + p * p)));
              var x = (g * Math.min(l, v / 2)) / v,
                C = (p * Math.min(l, v / 2)) / v,
                S = d.x + x,
                E = d.y + C;
              o.push('Q', d.x, d.y, S, E), (d = new Ku(S, E));
            } else o.push('L', d.x, d.y);
            (f = d), (h += 1);
          }
          return (
            r ? o.push('Z') : o.push('L', a.x, a.y),
            o
              .map(function (e) {
                return 'string' == typeof e ? e : +e.toFixed(3);
              })
              .join(' ')
          );
        }
        function ac(e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            n = [];
          return (
            e &&
              e.length &&
              e.forEach(function (e) {
                Array.isArray(e)
                  ? n.push({ x: e[0], y: e[1] })
                  : n.push({ x: e.x, y: e.y });
              }),
            oc(
              n,
              t.round,
              null == t.initialMove || t.initialMove,
              t.close,
              t.exclude
            )
          );
        }
        function sc(e, t, n, r) {
          var i =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : 0,
            o =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : 0,
            a =
              arguments.length > 6 && void 0 !== arguments[6]
                ? arguments[6]
                : 0,
            s = arguments.length > 7 ? arguments[7] : void 0,
            l = arguments.length > 8 ? arguments[8] : void 0;
          if (0 === n || 0 === r) return [];
          (s -= e), (l -= t), (n = Math.abs(n)), (r = Math.abs(r));
          var u,
            c = -s / 2,
            f = -l / 2,
            h = Math.cos((i * Math.PI) / 180),
            d = Math.sin((i * Math.PI) / 180),
            g = h * c + d * f,
            p = -1 * d * c + h * f,
            v = g * g,
            y = p * p,
            m = n * n,
            b = r * r,
            k = v / m + y / b;
          if (k > 1) (n = Math.sqrt(k) * n), (r = Math.sqrt(k) * r), (u = 0);
          else {
            var w = 1;
            o === a && (w = -1),
              (u = w * Math.sqrt((m * b - m * y - b * v) / (m * y + b * v)));
          }
          var x = (u * n * p) / r,
            C = (-1 * u * r * g) / n,
            S = h * x - d * C + s / 2,
            E = d * x + h * C + l / 2,
            O = Math.atan2((p - C) / r, (g - x) / n) - Math.atan2(0, 1),
            P = O >= 0 ? O : 2 * Math.PI + O,
            A =
              (O =
                Math.atan2((-p - C) / r, (-g - x) / n) -
                Math.atan2((p - C) / r, (g - x) / n)) >= 0
                ? O
                : 2 * Math.PI + O;
          0 === a && A > 0
            ? (A -= 2 * Math.PI)
            : 0 !== a && A < 0 && (A += 2 * Math.PI);
          for (
            var M = (2 * A) / Math.PI,
              T = Math.ceil(M < 0 ? -1 * M : M),
              N = A / T,
              j =
                ((8 / 3) * Math.sin(N / 4) * Math.sin(N / 4)) / Math.sin(N / 2),
              L = h * n,
              R = h * r,
              _ = d * n,
              I = d * r,
              D = Math.cos(P),
              z = Math.sin(P),
              B = -j * (L * z + I * D),
              V = -j * (_ * z - R * D),
              F = 0,
              U = 0,
              H = [],
              G = 0;
            G < T;
            G += 1
          ) {
            (P += N),
              (F = L * (D = Math.cos(P)) - I * (z = Math.sin(P)) + S),
              (U = _ * D + R * z + E);
            var W = -j * (L * z + I * D),
              q = -j * (_ * z - R * D),
              X = 6 * G;
            (H[X] = Number(B + e)),
              (H[X + 1] = Number(V + t)),
              (H[X + 2] = Number(F - W + e)),
              (H[X + 3] = Number(U - q + t)),
              (H[X + 4] = Number(F + e)),
              (H[X + 5] = Number(U + t)),
              (B = F + W),
              (V = U + q);
          }
          return H.map(function (e) {
            return +e.toFixed(2);
          });
        }
        function lc(e, t, n, r) {
          var i =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : 0,
            o =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : 0,
            a =
              arguments.length > 6 && void 0 !== arguments[6]
                ? arguments[6]
                : 0,
            s = arguments.length > 7 ? arguments[7] : void 0,
            l = arguments.length > 8 ? arguments[8] : void 0,
            u = [],
            c = sc(e, t, n, r, i, o, a, s, l);
          if (null != c)
            for (var f = 0, h = c.length; f < h; f += 6)
              u.push(
                'C',
                c[f],
                c[f + 1],
                c[f + 2],
                c[f + 3],
                c[f + 4],
                c[f + 5]
              );
          return u.join(' ');
        }
        var uc = i(378),
          cc = i.n(uc),
          fc = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n(e) {
              var r;
              if ((y()(this, n), (r = t.call(this)), null != e)) {
                if ('string' == typeof e) return cc()(r, n.parse(e));
                r.points = e.map(function (e) {
                  return Ku.create(e);
                });
              } else r.points = [];
              return r;
            }
            return (
              b()(n, [
                {
                  key: 'start',
                  get: function () {
                    return this.points[0] || null;
                  },
                },
                {
                  key: 'end',
                  get: function () {
                    return this.points[this.points.length - 1] || null;
                  },
                },
                {
                  key: 'scale',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : new Ku();
                    return (
                      this.points.forEach(function (r) {
                        return r.scale(e, t, n);
                      }),
                      this
                    );
                  },
                },
                {
                  key: 'rotate',
                  value: function (e, t) {
                    return (
                      this.points.forEach(function (n) {
                        return n.rotate(e, t);
                      }),
                      this
                    );
                  },
                },
                {
                  key: 'translate',
                  value: function (e, t) {
                    var n = Ku.create(e, t);
                    return (
                      this.points.forEach(function (e) {
                        return e.translate(n.x, n.y);
                      }),
                      this
                    );
                  },
                },
                {
                  key: 'round',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : 0;
                    return (
                      this.points.forEach(function (t) {
                        return t.round(e);
                      }),
                      this
                    );
                  },
                },
                {
                  key: 'bbox',
                  value: function () {
                    if (0 === this.points.length) return new Zu();
                    for (
                      var e = 1 / 0,
                        t = -1 / 0,
                        n = 1 / 0,
                        r = -1 / 0,
                        i = this.points,
                        o = 0,
                        a = i.length;
                      o < a;
                      o += 1
                    ) {
                      var s = i[o],
                        l = s.x,
                        u = s.y;
                      l < e && (e = l),
                        l > t && (t = l),
                        u < n && (n = u),
                        u > r && (r = u);
                    }
                    return new Zu(e, n, t - e, r - n);
                  },
                },
                {
                  key: 'closestPoint',
                  value: function (e) {
                    var t = this.closestPointLength(e);
                    return this.pointAtLength(t);
                  },
                },
                {
                  key: 'closestPointLength',
                  value: function (e) {
                    var t = this.points,
                      n = t.length;
                    if (0 === n || 1 === n) return 0;
                    for (
                      var r = 0, i = 0, o = 1 / 0, a = 0, s = n - 1;
                      a < s;
                      a += 1
                    ) {
                      var l = new ec(t[a], t[a + 1]),
                        u = l.length(),
                        c = l.closestPointNormalizedLength(e),
                        f = l.pointAt(c).squaredDistance(e);
                      f < o && ((o = f), (i = r + c * u)), (r += u);
                    }
                    return i;
                  },
                },
                {
                  key: 'closestPointNormalizedLength',
                  value: function (e) {
                    var t = this.length();
                    return 0 === t ? 0 : this.closestPointLength(e) / t;
                  },
                },
                {
                  key: 'closestPointTangent',
                  value: function (e) {
                    var t = this.closestPointLength(e);
                    return this.tangentAtLength(t);
                  },
                },
                {
                  key: 'containsPoint',
                  value: function (e) {
                    if (0 === this.points.length) return !1;
                    for (
                      var t = Ku.clone(e),
                        n = t.x,
                        r = t.y,
                        i = this.points,
                        o = i.length,
                        a = o - 1,
                        s = 0,
                        l = 0;
                      l < o;
                      l += 1
                    ) {
                      var u = i[a],
                        c = i[l];
                      if (t.equals(u)) return !0;
                      var f = new ec(u, c);
                      if (f.containsPoint(e)) return !0;
                      if ((r <= u.y && r > c.y) || (r > u.y && r <= c.y)) {
                        var h = u.x - n > c.x - n ? u.x - n : c.x - n;
                        if (h >= 0) {
                          var d = new Ku(n + h, r),
                            g = new ec(e, d);
                          f.intersectsWithLine(g) && (s += 1);
                        }
                      }
                      a = l;
                    }
                    return s % 2 == 1;
                  },
                },
                {
                  key: 'intersectsWithLine',
                  value: function (e) {
                    for (
                      var t = [], n = 0, r = this.points.length - 1;
                      n < r;
                      n += 1
                    ) {
                      var i = this.points[n],
                        o = this.points[n + 1],
                        a = e.intersectsWithLine(new ec(i, o));
                      a && t.push(a);
                    }
                    return t.length > 0 ? t : null;
                  },
                },
                {
                  key: 'isDifferentiable',
                  value: function () {
                    for (var e = 0, t = this.points.length - 1; e < t; e += 1) {
                      var n = this.points[e],
                        r = this.points[e + 1];
                      if (new ec(n, r).isDifferentiable()) return !0;
                    }
                    return !1;
                  },
                },
                {
                  key: 'length',
                  value: function () {
                    for (
                      var e = 0, t = 0, n = this.points.length - 1;
                      t < n;
                      t += 1
                    ) {
                      var r = this.points[t],
                        i = this.points[t + 1];
                      e += r.distance(i);
                    }
                    return e;
                  },
                },
                {
                  key: 'pointAt',
                  value: function (e) {
                    var t = this.points,
                      n = t.length;
                    if (0 === n) return null;
                    if (1 === n) return t[0].clone();
                    if (e <= 0) return t[0].clone();
                    if (e >= 1) return t[n - 1].clone();
                    var r = this.length() * e;
                    return this.pointAtLength(r);
                  },
                },
                {
                  key: 'pointAtLength',
                  value: function (e) {
                    var t = this.points,
                      n = t.length;
                    if (0 === n) return null;
                    if (1 === n) return t[0].clone();
                    var r = !0;
                    e < 0 && ((r = !1), (e = -e));
                    for (var i = 0, o = 0, a = n - 1; o < a; o += 1) {
                      var s = r ? o : a - 1 - o,
                        l = t[s],
                        u = t[s + 1],
                        c = new ec(l, u),
                        f = l.distance(u);
                      if (e <= i + f)
                        return c.pointAtLength((r ? 1 : -1) * (e - i));
                      i += f;
                    }
                    return (r ? t[n - 1] : t[0]).clone();
                  },
                },
                {
                  key: 'tangentAt',
                  value: function (e) {
                    var t = this.points.length;
                    if (0 === t || 1 === t) return null;
                    e < 0 && (e = 0), e > 1 && (e = 1);
                    var n = this.length() * e;
                    return this.tangentAtLength(n);
                  },
                },
                {
                  key: 'tangentAtLength',
                  value: function (e) {
                    var t = this.points,
                      n = t.length;
                    if (0 === n || 1 === n) return null;
                    var r,
                      i = !0;
                    e < 0 && ((i = !1), (e = -e));
                    for (var o = 0, a = 0, s = n - 1; a < s; a += 1) {
                      var l = i ? a : s - 1 - a,
                        u = t[l],
                        c = t[l + 1],
                        f = new ec(u, c),
                        h = u.distance(c);
                      if (f.isDifferentiable()) {
                        if (e <= o + h)
                          return f.tangentAtLength((i ? 1 : -1) * (e - o));
                        r = f;
                      }
                      o += h;
                    }
                    if (r) {
                      var d = i ? 1 : 0;
                      return r.tangentAt(d);
                    }
                    return null;
                  },
                },
                {
                  key: 'simplify',
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      t = this.points;
                    if (t.length < 3) return this;
                    for (var n = e.threshold || 0, r = 0; t[r + 2]; ) {
                      var i = r,
                        o = r + 1,
                        a = r + 2,
                        s = t[i],
                        l = t[o],
                        u = t[a],
                        c = new ec(s, u),
                        f = c.closestPoint(l),
                        h = f.distance(l);
                      h <= n ? t.splice(o, 1) : (r += 1);
                    }
                    return this;
                  },
                },
                {
                  key: 'toHull',
                  value: function () {
                    var e = this.points,
                      t = e.length;
                    if (0 === t) return new n();
                    for (var r = e[0], i = 1; i < t; i += 1)
                      (e[i].y < r.y || (e[i].y === r.y && e[i].x > r.x)) &&
                        (r = e[i]);
                    for (var o = [], a = 0; a < t; a += 1) {
                      var s = r.theta(e[a]);
                      0 === s && (s = 360), o.push([e[a], a, s]);
                    }
                    if (
                      (o.sort(function (e, t) {
                        var n = e[2] - t[2];
                        return 0 === n && (n = t[1] - e[1]), n;
                      }),
                      o.length > 2)
                    ) {
                      var l = o[o.length - 1];
                      o.unshift(l);
                    }
                    for (
                      var u,
                        c = {},
                        f = [],
                        h = function (e) {
                          return ''.concat(e[0].toString(), '@').concat(e[1]);
                        };
                      0 !== o.length;

                    ) {
                      var d = o.pop(),
                        g = d[0];
                      if (!c[h(d)])
                        for (var p = !1; !p; )
                          if (f.length < 2) f.push(d), (p = !0);
                          else {
                            var v = f.pop(),
                              y = v[0],
                              m = f.pop(),
                              b = m[0],
                              k = b.cross(y, g);
                            if (k < 0)
                              f.push(m), f.push(v), f.push(d), (p = !0);
                            else if (0 === k) {
                              var w = y.angleBetween(b, g);
                              Math.abs(w - 180) < 1e-10 ||
                              y.equals(g) ||
                              b.equals(y)
                                ? ((c[h(v)] = y), f.push(m))
                                : Math.abs(((w + 1) % 360) - 1) < 1e-10 &&
                                  (f.push(m), o.push(v));
                            } else (c[h(v)] = y), f.push(m);
                          }
                    }
                    f.length > 2 && f.pop();
                    for (var x = -1, C = 0, S = f.length; C < S; C += 1) {
                      var E = f[C][1];
                      (void 0 === u || E < u) && ((u = E), (x = C));
                    }
                    var O = [];
                    if (x > 0) {
                      var P = f.slice(x),
                        A = f.slice(0, x);
                      O = P.concat(A);
                    } else O = f;
                    for (var M = [], T = 0, N = O.length; T < N; T += 1)
                      M.push(O[T][0]);
                    return new n(M);
                  },
                },
                {
                  key: 'equals',
                  value: function (e) {
                    var t = this;
                    return (
                      null != e &&
                      e.points.length === this.points.length &&
                      e.points.every(function (e, n) {
                        return e.equals(t.points[n]);
                      })
                    );
                  },
                },
                {
                  key: 'clone',
                  value: function () {
                    return new n(
                      this.points.map(function (e) {
                        return e.clone();
                      })
                    );
                  },
                },
                {
                  key: 'toJSON',
                  value: function () {
                    return this.points.map(function (e) {
                      return e.toJSON();
                    });
                  },
                },
                {
                  key: 'serialize',
                  value: function () {
                    return this.points
                      .map(function (e) {
                        return ''.concat(e.serialize());
                      })
                      .join(' ');
                  },
                },
              ]),
              n
            );
          })(Qu);
        !(function (e) {
          e.isPolyline = function (t) {
            return null != t && t instanceof e;
          };
        })(fc || (fc = {})),
          (function (e) {
            e.parse = function (t) {
              var n = t.trim();
              if ('' === n) return new e();
              for (
                var r = [], i = n.split(/\s*,\s*|\s+/), o = 0, a = i.length;
                o < a;
                o += 2
              )
                r.push({ x: +i[o], y: +i[o + 1] });
              return new e(r);
            };
          })(fc || (fc = {}));
        var hc = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n(e, r, i, o) {
            var a;
            return (
              y()(this, n),
              ((a = t.call(this)).PRECISION = 3),
              (a.start = Ku.create(e)),
              (a.controlPoint1 = Ku.create(r)),
              (a.controlPoint2 = Ku.create(i)),
              (a.end = Ku.create(o)),
              a
            );
          }
          return (
            b()(n, [
              {
                key: 'bbox',
                value: function () {
                  for (
                    var e,
                      t,
                      n,
                      r,
                      i,
                      o,
                      a,
                      s,
                      l,
                      u,
                      c,
                      f = this.start,
                      h = this.controlPoint1,
                      d = this.controlPoint2,
                      g = this.end,
                      p = f.x,
                      v = f.y,
                      y = h.x,
                      m = h.y,
                      b = d.x,
                      k = d.y,
                      w = g.x,
                      x = g.y,
                      C = [],
                      S = [],
                      E = [[], []],
                      O = 0;
                    O < 2;
                    O += 1
                  )
                    if (
                      (0 === O
                        ? ((t = 6 * p - 12 * y + 6 * b),
                          (e = -3 * p + 9 * y - 9 * b + 3 * w),
                          (n = 3 * y - 3 * p))
                        : ((t = 6 * v - 12 * m + 6 * k),
                          (e = -3 * v + 9 * m - 9 * k + 3 * x),
                          (n = 3 * m - 3 * v)),
                      Math.abs(e) < 1e-12)
                    ) {
                      if (Math.abs(t) < 1e-12) continue;
                      (r = -n / t) > 0 && r < 1 && S.push(r);
                    } else
                      (a = t * t - 4 * n * e),
                        (s = Math.sqrt(a)),
                        a < 0 ||
                          ((i = (-t + s) / (2 * e)) > 0 && i < 1 && S.push(i),
                          (o = (-t - s) / (2 * e)) > 0 && o < 1 && S.push(o));
                  for (var P = S.length, A = P; P; )
                    (l =
                      (c = 1 - (r = S[(P -= 1)])) * c * c * p +
                      3 * c * c * r * y +
                      3 * c * r * r * b +
                      r * r * r * w),
                      (E[0][P] = l),
                      (u =
                        c * c * c * v +
                        3 * c * c * r * m +
                        3 * c * r * r * k +
                        r * r * r * x),
                      (E[1][P] = u),
                      (C[P] = { X: l, Y: u });
                  (S[A] = 0),
                    (S[A + 1] = 1),
                    (C[A] = { X: p, Y: v }),
                    (C[A + 1] = { X: w, Y: x }),
                    (E[0][A] = p),
                    (E[1][A] = v),
                    (E[0][A + 1] = w),
                    (E[1][A + 1] = x),
                    (S.length = A + 2),
                    (E[0].length = A + 2),
                    (E[1].length = A + 2),
                    (C.length = A + 2);
                  var M = Math.min.apply(null, E[0]),
                    T = Math.min.apply(null, E[1]),
                    N = Math.max.apply(null, E[0]),
                    j = Math.max.apply(null, E[1]);
                  return new Zu(M, T, N - M, j - T);
                },
              },
              {
                key: 'closestPoint',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  return this.pointAtT(this.closestPointT(e, t));
                },
              },
              {
                key: 'closestPointLength',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.getOptions(t);
                  return this.lengthAtT(this.closestPointT(e, n), n);
                },
              },
              {
                key: 'closestPointNormalizedLength',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.getOptions(t),
                    r = this.closestPointLength(e, n);
                  if (!r) return 0;
                  var i = this.length(n);
                  return 0 === i ? 0 : r / i;
                },
              },
              {
                key: 'closestPointT',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.getPrecision(t),
                    r = this.getDivisions(t),
                    i = Math.pow(10, -n),
                    o = null,
                    a = 0,
                    s = 0,
                    l = 0,
                    u = 0,
                    c = 0,
                    f = null,
                    h = r.length,
                    d = h > 0 ? 1 / h : 0;
                  for (
                    r.forEach(function (t, n) {
                      var r = t.start.distance(e),
                        i = t.end.distance(e),
                        h = r + i;
                      (null == f || h < f) &&
                        ((o = t),
                        (a = n * d),
                        (s = (n + 1) * d),
                        (l = r),
                        (u = i),
                        (f = h),
                        (c = t.endpointDistance()));
                    });
                    ;

                  ) {
                    var g = l ? Math.abs(l - u) / l : 0,
                      p = null != u ? Math.abs(l - u) / u : 0,
                      v = g < i || p < i,
                      y = !l || l < c * i,
                      m = !u || u < c * i,
                      b = y || m;
                    if (v || b) return l <= u ? a : s;
                    var k = o.divide(0.5);
                    d /= 2;
                    var w = k[0].start.distance(e),
                      x = k[0].end.distance(e),
                      C = w + x,
                      S = k[1].start.distance(e),
                      E = k[1].end.distance(e),
                      O = S + E;
                    C <= O
                      ? ((o = k[0]), (s -= d), (l = w), (u = x))
                      : ((o = k[1]), (a += d), (l = S), (u = E));
                  }
                },
              },
              {
                key: 'closestPointTangent',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  return this.tangentAtT(this.closestPointT(e, t));
                },
              },
              {
                key: 'containsPoint',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.toPolyline(t);
                  return n.containsPoint(e);
                },
              },
              {
                key: 'divideAt',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (e <= 0) return this.divideAtT(0);
                  if (e >= 1) return this.divideAtT(1);
                  var n = this.tAt(e, t);
                  return this.divideAtT(n);
                },
              },
              {
                key: 'divideAtLength',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.tAtLength(e, t);
                  return this.divideAtT(n);
                },
              },
              {
                key: 'divide',
                value: function (e) {
                  return this.divideAtT(e);
                },
              },
              {
                key: 'divideAtT',
                value: function (e) {
                  var t = this.start,
                    r = this.controlPoint1,
                    i = this.controlPoint2,
                    o = this.end;
                  if (e <= 0) return [new n(t, t, t, t), new n(t, r, i, o)];
                  if (e >= 1) return [new n(t, r, i, o), new n(o, o, o, o)];
                  var a = this.getSkeletonPoints(e),
                    s = a.startControlPoint1,
                    l = a.startControlPoint2,
                    u = a.divider,
                    c = a.dividerControlPoint1,
                    f = a.dividerControlPoint2;
                  return [new n(t, s, l, u), new n(u, c, f, o)];
                },
              },
              {
                key: 'endpointDistance',
                value: function () {
                  return this.start.distance(this.end);
                },
              },
              {
                key: 'getSkeletonPoints',
                value: function (e) {
                  var t = this.start,
                    n = this.controlPoint1,
                    r = this.controlPoint2,
                    i = this.end;
                  if (e <= 0)
                    return {
                      startControlPoint1: t.clone(),
                      startControlPoint2: t.clone(),
                      divider: t.clone(),
                      dividerControlPoint1: n.clone(),
                      dividerControlPoint2: r.clone(),
                    };
                  if (e >= 1)
                    return {
                      startControlPoint1: n.clone(),
                      startControlPoint2: r.clone(),
                      divider: i.clone(),
                      dividerControlPoint1: i.clone(),
                      dividerControlPoint2: i.clone(),
                    };
                  var o = new ec(t, n).pointAt(e),
                    a = new ec(n, r).pointAt(e),
                    s = new ec(r, i).pointAt(e),
                    l = new ec(o, a).pointAt(e),
                    u = new ec(a, s).pointAt(e);
                  return {
                    startControlPoint1: o,
                    startControlPoint2: l,
                    divider: new ec(l, u).pointAt(e),
                    dividerControlPoint1: u,
                    dividerControlPoint2: s,
                  };
                },
              },
              {
                key: 'getSubdivisions',
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    t = this.getPrecision(e),
                    r = [
                      new n(
                        this.start,
                        this.controlPoint1,
                        this.controlPoint2,
                        this.end
                      ),
                    ];
                  if (0 === t) return r;
                  for (
                    var i = this.endpointDistance(),
                      o = Math.pow(10, -t),
                      a = 0,
                      s = function () {
                        a += 1;
                        var e = [];
                        r.forEach(function (t) {
                          var n = t.divide(0.5);
                          e.push(n[0], n[1]);
                        });
                        var t = e.reduce(function (e, t) {
                          return e + t.endpointDistance();
                        }, 0);
                        if (a > 1 && (0 !== t ? (t - i) / t : 0) < o)
                          return { v: e };
                        (r = e), (i = t);
                      };
                    ;

                  ) {
                    var l = s();
                    if ('object' === _()(l)) return l.v;
                  }
                },
              },
              {
                key: 'length',
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    t = this.getDivisions(e);
                  return t.reduce(function (e, t) {
                    return e + t.endpointDistance();
                  }, 0);
                },
              },
              {
                key: 'lengthAtT',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (e <= 0) return 0;
                  var n = void 0 === t.precision ? this.PRECISION : t.precision,
                    r = this.divide(e)[0];
                  return r.length({ precision: n });
                },
              },
              {
                key: 'pointAt',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (e <= 0) return this.start.clone();
                  if (e >= 1) return this.end.clone();
                  var n = this.tAt(e, t);
                  return this.pointAtT(n);
                },
              },
              {
                key: 'pointAtLength',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.tAtLength(e, t);
                  return this.pointAtT(n);
                },
              },
              {
                key: 'pointAtT',
                value: function (e) {
                  return e <= 0
                    ? this.start.clone()
                    : e >= 1
                    ? this.end.clone()
                    : this.getSkeletonPoints(e).divider;
                },
              },
              {
                key: 'isDifferentiable',
                value: function () {
                  var e = this.start,
                    t = this.controlPoint1,
                    n = this.controlPoint2,
                    r = this.end;
                  return !(e.equals(t) && t.equals(n) && n.equals(r));
                },
              },
              {
                key: 'tangentAt',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (!this.isDifferentiable()) return null;
                  e < 0 ? (e = 0) : e > 1 && (e = 1);
                  var n = this.tAt(e, t);
                  return this.tangentAtT(n);
                },
              },
              {
                key: 'tangentAtLength',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (!this.isDifferentiable()) return null;
                  var n = this.tAtLength(e, t);
                  return this.tangentAtT(n);
                },
              },
              {
                key: 'tangentAtT',
                value: function (e) {
                  if (!this.isDifferentiable()) return null;
                  e < 0 && (e = 0), e > 1 && (e = 1);
                  var t = this.getSkeletonPoints(e),
                    n = t.startControlPoint2,
                    r = t.dividerControlPoint1,
                    i = t.divider,
                    o = new ec(n, r);
                  return o.translate(i.x - n.x, i.y - n.y), o;
                },
              },
              {
                key: 'getPrecision',
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {};
                  return null == e.precision ? this.PRECISION : e.precision;
                },
              },
              {
                key: 'getDivisions',
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {};
                  if (null != e.subdivisions) return e.subdivisions;
                  var t = this.getPrecision(e);
                  return this.getSubdivisions({ precision: t });
                },
              },
              {
                key: 'getOptions',
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    t = this.getPrecision(e),
                    n = this.getDivisions(e);
                  return { precision: t, subdivisions: n };
                },
              },
              {
                key: 'tAt',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (e <= 0) return 0;
                  if (e >= 1) return 1;
                  var n = this.getOptions(t),
                    r = this.length(n),
                    i = r * e;
                  return this.tAtLength(i, n);
                },
              },
              {
                key: 'tAtLength',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = !0;
                  e < 0 && ((n = !1), (e = -e));
                  for (
                    var r,
                      i,
                      o = this.getPrecision(t),
                      a = this.getDivisions(t),
                      s = { precision: o, subdivisions: a },
                      l = null,
                      u = 0,
                      c = 0,
                      f = 0,
                      h = a.length,
                      d = h > 0 ? 1 / h : 0,
                      g = 0;
                    g < h;
                    g += 1
                  ) {
                    var p = n ? g : h - 1 - g,
                      v = a[g],
                      y = v.endpointDistance();
                    if (e <= f + y) {
                      (l = v),
                        (r = p * d),
                        (i = (p + 1) * d),
                        (u = n ? e - f : y + f - e),
                        (c = n ? y + f - e : e - f);
                      break;
                    }
                    f += y;
                  }
                  if (null == l) return n ? 1 : 0;
                  for (var m = this.length(s), b = Math.pow(10, -o); ; ) {
                    if ((0 !== m ? u / m : 0) < b) return r;
                    if ((0 !== m ? c / m : 0) < b) return i;
                    var k = void 0,
                      w = void 0,
                      x = l.divide(0.5);
                    d /= 2;
                    var C = x[0].endpointDistance(),
                      S = x[1].endpointDistance();
                    u <= C
                      ? ((l = x[0]), (i -= d), (w = C - (k = u)))
                      : ((l = x[1]), (r += d), (w = S - (k = u - C))),
                      (u = k),
                      (c = w);
                  }
                },
              },
              {
                key: 'toPoints',
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    t = this.getDivisions(e),
                    n = [t[0].start.clone()];
                  return (
                    t.forEach(function (e) {
                      return n.push(e.end.clone());
                    }),
                    n
                  );
                },
              },
              {
                key: 'toPolyline',
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {};
                  return new fc(this.toPoints(e));
                },
              },
              {
                key: 'scale',
                value: function (e, t, n) {
                  return (
                    this.start.scale(e, t, n),
                    this.controlPoint1.scale(e, t, n),
                    this.controlPoint2.scale(e, t, n),
                    this.end.scale(e, t, n),
                    this
                  );
                },
              },
              {
                key: 'rotate',
                value: function (e, t) {
                  return (
                    this.start.rotate(e, t),
                    this.controlPoint1.rotate(e, t),
                    this.controlPoint2.rotate(e, t),
                    this.end.rotate(e, t),
                    this
                  );
                },
              },
              {
                key: 'translate',
                value: function (e, t) {
                  return (
                    'number' == typeof e
                      ? (this.start.translate(e, t),
                        this.controlPoint1.translate(e, t),
                        this.controlPoint2.translate(e, t),
                        this.end.translate(e, t))
                      : (this.start.translate(e),
                        this.controlPoint1.translate(e),
                        this.controlPoint2.translate(e),
                        this.end.translate(e)),
                    this
                  );
                },
              },
              {
                key: 'equals',
                value: function (e) {
                  return (
                    null != e &&
                    this.start.equals(e.start) &&
                    this.controlPoint1.equals(e.controlPoint1) &&
                    this.controlPoint2.equals(e.controlPoint2) &&
                    this.end.equals(e.end)
                  );
                },
              },
              {
                key: 'clone',
                value: function () {
                  return new n(
                    this.start,
                    this.controlPoint1,
                    this.controlPoint2,
                    this.end
                  );
                },
              },
              {
                key: 'toJSON',
                value: function () {
                  return {
                    start: this.start.toJSON(),
                    controlPoint1: this.controlPoint1.toJSON(),
                    controlPoint2: this.controlPoint2.toJSON(),
                    end: this.end.toJSON(),
                  };
                },
              },
              {
                key: 'serialize',
                value: function () {
                  return [
                    this.start.serialize(),
                    this.controlPoint1.serialize(),
                    this.controlPoint2.serialize(),
                    this.end.serialize(),
                  ].join(' ');
                },
              },
            ]),
            n
          );
        })(Qu);
        !(function (e) {
          e.isCurve = function (t) {
            return null != t && t instanceof e;
          };
        })(hc || (hc = {})),
          (function (e) {
            function t(e) {
              var t = e.length,
                n = [],
                r = [],
                i = 2;
              n[0] = e[0] / i;
              for (var o = 1; o < t; o += 1)
                (r[o] = 1 / i),
                  (i = (o < t - 1 ? 4 : 3.5) - r[o]),
                  (n[o] = (e[o] - n[o - 1]) / i);
              for (var a = 1; a < t; a += 1)
                n[t - a - 1] -= r[t - a] * n[t - a];
              return n;
            }
            e.throughPoints = function (n) {
              if (null == n || (Array.isArray(n) && n.length < 2))
                throw new Error('At least 2 points are required');
              for (
                var r = (function (e) {
                    var n = e.map(function (e) {
                        return Ku.clone(e);
                      }),
                      r = [],
                      i = [],
                      o = n.length - 1;
                    if (1 === o)
                      return (
                        (r[0] = new Ku(
                          (2 * n[0].x + n[1].x) / 3,
                          (2 * n[0].y + n[1].y) / 3
                        )),
                        (i[0] = new Ku(
                          2 * r[0].x - n[0].x,
                          2 * r[0].y - n[0].y
                        )),
                        [r, i]
                      );
                    for (var a = [], s = 1; s < o - 1; s += 1)
                      a[s] = 4 * n[s].x + 2 * n[s + 1].x;
                    (a[0] = n[0].x + 2 * n[1].x),
                      (a[o - 1] = (8 * n[o - 1].x + n[o].x) / 2);
                    for (var l = t(a), u = 1; u < o - 1; u += 1)
                      a[u] = 4 * n[u].y + 2 * n[u + 1].y;
                    (a[0] = n[0].y + 2 * n[1].y),
                      (a[o - 1] = (8 * n[o - 1].y + n[o].y) / 2);
                    for (var c = t(a), f = 0; f < o; f += 1)
                      r.push(new Ku(l[f], c[f])),
                        f < o - 1
                          ? i.push(
                              new Ku(
                                2 * n[f + 1].x - l[f + 1],
                                2 * n[f + 1].y - c[f + 1]
                              )
                            )
                          : i.push(
                              new Ku(
                                (n[o].x + l[o - 1]) / 2,
                                (n[o].y + c[o - 1]) / 2
                              )
                            );
                    return [r, i];
                  })(n),
                  i = [],
                  o = 0,
                  a = r[0].length;
                o < a;
                o += 1
              ) {
                var s = new Ku(r[0][o].x, r[0][o].y),
                  l = new Ku(r[1][o].x, r[1][o].y);
                i.push(new e(n[o], s, l, n[o + 1]));
              }
              return i;
            };
          })(hc || (hc = {}));
        var dc = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              var e;
              return (
                y()(this, n),
                ((e = t.apply(this, arguments)).isVisible = !0),
                (e.isSegment = !0),
                (e.isSubpathStart = !1),
                e
              );
            }
            return (
              b()(n, [
                {
                  key: 'end',
                  get: function () {
                    return this.endPoint;
                  },
                },
                {
                  key: 'start',
                  get: function () {
                    if (null == this.previousSegment)
                      throw new Error(
                        'Missing previous segment. (This segment cannot be the first segment of a path, or segment has not yet been added to a path.)'
                      );
                    return this.previousSegment.end;
                  },
                },
                {
                  key: 'closestPointT',
                  value: function (e, t) {
                    if (this.closestPointNormalizedLength)
                      return this.closestPointNormalizedLength(e);
                    throw new Error(
                      'Neither `closestPointT` nor `closestPointNormalizedLength` method is implemented.'
                    );
                  },
                },
                {
                  key: 'lengthAtT',
                  value: function (e, t) {
                    if (e <= 0) return 0;
                    var n = this.length();
                    return e >= 1 ? n : n * e;
                  },
                },
                {
                  key: 'divideAtT',
                  value: function (e) {
                    if (this.divideAt) return this.divideAt(e);
                    throw new Error(
                      'Neither `divideAtT` nor `divideAt` method is implemented.'
                    );
                  },
                },
                {
                  key: 'pointAtT',
                  value: function (e) {
                    if (this.pointAt) return this.pointAt(e);
                    throw new Error(
                      'Neither `pointAtT` nor `pointAt` method is implemented.'
                    );
                  },
                },
                {
                  key: 'tangentAtT',
                  value: function (e) {
                    if (this.tangentAt) return this.tangentAt(e);
                    throw new Error(
                      'Neither `tangentAtT` nor `tangentAt` method is implemented.'
                    );
                  },
                },
              ]),
              n
            );
          })(Qu),
          gc = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n(e, r) {
              var i;
              return (
                y()(this, n),
                (i = t.call(this)),
                ec.isLine(e)
                  ? (i.endPoint = e.end.clone().round(2))
                  : (i.endPoint = Ku.create(e, r).round(2)),
                i
              );
            }
            return (
              b()(n, [
                {
                  key: 'type',
                  get: function () {
                    return 'L';
                  },
                },
                {
                  key: 'line',
                  get: function () {
                    return new ec(this.start, this.end);
                  },
                },
                {
                  key: 'bbox',
                  value: function () {
                    return this.line.bbox();
                  },
                },
                {
                  key: 'closestPoint',
                  value: function (e) {
                    return this.line.closestPoint(e);
                  },
                },
                {
                  key: 'closestPointLength',
                  value: function (e) {
                    return this.line.closestPointLength(e);
                  },
                },
                {
                  key: 'closestPointNormalizedLength',
                  value: function (e) {
                    return this.line.closestPointNormalizedLength(e);
                  },
                },
                {
                  key: 'closestPointTangent',
                  value: function (e) {
                    return this.line.closestPointTangent(e);
                  },
                },
                {
                  key: 'length',
                  value: function () {
                    return this.line.length();
                  },
                },
                {
                  key: 'divideAt',
                  value: function (e) {
                    var t = this.line.divideAt(e);
                    return [new n(t[0]), new n(t[1])];
                  },
                },
                {
                  key: 'divideAtLength',
                  value: function (e) {
                    var t = this.line.divideAtLength(e);
                    return [new n(t[0]), new n(t[1])];
                  },
                },
                {
                  key: 'getSubdivisions',
                  value: function () {
                    return [];
                  },
                },
                {
                  key: 'pointAt',
                  value: function (e) {
                    return this.line.pointAt(e);
                  },
                },
                {
                  key: 'pointAtLength',
                  value: function (e) {
                    return this.line.pointAtLength(e);
                  },
                },
                {
                  key: 'tangentAt',
                  value: function (e) {
                    return this.line.tangentAt(e);
                  },
                },
                {
                  key: 'tangentAtLength',
                  value: function (e) {
                    return this.line.tangentAtLength(e);
                  },
                },
                {
                  key: 'isDifferentiable',
                  value: function () {
                    return (
                      null != this.previousSegment &&
                      !this.start.equals(this.end)
                    );
                  },
                },
                {
                  key: 'clone',
                  value: function () {
                    return new n(this.end);
                  },
                },
                {
                  key: 'scale',
                  value: function (e, t, n) {
                    return this.end.scale(e, t, n), this;
                  },
                },
                {
                  key: 'rotate',
                  value: function (e, t) {
                    return this.end.rotate(e, t), this;
                  },
                },
                {
                  key: 'translate',
                  value: function (e, t) {
                    return (
                      'number' == typeof e
                        ? this.end.translate(e, t)
                        : this.end.translate(e),
                      this
                    );
                  },
                },
                {
                  key: 'equals',
                  value: function (e) {
                    return (
                      this.type === e.type &&
                      this.start.equals(e.start) &&
                      this.end.equals(e.end)
                    );
                  },
                },
                {
                  key: 'toJSON',
                  value: function () {
                    return {
                      type: this.type,
                      start: this.start.toJSON(),
                      end: this.end.toJSON(),
                    };
                  },
                },
                {
                  key: 'serialize',
                  value: function () {
                    var e = this.end;
                    return ''
                      .concat(this.type, ' ')
                      .concat(e.x, ' ')
                      .concat(e.y);
                  },
                },
              ]),
              n
            );
          })(dc);
        !(function (e) {
          e.create = function () {
            for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
              n[r] = arguments[r];
            var i = n.length,
              o = n[0];
            if (ec.isLine(o)) return new e(o);
            if (Ku.isPointLike(o))
              return 1 === i
                ? new e(o)
                : n.map(function (t) {
                    return new e(t);
                  });
            if (2 === i) return new e(+n[0], +n[1]);
            for (var a = [], s = 0; s < i; s += 2) {
              var l = +n[s],
                u = +n[s + 1];
              a.push(new e(l, u));
            }
            return a;
          };
        })(gc || (gc = {}));
        var pc = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n() {
            return y()(this, n), t.apply(this, arguments);
          }
          return (
            b()(n, [
              {
                key: 'end',
                get: function () {
                  if (!this.subpathStartSegment)
                    throw new Error(
                      'Missing subpath start segment. (This segment needs a subpath start segment (e.g. MoveTo), or segment has not yet been added to a path.)'
                    );
                  return this.subpathStartSegment.end;
                },
              },
              {
                key: 'type',
                get: function () {
                  return 'Z';
                },
              },
              {
                key: 'line',
                get: function () {
                  return new ec(this.start, this.end);
                },
              },
              {
                key: 'bbox',
                value: function () {
                  return this.line.bbox();
                },
              },
              {
                key: 'closestPoint',
                value: function (e) {
                  return this.line.closestPoint(e);
                },
              },
              {
                key: 'closestPointLength',
                value: function (e) {
                  return this.line.closestPointLength(e);
                },
              },
              {
                key: 'closestPointNormalizedLength',
                value: function (e) {
                  return this.line.closestPointNormalizedLength(e);
                },
              },
              {
                key: 'closestPointTangent',
                value: function (e) {
                  return this.line.closestPointTangent(e);
                },
              },
              {
                key: 'length',
                value: function () {
                  return this.line.length();
                },
              },
              {
                key: 'divideAt',
                value: function (e) {
                  var t = this.line.divideAt(e);
                  return [
                    t[1].isDifferentiable() ? new gc(t[0]) : this.clone(),
                    new gc(t[1]),
                  ];
                },
              },
              {
                key: 'divideAtLength',
                value: function (e) {
                  var t = this.line.divideAtLength(e);
                  return [
                    t[1].isDifferentiable() ? new gc(t[0]) : this.clone(),
                    new gc(t[1]),
                  ];
                },
              },
              {
                key: 'getSubdivisions',
                value: function () {
                  return [];
                },
              },
              {
                key: 'pointAt',
                value: function (e) {
                  return this.line.pointAt(e);
                },
              },
              {
                key: 'pointAtLength',
                value: function (e) {
                  return this.line.pointAtLength(e);
                },
              },
              {
                key: 'tangentAt',
                value: function (e) {
                  return this.line.tangentAt(e);
                },
              },
              {
                key: 'tangentAtLength',
                value: function (e) {
                  return this.line.tangentAtLength(e);
                },
              },
              {
                key: 'isDifferentiable',
                value: function () {
                  return (
                    !(!this.previousSegment || !this.subpathStartSegment) &&
                    !this.start.equals(this.end)
                  );
                },
              },
              {
                key: 'scale',
                value: function () {
                  return this;
                },
              },
              {
                key: 'rotate',
                value: function () {
                  return this;
                },
              },
              {
                key: 'translate',
                value: function () {
                  return this;
                },
              },
              {
                key: 'equals',
                value: function (e) {
                  return (
                    this.type === e.type &&
                    this.start.equals(e.start) &&
                    this.end.equals(e.end)
                  );
                },
              },
              {
                key: 'clone',
                value: function () {
                  return new n();
                },
              },
              {
                key: 'toJSON',
                value: function () {
                  return {
                    type: this.type,
                    start: this.start.toJSON(),
                    end: this.end.toJSON(),
                  };
                },
              },
              {
                key: 'serialize',
                value: function () {
                  return this.type;
                },
              },
            ]),
            n
          );
        })(dc);
        !(function (e) {
          e.create = function () {
            return new e();
          };
        })(pc || (pc = {}));
        var vc = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n(e, r) {
            var i;
            return (
              y()(this, n),
              ((i = t.call(this)).isVisible = !1),
              (i.isSubpathStart = !0),
              ec.isLine(e) || hc.isCurve(e)
                ? (i.endPoint = e.end.clone().round(2))
                : (i.endPoint = Ku.create(e, r).round(2)),
              i
            );
          }
          return (
            b()(n, [
              {
                key: 'start',
                get: function () {
                  throw new Error(
                    'Illegal access. Moveto segments should not need a start property.'
                  );
                },
              },
              {
                key: 'type',
                get: function () {
                  return 'M';
                },
              },
              {
                key: 'bbox',
                value: function () {
                  return null;
                },
              },
              {
                key: 'closestPoint',
                value: function () {
                  return this.end.clone();
                },
              },
              {
                key: 'closestPointLength',
                value: function () {
                  return 0;
                },
              },
              {
                key: 'closestPointNormalizedLength',
                value: function () {
                  return 0;
                },
              },
              {
                key: 'closestPointT',
                value: function () {
                  return 1;
                },
              },
              {
                key: 'closestPointTangent',
                value: function () {
                  return null;
                },
              },
              {
                key: 'length',
                value: function () {
                  return 0;
                },
              },
              {
                key: 'lengthAtT',
                value: function () {
                  return 0;
                },
              },
              {
                key: 'divideAt',
                value: function () {
                  return [this.clone(), this.clone()];
                },
              },
              {
                key: 'divideAtLength',
                value: function () {
                  return [this.clone(), this.clone()];
                },
              },
              {
                key: 'getSubdivisions',
                value: function () {
                  return [];
                },
              },
              {
                key: 'pointAt',
                value: function () {
                  return this.end.clone();
                },
              },
              {
                key: 'pointAtLength',
                value: function () {
                  return this.end.clone();
                },
              },
              {
                key: 'pointAtT',
                value: function () {
                  return this.end.clone();
                },
              },
              {
                key: 'tangentAt',
                value: function () {
                  return null;
                },
              },
              {
                key: 'tangentAtLength',
                value: function () {
                  return null;
                },
              },
              {
                key: 'tangentAtT',
                value: function () {
                  return null;
                },
              },
              {
                key: 'isDifferentiable',
                value: function () {
                  return !1;
                },
              },
              {
                key: 'scale',
                value: function (e, t, n) {
                  return this.end.scale(e, t, n), this;
                },
              },
              {
                key: 'rotate',
                value: function (e, t) {
                  return this.end.rotate(e, t), this;
                },
              },
              {
                key: 'translate',
                value: function (e, t) {
                  return (
                    'number' == typeof e
                      ? this.end.translate(e, t)
                      : this.end.translate(e),
                    this
                  );
                },
              },
              {
                key: 'clone',
                value: function () {
                  return new n(this.end);
                },
              },
              {
                key: 'equals',
                value: function (e) {
                  return this.type === e.type && this.end.equals(e.end);
                },
              },
              {
                key: 'toJSON',
                value: function () {
                  return { type: this.type, end: this.end.toJSON() };
                },
              },
              {
                key: 'serialize',
                value: function () {
                  var e = this.end;
                  return ''.concat(this.type, ' ').concat(e.x, ' ').concat(e.y);
                },
              },
            ]),
            n
          );
        })(dc);
        !(function (e) {
          e.create = function () {
            var t = arguments.length,
              n = arguments.length <= 0 ? void 0 : arguments[0];
            if (ec.isLine(n)) return new e(n);
            if (hc.isCurve(n)) return new e(n);
            if (Ku.isPointLike(n)) {
              if (1 === t) return new e(n);
              for (var r = [], i = 0; i < t; i += 1)
                0 === i
                  ? r.push(
                      new e(
                        i < 0 || arguments.length <= i ? void 0 : arguments[i]
                      )
                    )
                  : r.push(
                      new gc(
                        i < 0 || arguments.length <= i ? void 0 : arguments[i]
                      )
                    );
              return r;
            }
            if (2 === t)
              return new e(
                +(arguments.length <= 0 ? void 0 : arguments[0]),
                +(arguments.length <= 1 ? void 0 : arguments[1])
              );
            for (var o = [], a = 0; a < t; a += 2) {
              var s = +(a < 0 || arguments.length <= a ? void 0 : arguments[a]),
                l = +(a + 1 < 0 || arguments.length <= a + 1
                  ? void 0
                  : arguments[a + 1]);
              0 === a ? o.push(new e(s, l)) : o.push(new gc(s, l));
            }
            return o;
          };
        })(vc || (vc = {}));
        var yc = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n(e, r, i, o, a, s) {
            var l;
            return (
              y()(this, n),
              (l = t.call(this)),
              hc.isCurve(e)
                ? ((l.controlPoint1 = e.controlPoint1.clone().round(2)),
                  (l.controlPoint2 = e.controlPoint2.clone().round(2)),
                  (l.endPoint = e.end.clone().round(2)))
                : 'number' == typeof e
                ? ((l.controlPoint1 = new Ku(e, r).round(2)),
                  (l.controlPoint2 = new Ku(i, o).round(2)),
                  (l.endPoint = new Ku(a, s).round(2)))
                : ((l.controlPoint1 = Ku.create(e).round(2)),
                  (l.controlPoint2 = Ku.create(r).round(2)),
                  (l.endPoint = Ku.create(i).round(2))),
              l
            );
          }
          return (
            b()(n, [
              {
                key: 'type',
                get: function () {
                  return 'C';
                },
              },
              {
                key: 'curve',
                get: function () {
                  return new hc(
                    this.start,
                    this.controlPoint1,
                    this.controlPoint2,
                    this.end
                  );
                },
              },
              {
                key: 'bbox',
                value: function () {
                  return this.curve.bbox();
                },
              },
              {
                key: 'closestPoint',
                value: function (e) {
                  return this.curve.closestPoint(e);
                },
              },
              {
                key: 'closestPointLength',
                value: function (e) {
                  return this.curve.closestPointLength(e);
                },
              },
              {
                key: 'closestPointNormalizedLength',
                value: function (e) {
                  return this.curve.closestPointNormalizedLength(e);
                },
              },
              {
                key: 'closestPointTangent',
                value: function (e) {
                  return this.curve.closestPointTangent(e);
                },
              },
              {
                key: 'length',
                value: function () {
                  return this.curve.length();
                },
              },
              {
                key: 'divideAt',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    r = this.curve.divideAt(e, t);
                  return [new n(r[0]), new n(r[1])];
                },
              },
              {
                key: 'divideAtLength',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    r = this.curve.divideAtLength(e, t);
                  return [new n(r[0]), new n(r[1])];
                },
              },
              {
                key: 'divideAtT',
                value: function (e) {
                  var t = this.curve.divideAtT(e);
                  return [new n(t[0]), new n(t[1])];
                },
              },
              {
                key: 'getSubdivisions',
                value: function () {
                  return [];
                },
              },
              {
                key: 'pointAt',
                value: function (e) {
                  return this.curve.pointAt(e);
                },
              },
              {
                key: 'pointAtLength',
                value: function (e) {
                  return this.curve.pointAtLength(e);
                },
              },
              {
                key: 'tangentAt',
                value: function (e) {
                  return this.curve.tangentAt(e);
                },
              },
              {
                key: 'tangentAtLength',
                value: function (e) {
                  return this.curve.tangentAtLength(e);
                },
              },
              {
                key: 'isDifferentiable',
                value: function () {
                  if (!this.previousSegment) return !1;
                  var e = this.start,
                    t = this.controlPoint1,
                    n = this.controlPoint2,
                    r = this.end;
                  return !(e.equals(t) && t.equals(n) && n.equals(r));
                },
              },
              {
                key: 'scale',
                value: function (e, t, n) {
                  return (
                    this.controlPoint1.scale(e, t, n),
                    this.controlPoint2.scale(e, t, n),
                    this.end.scale(e, t, n),
                    this
                  );
                },
              },
              {
                key: 'rotate',
                value: function (e, t) {
                  return (
                    this.controlPoint1.rotate(e, t),
                    this.controlPoint2.rotate(e, t),
                    this.end.rotate(e, t),
                    this
                  );
                },
              },
              {
                key: 'translate',
                value: function (e, t) {
                  return (
                    'number' == typeof e
                      ? (this.controlPoint1.translate(e, t),
                        this.controlPoint2.translate(e, t),
                        this.end.translate(e, t))
                      : (this.controlPoint1.translate(e),
                        this.controlPoint2.translate(e),
                        this.end.translate(e)),
                    this
                  );
                },
              },
              {
                key: 'equals',
                value: function (e) {
                  return (
                    this.start.equals(e.start) &&
                    this.end.equals(e.end) &&
                    this.controlPoint1.equals(e.controlPoint1) &&
                    this.controlPoint2.equals(e.controlPoint2)
                  );
                },
              },
              {
                key: 'clone',
                value: function () {
                  return new n(
                    this.controlPoint1,
                    this.controlPoint2,
                    this.end
                  );
                },
              },
              {
                key: 'toJSON',
                value: function () {
                  return {
                    type: this.type,
                    start: this.start.toJSON(),
                    controlPoint1: this.controlPoint1.toJSON(),
                    controlPoint2: this.controlPoint2.toJSON(),
                    end: this.end.toJSON(),
                  };
                },
              },
              {
                key: 'serialize',
                value: function () {
                  var e = this.controlPoint1,
                    t = this.controlPoint2,
                    n = this.end;
                  return [this.type, e.x, e.y, t.x, t.y, n.x, n.y].join(' ');
                },
              },
            ]),
            n
          );
        })(dc);
        function mc(e, t, n) {
          return {
            x: e * Math.cos(n) - t * Math.sin(n),
            y: e * Math.sin(n) + t * Math.cos(n),
          };
        }
        function bc(e, t, n, r, i, o) {
          var a = 1 / 3,
            s = 2 / 3;
          return [
            a * e + s * n,
            a * t + s * r,
            a * i + s * n,
            a * o + s * r,
            i,
            o,
          ];
        }
        function kc(e, t, n, r, i, o, a, s, l, u) {
          var c,
            f,
            h,
            d,
            g,
            p = (120 * Math.PI) / 180,
            v = (Math.PI / 180) * (+i || 0),
            y = [];
          if (u) (f = u[0]), (h = u[1]), (d = u[2]), (g = u[3]);
          else {
            (e = (c = mc(e, t, -v)).x), (t = c.y);
            var m = (e - (s = (c = mc(s, l, -v)).x)) / 2,
              b = (t - (l = c.y)) / 2,
              k = (m * m) / (n * n) + (b * b) / (r * r);
            k > 1 && ((n *= k = Math.sqrt(k)), (r *= k));
            var w = n * n,
              x = r * r,
              C =
                (o === a ? -1 : 1) *
                Math.sqrt(
                  Math.abs(
                    (w * x - w * b * b - x * m * m) / (w * b * b + x * m * m)
                  )
                );
            (d = (C * n * b) / r + (e + s) / 2),
              (g = (C * -r * m) / n + (t + l) / 2),
              (f = Math.asin((t - g) / r)),
              (h = Math.asin((l - g) / r)),
              (f = e < d ? Math.PI - f : f),
              (h = s < d ? Math.PI - h : h),
              f < 0 && (f = 2 * Math.PI + f),
              h < 0 && (h = 2 * Math.PI + h),
              a && f > h && (f -= 2 * Math.PI),
              !a && h > f && (h -= 2 * Math.PI);
          }
          var S = h - f;
          if (Math.abs(S) > p) {
            var E = h,
              O = s,
              P = l;
            (h = f + p * (a && h > f ? 1 : -1)),
              (y = kc(
                (s = d + n * Math.cos(h)),
                (l = g + r * Math.sin(h)),
                n,
                r,
                i,
                0,
                a,
                O,
                P,
                [h, E, d, g]
              ));
          }
          S = h - f;
          var A = Math.cos(f),
            M = Math.sin(f),
            T = Math.cos(h),
            N = Math.sin(h),
            j = Math.tan(S / 4),
            L = (4 / 3) * (n * j),
            R = (4 / 3) * (r * j),
            _ = [e, t],
            I = [e + L * M, t - R * A],
            D = [s + L * N, l - R * T],
            z = [s, l];
          if (((I[0] = 2 * _[0] - I[0]), (I[1] = 2 * _[1] - I[1]), u))
            return [I, D, z].concat(y);
          for (
            var B = [],
              V = (y = [I, D, z].concat(y).join().split(',')).length,
              F = 0;
            F < V;
            F += 1
          )
            B[F] =
              F % 2 ? mc(+y[F - 1], +y[F], v).y : mc(+y[F], +y[F + 1], v).x;
          return B;
        }
        function wc(e) {
          var t = (function (e) {
            if (!e) return null;
            var t = '\t\n\v\f\r   ᠎             　\u2028\u2029',
              n = new RegExp(
                '([a-z])['
                  .concat(t, ',]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[')
                  .concat(t, ']*,?[')
                  .concat(t, ']*)+)'),
                'ig'
              ),
              r = new RegExp(
                '(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)['
                  .concat(t, ']*,?[')
                  .concat(t, ']*'),
                'ig'
              ),
              i = {
                a: 7,
                c: 6,
                h: 1,
                l: 2,
                m: 2,
                q: 4,
                s: 4,
                t: 2,
                v: 1,
                z: 0,
              },
              o = [];
            return (
              e.replace(n, function (e, t, n) {
                var a = [],
                  s = t.toLowerCase();
                n.replace(r, function (e, t) {
                  return t && a.push(+t), e;
                }),
                  'm' === s &&
                    a.length > 2 &&
                    (o.push([t].concat(L()(a.splice(0, 2)))),
                    (s = 'l'),
                    (t = 'm' === t ? 'l' : 'L'));
                for (
                  var l = i[s];
                  a.length >= l && (o.push([t].concat(L()(a.splice(0, l)))), l);

                );
                return e;
              }),
              o
            );
          })(e);
          if (!t || !t.length) return [['M', 0, 0]];
          for (
            var n = 0, r = 0, i = 0, o = 0, a = [], s = 0, l = t.length;
            s < l;
            s += 1
          ) {
            var u = [];
            a.push(u);
            var c = t[s],
              f = c[0];
            if (f !== f.toUpperCase())
              switch (((u[0] = f.toUpperCase()), u[0])) {
                case 'A':
                  (u[1] = c[1]),
                    (u[2] = c[2]),
                    (u[3] = c[3]),
                    (u[4] = c[4]),
                    (u[5] = c[5]),
                    (u[6] = +c[6] + n),
                    (u[7] = +c[7] + r);
                  break;
                case 'V':
                  u[1] = +c[1] + r;
                  break;
                case 'H':
                  u[1] = +c[1] + n;
                  break;
                case 'M':
                  (i = +c[1] + n), (o = +c[2] + r);
                  for (var h = 1, d = c.length; h < d; h += 1)
                    u[h] = +c[h] + (h % 2 ? n : r);
                  break;
                default:
                  for (var g = 1, p = c.length; g < p; g += 1)
                    u[g] = +c[g] + (g % 2 ? n : r);
              }
            else for (var v = 0, y = c.length; v < y; v += 1) u[v] = c[v];
            switch (u[0]) {
              case 'Z':
                (n = +i), (r = +o);
                break;
              case 'H':
                n = u[1];
                break;
              case 'V':
                r = u[1];
                break;
              case 'M':
                (i = u[u.length - 2]),
                  (o = u[u.length - 1]),
                  (n = u[u.length - 2]),
                  (r = u[u.length - 1]);
                break;
              default:
                (n = u[u.length - 2]), (r = u[u.length - 1]);
            }
          }
          return a;
        }
        function xc(e) {
          var t = wc(e),
            n = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null };
          function r(e, t, n) {
            var r, i;
            if (!e) return ['C', t.x, t.y, t.x, t.y, t.x, t.y];
            switch (
              (e[0] in { T: 1, Q: 1 } || ((t.qx = null), (t.qy = null)), e[0])
            ) {
              case 'M':
                (t.X = e[1]), (t.Y = e[2]);
                break;
              case 'A':
                return 0 === parseFloat(e[1]) || 0 === parseFloat(e[2])
                  ? ['L', e[6], e[7]]
                  : ['C'].concat(kc.apply(0, [t.x, t.y].concat(e.slice(1))));
              case 'S':
                return (
                  'C' === n || 'S' === n
                    ? ((r = 2 * t.x - t.bx), (i = 2 * t.y - t.by))
                    : ((r = t.x), (i = t.y)),
                  ['C', r, i].concat(e.slice(1))
                );
              case 'T':
                return (
                  'Q' === n || 'T' === n
                    ? ((t.qx = 2 * t.x - t.qx), (t.qy = 2 * t.y - t.qy))
                    : ((t.qx = t.x), (t.qy = t.y)),
                  ['C'].concat(bc(t.x, t.y, t.qx, t.qy, e[1], e[2]))
                );
              case 'Q':
                return (
                  (t.qx = e[1]),
                  (t.qy = e[2]),
                  ['C'].concat(bc(t.x, t.y, e[1], e[2], e[3], e[4]))
                );
              case 'H':
                return ['L'].concat(e[1], t.y);
              case 'V':
                return ['L'].concat(t.x, e[1]);
            }
            return e;
          }
          function i(e, n) {
            if (e[n].length > 7) {
              e[n].shift();
              for (var r = e[n]; r.length; )
                (o[n] = 'A'),
                  (n += 1),
                  e.splice(n, 0, ['C'].concat(r.splice(0, 6)));
              e.splice(n, 1), (s = t.length);
            }
          }
          for (var o = [], a = '', s = t.length, l = 0; l < s; l += 1) {
            var u = '';
            t[l] && (u = t[l][0]),
              'C' !== u && ((o[l] = u), l > 0 && (a = o[l - 1])),
              (t[l] = r(t[l], n, a)),
              'A' !== o[l] && 'C' === u && (o[l] = 'C'),
              i(t, l);
            var c = t[l],
              f = c.length;
            (n.x = c[f - 2]),
              (n.y = c[f - 1]),
              (n.bx = parseFloat(c[f - 4]) || n.x),
              (n.by = parseFloat(c[f - 3]) || n.y);
          }
          return (t[0][0] && 'M' === t[0][0]) || t.unshift(['M', 0, 0]), t;
        }
        function Cc(e) {
          return xc(e)
            .map(function (e) {
              return e.map(function (e) {
                return 'string' == typeof e ? e : Yu.round(e, 2);
              });
            })
            .join(',')
            .split(',')
            .join(' ');
        }
        !(function (e) {
          e.create = function () {
            var t = arguments.length,
              n = arguments.length <= 0 ? void 0 : arguments[0];
            if (hc.isCurve(n)) return new e(n);
            if (Ku.isPointLike(n)) {
              if (3 === t)
                return new e(
                  arguments.length <= 0 ? void 0 : arguments[0],
                  arguments.length <= 1 ? void 0 : arguments[1],
                  arguments.length <= 2 ? void 0 : arguments[2]
                );
              for (var r = [], i = 0; i < t; i += 3)
                r.push(
                  new e(
                    i < 0 || arguments.length <= i ? void 0 : arguments[i],
                    i + 1 < 0 || arguments.length <= i + 1
                      ? void 0
                      : arguments[i + 1],
                    i + 2 < 0 || arguments.length <= i + 2
                      ? void 0
                      : arguments[i + 2]
                  )
                );
              return r;
            }
            if (6 === t)
              return new e(
                arguments.length <= 0 ? void 0 : arguments[0],
                arguments.length <= 1 ? void 0 : arguments[1],
                arguments.length <= 2 ? void 0 : arguments[2],
                arguments.length <= 3 ? void 0 : arguments[3],
                arguments.length <= 4 ? void 0 : arguments[4],
                arguments.length <= 5 ? void 0 : arguments[5]
              );
            for (var o = [], a = 0; a < t; a += 6)
              o.push(
                new e(
                  a < 0 || arguments.length <= a ? void 0 : arguments[a],
                  a + 1 < 0 || arguments.length <= a + 1
                    ? void 0
                    : arguments[a + 1],
                  a + 2 < 0 || arguments.length <= a + 2
                    ? void 0
                    : arguments[a + 2],
                  a + 3 < 0 || arguments.length <= a + 3
                    ? void 0
                    : arguments[a + 3],
                  a + 4 < 0 || arguments.length <= a + 4
                    ? void 0
                    : arguments[a + 4],
                  a + 5 < 0 || arguments.length <= a + 5
                    ? void 0
                    : arguments[a + 5]
                )
              );
            return o;
          };
        })(yc || (yc = {}));
        var Sc = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n(e) {
            var r;
            if (
              (y()(this, n),
              ((r = t.call(this)).PRECISION = 3),
              (r.segments = []),
              Array.isArray(e))
            )
              if (ec.isLine(e[0]) || hc.isCurve(e[0])) {
                var i = null;
                e.forEach(function (e, t) {
                  0 === t && r.appendSegment(n.createSegment('M', e.start)),
                    null == i ||
                      i.end.equals(e.start) ||
                      r.appendSegment(n.createSegment('M', e.start)),
                    ec.isLine(e)
                      ? r.appendSegment(n.createSegment('L', e.end))
                      : hc.isCurve(e) &&
                        r.appendSegment(
                          n.createSegment(
                            'C',
                            e.controlPoint1,
                            e.controlPoint2,
                            e.end
                          )
                        ),
                    (i = e);
                });
              } else {
                e.forEach(function (e) {
                  e.isSegment && r.appendSegment(e);
                });
              }
            else
              null != e &&
                (ec.isLine(e)
                  ? (r.appendSegment(n.createSegment('M', e.start)),
                    r.appendSegment(n.createSegment('L', e.end)))
                  : hc.isCurve(e)
                  ? (r.appendSegment(n.createSegment('M', e.start)),
                    r.appendSegment(
                      n.createSegment(
                        'C',
                        e.controlPoint1,
                        e.controlPoint2,
                        e.end
                      )
                    ))
                  : fc.isPolyline(e)
                  ? e.points &&
                    e.points.length &&
                    e.points.forEach(function (e, t) {
                      var i =
                        0 === t
                          ? n.createSegment('M', e)
                          : n.createSegment('L', e);
                      r.appendSegment(i);
                    })
                  : e.isSegment && r.appendSegment(e));
            return r;
          }
          return (
            b()(n, [
              {
                key: 'start',
                get: function () {
                  var e = this.segments,
                    t = e.length;
                  if (0 === t) return null;
                  for (var n = 0; n < t; n += 1) {
                    var r = e[n];
                    if (r.isVisible) return r.start;
                  }
                  return e[t - 1].end;
                },
              },
              {
                key: 'end',
                get: function () {
                  var e = this.segments,
                    t = e.length;
                  if (0 === t) return null;
                  for (var n = t - 1; n >= 0; n -= 1) {
                    var r = e[n];
                    if (r.isVisible) return r.end;
                  }
                  return e[t - 1].end;
                },
              },
              {
                key: 'moveTo',
                value: function () {
                  for (
                    var e, t = arguments.length, n = new Array(t), r = 0;
                    r < t;
                    r++
                  )
                    n[r] = arguments[r];
                  return this.appendSegment(
                    (e = vc.create).call.apply(e, [null].concat(n))
                  );
                },
              },
              {
                key: 'lineTo',
                value: function () {
                  for (
                    var e, t = arguments.length, n = new Array(t), r = 0;
                    r < t;
                    r++
                  )
                    n[r] = arguments[r];
                  return this.appendSegment(
                    (e = gc.create).call.apply(e, [null].concat(n))
                  );
                },
              },
              {
                key: 'curveTo',
                value: function () {
                  for (
                    var e, t = arguments.length, n = new Array(t), r = 0;
                    r < t;
                    r++
                  )
                    n[r] = arguments[r];
                  return this.appendSegment(
                    (e = yc.create).call.apply(e, [null].concat(n))
                  );
                },
              },
              {
                key: 'arcTo',
                value: function (e, t, n, r, i, o, a) {
                  var s = this.end || new Ku(),
                    l =
                      'number' == typeof o
                        ? sc(s.x, s.y, e, t, n, r, i, o, a)
                        : sc(s.x, s.y, e, t, n, r, i, o.x, o.y);
                  if (null != l)
                    for (var u = 0, c = l.length; u < c; u += 6)
                      this.curveTo(
                        l[u],
                        l[u + 1],
                        l[u + 2],
                        l[u + 3],
                        l[u + 4],
                        l[u + 5]
                      );
                  return this;
                },
              },
              {
                key: 'quadTo',
                value: function (e, t, r, i) {
                  var o = this.end || new Ku(),
                    a = ['M', o.x, o.y];
                  if ('number' == typeof e) a.push('Q', e, t, r, i);
                  else {
                    var s = t;
                    a.push('Q', e.x, e.y, s.x, s.y);
                  }
                  var l = n.parse(a.join(' '));
                  return this.appendSegment(l.segments.slice(1)), this;
                },
              },
              {
                key: 'close',
                value: function () {
                  return this.appendSegment(pc.create());
                },
              },
              {
                key: 'drawPoints',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    r = ac(e, t),
                    i = n.parse(r);
                  i && i.segments && this.appendSegment(i.segments);
                },
              },
              {
                key: 'bbox',
                value: function () {
                  var e,
                    t = this.segments,
                    n = t.length;
                  if (0 === n) return null;
                  for (var r = 0; r < n; r += 1) {
                    var i = t[r];
                    if (i.isVisible) {
                      var o = i.bbox();
                      null != o && (e = e ? e.union(o) : o);
                    }
                  }
                  if (null != e) return e;
                  var a = t[n - 1];
                  return new Zu(a.end.x, a.end.y, 0, 0);
                },
              },
              {
                key: 'appendSegment',
                value: function (e) {
                  var t,
                    n = this.segments.length,
                    r = 0 !== n ? this.segments[n - 1] : null;
                  if (Array.isArray(e))
                    for (var i = 0, o = e.length; i < o; i += 1) {
                      var a = e[i];
                      (t = this.prepareSegment(a, r, null)),
                        this.segments.push(t),
                        (r = t);
                    }
                  else
                    null != e &&
                      e.isSegment &&
                      ((t = this.prepareSegment(e, r, null)),
                      this.segments.push(t));
                  return this;
                },
              },
              {
                key: 'insertSegment',
                value: function (e, t) {
                  var n,
                    r = this.segments.length;
                  if ((e < 0 && (e = r + e + 1), e > r || e < 0))
                    throw new Error('Index out of range.');
                  var i = null,
                    o = null;
                  if (
                    (0 !== r &&
                      (e >= 1
                        ? (o = (i = this.segments[e - 1]).nextSegment)
                        : ((i = null), (o = this.segments[0]))),
                    Array.isArray(t))
                  )
                    for (var a = 0, s = t.length; a < s; a += 1) {
                      var l = t[a];
                      (n = this.prepareSegment(l, i, o)),
                        this.segments.splice(e + a, 0, n),
                        (i = n);
                    }
                  else
                    (n = this.prepareSegment(t, i, o)),
                      this.segments.splice(e, 0, n);
                  return this;
                },
              },
              {
                key: 'removeSegment',
                value: function (e) {
                  var t = this.fixIndex(e),
                    n = this.segments.splice(t, 1)[0],
                    r = n.previousSegment,
                    i = n.nextSegment;
                  return (
                    r && (r.nextSegment = i),
                    i && (i.previousSegment = r),
                    n.isSubpathStart && i && this.updateSubpathStartSegment(i),
                    n
                  );
                },
              },
              {
                key: 'replaceSegment',
                value: function (e, t) {
                  var n,
                    r = this.fixIndex(e),
                    i = this.segments[r],
                    o = i.previousSegment,
                    a = i.nextSegment,
                    s = i.isSubpathStart;
                  if (Array.isArray(t)) {
                    this.segments.splice(e, 1);
                    for (var l = 0, u = t.length; l < u; l += 1) {
                      var c = t[l];
                      (n = this.prepareSegment(c, o, a)),
                        this.segments.splice(e + l, 0, n),
                        (o = n),
                        s && n.isSubpathStart && (s = !1);
                    }
                  } else
                    (n = this.prepareSegment(t, o, a)),
                      this.segments.splice(r, 1, n),
                      s && n.isSubpathStart && (s = !1);
                  s && a && this.updateSubpathStartSegment(a);
                },
              },
              {
                key: 'getSegment',
                value: function (e) {
                  var t = this.fixIndex(e);
                  return this.segments[t];
                },
              },
              {
                key: 'fixIndex',
                value: function (e) {
                  var t = this.segments.length;
                  if (0 === t) throw new Error('Path has no segments.');
                  for (var n = e; n < 0; ) n = t + n;
                  if (n >= t || n < 0) throw new Error('Index out of range.');
                  return n;
                },
              },
              {
                key: 'segmentAt',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.segmentIndexAt(e, t);
                  return n ? this.getSegment(n) : null;
                },
              },
              {
                key: 'segmentAtLength',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.segmentIndexAtLength(e, t);
                  return n ? this.getSegment(n) : null;
                },
              },
              {
                key: 'segmentIndexAt',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (0 === this.segments.length) return null;
                  var n = Yu.clamp(e, 0, 1),
                    r = this.getOptions(t),
                    i = this.length(r),
                    o = i * n;
                  return this.segmentIndexAtLength(o, r);
                },
              },
              {
                key: 'segmentIndexAtLength',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.segments.length;
                  if (0 === n) return null;
                  var r = !0;
                  e < 0 && ((r = !1), (e = -e));
                  for (
                    var i = this.getPrecision(t),
                      o = this.getSubdivisions(t),
                      a = 0,
                      s = null,
                      l = 0;
                    l < n;
                    l += 1
                  ) {
                    var u = r ? l : n - 1 - l,
                      c = this.segments[u],
                      f = o[u],
                      h = c.length({ precision: i, subdivisions: f });
                    if (c.isVisible) {
                      if (e <= a + h) return u;
                      s = u;
                    }
                    a += h;
                  }
                  return s;
                },
              },
              {
                key: 'getSegmentSubdivisions',
                value: function () {
                  for (
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      t = this.getPrecision(e),
                      n = [],
                      r = 0,
                      i = this.segments.length;
                    r < i;
                    r += 1
                  ) {
                    var o = this.segments[r],
                      a = o.getSubdivisions({ precision: t });
                    n.push(a);
                  }
                  return n;
                },
              },
              {
                key: 'updateSubpathStartSegment',
                value: function (e) {
                  for (
                    var t = e.previousSegment, n = e;
                    n && !n.isSubpathStart;

                  )
                    (n.subpathStartSegment =
                      null != t ? t.subpathStartSegment : null),
                      (t = n),
                      (n = n.nextSegment);
                },
              },
              {
                key: 'prepareSegment',
                value: function (e, t, n) {
                  (e.previousSegment = t),
                    (e.nextSegment = n),
                    null != t && (t.nextSegment = e),
                    null != n && (n.previousSegment = e);
                  var r = e;
                  return (
                    e.isSubpathStart && ((e.subpathStartSegment = e), (r = n)),
                    null != r && this.updateSubpathStartSegment(r),
                    e
                  );
                },
              },
              {
                key: 'closestPoint',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.closestPointT(e, t);
                  return n ? this.pointAtT(n) : null;
                },
              },
              {
                key: 'closestPointLength',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.getOptions(t),
                    r = this.closestPointT(e, n);
                  return r ? this.lengthAtT(r, n) : 0;
                },
              },
              {
                key: 'closestPointNormalizedLength',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.getOptions(t),
                    r = this.closestPointLength(e, n);
                  if (0 === r) return 0;
                  var i = this.length(n);
                  return 0 === i ? 0 : r / i;
                },
              },
              {
                key: 'closestPointT',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (0 === this.segments.length) return null;
                  for (
                    var n,
                      r = this.getPrecision(t),
                      i = this.getSubdivisions(t),
                      o = 1 / 0,
                      a = 0,
                      s = this.segments.length;
                    a < s;
                    a += 1
                  ) {
                    var l = this.segments[a],
                      u = i[a];
                    if (l.isVisible) {
                      var c = l.closestPointT(e, {
                          precision: r,
                          subdivisions: u,
                        }),
                        f = l.pointAtT(c),
                        h = Yu.squaredLength(f, e);
                      h < o && ((n = { segmentIndex: a, value: c }), (o = h));
                    }
                  }
                  return (
                    n || { segmentIndex: this.segments.length - 1, value: 1 }
                  );
                },
              },
              {
                key: 'closestPointTangent',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (0 === this.segments.length) return null;
                  for (
                    var n,
                      r = this.getPrecision(t),
                      i = this.getSubdivisions(t),
                      o = 1 / 0,
                      a = 0,
                      s = this.segments.length;
                    a < s;
                    a += 1
                  ) {
                    var l = this.segments[a],
                      u = i[a];
                    if (l.isDifferentiable()) {
                      var c = l.closestPointT(e, {
                          precision: r,
                          subdivisions: u,
                        }),
                        f = l.pointAtT(c),
                        h = Yu.squaredLength(f, e);
                      h < o && ((n = l.tangentAtT(c)), (o = h));
                    }
                  }
                  return n || null;
                },
              },
              {
                key: 'containsPoint',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.toPolylines(t);
                  if (!n) return !1;
                  for (var r = 0, i = 0, o = n.length; i < o; i += 1) {
                    var a = n[i];
                    a.containsPoint(e) && (r += 1);
                  }
                  return r % 2 == 1;
                },
              },
              {
                key: 'pointAt',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (0 === this.segments.length) return null;
                  if (e <= 0) return this.start.clone();
                  if (e >= 1) return this.end.clone();
                  var n = this.getOptions(t),
                    r = this.length(n),
                    i = r * e;
                  return this.pointAtLength(i, n);
                },
              },
              {
                key: 'pointAtLength',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (0 === this.segments.length) return null;
                  if (0 === e) return this.start.clone();
                  var n = !0;
                  e < 0 && ((n = !1), (e = -e));
                  for (
                    var r,
                      i = this.getPrecision(t),
                      o = this.getSubdivisions(t),
                      a = 0,
                      s = 0,
                      l = this.segments.length;
                    s < l;
                    s += 1
                  ) {
                    var u = n ? s : l - 1 - s,
                      c = this.segments[u],
                      f = o[u],
                      h = c.length({ precision: i, subdivisions: f });
                    if (c.isVisible) {
                      if (e <= a + h)
                        return c.pointAtLength((n ? 1 : -1) * (e - a), {
                          precision: i,
                          subdivisions: f,
                        });
                      r = c;
                    }
                    a += h;
                  }
                  if (r) return n ? r.end : r.start;
                  var d = this.segments[this.segments.length - 1];
                  return d.end.clone();
                },
              },
              {
                key: 'pointAtT',
                value: function (e) {
                  var t = this.segments,
                    n = t.length;
                  if (0 === n) return null;
                  var r = e.segmentIndex;
                  if (r < 0) return t[0].pointAtT(0);
                  if (r >= n) return t[n - 1].pointAtT(1);
                  var i = Yu.clamp(e.value, 0, 1);
                  return t[r].pointAtT(i);
                },
              },
              {
                key: 'divideAt',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (0 === this.segments.length) return null;
                  var n = Yu.clamp(e, 0, 1),
                    r = this.getOptions(t),
                    i = this.length(r),
                    o = i * n;
                  return this.divideAtLength(o, r);
                },
              },
              {
                key: 'divideAtLength',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (0 === this.segments.length) return null;
                  var r = !0;
                  e < 0 && ((r = !1), (e = -e));
                  for (
                    var i,
                      o,
                      a,
                      s,
                      l,
                      u = this.getPrecision(t),
                      c = this.getSubdivisions(t),
                      f = 0,
                      h = 0,
                      d = this.segments.length;
                    h < d;
                    h += 1
                  ) {
                    var g = r ? h : d - 1 - h,
                      p = this.getSegment(g),
                      v = c[g],
                      y = { precision: u, subdivisions: v },
                      m = p.length(y);
                    if (
                      p.isDifferentiable() &&
                      ((a = p), (s = g), e <= f + m)
                    ) {
                      (o = g),
                        (i = p.divideAtLength((r ? 1 : -1) * (e - f), y));
                      break;
                    }
                    f += m;
                  }
                  if (!a) return null;
                  i || ((o = s), (l = r ? 1 : 0), (i = a.divideAtT(l)));
                  var b = this.clone(),
                    k = o;
                  b.replaceSegment(k, i);
                  var w = k,
                    x = k + 1,
                    C = k + 2;
                  i[0].isDifferentiable() ||
                    (b.removeSegment(w), (x -= 1), (C -= 1));
                  var S = b.getSegment(x).start;
                  b.insertSegment(x, n.createSegment('M', S)),
                    (C += 1),
                    i[1].isDifferentiable() ||
                      (b.removeSegment(C - 1), (C -= 1));
                  for (
                    var E = C - w - 1, O = C, P = b.segments.length;
                    O < P;
                    O += 1
                  ) {
                    var A = this.getSegment(O - E),
                      M = b.getSegment(O);
                    if (
                      'Z' === M.type &&
                      !A.subpathStartSegment.end.equals(
                        M.subpathStartSegment.end
                      )
                    ) {
                      var T = n.createSegment('L', A.end);
                      b.replaceSegment(O, T);
                    }
                  }
                  var N = new n(b.segments.slice(0, x)),
                    j = new n(b.segments.slice(x));
                  return [N, j];
                },
              },
              {
                key: 'intersectsWithLine',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.toPolylines(t);
                  if (null == n) return null;
                  for (var r = null, i = 0, o = n.length; i < o; i += 1) {
                    var a,
                      s = n[i],
                      l = e.intersect(s);
                    if (l)
                      if ((null == r && (r = []), Array.isArray(l)))
                        (a = r).push.apply(a, L()(l));
                      else r.push(l);
                  }
                  return r;
                },
              },
              {
                key: 'isDifferentiable',
                value: function () {
                  for (var e = 0, t = this.segments.length; e < t; e += 1) {
                    if (this.segments[e].isDifferentiable()) return !0;
                  }
                  return !1;
                },
              },
              {
                key: 'isValid',
                value: function () {
                  var e = this.segments,
                    t = 0 === e.length || 'M' === e[0].type;
                  return t;
                },
              },
              {
                key: 'length',
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {};
                  if (0 === this.segments.length) return 0;
                  for (
                    var t = this.getSubdivisions(e),
                      n = 0,
                      r = 0,
                      i = this.segments.length;
                    r < i;
                    r += 1
                  ) {
                    var o = this.segments[r],
                      a = t[r];
                    n += o.length({ subdivisions: a });
                  }
                  return n;
                },
              },
              {
                key: 'lengthAtT',
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = this.segments.length;
                  if (0 === n) return 0;
                  var r = e.segmentIndex;
                  if (r < 0) return 0;
                  var i = Yu.clamp(e.value, 0, 1);
                  r >= n && ((r = n - 1), (i = 1));
                  for (
                    var o = this.getPrecision(t),
                      a = this.getSubdivisions(t),
                      s = 0,
                      l = 0;
                    l < r;
                    l += 1
                  ) {
                    var u = this.segments[l],
                      c = a[l];
                    s += u.length({ precision: o, subdivisions: c });
                  }
                  var f = this.segments[r],
                    h = a[r];
                  return (s += f.lengthAtT(i, {
                    precision: o,
                    subdivisions: h,
                  }));
                },
              },
              {
                key: 'tangentAt',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (0 === this.segments.length) return null;
                  var n = Yu.clamp(e, 0, 1),
                    r = this.getOptions(t),
                    i = this.length(r),
                    o = i * n;
                  return this.tangentAtLength(o, r);
                },
              },
              {
                key: 'tangentAtLength',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (0 === this.segments.length) return null;
                  var n = !0;
                  e < 0 && ((n = !1), (e = -e));
                  for (
                    var r,
                      i = this.getPrecision(t),
                      o = this.getSubdivisions(t),
                      a = 0,
                      s = 0,
                      l = this.segments.length;
                    s < l;
                    s += 1
                  ) {
                    var u = n ? s : l - 1 - s,
                      c = this.segments[u],
                      f = o[u],
                      h = c.length({ precision: i, subdivisions: f });
                    if (c.isDifferentiable()) {
                      if (e <= a + h)
                        return c.tangentAtLength((n ? 1 : -1) * (e - a), {
                          precision: i,
                          subdivisions: f,
                        });
                      r = c;
                    }
                    a += h;
                  }
                  if (r) {
                    var d = n ? 1 : 0;
                    return r.tangentAtT(d);
                  }
                  return null;
                },
              },
              {
                key: 'tangentAtT',
                value: function (e) {
                  var t = this.segments.length;
                  if (0 === t) return null;
                  var n = e.segmentIndex;
                  if (n < 0) return this.segments[0].tangentAtT(0);
                  if (n >= t) return this.segments[t - 1].tangentAtT(1);
                  var r = Yu.clamp(e.value, 0, 1);
                  return this.segments[n].tangentAtT(r);
                },
              },
              {
                key: 'getPrecision',
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {};
                  return null == e.precision ? this.PRECISION : e.precision;
                },
              },
              {
                key: 'getSubdivisions',
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {};
                  if (null == e.segmentSubdivisions) {
                    var t = this.getPrecision(e);
                    return this.getSegmentSubdivisions({ precision: t });
                  }
                  return e.segmentSubdivisions;
                },
              },
              {
                key: 'getOptions',
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    t = this.getPrecision(e),
                    n = this.getSubdivisions(e);
                  return { precision: t, segmentSubdivisions: n };
                },
              },
              {
                key: 'toPoints',
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    t = this.segments,
                    n = t.length;
                  if (0 === n) return null;
                  for (
                    var r = this.getSubdivisions(e), i = [], o = [], a = 0;
                    a < n;
                    a += 1
                  ) {
                    var s = t[a];
                    if (s.isVisible) {
                      var l = r[a];
                      l.length > 0
                        ? l.forEach(function (e) {
                            return o.push(e.start);
                          })
                        : o.push(s.start);
                    } else
                      o.length > 0 &&
                        (o.push(t[a - 1].end), i.push(o), (o = []));
                  }
                  return o.length > 0 && (o.push(this.end), i.push(o)), i;
                },
              },
              {
                key: 'toPolylines',
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    t = this.toPoints(e);
                  return t
                    ? t.map(function (e) {
                        return new fc(e);
                      })
                    : null;
                },
              },
              {
                key: 'scale',
                value: function (e, t, n) {
                  return (
                    this.segments.forEach(function (r) {
                      return r.scale(e, t, n);
                    }),
                    this
                  );
                },
              },
              {
                key: 'rotate',
                value: function (e, t) {
                  return (
                    this.segments.forEach(function (n) {
                      return n.rotate(e, t);
                    }),
                    this
                  );
                },
              },
              {
                key: 'translate',
                value: function (e, t) {
                  return (
                    'number' == typeof e
                      ? this.segments.forEach(function (n) {
                          return n.translate(e, t);
                        })
                      : this.segments.forEach(function (t) {
                          return t.translate(e);
                        }),
                    this
                  );
                },
              },
              {
                key: 'clone',
                value: function () {
                  var e = new n();
                  return (
                    this.segments.forEach(function (t) {
                      return e.appendSegment(t.clone());
                    }),
                    e
                  );
                },
              },
              {
                key: 'equals',
                value: function (e) {
                  if (null == e) return !1;
                  var t = this.segments,
                    n = e.segments,
                    r = t.length;
                  if (n.length !== r) return !1;
                  for (var i = 0; i < r; i += 1) {
                    var o = t[i],
                      a = n[i];
                    if (o.type !== a.type || !o.equals(a)) return !1;
                  }
                  return !0;
                },
              },
              {
                key: 'toJSON',
                value: function () {
                  return this.segments.map(function (e) {
                    return e.toJSON();
                  });
                },
              },
              {
                key: 'serialize',
                value: function () {
                  if (!this.isValid())
                    throw new Error('Invalid path segments.');
                  return this.segments
                    .map(function (e) {
                      return e.serialize();
                    })
                    .join(' ');
                },
              },
              {
                key: 'toString',
                value: function () {
                  return this.serialize();
                },
              },
            ]),
            n
          );
        })(Qu);
        !(function (e) {
          e.isPath = function (t) {
            return null != t && t instanceof e;
          };
        })(Sc || (Sc = {})),
          (function (e) {
            function t(e) {
              for (
                var t = arguments.length,
                  n = new Array(t > 1 ? t - 1 : 0),
                  r = 1;
                r < t;
                r++
              )
                n[r - 1] = arguments[r];
              var i, o, a;
              if ('M' === e)
                return (i = vc.create).call.apply(i, [null].concat(n));
              if ('L' === e)
                return (o = gc.create).call.apply(o, [null].concat(n));
              if ('C' === e)
                return (a = yc.create).call.apply(a, [null].concat(n));
              if ('z' === e || 'Z' === e) return pc.create();
              throw new Error('Invalid path segment type "'.concat(e, '"'));
            }
            (e.parse = function (n) {
              if (!n) return new e();
              var r = new e(),
                i = e
                  .normalize(n)
                  .match(
                    /(?:[a-zA-Z] *)(?:(?:-?\d+(?:\.\d+)?(?:e[-+]?\d+)? *,? *)|(?:-?\.\d+ *,? *))+|(?:[a-zA-Z] *)(?! |\d|-|\.)/g
                  );
              if (null != i)
                for (var o = 0, a = i.length; o < a; o += 1) {
                  var s = i[o].match(
                    /(?:[a-zA-Z])|(?:(?:-?\d+(?:\.\d+)?(?:e[-+]?\d+)?))|(?:(?:-?\.\d+))/g
                  );
                  if (null != s) {
                    var l = s[0],
                      u = s.slice(1).map(function (e) {
                        return +e;
                      }),
                      c = t.call.apply(t, [null, l].concat(L()(u)));
                    r.appendSegment(c);
                  }
                }
              return r;
            }),
              (e.createSegment = t);
          })(Sc || (Sc = {})),
          (function (e) {
            (e.normalize = Cc),
              (e.isValid = rc),
              (e.drawArc = lc),
              (e.drawPoints = ac),
              (e.arcToCurves = sc);
          })(Sc || (Sc = {}));
        var Ec = (function () {
          function e(t) {
            y()(this, e),
              (this.options = Object.assign({}, t)),
              (this.data = this.options.data || {}),
              (this.register = this.register.bind(this)),
              (this.unregister = this.unregister.bind(this));
          }
          return (
            b()(e, [
              {
                key: 'names',
                get: function () {
                  return Object.keys(this.data);
                },
              },
              {
                key: 'register',
                value: function (e, t) {
                  var n = this,
                    r =
                      arguments.length > 2 &&
                      void 0 !== arguments[2] &&
                      arguments[2];
                  if ('object' !== _()(e)) {
                    !this.exist(e) ||
                      r ||
                      Ps.isApplyingHMR() ||
                      this.onDuplicated(e);
                    var i = this.options.process,
                      o = i ? de(i, this, e, t) : t;
                    return (this.data[e] = o), o;
                  }
                  Object.entries(e).forEach(function (e) {
                    var r = ql()(e, 2),
                      i = r[0],
                      o = r[1];
                    n.register(i, o, t);
                  });
                },
              },
              {
                key: 'unregister',
                value: function (e) {
                  var t = e ? this.data[e] : null;
                  return delete this.data[e], t;
                },
              },
              {
                key: 'get',
                value: function (e) {
                  return e ? this.data[e] : null;
                },
              },
              {
                key: 'exist',
                value: function (e) {
                  return !!e && null != this.data[e];
                },
              },
              {
                key: 'onDuplicated',
                value: function (e) {
                  try {
                    throw (
                      (this.options.onConflict &&
                        de(this.options.onConflict, this, e),
                      new Error(
                        ''
                          .concat(ns(this.options.type), " with name '")
                          .concat(e, "' already registered.")
                      ))
                    );
                  } catch (e) {
                    throw e;
                  }
                },
              },
              {
                key: 'onNotFound',
                value: function (e, t) {
                  throw new Error(this.getSpellingSuggestion(e, t));
                },
              },
              {
                key: 'getSpellingSuggestion',
                value: function (e, t) {
                  var n = this.getSpellingSuggestionForName(e),
                    r = t
                      ? ''.concat(t, ' ').concat(hs(this.options.type))
                      : this.options.type;
                  return ''
                    .concat(ns(r), " with name '")
                    .concat(e, "' does not exist.")
                    .concat(n ? " Did you mean '".concat(n, "'?") : '');
                },
              },
              {
                key: 'getSpellingSuggestionForName',
                value: function (e) {
                  return (function (e, t, n) {
                    var r,
                      i,
                      o = Math.min(2, Math.floor(0.34 * e.length)),
                      a = Math.floor(0.4 * e.length) + 1,
                      s = !1,
                      l = e.toLowerCase(),
                      u = bs()(t);
                    try {
                      for (u.s(); !(i = u.n()).done; ) {
                        var c = i.value,
                          f = n(c);
                        if (
                          void 0 !== f &&
                          Math.abs(f.length - l.length) <= o
                        ) {
                          var h = f.toLowerCase();
                          if (h === l) {
                            if (f === e) continue;
                            return c;
                          }
                          if (s) continue;
                          if (f.length < 3) continue;
                          var d = ks(l, h, a - 1);
                          if (void 0 === d) continue;
                          d < 3 ? ((s = !0), (r = c)) : ((a = d), (r = c));
                        }
                      }
                    } catch (e) {
                      u.e(e);
                    } finally {
                      u.f();
                    }
                    return r;
                  })(e, Object.keys(this.data), function (e) {
                    return e;
                  });
                },
              },
            ]),
            e
          );
        })();
        !(function (e) {
          e.create = function (t) {
            return new e(t);
          };
        })(Ec || (Ec = {}));
        var Oc = {
            color: '#aaaaaa',
            thickness: 1,
            markup: 'rect',
            update: function (e, t) {
              var n = t.thickness * t.sx,
                r = t.thickness * t.sy;
              Cl(e, { width: n, height: r, rx: n, ry: r, fill: t.color });
            },
          },
          Pc = {
            color: '#aaaaaa',
            thickness: 1,
            markup: 'rect',
            update: function (e, t) {
              var n = t.sx <= 1 ? t.thickness * t.sx : t.thickness;
              Cl(e, { width: n, height: n, rx: n, ry: n, fill: t.color });
            },
          },
          Ac = {
            color: 'rgba(224,224,224,1)',
            thickness: 1,
            markup: 'path',
            update: function (e, t) {
              var n = t.width,
                r = t.height,
                i = t.thickness;
              Cl(e, {
                d:
                  n - i >= 0 && r - i >= 0
                    ? ['M', n, 0, 'H0 M0 0 V0', r].join(' ')
                    : 'M 0 0 0 0',
                stroke: t.color,
                'stroke-width': t.thickness,
              });
            },
          },
          Mc = [
            {
              color: 'rgba(224,224,224,1)',
              thickness: 1,
              markup: 'path',
              update: function (e, t) {
                var n = t.width,
                  r = t.height,
                  i = t.thickness;
                Cl(e, {
                  d:
                    n - i >= 0 && r - i >= 0
                      ? ['M', n, 0, 'H0 M0 0 V0', r].join(' ')
                      : 'M 0 0 0 0',
                  stroke: t.color,
                  'stroke-width': t.thickness,
                });
              },
            },
            {
              color: 'rgba(224,224,224,0.2)',
              thickness: 3,
              factor: 4,
              markup: 'path',
              update: function (e, t) {
                var n,
                  r = t.factor || 1,
                  i = t.width * r,
                  o = t.height * r,
                  a = t.thickness;
                (n =
                  i - a >= 0 && o - a >= 0
                    ? ['M', i, 0, 'H0 M0 0 V0', o].join(' ')
                    : 'M 0 0 0 0'),
                  (t.width = i),
                  (t.height = o),
                  Cl(e, { d: n, stroke: t.color, 'stroke-width': t.thickness });
              },
            },
          ],
          Tc = (function () {
            function e() {
              y()(this, e),
                (this.patterns = {}),
                (this.root = Xl.create(
                  ll(),
                  { width: '100%', height: '100%' },
                  [sl('defs')]
                ).node);
            }
            return (
              b()(e, [
                {
                  key: 'add',
                  value: function (e, t) {
                    var n = this.root.childNodes[0];
                    n && n.appendChild(t),
                      (this.patterns[e] = t),
                      Xl.create('rect', {
                        width: '100%',
                        height: '100%',
                        fill: 'url(#'.concat(e, ')'),
                      }).appendTo(this.root);
                  },
                },
                {
                  key: 'get',
                  value: function (e) {
                    return this.patterns[e];
                  },
                },
                {
                  key: 'has',
                  value: function (e) {
                    return null != this.patterns[e];
                  },
                },
              ]),
              e
            );
          })();
        !(function (t) {
          (t.presets = e),
            (t.registry = Ec.create({ type: 'grid' })),
            t.registry.register(t.presets, !0);
        })(Tc || (Tc = {}));
        var Nc,
          jc,
          Lc = function (e) {
            var t = document.createElement('canvas'),
              n = e.width,
              r = e.height;
            (t.width = 2 * n), (t.height = r);
            var i = t.getContext('2d');
            return (
              i.drawImage(e, 0, 0, n, r),
              i.translate(2 * n, 0),
              i.scale(-1, 1),
              i.drawImage(e, 0, 0, n, r),
              t
            );
          },
          Rc = function (e) {
            var t = document.createElement('canvas'),
              n = e.width,
              r = e.height;
            (t.width = n), (t.height = 2 * r);
            var i = t.getContext('2d');
            return (
              i.drawImage(e, 0, 0, n, r),
              i.translate(0, 2 * r),
              i.scale(1, -1),
              i.drawImage(e, 0, 0, n, r),
              t
            );
          },
          _c = function (e) {
            var t = document.createElement('canvas'),
              n = e.width,
              r = e.height;
            (t.width = 2 * n), (t.height = 2 * r);
            var i = t.getContext('2d');
            return (
              i.drawImage(e, 0, 0, n, r),
              i.setTransform(-1, 0, 0, -1, t.width, t.height),
              i.drawImage(e, 0, 0, n, r),
              i.setTransform(-1, 0, 0, 1, t.width, 0),
              i.drawImage(e, 0, 0, n, r),
              i.setTransform(1, 0, 0, -1, 0, t.height),
              i.drawImage(e, 0, 0, n, r),
              t
            );
          },
          Ic = function (e, t) {
            var n = e.width,
              r = e.height,
              i = document.createElement('canvas');
            (i.width = 3 * n), (i.height = 3 * r);
            for (
              var o = i.getContext('2d'),
                a = null != t.angle ? -t.angle : -20,
                s = Xu.toRad(a),
                l = i.width / 4,
                u = i.height / 4,
                c = 0;
              c < 4;
              c += 1
            )
              for (var f = 0; f < 4; f += 1)
                (c + f) % 2 > 0 &&
                  (o.setTransform(1, 0, 0, 1, (2 * c - 1) * l, (2 * f - 1) * u),
                  o.rotate(s),
                  o.drawImage(e, -n / 2, -r / 2, n, r));
            return i;
          };
        function Dc(e, t) {
          return null != e ? e : t;
        }
        function zc(e, t) {
          return null != e && Number.isFinite(e) ? e : t;
        }
        function Bc() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = Dc(e.color, 'blue'),
            n = zc(e.width, 1),
            r = zc(e.margin, 2),
            i = zc(e.opacity, 1),
            o = r,
            a = r + n;
          return '\n    <filter>\n      <feFlood flood-color="'
            .concat(t, '" flood-opacity="')
            .concat(
              i,
              '" result="colored"/>\n      <feMorphology in="SourceAlpha" result="morphedOuter" operator="dilate" radius="'
            )
            .concat(
              a,
              '" />\n      <feMorphology in="SourceAlpha" result="morphedInner" operator="dilate" radius="'
            )
            .concat(
              o,
              '" />\n      <feComposite result="morphedOuterColored" in="colored" in2="morphedOuter" operator="in"/>\n      <feComposite operator="xor" in="morphedOuterColored" in2="morphedInner" result="outline"/>\n      <feMerge>\n        <feMergeNode in="outline"/>\n        <feMergeNode in="SourceGraphic"/>\n      </feMerge>\n    </filter>\n  '
            )
            .trim();
        }
        function Vc() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = Dc(e.color, 'red'),
            n = zc(e.blur, 0),
            r = zc(e.width, 1),
            i = zc(e.opacity, 1);
          return '\n      <filter>\n        <feFlood flood-color="'
            .concat(t, '" flood-opacity="')
            .concat(
              i,
              '" result="colored"/>\n        <feMorphology result="morphed" in="SourceGraphic" operator="dilate" radius="'
            )
            .concat(
              r,
              '"/>\n        <feComposite result="composed" in="colored" in2="morphed" operator="in"/>\n        <feGaussianBlur result="blured" in="composed" stdDeviation="'
            )
            .concat(
              n,
              '"/>\n        <feBlend in="SourceGraphic" in2="blured" mode="normal"/>\n      </filter>\n    '
            )
            .trim();
        }
        function Fc() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = zc(e.x, 2),
            n = null != e.y && Number.isFinite(e.y) ? [t, e.y] : t;
          return '\n    <filter>\n      <feGaussianBlur stdDeviation="'
            .concat(n, '"/>\n    </filter>\n  ')
            .trim();
        }
        function Uc() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = zc(e.dx, 0),
            n = zc(e.dy, 0),
            r = Dc(e.color, 'black'),
            i = zc(e.blur, 4),
            o = zc(e.opacity, 1);
          return 'SVGFEDropShadowElement' in window
            ? '<filter>\n         <feDropShadow stdDeviation="'
                .concat(i, '" dx="')
                .concat(t, '" dy="')
                .concat(n, '" flood-color="')
                .concat(r, '" flood-opacity="')
                .concat(o, '" />\n       </filter>')
                .trim()
            : '<filter>\n         <feGaussianBlur in="SourceAlpha" stdDeviation="'
                .concat(i, '" />\n         <feOffset dx="')
                .concat(t, '" dy="')
                .concat(
                  n,
                  '" result="offsetblur" />\n         <feFlood flood-color="'
                )
                .concat(
                  r,
                  '" />\n         <feComposite in2="offsetblur" operator="in" />\n         <feComponentTransfer>\n           <feFuncA type="linear" slope="'
                )
                .concat(
                  o,
                  '" />\n         </feComponentTransfer>\n         <feMerge>\n           <feMergeNode/>\n           <feMergeNode in="SourceGraphic"/>\n         </feMerge>\n       </filter>'
                )
                .trim();
        }
        function Hc() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = zc(e.amount, 1),
            n = 0.2126 + 0.7874 * (1 - t),
            r = 0.7152 - 0.7152 * (1 - t),
            i = 0.0722 - 0.0722 * (1 - t),
            o = 0.2126 - 0.2126 * (1 - t),
            a = 0.7152 + 0.2848 * (1 - t),
            s = 0.0722 - 0.0722 * (1 - t),
            l = 0.2126 - 0.2126 * (1 - t),
            u = 0.0722 + 0.9278 * (1 - t);
          return '\n    <filter>\n      <feColorMatrix type="matrix" values="'
            .concat(n, ' ')
            .concat(r, ' ')
            .concat(i, ' 0 0 ')
            .concat(o, ' ')
            .concat(a, ' ')
            .concat(s, ' 0 0 ')
            .concat(l, ' ')
            .concat(r, ' ')
            .concat(u, ' 0 0 0 0 0 1 0"/>\n    </filter>\n  ')
            .trim();
        }
        function Gc() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = zc(e.amount, 1),
            n = 0.393 + 0.607 * (1 - t),
            r = 0.769 - 0.769 * (1 - t),
            i = 0.189 - 0.189 * (1 - t),
            o = 0.349 - 0.349 * (1 - t),
            a = 0.686 + 0.314 * (1 - t),
            s = 0.168 - 0.168 * (1 - t),
            l = 0.272 - 0.272 * (1 - t),
            u = 0.534 - 0.534 * (1 - t),
            c = 0.131 + 0.869 * (1 - t);
          return '\n      <filter>\n        <feColorMatrix type="matrix" values="'
            .concat(n, ' ')
            .concat(r, ' ')
            .concat(i, ' 0 0 ')
            .concat(o, ' ')
            .concat(a, ' ')
            .concat(s, ' 0 0 ')
            .concat(l, ' ')
            .concat(u, ' ')
            .concat(c, ' 0 0 0 0 0 1 0"/>\n      </filter>\n    ')
            .trim();
        }
        function Wc() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = zc(e.amount, 1);
          return '\n      <filter>\n        <feColorMatrix type="saturate" values="'
            .concat(1 - t, '"/>\n      </filter>\n    ')
            .trim();
        }
        function qc() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = zc(e.angle, 0);
          return '\n      <filter>\n        <feColorMatrix type="hueRotate" values="'
            .concat(t, '"/>\n      </filter>\n    ')
            .trim();
        }
        function Xc() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = zc(e.amount, 1),
            n = 1 - t;
          return '\n      <filter>\n        <feComponentTransfer>\n          <feFuncR type="table" tableValues="'
            .concat(t, ' ')
            .concat(n, '"/>\n          <feFuncG type="table" tableValues="')
            .concat(t, ' ')
            .concat(n, '"/>\n          <feFuncB type="table" tableValues="')
            .concat(t, ' ')
            .concat(
              n,
              '"/>\n        </feComponentTransfer>\n      </filter>\n    '
            )
            .trim();
        }
        function Yc() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = zc(e.amount, 1);
          return '\n    <filter>\n      <feComponentTransfer>\n        <feFuncR type="linear" slope="'
            .concat(t, '"/>\n        <feFuncG type="linear" slope="')
            .concat(t, '"/>\n        <feFuncB type="linear" slope="')
            .concat(t, '"/>\n      </feComponentTransfer>\n    </filter>\n  ')
            .trim();
        }
        function Jc() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = zc(e.amount, 1),
            n = 0.5 - t / 2;
          return '\n    <filter>\n     <feComponentTransfer>\n        <feFuncR type="linear" slope="'
            .concat(t, '" intercept="')
            .concat(n, '"/>\n        <feFuncG type="linear" slope="')
            .concat(t, '" intercept="')
            .concat(n, '"/>\n        <feFuncB type="linear" slope="')
            .concat(t, '" intercept="')
            .concat(n, '"/>\n      </feComponentTransfer>\n    </filter>\n  ')
            .trim();
        }
        !(function (e) {
          (e.presets = Object.assign({}, t)),
            (e.presets['flip-x'] = Lc),
            (e.presets['flip-y'] = Rc),
            (e.presets['flip-xy'] = _c),
            (e.registry = Ec.create({ type: 'background pattern' })),
            e.registry.register(e.presets, !0);
        })(Nc || (Nc = {})),
          (function (e) {
            (e.presets = n),
              (e.registry = Ec.create({ type: 'filter' })),
              e.registry.register(e.presets, !0);
          })(jc || (jc = {}));
        var $c,
          Qc,
          Kc = {
            xlinkHref: 'xlink:href',
            xlinkShow: 'xlink:show',
            xlinkRole: 'xlink:role',
            xlinkType: 'xlink:type',
            xlinkArcrole: 'xlink:arcrole',
            xlinkTitle: 'xlink:title',
            xlinkActuate: 'xlink:actuate',
            xmlSpace: 'xml:space',
            xmlBase: 'xml:base',
            xmlLang: 'xml:lang',
            preserveAspectRatio: 'preserveAspectRatio',
            requiredExtension: 'requiredExtension',
            requiredFeatures: 'requiredFeatures',
            systemLanguage: 'systemLanguage',
            externalResourcesRequired: 'externalResourceRequired',
          },
          Zc = {},
          ef = { position: Sf('x', 'width', 'origin') },
          tf = { position: Sf('y', 'height', 'origin') },
          nf = { position: Sf('x', 'width', 'corner') },
          rf = { position: Sf('y', 'height', 'corner') },
          of = { set: Ef('width', 'width') },
          af = { set: Ef('height', 'height') },
          sf = { set: Ef('rx', 'width') },
          lf = { set: Ef('ry', 'height') },
          uf = {
            set:
              (($c = Ef('r', 'width')),
              (Qc = Ef('r', 'height')),
              function (e, t) {
                var n = t.refBBox;
                return de(n.height > n.width ? $c : Qc, this, e, t);
              }),
          },
          cf = {
            set: function (e, t) {
              var n = t.refBBox,
                r = parseFloat(e),
                i = Ss(e);
              i && (r /= 100);
              var o,
                a = Math.sqrt(n.height * n.height + n.width * n.width);
              return (
                Number.isFinite(r) &&
                  (o = i || (r >= 0 && r <= 1) ? r * a : Math.max(r + a, 0)),
                { r: o }
              );
            },
          },
          ff = { set: Ef('cx', 'width') },
          hf = { set: Ef('cy', 'height') },
          df = { set: Pf({ resetOffset: !0 }) },
          gf = { set: Pf({ resetOffset: !1 }) },
          pf = { set: Af({ resetOffset: !0 }) },
          vf = { set: Af({ resetOffset: !1 }) },
          yf = uf,
          mf = df,
          bf = pf,
          kf = ef,
          wf = tf,
          xf = of,
          Cf = af;
        function Sf(e, t, n) {
          return function (r, i) {
            var o = i.refBBox;
            if (null == r) return null;
            var a,
              s = parseFloat(r),
              l = Ss(r);
            if ((l && (s /= 100), Number.isFinite(s))) {
              var u = o[n];
              a = l || (s > 0 && s < 1) ? u[e] + o[t] * s : u[e] + s;
            }
            var c = new Ku();
            return (c[e] = a || 0), c;
          };
        }
        function Ef(e, t) {
          return function (n, r) {
            var i = r.refBBox,
              o = parseFloat(n),
              a = Ss(n);
            a && (o /= 100);
            var s = {};
            if (Number.isFinite(o)) {
              var l =
                a || (o >= 0 && o <= 1) ? o * i[t] : Math.max(o + i[t], 0);
              s[e] = l;
            }
            return s;
          };
        }
        function Of(e, t) {
          var n = 'x6-shape',
            r = t && t.resetOffset;
          return function (t, i) {
            var o = i.elem,
              a = i.refBBox,
              s = Gl(o, n);
            if (!s || s.value !== t) {
              var l = e(t);
              (s = { value: t, shape: l, shapeBBox: l.bbox() }), Gl(o, n, s);
            }
            var u = s.shape.clone(),
              c = s.shapeBBox.clone(),
              f = c.getOrigin(),
              h = a.getOrigin();
            (c.x = h.x), (c.y = h.y);
            var d = a.getMaxScaleToFit(c, h),
              g = 0 === c.width || 0 === a.width ? 1 : d.sx,
              p = 0 === c.height || 0 === a.height ? 1 : d.sy;
            return u.scale(g, p, f), r && u.translate(-f.x, -f.y), u;
          };
        }
        function Pf(e) {
          var t = Of(function (e) {
            return Sc.parse(e);
          }, e);
          return function (e, n) {
            return { d: t(e, n).serialize() };
          };
        }
        function Af(e) {
          var t = Of(function (e) {
            return new fc(e);
          }, e);
          return function (e, n) {
            return { points: t(e, n).serialize() };
          };
        }
        var Mf = {
            qualify: $n,
            set: function (e, t) {
              var n = t.view;
              return 'url(#'.concat(n.graph.defineGradient(e), ')');
            },
          },
          Tf = {
            qualify: $n,
            set: function (e, t) {
              var n = t.view,
                r = n.cell,
                i = Object.assign({}, e);
              if (r.isEdge() && 'linearGradient' === i.type) {
                var o = n,
                  a = o.sourcePoint,
                  s = o.targetPoint;
                (i.id = 'gradient-'.concat(i.type, '-').concat(r.id)),
                  (i.attrs = Object.assign(Object.assign({}, i.attrs), {
                    x1: a.x,
                    y1: a.y,
                    x2: s.x,
                    y2: s.y,
                    gradientUnits: 'userSpaceOnUse',
                  })),
                  n.graph.defs.remove(i.id);
              }
              return 'url(#'.concat(n.graph.defineGradient(i), ')');
            },
          },
          Nf = {
            qualify: function (e, t) {
              var n = t.attrs;
              return null == n.textWrap || !$n(n.textWrap);
            },
            set: function (e, t) {
              var n = t.view,
                r = t.elem,
                i = t.attrs,
                o = 'x6-text',
                a = Gl(r, o),
                s = function (e) {
                  try {
                    return JSON.parse(e);
                  } catch (t) {
                    return e;
                  }
                },
                l = {
                  x: i.x,
                  eol: i.eol,
                  annotations: s(i.annotations),
                  textPath: s(i['text-path'] || i.textPath),
                  textVerticalAnchor:
                    i['text-vertical-anchor'] || i.textVerticalAnchor,
                  displayEmpty:
                    'true' === (i['display-empty'] || i.displayEmpty),
                  lineHeight: i['line-height'] || i.lineHeight,
                },
                u = i['font-size'] || i.fontSize,
                c = JSON.stringify([e, l]);
              if ((u && r.setAttribute('font-size', u), null == a || a !== c)) {
                var f = l.textPath;
                if (null != f && 'object' === _()(f)) {
                  var h = f.selector;
                  if ('string' == typeof h) {
                    var d = n.find(h)[0];
                    d instanceof SVGPathElement &&
                      (nl(d),
                      (l.textPath = Object.assign(
                        { 'xlink:href': '#'.concat(d.id) },
                        f
                      )));
                  }
                }
                eu(r, ''.concat(e), l), Gl(r, o, c);
              }
            },
          },
          jf = {
            qualify: $n,
            set: function (e, t) {
              var n = t.view,
                r = t.elem,
                i = t.attrs,
                o = t.refBBox,
                a = e,
                s = a.width || 0;
              Ss(s)
                ? (o.width *= parseFloat(s) / 100)
                : s <= 0
                ? (o.width += s)
                : (o.width = s);
              var l,
                u = a.height || 0;
              Ss(u)
                ? (o.height *= parseFloat(u) / 100)
                : u <= 0
                ? (o.height += u)
                : (o.height = u);
              var c = a.text;
              null == c && (c = i.text),
                (l =
                  null != c
                    ? (function (e, t) {
                        var n =
                            arguments.length > 2 && void 0 !== arguments[2]
                              ? arguments[2]
                              : {},
                          r =
                            arguments.length > 3 && void 0 !== arguments[3]
                              ? arguments[3]
                              : {},
                          i = t.width,
                          o = t.height,
                          a = r.eol || '\n',
                          s = tu(e, n).width;
                        if (s < i) return e;
                        var l = [],
                          u = n.fontSize || 14,
                          c = n.lineHeight
                            ? parseFloat(n.lineHeight)
                            : Math.ceil(1.4 * u),
                          f = Math.floor(o / c),
                          h = e,
                          d = s,
                          g = r.ellipsis,
                          p = 0;
                        g &&
                          ('string' != typeof g && (g = '…'),
                          (p = tu(g, n).width));
                        for (var v = 0; v < f; v += 1) {
                          if (!(d > i)) {
                            l.push(h);
                            break;
                          }
                          if (v === f - 1) {
                            var y = nu(h, i - p, d, n),
                              m = ql()(y, 1)[0];
                            l.push(g ? ''.concat(m).concat(g) : m);
                          } else {
                            var b = nu(h, i, d, n),
                              k = ql()(b, 2),
                              w = k[0],
                              x = k[1];
                            l.push(w), (d = tu((h = x), n).width);
                          }
                        }
                        return l.join(a);
                      })(
                        ''.concat(c),
                        o,
                        {
                          'font-weight': i['font-weight'] || i.fontWeight,
                          'font-size': i['font-size'] || i.fontSize,
                          'font-family': i['font-family'] || i.fontFamily,
                          lineHeight: i.lineHeight,
                        },
                        { ellipsis: a.ellipsis }
                      )
                    : ''),
                de(Nf.set, this, l, {
                  view: n,
                  elem: r,
                  attrs: i,
                  refBBox: o,
                  cell: n.cell,
                });
            },
          },
          Lf = function (e, t) {
            return void 0 !== t.attrs.text;
          },
          Rf = { qualify: Lf },
          _f = { qualify: Lf },
          If = { qualify: Lf },
          Df = { qualify: Lf },
          zf = { qualify: Lf },
          Bf = { qualify: Lf },
          Vf = {
            qualify: function (e, t) {
              return t.elem instanceof SVGElement;
            },
            set: function (e, t) {
              var n = t.elem,
                r = 'x6-title',
                i = ''.concat(e),
                o = Gl(n, r);
              if (null == o || o !== i) {
                Gl(n, r, i);
                var a = n.firstChild;
                if (a && 'TITLE' === a.tagName.toUpperCase()) {
                  a.textContent = i;
                } else {
                  var s = document.createElementNS(n.namespaceURI, 'title');
                  (s.textContent = i), n.insertBefore(s, a);
                }
              }
            },
          },
          Ff = { offset: Gf('x', 'width', 'right') },
          Uf = { offset: Gf('y', 'height', 'bottom') },
          Hf = {
            offset: function (e, t) {
              var n = t.refBBox;
              return e ? { x: -n.x, y: -n.y } : { x: 0, y: 0 };
            },
          };
        function Gf(e, t, n) {
          return function (r, i) {
            var o,
              a = i.refBBox,
              s = new Ku();
            return (
              (o =
                'middle' === r
                  ? a[t] / 2
                  : r === n
                  ? a[t]
                  : 'number' == typeof r && Number.isFinite(r)
                  ? r > -1 && r < 1
                    ? -a[t] * r
                    : -r
                  : Ss(r)
                  ? (a[t] * parseFloat(r)) / 100
                  : 0),
              (s[e] = -(a[e] + o)),
              s
            );
          };
        }
        var Wf = {
            qualify: $n,
            set: function (e, t) {
              Fl(t.elem, e);
            },
          },
          qf = {
            set: function (e, t) {
              t.elem.innerHTML = ''.concat(e);
            },
          },
          Xf = {
            qualify: $n,
            set: function (e, t) {
              var n = t.view;
              return 'url(#'.concat(n.graph.defineFilter(e), ')');
            },
          },
          Yf = {
            set: function (e) {
              return null != e && 'object' === _()(e) && e.id ? e.id : e;
            },
          };
        function Jf(e, t, n) {
          var r, i;
          'object' === _()(t) ? ((r = t.x), (i = t.y)) : ((r = t), (i = n));
          var o = Sc.parse(e),
            a = o.bbox();
          if (a) {
            var s = -a.height / 2 - a.y,
              l = -a.width / 2 - a.x;
            'number' == typeof r && (l -= r),
              'number' == typeof i && (s -= i),
              o.translate(l, s);
          }
          return o.serialize();
        }
        var $f = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Qf = function (e) {
            return Zf(
              {
                size: e.size,
                width: e.width,
                height: e.height,
                offset: e.offset,
              },
              !0 === e.open,
              !0,
              void 0,
              $f(e, ['size', 'width', 'height', 'offset', 'open'])
            );
          },
          Kf = function (e) {
            return Zf(
              {
                size: e.size,
                width: e.width,
                height: e.height,
                offset: e.offset,
              },
              !1,
              !1,
              e.factor,
              $f(e, ['size', 'width', 'height', 'offset', 'factor'])
            );
          };
        function Zf(e, t, n) {
          var r =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 3 / 4,
            i =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : {},
            o = e.size || 10,
            a = e.width || o,
            s = e.height || o,
            l = new Sc(),
            u = {};
          if (t)
            l
              .moveTo(a, 0)
              .lineTo(0, s / 2)
              .lineTo(a, s),
              (u.fill = 'none');
          else {
            if ((l.moveTo(0, s / 2), l.lineTo(a, 0), !n)) {
              var c = Cs(r, 0, 1);
              l.lineTo(a * c, s / 2);
            }
            l.lineTo(a, s), l.close();
          }
          return Object.assign(Object.assign(Object.assign({}, u), i), {
            tagName: 'path',
            d: Jf(l.serialize(), { x: null != e.offset ? e.offset : -a / 2 }),
          });
        }
        var eh,
          th = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          nh = function (e) {
            var t = e.size,
              n = e.width,
              r = e.height,
              i = e.offset,
              o = th(e, ['size', 'width', 'height', 'offset']),
              a = t || 10,
              s = n || a,
              l = r || a,
              u = new Sc();
            return (
              u
                .moveTo(0, l / 2)
                .lineTo(s / 2, 0)
                .lineTo(s, l / 2)
                .lineTo(s / 2, l)
                .close(),
              Object.assign(Object.assign({}, o), {
                tagName: 'path',
                d: Jf(u.serialize(), null == i ? -s / 2 : i),
              })
            );
          },
          rh = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          ih = function (e) {
            var t = e.d,
              n = e.offsetX,
              r = e.offsetY,
              i = rh(e, ['d', 'offsetX', 'offsetY']);
            return Object.assign(Object.assign({}, i), {
              tagName: 'path',
              d: Jf(t, n, r),
            });
          },
          oh = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          ah = function (e) {
            var t = e.size,
              n = e.width,
              r = e.height,
              i = e.offset,
              o = oh(e, ['size', 'width', 'height', 'offset']),
              a = t || 10,
              s = n || a,
              l = r || a,
              u = new Sc();
            return (
              u.moveTo(0, 0).lineTo(s, l).moveTo(0, l).lineTo(s, 0),
              Object.assign(Object.assign({}, o), {
                tagName: 'path',
                fill: 'none',
                d: Jf(u.serialize(), i || -s / 2),
              })
            );
          },
          sh = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          lh = function (e) {
            var t = e.width,
              n = e.height,
              r = e.offset,
              i = e.open,
              o = e.flip,
              a = sh(e, ['width', 'height', 'offset', 'open', 'flip']),
              s = n || 6,
              l = t || 10,
              u = !0 === i,
              c = !0 === o,
              f = Object.assign(Object.assign({}, a), { tagName: 'path' });
            c && (s = -s);
            var h = new Sc();
            return (
              h.moveTo(0, s).lineTo(l, 0),
              u ? (f.fill = 'none') : (h.lineTo(l, s), h.close()),
              (f.d = Jf(h.serialize(), { x: r || -l / 2, y: s / 2 })),
              f
            );
          },
          uh = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          ch = function (e) {
            var t = e.r,
              n = uh(e, ['r']),
              r = t || 5;
            return Object.assign(Object.assign({ cx: r }, n), {
              tagName: 'circle',
              r: r,
            });
          },
          fh = function (e) {
            var t = e.r,
              n = uh(e, ['r']),
              r = t || 5,
              i = new Sc();
            return (
              i.moveTo(r, 0).lineTo(r, 2 * r),
              i.moveTo(0, r).lineTo(2 * r, r),
              {
                children: [
                  Object.assign(Object.assign({}, ch({ r: r })), {
                    fill: 'none',
                  }),
                  Object.assign(Object.assign({}, n), {
                    tagName: 'path',
                    d: Jf(i.serialize(), -r),
                  }),
                ],
              }
            );
          },
          hh = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          dh = function (e) {
            var t = e.rx,
              n = e.ry,
              r = hh(e, ['rx', 'ry']),
              i = t || 5,
              o = n || 5;
            return Object.assign(Object.assign({ cx: i }, r), {
              tagName: 'ellipse',
              rx: i,
              ry: o,
            });
          };
        !(function (e) {
          (e.presets = r),
            (e.registry = Ec.create({ type: 'marker' })),
            e.registry.register(e.presets, !0);
        })(eh || (eh = {})),
          (function (e) {
            e.normalize = Jf;
          })(eh || (eh = {}));
        var gh = function (e, t) {
          var n = {};
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) &&
              t.indexOf(r) < 0 &&
              (n[r] = e[r]);
          if (null != e && 'function' == typeof Object.getOwnPropertySymbols) {
            var i = 0;
            for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
              t.indexOf(r[i]) < 0 &&
                Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                (n[r[i]] = e[r[i]]);
          }
          return n;
        };
        function ph(e) {
          return 'string' == typeof e || $n(e);
        }
        var vh = {
            qualify: ph,
            set: function (e, t) {
              return bh('marker-start', e, t.view, t.attrs);
            },
          },
          yh = {
            qualify: ph,
            set: function (e, t) {
              return bh('marker-end', e, t.view, t.attrs, {
                transform: 'rotate(180)',
              });
            },
          },
          mh = {
            qualify: ph,
            set: function (e, t) {
              return bh('marker-mid', e, t.view, t.attrs);
            },
          };
        function bh(e, t, n, r) {
          var i =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : {},
            o = 'string' == typeof t ? { name: t } : t,
            a = o.name,
            s = o.args,
            l = gh(o, ['name', 'args']),
            u = l;
          if (a && 'string' == typeof a) {
            var c = eh.registry.get(a);
            if (!c) return eh.registry.onNotFound(a);
            u = c(Object.assign(Object.assign({}, l), s));
          }
          var f = Object.assign(
            Object.assign(Object.assign({}, kh(r, e)), i),
            u
          );
          return w()({}, e, 'url(#'.concat(n.graph.defineMarker(f), ')'));
        }
        function kh(e, t) {
          var n = {},
            r = e.stroke;
          'string' == typeof r && ((n.stroke = r), (n.fill = r));
          var i = e.strokeOpacity;
          if (
            (null == i && (i = e['stroke-opacity']),
            null == i && (i = e.opacity),
            null != i && ((n['stroke-opacity'] = i), (n['fill-opacity'] = i)),
            'marker-mid' !== t)
          ) {
            var o = parseFloat(e.strokeWidth || e['stroke-width']);
            if (Number.isFinite(o) && o > 1) {
              var a = Math.ceil(o / 2);
              n.refX = 'marker-start' === t ? a : -a;
            }
          }
          return n;
        }
        var wh,
          xh = function (e, t) {
            return t.view.cell.isEdge();
          },
          Ch = {
            qualify: xh,
            set: function (e, t) {
              var n,
                r,
                i,
                o,
                a,
                s = t.view,
                l = e.reverse || !1,
                u = e.stubs || 0;
              if (Number.isFinite(u) && 0 !== u)
                if (l) {
                  var c,
                    f,
                    h = s.getConnectionLength() || 0;
                  u < 0
                    ? ((c = (h + u) / 2), (f = -u))
                    : ((c = u), (f = h - 2 * u));
                  var d = s.getConnection();
                  a =
                    null ===
                      (o =
                        null ===
                          (i =
                            null ===
                              (r =
                                null ===
                                  (n =
                                    null == d ? void 0 : d.divideAtLength(c)) ||
                                void 0 === n
                                  ? void 0
                                  : n[1]) || void 0 === r
                              ? void 0
                              : r.divideAtLength(f)) || void 0 === i
                          ? void 0
                          : i[0]) || void 0 === o
                      ? void 0
                      : o.serialize();
                } else {
                  var g;
                  if (u < 0) g = ((s.getConnectionLength() || 0) + u) / 2;
                  else g = u;
                  var p = s.getConnection();
                  if (p) {
                    var v = p.divideAtLength(g),
                      y = p.divideAtLength(-g);
                    v &&
                      y &&
                      (a = ''
                        .concat(v[0].serialize(), ' ')
                        .concat(y[1].serialize()));
                  }
                }
              return { d: a || s.getConnectionPathData() };
            },
          },
          Sh = { qualify: xh, set: Th('getTangentAtLength', { rotate: !0 }) },
          Eh = { qualify: xh, set: Th('getTangentAtLength', { rotate: !1 }) },
          Oh = { qualify: xh, set: Th('getTangentAtRatio', { rotate: !0 }) },
          Ph = { qualify: xh, set: Th('getTangentAtRatio', { rotate: !1 }) },
          Ah = Sh,
          Mh = Oh;
        function Th(e, t) {
          var n = { x: 1, y: 0 };
          return function (r, i) {
            var o,
              a,
              s = i.view,
              l = s[e](Number(r));
            return (
              l
                ? ((a = t.rotate ? l.vector().vectorAngle(n) : 0),
                  (o = l.start))
                : ((o = s.path.start), (a = 0)),
              0 === a
                ? { transform: 'translate('.concat(o.x, ',').concat(o.y, "')") }
                : {
                    transform: 'translate('
                      .concat(o.x, ',')
                      .concat(o.y, "') rotate(")
                      .concat(a, ')'),
                  }
            );
          };
        }
        !(function (e) {
          e.isValidDefinition = function (e, t, n) {
            if (null != e) {
              if ('string' == typeof e) return !0;
              if ('function' != typeof e.qualify || de(e.qualify, this, t, n))
                return !0;
            }
            return !1;
          };
        })(wh || (wh = {})),
          (function (e) {
            (e.presets = Object.assign(Object.assign({}, Kc), a)),
              (e.registry = Ec.create({ type: 'attribute definition' })),
              e.registry.register(e.presets, !0);
          })(wh || (wh = {}));
        var Nh,
          jh = {
            prefixCls: 'x6',
            autoInsertCSS: !0,
            useCSSSelector: !0,
            prefix: function (e) {
              return ''.concat(jh.prefixCls, '-').concat(e);
            },
          },
          Lh = jh.prefix('highlighted'),
          Rh = {
            highlight: function (e, t, n) {
              Ks(t, (n && n.className) || Lh);
            },
            unhighlight: function (e, t, n) {
              Zs(t, (n && n.className) || Lh);
            },
          },
          _h = jh.prefix('highlight-opacity'),
          Ih = {
            highlight: function (e, t) {
              Ks(t, _h);
            },
            unhighlight: function (e, t) {
              Zs(t, _h);
            },
          };
        !(function (e) {
          var t = sl('svg');
          function n(e, t) {
            var n = yu(e.x, e.y).matrixTransform(t);
            return new Ku(n.x, n.y);
          }
          function r(e, n) {
            var r = t.createSVGPoint();
            (r.x = e.x), (r.y = e.y);
            var i = r.matrixTransform(n);
            (r.x = e.x + e.width), (r.y = e.y);
            var o = r.matrixTransform(n);
            (r.x = e.x + e.width), (r.y = e.y + e.height);
            var a = r.matrixTransform(n);
            (r.x = e.x), (r.y = e.y + e.height);
            var s = r.matrixTransform(n),
              l = Math.min(i.x, o.x, a.x, s.x),
              u = Math.max(i.x, o.x, a.x, s.x),
              c = Math.min(i.y, o.y, a.y, s.y),
              f = Math.max(i.y, o.y, a.y, s.y);
            return new Zu(l, c, u - l, f - c);
          }
          function i(e) {
            var t,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {},
              a = e.ownerSVGElement;
            if (!a || !rl(e)) {
              if (vl(e)) {
                var s = o(e),
                  l = s.left,
                  u = s.top,
                  c = s.width,
                  f = s.height;
                return new Zu(l, u, c, f);
              }
              return new Zu(0, 0, 0, 0);
            }
            var h = n.target,
              d = n.recursive;
            if (!d) {
              try {
                t = e.getBBox();
              } catch (n) {
                t = {
                  x: e.clientLeft,
                  y: e.clientTop,
                  width: e.clientWidth,
                  height: e.clientHeight,
                };
              }
              if (!h) return Zu.create(t);
              var g = Au(e, h);
              return r(t, g);
            }
            var p = e.childNodes,
              v = p.length;
            if (0 === v) return i(e, { target: h });
            h || (h = e);
            for (var y = 0; y < v; y += 1) {
              var m = p[y],
                b = void 0;
              (b =
                0 === m.childNodes.length
                  ? i(m, { target: h })
                  : i(m, { target: h, recursive: !0 })),
                (t = t ? t.union(b) : b);
            }
            return t;
          }
          function o(e) {
            var t = 0,
              n = 0,
              r = 0,
              i = 0;
            if (e) {
              for (var o = e; o; )
                (t += o.offsetLeft),
                  (n += o.offsetTop),
                  (o = o.offsetParent) &&
                    ((t += parseInt(Dl(o, 'borderLeft'), 10)),
                    (n += parseInt(Dl(o, 'borderTop'), 10)));
              (r = e.offsetWidth), (i = e.offsetHeight);
            }
            return { left: t, top: n, width: r, height: i };
          }
          function a(e) {
            var t = function (t) {
              var n = e.getAttribute(t),
                r = n ? parseFloat(n) : 0;
              return Number.isNaN(r) ? 0 : r;
            };
            switch (e instanceof SVGElement && e.nodeName.toLowerCase()) {
              case 'rect':
                return new Zu(t('x'), t('y'), t('width'), t('height'));
              case 'circle':
                return new tc(t('cx'), t('cy'), t('r'), t('r'));
              case 'ellipse':
                return new tc(t('cx'), t('cy'), t('rx'), t('ry'));
              case 'polyline':
                var n = su(e);
                return new fc(n);
              case 'polygon':
                var r = su(e);
                return r.length > 1 && r.push(r[0]), new fc(r);
              case 'path':
                var o = e.getAttribute('d');
                return Sc.isValid(o) || (o = Sc.normalize(o)), Sc.parse(o);
              case 'line':
                return new ec(t('x1'), t('y1'), t('x2'), t('y2'));
            }
            return i(e);
          }
          function s(e) {
            if (null == e) return null;
            var t = e;
            do {
              var n = t.tagName;
              if ('string' != typeof n) return null;
              if (((n = n.toUpperCase()), Qs(t, 'x6-port')))
                t = t.nextElementSibling;
              else if ('G' === n) t = t.firstElementChild;
              else {
                if ('TITLE' !== n) break;
                t = t.nextElementSibling;
              }
            } while (t);
            return t;
          }
          (e.transformPoint = n),
            (e.transformLine = function (e, t) {
              return new ec(n(e.start, t), n(e.end, t));
            }),
            (e.transformPolyline = function (e, t) {
              var r = e instanceof fc ? e.points : e;
              return (
                Array.isArray(r) || (r = []),
                new fc(
                  r.map(function (e) {
                    return n(e, t);
                  })
                )
              );
            }),
            (e.transformRectangle = r),
            (e.bbox = function (e, t, n) {
              var i,
                o = e.ownerSVGElement;
              if (!o) return new Zu(0, 0, 0, 0);
              try {
                i = e.getBBox();
              } catch (t) {
                i = {
                  x: e.clientLeft,
                  y: e.clientTop,
                  width: e.clientWidth,
                  height: e.clientHeight,
                };
              }
              return t ? Zu.create(i) : r(i, Au(e, n || o));
            }),
            (e.getBBox = i),
            (e.getBoundingOffsetRect = o),
            (e.toGeometryShape = a),
            (e.translateAndAutoOrient = function (e, t, n, r) {
              var o = Ku.create(t),
                a = Ku.create(n);
              r || (r = e instanceof SVGSVGElement ? e : e.ownerSVGElement);
              var s = Pu(e);
              e.setAttribute('transform', '');
              var l = i(e, { target: r }).scale(s.sx, s.sy),
                u = bu();
              u.setTranslate(-l.x - l.width / 2, -l.y - l.height / 2);
              var c = bu(),
                f = o.angleBetween(a, o.clone().translate(1, 0));
              f && c.setRotate(f, 0, 0);
              var h = bu(),
                d = o.clone().move(a, l.width / 2);
              h.setTranslate(2 * o.x - d.x, 2 * o.y - d.y);
              var g = Au(e, r),
                p = bu();
              p.setMatrix(
                h.matrix.multiply(
                  c.matrix.multiply(u.matrix.multiply(g.scale(s.sx, s.sy)))
                )
              ),
                e.setAttribute('transform', wu(p.matrix));
            }),
            (e.findShapeNode = s),
            (e.getBBoxV2 = function (e) {
              var t = s(e);
              if (!rl(t)) {
                if (vl(e)) {
                  var n = o(e),
                    r = n.left,
                    i = n.top,
                    l = n.width,
                    u = n.height;
                  return new Zu(r, i, l, u);
                }
                return new Zu(0, 0, 0, 0);
              }
              return a(t).bbox() || Zu.create();
            });
        })(Nh || (Nh = {}));
        var Dh,
          zh,
          Bh = {
            padding: 3,
            rx: 0,
            ry: 0,
            attrs: { 'stroke-width': 3, stroke: '#FEB663' },
          },
          Vh = {
            highlight: function (e, t, n) {
              var r = Dh.getHighlighterId(t, n);
              if (!Dh.hasCache(r)) {
                n = Zi({}, n, Bh);
                var i,
                  o,
                  a = Xl.create(t);
                try {
                  i = a.toPathData();
                } catch (e) {
                  (o = Nh.bbox(a.node, !0)),
                    (i = lu(Object.assign(Object.assign({}, n), o)));
                }
                var s = sl('path');
                if (
                  (Cl(
                    s,
                    Object.assign(
                      {
                        d: i,
                        'pointer-events': 'none',
                        'vector-effect': 'non-scaling-stroke',
                        fill: 'none',
                      },
                      n.attrs ? El(n.attrs) : null
                    )
                  ),
                  e.isEdgeElement(t))
                )
                  Cl(s, 'd', e.getConnectionPathData());
                else {
                  var l = a.getTransformToElement(e.container),
                    u = n.padding;
                  if (u) {
                    null == o && (o = Nh.bbox(a.node, !0));
                    var c = o.x + o.width / 2,
                      f = o.y + o.height / 2;
                    o = Nh.transformRectangle(o, l);
                    var h = Math.max(o.width, 1),
                      d = Math.max(o.height, 1),
                      g = (h + u) / h,
                      p = (d + u) / d,
                      v = mu({
                        a: g,
                        b: 0,
                        c: 0,
                        d: p,
                        e: c - g * c,
                        f: f - p * f,
                      });
                    l = l.multiply(v);
                  }
                  Su(s, l);
                }
                Ks(s, jh.prefix('highlight-stroke'));
                var y = e.cell,
                  m = function () {
                    return Dh.removeHighlighter(r);
                  };
                y.on('removed', m),
                  y.model && y.model.on('reseted', m),
                  e.container.appendChild(s),
                  Dh.setCache(r, s);
              }
            },
            unhighlight: function (e, t, n) {
              Dh.removeHighlighter(Dh.getHighlighterId(t, n));
            },
          };
        function Fh(e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return new Ku(Es(t.x, e.width), Es(t.y, e.height));
        }
        function Uh(e, t, n) {
          return Object.assign({ angle: t, position: e.toJSON() }, n);
        }
        !(function (e) {
          e.getHighlighterId = function (e, t) {
            return nl(e), e.id + JSON.stringify(t);
          };
          var t = {};
          (e.setCache = function (e, n) {
            t[e] = n;
          }),
            (e.hasCache = function (e) {
              return null != t[e];
            }),
            (e.removeHighlighter = function (e) {
              var n = t[e];
              n && (hl(n), delete t[e]);
            });
        })(Dh || (Dh = {})),
          (function (e) {
            e.check = function (e, t) {
              if ('function' != typeof t.highlight)
                throw new Error(
                  "Highlighter '".concat(
                    e,
                    "' is missing required `highlight()` method"
                  )
                );
              if ('function' != typeof t.unhighlight)
                throw new Error(
                  "Highlighter '".concat(
                    e,
                    "' is missing required `unhighlight()` method"
                  )
                );
            };
          })(zh || (zh = {})),
          (function (e) {
            (e.presets = s),
              (e.registry = Ec.create({ type: 'highlighter' })),
              e.registry.register(e.presets, !0);
          })(zh || (zh = {}));
        var Hh = function (e, t) {
            return e.map(function (e) {
              var n = e.x,
                r = e.y,
                i = e.angle;
              return Uh(Fh(t, { x: n, y: r }), i || 0);
            });
          },
          Gh = function (e, t, n) {
            var r = n.start || 0,
              i = n.step || 20;
            return qh(e, t, r, function (e, t) {
              return (e + 0.5 - t / 2) * i;
            });
          },
          Wh = function (e, t, n) {
            var r = n.start || 0,
              i = n.step || 360 / e.length;
            return qh(e, t, r, function (e) {
              return e * i;
            });
          };
        function qh(e, t, n, r) {
          var i = t.getCenter(),
            o = t.getTopCenter(),
            a = t.width / t.height,
            s = tc.fromRect(t),
            l = e.length;
          return e.map(function (e, t) {
            var u = n + r(t, l),
              c = o.clone().rotate(-u, i).scale(a, 1, i),
              f = e.compensateRotate ? -s.tangentTheta(c) : 0;
            return (
              (e.dx || e.dy) && c.translate(e.dx || 0, e.dy || 0),
              e.dr && c.move(i, e.dr),
              Uh(c.round(), f, e)
            );
          });
        }
        var Xh,
          Yh = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Jh = function (e, t, n) {
            return ed(
              e,
              Fh(t, n.start || t.getOrigin()),
              Fh(t, n.end || t.getCorner()),
              n
            );
          },
          $h = function (e, t, n) {
            return ed(e, t.getTopLeft(), t.getBottomLeft(), n);
          },
          Qh = function (e, t, n) {
            return ed(e, t.getTopRight(), t.getBottomRight(), n);
          },
          Kh = function (e, t, n) {
            return ed(e, t.getTopLeft(), t.getTopRight(), n);
          },
          Zh = function (e, t, n) {
            return ed(e, t.getBottomLeft(), t.getBottomRight(), n);
          };
        function ed(e, t, n, r) {
          var i = new ec(t, n),
            o = e.length;
          return e.map(function (e, t) {
            var n = e.strict,
              a = Yh(e, ['strict']),
              s = n || r.strict ? (t + 1) / (o + 1) : (t + 0.5) / o,
              l = i.pointAt(s);
            return (
              (a.dx || a.dy) && l.translate(a.dx || 0, a.dy || 0),
              Uh(l.round(), 0, a)
            );
          });
        }
        !(function (e) {
          (e.presets = l),
            (e.registry = Ec.create({ type: 'port layout' })),
            e.registry.register(e.presets, !0);
        })(Xh || (Xh = {}));
        var td = {
          position: { x: 0, y: 0 },
          angle: 0,
          attrs: { '.': { y: '0', 'text-anchor': 'start' } },
        };
        function nd(e, t) {
          var n = t || {},
            r = n.x,
            i = n.y,
            o = n.angle,
            a = n.attrs;
          return Zi(
            {},
            { angle: o, attrs: a, position: { x: r, y: i } },
            e,
            td
          );
        }
        var rd = function (e, t, n) {
            return nd({ position: t.getTopLeft() }, n);
          },
          id = function (e, t, n) {
            return nd(
              {
                position: { x: -15, y: 0 },
                attrs: { '.': { y: '.3em', 'text-anchor': 'end' } },
              },
              n
            );
          },
          od = function (e, t, n) {
            return nd(
              {
                position: { x: 15, y: 0 },
                attrs: { '.': { y: '.3em', 'text-anchor': 'start' } },
              },
              n
            );
          },
          ad = function (e, t, n) {
            return nd(
              {
                position: { x: 0, y: -15 },
                attrs: { '.': { 'text-anchor': 'middle' } },
              },
              n
            );
          },
          sd = function (e, t, n) {
            return nd(
              {
                position: { x: 0, y: 15 },
                attrs: { '.': { y: '.6em', 'text-anchor': 'middle' } },
              },
              n
            );
          },
          ld = function (e, t, n) {
            return hd(e, t, !1, n);
          },
          ud = function (e, t, n) {
            return hd(e, t, !0, n);
          },
          cd = function (e, t, n) {
            return dd(e, t, !1, n);
          },
          fd = function (e, t, n) {
            return dd(e, t, !0, n);
          };
        function hd(e, t, n, r) {
          var i,
            o,
            a,
            s,
            l = null != r.offset ? r.offset : 15,
            u = t.getCenter().theta(e),
            c = gd(t),
            f = 0;
          return (
            u < c[1] || u > c[2]
              ? ((i = '.3em'), (o = l), (a = 0), (s = 'start'))
              : u < c[0]
              ? ((i = '0'),
                (o = 0),
                (a = -l),
                n ? ((f = -90), (s = 'start')) : (s = 'middle'))
              : u < c[3]
              ? ((i = '.3em'), (o = -l), (a = 0), (s = 'end'))
              : ((i = '.6em'),
                (o = 0),
                (a = l),
                n ? ((f = 90), (s = 'start')) : (s = 'middle')),
            nd(
              {
                position: { x: Math.round(o), y: Math.round(a) },
                angle: f,
                attrs: { '.': { y: i, 'text-anchor': s } },
              },
              r
            )
          );
        }
        function dd(e, t, n, r) {
          var i,
            o,
            a,
            s,
            l = null != r.offset ? r.offset : 15,
            u = t.getCenter().theta(e),
            c = gd(t),
            f = 0;
          return (
            u < c[1] || u > c[2]
              ? ((i = '.3em'), (o = -l), (a = 0), (s = 'end'))
              : u < c[0]
              ? ((i = '.6em'),
                (o = 0),
                (a = l),
                n ? ((f = 90), (s = 'start')) : (s = 'middle'))
              : u < c[3]
              ? ((i = '.3em'), (o = l), (a = 0), (s = 'start'))
              : ((i = '0em'),
                (o = 0),
                (a = -l),
                n ? ((f = -90), (s = 'start')) : (s = 'middle')),
            nd(
              {
                position: { x: Math.round(o), y: Math.round(a) },
                angle: f,
                attrs: { '.': { y: i, 'text-anchor': s } },
              },
              r
            )
          );
        }
        function gd(e) {
          var t = e.getCenter(),
            n = t.theta(e.getTopLeft()),
            r = t.theta(e.getBottomLeft()),
            i = t.theta(e.getBottomRight());
          return [n, t.theta(e.getTopRight()), i, r];
        }
        var pd,
          vd = function (e, t, n) {
            return md(e.diff(t.getCenter()), !1, n);
          },
          yd = function (e, t, n) {
            return md(e.diff(t.getCenter()), !0, n);
          };
        function md(e, t, n) {
          var r,
            i = null != n.offset ? n.offset : 20,
            o = new Ku(0, 0),
            a = -e.theta(o),
            s = '.3em',
            l = a;
          return (
            (a + 90) % 180 == 0
              ? ((r = t ? 'end' : 'middle'), t || -270 !== a || (s = '0em'))
              : a > -270 && a < -90
              ? ((r = 'start'), (l = a - 180))
              : (r = 'end'),
            nd(
              {
                position: e.clone().move(o, i).diff(e).round().round().toJSON(),
                angle: t ? l : 0,
                attrs: { '.': { y: s, 'text-anchor': r } },
              },
              n
            )
          );
        }
        !(function (e) {
          (e.presets = u),
            (e.registry = Ec.create({ type: 'port label layout' })),
            e.registry.register(e.presets, !0);
        })(pd || (pd = {}));
        var bd,
          kd = i(929),
          wd = i.n(kd),
          xd = i(53),
          Cd = i.n(xd),
          Sd = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              var e;
              return (
                y()(this, n),
                ((e = t.call(this)).cid = bd.uniqueId()),
                (n.views[e.cid] = $u()(e)),
                e
              );
            }
            return (
              b()(n, [
                {
                  key: 'priority',
                  get: function () {
                    return 2;
                  },
                },
                {
                  key: 'confirmUpdate',
                  value: function (e, t) {
                    return 0;
                  },
                },
                {
                  key: 'empty',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : this.container;
                    return dl(e), this;
                  },
                },
                {
                  key: 'unmount',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : this.container;
                    return hl(e), this;
                  },
                },
                {
                  key: 'remove',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : this.container;
                    return (
                      e === this.container &&
                        (this.removeEventListeners(document),
                        this.onRemove(),
                        delete n.views[this.cid]),
                      this.unmount(e),
                      this
                    );
                  },
                },
                { key: 'onRemove', value: function () {} },
                {
                  key: 'setClass',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : this.container;
                    t.classList.value = Array.isArray(e) ? e.join(' ') : e;
                  },
                },
                {
                  key: 'addClass',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : this.container;
                    return Ks(t, Array.isArray(e) ? e.join(' ') : e), this;
                  },
                },
                {
                  key: 'removeClass',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : this.container;
                    return Zs(t, Array.isArray(e) ? e.join(' ') : e), this;
                  },
                },
                {
                  key: 'setStyle',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : this.container;
                    return Fl(t, e), this;
                  },
                },
                {
                  key: 'setAttrs',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : this.container;
                    return null != e && null != t && Cl(t, e), this;
                  },
                },
                {
                  key: 'findAttr',
                  value: function (e) {
                    for (
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : this.container,
                        n = t;
                      n && 1 === n.nodeType;

                    ) {
                      var r = n.getAttribute(e);
                      if (null != r) return r;
                      if (n === this.container) return null;
                      n = n.parentNode;
                    }
                    return null;
                  },
                },
                {
                  key: 'find',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : this.container,
                      r =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : this.selectors;
                    return n.find(e, t, r).elems;
                  },
                },
                {
                  key: 'findOne',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : this.container,
                      n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : this.selectors,
                      r = this.find(e, t, n);
                    return r.length > 0 ? r[0] : null;
                  },
                },
                {
                  key: 'findByAttr',
                  value: function (e) {
                    for (
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : this.container,
                        n = t;
                      n && n.getAttribute;

                    ) {
                      var r = n.getAttribute(e);
                      if ((null != r || n === this.container) && 'false' !== r)
                        return n;
                      n = n.parentNode;
                    }
                    return null;
                  },
                },
                {
                  key: 'getSelector',
                  value: function (e, t) {
                    var n;
                    if (e === this.container)
                      return 'string' == typeof t && (n = '> '.concat(t)), n;
                    if (e) {
                      var r = ul(e) + 1;
                      (n = ''
                        .concat(e.tagName.toLowerCase(), ':nth-child(')
                        .concat(r, ')')),
                        t && (n += ' > '.concat(t)),
                        (n = this.getSelector(e.parentNode, n));
                    }
                    return n;
                  },
                },
                {
                  key: 'prefixClassName',
                  value: function (e) {
                    return jh.prefix(e);
                  },
                },
                {
                  key: 'delegateEvents',
                  value: function (e, t) {
                    var n = this;
                    if (null == e) return this;
                    t || this.undelegateEvents();
                    var r = /^(\S+)\s*(.*)$/;
                    return (
                      Object.keys(e).forEach(function (t) {
                        var i = t.match(r);
                        if (null != i) {
                          var o = n.getEventHandler(e[t]);
                          'function' == typeof o &&
                            n.delegateEvent(i[1], i[2], o);
                        }
                      }),
                      this
                    );
                  },
                },
                {
                  key: 'undelegateEvents',
                  value: function () {
                    return (
                      ju.off(this.container, this.getEventNamespace()), this
                    );
                  },
                },
                {
                  key: 'delegateDocumentEvents',
                  value: function (e, t) {
                    return this.addEventListeners(document, e, t), this;
                  },
                },
                {
                  key: 'undelegateDocumentEvents',
                  value: function () {
                    return this.removeEventListeners(document), this;
                  },
                },
                {
                  key: 'delegateEvent',
                  value: function (e, t, n) {
                    return (
                      ju.on(this.container, e + this.getEventNamespace(), t, n),
                      this
                    );
                  },
                },
                {
                  key: 'undelegateEvent',
                  value: function (e, t, n) {
                    var r = e + this.getEventNamespace();
                    return (
                      null == t
                        ? ju.off(this.container, r)
                        : 'string' == typeof t
                        ? ju.off(this.container, r, t, n)
                        : ju.off(this.container, r, t),
                      this
                    );
                  },
                },
                {
                  key: 'addEventListeners',
                  value: function (e, t, n) {
                    var r = this;
                    if (null == t) return this;
                    var i = this.getEventNamespace();
                    return (
                      Object.keys(t).forEach(function (o) {
                        var a = r.getEventHandler(t[o]);
                        'function' == typeof a && ju.on(e, o + i, n, a);
                      }),
                      this
                    );
                  },
                },
                {
                  key: 'removeEventListeners',
                  value: function (e) {
                    return (
                      null != e && ju.off(e, this.getEventNamespace()), this
                    );
                  },
                },
                {
                  key: 'getEventNamespace',
                  value: function () {
                    return '.'.concat(jh.prefixCls, '-event-').concat(this.cid);
                  },
                },
                {
                  key: 'getEventHandler',
                  value: function (e) {
                    var t,
                      n = this;
                    if ('string' == typeof e) {
                      var r = this[e];
                      'function' == typeof r &&
                        (t = function () {
                          for (
                            var e = arguments.length, t = new Array(e), i = 0;
                            i < e;
                            i++
                          )
                            t[i] = arguments[i];
                          return r.call.apply(r, [n].concat(t));
                        });
                    } else
                      t = function () {
                        for (
                          var t = arguments.length, r = new Array(t), i = 0;
                          i < t;
                          i++
                        )
                          r[i] = arguments[i];
                        return e.call.apply(e, [n].concat(r));
                      };
                    return t;
                  },
                },
                {
                  key: 'getEventTarget',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = e.target,
                      r = e.type,
                      i = e.clientX,
                      o = void 0 === i ? 0 : i,
                      a = e.clientY,
                      s = void 0 === a ? 0 : a;
                    return t.fromPoint || 'touchmove' === r || 'touchend' === r
                      ? document.elementFromPoint(o, s)
                      : n;
                  },
                },
                {
                  key: 'stopPropagation',
                  value: function (e) {
                    return (
                      this.setEventData(e, { propagationStopped: !0 }), this
                    );
                  },
                },
                {
                  key: 'isPropagationStopped',
                  value: function (e) {
                    return !0 === this.getEventData(e).propagationStopped;
                  },
                },
                {
                  key: 'getEventData',
                  value: function (e) {
                    return this.eventData(e);
                  },
                },
                {
                  key: 'setEventData',
                  value: function (e, t) {
                    return this.eventData(e, t);
                  },
                },
                {
                  key: 'eventData',
                  value: function (e, t) {
                    if (null == e) throw new TypeError('Event object required');
                    var n = e.data,
                      r = '__'.concat(this.cid, '__');
                    return null == t
                      ? null == n
                        ? {}
                        : n[r] || {}
                      : (null == n && (n = e.data = {}),
                        null == n[r]
                          ? (n[r] = Object.assign({}, t))
                          : (n[r] = Object.assign(Object.assign({}, n[r]), t)),
                        n[r]);
                  },
                },
                {
                  key: 'normalizeEvent',
                  value: function (e) {
                    return n.normalizeEvent(e);
                  },
                },
              ]),
              n
            );
          })(so);
        !(function (e) {
          (e.createElement = function (e, t) {
            return t ? sl(e || 'g') : al(e || 'div');
          }),
            (e.find = function (e, t, n) {
              if (!e || '.' === e) return { elems: [t] };
              if (n) {
                var r = n[e];
                if (r) return { elems: Array.isArray(r) ? r : [r] };
              }
              if (jh.useCSSSelector) {
                var i = e.includes('>') ? ':scope '.concat(e) : e;
                return {
                  isCSSSelector: !0,
                  elems: Array.prototype.slice.call(t.querySelectorAll(i)),
                };
              }
              return { elems: [] };
            }),
            (e.normalizeEvent = function (e) {
              var t = e,
                n = e.originalEvent,
                r = n && n.changedTouches && n.changedTouches[0];
              if (r) {
                for (var i in e) void 0 === r[i] && (r[i] = e[i]);
                t = r;
              }
              var o = t.target;
              if (o) {
                var a = o.correspondingUseElement;
                a && (t.target = a);
              }
              return t;
            });
        })(Sd || (Sd = {})),
          (function (e) {
            (e.views = {}),
              (e.getView = function (t) {
                return e.views[t] || null;
              });
          })(Sd || (Sd = {})),
          (function (e) {
            var t = 0;
            e.uniqueId = function () {
              var e = 'v'.concat(t);
              return (t += 1), e;
            };
          })(bd || (bd = {}));
        var Ed,
          Od = (function () {
            function e(t) {
              y()(this, e), (this.view = t), this.clean();
            }
            return (
              b()(e, [
                {
                  key: 'clean',
                  value: function () {
                    this.elemCache && this.elemCache.dispose(),
                      (this.elemCache = new Wu()),
                      (this.pathCache = {});
                  },
                },
                {
                  key: 'get',
                  value: function (e) {
                    return (
                      this.elemCache.has(e) || this.elemCache.set(e, {}),
                      this.elemCache.get(e)
                    );
                  },
                },
                {
                  key: 'getData',
                  value: function (e) {
                    var t = this.get(e);
                    return t.data || (t.data = {}), t.data;
                  },
                },
                {
                  key: 'getMatrix',
                  value: function (e) {
                    var t = this.get(e);
                    if (null == t.matrix) {
                      var n = this.view.container;
                      t.matrix = (function (e, t) {
                        var n = mu();
                        if (rl(t) && rl(e)) {
                          for (var r = e, i = []; r && r !== t; ) {
                            var o = ku(r.getAttribute('transform') || null);
                            i.push(o), (r = r.parentNode);
                          }
                          i.reverse().forEach(function (e) {
                            n = n.multiply(e);
                          });
                        }
                        return n;
                      })(e, n);
                    }
                    return mu(t.matrix);
                  },
                },
                {
                  key: 'getShape',
                  value: function (e) {
                    var t = this.get(e);
                    return (
                      null == t.shape && (t.shape = Nh.toGeometryShape(e)),
                      t.shape.clone()
                    );
                  },
                },
                {
                  key: 'getBoundingRect',
                  value: function (e) {
                    var t = this.get(e);
                    return (
                      null == t.boundingRect &&
                        (t.boundingRect = Nh.getBBoxV2(e)),
                      t.boundingRect.clone()
                    );
                  },
                },
              ]),
              e
            );
          })();
        !(function (e) {
          function t(e) {
            return null != e && 'string' == typeof e;
          }
          function n(e) {
            for (
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : { ns: il.svg },
                n = document.createDocumentFragment(),
                r = {},
                i = {},
                o = [
                  { markup: Array.isArray(e) ? e : [e], parent: n, ns: t.ns },
                ],
                a = function () {
                  var e = o.pop(),
                    t = e.ns || il.svg,
                    n = e.markup,
                    a = e.parent;
                  n.forEach(function (e) {
                    var n = e.tagName;
                    if (!n) throw new TypeError('Invalid tagName');
                    e.ns && (t = e.ns);
                    var s = t ? al(n, t) : ol(n),
                      l = e.attrs;
                    l && Cl(s, El(l));
                    var u = e.style;
                    u && Fl(s, u);
                    var c = e.className;
                    null != c &&
                      s.setAttribute(
                        'class',
                        Array.isArray(c) ? c.join(' ') : c
                      ),
                      e.textContent && (s.textContent = e.textContent);
                    var f = e.selector;
                    if (null != f) {
                      if (i[f]) throw new TypeError('Selector must be unique');
                      i[f] = s;
                    }
                    if (e.groupSelector) {
                      var h = e.groupSelector;
                      Array.isArray(h) || (h = [h]),
                        h.forEach(function (e) {
                          r[e] || (r[e] = []), r[e].push(s);
                        });
                    }
                    a.appendChild(s);
                    var d = e.children;
                    Array.isArray(d) && o.push({ ns: t, markup: d, parent: s });
                  });
                };
              o.length > 0;

            )
              a();
            return (
              Object.keys(r).forEach(function (e) {
                if (i[e]) throw new Error('Ambiguous group selector');
                i[e] = r[e];
              }),
              { fragment: n, selectors: i, groups: r }
            );
          }
          function r(e) {
            return e instanceof SVGElement ? sl('g') : ol('div');
          }
          (e.isJSONMarkup = function (e) {
            return null != e && !t(e);
          }),
            (e.isStringMarkup = t),
            (e.clone = function (e) {
              return null == e || t(e) ? e : qi(e);
            }),
            (e.sanitize = function (e) {
              return ''
                .concat(e)
                .trim()
                .replace(/[\r|\n]/g, ' ')
                .replace(/>\s+</g, '><');
            }),
            (e.parseJSONMarkup = n),
            (e.renderMarkup = function (e) {
              if (t(e)) {
                var i = Xl.createVectors(e),
                  o = i.length;
                if (1 === o) return { elem: i[0].node };
                if (o > 1) {
                  var a = r(i[0].node);
                  return (
                    i.forEach(function (e) {
                      a.appendChild(e.node);
                    }),
                    { elem: a }
                  );
                }
                return {};
              }
              var s = n(e),
                l = s.fragment,
                u = null;
              return (
                l.childNodes.length > 1
                  ? (u = r(l.firstChild)).appendChild(l)
                  : (u = l.firstChild),
                { elem: u, selectors: s.selectors }
              );
            }),
            (e.parseLabelStringMarkup = function (e) {
              for (
                var t = Xl.createVectors(e),
                  n = document.createDocumentFragment(),
                  r = 0,
                  i = t.length;
                r < i;
                r += 1
              ) {
                var o = t[r].node;
                n.appendChild(o);
              }
              return { fragment: n, selectors: {} };
            });
        })(Ed || (Ed = {})),
          (function (e) {
            e.getSelector = function e(t, n, r) {
              if (null != t) {
                var i,
                  o = t.tagName.toLowerCase();
                if (t === n)
                  return (i =
                    'string' == typeof r
                      ? '> '.concat(o, ' > ').concat(r)
                      : '> '.concat(o));
                var a = t.parentNode;
                if (a && a.childNodes.length > 1) {
                  var s = ul(t) + 1;
                  i = ''.concat(o, ':nth-child(').concat(s, ')');
                } else i = o;
                return r && (i += ' > '.concat(r)), e(t.parentNode, n, i);
              }
              return r;
            };
          })(Ed || (Ed = {})),
          (function (e) {
            (e.getPortContainerMarkup = function () {
              return 'g';
            }),
              (e.getPortMarkup = function () {
                return {
                  tagName: 'circle',
                  selector: 'circle',
                  attrs: { r: 10, fill: '#FFFFFF', stroke: '#000000' },
                };
              }),
              (e.getPortLabelMarkup = function () {
                return {
                  tagName: 'text',
                  selector: 'text',
                  attrs: { fill: '#000000' },
                };
              });
          })(Ed || (Ed = {})),
          (function (e) {
            e.getEdgeMarkup = function () {
              return [
                {
                  tagName: 'path',
                  selector: 'wrap',
                  groupSelector: 'lines',
                  attrs: {
                    fill: 'none',
                    cursor: 'pointer',
                    stroke: 'transparent',
                    strokeLinecap: 'round',
                  },
                },
                {
                  tagName: 'path',
                  selector: 'line',
                  groupSelector: 'lines',
                  attrs: { fill: 'none', pointerEvents: 'none' },
                },
              ];
            };
          })(Ed || (Ed = {})),
          (function (e) {
            e.getForeignObjectMarkup = function () {
              var e =
                arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
              return {
                tagName: 'foreignObject',
                selector: 'fo',
                children: [
                  {
                    ns: il.xhtml,
                    tagName: 'body',
                    selector: 'foBody',
                    attrs: { xmlns: il.xhtml },
                    style: {
                      width: '100%',
                      height: '100%',
                      background: 'transparent',
                    },
                    children: e
                      ? []
                      : [
                          {
                            tagName: 'div',
                            selector: 'foContent',
                            style: { width: '100%', height: '100%' },
                          },
                        ],
                  },
                ],
              };
            };
          })(Ed || (Ed = {}));
        var Pd = (function () {
            function e(t) {
              y()(this, e), (this.view = t);
            }
            return (
              b()(e, [
                {
                  key: 'cell',
                  get: function () {
                    return this.view.cell;
                  },
                },
                {
                  key: 'getDefinition',
                  value: function (e) {
                    return this.cell.getAttrDefinition(e);
                  },
                },
                {
                  key: 'processAttrs',
                  value: function (e, t) {
                    var n,
                      r,
                      i,
                      o,
                      a = this,
                      s = [];
                    return (
                      Object.keys(t).forEach(function (r) {
                        var i = t[r],
                          o = a.getDefinition(r),
                          l = de(wh.isValidDefinition, a.view, o, i, {
                            elem: e,
                            attrs: t,
                            cell: a.cell,
                            view: a.view,
                          });
                        if (o && l)
                          'string' == typeof o
                            ? (null == n && (n = {}), (n[o] = i))
                            : null !== i && s.push({ name: r, definition: o });
                        else {
                          null == n && (n = {});
                          var u = bl.includes(r) ? r : gs(r);
                          n[u] = i;
                        }
                      }),
                      s.forEach(function (e) {
                        var n = e.name,
                          a = e.definition,
                          s = t[n];
                        'function' == typeof a.set &&
                          (null == r && (r = {}), (r[n] = s)),
                          'function' == typeof a.offset &&
                            (null == i && (i = {}), (i[n] = s)),
                          'function' == typeof a.position &&
                            (null == o && (o = {}), (o[n] = s));
                      }),
                      { raw: t, normal: n, set: r, offset: i, position: o }
                    );
                  },
                },
                {
                  key: 'mergeProcessedAttrs',
                  value: function (e, t) {
                    (e.set = Object.assign(Object.assign({}, e.set), t.set)),
                      (e.position = Object.assign(
                        Object.assign({}, e.position),
                        t.position
                      )),
                      (e.offset = Object.assign(
                        Object.assign({}, e.offset),
                        t.offset
                      ));
                    var n = e.normal && e.normal.transform;
                    null != n && t.normal && (t.normal.transform = n),
                      (e.normal = t.normal);
                  },
                },
                {
                  key: 'findAttrs',
                  value: function (e, t, n, r) {
                    var i = [],
                      o = new Wu();
                    return (
                      Object.keys(e).forEach(function (a) {
                        var s = e[a];
                        if ($n(s)) {
                          var l = Sd.find(a, t, r),
                            u = l.isCSSSelector,
                            c = l.elems;
                          n[a] = c;
                          for (var f = 0, h = c.length; f < h; f += 1) {
                            var d = c[f],
                              g = r && r[a] === d,
                              p = o.get(d);
                            if (p) {
                              p.array ||
                                (i.push(d),
                                (p.array = !0),
                                (p.attrs = [p.attrs]),
                                (p.priority = [p.priority]));
                              var v = p.attrs,
                                y = p.priority;
                              if (g) v.unshift(s), y.unshift(-1);
                              else {
                                var m = So(y, u ? -1 : h);
                                v.splice(m, 0, s), y.splice(m, 0, h);
                              }
                            } else
                              o.set(d, {
                                elem: d,
                                attrs: s,
                                priority: g ? -1 : h,
                                array: !1,
                              });
                          }
                        }
                      }),
                      i.forEach(function (e) {
                        var t = o.get(e),
                          n = t.attrs;
                        t.attrs = n.reduceRight(function (e, t) {
                          return wr(e, t);
                        }, {});
                      }),
                      o
                    );
                  },
                },
                {
                  key: 'updateRelativeAttrs',
                  value: function (e, t, n) {
                    var r = this,
                      i = t.raw || {},
                      o = t.normal || {},
                      a = t.set,
                      s = t.position,
                      l = t.offset,
                      u = function () {
                        return {
                          elem: e,
                          cell: r.cell,
                          view: r.view,
                          attrs: i,
                          refBBox: n.clone(),
                        };
                      };
                    if (
                      (null != a &&
                        Object.keys(a).forEach(function (e) {
                          var t = a[e],
                            n = r.getDefinition(e);
                          if (null != n) {
                            var i = de(n.set, r.view, t, u());
                            'object' === _()(i)
                              ? (o = Object.assign(Object.assign({}, o), i))
                              : null != i && (o[e] = i);
                          }
                        }),
                      e instanceof HTMLElement)
                    )
                      this.view.setAttrs(o, e);
                    else {
                      var c = o.transform,
                        f = ku(c ? ''.concat(c) : null),
                        h = new Ku(f.e, f.f);
                      c && (delete o.transform, (f.e = 0), (f.f = 0));
                      var d = !1;
                      null != s &&
                        Object.keys(s).forEach(function (e) {
                          var t = s[e],
                            n = r.getDefinition(e);
                          if (null != n) {
                            var i = de(n.position, r.view, t, u());
                            null != i && ((d = !0), h.translate(Ku.create(i)));
                          }
                        }),
                        this.view.setAttrs(o, e);
                      var g = !1;
                      if (null != l) {
                        var p = this.view.getBoundingRectOfElement(e);
                        if (p.width > 0 && p.height > 0) {
                          var v = Nh.transformRectangle(p, f);
                          Object.keys(l).forEach(function (t) {
                            var n = l[t],
                              o = r.getDefinition(t);
                            if (null != o) {
                              var a = de(o.offset, r.view, n, {
                                elem: e,
                                cell: r.cell,
                                view: r.view,
                                attrs: i,
                                refBBox: v,
                              });
                              null != a &&
                                ((g = !0), h.translate(Ku.create(a)));
                            }
                          });
                        }
                      }
                      (null != c || d || g) &&
                        (h.round(1),
                        (f.e = h.x),
                        (f.f = h.y),
                        e.setAttribute('transform', wu(f)));
                    }
                  },
                },
                {
                  key: 'update',
                  value: function (e, t, n) {
                    var r = this,
                      i = {},
                      o = this.findAttrs(n.attrs || t, e, i, n.selectors),
                      a = n.attrs ? this.findAttrs(t, e, i, n.selectors) : o,
                      s = [];
                    o.each(function (t) {
                      var o = t.elem,
                        l = t.attrs,
                        u = r.processAttrs(o, l);
                      if (
                        null == u.set &&
                        null == u.position &&
                        null == u.offset
                      )
                        r.view.setAttrs(u.normal, o);
                      else {
                        var c,
                          f = a.get(o),
                          h = f ? f.attrs : null,
                          d = h && null == l.ref ? h.ref : l.ref;
                        if (d) {
                          if (
                            !(c = (i[d] || r.view.find(d, e, n.selectors))[0])
                          )
                            throw new Error(
                              '"'.concat(d, '" reference does not exist.')
                            );
                        } else c = null;
                        var g = {
                            node: o,
                            refNode: c,
                            attributes: h,
                            processedAttributes: u,
                          },
                          p = s.findIndex(function (e) {
                            return e.refNode === o;
                          });
                        p > -1 ? s.splice(p, 0, g) : s.push(g);
                      }
                    });
                    var l,
                      u = new Wu();
                    s.forEach(function (t) {
                      var i,
                        o,
                        a = t.node,
                        s = t.refNode,
                        c =
                          null != s &&
                          null != n.rotatableNode &&
                          fl(n.rotatableNode, s);
                      if ((s && (i = u.get(s)), !i)) {
                        var f = c ? n.rotatableNode : e;
                        (i = s ? Nh.getBBox(s, { target: f }) : n.rootBBox),
                          s && u.set(s, i);
                      }
                      n.attrs && t.attributes
                        ? ((o = r.processAttrs(a, t.attributes)),
                          r.mergeProcessedAttrs(o, t.processedAttributes))
                        : (o = t.processedAttributes);
                      var h = i;
                      c &&
                        null != n.rotatableNode &&
                        !n.rotatableNode.contains(a) &&
                        (l || (l = ku(Cl(n.rotatableNode, 'transform'))),
                        (h = Nh.transformRectangle(i, l))),
                        r.updateRelativeAttrs(a, o, h);
                    });
                  },
                },
              ]),
              e
            );
          })(),
          Ad = (function () {
            function e(t, n) {
              var r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : [];
              y()(this, e), (this.view = t);
              var i = {},
                o = {},
                a = 0;
              Object.keys(n).forEach(function (e) {
                var t = n[e];
                Array.isArray(t) || (t = [t]),
                  t.forEach(function (t) {
                    var n = i[t];
                    n || ((a += 1), (n = i[t] = 1 << a)), (o[e] |= n);
                  });
              });
              var s = r;
              if (
                (Array.isArray(s) || (s = [s]),
                s.forEach(function (e) {
                  i[e] || ((a += 1), (i[e] = 1 << a));
                }),
                a > 25)
              )
                throw new Error('Maximum number of flags exceeded.');
              (this.flags = i), (this.attrs = o), (this.bootstrap = r);
            }
            return (
              b()(e, [
                {
                  key: 'cell',
                  get: function () {
                    return this.view.cell;
                  },
                },
                {
                  key: 'getFlag',
                  value: function (e) {
                    var t = this.flags;
                    return null == t
                      ? 0
                      : Array.isArray(e)
                      ? e.reduce(function (e, n) {
                          return e | t[n];
                        }, 0)
                      : 0 | t[e];
                  },
                },
                {
                  key: 'hasAction',
                  value: function (e, t) {
                    return e & this.getFlag(t);
                  },
                },
                {
                  key: 'removeAction',
                  value: function (e, t) {
                    return e ^ (e & this.getFlag(t));
                  },
                },
                {
                  key: 'getBootstrapFlag',
                  value: function () {
                    return this.getFlag(this.bootstrap);
                  },
                },
                {
                  key: 'getChangedFlag',
                  value: function () {
                    var e = this,
                      t = 0;
                    return this.attrs
                      ? (Object.keys(this.attrs).forEach(function (n) {
                          e.cell.hasChanged(n) && (t |= e.attrs[n]);
                        }),
                        t)
                      : t;
                  },
                },
              ]),
              e
            );
          })(),
          Md = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Td = (function (e, t) {
            M()(r, e);
            var n = N()(r);
            function r(e) {
              var t,
                i =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
              return (
                y()(this, r),
                ((t = n.call(this)).cell = e),
                (t.options = t.ensureOptions(i)),
                (t.graph = t.options.graph),
                (t.attr = new Pd($u()(t))),
                (t.flag = new Ad(
                  $u()(t),
                  t.options.actions,
                  t.options.bootstrap
                )),
                (t.cache = new Od($u()(t))),
                t.setContainer(t.ensureContainer()),
                t.setup(),
                t.init(),
                t
              );
            }
            return (
              b()(
                r,
                [
                  {
                    key: t,
                    get: function () {
                      return r.toStringTag;
                    },
                  },
                  { key: 'init', value: function () {} },
                  {
                    key: 'onRemove',
                    value: function () {
                      this.removeTools();
                    },
                  },
                  {
                    key: 'priority',
                    get: function () {
                      return this.options.priority;
                    },
                  },
                  {
                    key: 'rootSelector',
                    get: function () {
                      return this.options.rootSelector;
                    },
                  },
                  {
                    key: 'getConstructor',
                    value: function () {
                      return this.constructor;
                    },
                  },
                  {
                    key: 'ensureOptions',
                    value: function (e) {
                      return this.getConstructor().getOptions(e);
                    },
                  },
                  {
                    key: 'getContainerTagName',
                    value: function () {
                      return this.options.isSvgElement ? 'g' : 'div';
                    },
                  },
                  { key: 'getContainerStyle', value: function () {} },
                  {
                    key: 'getContainerAttrs',
                    value: function () {
                      return {
                        'data-cell-id': this.cell.id,
                        'data-shape': this.cell.shape,
                      };
                    },
                  },
                  {
                    key: 'getContainerClassName',
                    value: function () {
                      return this.prefixClassName('cell');
                    },
                  },
                  {
                    key: 'ensureContainer',
                    value: function () {
                      return Sd.createElement(
                        this.getContainerTagName(),
                        this.options.isSvgElement
                      );
                    },
                  },
                  {
                    key: 'setContainer',
                    value: function (e) {
                      if (this.container !== e) {
                        this.undelegateEvents(),
                          (this.container = e),
                          null != this.options.events &&
                            this.delegateEvents(this.options.events);
                        var t = this.getContainerAttrs();
                        null != t && this.setAttrs(t, e);
                        var n = this.getContainerStyle();
                        null != n && this.setStyle(n, e);
                        var r = this.getContainerClassName();
                        null != r && this.addClass(r, e);
                      }
                      return this;
                    },
                  },
                  {
                    key: 'isNodeView',
                    value: function () {
                      return !1;
                    },
                  },
                  {
                    key: 'isEdgeView',
                    value: function () {
                      return !1;
                    },
                  },
                  {
                    key: 'render',
                    value: function () {
                      return this;
                    },
                  },
                  {
                    key: 'confirmUpdate',
                    value: function (e) {
                      return 0;
                    },
                  },
                  {
                    key: 'getBootstrapFlag',
                    value: function () {
                      return this.flag.getBootstrapFlag();
                    },
                  },
                  {
                    key: 'getFlag',
                    value: function (e) {
                      return this.flag.getFlag(e);
                    },
                  },
                  {
                    key: 'hasAction',
                    value: function (e, t) {
                      return this.flag.hasAction(e, t);
                    },
                  },
                  {
                    key: 'removeAction',
                    value: function (e, t) {
                      return this.flag.removeAction(e, t);
                    },
                  },
                  {
                    key: 'handleAction',
                    value: function (e, t, n, r) {
                      if (this.hasAction(e, t)) {
                        n();
                        var i = [t];
                        return (
                          r &&
                            ('string' == typeof r
                              ? i.push(r)
                              : i.push.apply(i, L()(r))),
                          this.removeAction(e, i)
                        );
                      }
                      return e;
                    },
                  },
                  {
                    key: 'setup',
                    value: function () {
                      var e = this;
                      this.cell.on('changed', function (t) {
                        var n = t.options;
                        return e.onAttrsChange(n);
                      });
                    },
                  },
                  {
                    key: 'onAttrsChange',
                    value: function (e) {
                      var t = this.flag.getChangedFlag();
                      !e.updated &&
                        t &&
                        (e.dirty &&
                          this.hasAction(t, 'update') &&
                          (t |= this.getFlag('render')),
                        e.toolId && (e.async = !1),
                        null != this.graph &&
                          this.graph.renderer.requestViewUpdate(this, t, e));
                    },
                  },
                  {
                    key: 'parseJSONMarkup',
                    value: function (e, t) {
                      var n = Ed.parseJSONMarkup(e),
                        r = n.selectors,
                        i = this.rootSelector;
                      if (t && i) {
                        if (r[i]) throw new Error('Invalid root selector');
                        r[i] = t;
                      }
                      return n;
                    },
                  },
                  {
                    key: 'can',
                    value: function (e) {
                      var t = this.graph.options.interacting;
                      if (
                        ('function' == typeof t &&
                          (t = de(t, this.graph, this)),
                        'object' === _()(t))
                      ) {
                        var n = t[e];
                        return (
                          'function' == typeof n &&
                            (n = de(n, this.graph, this)),
                          !1 !== n
                        );
                      }
                      return 'boolean' == typeof t && t;
                    },
                  },
                  {
                    key: 'cleanCache',
                    value: function () {
                      return this.cache.clean(), this;
                    },
                  },
                  {
                    key: 'getCache',
                    value: function (e) {
                      return this.cache.get(e);
                    },
                  },
                  {
                    key: 'getDataOfElement',
                    value: function (e) {
                      return this.cache.getData(e);
                    },
                  },
                  {
                    key: 'getMatrixOfElement',
                    value: function (e) {
                      return this.cache.getMatrix(e);
                    },
                  },
                  {
                    key: 'getShapeOfElement',
                    value: function (e) {
                      return this.cache.getShape(e);
                    },
                  },
                  {
                    key: 'getBoundingRectOfElement',
                    value: function (e) {
                      return this.cache.getBoundingRect(e);
                    },
                  },
                  {
                    key: 'getBBoxOfElement',
                    value: function (e) {
                      var t = this.getBoundingRectOfElement(e),
                        n = this.getMatrixOfElement(e),
                        r = this.getRootRotatedMatrix(),
                        i = this.getRootTranslatedMatrix();
                      return Nh.transformRectangle(
                        t,
                        i.multiply(r).multiply(n)
                      );
                    },
                  },
                  {
                    key: 'getUnrotatedBBoxOfElement',
                    value: function (e) {
                      var t = this.getBoundingRectOfElement(e),
                        n = this.getMatrixOfElement(e),
                        r = this.getRootTranslatedMatrix();
                      return Nh.transformRectangle(t, r.multiply(n));
                    },
                  },
                  {
                    key: 'getBBox',
                    value: function () {
                      var e,
                        t =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {};
                      if (t.useCellGeometry) {
                        var n = this.cell,
                          r = n.isNode() ? n.getAngle() : 0;
                        e = n.getBBox().bbox(r);
                      } else e = this.getBBoxOfElement(this.container);
                      return this.graph.coord.localToGraphRect(e);
                    },
                  },
                  {
                    key: 'getRootTranslatedMatrix',
                    value: function () {
                      var e = this.cell,
                        t = e.isNode() ? e.getPosition() : { x: 0, y: 0 };
                      return mu().translate(t.x, t.y);
                    },
                  },
                  {
                    key: 'getRootRotatedMatrix',
                    value: function () {
                      var e = mu(),
                        t = this.cell,
                        n = t.isNode() ? t.getAngle() : 0;
                      if (n) {
                        var r = t.getBBox(),
                          i = r.width / 2,
                          o = r.height / 2;
                        e = e.translate(i, o).rotate(n).translate(-i, -o);
                      }
                      return e;
                    },
                  },
                  {
                    key: 'findMagnet',
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : this.container;
                      return this.findByAttr('magnet', e);
                    },
                  },
                  {
                    key: 'updateAttrs',
                    value: function (e, t) {
                      var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {};
                      null == n.rootBBox && (n.rootBBox = new Zu()),
                        null == n.selectors && (n.selectors = this.selectors),
                        this.attr.update(e, t, n);
                    },
                  },
                  {
                    key: 'isEdgeElement',
                    value: function (e) {
                      return (
                        this.cell.isEdge() &&
                        (null == e || e === this.container)
                      );
                    },
                  },
                  {
                    key: 'prepareHighlight',
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {},
                        n = e || this.container;
                      return (t.partial = n === this.container), n;
                    },
                  },
                  {
                    key: 'highlight',
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {},
                        n = this.prepareHighlight(e, t);
                      return (
                        this.notify('cell:highlight', {
                          magnet: n,
                          options: t,
                          view: this,
                          cell: this.cell,
                        }),
                        this.isEdgeView()
                          ? this.notify('edge:highlight', {
                              magnet: n,
                              options: t,
                              view: this,
                              edge: this.cell,
                              cell: this.cell,
                            })
                          : this.isNodeView() &&
                            this.notify('node:highlight', {
                              magnet: n,
                              options: t,
                              view: this,
                              node: this.cell,
                              cell: this.cell,
                            }),
                        this
                      );
                    },
                  },
                  {
                    key: 'unhighlight',
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {},
                        n = this.prepareHighlight(e, t);
                      return (
                        this.notify('cell:unhighlight', {
                          magnet: n,
                          options: t,
                          view: this,
                          cell: this.cell,
                        }),
                        this.isNodeView()
                          ? this.notify('node:unhighlight', {
                              magnet: n,
                              options: t,
                              view: this,
                              node: this.cell,
                              cell: this.cell,
                            })
                          : this.isEdgeView() &&
                            this.notify('edge:unhighlight', {
                              magnet: n,
                              options: t,
                              view: this,
                              edge: this.cell,
                              cell: this.cell,
                            }),
                        this
                      );
                    },
                  },
                  { key: 'notifyUnhighlight', value: function (e, t) {} },
                  {
                    key: 'getEdgeTerminal',
                    value: function (e, t, n, r, i) {
                      var o = this.cell,
                        a = this.findAttr('port', e),
                        s = e.getAttribute('data-selector'),
                        l = { cell: o.id };
                      return (
                        null != s && (l.magnet = s),
                        null != a
                          ? ((l.port = a),
                            o.isNode() &&
                              (o.hasPort(a) ||
                                null != s ||
                                (l.selector = this.getSelector(e))))
                          : null == s &&
                            this.container !== e &&
                            (l.selector = this.getSelector(e)),
                        l
                      );
                    },
                  },
                  {
                    key: 'getMagnetFromEdgeTerminal',
                    value: function (e) {
                      var t,
                        n = this.cell,
                        r = this.container,
                        i = e.port,
                        o = e.magnet;
                      return (
                        null != i && n.isNode() && n.hasPort(i)
                          ? (t = this.findPortElem(i, o) || r)
                          : (o || (o = e.selector),
                            o || null == i || (o = '[port="'.concat(i, '"]')),
                            (t = this.findOne(o, r, this.selectors))),
                        t
                      );
                    },
                  },
                  {
                    key: 'hasTools',
                    value: function (e) {
                      var t = this.tools;
                      return null != t && (null == e || t.name === e);
                    },
                  },
                  {
                    key: 'addTools',
                    value: function (e) {
                      if (!this.can('toolsAddable')) return this;
                      if ((this.removeTools(), e)) {
                        var t = Nd.isToolsView(e) ? e : new Nd(e);
                        (this.tools = t), t.config({ view: this }), t.mount();
                      }
                      return this;
                    },
                  },
                  {
                    key: 'updateTools',
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                      return this.tools && this.tools.update(e), this;
                    },
                  },
                  {
                    key: 'removeTools',
                    value: function () {
                      return (
                        this.tools &&
                          (this.tools.remove(), (this.tools = null)),
                        this
                      );
                    },
                  },
                  {
                    key: 'hideTools',
                    value: function () {
                      return this.tools && this.tools.hide(), this;
                    },
                  },
                  {
                    key: 'showTools',
                    value: function () {
                      return this.tools && this.tools.show(), this;
                    },
                  },
                  {
                    key: 'renderTools',
                    value: function () {
                      var e = this.cell.getTools();
                      return this.addTools(e), this;
                    },
                  },
                  {
                    key: 'notify',
                    value: function (e, t) {
                      return this.trigger(e, t), this.graph.trigger(e, t), this;
                    },
                  },
                  {
                    key: 'getEventArgs',
                    value: function (e, t, n) {
                      var r = this,
                        i = r.cell;
                      return null == t || null == n
                        ? { e: e, view: r, cell: i }
                        : { e: e, x: t, y: n, view: r, cell: i };
                    },
                  },
                  {
                    key: 'onClick',
                    value: function (e, t, n) {
                      this.notify('cell:click', this.getEventArgs(e, t, n));
                    },
                  },
                  {
                    key: 'onDblClick',
                    value: function (e, t, n) {
                      this.notify('cell:dblclick', this.getEventArgs(e, t, n));
                    },
                  },
                  {
                    key: 'onContextMenu',
                    value: function (e, t, n) {
                      this.notify(
                        'cell:contextmenu',
                        this.getEventArgs(e, t, n)
                      );
                    },
                  },
                  {
                    key: 'onMouseDown',
                    value: function (e, t, n) {
                      this.cell.model &&
                        ((this.cachedModelForMouseEvent = this.cell.model),
                        this.cachedModelForMouseEvent.startBatch('mouse')),
                        this.notify(
                          'cell:mousedown',
                          this.getEventArgs(e, t, n)
                        );
                    },
                  },
                  {
                    key: 'onMouseUp',
                    value: function (e, t, n) {
                      this.notify('cell:mouseup', this.getEventArgs(e, t, n)),
                        this.cachedModelForMouseEvent &&
                          (this.cachedModelForMouseEvent.stopBatch('mouse', {
                            cell: this.cell,
                          }),
                          (this.cachedModelForMouseEvent = null));
                    },
                  },
                  {
                    key: 'onMouseMove',
                    value: function (e, t, n) {
                      this.notify('cell:mousemove', this.getEventArgs(e, t, n));
                    },
                  },
                  {
                    key: 'onMouseOver',
                    value: function (e) {
                      this.notify('cell:mouseover', this.getEventArgs(e));
                    },
                  },
                  {
                    key: 'onMouseOut',
                    value: function (e) {
                      this.notify('cell:mouseout', this.getEventArgs(e));
                    },
                  },
                  {
                    key: 'onMouseEnter',
                    value: function (e) {
                      this.notify('cell:mouseenter', this.getEventArgs(e));
                    },
                  },
                  {
                    key: 'onMouseLeave',
                    value: function (e) {
                      this.notify('cell:mouseleave', this.getEventArgs(e));
                    },
                  },
                  {
                    key: 'onMouseWheel',
                    value: function (e, t, n, r) {
                      this.notify(
                        'cell:mousewheel',
                        Object.assign({ delta: r }, this.getEventArgs(e, t, n))
                      );
                    },
                  },
                  {
                    key: 'onCustomEvent',
                    value: function (e, t, n, r) {
                      this.notify(
                        'cell:customevent',
                        Object.assign({ name: t }, this.getEventArgs(e, n, r))
                      ),
                        this.notify(
                          t,
                          Object.assign({}, this.getEventArgs(e, n, r))
                        );
                    },
                  },
                  { key: 'onMagnetMouseDown', value: function (e, t, n, r) {} },
                  { key: 'onMagnetDblClick', value: function (e, t, n, r) {} },
                  {
                    key: 'onMagnetContextMenu',
                    value: function (e, t, n, r) {},
                  },
                  { key: 'onLabelMouseDown', value: function (e, t, n) {} },
                  {
                    key: 'checkMouseleave',
                    value: function (e) {
                      var t = this.getEventTarget(e, { fromPoint: !0 }),
                        n = this.graph.findViewByElem(t);
                      n !== this &&
                        (this.onMouseLeave(e), n && n.onMouseEnter(e));
                    },
                  },
                ],
                [
                  {
                    key: 'getDefaults',
                    value: function () {
                      return this.defaults;
                    },
                  },
                  {
                    key: 'config',
                    value: function (e) {
                      this.defaults = this.getOptions(e);
                    },
                  },
                  {
                    key: 'getOptions',
                    value: function (e) {
                      var t = function (e, t) {
                          return null != t
                            ? mo(
                                [].concat(
                                  L()(Array.isArray(e) ? e : [e]),
                                  L()(Array.isArray(t) ? t : [t])
                                )
                              )
                            : Array.isArray(e)
                            ? L()(e)
                            : [e];
                        },
                        n = qi(this.getDefaults()),
                        r = e.bootstrap,
                        i = e.actions,
                        o = e.events,
                        a = e.documentEvents,
                        s = Md(e, [
                          'bootstrap',
                          'actions',
                          'events',
                          'documentEvents',
                        ]);
                      return (
                        r && (n.bootstrap = t(n.bootstrap, r)),
                        i &&
                          Object.entries(i).forEach(function (e) {
                            var r = ql()(e, 2),
                              i = r[0],
                              o = r[1],
                              a = n.actions[i];
                            o && a
                              ? (n.actions[i] = t(a, o))
                              : o && (n.actions[i] = t(o));
                          }),
                        o &&
                          (n.events = Object.assign(
                            Object.assign({}, n.events),
                            o
                          )),
                        e.documentEvents &&
                          (n.documentEvents = Object.assign(
                            Object.assign({}, n.documentEvents),
                            a
                          )),
                        wr(n, s)
                      );
                    },
                  },
                ]
              ),
              r
            );
          })(Sd, Symbol.toStringTag);
        (Td.defaults = {
          isSvgElement: !0,
          rootSelector: 'root',
          priority: 0,
          bootstrap: [],
          actions: {},
        }),
          (function (e) {
            (e.Flag = Ad), (e.Attr = Pd);
          })(Td || (Td = {})),
          (function (e) {
            (e.toStringTag = 'X6.'.concat(e.name)),
              (e.isCellView = function (t) {
                if (null == t) return !1;
                if (t instanceof e) return !0;
                var n = t[Symbol.toStringTag],
                  r = t;
                return (
                  (null == n || n === e.toStringTag) &&
                  'function' == typeof r.isNodeView &&
                  'function' == typeof r.isEdgeView &&
                  'function' == typeof r.confirmUpdate
                );
              });
          })(Td || (Td = {})),
          (function (e) {
            (e.priority = function (e) {
              return function (t) {
                t.config({ priority: e });
              };
            }),
              (e.bootstrap = function (e) {
                return function (t) {
                  t.config({ bootstrap: e });
                };
              });
          })(Td || (Td = {})),
          (function (e) {
            e.registry = Ec.create({ type: 'view' });
          })(Td || (Td = {}));
        var Nd = (function (e, t) {
          M()(r, e);
          var n = N()(r);
          function r() {
            var e,
              t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
            return (
              y()(this, r),
              ((e = n.call(this)).svgContainer = e.createContainer(!0, t)),
              (e.htmlContainer = e.createContainer(!1, t)),
              e.config(t),
              e
            );
          }
          return (
            b()(r, [
              {
                key: 'name',
                get: function () {
                  return this.options.name;
                },
              },
              {
                key: 'graph',
                get: function () {
                  return this.cellView.graph;
                },
              },
              {
                key: 'cell',
                get: function () {
                  return this.cellView.cell;
                },
              },
              {
                key: t,
                get: function () {
                  return r.toStringTag;
                },
              },
              {
                key: 'createContainer',
                value: function (e, t) {
                  var n = e
                    ? Sd.createElement('g', !0)
                    : Sd.createElement('div', !1);
                  return (
                    Ks(n, this.prefixClassName('cell-tools')),
                    t.className && Ks(n, t.className),
                    n
                  );
                },
              },
              {
                key: 'config',
                value: function (e) {
                  if (
                    ((this.options = Object.assign(
                      Object.assign({}, this.options),
                      e
                    )),
                    !Td.isCellView(e.view) || e.view === this.cellView)
                  )
                    return this;
                  (this.cellView = e.view),
                    this.cell.isEdge()
                      ? (Ks(
                          this.svgContainer,
                          this.prefixClassName('edge-tools')
                        ),
                        Ks(
                          this.htmlContainer,
                          this.prefixClassName('edge-tools')
                        ))
                      : this.cell.isNode() &&
                        (Ks(
                          this.svgContainer,
                          this.prefixClassName('node-tools')
                        ),
                        Ks(
                          this.htmlContainer,
                          this.prefixClassName('node-tools')
                        )),
                    this.svgContainer.setAttribute(
                      'data-cell-id',
                      this.cell.id
                    ),
                    this.htmlContainer.setAttribute(
                      'data-cell-id',
                      this.cell.id
                    ),
                    this.name &&
                      (this.svgContainer.setAttribute(
                        'data-tools-name',
                        this.name
                      ),
                      this.htmlContainer.setAttribute(
                        'data-tools-name',
                        this.name
                      ));
                  var t = this.options.items;
                  if (!Array.isArray(t)) return this;
                  this.tools = [];
                  var n = [];
                  t.forEach(function (e) {
                    r.ToolItem.isToolItem(e)
                      ? 'vertices' === e.name
                        ? n.unshift(e)
                        : n.push(e)
                      : 'vertices' === ('object' === _()(e) ? e.name : e)
                      ? n.unshift(e)
                      : n.push(e);
                  });
                  for (var i = 0; i < n.length; i += 1) {
                    var o = n[i],
                      a = void 0;
                    if (r.ToolItem.isToolItem(o)) a = o;
                    else {
                      var s = 'object' === _()(o) ? o.name : o,
                        l = ('object' === _()(o) && o.args) || {};
                      if (s)
                        if (this.cell.isNode()) {
                          var u = Zd.registry.get(s);
                          if (!u) return Zd.registry.onNotFound(s);
                          a = new u(l);
                        } else if (this.cell.isEdge()) {
                          var c = eg.registry.get(s);
                          if (!c) return eg.registry.onNotFound(s);
                          a = new c(l);
                        }
                    }
                    if (a)
                      a.config(this.cellView, this),
                        a.render(),
                        (!1 !== a.options.isSVGElement
                          ? this.svgContainer
                          : this.htmlContainer
                        ).appendChild(a.container),
                        this.tools.push(a);
                  }
                  return this;
                },
              },
              {
                key: 'update',
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    t = this.tools;
                  return (
                    t &&
                      t.forEach(function (t) {
                        e.toolId !== t.cid && t.isVisible() && t.update();
                      }),
                    this
                  );
                },
              },
              {
                key: 'focus',
                value: function (e) {
                  var t = this.tools;
                  return (
                    t &&
                      t.forEach(function (t) {
                        e === t ? t.show() : t.hide();
                      }),
                    this
                  );
                },
              },
              {
                key: 'blur',
                value: function (e) {
                  var t = this.tools;
                  return (
                    t &&
                      t.forEach(function (t) {
                        t === e || t.isVisible() || (t.show(), t.update());
                      }),
                    this
                  );
                },
              },
              {
                key: 'hide',
                value: function () {
                  return this.focus(null);
                },
              },
              {
                key: 'show',
                value: function () {
                  return this.blur(null);
                },
              },
              {
                key: 'remove',
                value: function () {
                  var e = this.tools;
                  return (
                    e &&
                      (e.forEach(function (e) {
                        return e.remove();
                      }),
                      (this.tools = null)),
                    hl(this.svgContainer),
                    hl(this.htmlContainer),
                    wd()(Cd()(r.prototype), 'remove', this).call(this)
                  );
                },
              },
              {
                key: 'mount',
                value: function () {
                  var e = this.tools,
                    t = this.cellView;
                  if (t && e) {
                    var n = e.some(function (e) {
                        return !1 !== e.options.isSVGElement;
                      }),
                      r = e.some(function (e) {
                        return !1 === e.options.isSVGElement;
                      });
                    if (n)
                      (this.options.local
                        ? t.container
                        : t.graph.view.decorator
                      ).appendChild(this.svgContainer);
                    r && this.graph.container.appendChild(this.htmlContainer);
                  }
                  return this;
                },
              },
            ]),
            r
          );
        })(Sd, Symbol.toStringTag);
        !(function (e) {
          (e.toStringTag = 'X6.'.concat(e.name)),
            (e.isToolsView = function (t) {
              if (null == t) return !1;
              if (t instanceof e) return !0;
              var n = t[Symbol.toStringTag],
                r = t;
              return (
                (null == n || n === e.toStringTag) &&
                null != r.graph &&
                null != r.cell &&
                'function' == typeof r.config &&
                'function' == typeof r.update &&
                'function' == typeof r.focus &&
                'function' == typeof r.blur &&
                'function' == typeof r.show &&
                'function' == typeof r.hide
              );
            });
        })(Nd || (Nd = {})),
          (function (e) {
            var t = (function (e, t) {
              M()(r, e);
              var n = N()(r);
              function r() {
                var e,
                  t =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {};
                return (
                  y()(this, r),
                  ((e = n.call(this)).visible = !0),
                  (e.options = e.getOptions(t)),
                  (e.container = Sd.createElement(
                    e.options.tagName || 'g',
                    !1 !== e.options.isSVGElement
                  )),
                  Ks(e.container, e.prefixClassName('cell-tool')),
                  'string' == typeof e.options.className &&
                    Ks(e.container, e.options.className),
                  e.init(),
                  e
                );
              }
              return (
                b()(
                  r,
                  [
                    {
                      key: 'graph',
                      get: function () {
                        return this.cellView.graph;
                      },
                    },
                    {
                      key: 'cell',
                      get: function () {
                        return this.cellView.cell;
                      },
                    },
                    {
                      key: 'name',
                      get: function () {
                        return this.options.name;
                      },
                    },
                    {
                      key: t,
                      get: function () {
                        return r.toStringTag;
                      },
                    },
                    { key: 'init', value: function () {} },
                    {
                      key: 'getOptions',
                      value: function (e) {
                        return this.constructor.getOptions(e);
                      },
                    },
                    {
                      key: 'delegateEvents',
                      value: function () {
                        return (
                          this.options.events &&
                            wd()(
                              Cd()(r.prototype),
                              'delegateEvents',
                              this
                            ).call(this, this.options.events),
                          this
                        );
                      },
                    },
                    {
                      key: 'config',
                      value: function (e, t) {
                        return (
                          (this.cellView = e),
                          (this.parent = t),
                          this.stamp(this.container),
                          this.cell.isEdge()
                            ? Ks(
                                this.container,
                                this.prefixClassName('edge-tool')
                              )
                            : this.cell.isNode() &&
                              Ks(
                                this.container,
                                this.prefixClassName('node-tool')
                              ),
                          this.name &&
                            this.container.setAttribute(
                              'data-tool-name',
                              this.name
                            ),
                          this.delegateEvents(),
                          this
                        );
                      },
                    },
                    {
                      key: 'render',
                      value: function () {
                        this.empty();
                        var e = this.options.markup;
                        if (e) {
                          var t = Ed.parseJSONMarkup(e);
                          this.container.appendChild(t.fragment),
                            (this.childNodes = t.selectors);
                        }
                        return this.onRender(), this;
                      },
                    },
                    { key: 'onRender', value: function () {} },
                    {
                      key: 'update',
                      value: function () {
                        return this;
                      },
                    },
                    {
                      key: 'stamp',
                      value: function (e) {
                        e &&
                          e.setAttribute('data-cell-id', this.cellView.cell.id);
                      },
                    },
                    {
                      key: 'show',
                      value: function () {
                        return (
                          (this.container.style.display = ''),
                          (this.visible = !0),
                          this
                        );
                      },
                    },
                    {
                      key: 'hide',
                      value: function () {
                        return (
                          (this.container.style.display = 'none'),
                          (this.visible = !1),
                          this
                        );
                      },
                    },
                    {
                      key: 'isVisible',
                      value: function () {
                        return this.visible;
                      },
                    },
                    {
                      key: 'focus',
                      value: function () {
                        var e = this.options.focusOpacity;
                        return (
                          null != e &&
                            Number.isFinite(e) &&
                            (this.container.style.opacity = ''.concat(e)),
                          this.parent.focus(this),
                          this
                        );
                      },
                    },
                    {
                      key: 'blur',
                      value: function () {
                        return (
                          (this.container.style.opacity = ''),
                          this.parent.blur(this),
                          this
                        );
                      },
                    },
                    {
                      key: 'guard',
                      value: function (e) {
                        return (
                          null == this.graph ||
                          null == this.cellView ||
                          this.graph.view.guard(e, this.cellView)
                        );
                      },
                    },
                  ],
                  [
                    {
                      key: 'getDefaults',
                      value: function () {
                        return this.defaults;
                      },
                    },
                    {
                      key: 'config',
                      value: function (e) {
                        this.defaults = this.getOptions(e);
                      },
                    },
                    {
                      key: 'getOptions',
                      value: function (e) {
                        return wr(qi(this.getDefaults()), e);
                      },
                    },
                  ]
                ),
                r
              );
            })(Sd, Symbol.toStringTag);
            (t.defaults = { isSVGElement: !0, tagName: 'g' }),
              (e.ToolItem = t),
              (function (e) {
                var t = 0;
                e.define = function (e) {
                  var n,
                    r = no(
                      (n = e.name) ? ps(n) : 'CustomTool'.concat((t += 1)),
                      this
                    );
                  return r.config(e), r;
                };
              })((t = e.ToolItem || (e.ToolItem = {}))),
              (function (e) {
                (e.toStringTag = 'X6.'.concat(e.name)),
                  (e.isToolItem = function (t) {
                    if (null == t) return !1;
                    if (t instanceof e) return !0;
                    var n = t[Symbol.toStringTag],
                      r = t;
                    return (
                      (null == n || n === e.toStringTag) &&
                      null != r.graph &&
                      null != r.cell &&
                      'function' == typeof r.config &&
                      'function' == typeof r.update &&
                      'function' == typeof r.focus &&
                      'function' == typeof r.blur &&
                      'function' == typeof r.show &&
                      'function' == typeof r.hide &&
                      'function' == typeof r.isVisible
                    );
                  });
              })((t = e.ToolItem || (e.ToolItem = {})));
          })(Nd || (Nd = {}));
        var jd = function (e) {
          return e;
        };
        function Ld(e, t) {
          return 0 === t ? '0%' : ''.concat(Math.round((e / t) * 100), '%');
        }
        function Rd(e) {
          return function (t, n, r, i) {
            return n.isEdgeElement(r)
              ? (function (e, t, n, r, i) {
                  var o = n.getConnection();
                  if (!o) return t;
                  var a = o.closestPointLength(i);
                  if (e) {
                    var s = o.length();
                    t.anchor = { name: 'ratio', args: { ratio: a / s } };
                  } else t.anchor = { name: 'length', args: { length: a } };
                  return t;
                })(e, t, n, 0, i)
              : (function (e, t, n, r, i) {
                  var o = n.cell,
                    a = o.getAngle(),
                    s = n.getUnrotatedBBoxOfElement(r),
                    l = o.getBBox().getCenter(),
                    u = Ku.create(i).rotate(a, l),
                    c = u.x - s.x,
                    f = u.y - s.y;
                  e && ((c = Ld(c, s.width)), (f = Ld(f, s.height)));
                  return (
                    (t.anchor = {
                      name: 'topLeft',
                      args: { dx: c, dy: f, rotate: !0 },
                    }),
                    t
                  );
                })(e, t, n, r, i);
          };
        }
        var _d,
          Id = Rd(!0),
          Dd = Rd(!1);
        function zd(e, t, n, r) {
          return de(
            _d.presets.pinRelative,
            this.graph,
            {},
            t,
            n,
            e,
            this.cell,
            r,
            {}
          ).anchor;
        }
        function Bd(e, t) {
          return t
            ? e.cell.getBBox()
            : e.cell.isEdge()
            ? e.getConnection().bbox()
            : e.getUnrotatedBBoxOfElement(e.container);
        }
        !(function (e) {
          (e.presets = c),
            (e.registry = Ec.create({ type: 'connection strategy' })),
            e.registry.register(e.presets, !0);
        })(_d || (_d = {}));
        var Vd = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n() {
            return y()(this, n), t.apply(this, arguments);
          }
          return (
            b()(n, [
              {
                key: 'onRender',
                value: function () {
                  Ks(this.container, this.prefixClassName('cell-tool-button')),
                    this.update();
                },
              },
              {
                key: 'update',
                value: function () {
                  return this.updatePosition(), this;
                },
              },
              {
                key: 'updatePosition',
                value: function () {
                  var e = this.cellView.cell.isEdge()
                    ? this.getEdgeMatrix()
                    : this.getNodeMatrix();
                  Su(this.container, e, { absolute: !0 });
                },
              },
              {
                key: 'getNodeMatrix',
                value: function () {
                  var e = this.cellView,
                    t = this.options,
                    n = t.x,
                    r = void 0 === n ? 0 : n,
                    i = t.y,
                    o = void 0 === i ? 0 : i,
                    a = t.offset,
                    s = t.useCellGeometry,
                    l = t.rotate,
                    u = Bd(e, s),
                    c = e.cell.getAngle();
                  l || (u = u.bbox(c));
                  var f = 0,
                    h = 0;
                  'number' == typeof a
                    ? ((f = a), (h = a))
                    : 'object' === _()(a) && ((f = a.x), (h = a.y)),
                    (r = Es(r, u.width)),
                    (o = Es(o, u.height));
                  var d = mu().translate(u.x + u.width / 2, u.y + u.height / 2);
                  return (
                    l && (d = d.rotate(c)),
                    (d = d.translate(r + f - u.width / 2, o + h - u.height / 2))
                  );
                },
              },
              {
                key: 'getEdgeMatrix',
                value: function () {
                  var e,
                    t,
                    n,
                    r = this.cellView,
                    i = this.options,
                    o = i.offset,
                    a = void 0 === o ? 0 : o,
                    s = i.distance,
                    l = void 0 === s ? 0 : s,
                    u = i.rotate,
                    c = Es(l, 1);
                  (e =
                    c >= 0 && c <= 1
                      ? r.getTangentAtRatio(c)
                      : r.getTangentAtLength(c))
                    ? ((t = e.start),
                      (n = e.vector().vectorAngle(new Ku(1, 0)) || 0))
                    : ((t = r.getConnection().start), (n = 0));
                  var f = mu().translate(t.x, t.y).rotate(n);
                  return (
                    (f =
                      'object' === _()(a)
                        ? f.translate(a.x || 0, a.y || 0)
                        : f.translate(0, a)),
                    u || (f = f.rotate(-n)),
                    f
                  );
                },
              },
              {
                key: 'onMouseDown',
                value: function (e) {
                  if (!this.guard(e)) {
                    e.stopPropagation(), e.preventDefault();
                    var t = this.options.onClick;
                    'function' == typeof t &&
                      de(t, this.cellView, {
                        e: e,
                        view: this.cellView,
                        cell: this.cellView.cell,
                        btn: this,
                      });
                  }
                },
              },
            ]),
            n
          );
        })(Nd.ToolItem);
        !(function (e) {
          e.config({
            name: 'button',
            useCellGeometry: !0,
            events: { mousedown: 'onMouseDown', touchstart: 'onMouseDown' },
          });
        })(Vd || (Vd = {})),
          (function (e) {
            e.Remove = e.define({
              name: 'button-remove',
              markup: [
                {
                  tagName: 'circle',
                  selector: 'button',
                  attrs: { r: 7, fill: '#FF1D00', cursor: 'pointer' },
                },
                {
                  tagName: 'path',
                  selector: 'icon',
                  attrs: {
                    d: 'M -3 -3 3 3 M -3 3 3 -3',
                    fill: 'none',
                    stroke: '#FFFFFF',
                    'stroke-width': 2,
                    'pointer-events': 'none',
                  },
                },
              ],
              distance: 60,
              offset: 0,
              useCellGeometry: !0,
              onClick: function (e) {
                var t = e.view,
                  n = e.btn;
                n.parent.remove(), t.cell.remove({ ui: !0, toolId: n.cid });
              },
            });
          })(Vd || (Vd = {}));
        var Fd = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Ud = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'onRender',
                  value: function () {
                    if (
                      (Ks(
                        this.container,
                        this.prefixClassName('cell-tool-boundary')
                      ),
                      this.options.attrs)
                    ) {
                      var e = this.options.attrs,
                        t = e.class,
                        n = Fd(e, ['class']);
                      Cl(this.container, El(n)), t && Ks(this.container, t);
                    }
                    this.update();
                  },
                },
                {
                  key: 'update',
                  value: function () {
                    var e = this.cellView,
                      t = this.options,
                      n = t.useCellGeometry,
                      r = t.rotate,
                      i = Os(t.padding),
                      o = Bd(e, n).moveAndExpand({
                        x: -i.left,
                        y: -i.top,
                        width: i.left + i.right,
                        height: i.top + i.bottom,
                      }),
                      a = e.cell;
                    if (a.isNode()) {
                      var s = a.getAngle();
                      if (s)
                        if (r) {
                          var l = a.getBBox().getCenter();
                          Ou(this.container, s, l.x, l.y, { absolute: !0 });
                        } else o = o.bbox(s);
                    }
                    return Cl(this.container, o.toJSON()), this;
                  },
                },
              ]),
              n
            );
          })(Nd.ToolItem);
        !(function (e) {
          e.config({
            name: 'boundary',
            tagName: 'rect',
            padding: 10,
            useCellGeometry: !0,
            attrs: {
              fill: 'none',
              stroke: '#333',
              'stroke-width': 0.5,
              'stroke-dasharray': '5, 5',
              'pointer-events': 'none',
            },
          });
        })(Ud || (Ud = {}));
        var Hd = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n() {
            var e;
            return (
              y()(this, n), ((e = t.apply(this, arguments)).handles = []), e
            );
          }
          return (
            b()(n, [
              {
                key: 'vertices',
                get: function () {
                  return this.cellView.cell.getVertices();
                },
              },
              {
                key: 'onRender',
                value: function () {
                  return (
                    this.addClass(this.prefixClassName('edge-tool-vertices')),
                    this.options.addable && this.updatePath(),
                    this.resetHandles(),
                    this.renderHandles(),
                    this
                  );
                },
              },
              {
                key: 'update',
                value: function () {
                  return (
                    this.vertices.length === this.handles.length
                      ? this.updateHandles()
                      : (this.resetHandles(), this.renderHandles()),
                    this.options.addable && this.updatePath(),
                    this
                  );
                },
              },
              {
                key: 'resetHandles',
                value: function () {
                  var e = this,
                    t = this.handles;
                  (this.handles = []),
                    t &&
                      t.forEach(function (t) {
                        e.stopHandleListening(t), t.remove();
                      });
                },
              },
              {
                key: 'renderHandles',
                value: function () {
                  for (
                    var e = this, t = this.vertices, n = 0, r = t.length;
                    n < r;
                    n += 1
                  ) {
                    var i = t[n],
                      o = this.options.createHandle,
                      a = this.options.processHandle,
                      s = o({
                        index: n,
                        graph: this.graph,
                        guard: function (t) {
                          return e.guard(t);
                        },
                        attrs: this.options.attrs || {},
                      });
                    a && a(s),
                      s.updatePosition(i.x, i.y),
                      this.stamp(s.container),
                      this.container.appendChild(s.container),
                      this.handles.push(s),
                      this.startHandleListening(s);
                  }
                },
              },
              {
                key: 'updateHandles',
                value: function () {
                  for (
                    var e = this.vertices, t = 0, n = e.length;
                    t < n;
                    t += 1
                  ) {
                    var r = e[t],
                      i = this.handles[t];
                    i && i.updatePosition(r.x, r.y);
                  }
                },
              },
              {
                key: 'updatePath',
                value: function () {
                  var e = this.childNodes.connection;
                  e &&
                    e.setAttribute('d', this.cellView.getConnectionPathData());
                },
              },
              {
                key: 'startHandleListening',
                value: function (e) {
                  var t = this.cellView;
                  t.can('vertexMovable') &&
                    (e.on('change', this.onHandleChange, this),
                    e.on('changing', this.onHandleChanging, this),
                    e.on('changed', this.onHandleChanged, this)),
                    t.can('vertexDeletable') &&
                      e.on('remove', this.onHandleRemove, this);
                },
              },
              {
                key: 'stopHandleListening',
                value: function (e) {
                  var t = this.cellView;
                  t.can('vertexMovable') &&
                    (e.off('change', this.onHandleChange, this),
                    e.off('changing', this.onHandleChanging, this),
                    e.off('changed', this.onHandleChanged, this)),
                    t.can('vertexDeletable') &&
                      e.off('remove', this.onHandleRemove, this);
                },
              },
              {
                key: 'getNeighborPoints',
                value: function (e) {
                  var t = this.cellView,
                    n = this.vertices,
                    r = e > 0 ? n[e - 1] : t.sourceAnchor,
                    i = e < n.length - 1 ? n[e + 1] : t.targetAnchor;
                  return { prev: Ku.create(r), next: Ku.create(i) };
                },
              },
              {
                key: 'getMouseEventArgs',
                value: function (e) {
                  var t = this.normalizeEvent(e),
                    n = this.graph.snapToGrid(t.clientX, t.clientY);
                  return { e: t, x: n.x, y: n.y };
                },
              },
              {
                key: 'onHandleChange',
                value: function (e) {
                  var t = e.e;
                  this.focus();
                  var n = this.cellView;
                  if (
                    (n.cell.startBatch('move-vertex', {
                      ui: !0,
                      toolId: this.cid,
                    }),
                    !this.options.stopPropagation)
                  ) {
                    var r = this.getMouseEventArgs(t),
                      i = r.e,
                      o = r.x,
                      a = r.y;
                    n.notifyMouseDown(i, o, a);
                  }
                },
              },
              {
                key: 'onHandleChanging',
                value: function (e) {
                  var t = e.handle,
                    n = e.e,
                    r = this.cellView,
                    i = t.options.index,
                    o = this.getMouseEventArgs(n),
                    a = o.e,
                    s = o.x,
                    l = o.y,
                    u = { x: s, y: l };
                  this.snapVertex(u, i),
                    r.cell.setVertexAt(i, u, { ui: !0, toolId: this.cid }),
                    t.updatePosition(u.x, u.y),
                    this.options.stopPropagation || r.notifyMouseMove(a, s, l);
                },
              },
              {
                key: 'onHandleChanged',
                value: function (e) {
                  var t = e.e,
                    n = this.options,
                    r = this.cellView;
                  if ((n.addable && this.updatePath(), n.removeRedundancies)) {
                    r.removeRedundantLinearVertices({
                      ui: !0,
                      toolId: this.cid,
                    }) && this.render(),
                      this.blur(),
                      r.cell.stopBatch('move-vertex', {
                        ui: !0,
                        toolId: this.cid,
                      }),
                      this.eventData(t).vertexAdded &&
                        r.cell.stopBatch('add-vertex', {
                          ui: !0,
                          toolId: this.cid,
                        });
                    var i = this.getMouseEventArgs(t),
                      o = i.e,
                      a = i.x,
                      s = i.y;
                    this.options.stopPropagation || r.notifyMouseUp(o, a, s),
                      r.checkMouseleave(o),
                      n.onChanged && n.onChanged({ edge: r.cell, edgeView: r });
                  }
                },
              },
              {
                key: 'snapVertex',
                value: function (e, t) {
                  var n = this.options.snapRadius || 0;
                  if (n > 0) {
                    var r = this.getNeighborPoints(t),
                      i = r.prev,
                      o = r.next;
                    Math.abs(e.x - i.x) < n
                      ? (e.x = i.x)
                      : Math.abs(e.x - o.x) < n && (e.x = o.x),
                      Math.abs(e.y - i.y) < n
                        ? (e.y = r.prev.y)
                        : Math.abs(e.y - o.y) < n && (e.y = o.y);
                  }
                },
              },
              {
                key: 'onHandleRemove',
                value: function (e) {
                  var t = e.handle,
                    n = e.e;
                  if (this.options.removable) {
                    var r = t.options.index,
                      i = this.cellView;
                    i.cell.removeVertexAt(r, { ui: !0 }),
                      this.options.addable && this.updatePath(),
                      i.checkMouseleave(this.normalizeEvent(n));
                  }
                },
              },
              {
                key: 'onPathMouseDown',
                value: function (e) {
                  var t = this.cellView;
                  if (
                    !this.guard(e) &&
                    this.options.addable &&
                    t.can('vertexAddable')
                  ) {
                    e.stopPropagation(), e.preventDefault();
                    var n = this.normalizeEvent(e),
                      r = this.graph.snapToGrid(n.clientX, n.clientY).toJSON();
                    t.cell.startBatch('add-vertex', {
                      ui: !0,
                      toolId: this.cid,
                    });
                    var i = t.getVertexIndex(r.x, r.y);
                    this.snapVertex(r, i),
                      t.cell.insertVertex(r, i, { ui: !0, toolId: this.cid }),
                      this.render();
                    var o = this.handles[i];
                    this.eventData(n, { vertexAdded: !0 }), o.onMouseDown(n);
                  }
                },
              },
              {
                key: 'onRemove',
                value: function () {
                  this.resetHandles();
                },
              },
            ]),
            n
          );
        })(Nd.ToolItem);
        !(function (e) {
          var t = (function (t) {
            M()(r, t);
            var n = N()(r);
            function r(e) {
              var t;
              return (
                y()(this, r),
                ((t = n.call(this)).options = e),
                t.render(),
                t.delegateEvents({
                  mousedown: 'onMouseDown',
                  touchstart: 'onMouseDown',
                  dblclick: 'onDoubleClick',
                }),
                t
              );
            }
            return (
              b()(r, [
                {
                  key: 'graph',
                  get: function () {
                    return this.options.graph;
                  },
                },
                {
                  key: 'render',
                  value: function () {
                    this.container = Sd.createElement('circle', !0);
                    var t = this.options.attrs;
                    if ('function' == typeof t) {
                      var n = e.getDefaults();
                      this.setAttrs(
                        Object.assign(Object.assign({}, n.attrs), t(this))
                      );
                    } else this.setAttrs(t);
                    this.addClass(this.prefixClassName('edge-tool-vertex'));
                  },
                },
                {
                  key: 'updatePosition',
                  value: function (e, t) {
                    this.setAttrs({ cx: e, cy: t });
                  },
                },
                {
                  key: 'onMouseDown',
                  value: function (e) {
                    this.options.guard(e) ||
                      (e.stopPropagation(),
                      e.preventDefault(),
                      this.graph.view.undelegateEvents(),
                      this.delegateDocumentEvents(
                        {
                          mousemove: 'onMouseMove',
                          touchmove: 'onMouseMove',
                          mouseup: 'onMouseUp',
                          touchend: 'onMouseUp',
                          touchcancel: 'onMouseUp',
                        },
                        e.data
                      ),
                      this.emit('change', { e: e, handle: this }));
                  },
                },
                {
                  key: 'onMouseMove',
                  value: function (e) {
                    this.emit('changing', { e: e, handle: this });
                  },
                },
                {
                  key: 'onMouseUp',
                  value: function (e) {
                    this.emit('changed', { e: e, handle: this }),
                      this.undelegateDocumentEvents(),
                      this.graph.view.delegateEvents();
                  },
                },
                {
                  key: 'onDoubleClick',
                  value: function (e) {
                    this.emit('remove', { e: e, handle: this });
                  },
                },
              ]),
              r
            );
          })(Sd);
          e.Handle = t;
        })(Hd || (Hd = {})),
          (function (e) {
            var t,
              n = jh.prefix('edge-tool-vertex-path');
            e.config({
              name: 'vertices',
              snapRadius: 20,
              addable: !0,
              removable: !0,
              removeRedundancies: !0,
              stopPropagation: !0,
              attrs: {
                r: 6,
                fill: '#333',
                stroke: '#fff',
                cursor: 'move',
                'stroke-width': 2,
              },
              createHandle: function (t) {
                return new e.Handle(t);
              },
              markup: [
                {
                  tagName: 'path',
                  selector: 'connection',
                  className: n,
                  attrs: {
                    fill: 'none',
                    stroke: 'transparent',
                    'stroke-width': 10,
                    cursor: 'pointer',
                  },
                },
              ],
              events:
                ((t = {}),
                w()(t, 'mousedown .'.concat(n), 'onPathMouseDown'),
                w()(t, 'touchstart .'.concat(n), 'onPathMouseDown'),
                t),
            });
          })(Hd || (Hd = {}));
        var Gd = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n() {
            var e;
            return (
              y()(this, n), ((e = t.apply(this, arguments)).handles = []), e
            );
          }
          return (
            b()(n, [
              {
                key: 'vertices',
                get: function () {
                  return this.cellView.cell.getVertices();
                },
              },
              {
                key: 'update',
                value: function () {
                  return this.render(), this;
                },
              },
              {
                key: 'onRender',
                value: function () {
                  Ks(
                    this.container,
                    this.prefixClassName('edge-tool-segments')
                  ),
                    this.resetHandles();
                  var e = this.cellView,
                    t = L()(this.vertices);
                  t.unshift(e.sourcePoint), t.push(e.targetPoint);
                  for (var n = 0, r = t.length; n < r - 1; n += 1) {
                    var i = t[n],
                      o = t[n + 1],
                      a = this.renderHandle(i, o, n);
                    this.stamp(a.container), this.handles.push(a);
                  }
                  return this;
                },
              },
              {
                key: 'renderHandle',
                value: function (e, t, n) {
                  var r = this,
                    i = this.options.createHandle({
                      index: n,
                      graph: this.graph,
                      guard: function (e) {
                        return r.guard(e);
                      },
                      attrs: this.options.attrs || {},
                    });
                  return (
                    this.options.processHandle && this.options.processHandle(i),
                    this.updateHandle(i, e, t),
                    this.container.appendChild(i.container),
                    this.startHandleListening(i),
                    i
                  );
                },
              },
              {
                key: 'startHandleListening',
                value: function (e) {
                  e.on('change', this.onHandleChange, this),
                    e.on('changing', this.onHandleChanging, this),
                    e.on('changed', this.onHandleChanged, this);
                },
              },
              {
                key: 'stopHandleListening',
                value: function (e) {
                  e.off('change', this.onHandleChange, this),
                    e.off('changing', this.onHandleChanging, this),
                    e.off('changed', this.onHandleChanged, this);
                },
              },
              {
                key: 'resetHandles',
                value: function () {
                  var e = this,
                    t = this.handles;
                  (this.handles = []),
                    t &&
                      t.forEach(function (t) {
                        e.stopHandleListening(t), t.remove();
                      });
                },
              },
              {
                key: 'shiftHandleIndexes',
                value: function (e) {
                  for (var t = this.handles, n = 0, r = t.length; n < r; n += 1)
                    t[n].options.index += e;
                },
              },
              {
                key: 'resetAnchor',
                value: function (e, t) {
                  var n = this.cellView.cell,
                    r = { ui: !0, toolId: this.cid };
                  t
                    ? n.prop([e, 'anchor'], t, r)
                    : n.removeProp([e, 'anchor'], r);
                },
              },
              {
                key: 'snapHandle',
                value: function (e, t, n) {
                  var r = e.options.axis,
                    i = e.options.index,
                    o = this.cellView.cell.getVertices(),
                    a = o[i - 2] || n.sourceAnchor,
                    s = o[i + 1] || n.targetAnchor,
                    l = this.options.snapRadius;
                  return (
                    Math.abs(t[r] - a[r]) < l
                      ? (t[r] = a[r])
                      : Math.abs(t[r] - s[r]) < l && (t[r] = s[r]),
                    t
                  );
                },
              },
              {
                key: 'onHandleChanging',
                value: function (e) {
                  var t = e.handle,
                    n = e.e,
                    r = this.graph,
                    i = this.options,
                    o = this.cellView,
                    a = i.anchor,
                    s = t.options.axis,
                    l = t.options.index - 1,
                    u = this.getEventData(n),
                    c = this.normalizeEvent(n),
                    f = r.snapToGrid(c.clientX, c.clientY),
                    h = this.snapHandle(t, f.clone(), u),
                    d = qi(this.vertices),
                    g = d[l],
                    p = d[l + 1],
                    v = o.sourceView,
                    y = o.sourceBBox,
                    m = !1,
                    b = !1;
                  if (
                    (g
                      ? 0 === l
                        ? y.containsPoint(g)
                          ? (d.shift(), this.shiftHandleIndexes(-1), (m = !0))
                          : ((g[s] = h[s]), (b = !0))
                        : (g[s] = h[s])
                      : (((g = o.sourceAnchor.toJSON())[s] = h[s]),
                        y.containsPoint(g)
                          ? (m = !0)
                          : (d.unshift(g),
                            this.shiftHandleIndexes(1),
                            (b = !0))),
                    'function' == typeof a && v)
                  ) {
                    if (m) {
                      var k = u.sourceAnchor.clone();
                      k[s] = h[s];
                      var w = de(
                        a,
                        o,
                        k,
                        v,
                        o.sourceMagnet || v.container,
                        'source',
                        o,
                        this
                      );
                      this.resetAnchor('source', w);
                    }
                    b && this.resetAnchor('source', u.sourceAnchorDef);
                  }
                  var x = o.targetView,
                    C = o.targetBBox,
                    S = !1,
                    E = !1;
                  if (
                    (p
                      ? l === d.length - 2
                        ? C.containsPoint(p)
                          ? (d.pop(), (S = !0))
                          : ((p[s] = h[s]), (E = !0))
                        : (p[s] = h[s])
                      : (((p = o.targetAnchor.toJSON())[s] = h[s]),
                        C.containsPoint(p) ? (S = !0) : (d.push(p), (E = !0))),
                    'function' == typeof a && x)
                  ) {
                    if (S) {
                      var O = u.targetAnchor.clone();
                      O[s] = h[s];
                      var P = de(
                        a,
                        o,
                        O,
                        x,
                        o.targetMagnet || x.container,
                        'target',
                        o,
                        this
                      );
                      this.resetAnchor('target', P);
                    }
                    E && this.resetAnchor('target', u.targetAnchorDef);
                  }
                  Ku.equalPoints(d, this.vertices) ||
                    this.cellView.cell.setVertices(d, {
                      ui: !0,
                      toolId: this.cid,
                    }),
                    this.updateHandle(t, g, p, 0),
                    i.stopPropagation || o.notifyMouseMove(c, f.x, f.y);
                },
              },
              {
                key: 'onHandleChange',
                value: function (e) {
                  var t = e.handle,
                    n = e.e,
                    r = this.options,
                    i = this.handles,
                    o = this.cellView,
                    a = t.options.index;
                  if (Array.isArray(i)) {
                    for (var s = 0, l = i.length; s < l; s += 1)
                      s !== a && i[s].hide();
                    if (
                      (this.focus(),
                      this.setEventData(n, {
                        sourceAnchor: o.sourceAnchor.clone(),
                        targetAnchor: o.targetAnchor.clone(),
                        sourceAnchorDef: qi(
                          this.cell.prop(['source', 'anchor'])
                        ),
                        targetAnchorDef: qi(
                          this.cell.prop(['target', 'anchor'])
                        ),
                      }),
                      this.cell.startBatch('move-segment', {
                        ui: !0,
                        toolId: this.cid,
                      }),
                      !r.stopPropagation)
                    ) {
                      var u = this.normalizeEvent(n),
                        c = this.graph.snapToGrid(u.clientX, u.clientY);
                      o.notifyMouseDown(u, c.x, c.y);
                    }
                  }
                },
              },
              {
                key: 'onHandleChanged',
                value: function (e) {
                  var t = e.e,
                    n = this.options,
                    r = this.cellView;
                  n.removeRedundancies &&
                    r.removeRedundantLinearVertices({
                      ui: !0,
                      toolId: this.cid,
                    });
                  var i = this.normalizeEvent(t),
                    o = this.graph.snapToGrid(i.clientX, i.clientY);
                  this.render(),
                    this.blur(),
                    this.cell.stopBatch('move-segment', {
                      ui: !0,
                      toolId: this.cid,
                    }),
                    n.stopPropagation || r.notifyMouseUp(i, o.x, o.y),
                    r.checkMouseleave(i),
                    n.onChanged && n.onChanged({ edge: r.cell, edgeView: r });
                },
              },
              {
                key: 'updateHandle',
                value: function (e, t, n) {
                  var r =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : 0,
                    i = this.options.precision || 0,
                    o = Math.abs(t.x - n.x) < i,
                    a = Math.abs(t.y - n.y) < i;
                  if (o || a) {
                    var s = new ec(t, n),
                      l = s.length();
                    if (l < this.options.threshold) e.hide();
                    else {
                      var u = s.getCenter(),
                        c = o ? 'x' : 'y';
                      u[c] += r || 0;
                      var f = s.vector().vectorAngle(new Ku(1, 0));
                      e.updatePosition(u.x, u.y, f, this.cellView),
                        e.show(),
                        (e.options.axis = c);
                    }
                  } else e.hide();
                },
              },
              {
                key: 'onRemove',
                value: function () {
                  this.resetHandles();
                },
              },
            ]),
            n
          );
        })(Nd.ToolItem);
        !(function (e) {
          var t = (function (t) {
            M()(r, t);
            var n = N()(r);
            function r(e) {
              var t;
              return (
                y()(this, r),
                ((t = n.call(this)).options = e),
                t.render(),
                t.delegateEvents({
                  mousedown: 'onMouseDown',
                  touchstart: 'onMouseDown',
                }),
                t
              );
            }
            return (
              b()(r, [
                {
                  key: 'render',
                  value: function () {
                    this.container = Sd.createElement('rect', !0);
                    var t = this.options.attrs;
                    if ('function' == typeof t) {
                      var n = e.getDefaults();
                      this.setAttrs(
                        Object.assign(Object.assign({}, n.attrs), t(this))
                      );
                    } else this.setAttrs(t);
                    this.addClass(this.prefixClassName('edge-tool-segment'));
                  },
                },
                {
                  key: 'updatePosition',
                  value: function (e, t, n, r) {
                    var i = r.getClosestPoint(new Ku(e, t)) || new Ku(e, t),
                      o = mu().translate(i.x, i.y);
                    if (i.equals({ x: e, y: t })) o = o.rotate(n);
                    else {
                      var a = new ec(e, t, i.x, i.y)
                        .vector()
                        .vectorAngle(new Ku(1, 0));
                      0 !== a && (a += 90), (o = o.rotate(a));
                    }
                    this.setAttrs({
                      transform: wu(o),
                      cursor: n % 180 == 0 ? 'row-resize' : 'col-resize',
                    });
                  },
                },
                {
                  key: 'onMouseDown',
                  value: function (e) {
                    this.options.guard(e) ||
                      (this.trigger('change', { e: e, handle: this }),
                      e.stopPropagation(),
                      e.preventDefault(),
                      this.options.graph.view.undelegateEvents(),
                      this.delegateDocumentEvents(
                        {
                          mousemove: 'onMouseMove',
                          touchmove: 'onMouseMove',
                          mouseup: 'onMouseUp',
                          touchend: 'onMouseUp',
                          touchcancel: 'onMouseUp',
                        },
                        e.data
                      ));
                  },
                },
                {
                  key: 'onMouseMove',
                  value: function (e) {
                    this.emit('changing', { e: e, handle: this });
                  },
                },
                {
                  key: 'onMouseUp',
                  value: function (e) {
                    this.emit('changed', { e: e, handle: this }),
                      this.undelegateDocumentEvents(),
                      this.options.graph.view.delegateEvents();
                  },
                },
                {
                  key: 'show',
                  value: function () {
                    this.container.style.display = '';
                  },
                },
                {
                  key: 'hide',
                  value: function () {
                    this.container.style.display = 'none';
                  },
                },
              ]),
              r
            );
          })(Sd);
          e.Handle = t;
        })(Gd || (Gd = {})),
          (function (e) {
            e.config({
              name: 'segments',
              precision: 0.5,
              threshold: 40,
              snapRadius: 10,
              stopPropagation: !0,
              removeRedundancies: !0,
              attrs: {
                width: 20,
                height: 8,
                x: -10,
                y: -4,
                rx: 4,
                ry: 4,
                fill: '#333',
                stroke: '#fff',
                'stroke-width': 2,
              },
              createHandle: function (t) {
                return new e.Handle(t);
              },
              anchor: zd,
            });
          })(Gd || (Gd = {}));
        var Wd = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n() {
            return y()(this, n), t.apply(this, arguments);
          }
          return (
            b()(n, [
              {
                key: 'type',
                get: function () {
                  return this.options.type;
                },
              },
              {
                key: 'onRender',
                value: function () {
                  Ks(
                    this.container,
                    this.prefixClassName(
                      'edge-tool-'.concat(this.type, '-anchor')
                    )
                  ),
                    this.toggleArea(!1),
                    this.update();
                },
              },
              {
                key: 'update',
                value: function () {
                  var e = this.type;
                  return (
                    this.cellView.getTerminalView(e)
                      ? (this.updateAnchor(),
                        this.updateArea(),
                        (this.container.style.display = ''))
                      : (this.container.style.display = 'none'),
                    this
                  );
                },
              },
              {
                key: 'updateAnchor',
                value: function () {
                  var e = this.childNodes;
                  if (e) {
                    var t = e.anchor;
                    if (t) {
                      var n = this.type,
                        r = this.cellView,
                        i = this.options,
                        o = r.getTerminalAnchor(n),
                        a = r.cell.prop([n, 'anchor']);
                      t.setAttribute(
                        'transform',
                        'translate('.concat(o.x, ', ').concat(o.y, ')')
                      );
                      var s = a ? i.customAnchorAttrs : i.defaultAnchorAttrs;
                      s &&
                        Object.keys(s).forEach(function (e) {
                          t.setAttribute(e, s[e]);
                        });
                    }
                  }
                },
              },
              {
                key: 'updateArea',
                value: function () {
                  var e = this.childNodes;
                  if (e) {
                    var t = e.area;
                    if (t) {
                      var n = this.type,
                        r = this.cellView,
                        i = r.getTerminalView(n);
                      if (i) {
                        var o,
                          a,
                          s,
                          l = i.cell,
                          u = r.getTerminalMagnet(n),
                          c = this.options.areaPadding || 0;
                        Number.isFinite(c) || (c = 0),
                          i.isEdgeElement(u)
                            ? ((a = 0), (s = (o = i.getBBox()).getCenter()))
                            : ((o = i.getUnrotatedBBoxOfElement(u)),
                              (a = l.getAngle()),
                              (s = o.getCenter()),
                              a && s.rotate(-a, l.getBBox().getCenter())),
                          o.inflate(c),
                          Cl(t, {
                            x: -o.width / 2,
                            y: -o.height / 2,
                            width: o.width,
                            height: o.height,
                            transform: 'translate('
                              .concat(s.x, ', ')
                              .concat(s.y, ') rotate(')
                              .concat(a, ')'),
                          });
                      }
                    }
                  }
                },
              },
              {
                key: 'toggleArea',
                value: function (e) {
                  if (this.childNodes) {
                    var t = this.childNodes.area;
                    t && (t.style.display = e ? '' : 'none');
                  }
                },
              },
              {
                key: 'onMouseDown',
                value: function (e) {
                  this.guard(e) ||
                    (e.stopPropagation(),
                    e.preventDefault(),
                    this.graph.view.undelegateEvents(),
                    this.options.documentEvents &&
                      this.delegateDocumentEvents(this.options.documentEvents),
                    this.focus(),
                    this.toggleArea(this.options.restrictArea),
                    this.cell.startBatch('move-anchor', {
                      ui: !0,
                      toolId: this.cid,
                    }));
                },
              },
              {
                key: 'resetAnchor',
                value: function (e) {
                  var t = this.type,
                    n = this.cell;
                  e
                    ? n.prop([t, 'anchor'], e, {
                        rewrite: !0,
                        ui: !0,
                        toolId: this.cid,
                      })
                    : n.removeProp([t, 'anchor'], { ui: !0, toolId: this.cid });
                },
              },
              {
                key: 'onMouseMove',
                value: function (e) {
                  var t = this.type,
                    n = this.cellView,
                    r = n.getTerminalView(t);
                  if (null != r) {
                    var i,
                      o = this.normalizeEvent(e),
                      a = r.cell,
                      s = n.getTerminalMagnet(t),
                      l = this.graph.coord.clientToLocalPoint(
                        o.clientX,
                        o.clientY
                      ),
                      u = this.options.snap;
                    if ('function' == typeof u) {
                      var c = de(u, n, l, r, s, t, n, this);
                      l = Ku.create(c);
                    }
                    if (this.options.restrictArea)
                      if (r.isEdgeElement(s)) {
                        var f = r.getClosestPoint(l);
                        f && (l = f);
                      } else {
                        var h = r.getUnrotatedBBoxOfElement(s),
                          d = a.getAngle(),
                          g = a.getBBox().getCenter(),
                          p = l.clone().rotate(d, g);
                        h.containsPoint(p) ||
                          (l = h.getNearestPointToPoint(p).rotate(-d, g));
                      }
                    var v = this.options.anchor;
                    'function' == typeof v &&
                      (i = de(v, n, l, r, s, t, n, this)),
                      this.resetAnchor(i),
                      this.update();
                  }
                },
              },
              {
                key: 'onMouseUp',
                value: function (e) {
                  this.graph.view.delegateEvents(),
                    this.undelegateDocumentEvents(),
                    this.blur(),
                    this.toggleArea(!1);
                  var t = this.cellView;
                  this.options.removeRedundancies &&
                    t.removeRedundantLinearVertices({
                      ui: !0,
                      toolId: this.cid,
                    }),
                    this.cell.stopBatch('move-anchor', {
                      ui: !0,
                      toolId: this.cid,
                    });
                },
              },
              {
                key: 'onDblClick',
                value: function () {
                  var e = this.options.resetAnchor;
                  e && this.resetAnchor(!0 === e ? void 0 : e), this.update();
                },
              },
            ]),
            n
          );
        })(Nd.ToolItem);
        !(function (e) {
          e.config({
            tagName: 'g',
            markup: [
              {
                tagName: 'circle',
                selector: 'anchor',
                attrs: { cursor: 'pointer' },
              },
              {
                tagName: 'rect',
                selector: 'area',
                attrs: {
                  'pointer-events': 'none',
                  fill: 'none',
                  stroke: '#33334F',
                  'stroke-dasharray': '2,4',
                  rx: 5,
                  ry: 5,
                },
              },
            ],
            events: {
              mousedown: 'onMouseDown',
              touchstart: 'onMouseDown',
              dblclick: 'onDblClick',
            },
            documentEvents: {
              mousemove: 'onMouseMove',
              touchmove: 'onMouseMove',
              mouseup: 'onMouseUp',
              touchend: 'onMouseUp',
              touchcancel: 'onMouseUp',
            },
            customAnchorAttrs: {
              'stroke-width': 4,
              stroke: '#33334F',
              fill: '#FFFFFF',
              r: 5,
            },
            defaultAnchorAttrs: {
              'stroke-width': 2,
              stroke: '#FFFFFF',
              fill: '#33334F',
              r: 6,
            },
            areaPadding: 6,
            snapRadius: 10,
            resetAnchor: !0,
            restrictArea: !0,
            removeRedundancies: !0,
            anchor: zd,
            snap: function (e, t, n, r, i, o) {
              var a = o.options.snapRadius || 0,
                s = 'source' === r,
                l = s ? 0 : -1,
                u =
                  this.cell.getVertexAt(l) ||
                  this.getTerminalAnchor(s ? 'target' : 'source');
              return (
                u &&
                  (Math.abs(u.x - e.x) < a && (e.x = u.x),
                  Math.abs(u.y - e.y) < a && (e.y = u.y)),
                e
              );
            },
          });
        })(Wd || (Wd = {}));
        var qd = Wd.define({ name: 'source-anchor', type: 'source' }),
          Xd = Wd.define({ name: 'target-anchor', type: 'target' }),
          Yd = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Jd = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'type',
                  get: function () {
                    return this.options.type;
                  },
                },
                {
                  key: 'ratio',
                  get: function () {
                    return this.options.ratio;
                  },
                },
                {
                  key: 'init',
                  value: function () {
                    if (this.options.attrs) {
                      var e = this.options.attrs,
                        t = e.class,
                        n = Yd(e, ['class']);
                      this.setAttrs(n, this.container),
                        t && Ks(this.container, t);
                    }
                  },
                },
                {
                  key: 'onRender',
                  value: function () {
                    Ks(
                      this.container,
                      this.prefixClassName(
                        'edge-tool-'.concat(this.type, '-arrowhead')
                      )
                    ),
                      this.update();
                  },
                },
                {
                  key: 'update',
                  value: function () {
                    var e = this.ratio,
                      t = this.cellView,
                      n = t.getTangentAtRatio(e),
                      r = n ? n.start : t.getPointAtRatio(e),
                      i = (n && n.vector().vectorAngle(new Ku(1, 0))) || 0;
                    if (!r) return this;
                    var o = mu().translate(r.x, r.y).rotate(i);
                    return Su(this.container, o, { absolute: !0 }), this;
                  },
                },
                {
                  key: 'onMouseDown',
                  value: function (e) {
                    if (!this.guard(e)) {
                      e.stopPropagation(), e.preventDefault();
                      var t = this.cellView;
                      if (t.can('arrowheadMovable')) {
                        t.cell.startBatch('move-arrowhead', {
                          ui: !0,
                          toolId: this.cid,
                        });
                        var n = this.graph.snapToGrid(e.clientX, e.clientY),
                          r = t.prepareArrowheadDragging(this.type, {
                            x: n.x,
                            y: n.y,
                            options: Object.assign(
                              Object.assign({}, this.options),
                              { toolId: this.cid }
                            ),
                          });
                        this.cellView.setEventData(e, r),
                          this.delegateDocumentEvents(
                            this.options.documentEvents,
                            e.data
                          ),
                          t.graph.view.undelegateEvents(),
                          (this.container.style.pointerEvents = 'none');
                      }
                      this.focus();
                    }
                  },
                },
                {
                  key: 'onMouseMove',
                  value: function (e) {
                    var t = this.normalizeEvent(e),
                      n = this.graph.snapToGrid(t.clientX, t.clientY);
                    this.cellView.onMouseMove(t, n.x, n.y), this.update();
                  },
                },
                {
                  key: 'onMouseUp',
                  value: function (e) {
                    this.undelegateDocumentEvents();
                    var t = this.normalizeEvent(e),
                      n = this.cellView,
                      r = this.graph.snapToGrid(t.clientX, t.clientY);
                    n.onMouseUp(t, r.x, r.y),
                      this.graph.view.delegateEvents(),
                      this.blur(),
                      (this.container.style.pointerEvents = ''),
                      n.cell.stopBatch('move-arrowhead', {
                        ui: !0,
                        toolId: this.cid,
                      });
                  },
                },
              ]),
              n
            );
          })(Nd.ToolItem);
        !(function (e) {
          e.config({
            tagName: 'path',
            isSVGElement: !0,
            events: { mousedown: 'onMouseDown', touchstart: 'onMouseDown' },
            documentEvents: {
              mousemove: 'onMouseMove',
              touchmove: 'onMouseMove',
              mouseup: 'onMouseUp',
              touchend: 'onMouseUp',
              touchcancel: 'onMouseUp',
            },
          });
        })(Jd || (Jd = {}));
        var $d = Jd.define({
            name: 'source-arrowhead',
            type: 'source',
            ratio: 0,
            attrs: {
              d: 'M 10 -8 -10 0 10 8 Z',
              fill: '#333',
              stroke: '#fff',
              'stroke-width': 2,
              cursor: 'move',
            },
          }),
          Qd = Jd.define({
            name: 'target-arrowhead',
            type: 'target',
            ratio: 1,
            attrs: {
              d: 'M -10 -8 10 0 -10 8 Z',
              fill: '#333',
              stroke: '#fff',
              'stroke-width': 2,
              cursor: 'move',
            },
          }),
          Kd = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              var e;
              return (
                y()(this, n),
                ((e = t.apply(this, arguments)).labelIndex = -1),
                (e.distance = 0.5),
                e
              );
            }
            return (
              b()(n, [
                {
                  key: 'onRender',
                  value: function () {
                    var e = this;
                    this.graph.on('cell:dblclick', function (t) {
                      var n = t.e;
                      t.cell === e.cell && e.onCellDblClick(n);
                    });
                  },
                },
                {
                  key: 'createElement',
                  value: function () {
                    var e = [
                      this.prefixClassName(
                        ''.concat(
                          this.cell.isEdge() ? 'edge' : 'node',
                          '-tool-editor'
                        )
                      ),
                      this.prefixClassName('cell-tool-editor'),
                    ];
                    (this.editor = Nd.createElement('div', !1)),
                      this.addClass(e, this.editor),
                      (this.editor.contentEditable = 'true'),
                      this.container.appendChild(this.editor);
                  },
                },
                {
                  key: 'removeElement',
                  value: function () {
                    this.undelegateDocumentEvents(),
                      this.editor && this.container.removeChild(this.editor);
                  },
                },
                {
                  key: 'updateEditor',
                  value: function () {
                    var e = this.cell,
                      t = this.editor,
                      n = t.style;
                    e.isNode()
                      ? this.updateNodeEditorTransform()
                      : e.isEdge() && this.updateEdgeEditorTransform();
                    var r,
                      i = this.options.attrs;
                    (n.fontSize = ''.concat(i.fontSize, 'px')),
                      (n.fontFamily = i.fontFamily),
                      (n.color = i.color),
                      (n.backgroundColor = i.backgroundColor);
                    var o = this.options.getText;
                    return (
                      'function' == typeof o &&
                        (r = de(o, this.cellView, {
                          cell: this.cell,
                          index: this.labelIndex,
                        })),
                      (t.innerText = r || ''),
                      this.setCellText(''),
                      this
                    );
                  },
                },
                {
                  key: 'updateNodeEditorTransform',
                  value: function () {
                    var e = this.graph,
                      t = this.cell,
                      n = this.editor,
                      r = Ku.create(),
                      i = 20,
                      o = '',
                      a = this.options,
                      s = a.x,
                      l = a.y;
                    if (void 0 !== s && void 0 !== l) {
                      var u = t.getBBox();
                      (s = Es(s, u.width)),
                        (l = Es(l, u.height)),
                        (r = u.topLeft.translate(s, l)),
                        (i = u.width - 2 * s);
                    } else {
                      var c = t.getBBox();
                      (r = c.center),
                        (i = c.width - 4),
                        (o = 'translate(-50%, -50%)');
                    }
                    var f = e.scale(),
                      h = n.style;
                    (r = e.localToGraph(r)),
                      (h.left = ''.concat(r.x, 'px')),
                      (h.top = ''.concat(r.y, 'px')),
                      (h.transform = 'scale('
                        .concat(f.sx, ', ')
                        .concat(f.sy, ') ')
                        .concat(o)),
                      (h.minWidth = ''.concat(i, 'px'));
                  },
                },
                {
                  key: 'updateEdgeEditorTransform',
                  value: function () {
                    if (this.event) {
                      var e = Ku.create(),
                        t = 20,
                        n = this.graph,
                        r = this.editor.style,
                        i = this.event.target,
                        o = i.parentElement;
                      if (o && Qs(o, this.prefixClassName('edge-label'))) {
                        var a = o.getAttribute('data-index') || '0';
                        this.labelIndex = parseInt(a, 10);
                        var s = xu(o.getAttribute('transform')).translation;
                        (e = new Ku(s.tx, s.ty)), (t = Nh.getBBox(i).width);
                      } else {
                        if (!this.options.labelAddable) return this;
                        e = n.clientToLocal(
                          Ku.create(this.event.clientX, this.event.clientY)
                        );
                        var l = this.cellView.path.closestPointLength(e);
                        (this.distance = l), (this.labelIndex = -1);
                      }
                      e = n.localToGraph(e);
                      var u = n.scale();
                      (r.left = ''.concat(e.x, 'px')),
                        (r.top = ''.concat(e.y, 'px')),
                        (r.minWidth = ''.concat(t, 'px')),
                        (r.transform = 'scale('
                          .concat(u.sx, ', ')
                          .concat(u.sy, ') translate(-50%, -50%)'));
                    }
                  },
                },
                {
                  key: 'onDocumentMouseDown',
                  value: function (e) {
                    if (e.target !== this.editor) {
                      var t = this.editor.innerText.replace(/\n$/, '') || '';
                      this.setCellText('' !== t ? t : null),
                        this.removeElement();
                    }
                  },
                },
                {
                  key: 'onCellDblClick',
                  value: function (e) {
                    e.stopPropagation(),
                      (this.event = e),
                      this.createElement(),
                      this.updateEditor(),
                      this.autoFocus(),
                      this.delegateDocumentEvents(this.options.documentEvents);
                  },
                },
                {
                  key: 'onMouseDown',
                  value: function (e) {
                    e.stopPropagation();
                  },
                },
                {
                  key: 'autoFocus',
                  value: function () {
                    var e = this;
                    setTimeout(function () {
                      e.editor.focus(), e.selectText();
                    });
                  },
                },
                {
                  key: 'selectText',
                  value: function () {
                    if (window.getSelection) {
                      var e = document.createRange(),
                        t = window.getSelection();
                      e.selectNodeContents(this.editor),
                        t.removeAllRanges(),
                        t.addRange(e);
                    }
                  },
                },
                {
                  key: 'setCellText',
                  value: function (e) {
                    var t = this.options.setText;
                    'function' == typeof t &&
                      de(t, this.cellView, {
                        cell: this.cell,
                        value: e,
                        index: this.labelIndex,
                        distance: this.distance,
                      });
                  },
                },
                {
                  key: 'onRemove',
                  value: function () {
                    this.removeElement();
                  },
                },
              ]),
              n
            );
          })(Nd.ToolItem);
        !(function (e) {
          e.config({
            tagName: 'div',
            isSVGElement: !1,
            events: { mousedown: 'onMouseDown' },
            documentEvents: { mousedown: 'onDocumentMouseDown' },
          });
        })(Kd || (Kd = {})),
          (function (e) {
            (e.NodeEditor = e.define({
              attrs: {
                fontSize: 14,
                fontFamily: 'Arial, helvetica, sans-serif',
                color: '#000',
                backgroundColor: '#fff',
              },
              getText: function (e) {
                return e.cell.attr('text/text');
              },
              setText: function (e) {
                var t = e.cell,
                  n = e.value;
                null !== n && t.attr('text/text', n);
              },
            })),
              (e.EdgeEditor = e.define({
                attrs: {
                  fontSize: 14,
                  fontFamily: 'Arial, helvetica, sans-serif',
                  color: '#000',
                  backgroundColor: '#fff',
                },
                labelAddable: !0,
                getText: function (e) {
                  var t = e.cell,
                    n = e.index;
                  return -1 === n
                    ? ''
                    : t.prop('labels/'.concat(n, '/attrs/label/text'));
                },
                setText: function (e) {
                  var t = e.cell,
                    n = e.value,
                    r = e.index,
                    i = e.distance,
                    o = t;
                  -1 === r
                    ? n &&
                      o.appendLabel({
                        position: { distance: i },
                        attrs: { label: { text: n } },
                      })
                    : null !== n
                    ? o.prop('labels/'.concat(r, '/attrs/label/text'), n)
                    : 'number' == typeof r && o.removeLabelAt(r);
                },
              }));
          })(Kd || (Kd = {}));
        var Zd,
          eg,
          tg = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          };
        !(function (e) {
          (e.presets = {
            boundary: Ud,
            button: Vd,
            'button-remove': Vd.Remove,
            'node-editor': Kd.NodeEditor,
          }),
            (e.registry = Ec.create({
              type: 'node tool',
              process: function (e, t) {
                if ('function' == typeof t) return t;
                var n = Nd.ToolItem,
                  r = t.inherit,
                  i = tg(t, ['inherit']);
                if (r) {
                  var o = this.get(r);
                  null == o ? this.onNotFound(r, 'inherited') : (n = o);
                }
                return null == i.name && (i.name = e), n.define.call(n, i);
              },
            })),
            e.registry.register(e.presets, !0);
        })(Zd || (Zd = {})),
          (function (e) {
            (e.presets = {
              boundary: Ud,
              vertices: Hd,
              segments: Gd,
              button: Vd,
              'button-remove': Vd.Remove,
              'source-anchor': qd,
              'target-anchor': Xd,
              'source-arrowhead': $d,
              'target-arrowhead': Qd,
              'edge-editor': Kd.EdgeEditor,
            }),
              (e.registry = Ec.create({
                type: 'edge tool',
                process: function (e, t) {
                  if ('function' == typeof t) return t;
                  var n = Nd.ToolItem,
                    r = t.inherit,
                    i = tg(t, ['inherit']);
                  if (r) {
                    var o = this.get(r);
                    null == o ? this.onNotFound(r, 'inherited') : (n = o);
                  }
                  return null == i.name && (i.name = e), n.define.call(n, i);
                },
              })),
              e.registry.register(e.presets, !0);
          })(eg || (eg = {}));
        var ng = fg('center'),
          rg = fg('topCenter'),
          ig = fg('bottomCenter'),
          og = fg('leftMiddle'),
          ag = fg('rightMiddle'),
          sg = fg('topLeft'),
          lg = fg('topRight'),
          ug = fg('bottomLeft'),
          cg = fg('bottomRight');
        function fg(e) {
          return function (t, n, r) {
            var i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : {},
              o = i.rotate
                ? t.getUnrotatedBBoxOfElement(n)
                : t.getBBoxOfElement(n),
              a = o[e];
            (a.x += Es(i.dx, o.width)), (a.y += Es(i.dy, o.height));
            var s = t.cell;
            return i.rotate
              ? a.rotate(-s.getAngle(), s.getBBox().getCenter())
              : a;
          };
        }
        function hg(e) {
          return function (t, n, r, i) {
            if (r instanceof Element) {
              var o,
                a = this.graph.findViewByElem(r);
              if (a)
                if (a.isEdgeElement(r)) {
                  var s = null != i.fixedAt ? i.fixedAt : '50%';
                  o = dg(a, s);
                } else o = a.getBBoxOfElement(r).getCenter();
              else o = new Ku();
              return e.call(this, t, n, o, i);
            }
            return e.apply(this, arguments);
          };
        }
        function dg(e, t) {
          var n = Ss(t),
            r = 'string' == typeof t ? parseFloat(t) : t;
          return n ? e.getPointAtRatio(r / 100) : e.getPointAtLength(r);
        }
        var gg,
          pg = hg(function (e, t, n, r) {
            var i = e.cell.getAngle(),
              o = e.getBBoxOfElement(t),
              a = o.getCenter(),
              s = o.getTopLeft(),
              l = o.getBottomRight(),
              u = r.padding;
            if (
              (Number.isFinite(u) || (u = 0), s.y + u <= n.y && n.y <= l.y - u)
            ) {
              var c = n.y - a.y;
              (a.x +=
                0 === i || 180 === i ? 0 : (1 * c) / Math.tan(Xu.toRad(i))),
                (a.y += c);
            } else if (s.x + u <= n.x && n.x <= l.x - u) {
              var f = n.x - a.x;
              (a.y += 90 === i || 270 === i ? 0 : f * Math.tan(Xu.toRad(i))),
                (a.x += f);
            }
            return a;
          }),
          vg = function (e, t, n, r, i) {
            var o = e.cell.getConnectionPoint(this.cell, i);
            return (r.dx || r.dy) && o.translate(r.dx || 0, r.dy || 0), o;
          },
          yg = hg(function (e, t, n, r) {
            var i,
              o,
              a = 0,
              s = e.cell;
            r.rotate
              ? ((i = e.getUnrotatedBBoxOfElement(t)),
                (o = s.getBBox().getCenter()),
                (a = s.getAngle()))
              : (i = e.getBBoxOfElement(t));
            var l = r.padding;
            null != l && Number.isFinite(l) && i.inflate(l),
              r.rotate && n.rotate(a, o);
            var u,
              c = i.getNearestSideToPoint(n);
            switch (c) {
              case 'left':
                u = i.getLeftMiddle();
                break;
              case 'right':
                u = i.getRightMiddle();
                break;
              case 'top':
                u = i.getTopCenter();
                break;
              case 'bottom':
                u = i.getBottomCenter();
            }
            var f = r.direction;
            return (
              'H' === f
                ? ('top' !== c && 'bottom' !== c) ||
                  (u =
                    n.x <= i.x + i.width
                      ? i.getLeftMiddle()
                      : i.getRightMiddle())
                : 'V' === f &&
                  (u =
                    n.y <= i.y + i.height
                      ? i.getTopCenter()
                      : i.getBottomCenter()),
              r.rotate ? u.rotate(-a, o) : u
            );
          });
        !(function (e) {
          (e.presets = f),
            (e.registry = Ec.create({ type: 'node endpoint' })),
            e.registry.register(e.presets, !0);
        })(gg || (gg = {}));
        var mg,
          bg = function (e, t, n, r) {
            var i = null != r.ratio ? r.ratio : 0.5;
            return i > 1 && (i /= 100), e.getPointAtRatio(i);
          },
          kg = function (e, t, n, r) {
            var i = null != r.length ? r.length : 20;
            return e.getPointAtLength(i);
          },
          wg = function (e, t, n, r) {
            var i = e.getClosestPoint(n);
            return null != i ? i : new Ku();
          },
          xg = hg(wg),
          Cg = hg(function (e, t, n, r) {
            var i = 1e6,
              o = e.getConnection(),
              a = e.getConnectionSubdivisions(),
              s = new ec(n.clone().translate(0, i), n.clone().translate(0, -i)),
              l = new ec(n.clone().translate(i, 0), n.clone().translate(-i, 0)),
              u = s.intersect(o, { segmentSubdivisions: a }),
              c = l.intersect(o, { segmentSubdivisions: a }),
              f = [];
            return (
              u && f.push.apply(f, L()(u)),
              c && f.push.apply(f, L()(c)),
              f.length > 0
                ? n.closest(f)
                : null != r.fallbackAt
                ? dg(e, r.fallbackAt)
                : de(wg, this, e, t, n, r)
            );
          });
        function Sg(e, t, n) {
          var r;
          if ('object' === _()(n)) {
            if (Number.isFinite(n.y)) {
              var i = new ec(t, e).parallel(n.y);
              (t = i.start), (e = i.end);
            }
            r = n.x;
          } else r = n;
          if (null == r || !Number.isFinite(r)) return e;
          var o = e.distance(t);
          return 0 === r && o > 0 ? e : e.move(t, -Math.min(r, o - 1));
        }
        function Eg(e) {
          var t = e.getAttribute('stroke-width');
          return null === t ? 0 : parseFloat(t) || 0;
        }
        !(function (e) {
          (e.presets = h),
            (e.registry = Ec.create({ type: 'edge endpoint' })),
            e.registry.register(e.presets, !0);
        })(mg || (mg = {}));
        var Og = function (e, t, n, r) {
            var i = t.getBBoxOfElement(n);
            r.stroked && i.inflate(Eg(n) / 2);
            var o = e.intersect(i);
            return Sg(
              o && o.length ? e.start.closest(o) : e.end,
              e.start,
              r.offset
            );
          },
          Pg = function (e, t, n, r, i) {
            var o = t.cell,
              a = o.isNode() ? o.getAngle() : 0;
            if (0 === a) return de(Og, this, e, t, n, r, i);
            var s = t.getUnrotatedBBoxOfElement(n);
            r.stroked && s.inflate(Eg(n) / 2);
            var l = s.getCenter(),
              u = e.clone().rotate(a, l),
              c = u.setLength(1e6).intersect(s);
            return Sg(
              c && c.length ? u.start.closest(c).rotate(-a, l) : e.end,
              e.start,
              r.offset
            );
          },
          Ag = function (e, t, n, r) {
            var i,
              o,
              a = e.end,
              s = r.selector;
            if (
              ((i =
                'string' == typeof s
                  ? t.findOne(s)
                  : Array.isArray(s)
                  ? io(n, s)
                  : (function (e) {
                      if (null == e) return null;
                      var t = e;
                      do {
                        var n = t.tagName;
                        if ('string' != typeof n) return null;
                        if ('G' === (n = n.toUpperCase()))
                          t = t.firstElementChild;
                        else {
                          if ('TITLE' !== n) break;
                          t = t.nextElementSibling;
                        }
                      } while (t);
                      return t;
                    })(n)),
              !rl(i))
            ) {
              if (i === n || !rl(n)) return a;
              i = n;
            }
            var l,
              u = t.getShapeOfElement(i),
              c = t.getMatrixOfElement(i),
              f = t.getRootTranslatedMatrix(),
              h = t.getRootRotatedMatrix(),
              d = f.multiply(h).multiply(c),
              g = d.inverse(),
              p = Nh.transformLine(e, g),
              v = p.start.clone(),
              y = t.getDataOfElement(i);
            if (!1 === r.insideout) {
              null == y.shapeBBox && (y.shapeBBox = u.bbox());
              var m = y.shapeBBox;
              if (null != m && m.containsPoint(v)) return a;
            }
            if ((!0 === r.extrapolate && p.setLength(1e6), Sc.isPath(u))) {
              var b = r.precision || 2;
              null == y.segmentSubdivisions &&
                (y.segmentSubdivisions = u.getSegmentSubdivisions({
                  precision: b,
                })),
                (l = {
                  precision: b,
                  segmentSubdivisions: y.segmentSubdivisions,
                }),
                (o = p.intersect(u, l));
            } else o = p.intersect(u);
            o
              ? Array.isArray(o) && (o = v.closest(o))
              : !0 === r.sticky &&
                (o = Zu.isRectangle(u)
                  ? u.getNearestPointToPoint(v)
                  : tc.isEllipse(u)
                  ? u.intersectsWithLineFromCenterToPoint(v)
                  : u.closestPoint(v, l));
            var k = o ? Nh.transformPoint(o, d) : a,
              w = r.offset || 0;
            return (
              !1 !== r.stroked &&
                ('object' === _()(w)
                  ? (null == (w = Object.assign({}, w)).x && (w.x = 0),
                    (w.x += Eg(i) / 2))
                  : (w += Eg(i) / 2)),
              Sg(k, e.start, w)
            );
          };
        var Mg,
          Tg = function (e, t, n, r) {
            var i = r.alignOffset,
              o = r.align;
            return (
              o &&
                (function (e, t) {
                  var n,
                    r,
                    i,
                    o,
                    a =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : 0,
                    s = e.start,
                    l = e.end;
                  switch (t) {
                    case 'left':
                      (o = 'x'), (n = l), (r = s), (i = -1);
                      break;
                    case 'right':
                      (o = 'x'), (n = s), (r = l), (i = 1);
                      break;
                    case 'top':
                      (o = 'y'), (n = l), (r = s), (i = -1);
                      break;
                    case 'bottom':
                      (o = 'y'), (n = s), (r = l), (i = 1);
                      break;
                    default:
                      return;
                  }
                  s[o] < l[o] ? (n[o] = r[o]) : (r[o] = n[o]),
                    Number.isFinite(a) && ((n[o] += i * a), (r[o] += i * a));
                })(e, o, i),
              Sg(e.end, e.start, r.offset)
            );
          };
        !(function (e) {
          (e.presets = d),
            (e.registry = Ec.create({ type: 'connection point' })),
            e.registry.register(e.presets, !0);
        })(Mg || (Mg = {}));
        var Ng = function (e) {
            return L()(e);
          },
          jg = function (e, t, n) {
            var r,
              i,
              o,
              a = t.side || 'bottom',
              s = Os(t.padding || 40),
              l = n.sourceBBox,
              u = n.targetBBox,
              c = l.getCenter(),
              f = u.getCenter();
            switch (a) {
              case 'top':
                (o = -1), (r = 'y'), (i = 'height');
                break;
              case 'left':
                (o = -1), (r = 'x'), (i = 'width');
                break;
              case 'right':
                (o = 1), (r = 'x'), (i = 'width');
                break;
              default:
                (o = 1), (r = 'y'), (i = 'height');
            }
            return (
              (c[r] += o * (l[i] / 2 + s[a])),
              (f[r] += o * (u[i] / 2 + s[a])),
              o * (c[r] - f[r]) > 0 ? (f[r] = c[r]) : (c[r] = f[r]),
              [c.toJSON()].concat(L()(e), [f.toJSON()])
            );
          };
        function Lg(e) {
          return new Zu(e.x, e.y, 0, 0);
        }
        function Rg() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = Os(e.padding || 20);
          return {
            x: -t.left,
            y: -t.top,
            width: t.left + t.right,
            height: t.top + t.bottom,
          };
        }
        function _g(e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return e.sourceBBox.clone().moveAndExpand(Rg(t));
        }
        function Ig(e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return e.targetBBox.clone().moveAndExpand(Rg(t));
        }
        var Dg,
          zg = function (e, t, n) {
            var r = _g(n, t),
              i = Ig(n, t),
              o = (function (e) {
                var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
                if (e.sourceAnchor) return e.sourceAnchor;
                var n = _g(e, t);
                return n.getCenter();
              })(n, t),
              a = (function (e) {
                var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
                if (e.targetAnchor) return e.targetAnchor;
                var n = Ig(e, t);
                return n.getCenter();
              })(n, t);
            (r = r.union(Lg(o))), (i = i.union(Lg(a)));
            var s = e.map(function (e) {
              return Ku.create(e);
            });
            s.unshift(o), s.push(a);
            for (var l = null, u = [], c = 0, f = s.length - 1; c < f; c += 1) {
              var h = null,
                d = s[c],
                g = s[c + 1],
                p = null != Dg.getBearing(d, g);
              if (0 === c)
                c + 1 === f
                  ? r.intersectsWithRect(i.clone().inflate(1))
                    ? (h = Dg.insideNode(d, g, r, i))
                    : p || (h = Dg.nodeToNode(d, g, r, i))
                  : r.containsPoint(g)
                  ? (h = Dg.insideNode(d, g, r, Lg(g).moveAndExpand(Rg(t))))
                  : p || (h = Dg.nodeToVertex(d, g, r));
              else if (c + 1 === f) {
                var v = p && Dg.getBearing(g, d) === l;
                i.containsPoint(d) || v
                  ? (h = Dg.insideNode(d, g, Lg(d).moveAndExpand(Rg(t)), i, l))
                  : p || (h = Dg.vertexToNode(d, g, i, l));
              } else p || (h = Dg.vertexToVertex(d, g, l));
              h
                ? (u.push.apply(u, L()(h.points)), (l = h.direction))
                : (l = Dg.getBearing(d, g)),
                c + 1 < f && u.push(g);
            }
            return u;
          };
        !(function (e) {
          var t = { N: 'S', S: 'N', E: 'W', W: 'E' },
            n = { N: (-Math.PI / 2) * 3, S: -Math.PI / 2, E: 0, W: Math.PI };
          function r(e, t, n) {
            var r = new Ku(e.x, t.y);
            return n.containsPoint(r) && (r = new Ku(t.x, e.y)), r;
          }
          function i(e, t) {
            return e['W' === t || 'E' === t ? 'width' : 'height'];
          }
          function o(e, t) {
            return e.x === t.x
              ? e.y > t.y
                ? 'N'
                : 'S'
              : e.y === t.y
              ? e.x > t.x
                ? 'W'
                : 'E'
              : null;
          }
          function a(e, n, r) {
            var i = new Ku(e.x, n.y),
              a = new Ku(n.x, e.y),
              s = o(e, i),
              l = o(e, a),
              u = r ? t[r] : null,
              c = s === r || (s !== u && (l === u || l !== r)) ? i : a;
            return { points: [c], direction: o(c, n) };
          }
          function s(e, t, n) {
            var i = r(e, t, n);
            return { points: [i], direction: o(i, t) };
          }
          (e.getBBoxSize = i),
            (e.getBearing = o),
            (e.vertexToVertex = a),
            (e.nodeToVertex = s),
            (e.vertexToNode = function (e, t, n, a) {
              var s,
                l = [new Ku(e.x, t.y), new Ku(t.x, e.y)],
                u = l.filter(function (e) {
                  return !n.containsPoint(e);
                }),
                c = u.filter(function (t) {
                  return o(t, e) !== a;
                });
              if (c.length > 0)
                return {
                  points: [
                    (s =
                      (s = c
                        .filter(function (t) {
                          return o(e, t) === a;
                        })
                        .pop()) || c[0]),
                  ],
                  direction: o(s, t),
                };
              s = Qo(l, u)[0];
              var f = Ku.create(t).move(s, -i(n, a) / 2);
              return { points: [r(f, e, n), f], direction: o(f, t) };
            }),
            (e.nodeToNode = function (e, t, n, r) {
              var l = s(t, e, r),
                u = l.points[0];
              if (n.containsPoint(u)) {
                var c = (l = s(e, t, n)).points[0];
                if (r.containsPoint(c)) {
                  var f = Ku.create(e).move(c, -i(n, o(e, c)) / 2),
                    h = Ku.create(t).move(u, -i(r, o(t, u)) / 2),
                    d = new ec(f, h).getCenter(),
                    g = s(e, d, n),
                    p = a(d, t, g.direction);
                  (l.points = [g.points[0], p.points[0]]),
                    (l.direction = p.direction);
                }
              }
              return l;
            }),
            (e.insideNode = function (e, t, i, a, s) {
              var l,
                u,
                c,
                f,
                h = i.union(a).inflate(1),
                d = h.getCenter(),
                g = d.distance(t) > d.distance(e),
                p = g ? t : e,
                v = g ? e : t;
              return (
                s
                  ? ((l = Ku.fromPolar(h.width + h.height, n[s], p)),
                    (l = h.getNearestPointToPoint(l).move(l, -1)))
                  : (l = h.getNearestPointToPoint(p).move(p, 1)),
                (u = r(l, v, h)),
                l.round().equals(u.round())
                  ? ((u = Ku.fromPolar(
                      h.width + h.height,
                      Xu.toRad(l.theta(p)) + Math.PI / 2,
                      v
                    )),
                    (c = r(
                      l,
                      (u = h.getNearestPointToPoint(u).move(v, 1).round()),
                      h
                    )),
                    (f = g ? [u, c, l] : [l, c, u]))
                  : (f = g ? [u, l] : [l, u]),
                { points: f, direction: o(g ? l : u, t) }
              );
            });
        })(Dg || (Dg = {}));
        var Bg = {
          step: 10,
          maxLoopCount: 2e3,
          precision: 1,
          maxDirectionChange: 90,
          perpendicular: !0,
          excludeTerminals: [],
          excludeNodes: [],
          excludeShapes: [],
          startDirections: ['top', 'right', 'bottom', 'left'],
          endDirections: ['top', 'right', 'bottom', 'left'],
          directionMap: {
            top: { x: 0, y: -1 },
            right: { x: 1, y: 0 },
            bottom: { x: 0, y: 1 },
            left: { x: -1, y: 0 },
          },
          cost: function () {
            return Vg(this.step, this);
          },
          directions: function () {
            var e = Vg(this.step, this),
              t = Vg(this.cost, this);
            return [
              { cost: t, offsetX: e, offsetY: 0 },
              { cost: t, offsetX: -e, offsetY: 0 },
              { cost: t, offsetX: 0, offsetY: e },
              { cost: t, offsetX: 0, offsetY: -e },
            ];
          },
          penalties: function () {
            var e = Vg(this.step, this);
            return { 0: 0, 45: e / 2, 90: e / 2 };
          },
          paddingBox: function () {
            var e = Vg(this.step, this);
            return { x: -e, y: -e, width: 2 * e, height: 2 * e };
          },
          fallbackRouter: zg,
          draggingRouter: null,
          snapToGrid: !0,
        };
        function Vg(e, t) {
          return 'function' == typeof e ? e.call(t) : e;
        }
        var Fg = (function () {
            function e() {
              y()(this, e),
                (this.items = []),
                (this.hash = {}),
                (this.values = {});
            }
            return (
              b()(e, [
                {
                  key: 'add',
                  value: function (e, t) {
                    var n = this;
                    this.hash[e]
                      ? this.items.splice(this.items.indexOf(e), 1)
                      : (this.hash[e] = 1),
                      (this.values[e] = t);
                    var r = Io(this.items, e, function (e) {
                      return n.values[e];
                    });
                    this.items.splice(r, 0, e);
                  },
                },
                {
                  key: 'pop',
                  value: function () {
                    var e = this.items.shift();
                    return e && (this.hash[e] = 2), e;
                  },
                },
                {
                  key: 'isOpen',
                  value: function (e) {
                    return 1 === this.hash[e];
                  },
                },
                {
                  key: 'isClose',
                  value: function (e) {
                    return 2 === this.hash[e];
                  },
                },
                {
                  key: 'isEmpty',
                  value: function () {
                    return 0 === this.items.length;
                  },
                },
              ]),
              e
            );
          })(),
          Ug = (function () {
            function e(t) {
              y()(this, e),
                (this.options = t),
                (this.mapGridSize = 100),
                (this.map = {});
            }
            return (
              b()(e, [
                {
                  key: 'build',
                  value: function (e, t) {
                    var n = this.options,
                      r = n.excludeTerminals.reduce(function (n, r) {
                        var i = t[r];
                        if (i) {
                          var o = e.getCell(i.cell);
                          o && n.push(o);
                        }
                        return n;
                      }, []),
                      i = [],
                      o = e.getCell(t.getSourceCellId());
                    o &&
                      (i = bo(
                        i,
                        o.getAncestors().map(function (e) {
                          return e.id;
                        })
                      ));
                    var a = e.getCell(t.getTargetCellId());
                    a &&
                      (i = bo(
                        i,
                        a.getAncestors().map(function (e) {
                          return e.id;
                        })
                      ));
                    var s = this.mapGridSize;
                    return (
                      e.getNodes().reduce(function (e, t) {
                        var o = r.some(function (e) {
                            return e.id === t.id;
                          }),
                          a = !!t.shape && n.excludeShapes.includes(t.shape),
                          l = n.excludeNodes.some(function (e) {
                            return 'string' == typeof e ? t.id === e : e === t;
                          }),
                          u = i.includes(t.id);
                        if (!(a || o || l || u))
                          for (
                            var c = t.getBBox().moveAndExpand(n.paddingBox),
                              f = c.getOrigin().snapToGrid(s),
                              h = c.getCorner().snapToGrid(s),
                              d = f.x;
                            d <= h.x;
                            d += s
                          )
                            for (var g = f.y; g <= h.y; g += s) {
                              var p = new Ku(d, g).toString();
                              null == e[p] && (e[p] = []), e[p].push(c);
                            }
                        return e;
                      }, this.map),
                      this
                    );
                  },
                },
                {
                  key: 'isAccessible',
                  value: function (e) {
                    var t = e.clone().snapToGrid(this.mapGridSize).toString(),
                      n = this.map[t];
                    return (
                      !n ||
                      n.every(function (t) {
                        return !t.containsPoint(e);
                      })
                    );
                  },
                },
              ]),
              e
            );
          })();
        function Hg(e, t) {
          var n = e.sourceBBox.clone();
          return t && t.paddingBox ? n.moveAndExpand(t.paddingBox) : n;
        }
        function Gg(e, t) {
          var n = e.targetBBox.clone();
          return t && t.paddingBox ? n.moveAndExpand(t.paddingBox) : n;
        }
        function Wg(e, t) {
          return e.sourceAnchor ? e.sourceAnchor : Hg(e, t).getCenter();
        }
        function qg(e, t, n, r, i) {
          var o = 360 / n,
            a = e.theta(
              (function (e, t, n, r) {
                var i = r.step,
                  o = t.x - e.x,
                  a = t.y - e.y,
                  s = o / n.x,
                  l = a / n.y,
                  u = s * i,
                  c = l * i;
                return new Ku(e.x + u, e.y + c);
              })(e, t, r, i)
            ),
            s = Xu.normalize(a + o / 2);
          return o * Math.floor(s / o);
        }
        function Xg(e, t) {
          var n = Math.abs(e - t);
          return n > 180 ? 360 - n : n;
        }
        function Yg(e, t) {
          if (!e) return t;
          var n = Math.abs(e),
            r = Math.round(n / t);
          return r ? t + (n - r * t) / r : n;
        }
        function Jg(e, t) {
          return e.round(t);
        }
        function $g(e, t, n) {
          return Jg(
            (function (e, t) {
              var n = t.source,
                r = Yu.snapToGrid(e.x - n.x, t.x) + n.x,
                i = Yu.snapToGrid(e.y - n.y, t.y) + n.y;
              return new Ku(r, i);
            })(e.clone(), t),
            n
          );
        }
        function Qg(e) {
          return e.toString();
        }
        function Kg(e) {
          return new Ku(
            0 === e.x ? 0 : Math.abs(e.x) / e.x,
            0 === e.y ? 0 : Math.abs(e.y) / e.y
          );
        }
        function Zg(e, t) {
          for (var n = 1 / 0, r = 0, i = t.length; r < i; r += 1) {
            var o = e.manhattanDistance(t[r]);
            o < n && (n = o);
          }
          return n;
        }
        function ep(e, t, n, r, i) {
          var o = i.precision,
            a = i.directionMap,
            s = e.diff(t.getCenter()),
            l = Object.keys(a).reduce(function (i, l) {
              if (n.includes(l)) {
                for (
                  var u,
                    c = a[l],
                    f = new Ku(
                      e.x + c.x * (Math.abs(s.x) + t.width),
                      e.y + c.y * (Math.abs(s.y) + t.height)
                    ),
                    h = new ec(e, f).intersect(t) || [],
                    d = null,
                    g = 0;
                  g < h.length;
                  g += 1
                ) {
                  var p = h[g],
                    v = e.squaredDistance(p);
                  (null == u || v > u) && ((u = v), (d = p));
                }
                if (d) {
                  var y = $g(d, r, o);
                  t.containsPoint(y) &&
                    (y = $g(y.translate(c.x * r.x, c.y * r.y), r, o)),
                    i.push(y);
                }
              }
              return i;
            }, []);
          return t.containsPoint(e) || l.push($g(e, r, o)), l;
        }
        function tp(e, t, n, r, i) {
          for (var o, a = [], s = Kg(i.diff(n)), l = Qg(n), u = e[l]; u; ) {
            var c = Kg((o = t[l]).diff(u));
            c.equals(s) || (a.unshift(o), (s = c)), (u = e[(l = Qg(u))]);
          }
          var f = t[l];
          return Kg(f.diff(r)).equals(s) || a.unshift(f), a;
        }
        function np(e, t, n, r, i) {
          var o,
            a,
            s = i.precision;
          (o = Zu.isRectangle(t) ? Jg(Wg(e, i).clone(), s) : Jg(t.clone(), s)),
            (a = Zu.isRectangle(n)
              ? Jg(
                  (function (e, t) {
                    return e.targetAnchor
                      ? e.targetAnchor
                      : Gg(e, t).getCenter();
                  })(e, i).clone(),
                  s
                )
              : Jg(n.clone(), s));
          var l,
            u,
            c,
            f,
            h,
            d =
              ((l = i.step),
              (c = a),
              {
                source: (u = o).clone(),
                x: Yg(c.x - u.x, l),
                y: Yg(c.y - u.y, l),
              }),
            g = o,
            p = a;
          if (
            ((f = Zu.isRectangle(t) ? ep(g, t, i.startDirections, d, i) : [g]),
            (h = Zu.isRectangle(n) ? ep(a, n, i.endDirections, d, i) : [p]),
            (f = f.filter(function (e) {
              return r.isAccessible(e);
            })),
            (h = h.filter(function (e) {
              return r.isAccessible(e);
            })),
            f.length > 0 && h.length > 0)
          ) {
            for (
              var v = new Fg(), y = {}, m = {}, b = {}, k = 0, w = f.length;
              k < w;
              k += 1
            ) {
              var x = f[k],
                C = Qg(x);
              v.add(C, Zg(x, h)), (y[C] = x), (b[C] = 0);
            }
            for (
              var S,
                E,
                O = i.previousDirectionAngle,
                P = void 0 === O,
                A = (function (e, t) {
                  var n = t.step;
                  return (
                    t.directions.forEach(function (t) {
                      (t.gridOffsetX = (t.offsetX / n) * e.x),
                        (t.gridOffsetY = (t.offsetY / n) * e.y);
                    }),
                    t.directions
                  );
                })(d, i),
                M = A.length,
                T = h.reduce(function (e, t) {
                  var n = Qg(t);
                  return e.push(n), e;
                }, []),
                N = Ku.equalPoints(f, h),
                j = i.maxLoopCount;
              !v.isEmpty() && j > 0;

            ) {
              var L = v.pop(),
                R = y[L],
                _ = m[L],
                I = b[L],
                D = R.equals(g),
                z = null == _,
                B = void 0;
              if (
                ((B = z
                  ? P
                    ? D
                      ? null
                      : qg(g, R, M, d, i)
                    : O
                  : qg(_, R, M, d, i)),
                !(z && N) && T.indexOf(L) >= 0)
              )
                return (i.previousDirectionAngle = B), tp(m, y, R, g, p);
              for (var V = 0; V < M; V += 1) {
                var F = (S = A[V]).angle;
                if (((E = Xg(B, F)), (P && D) || !(E > i.maxDirectionChange))) {
                  var U = $g(
                      R.clone().translate(
                        S.gridOffsetX || 0,
                        S.gridOffsetY || 0
                      ),
                      d,
                      s
                    ),
                    H = Qg(U);
                  if (!v.isClose(H) && r.isAccessible(U)) {
                    if (T.indexOf(H) >= 0)
                      if (!U.equals(p))
                        if (Xg(F, qg(U, p, M, d, i)) > i.maxDirectionChange)
                          continue;
                    var G = I + S.cost + (D ? 0 : i.penalties[E]);
                    (!v.isOpen(H) || G < b[H]) &&
                      ((y[H] = U),
                      (m[H] = R),
                      (b[H] = G),
                      v.add(H, G + Zg(U, h)));
                  }
                }
              }
              j -= 1;
            }
          }
          return i.fallbackRoute ? de(i.fallbackRoute, this, g, p, i) : null;
        }
        var rp = function (e, t, n) {
            for (
              var r,
                i,
                o = (function (e) {
                  var t = Object.keys(e).reduce(function (t, n) {
                    return (
                      (t[n] =
                        'fallbackRouter' === n ||
                        'draggingRouter' === n ||
                        'fallbackRoute' === n
                          ? e[n]
                          : Vg(e[n], e)),
                      t
                    );
                  }, {});
                  if (t.padding) {
                    var n = Os(t.padding);
                    t.paddingBox = {
                      x: -n.left,
                      y: -n.top,
                      width: n.left + n.right,
                      height: n.top + n.bottom,
                    };
                  }
                  return (
                    t.directions.forEach(function (e) {
                      var t = new Ku(0, 0),
                        n = new Ku(e.offsetX, e.offsetY);
                      e.angle = Xu.normalize(t.theta(n));
                    }),
                    t
                  );
                })(t),
                a = Hg(n, o),
                s = Gg(n, o),
                l = Wg(n, o),
                u = new Ug(o).build(n.graph.model, n.cell),
                c = e.map(function (e) {
                  return Ku.create(e);
                }),
                f = [],
                h = l,
                d = 0,
                g = c.length;
              d <= g;
              d += 1
            ) {
              var p = null;
              if (((r = i || a), null == (i = c[d]))) {
                i = s;
                var v = n.cell;
                if (
                  (null == v.getSourceCellId() ||
                    null == v.getTargetCellId()) &&
                  'function' == typeof o.draggingRouter
                ) {
                  var y = r === a ? l : r,
                    m = i.getOrigin();
                  p = de(o.draggingRouter, n, y, m, o);
                }
              }
              if ((null == p && (p = np(n, r, i, u, o)), null === p))
                return (
                  console.warn(
                    'Unable to execute manhattan algorithm, use orth instead'
                  ),
                  de(o.fallbackRouter, this, e, o, n)
                );
              var b = p[0];
              b && b.equals(h) && p.shift(),
                (h = p[p.length - 1] || h),
                f.push.apply(f, L()(p));
            }
            return o.snapToGrid
              ? (function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 10;
                  if (e.length <= 1) return e;
                  for (var n = 0, r = e.length; n < r - 1; n += 1) {
                    var i = e[n],
                      o = e[n + 1];
                    if (i.x === o.x) {
                      var a = t * Math.round(i.x / t);
                      i.x !== a && ((i.x = a), (o.x = a));
                    } else if (i.y === o.y) {
                      var s = t * Math.round(i.y / t);
                      i.y !== s && ((i.y = s), (o.y = s));
                    }
                  }
                  return e;
                })(f, n.graph.grid.getGridSize())
              : f;
          },
          ip = function (e, t, n) {
            return de(rp, this, e, Object.assign(Object.assign({}, Bg), t), n);
          },
          op = {
            maxDirectionChange: 45,
            directions: function () {
              var e = Vg(this.step, this),
                t = Vg(this.cost, this),
                n = Math.ceil(Math.sqrt((e * e) << 1));
              return [
                { cost: t, offsetX: e, offsetY: 0 },
                { cost: n, offsetX: e, offsetY: e },
                { cost: t, offsetX: 0, offsetY: e },
                { cost: n, offsetX: -e, offsetY: e },
                { cost: t, offsetX: -e, offsetY: 0 },
                { cost: n, offsetX: -e, offsetY: -e },
                { cost: t, offsetX: 0, offsetY: -e },
                { cost: n, offsetX: e, offsetY: -e },
              ];
            },
            fallbackRoute: function (e, t, n) {
              var r = e.theta(t),
                i = [],
                o = { x: t.x, y: e.y },
                a = { x: e.x, y: t.y };
              if (r % 180 > 90) {
                var s = o;
                (o = a), (a = s);
              }
              var l = r % 90 < 45 ? o : a,
                u = new ec(e, l),
                c = 90 * Math.ceil(r / 90),
                f = Ku.fromPolar(u.squaredLength(), Xu.toRad(c + 135), l),
                h = new ec(t, f),
                d = u.intersectsWithLine(h),
                g = d || t,
                p = d ? g : e,
                v = 360 / n.directions.length,
                y = p.theta(t),
                m = Xu.normalize(y + v / 2),
                b = v * Math.floor(m / v);
              return (
                (n.previousDirectionAngle = b),
                g && i.push(g.round()),
                i.push(t),
                i
              );
            },
          },
          ap = function (e, t, n) {
            return de(ip, this, e, Object.assign(Object.assign({}, op), t), n);
          },
          sp = function (e, t, n) {
            var r,
              i,
              o,
              a = t.offset || 32,
              s = null == t.min ? 16 : t.min,
              l = 0,
              u = t.direction,
              c = n.sourceBBox,
              f = n.targetBBox,
              h = c.getCenter(),
              d = f.getCenter();
            if (('number' == typeof a && (l = a), null == u)) {
              var g = f.left - c.right,
                p = f.top - c.bottom;
              g >= 0 && p >= 0
                ? (u = g >= p ? 'L' : 'T')
                : g <= 0 && p >= 0
                ? (u = (g = c.left - f.right) >= 0 && g >= p ? 'R' : 'T')
                : g >= 0 && p <= 0
                ? (u = (p = c.top - f.bottom) >= 0 ? (g >= p ? 'L' : 'B') : 'L')
                : ((g = c.left - f.right),
                  (p = c.top - f.bottom),
                  (u =
                    g >= 0 && p >= 0
                      ? g >= p
                        ? 'R'
                        : 'B'
                      : g <= 0 && p >= 0
                      ? 'B'
                      : (g >= 0 && p <= 0) || Math.abs(g) > Math.abs(p)
                      ? 'R'
                      : 'B'));
            }
            'H' === u
              ? (u = d.x - h.x >= 0 ? 'L' : 'R')
              : 'V' === u && (u = d.y - h.y >= 0 ? 'T' : 'B'),
              'center' === a &&
                ('L' === u
                  ? (l = (f.left - c.right) / 2)
                  : 'R' === u
                  ? (l = (c.left - f.right) / 2)
                  : 'T' === u
                  ? (l = (f.top - c.bottom) / 2)
                  : 'B' === u && (l = (c.top - f.bottom) / 2));
            var v = 'L' === u || 'R' === u;
            if (v) {
              if (d.y === h.y) return L()(e);
              (o = 'L' === u ? 1 : -1), (r = 'x'), (i = 'width');
            } else {
              if (d.x === h.x) return L()(e);
              (o = 'T' === u ? 1 : -1), (r = 'y'), (i = 'height');
            }
            var y = h.clone(),
              m = d.clone();
            if (
              ((y[r] += o * (c[i] / 2 + l)), (m[r] -= o * (f[i] / 2 + l)), v)
            ) {
              var b = y.x,
                k = m.x,
                w = c.width / 2 + s,
                x = f.width / 2 + s;
              d.x > h.x
                ? k <= b &&
                  ((y.x = Math.max(k, h.x + w)), (m.x = Math.min(b, d.x - x)))
                : k >= b &&
                  ((y.x = Math.min(k, h.x - w)), (m.x = Math.max(b, d.x + x)));
            } else {
              var C = y.y,
                S = m.y,
                E = c.height / 2 + s,
                O = f.height / 2 + s;
              d.y > h.y
                ? S <= C &&
                  ((y.y = Math.max(S, h.y + E)), (m.y = Math.min(C, d.y - O)))
                : S >= C &&
                  ((y.y = Math.min(S, h.y - E)), (m.y = Math.max(C, d.y + O)));
            }
            return [y.toJSON()].concat(L()(e), [m.toJSON()]);
          };
        function lp(e, t) {
          if (null != t && !1 !== t) {
            var n = 'boolean' == typeof t ? 0 : t;
            if (n > 0) {
              var r = Ku.create(e[1]).move(e[2], n),
                i = Ku.create(e[1]).move(e[0], n);
              return [r.toJSON()].concat(L()(e), [i.toJSON()]);
            }
            var o = e[1];
            return [Object.assign({}, o)].concat(L()(e), [
              Object.assign({}, o),
            ]);
          }
          return e;
        }
        var up,
          cp = function (e, t, n) {
            var r = t.width || 50,
              i = (t.height || 80) / 2,
              o = t.angle || 'auto',
              a = n.sourceAnchor,
              s = n.targetAnchor,
              l = n.sourceBBox,
              u = n.targetBBox;
            if (a.equals(s)) {
              var c = function (e) {
                  var t = Xu.toRad(e),
                    n = Math.sin(t),
                    o = Math.cos(t),
                    s = new Ku(a.x + o * r, a.y + n * r),
                    l = new Ku(s.x - o * i, s.y - n * i),
                    u = l.clone().rotate(-90, s),
                    c = l.clone().rotate(90, s);
                  return [u.toJSON(), s.toJSON(), c.toJSON()];
                },
                f = function (e) {
                  var t = a.clone().move(e, -1),
                    n = new ec(t, e);
                  return !l.containsPoint(e) && !l.intersectsWithLine(n);
                },
                h = [0, 90, 180, 270, 45, 135, 225, 315];
              if ('number' == typeof o) return lp(c(o), t.merge);
              var d = l.getCenter();
              if (d.equals(a)) return lp(c(0), t.merge);
              var g = d.angleBetween(a, d.clone().translate(1, 0)),
                p = c(g);
              if (f(p[1])) return lp(p, t.merge);
              for (var v = 1, y = h.length; v < y; v += 1)
                if (f((p = c(g + h[v]))[1])) return lp(p, t.merge);
              return lp(p, t.merge);
            }
            var m = new ec(a, s),
              b = m.parallel(-r),
              k = b.getCenter(),
              w = b.start.clone().move(b.end, i),
              x = b.end.clone().move(b.start, i),
              C = m.parallel(-1),
              S = new ec(C.start, k),
              E = new ec(C.end, k);
            if (
              ((l.containsPoint(k) ||
                u.containsPoint(k) ||
                l.intersectsWithLine(S) ||
                l.intersectsWithLine(E) ||
                u.intersectsWithLine(S) ||
                u.intersectsWithLine(E)) &&
                ((k = (b = m.parallel(r)).getCenter()),
                (w = b.start.clone().move(b.end, i)),
                (x = b.end.clone().move(b.start, i))),
              t.merge)
            ) {
              var O = new ec(a, s),
                P = new ec(k, O.center).setLength(Number.MAX_SAFE_INTEGER),
                A = l.intersectsWithLine(P),
                M = u.intersectsWithLine(P),
                T = A ? (Array.isArray(A) ? A : [A]) : [];
              M && (Array.isArray(M) ? T.push.apply(T, L()(M)) : T.push(M));
              var N = O.center.closest(T);
              N
                ? ((n.sourceAnchor = N.clone()), (n.targetAnchor = N.clone()))
                : ((n.sourceAnchor = O.center.clone()),
                  (n.targetAnchor = O.center.clone()));
            }
            return lp([w.toJSON(), k.toJSON(), x.toJSON()], t.merge);
          };
        !(function (e) {
          (e.presets = g),
            (e.registry = Ec.create({ type: 'router' })),
            e.registry.register(e.presets, !0);
        })(up || (up = {}));
        var fp,
          hp,
          dp = function (e, t, n) {
            var r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : {},
              i = [e].concat(L()(n), [t]),
              o = new fc(i),
              a = new Sc(o);
            return r.raw ? a : a.serialize();
          },
          gp = function (e, t, n) {
            var r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : {},
              i = 3 === n.length ? 0 : 1,
              o = Ku.create(n[0 + i]),
              a = Ku.create(n[2 + i]),
              s = Ku.create(n[1 + i]);
            if (!Ku.equals(e, t)) {
              var l = new Ku((e.x + t.x) / 2, (e.y + t.y) / 2),
                u = l.angleBetween(Ku.create(e).rotate(90, l), s);
              u > 1 &&
                (o.rotate(180 - u, l),
                a.rotate(180 - u, l),
                s.rotate(180 - u, l));
            }
            var c = '\n     M '
              .concat(e.x, ' ')
              .concat(e.y, '\n     Q ')
              .concat(o.x, ' ')
              .concat(o.y, ' ')
              .concat(s.x, ' ')
              .concat(s.y, '\n     Q ')
              .concat(a.x, ' ')
              .concat(a.y, ' ')
              .concat(t.x, ' ')
              .concat(t.y, '\n  ');
            return r.raw ? Sc.parse(c) : c;
          },
          pp = function (e, t, n) {
            var r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : {},
              i = new Sc();
            i.appendSegment(Sc.createSegment('M', e));
            for (
              var o,
                a,
                s = 1 / 3,
                l = 2 / 3,
                u = r.radius || 10,
                c = 0,
                f = n.length;
              c < f;
              c += 1
            ) {
              var h = Ku.create(n[c]),
                d = n[c - 1] || e,
                g = n[c + 1] || t;
              (o = a || h.distance(d) / 2), (a = h.distance(g) / 2);
              var p = -Math.min(u, o),
                v = -Math.min(u, a),
                y = h.clone().move(d, p).round(),
                m = h.clone().move(g, v).round(),
                b = new Ku(s * y.x + l * h.x, l * h.y + s * y.y),
                k = new Ku(s * m.x + l * h.x, l * h.y + s * m.y);
              i.appendSegment(Sc.createSegment('L', y)),
                i.appendSegment(Sc.createSegment('C', b, k, m));
            }
            return (
              i.appendSegment(Sc.createSegment('L', t)),
              r.raw ? i : i.serialize()
            );
          },
          vp = function (e, t, n) {
            var r,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : {},
              o = i.direction;
            if (n && 0 !== n.length) {
              var a = [e].concat(L()(n), [t]),
                s = hc.throughPoints(a);
              r = new Sc(s);
            } else if (
              ((r = new Sc()).appendSegment(Sc.createSegment('M', e)),
              o || (o = Math.abs(e.x - t.x) >= Math.abs(e.y - t.y) ? 'H' : 'V'),
              'H' === o)
            ) {
              var l = (e.x + t.x) / 2;
              r.appendSegment(Sc.createSegment('C', l, e.y, l, t.y, t.x, t.y));
            } else {
              var u = (e.y + t.y) / 2;
              r.appendSegment(Sc.createSegment('C', e.x, u, t.x, u, t.x, t.y));
            }
            return i.raw ? r : r.serialize();
          },
          yp = 1 / 3,
          mp = 2 / 3;
        function bp(e) {
          var t = e.graph._jumpOverUpdateList;
          if (
            (null == t &&
              ((t = e.graph._jumpOverUpdateList = []),
              e.graph.on('cell:mouseup', function () {
                var t = e.graph._jumpOverUpdateList;
                setTimeout(function () {
                  for (var e = 0; e < t.length; e += 1) t[e].update();
                });
              }),
              e.graph.on('model:reseted', function () {
                t = e.graph._jumpOverUpdateList = [];
              })),
            t.indexOf(e) < 0)
          ) {
            t.push(e);
            var n = function () {
              return t.splice(t.indexOf(e), 1);
            };
            e.cell.once('change:connector', n), e.cell.once('removed', n);
          }
        }
        function kp(e, t) {
          var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : [],
            r = [e].concat(L()(n), [t]),
            i = [];
          return (
            r.forEach(function (e, t) {
              var n = r[t + 1];
              null != n && i.push(new ec(e, n));
            }),
            i
          );
        }
        function wp(e, t) {
          var n = [];
          return (
            t.forEach(function (t) {
              var r = e.intersectsWithLine(t);
              r && n.push(r);
            }),
            n
          );
        }
        function xp(e, t) {
          return new ec(e, t).squaredLength();
        }
        function Cp(e, t, n) {
          return t.reduce(function (r, i, o) {
            if (hp.includes(i)) return r;
            var a = r.pop() || e,
              s = Ku.create(i).move(a.start, -n),
              l = Ku.create(i).move(a.start, +n),
              u = t[o + 1];
            if (null != u) {
              var c = l.distance(u);
              c <= n && ((l = u.move(a.start, c)), hp.push(u));
            } else {
              if (s.distance(a.end) < 2 * n + 1) return r.push(a), r;
            }
            if (l.distance(a.start) < 2 * n + 1) return r.push(a), r;
            var f = new ec(s, l);
            return (
              fp.push(f), r.push(new ec(a.start, s), f, new ec(l, a.end)), r
            );
          }, []);
        }
        function Sp(e, t, n, r) {
          var i,
            o = new Sc();
          return (
            (i = Sc.createSegment('M', e[0].start)),
            o.appendSegment(i),
            e.forEach(function (a, s) {
              if (fp.includes(a)) {
                var l, u, c, f;
                if ('arc' === n) {
                  (l = -90),
                    ((u = a.start.diff(a.end)).x < 0 ||
                      (0 === u.x && u.y < 0)) &&
                      (l += 180);
                  var h,
                    d = a.getCenter(),
                    g = new ec(d, a.end).rotate(l, d);
                  (c = (h = new ec(a.start, d))
                    .pointAt(2 / 3)
                    .rotate(l, a.start)),
                    (f = g.pointAt(1 / 3).rotate(-l, g.end)),
                    (i = Sc.createSegment('C', c, f, g.end)),
                    o.appendSegment(i),
                    (h = new ec(d, a.end)),
                    (c = g.pointAt(1 / 3).rotate(l, g.end)),
                    (f = h.pointAt(1 / 3).rotate(-l, a.end)),
                    (i = Sc.createSegment('C', c, f, a.end)),
                    o.appendSegment(i);
                } else if ('gap' === n)
                  (i = Sc.createSegment('M', a.end)), o.appendSegment(i);
                else if ('cubic' === n) {
                  l = a.start.theta(a.end);
                  var p = 0.6 * t,
                    v = 1.35 * t;
                  ((u = a.start.diff(a.end)).x < 0 || (0 === u.x && u.y < 0)) &&
                    (v *= -1),
                    (c = new Ku(a.start.x + p, a.start.y + v).rotate(
                      l,
                      a.start
                    )),
                    (f = new Ku(a.end.x - p, a.end.y + v).rotate(l, a.end)),
                    (i = Sc.createSegment('C', c, f, a.end)),
                    o.appendSegment(i);
                }
              } else {
                var y = e[s + 1];
                0 === r || !y || fp.includes(y)
                  ? ((i = Sc.createSegment('L', a.end)), o.appendSegment(i))
                  : (function (e, t, n, r, i) {
                      var o,
                        a = n.distance(r) / 2,
                        s = n.distance(i) / 2,
                        l = -Math.min(e, a),
                        u = -Math.min(e, s),
                        c = n.clone().move(r, l).round(),
                        f = n.clone().move(i, u).round(),
                        h = new Ku(yp * c.x + mp * n.x, mp * n.y + yp * c.y),
                        d = new Ku(yp * f.x + mp * n.x, mp * n.y + yp * f.y);
                      (o = Sc.createSegment('L', c)),
                        t.appendSegment(o),
                        (o = Sc.createSegment('C', h, d, f)),
                        t.appendSegment(o);
                    })(r, o, a.end, a.start, y.end);
              }
            }),
            o
          );
        }
        var Ep,
          Op = function (e, t, n) {
            var r = this,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : {};
            (fp = []), (hp = []), bp(this);
            var o = i.size || 5,
              a = i.type || 'arc',
              s = i.radius || 0,
              l = i.ignoreConnectors || ['smooth'],
              u = this.graph,
              c = u.model,
              f = c.getEdges();
            if (1 === f.length) return Sp(kp(e, t, n), o, a, s);
            var h = this.cell,
              d = f.indexOf(h),
              g = u.options.connecting.connector || {},
              p = f.filter(function (e, t) {
                var n = e.getConnector() || g;
                return (
                  !l.includes(n.name) && (!(t > d) || 'jumpover' !== n.name)
                );
              }),
              v = p.map(function (e) {
                return u.findViewByCell(e);
              }),
              y = kp(e, t, n),
              m = v.map(function (e) {
                return null == e
                  ? []
                  : e === r
                  ? y
                  : kp(e.sourcePoint, e.targetPoint, e.routePoints);
              }),
              b = [];
            y.forEach(function (e) {
              var t = p
                .reduce(function (t, n, r) {
                  if (n !== h) {
                    var i = wp(e, m[r]);
                    t.push.apply(t, L()(i));
                  }
                  return t;
                }, [])
                .sort(function (t, n) {
                  return xp(e.start, t) - xp(e.start, n);
                });
              t.length > 0 ? b.push.apply(b, L()(Cp(e, t, o))) : b.push(e);
            });
            var k = Sp(b, o, a, s);
            return (fp = []), (hp = []), i.raw ? k : k.serialize();
          };
        !(function (e) {
          (e.presets = p),
            (e.registry = Ec.create({ type: 'connector' })),
            e.registry.register(e.presets, !0);
        })(Ep || (Ep = {}));
        var Pp = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          Ap = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              var e,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
              return (
                y()(this, n),
                ((e = t.call(this)).pending = !1),
                (e.changing = !1),
                (e.data = {}),
                e.mutate(qi(r)),
                (e.changed = {}),
                e
              );
            }
            return (
              b()(n, [
                {
                  key: 'mutate',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      r = !0 === n.unset,
                      i = !0 === n.silent,
                      o = [],
                      a = this.changing;
                    (this.changing = !0),
                      a ||
                        ((this.previous = qi(this.data)), (this.changed = {}));
                    var s = this.data,
                      l = this.previous,
                      u = this.changed;
                    if (
                      (Object.keys(e).forEach(function (t) {
                        var n = t,
                          i = e[n];
                        pi(s[n], i) || o.push(n),
                          pi(l[n], i) ? delete u[n] : (u[n] = i),
                          r ? delete s[n] : (s[n] = i);
                      }),
                      !i &&
                        o.length > 0 &&
                        ((this.pending = !0),
                        (this.pendingOptions = n),
                        o.forEach(function (e) {
                          t.emit('change:*', {
                            key: e,
                            options: n,
                            store: t,
                            current: s[e],
                            previous: l[e],
                          });
                        })),
                      a)
                    )
                      return this;
                    if (!i)
                      for (; this.pending; )
                        (this.pending = !1),
                          this.emit('changed', {
                            current: s,
                            previous: l,
                            store: this,
                            options: this.pendingOptions,
                          });
                    return (
                      (this.pending = !1),
                      (this.changing = !1),
                      (this.pendingOptions = null),
                      this
                    );
                  },
                },
                {
                  key: 'get',
                  value: function (e, t) {
                    if (null == e) return this.data;
                    var n = this.data[e];
                    return null == n ? t : n;
                  },
                },
                {
                  key: 'getPrevious',
                  value: function (e) {
                    if (this.previous) {
                      var t = this.previous[e];
                      return null == t ? void 0 : t;
                    }
                  },
                },
                {
                  key: 'set',
                  value: function (e, t, n) {
                    return (
                      null != e &&
                        ('object' === _()(e)
                          ? this.mutate(e, t)
                          : this.mutate(w()({}, e, t), n)),
                      this
                    );
                  },
                },
                {
                  key: 'remove',
                  value: function (e, t) {
                    var n,
                      r = void 0,
                      i = {};
                    if ('string' == typeof e) (i[e] = r), (n = t);
                    else if (Array.isArray(e))
                      e.forEach(function (e) {
                        return (i[e] = r);
                      }),
                        (n = t);
                    else {
                      for (var o in this.data) i[o] = r;
                      n = e;
                    }
                    return (
                      this.mutate(
                        i,
                        Object.assign(Object.assign({}, n), { unset: !0 })
                      ),
                      this
                    );
                  },
                },
                {
                  key: 'getByPath',
                  value: function (e) {
                    return io(this.data, e, '/');
                  },
                },
                {
                  key: 'setByPath',
                  value: function (e, t) {
                    var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      r = '/',
                      i = Array.isArray(e) ? L()(e) : e.split(r),
                      o = Array.isArray(e) ? e.join(r) : e,
                      a = i[0],
                      s = i.length;
                    if (
                      ((n.propertyPath = o),
                      (n.propertyValue = t),
                      (n.propertyPathArray = i),
                      1 === s)
                    )
                      this.set(a, t, n);
                    else {
                      for (var l = {}, u = l, c = a, f = 1; f < s; f += 1) {
                        var h = i[f],
                          d = Number.isFinite(Number(h));
                        (u = u[c] = d ? [] : {}), (c = h);
                      }
                      oo(l, i, t, r);
                      var g = qi(this.data);
                      n.rewrite && ao(g, e, r);
                      var p = wr(g, l);
                      this.set(a, p[a], n);
                    }
                    return this;
                  },
                },
                {
                  key: 'removeByPath',
                  value: function (e, t) {
                    var n = Array.isArray(e) ? e : e.split('/'),
                      r = n[0];
                    if (1 === n.length) this.remove(r, t);
                    else {
                      var i = n.slice(1),
                        o = qi(this.get(r));
                      o && ao(o, i), this.set(r, o, t);
                    }
                    return this;
                  },
                },
                {
                  key: 'hasChanged',
                  value: function (e) {
                    return null == e
                      ? Object.keys(this.changed).length > 0
                      : e in this.changed;
                  },
                },
                {
                  key: 'getChanges',
                  value: function (e) {
                    if (null == e)
                      return this.hasChanged() ? qi(this.changed) : null;
                    var t,
                      n = this.changing ? this.previous : this.data,
                      r = {};
                    for (var i in e) {
                      var o = e[i];
                      pi(n[i], o) || ((r[i] = o), (t = !0));
                    }
                    return t ? qi(r) : null;
                  },
                },
                {
                  key: 'toJSON',
                  value: function () {
                    return qi(this.data);
                  },
                },
                {
                  key: 'clone',
                  value: function () {
                    return new (0, this.constructor)(this.data);
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    this.off(),
                      (this.data = {}),
                      (this.previous = {}),
                      (this.changed = {}),
                      (this.pending = !1),
                      (this.changing = !1),
                      (this.pendingOptions = null),
                      this.trigger('disposed', { store: this });
                  },
                },
              ]),
              n
            );
          })(so);
        Pp([so.dispose()], Ap.prototype, 'dispose', null);
        var Mp = (function () {
          function e(t) {
            y()(this, e), (this.cell = t), (this.ids = {}), (this.cache = {});
          }
          return (
            b()(e, [
              {
                key: 'get',
                value: function () {
                  return Object.keys(this.ids);
                },
              },
              {
                key: 'start',
                value: function (t, n) {
                  var r = this,
                    i =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {},
                    o =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : '/',
                    a = this.cell.getPropByPath(t),
                    s = $i(i, e.defaultOptions),
                    l = this.getTiming(s.timing),
                    u = this.getInterp(s.interp, a, n),
                    c = 0,
                    f = Array.isArray(t) ? t.join(o) : t,
                    h = Array.isArray(t) ? t : t.split(o),
                    d = function e() {
                      var t = new Date().getTime();
                      0 === c && (c = t);
                      var n = (t - c) / s.duration;
                      n < 1 ? (r.ids[f] = requestAnimationFrame(e)) : (n = 1);
                      var o = u(l(n));
                      r.cell.setPropByPath(h, o),
                        i.progress &&
                          i.progress(
                            Object.assign(
                              { progress: n, currentValue: o },
                              r.getArgs(f)
                            )
                          ),
                        1 === n &&
                          (r.cell.notify('transition:complete', r.getArgs(f)),
                          i.complete && i.complete(r.getArgs(f)),
                          r.cell.notify('transition:finish', r.getArgs(f)),
                          i.finish && i.finish(r.getArgs(f)),
                          r.clean(f));
                    };
                  return (
                    setTimeout(function () {
                      r.stop(t, void 0, o),
                        (r.cache[f] = {
                          startValue: a,
                          targetValue: n,
                          options: s,
                        }),
                        (r.ids[f] = requestAnimationFrame(d)),
                        r.cell.notify('transition:start', r.getArgs(f)),
                        i.start && i.start(r.getArgs(f));
                    }, i.delay),
                    this.stop.bind(this, t, o, i)
                  );
                },
              },
              {
                key: 'stop',
                value: function (e) {
                  var t = this,
                    n =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    r =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : '/',
                    i = Array.isArray(e) ? e : e.split(r);
                  return (
                    Object.keys(this.ids)
                      .filter(function (e) {
                        return pi(i, e.split(r).slice(0, i.length));
                      })
                      .forEach(function (e) {
                        cancelAnimationFrame(t.ids[e]);
                        var r = t.cache[e],
                          i = t.getArgs(e),
                          o = Object.assign(Object.assign({}, r.options), n),
                          a = o.jumpedToEnd;
                        a &&
                          null != r.targetValue &&
                          (t.cell.setPropByPath(e, r.targetValue),
                          t.cell.notify('transition:end', Object.assign({}, i)),
                          t.cell.notify(
                            'transition:complete',
                            Object.assign({}, i)
                          ),
                          o.complete && o.complete(Object.assign({}, i)));
                        var s = Object.assign({ jumpedToEnd: a }, i);
                        t.cell.notify('transition:stop', Object.assign({}, s)),
                          o.stop && o.stop(Object.assign({}, s)),
                          t.cell.notify(
                            'transition:finish',
                            Object.assign({}, i)
                          ),
                          o.finish && o.finish(Object.assign({}, i)),
                          t.clean(e);
                      }),
                    this
                  );
                },
              },
              {
                key: 'clean',
                value: function (e) {
                  delete this.ids[e], delete this.cache[e];
                },
              },
              {
                key: 'getTiming',
                value: function (e) {
                  return 'string' == typeof e ? Hu[e] : e;
                },
              },
              {
                key: 'getInterp',
                value: function (e, t, n) {
                  return e
                    ? e(t, n)
                    : 'number' == typeof n
                    ? Gu.number(t, n)
                    : 'string' == typeof n
                    ? '#' === n[0]
                      ? Gu.color(t, n)
                      : Gu.unit(t, n)
                    : Gu.object(t, n);
                },
              },
              {
                key: 'getArgs',
                value: function (e) {
                  var t = this.cache[e];
                  return {
                    path: e,
                    startValue: t.startValue,
                    targetValue: t.targetValue,
                    cell: this.cell,
                  };
                },
              },
            ]),
            e
          );
        })();
        !(function (e) {
          e.defaultOptions = { delay: 10, duration: 100, timing: 'linear' };
        })(Mp || (Mp = {}));
        var Tp,
          Np = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          jp = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Lp = (function (e, t) {
            M()(r, e);
            var n = N()(r);
            function r() {
              var e,
                t =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
              y()(this, r);
              var i = (e = n.call(this)).constructor,
                o = i.getDefaults(!0),
                a = wr({}, e.preprocess(o), e.preprocess(t));
              return (
                (e.id = a.id || ys()),
                (e.store = new Ap(a)),
                (e.animation = new Mp($u()(e))),
                e.setup(),
                e.init(),
                e.postprocess(t),
                e
              );
            }
            return (
              b()(
                r,
                [
                  {
                    key: t,
                    get: function () {
                      return r.toStringTag;
                    },
                  },
                  { key: 'init', value: function () {} },
                  {
                    key: 'model',
                    get: function () {
                      return this._model;
                    },
                  },
                  {
                    key: 'model',
                    set: function (e) {
                      this._model !== e && (this._model = e);
                    },
                  },
                  {
                    key: 'preprocess',
                    value: function (e, t) {
                      var n = e.id,
                        r = this.constructor.applyPropHooks(this, e);
                      return null == n && !0 !== t && (r.id = ys()), r;
                    },
                  },
                  { key: 'postprocess', value: function (e) {} },
                  {
                    key: 'setup',
                    value: function () {
                      var e = this;
                      this.store.on('change:*', function (t) {
                        var n = t.key,
                          r = t.current,
                          i = t.previous,
                          o = t.options;
                        e.notify('change:*', {
                          key: n,
                          options: o,
                          current: r,
                          previous: i,
                          cell: e,
                        }),
                          e.notify('change:'.concat(n), {
                            options: o,
                            current: r,
                            previous: i,
                            cell: e,
                          });
                        var a = n;
                        ('source' !== a && 'target' !== a) ||
                          e.notify('change:terminal', {
                            type: a,
                            current: r,
                            previous: i,
                            options: o,
                            cell: e,
                          });
                      }),
                        this.store.on('changed', function (t) {
                          var n = t.options;
                          return e.notify('changed', { options: n, cell: e });
                        });
                    },
                  },
                  {
                    key: 'notify',
                    value: function (e, t) {
                      this.trigger(e, t);
                      var n = this.model;
                      return (
                        n &&
                          (n.notify('cell:'.concat(e), t),
                          this.isNode()
                            ? n.notify(
                                'node:'.concat(e),
                                Object.assign(Object.assign({}, t), {
                                  node: this,
                                })
                              )
                            : this.isEdge() &&
                              n.notify(
                                'edge:'.concat(e),
                                Object.assign(Object.assign({}, t), {
                                  edge: this,
                                })
                              )),
                        this
                      );
                    },
                  },
                  {
                    key: 'isNode',
                    value: function () {
                      return !1;
                    },
                  },
                  {
                    key: 'isEdge',
                    value: function () {
                      return !1;
                    },
                  },
                  {
                    key: 'isSameStore',
                    value: function (e) {
                      return this.store === e.store;
                    },
                  },
                  {
                    key: 'view',
                    get: function () {
                      return this.store.get('view');
                    },
                  },
                  {
                    key: 'shape',
                    get: function () {
                      return this.store.get('shape', '');
                    },
                  },
                  {
                    key: 'getProp',
                    value: function (e, t) {
                      return null == e
                        ? this.store.get()
                        : this.store.get(e, t);
                    },
                  },
                  {
                    key: 'setProp',
                    value: function (e, t, n) {
                      if ('string' == typeof e) this.store.set(e, t, n);
                      else {
                        var r = this.preprocess(e, !0);
                        this.store.set(wr({}, this.getProp(), r), t),
                          this.postprocess(e);
                      }
                      return this;
                    },
                  },
                  {
                    key: 'removeProp',
                    value: function (e, t) {
                      return (
                        'string' == typeof e || Array.isArray(e)
                          ? this.store.removeByPath(e, t)
                          : this.store.remove(t),
                        this
                      );
                    },
                  },
                  {
                    key: 'hasChanged',
                    value: function (e) {
                      return null == e
                        ? this.store.hasChanged()
                        : this.store.hasChanged(e);
                    },
                  },
                  {
                    key: 'getPropByPath',
                    value: function (e) {
                      return this.store.getByPath(e);
                    },
                  },
                  {
                    key: 'setPropByPath',
                    value: function (e, t) {
                      var n = this,
                        r =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : {};
                      return (
                        this.model &&
                          ('children' === e
                            ? (this._children = t
                                ? t
                                    .map(function (e) {
                                      return n.model.getCell(e);
                                    })
                                    .filter(function (e) {
                                      return null != e;
                                    })
                                : null)
                            : 'parent' === e &&
                              (this._parent = t
                                ? this.model.getCell(t)
                                : null)),
                        this.store.setByPath(e, t, r),
                        this
                      );
                    },
                  },
                  {
                    key: 'removePropByPath',
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {},
                        n = Array.isArray(e) ? e : e.split('/');
                      return (
                        'attrs' === n[0] && (t.dirty = !0),
                        this.store.removeByPath(n, t),
                        this
                      );
                    },
                  },
                  {
                    key: 'prop',
                    value: function (e, t, n) {
                      return null == e
                        ? this.getProp()
                        : 'string' == typeof e || Array.isArray(e)
                        ? 1 === arguments.length
                          ? this.getPropByPath(e)
                          : null == t
                          ? this.removePropByPath(e, n || {})
                          : this.setPropByPath(e, t, n || {})
                        : this.setProp(e, t || {});
                    },
                  },
                  {
                    key: 'previous',
                    value: function (e) {
                      return this.store.getPrevious(e);
                    },
                  },
                  {
                    key: 'zIndex',
                    get: function () {
                      return this.getZIndex();
                    },
                  },
                  {
                    key: 'zIndex',
                    set: function (e) {
                      null == e ? this.removeZIndex() : this.setZIndex(e);
                    },
                  },
                  {
                    key: 'getZIndex',
                    value: function () {
                      return this.store.get('zIndex');
                    },
                  },
                  {
                    key: 'setZIndex',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return this.store.set('zIndex', e, t), this;
                    },
                  },
                  {
                    key: 'removeZIndex',
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                      return this.store.remove('zIndex', e), this;
                    },
                  },
                  {
                    key: 'toFront',
                    value: function () {
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {},
                        t = this.model;
                      if (t) {
                        var n,
                          r = t.getMaxZIndex();
                        e.deep
                          ? (n = this.getDescendants({
                              deep: !0,
                              breadthFirst: !0,
                            })).unshift(this)
                          : (n = [this]),
                          (r = r - n.length + 1);
                        var i = t.total(),
                          o = t.indexOf(this) !== i - n.length;
                        o ||
                          (o = n.some(function (e, t) {
                            return e.getZIndex() !== r + t;
                          })),
                          o &&
                            this.batchUpdate('to-front', function () {
                              (r += n.length),
                                n.forEach(function (t, n) {
                                  t.setZIndex(r + n, e);
                                });
                            });
                      }
                      return this;
                    },
                  },
                  {
                    key: 'toBack',
                    value: function () {
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {},
                        t = this.model;
                      if (t) {
                        var n,
                          r = t.getMinZIndex();
                        e.deep
                          ? (n = this.getDescendants({
                              deep: !0,
                              breadthFirst: !0,
                            })).unshift(this)
                          : (n = [this]);
                        var i = 0 !== t.indexOf(this);
                        i ||
                          (i = n.some(function (e, t) {
                            return e.getZIndex() !== r + t;
                          })),
                          i &&
                            this.batchUpdate('to-back', function () {
                              (r -= n.length),
                                n.forEach(function (t, n) {
                                  t.setZIndex(r + n, e);
                                });
                            });
                      }
                      return this;
                    },
                  },
                  {
                    key: 'markup',
                    get: function () {
                      return this.getMarkup();
                    },
                  },
                  {
                    key: 'markup',
                    set: function (e) {
                      null == e ? this.removeMarkup() : this.setMarkup(e);
                    },
                  },
                  {
                    key: 'getMarkup',
                    value: function () {
                      var e = this.store.get('markup');
                      null == e && (e = this.constructor.getMarkup());
                      return e;
                    },
                  },
                  {
                    key: 'setMarkup',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return this.store.set('markup', e, t), this;
                    },
                  },
                  {
                    key: 'removeMarkup',
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                      return this.store.remove('markup', e), this;
                    },
                  },
                  {
                    key: 'attrs',
                    get: function () {
                      return this.getAttrs();
                    },
                  },
                  {
                    key: 'attrs',
                    set: function (e) {
                      null == e ? this.removeAttrs() : this.setAttrs(e);
                    },
                  },
                  {
                    key: 'getAttrs',
                    value: function () {
                      var e = this.store.get('attrs');
                      return e ? Object.assign({}, e) : {};
                    },
                  },
                  {
                    key: 'setAttrs',
                    value: function (e) {
                      var t = this,
                        n =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {};
                      if (null == e) this.removeAttrs(n);
                      else {
                        var r = function (e) {
                          return t.store.set('attrs', e, n);
                        };
                        if (!0 === n.overwrite) r(e);
                        else {
                          var i = this.getAttrs();
                          !1 === n.deep
                            ? r(Object.assign(Object.assign({}, i), e))
                            : r(wr({}, i, e));
                        }
                      }
                      return this;
                    },
                  },
                  {
                    key: 'replaceAttrs',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return this.setAttrs(
                        e,
                        Object.assign(Object.assign({}, t), { overwrite: !0 })
                      );
                    },
                  },
                  {
                    key: 'updateAttrs',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return this.setAttrs(
                        e,
                        Object.assign(Object.assign({}, t), { deep: !1 })
                      );
                    },
                  },
                  {
                    key: 'removeAttrs',
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                      return this.store.remove('attrs', e), this;
                    },
                  },
                  {
                    key: 'getAttrDefinition',
                    value: function (e) {
                      if (!e) return null;
                      var t = this.constructor.getAttrHooks() || {},
                        n = t[e] || wh.registry.get(e);
                      if (!n) {
                        var r = ss(e);
                        n = t[r] || wh.registry.get(r);
                      }
                      return n || null;
                    },
                  },
                  {
                    key: 'getAttrByPath',
                    value: function (e) {
                      return null == e || '' === e
                        ? this.getAttrs()
                        : this.getPropByPath(this.prefixAttrPath(e));
                    },
                  },
                  {
                    key: 'setAttrByPath',
                    value: function (e, t) {
                      var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {};
                      return (
                        this.setPropByPath(this.prefixAttrPath(e), t, n), this
                      );
                    },
                  },
                  {
                    key: 'removeAttrByPath',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return (
                        this.removePropByPath(this.prefixAttrPath(e), t), this
                      );
                    },
                  },
                  {
                    key: 'prefixAttrPath',
                    value: function (e) {
                      return Array.isArray(e)
                        ? ['attrs'].concat(e)
                        : 'attrs/'.concat(e);
                    },
                  },
                  {
                    key: 'attr',
                    value: function (e, t, n) {
                      return null == e
                        ? this.getAttrByPath()
                        : 'string' == typeof e || Array.isArray(e)
                        ? 1 === arguments.length
                          ? this.getAttrByPath(e)
                          : null == t
                          ? this.removeAttrByPath(e, n || {})
                          : this.setAttrByPath(e, t, n || {})
                        : this.setAttrs(e, t || {});
                    },
                  },
                  {
                    key: 'visible',
                    get: function () {
                      return this.isVisible();
                    },
                  },
                  {
                    key: 'visible',
                    set: function (e) {
                      this.setVisible(e);
                    },
                  },
                  {
                    key: 'setVisible',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return this.store.set('visible', e, t), this;
                    },
                  },
                  {
                    key: 'isVisible',
                    value: function () {
                      return !1 !== this.store.get('visible');
                    },
                  },
                  {
                    key: 'show',
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                      return this.isVisible() || this.setVisible(!0, e), this;
                    },
                  },
                  {
                    key: 'hide',
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                      return this.isVisible() && this.setVisible(!1, e), this;
                    },
                  },
                  {
                    key: 'toggleVisible',
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {},
                        n = 'boolean' == typeof e ? e : !this.isVisible(),
                        r = 'boolean' == typeof e ? t : e;
                      return n ? this.show(r) : this.hide(r), this;
                    },
                  },
                  {
                    key: 'data',
                    get: function () {
                      return this.getData();
                    },
                  },
                  {
                    key: 'data',
                    set: function (e) {
                      this.setData(e);
                    },
                  },
                  {
                    key: 'getData',
                    value: function () {
                      return this.store.get('data');
                    },
                  },
                  {
                    key: 'setData',
                    value: function (e) {
                      var t = this,
                        n =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {};
                      if (null == e) this.removeData(n);
                      else {
                        var r = function (e) {
                          return t.store.set('data', e, n);
                        };
                        if (!0 === n.overwrite) r(e);
                        else {
                          var i = this.getData();
                          !1 === n.deep
                            ? r(
                                'object' === _()(e)
                                  ? Object.assign(Object.assign({}, i), e)
                                  : e
                              )
                            : r(wr({}, i, e));
                        }
                      }
                      return this;
                    },
                  },
                  {
                    key: 'replaceData',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return this.setData(
                        e,
                        Object.assign(Object.assign({}, t), { overwrite: !0 })
                      );
                    },
                  },
                  {
                    key: 'updateData',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return this.setData(
                        e,
                        Object.assign(Object.assign({}, t), { deep: !1 })
                      );
                    },
                  },
                  {
                    key: 'removeData',
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                      return this.store.remove('data', e), this;
                    },
                  },
                  {
                    key: 'parent',
                    get: function () {
                      return this.getParent();
                    },
                  },
                  {
                    key: 'children',
                    get: function () {
                      return this.getChildren();
                    },
                  },
                  {
                    key: 'getParentId',
                    value: function () {
                      return this.store.get('parent');
                    },
                  },
                  {
                    key: 'getParent',
                    value: function () {
                      var e = this.getParentId();
                      if (e && this.model) {
                        var t = this.model.getCell(e);
                        return (this._parent = t), t;
                      }
                      return null;
                    },
                  },
                  {
                    key: 'getChildren',
                    value: function () {
                      var e = this,
                        t = this.store.get('children');
                      if (t && t.length && this.model) {
                        var n = t
                          .map(function (t) {
                            var n;
                            return null === (n = e.model) || void 0 === n
                              ? void 0
                              : n.getCell(t);
                          })
                          .filter(function (e) {
                            return null != e;
                          });
                        return (this._children = n), L()(n);
                      }
                      return null;
                    },
                  },
                  {
                    key: 'hasParent',
                    value: function () {
                      return null != this.parent;
                    },
                  },
                  {
                    key: 'isParentOf',
                    value: function (e) {
                      return null != e && e.getParent() === this;
                    },
                  },
                  {
                    key: 'isChildOf',
                    value: function (e) {
                      return null != e && this.getParent() === e;
                    },
                  },
                  {
                    key: 'eachChild',
                    value: function (e, t) {
                      return this.children && this.children.forEach(e, t), this;
                    },
                  },
                  {
                    key: 'filterChild',
                    value: function (e, t) {
                      return this.children ? this.children.filter(e, t) : [];
                    },
                  },
                  {
                    key: 'getChildCount',
                    value: function () {
                      return null == this.children ? 0 : this.children.length;
                    },
                  },
                  {
                    key: 'getChildIndex',
                    value: function (e) {
                      return null == this.children
                        ? -1
                        : this.children.indexOf(e);
                    },
                  },
                  {
                    key: 'getChildAt',
                    value: function (e) {
                      return null != this.children && e >= 0
                        ? this.children[e]
                        : null;
                    },
                  },
                  {
                    key: 'getAncestors',
                    value: function () {
                      for (
                        var e =
                            arguments.length > 0 && void 0 !== arguments[0]
                              ? arguments[0]
                              : {},
                          t = [],
                          n = this.getParent();
                        n;

                      )
                        t.push(n), (n = !1 !== e.deep ? n.getParent() : null);
                      return t;
                    },
                  },
                  {
                    key: 'getDescendants',
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                      if (!1 !== e.deep) {
                        if (e.breadthFirst) {
                          for (
                            var t = [], n = this.getChildren() || [];
                            n.length > 0;

                          ) {
                            var r = n.shift(),
                              i = r.getChildren();
                            t.push(r), i && n.push.apply(n, L()(i));
                          }
                          return t;
                        }
                        var o = this.getChildren() || [];
                        return (
                          o.forEach(function (t) {
                            o.push.apply(o, L()(t.getDescendants(e)));
                          }),
                          o
                        );
                      }
                      return this.getChildren() || [];
                    },
                  },
                  {
                    key: 'isDescendantOf',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      if (null == e) return !1;
                      if (!1 !== t.deep) {
                        for (var n = this.getParent(); n; ) {
                          if (n === e) return !0;
                          n = n.getParent();
                        }
                        return !1;
                      }
                      return this.isChildOf(e);
                    },
                  },
                  {
                    key: 'isAncestorOf',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return null != e && e.isDescendantOf(this, t);
                    },
                  },
                  {
                    key: 'contains',
                    value: function (e) {
                      return this.isAncestorOf(e);
                    },
                  },
                  {
                    key: 'getCommonAncestor',
                    value: function () {
                      for (
                        var e = arguments.length, t = new Array(e), n = 0;
                        n < e;
                        n++
                      )
                        t[n] = arguments[n];
                      return r.getCommonAncestor.apply(r, [this].concat(t));
                    },
                  },
                  {
                    key: 'setParent',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return (
                        (this._parent = e),
                        e
                          ? this.store.set('parent', e.id, t)
                          : this.store.remove('parent', t),
                        this
                      );
                    },
                  },
                  {
                    key: 'setChildren',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return (
                        (this._children = e),
                        null != e
                          ? this.store.set(
                              'children',
                              e.map(function (e) {
                                return e.id;
                              }),
                              t
                            )
                          : this.store.remove('children', t),
                        this
                      );
                    },
                  },
                  {
                    key: 'unembed',
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {},
                        n = this.children;
                      if (null != n && null != e) {
                        var r = this.getChildIndex(e);
                        -1 !== r &&
                          (n.splice(r, 1),
                          e.setParent(null, t),
                          this.setChildren(n, t));
                      }
                      return this;
                    },
                  },
                  {
                    key: 'embed',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return e.addTo(this, t), this;
                    },
                  },
                  {
                    key: 'addTo',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return (
                        r.isCell(e) ? e.addChild(this, t) : e.addCell(this, t),
                        this
                      );
                    },
                  },
                  {
                    key: 'insertTo',
                    value: function (e, t) {
                      var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {};
                      return e.insertChild(this, t, n), this;
                    },
                  },
                  {
                    key: 'addChild',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return this.insertChild(e, void 0, t);
                    },
                  },
                  {
                    key: 'insertChild',
                    value: function (e, t) {
                      var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {};
                      if (null != e && e !== this) {
                        var r = e.getParent(),
                          i = this !== r,
                          o = t;
                        if (
                          (null == o &&
                            ((o = this.getChildCount()), i || (o -= 1)),
                          r)
                        ) {
                          var a = r.getChildren();
                          if (a) {
                            var s = a.indexOf(e);
                            s >= 0 &&
                              (e.setParent(null, n),
                              a.splice(s, 1),
                              r.setChildren(a, n));
                          }
                        }
                        var l = this.children;
                        if (
                          (null == l ? (l = []).push(e) : l.splice(o, 0, e),
                          e.setParent(this, n),
                          this.setChildren(l, n),
                          i && this.model)
                        ) {
                          var u = this.model.getIncomingEdges(this),
                            c = this.model.getOutgoingEdges(this);
                          u &&
                            u.forEach(function (e) {
                              return e.updateParent(n);
                            }),
                            c &&
                              c.forEach(function (e) {
                                return e.updateParent(n);
                              });
                        }
                        this.model && this.model.addCell(e, n);
                      }
                      return this;
                    },
                  },
                  {
                    key: 'removeFromParent',
                    value: function () {
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {},
                        t = this.getParent();
                      if (null != t) {
                        var n = t.getChildIndex(this);
                        t.removeChildAt(n, e);
                      }
                      return this;
                    },
                  },
                  {
                    key: 'removeChild',
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {},
                        n = this.getChildIndex(e);
                      return this.removeChildAt(n, t);
                    },
                  },
                  {
                    key: 'removeChildAt',
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {},
                        n = this.getChildAt(e),
                        r = this.children;
                      return (
                        null != r &&
                          null != n &&
                          (this.unembed(n, t), n.remove(t)),
                        n
                      );
                    },
                  },
                  {
                    key: 'remove',
                    value: function () {
                      var e = this,
                        t =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {};
                      return (
                        this.batchUpdate('remove', function () {
                          var n = e.getParent();
                          n && n.removeChild(e, t),
                            !1 !== t.deep &&
                              e.eachChild(function (e) {
                                return e.remove(t);
                              }),
                            e.model && e.model.removeCell(e, t);
                        }),
                        this
                      );
                    },
                  },
                  {
                    key: 'transition',
                    value: function (e, t) {
                      var n =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : {},
                        r =
                          arguments.length > 3 && void 0 !== arguments[3]
                            ? arguments[3]
                            : '/';
                      return this.animation.start(e, t, n, r);
                    },
                  },
                  {
                    key: 'stopTransition',
                    value: function (e, t) {
                      var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : '/';
                      return this.animation.stop(e, t, n), this;
                    },
                  },
                  {
                    key: 'getTransitions',
                    value: function () {
                      return this.animation.get();
                    },
                  },
                  {
                    key: 'translate',
                    value: function (e, t, n) {
                      return this;
                    },
                  },
                  {
                    key: 'scale',
                    value: function (e, t, n, r) {
                      return this;
                    },
                  },
                  {
                    key: 'addTools',
                    value: function (e, t, n) {
                      var r = Array.isArray(e) ? e : [e],
                        i = 'string' == typeof t ? t : null,
                        o =
                          'object' === _()(t)
                            ? t
                            : 'object' === _()(n)
                            ? n
                            : {};
                      if (o.reset)
                        return this.setTools(
                          { name: i, items: r, local: o.local },
                          o
                        );
                      var a = qi(this.getTools());
                      return null == a || null == i || a.name === i
                        ? (null == a && (a = {}),
                          a.items || (a.items = []),
                          (a.name = i),
                          (a.items = [].concat(L()(a.items), L()(r))),
                          this.setTools(Object.assign({}, a), o))
                        : void 0;
                    },
                  },
                  {
                    key: 'setTools',
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return (
                        null == e
                          ? this.removeTools()
                          : this.store.set('tools', r.normalizeTools(e), t),
                        this
                      );
                    },
                  },
                  {
                    key: 'getTools',
                    value: function () {
                      return this.store.get('tools');
                    },
                  },
                  {
                    key: 'removeTools',
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                      return this.store.remove('tools', e), this;
                    },
                  },
                  {
                    key: 'hasTools',
                    value: function (e) {
                      var t = this.getTools();
                      return null != t && (null == e || t.name === e);
                    },
                  },
                  {
                    key: 'hasTool',
                    value: function (e) {
                      var t = this.getTools();
                      return (
                        null != t &&
                        t.items.some(function (t) {
                          return 'string' == typeof t ? t === e : t.name === e;
                        })
                      );
                    },
                  },
                  {
                    key: 'removeTool',
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {},
                        n = qi(this.getTools());
                      if (n) {
                        var r = !1,
                          i = n.items.slice(),
                          o = function (e) {
                            i.splice(e, 1), (r = !0);
                          };
                        if ('number' == typeof e) o(e);
                        else
                          for (var a = i.length - 1; a >= 0; a -= 1) {
                            var s = i[a],
                              l = 'string' == typeof s ? s === e : s.name === e;
                            l && o(a);
                          }
                        r && ((n.items = i), this.setTools(n, t));
                      }
                      return this;
                    },
                  },
                  {
                    key: 'getBBox',
                    value: function (e) {
                      return new Zu();
                    },
                  },
                  {
                    key: 'getConnectionPoint',
                    value: function (e, t) {
                      return new Ku();
                    },
                  },
                  {
                    key: 'toJSON',
                    value: function () {
                      var e = this,
                        t =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {},
                        n = Object.assign({}, this.store.get()),
                        r = Object.prototype.toString,
                        i = this.isNode()
                          ? 'node'
                          : this.isEdge()
                          ? 'edge'
                          : 'cell';
                      if (!n.shape) {
                        var o = this.constructor;
                        throw new Error(
                          'Unable to serialize '
                            .concat(i, ' missing "shape" prop, check the ')
                            .concat(i, ' "')
                            .concat(o.name || r.call(o), '"')
                        );
                      }
                      var a = this.constructor,
                        s = !0 === t.diff,
                        l = n.attrs || {},
                        u = a.getDefaults(!0),
                        c = s ? this.preprocess(u, !0) : u,
                        f = c.attrs || {},
                        h = {};
                      Object.entries(n).forEach(function (t) {
                        var o = ql()(t, 2),
                          a = o[0],
                          l = o[1];
                        if (
                          null != l &&
                          !Array.isArray(l) &&
                          'object' === _()(l) &&
                          !$n(l)
                        )
                          throw new Error(
                            'Can only serialize '
                              .concat(
                                i,
                                ' with plain-object props, but got a "'
                              )
                              .concat(r.call(l), '" type of key "')
                              .concat(a, '" on ')
                              .concat(i, ' "')
                              .concat(e.id, '"')
                          );
                        if ('attrs' !== a && 'shape' !== a && s) {
                          var u = c[a];
                          pi(l, u) && delete n[a];
                        }
                      }),
                        Object.keys(l).forEach(function (e) {
                          var t = l[e],
                            n = f[e];
                          Object.keys(t).forEach(function (r) {
                            var i = t[r],
                              o = n ? n[r] : null;
                            null == i || 'object' !== _()(i) || Array.isArray(i)
                              ? (null != n && pi(o, i)) ||
                                (null == h[e] && (h[e] = {}), (h[e][r] = i))
                              : Object.keys(i).forEach(function (t) {
                                  var a = i[t];
                                  (null != n &&
                                    null != o &&
                                    I(o) &&
                                    pi(o[t], a)) ||
                                    (null == h[e] && (h[e] = {}),
                                    null == h[e][r] && (h[e][r] = {}),
                                    (h[e][r][t] = a));
                                });
                          });
                        });
                      var d = Object.assign(Object.assign({}, n), {
                        attrs: yi(h) ? void 0 : h,
                      });
                      null == d.attrs && delete d.attrs;
                      var g = d;
                      return 0 === g.angle && delete g.angle, qi(g);
                    },
                  },
                  {
                    key: 'clone',
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                      if (!e.deep) {
                        var t = Object.assign({}, this.store.get());
                        e.keepId || delete t.id,
                          delete t.parent,
                          delete t.children;
                        var n = this.constructor;
                        return new n(t);
                      }
                      var i = r.deepClone(this);
                      return i[this.id];
                    },
                  },
                  {
                    key: 'findView',
                    value: function (e) {
                      return e.findViewByCell(this);
                    },
                  },
                  {
                    key: 'startBatch',
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {},
                        n =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : this.model;
                      return (
                        this.notify('batch:start', {
                          name: e,
                          data: t,
                          cell: this,
                        }),
                        n &&
                          n.startBatch(
                            e,
                            Object.assign(Object.assign({}, t), { cell: this })
                          ),
                        this
                      );
                    },
                  },
                  {
                    key: 'stopBatch',
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {},
                        n =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : this.model;
                      return (
                        n &&
                          n.stopBatch(
                            e,
                            Object.assign(Object.assign({}, t), { cell: this })
                          ),
                        this.notify('batch:stop', {
                          name: e,
                          data: t,
                          cell: this,
                        }),
                        this
                      );
                    },
                  },
                  {
                    key: 'batchUpdate',
                    value: function (e, t, n) {
                      var r = this.model;
                      this.startBatch(e, n, r);
                      var i = t();
                      return this.stopBatch(e, n, r), i;
                    },
                  },
                  {
                    key: 'dispose',
                    value: function () {
                      this.removeFromParent(), this.store.dispose();
                    },
                  },
                ],
                [
                  {
                    key: 'config',
                    value: function (e) {
                      var t,
                        n = this,
                        r = e.markup,
                        i = e.propHooks,
                        o = e.attrHooks,
                        a = jp(e, ['markup', 'propHooks', 'attrHooks']);
                      (null != r && (this.markup = r), i) &&
                        ((this.propHooks = this.propHooks.slice()),
                        Array.isArray(i)
                          ? (t = this.propHooks).push.apply(t, L()(i))
                          : 'function' == typeof i
                          ? this.propHooks.push(i)
                          : Object.values(i).forEach(function (e) {
                              'function' == typeof e && n.propHooks.push(e);
                            }));
                      o &&
                        (this.attrHooks = Object.assign(
                          Object.assign({}, this.attrHooks),
                          o
                        )),
                        (this.defaults = wr({}, this.defaults, a));
                    },
                  },
                  {
                    key: 'getMarkup',
                    value: function () {
                      return this.markup;
                    },
                  },
                  {
                    key: 'getDefaults',
                    value: function (e) {
                      return e ? this.defaults : qi(this.defaults);
                    },
                  },
                  {
                    key: 'getAttrHooks',
                    value: function () {
                      return this.attrHooks;
                    },
                  },
                  {
                    key: 'applyPropHooks',
                    value: function (e, t) {
                      return this.propHooks.reduce(function (t, n) {
                        return n ? de(n, e, t) : t;
                      }, t);
                    },
                  },
                ]
              ),
              r
            );
          })(so, Symbol.toStringTag);
        (Lp.defaults = {}),
          (Lp.attrHooks = {}),
          (Lp.propHooks = []),
          Np([so.dispose()], Lp.prototype, 'dispose', null),
          (function (e) {
            e.normalizeTools = function (e) {
              return 'string' == typeof e
                ? { items: [e] }
                : Array.isArray(e)
                ? { items: e }
                : e.items
                ? e
                : { items: [e] };
            };
          })(Lp || (Lp = {})),
          (function (e) {
            (e.toStringTag = 'X6.'.concat(e.name)),
              (e.isCell = function (t) {
                if (null == t) return !1;
                if (t instanceof e) return !0;
                var n = t[Symbol.toStringTag],
                  r = t;
                return (
                  (null == n || n === e.toStringTag) &&
                  'function' == typeof r.isNode &&
                  'function' == typeof r.isEdge &&
                  'function' == typeof r.prop &&
                  'function' == typeof r.attr
                );
              });
          })(Lp || (Lp = {})),
          (function (e) {
            (e.getCommonAncestor = function () {
              for (
                var e = arguments.length, t = new Array(e), n = 0;
                n < e;
                n++
              )
                t[n] = arguments[n];
              var r = t
                  .filter(function (e) {
                    return null != e;
                  })
                  .map(function (e) {
                    return e.getAncestors();
                  })
                  .sort(function (e, t) {
                    return e.length - t.length;
                  }),
                i = r.shift();
              return (
                i.find(function (e) {
                  return r.every(function (t) {
                    return t.includes(e);
                  });
                }) || null
              );
            }),
              (e.getCellsBBox = function (e) {
                for (
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    n = null,
                    r = 0,
                    i = e.length;
                  r < i;
                  r += 1
                ) {
                  var o = e[r],
                    a = o.getBBox(t);
                  if (a) {
                    if (o.isNode()) {
                      var s = o.getAngle();
                      null != s && 0 !== s && (a = a.bbox(s));
                    }
                    n = null == n ? a : n.union(a);
                  }
                }
                return n;
              }),
              (e.deepClone = function (t) {
                var n = [t].concat(L()(t.getDescendants({ deep: !0 })));
                return e.cloneCells(n);
              }),
              (e.cloneCells = function (e) {
                var t = mo(e),
                  n = t.reduce(function (e, t) {
                    return (e[t.id] = t.clone()), e;
                  }, {});
                return (
                  t.forEach(function (e) {
                    var t = n[e.id];
                    if (t.isEdge()) {
                      var r = t.getSourceCellId(),
                        i = t.getTargetCellId();
                      r &&
                        n[r] &&
                        t.setSource(
                          Object.assign(Object.assign({}, t.getSource()), {
                            cell: n[r].id,
                          })
                        ),
                        i &&
                          n[i] &&
                          t.setTarget(
                            Object.assign(Object.assign({}, t.getTarget()), {
                              cell: n[i].id,
                            })
                          );
                    }
                    var o = e.getParent();
                    o && n[o.id] && t.setParent(n[o.id]);
                    var a = e.getChildren();
                    if (a && a.length) {
                      var s = a.reduce(function (e, t) {
                        return n[t.id] && e.push(n[t.id]), e;
                      }, []);
                      s.length > 0 && t.setChildren(s);
                    }
                  }),
                  n
                );
              });
          })(Lp || (Lp = {})),
          (function (e) {
            e.config({
              propHooks: function (t) {
                var n = t.tools,
                  r = jp(t, ['tools']);
                return n && (r.tools = e.normalizeTools(n)), r;
              },
            });
          })(Lp || (Lp = {})),
          (function (e) {
            var t, n;
            (e.exist = function (e, r) {
              return r ? null != t && t.exist(e) : null != n && n.exist(e);
            }),
              (e.setEdgeRegistry = function (e) {
                t = e;
              }),
              (e.setNodeRegistry = function (e) {
                n = e;
              });
          })(Tp || (Tp = {}));
        var Rp = (function () {
            function e(t) {
              y()(this, e),
                (this.ports = []),
                (this.groups = {}),
                this.init(qi(t));
            }
            return (
              b()(e, [
                {
                  key: 'getPorts',
                  value: function () {
                    return this.ports;
                  },
                },
                {
                  key: 'getGroup',
                  value: function (e) {
                    return null != e ? this.groups[e] : null;
                  },
                },
                {
                  key: 'getPortsByGroup',
                  value: function (e) {
                    return this.ports.filter(function (t) {
                      return t.group === e || (null == t.group && null == e);
                    });
                  },
                },
                {
                  key: 'getPortsLayoutByGroup',
                  value: function (e, t) {
                    var n,
                      r = this,
                      i = this.getPortsByGroup(e),
                      o = e ? this.getGroup(e) : null,
                      a = o ? o.position : null,
                      s = a ? a.name : null;
                    if (null != s) {
                      var l = Xh.registry.get(s);
                      if (null == l) return Xh.registry.onNotFound(s);
                      n = l;
                    } else n = Xh.presets.left;
                    var u = i.map(function (e) {
                        return (e && e.position && e.position.args) || {};
                      }),
                      c = (a && a.args) || {};
                    return n(u, t, c).map(function (e, n) {
                      var o = i[n];
                      return {
                        portLayout: e,
                        portId: o.id,
                        portSize: o.size,
                        portAttrs: o.attrs,
                        labelSize: o.label.size,
                        labelLayout: r.getPortLabelLayout(
                          o,
                          Ku.create(e.position),
                          t
                        ),
                      };
                    });
                  },
                },
                {
                  key: 'init',
                  value: function (e) {
                    var t = this,
                      n = e.groups,
                      r = e.items;
                    null != n &&
                      Object.keys(n).forEach(function (e) {
                        t.groups[e] = t.parseGroup(n[e]);
                      }),
                      Array.isArray(r) &&
                        r.forEach(function (e) {
                          t.ports.push(t.parsePort(e));
                        });
                  },
                },
                {
                  key: 'parseGroup',
                  value: function (e) {
                    return Object.assign(Object.assign({}, e), {
                      label: this.getLabel(e, !0),
                      position: this.getPortPosition(e.position, !0),
                    });
                  },
                },
                {
                  key: 'parsePort',
                  value: function (e) {
                    var t = Object.assign({}, e),
                      n = this.getGroup(e.group) || {};
                    return (
                      (t.markup = t.markup || n.markup),
                      (t.attrs = wr({}, n.attrs, t.attrs)),
                      (t.position = this.createPosition(n, t)),
                      (t.label = wr({}, n.label, this.getLabel(t))),
                      (t.zIndex = this.getZIndex(n, t)),
                      (t.size = Object.assign(
                        Object.assign({}, n.size),
                        t.size
                      )),
                      t
                    );
                  },
                },
                {
                  key: 'getZIndex',
                  value: function (e, t) {
                    return 'number' == typeof t.zIndex
                      ? t.zIndex
                      : 'number' == typeof e.zIndex || 'auto' === e.zIndex
                      ? e.zIndex
                      : 'auto';
                  },
                },
                {
                  key: 'createPosition',
                  value: function (e, t) {
                    return wr({ name: 'left', args: {} }, e.position, {
                      args: t.args,
                    });
                  },
                },
                {
                  key: 'getPortPosition',
                  value: function (e) {
                    var t =
                      arguments.length > 1 &&
                      void 0 !== arguments[1] &&
                      arguments[1];
                    if (null == e) {
                      if (t) return { name: 'left', args: {} };
                    } else {
                      if ('string' == typeof e) return { name: e, args: {} };
                      if (Array.isArray(e))
                        return { name: 'absolute', args: { x: e[0], y: e[1] } };
                      if ('object' === _()(e)) return e;
                    }
                    return { args: {} };
                  },
                },
                {
                  key: 'getPortLabelPosition',
                  value: function (e) {
                    var t =
                      arguments.length > 1 &&
                      void 0 !== arguments[1] &&
                      arguments[1];
                    if (null == e) {
                      if (t) return { name: 'left', args: {} };
                    } else {
                      if ('string' == typeof e) return { name: e, args: {} };
                      if ('object' === _()(e)) return e;
                    }
                    return { args: {} };
                  },
                },
                {
                  key: 'getLabel',
                  value: function (e) {
                    var t =
                        arguments.length > 1 &&
                        void 0 !== arguments[1] &&
                        arguments[1],
                      n = e.label || {};
                    return (
                      (n.position = this.getPortLabelPosition(n.position, t)), n
                    );
                  },
                },
                {
                  key: 'getPortLabelLayout',
                  value: function (e, t, n) {
                    var r = e.label.position.name || 'left',
                      i = e.label.position.args || {},
                      o = pd.registry.get(r) || pd.presets.left;
                    return o ? o(t, n, i) : null;
                  },
                },
              ]),
              e
            );
          })(),
          _p = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Ip = (function (e, t) {
            M()(r, e);
            var n = N()(r);
            function r() {
              var e,
                t =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
              return y()(this, r), (e = n.call(this, t)).initPorts(), e;
            }
            return (
              b()(r, [
                {
                  key: t,
                  get: function () {
                    return r.toStringTag;
                  },
                },
                {
                  key: 'preprocess',
                  value: function (e, t) {
                    var n = e.x,
                      i = e.y,
                      o = e.width,
                      a = e.height,
                      s = _p(e, ['x', 'y', 'width', 'height']);
                    if (null != n || null != i) {
                      var l = s.position;
                      s.position = Object.assign(Object.assign({}, l), {
                        x: null != n ? n : l ? l.x : 0,
                        y: null != i ? i : l ? l.y : 0,
                      });
                    }
                    if (null != o || null != a) {
                      var u = s.size;
                      s.size = Object.assign(Object.assign({}, u), {
                        width: null != o ? o : u ? u.width : 0,
                        height: null != a ? a : u ? u.height : 0,
                      });
                    }
                    return wd()(Cd()(r.prototype), 'preprocess', this).call(
                      this,
                      s,
                      t
                    );
                  },
                },
                {
                  key: 'isNode',
                  value: function () {
                    return !0;
                  },
                },
                {
                  key: 'size',
                  value: function (e, t, n) {
                    return void 0 === e
                      ? this.getSize()
                      : 'number' == typeof e
                      ? this.setSize(e, t, n)
                      : this.setSize(e, t);
                  },
                },
                {
                  key: 'getSize',
                  value: function () {
                    var e = this.store.get('size');
                    return e ? Object.assign({}, e) : { width: 1, height: 1 };
                  },
                },
                {
                  key: 'setSize',
                  value: function (e, t, n) {
                    return (
                      'object' === _()(e)
                        ? this.resize(e.width, e.height, t)
                        : this.resize(e, t, n),
                      this
                    );
                  },
                },
                {
                  key: 'resize',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    this.startBatch('resize', n);
                    var r = n.direction;
                    if (r) {
                      var i = this.getSize();
                      switch (r) {
                        case 'left':
                        case 'right':
                          t = i.height;
                          break;
                        case 'top':
                        case 'bottom':
                          e = i.width;
                      }
                      var o = {
                          right: 0,
                          'top-right': 0,
                          top: 1,
                          'top-left': 1,
                          left: 2,
                          'bottom-left': 2,
                          bottom: 3,
                          'bottom-right': 3,
                        },
                        a = o[r],
                        s = Xu.normalize(this.getAngle() || 0);
                      n.absolute &&
                        ((a += Math.floor((s + 45) / 90)), (a %= 4));
                      var l = this.getBBox(),
                        u = (
                          0 === a
                            ? l.getBottomLeft()
                            : 1 === a
                            ? l.getCorner()
                            : 2 === a
                            ? l.getTopRight()
                            : l.getOrigin()
                        )
                          .clone()
                          .rotate(-s, l.getCenter()),
                        c = Math.sqrt(e * e + t * t) / 2,
                        f = (a * Math.PI) / 2;
                      (f += Math.atan(a % 2 == 0 ? t / e : e / t)),
                        (f -= Xu.toRad(s));
                      var h = Ku.fromPolar(c, f, u),
                        d = h.clone().translate(e / -2, t / -2);
                      this.store.set('size', { width: e, height: t }, n),
                        this.setPosition(d.x, d.y, n);
                    } else this.store.set('size', { width: e, height: t }, n);
                    return this.stopBatch('resize', n), this;
                  },
                },
                {
                  key: 'scale',
                  value: function (e, t, n) {
                    var r =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : {},
                      i = this.getBBox().scale(e, t, null == n ? void 0 : n);
                    return (
                      this.startBatch('scale', r),
                      this.setPosition(i.x, i.y, r),
                      this.resize(i.width, i.height, r),
                      this.stopBatch('scale'),
                      this
                    );
                  },
                },
                {
                  key: 'position',
                  value: function (e, t, n) {
                    return 'number' == typeof e
                      ? this.setPosition(e, t, n)
                      : this.getPosition(e);
                  },
                },
                {
                  key: 'getPosition',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    if (e.relative) {
                      var t = this.getParent();
                      if (null != t && t.isNode()) {
                        var n = this.getPosition(),
                          r = t.getPosition();
                        return { x: n.x - r.x, y: n.y - r.y };
                      }
                    }
                    var i = this.store.get('position');
                    return i ? Object.assign({}, i) : { x: 0, y: 0 };
                  },
                },
                {
                  key: 'setPosition',
                  value: function (e, t) {
                    var n,
                      r,
                      i,
                      o =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {};
                    if (
                      ('object' === _()(e)
                        ? ((n = e.x), (r = e.y), (i = t || {}))
                        : ((n = e), (r = t), (i = o || {})),
                      i.relative)
                    ) {
                      var a = this.getParent();
                      if (null != a && a.isNode()) {
                        var s = a.getPosition();
                        (n += s.x), (r += s.y);
                      }
                    }
                    if (i.deep) {
                      var l = this.getPosition();
                      this.translate(n - l.x, r - l.y, i);
                    } else this.store.set('position', { x: n, y: r }, i);
                    return this;
                  },
                },
                {
                  key: 'translate',
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 0,
                      t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0,
                      n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {};
                    if (0 === e && 0 === t) return this;
                    n.translateBy = n.translateBy || this.id;
                    var r = this.getPosition();
                    if (null != n.restrict && n.translateBy === this.id) {
                      var i = this.getBBox({ deep: !0 }),
                        o = n.restrict,
                        a = r.x - i.x,
                        s = r.y - i.y,
                        l = Math.max(
                          o.x + a,
                          Math.min(o.x + o.width + a - i.width, r.x + e)
                        ),
                        u = Math.max(
                          o.y + s,
                          Math.min(o.y + o.height + s - i.height, r.y + t)
                        );
                      (e = l - r.x), (t = u - r.y);
                    }
                    var c = { x: r.x + e, y: r.y + t };
                    return (
                      (n.tx = e),
                      (n.ty = t),
                      n.transition
                        ? ('object' !== _()(n.transition) &&
                            (n.transition = {}),
                          this.transition(
                            'position',
                            c,
                            Object.assign(Object.assign({}, n.transition), {
                              interp: Gu.object,
                            })
                          ),
                          this.eachChild(function (r) {
                            var i;
                            (null === (i = n.exclude) || void 0 === i
                              ? void 0
                              : i.includes(r)) || r.translate(e, t, n);
                          }))
                        : (this.startBatch('translate', n),
                          this.store.set('position', c, n),
                          this.eachChild(function (r) {
                            var i;
                            (null === (i = n.exclude) || void 0 === i
                              ? void 0
                              : i.includes(r)) || r.translate(e, t, n);
                          }),
                          this.stopBatch('translate', n)),
                      this
                    );
                  },
                },
                {
                  key: 'angle',
                  value: function (e, t) {
                    return null == e ? this.getAngle() : this.rotate(e, t);
                  },
                },
                {
                  key: 'getAngle',
                  value: function () {
                    return this.store.get('angle', 0);
                  },
                },
                {
                  key: 'rotate',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = this.getAngle();
                    if (t.center) {
                      var r = this.getSize(),
                        i = this.getPosition(),
                        o = this.getBBox().getCenter();
                      o.rotate(n - e, t.center);
                      var a = o.x - r.width / 2 - i.x,
                        s = o.y - r.height / 2 - i.y;
                      this.startBatch('rotate', { angle: e, options: t }),
                        this.setPosition(i.x + a, i.y + s, t),
                        this.rotate(
                          e,
                          Object.assign(Object.assign({}, t), { center: null })
                        ),
                        this.stopBatch('rotate');
                    } else
                      this.store.set(
                        'angle',
                        t.absolute ? e : (n + e) % 360,
                        t
                      );
                    return this;
                  },
                },
                {
                  key: 'getBBox',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    if (e.deep) {
                      var t = this.getDescendants({
                        deep: !0,
                        breadthFirst: !0,
                      });
                      return t.push(this), Lp.getCellsBBox(t);
                    }
                    return Zu.fromPositionAndSize(
                      this.getPosition(),
                      this.getSize()
                    );
                  },
                },
                {
                  key: 'getConnectionPoint',
                  value: function (e, t) {
                    var n = this.getBBox(),
                      r = n.getCenter(),
                      i = e.getTerminal(t);
                    if (null == i) return r;
                    var o = i.port;
                    if (!o || !this.hasPort(o)) return r;
                    var a = this.getPort(o);
                    if (!a || !a.group) return r;
                    var s = this.getPortsPosition(a.group)[o].position,
                      l = Ku.create(s).translate(n.getOrigin()),
                      u = this.getAngle();
                    return u && l.rotate(-u, r), l;
                  },
                },
                {
                  key: 'fit',
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      t = this.getChildren() || [],
                      n = t.filter(function (e) {
                        return e.isNode();
                      });
                    if (0 === n.length) return this;
                    this.startBatch('fit-embeds', e),
                      e.deep &&
                        n.forEach(function (t) {
                          return t.fit(e);
                        });
                    var r = Lp.getCellsBBox(n),
                      i = r.x,
                      o = r.y,
                      a = r.width,
                      s = r.height,
                      l = Os(e.padding);
                    return (
                      (i -= l.left),
                      (o -= l.top),
                      (a += l.left + l.right),
                      (s += l.bottom + l.top),
                      this.store.set(
                        {
                          position: { x: i, y: o },
                          size: { width: a, height: s },
                        },
                        e
                      ),
                      this.stopBatch('fit-embeds'),
                      this
                    );
                  },
                },
                {
                  key: 'portContainerMarkup',
                  get: function () {
                    return this.getPortContainerMarkup();
                  },
                },
                {
                  key: 'portContainerMarkup',
                  set: function (e) {
                    this.setPortContainerMarkup(e);
                  },
                },
                {
                  key: 'getDefaultPortContainerMarkup',
                  value: function () {
                    return (
                      this.store.get('defaultPortContainerMarkup') ||
                      Ed.getPortContainerMarkup()
                    );
                  },
                },
                {
                  key: 'getPortContainerMarkup',
                  value: function () {
                    return (
                      this.store.get('portContainerMarkup') ||
                      this.getDefaultPortContainerMarkup()
                    );
                  },
                },
                {
                  key: 'setPortContainerMarkup',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return (
                      this.store.set('portContainerMarkup', Ed.clone(e), t),
                      this
                    );
                  },
                },
                {
                  key: 'portMarkup',
                  get: function () {
                    return this.getPortMarkup();
                  },
                },
                {
                  key: 'portMarkup',
                  set: function (e) {
                    this.setPortMarkup(e);
                  },
                },
                {
                  key: 'getDefaultPortMarkup',
                  value: function () {
                    return (
                      this.store.get('defaultPortMarkup') || Ed.getPortMarkup()
                    );
                  },
                },
                {
                  key: 'getPortMarkup',
                  value: function () {
                    return (
                      this.store.get('portMarkup') ||
                      this.getDefaultPortMarkup()
                    );
                  },
                },
                {
                  key: 'setPortMarkup',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.store.set('portMarkup', Ed.clone(e), t), this;
                  },
                },
                {
                  key: 'portLabelMarkup',
                  get: function () {
                    return this.getPortLabelMarkup();
                  },
                },
                {
                  key: 'portLabelMarkup',
                  set: function (e) {
                    this.setPortLabelMarkup(e);
                  },
                },
                {
                  key: 'getDefaultPortLabelMarkup',
                  value: function () {
                    return (
                      this.store.get('defaultPortLabelMarkup') ||
                      Ed.getPortLabelMarkup()
                    );
                  },
                },
                {
                  key: 'getPortLabelMarkup',
                  value: function () {
                    return (
                      this.store.get('portLabelMarkup') ||
                      this.getDefaultPortLabelMarkup()
                    );
                  },
                },
                {
                  key: 'setPortLabelMarkup',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return (
                      this.store.set('portLabelMarkup', Ed.clone(e), t), this
                    );
                  },
                },
                {
                  key: 'ports',
                  get: function () {
                    var e = this.store.get('ports', { items: [] });
                    return null == e.items && (e.items = []), e;
                  },
                },
                {
                  key: 'getPorts',
                  value: function () {
                    return qi(this.ports.items);
                  },
                },
                {
                  key: 'getPortsByGroup',
                  value: function (e) {
                    return this.getPorts().filter(function (t) {
                      return t.group === e;
                    });
                  },
                },
                {
                  key: 'getPort',
                  value: function (e) {
                    return qi(
                      this.ports.items.find(function (t) {
                        return t.id && t.id === e;
                      })
                    );
                  },
                },
                {
                  key: 'getPortAt',
                  value: function (e) {
                    return this.ports.items[e] || null;
                  },
                },
                {
                  key: 'hasPorts',
                  value: function () {
                    return this.ports.items.length > 0;
                  },
                },
                {
                  key: 'hasPort',
                  value: function (e) {
                    return -1 !== this.getPortIndex(e);
                  },
                },
                {
                  key: 'getPortIndex',
                  value: function (e) {
                    var t = 'string' == typeof e ? e : e.id;
                    return null != t
                      ? this.ports.items.findIndex(function (e) {
                          return e.id === t;
                        })
                      : -1;
                  },
                },
                {
                  key: 'getPortsPosition',
                  value: function (e) {
                    var t = this.getSize();
                    return this.port
                      .getPortsLayoutByGroup(e, new Zu(0, 0, t.width, t.height))
                      .reduce(function (e, t) {
                        var n = t.portLayout;
                        return (
                          (e[t.portId] = {
                            position: Object.assign({}, n.position),
                            angle: n.angle || 0,
                          }),
                          e
                        );
                      }, {});
                  },
                },
                {
                  key: 'getPortProp',
                  value: function (e, t) {
                    return this.getPropByPath(this.prefixPortPath(e, t));
                  },
                },
                {
                  key: 'setPortProp',
                  value: function (e, t, n, r) {
                    if ('string' == typeof t || Array.isArray(t)) {
                      var i = this.prefixPortPath(e, t),
                        o = n;
                      return this.setPropByPath(i, o, r);
                    }
                    var a = this.prefixPortPath(e),
                      s = t;
                    return this.setPropByPath(a, s, n);
                  },
                },
                {
                  key: 'removePortProp',
                  value: function (e, t, n) {
                    return 'string' == typeof t || Array.isArray(t)
                      ? this.removePropByPath(this.prefixPortPath(e, t), n)
                      : this.removePropByPath(this.prefixPortPath(e), t);
                  },
                },
                {
                  key: 'portProp',
                  value: function (e, t, n, r) {
                    return null == t
                      ? this.getPortProp(e)
                      : 'string' == typeof t || Array.isArray(t)
                      ? 2 === arguments.length
                        ? this.getPortProp(e, t)
                        : null == n
                        ? this.removePortProp(e, t, r)
                        : this.setPortProp(e, t, n, r)
                      : this.setPortProp(e, t, n);
                  },
                },
                {
                  key: 'prefixPortPath',
                  value: function (e, t) {
                    var n = this.getPortIndex(e);
                    if (-1 === n)
                      throw new Error(
                        'Unable to find port with id: "'.concat(e, '"')
                      );
                    return null == t || '' === t
                      ? ['ports', 'items', ''.concat(n)]
                      : Array.isArray(t)
                      ? ['ports', 'items', ''.concat(n)].concat(L()(t))
                      : 'ports/items/'.concat(n, '/').concat(t);
                  },
                },
                {
                  key: 'addPort',
                  value: function (e, t) {
                    var n = L()(this.ports.items);
                    return (
                      n.push(e), this.setPropByPath('ports/items', n, t), this
                    );
                  },
                },
                {
                  key: 'addPorts',
                  value: function (e, t) {
                    return (
                      this.setPropByPath(
                        'ports/items',
                        [].concat(L()(this.ports.items), L()(e)),
                        t
                      ),
                      this
                    );
                  },
                },
                {
                  key: 'insertPort',
                  value: function (e, t, n) {
                    var r = L()(this.ports.items);
                    return (
                      r.splice(e, 0, t),
                      this.setPropByPath('ports/items', r, n),
                      this
                    );
                  },
                },
                {
                  key: 'removePort',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.removePortAt(this.getPortIndex(e), t);
                  },
                },
                {
                  key: 'removePortAt',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    if (e >= 0) {
                      var n = L()(this.ports.items);
                      n.splice(e, 1),
                        (t.rewrite = !0),
                        this.setPropByPath('ports/items', n, t);
                    }
                    return this;
                  },
                },
                {
                  key: 'removePorts',
                  value: function (e, t) {
                    var n;
                    if (Array.isArray(e)) {
                      if (((n = t || {}), e.length)) {
                        n.rewrite = !0;
                        var r = L()(this.ports.items).filter(function (t) {
                          return !e.some(function (e) {
                            var n = 'string' == typeof e ? e : e.id;
                            return t.id === n;
                          });
                        });
                        this.setPropByPath('ports/items', r, n);
                      }
                    } else
                      ((n = e || {}).rewrite = !0),
                        this.setPropByPath('ports/items', [], n);
                    return this;
                  },
                },
                {
                  key: 'getParsedPorts',
                  value: function () {
                    return this.port.getPorts();
                  },
                },
                {
                  key: 'getParsedGroups',
                  value: function () {
                    return this.port.groups;
                  },
                },
                {
                  key: 'getPortsLayoutByGroup',
                  value: function (e, t) {
                    return this.port.getPortsLayoutByGroup(e, t);
                  },
                },
                {
                  key: 'initPorts',
                  value: function () {
                    var e = this;
                    this.updatePortData(),
                      this.on('change:ports', function () {
                        e.processRemovedPort(), e.updatePortData();
                      });
                  },
                },
                {
                  key: 'processRemovedPort',
                  value: function () {
                    var e = this.ports,
                      t = {};
                    e.items.forEach(function (e) {
                      e.id && (t[e.id] = !0);
                    });
                    var n = {};
                    (
                      this.store.getPrevious('ports') || { items: [] }
                    ).items.forEach(function (e) {
                      e.id && !t[e.id] && (n[e.id] = !0);
                    });
                    var r = this.model;
                    r &&
                      !yi(n) &&
                      (r
                        .getConnectedEdges(this, { incoming: !0 })
                        .forEach(function (e) {
                          var t = e.getTargetPortId();
                          t && n[t] && e.remove();
                        }),
                      r
                        .getConnectedEdges(this, { outgoing: !0 })
                        .forEach(function (e) {
                          var t = e.getSourcePortId();
                          t && n[t] && e.remove();
                        }));
                  },
                },
                {
                  key: 'validatePorts',
                  value: function () {
                    var e = this,
                      t = {},
                      n = [];
                    return (
                      this.ports.items.forEach(function (r) {
                        'object' !== _()(r) &&
                          n.push('Invalid port '.concat(r, '.')),
                          null == r.id && (r.id = e.generatePortId()),
                          t[r.id] && n.push('Duplicitied port id.'),
                          (t[r.id] = !0);
                      }),
                      n
                    );
                  },
                },
                {
                  key: 'generatePortId',
                  value: function () {
                    return ys();
                  },
                },
                {
                  key: 'updatePortData',
                  value: function () {
                    var e = this.validatePorts();
                    if (e.length > 0)
                      throw (
                        (this.store.set(
                          'ports',
                          this.store.getPrevious('ports')
                        ),
                        new Error(e.join(' ')))
                      );
                    var t = this.port ? this.port.getPorts() : null;
                    this.port = new Rp(this.ports);
                    var n = this.port.getPorts(),
                      r = t
                        ? n.filter(function (e) {
                            return t.find(function (t) {
                              return t.id === e.id;
                            })
                              ? null
                              : e;
                          })
                        : L()(n),
                      i = t
                        ? t.filter(function (e) {
                            return n.find(function (t) {
                              return t.id === e.id;
                            })
                              ? null
                              : e;
                          })
                        : [];
                    r.length > 0 &&
                      this.notify('ports:added', {
                        added: r,
                        cell: this,
                        node: this,
                      }),
                      i.length > 0 &&
                        this.notify('ports:removed', {
                          removed: i,
                          cell: this,
                          node: this,
                        });
                  },
                },
              ]),
              r
            );
          })(Lp, Symbol.toStringTag);
        (Ip.defaults = {
          angle: 0,
          position: { x: 0, y: 0 },
          size: { width: 1, height: 1 },
        }),
          (function (e) {
            (e.toStringTag = 'X6.'.concat(e.name)),
              (e.isNode = function (t) {
                if (null == t) return !1;
                if (t instanceof e) return !0;
                var n = t[Symbol.toStringTag],
                  r = t;
                return (
                  (null == n || n === e.toStringTag) &&
                  'function' == typeof r.isNode &&
                  'function' == typeof r.isEdge &&
                  'function' == typeof r.prop &&
                  'function' == typeof r.attr &&
                  'function' == typeof r.size &&
                  'function' == typeof r.position
                );
              });
          })(Ip || (Ip = {})),
          (function (e) {
            e.config({
              propHooks: function (e) {
                var t = e.ports,
                  n = _p(e, ['ports']);
                return t && (n.ports = Array.isArray(t) ? { items: t } : t), n;
              },
            });
          })(Ip || (Ip = {})),
          (function (e) {
            (e.registry = Ec.create({
              type: 'node',
              process: function (t, n) {
                if (Tp.exist(t, !0))
                  throw new Error(
                    "Node with name '".concat(
                      t,
                      "' was registered by anthor Edge"
                    )
                  );
                if ('function' == typeof n) return n.config({ shape: t }), n;
                var r = e,
                  i = n.inherit,
                  o = _p(n, ['inherit']);
                if (i)
                  if ('string' == typeof i) {
                    var a = this.get(i);
                    null == a ? this.onNotFound(i, 'inherited') : (r = a);
                  } else r = i;
                null == o.constructorName && (o.constructorName = t);
                var s = r.define.call(r, o);
                return s.config({ shape: t }), s;
              },
            })),
              Tp.setNodeRegistry(e.registry);
          })(Ip || (Ip = {})),
          (function (e) {
            var t = 0;
            (e.define = function (n) {
              var r,
                i = n.constructorName,
                o = n.overwrite,
                a = _p(n, ['constructorName', 'overwrite']),
                s = no(
                  (r = i || a.shape) ? ps(r) : 'CustomNode'.concat((t += 1)),
                  this
                );
              return (
                s.config(a), a.shape && e.registry.register(a.shape, s, o), s
              );
            }),
              (e.create = function (t) {
                var n = t.shape || 'rect',
                  r = e.registry.get(n);
                return r ? new r(t) : e.registry.onNotFound(n);
              });
          })(Ip || (Ip = {}));
        var Dp = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          zp = (function (e, t) {
            M()(r, e);
            var n = N()(r);
            function r() {
              var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
              return y()(this, r), n.call(this, e);
            }
            return (
              b()(r, [
                {
                  key: t,
                  get: function () {
                    return r.toStringTag;
                  },
                },
                {
                  key: 'preprocess',
                  value: function (e, t) {
                    var n = e.source,
                      i = e.sourceCell,
                      o = e.sourcePort,
                      a = e.sourcePoint,
                      s = e.target,
                      l = e.targetCell,
                      u = e.targetPort,
                      c = e.targetPoint,
                      f = Dp(e, [
                        'source',
                        'sourceCell',
                        'sourcePort',
                        'sourcePoint',
                        'target',
                        'targetCell',
                        'targetPort',
                        'targetPoint',
                      ]),
                      h = function (e) {
                        return 'string' == typeof e || 'number' == typeof e;
                      };
                    if (null != n)
                      if (Lp.isCell(n)) f.source = { cell: n.id };
                      else if (h(n)) f.source = { cell: n };
                      else if (Ku.isPoint(n)) f.source = n.toJSON();
                      else if (Array.isArray(n))
                        f.source = { x: n[0], y: n[1] };
                      else {
                        var d = n.cell;
                        Lp.isCell(d)
                          ? (f.source = Object.assign(Object.assign({}, n), {
                              cell: d.id,
                            }))
                          : (f.source = n);
                      }
                    if (null != i || null != o) {
                      var g = f.source;
                      if (null != i) {
                        var p = h(i) ? i : i.id;
                        g ? (g.cell = p) : (g = f.source = { cell: p });
                      }
                      null != o && g && (g.port = o);
                    } else null != a && (f.source = Ku.create(a).toJSON());
                    if (null != s)
                      if (Lp.isCell(s)) f.target = { cell: s.id };
                      else if (h(s)) f.target = { cell: s };
                      else if (Ku.isPoint(s)) f.target = s.toJSON();
                      else if (Array.isArray(s))
                        f.target = { x: s[0], y: s[1] };
                      else {
                        var v = s.cell;
                        Lp.isCell(v)
                          ? (f.target = Object.assign(Object.assign({}, s), {
                              cell: v.id,
                            }))
                          : (f.target = s);
                      }
                    if (null != l || null != u) {
                      var y = f.target;
                      if (null != l) {
                        var m = h(l) ? l : l.id;
                        y ? (y.cell = m) : (y = f.target = { cell: m });
                      }
                      null != u && y && (y.port = u);
                    } else null != c && (f.target = Ku.create(c).toJSON());
                    return wd()(Cd()(r.prototype), 'preprocess', this).call(
                      this,
                      f,
                      t
                    );
                  },
                },
                {
                  key: 'setup',
                  value: function () {
                    var e = this;
                    wd()(Cd()(r.prototype), 'setup', this).call(this),
                      this.on('change:labels', function (t) {
                        return e.onLabelsChanged(t);
                      }),
                      this.on('change:vertices', function (t) {
                        return e.onVertexsChanged(t);
                      });
                  },
                },
                {
                  key: 'isEdge',
                  value: function () {
                    return !0;
                  },
                },
                {
                  key: 'disconnect',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return (
                      this.store.set(
                        { source: { x: 0, y: 0 }, target: { x: 0, y: 0 } },
                        e
                      ),
                      this
                    );
                  },
                },
                {
                  key: 'source',
                  get: function () {
                    return this.getSource();
                  },
                },
                {
                  key: 'source',
                  set: function (e) {
                    this.setSource(e);
                  },
                },
                {
                  key: 'getSource',
                  value: function () {
                    return this.getTerminal('source');
                  },
                },
                {
                  key: 'getSourceCellId',
                  value: function () {
                    return this.source.cell;
                  },
                },
                {
                  key: 'getSourcePortId',
                  value: function () {
                    return this.source.port;
                  },
                },
                {
                  key: 'setSource',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    return this.setTerminal('source', e, t, n);
                  },
                },
                {
                  key: 'target',
                  get: function () {
                    return this.getTarget();
                  },
                },
                {
                  key: 'target',
                  set: function (e) {
                    this.setTarget(e);
                  },
                },
                {
                  key: 'getTarget',
                  value: function () {
                    return this.getTerminal('target');
                  },
                },
                {
                  key: 'getTargetCellId',
                  value: function () {
                    return this.target.cell;
                  },
                },
                {
                  key: 'getTargetPortId',
                  value: function () {
                    return this.target.port;
                  },
                },
                {
                  key: 'setTarget',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    return this.setTerminal('target', e, t, n);
                  },
                },
                {
                  key: 'getTerminal',
                  value: function (e) {
                    return Object.assign({}, this.store.get(e));
                  },
                },
                {
                  key: 'setTerminal',
                  value: function (e, t, n) {
                    var r =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : {};
                    if (Lp.isCell(t))
                      return (
                        this.store.set(e, wr({}, n, { cell: t.id }), r), this
                      );
                    var i = t;
                    return Ku.isPoint(t) || (null != i.x && null != i.y)
                      ? (this.store.set(e, wr({}, n, { x: i.x, y: i.y }), r),
                        this)
                      : (this.store.set(e, qi(t), r), this);
                  },
                },
                {
                  key: 'getSourcePoint',
                  value: function () {
                    return this.getTerminalPoint('source');
                  },
                },
                {
                  key: 'getTargetPoint',
                  value: function () {
                    return this.getTerminalPoint('target');
                  },
                },
                {
                  key: 'getTerminalPoint',
                  value: function (e) {
                    var t = this[e];
                    if (Ku.isPointLike(t)) return Ku.create(t);
                    var n = this.getTerminalCell(e);
                    return n ? n.getConnectionPoint(this, e) : new Ku();
                  },
                },
                {
                  key: 'getSourceCell',
                  value: function () {
                    return this.getTerminalCell('source');
                  },
                },
                {
                  key: 'getTargetCell',
                  value: function () {
                    return this.getTerminalCell('target');
                  },
                },
                {
                  key: 'getTerminalCell',
                  value: function (e) {
                    if (this.model) {
                      var t =
                        'source' === e
                          ? this.getSourceCellId()
                          : this.getTargetCellId();
                      if (t) return this.model.getCell(t);
                    }
                    return null;
                  },
                },
                {
                  key: 'getSourceNode',
                  value: function () {
                    return this.getTerminalNode('source');
                  },
                },
                {
                  key: 'getTargetNode',
                  value: function () {
                    return this.getTerminalNode('target');
                  },
                },
                {
                  key: 'getTerminalNode',
                  value: function (e) {
                    for (var t = this, n = {}; t && t.isEdge(); ) {
                      if (n[t.id]) return null;
                      (n[t.id] = !0), (t = t.getTerminalCell(e));
                    }
                    return t && t.isNode() ? t : null;
                  },
                },
                {
                  key: 'router',
                  get: function () {
                    return this.getRouter();
                  },
                },
                {
                  key: 'router',
                  set: function (e) {
                    null == e ? this.removeRouter() : this.setRouter(e);
                  },
                },
                {
                  key: 'getRouter',
                  value: function () {
                    return this.store.get('router');
                  },
                },
                {
                  key: 'setRouter',
                  value: function (e, t, n) {
                    return (
                      'object' === _()(e)
                        ? this.store.set('router', e, t)
                        : this.store.set('router', { name: e, args: t }, n),
                      this
                    );
                  },
                },
                {
                  key: 'removeRouter',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return this.store.remove('router', e), this;
                  },
                },
                {
                  key: 'connector',
                  get: function () {
                    return this.getConnector();
                  },
                },
                {
                  key: 'connector',
                  set: function (e) {
                    null == e ? this.removeConnector() : this.setConnector(e);
                  },
                },
                {
                  key: 'getConnector',
                  value: function () {
                    return this.store.get('connector');
                  },
                },
                {
                  key: 'setConnector',
                  value: function (e, t, n) {
                    return (
                      'object' === _()(e)
                        ? this.store.set('connector', e, t)
                        : this.store.set('connector', { name: e, args: t }, n),
                      this
                    );
                  },
                },
                {
                  key: 'removeConnector',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return this.store.remove('connector', e);
                  },
                },
                {
                  key: 'getDefaultLabel',
                  value: function () {
                    var e = this.constructor,
                      t =
                        this.store.get('defaultLabel') || e.defaultLabel || {};
                    return qi(t);
                  },
                },
                {
                  key: 'labels',
                  get: function () {
                    return this.getLabels();
                  },
                },
                {
                  key: 'labels',
                  set: function (e) {
                    this.setLabels(e);
                  },
                },
                {
                  key: 'getLabels',
                  value: function () {
                    var e = this;
                    return L()(this.store.get('labels', [])).map(function (t) {
                      return e.parseLabel(t);
                    });
                  },
                },
                {
                  key: 'setLabels',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return (
                      this.store.set('labels', Array.isArray(e) ? e : [e], t),
                      this
                    );
                  },
                },
                {
                  key: 'insertLabel',
                  value: function (e, t) {
                    var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      r = this.getLabels(),
                      i = r.length,
                      o = null != t && Number.isFinite(t) ? t : i;
                    return (
                      o < 0 && (o = i + o + 1),
                      r.splice(o, 0, this.parseLabel(e)),
                      this.setLabels(r, n)
                    );
                  },
                },
                {
                  key: 'appendLabel',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.insertLabel(e, -1, t);
                  },
                },
                {
                  key: 'getLabelAt',
                  value: function (e) {
                    var t = this.getLabels();
                    return null != e && Number.isFinite(e)
                      ? this.parseLabel(t[e])
                      : null;
                  },
                },
                {
                  key: 'setLabelAt',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    if (null != e && Number.isFinite(e)) {
                      var r = this.getLabels();
                      (r[e] = this.parseLabel(t)), this.setLabels(r, n);
                    }
                    return this;
                  },
                },
                {
                  key: 'removeLabelAt',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = this.getLabels(),
                      r = null != e && Number.isFinite(e) ? e : -1,
                      i = n.splice(r, 1);
                    return this.setLabels(n, t), i.length ? i[0] : null;
                  },
                },
                {
                  key: 'parseLabel',
                  value: function (e) {
                    return 'string' == typeof e
                      ? this.constructor.parseStringLabel(e)
                      : e;
                  },
                },
                {
                  key: 'onLabelsChanged',
                  value: function (e) {
                    var t = e.previous,
                      n = e.current,
                      r =
                        t && n
                          ? n.filter(function (e) {
                              return t.find(function (t) {
                                return e === t || pi(e, t);
                              })
                                ? null
                                : e;
                            })
                          : n
                          ? L()(n)
                          : [],
                      i =
                        t && n
                          ? t.filter(function (e) {
                              return n.find(function (t) {
                                return e === t || pi(e, t);
                              })
                                ? null
                                : e;
                            })
                          : t
                          ? L()(t)
                          : [];
                    r.length > 0 &&
                      this.notify('labels:added', {
                        added: r,
                        cell: this,
                        edge: this,
                      }),
                      i.length > 0 &&
                        this.notify('labels:removed', {
                          removed: i,
                          cell: this,
                          edge: this,
                        });
                  },
                },
                {
                  key: 'vertices',
                  get: function () {
                    return this.getVertices();
                  },
                },
                {
                  key: 'vertices',
                  set: function (e) {
                    this.setVertices(e);
                  },
                },
                {
                  key: 'getVertices',
                  value: function () {
                    return L()(this.store.get('vertices', []));
                  },
                },
                {
                  key: 'setVertices',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = Array.isArray(e) ? e : [e];
                    return (
                      this.store.set(
                        'vertices',
                        n.map(function (e) {
                          return Ku.toJSON(e);
                        }),
                        t
                      ),
                      this
                    );
                  },
                },
                {
                  key: 'insertVertex',
                  value: function (e, t) {
                    var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      r = this.getVertices(),
                      i = r.length,
                      o = null != t && Number.isFinite(t) ? t : i;
                    return (
                      o < 0 && (o = i + o + 1),
                      r.splice(o, 0, Ku.toJSON(e)),
                      this.setVertices(r, n)
                    );
                  },
                },
                {
                  key: 'appendVertex',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.insertVertex(e, -1, t);
                  },
                },
                {
                  key: 'getVertexAt',
                  value: function (e) {
                    return null != e && Number.isFinite(e)
                      ? this.getVertices()[e]
                      : null;
                  },
                },
                {
                  key: 'setVertexAt',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    if (null != e && Number.isFinite(e)) {
                      var r = this.getVertices();
                      (r[e] = t), this.setVertices(r, n);
                    }
                    return this;
                  },
                },
                {
                  key: 'removeVertexAt',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = this.getVertices(),
                      r = null != e && Number.isFinite(e) ? e : -1;
                    return n.splice(r, 1), this.setVertices(n, t);
                  },
                },
                {
                  key: 'onVertexsChanged',
                  value: function (e) {
                    var t = e.previous,
                      n = e.current,
                      r =
                        t && n
                          ? n.filter(function (e) {
                              return t.find(function (t) {
                                return Ku.equals(e, t);
                              })
                                ? null
                                : e;
                            })
                          : n
                          ? L()(n)
                          : [],
                      i =
                        t && n
                          ? t.filter(function (e) {
                              return n.find(function (t) {
                                return Ku.equals(e, t);
                              })
                                ? null
                                : e;
                            })
                          : t
                          ? L()(t)
                          : [];
                    r.length > 0 &&
                      this.notify('vertexs:added', {
                        added: r,
                        cell: this,
                        edge: this,
                      }),
                      i.length > 0 &&
                        this.notify('vertexs:removed', {
                          removed: i,
                          cell: this,
                          edge: this,
                        });
                  },
                },
                {
                  key: 'getDefaultMarkup',
                  value: function () {
                    return (
                      this.store.get('defaultMarkup') || Ed.getEdgeMarkup()
                    );
                  },
                },
                {
                  key: 'getMarkup',
                  value: function () {
                    return (
                      wd()(Cd()(r.prototype), 'getMarkup', this).call(this) ||
                      this.getDefaultMarkup()
                    );
                  },
                },
                {
                  key: 'translate',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    return (
                      (n.translateBy = n.translateBy || this.id),
                      (n.tx = e),
                      (n.ty = t),
                      this.applyToPoints(function (n) {
                        return { x: (n.x || 0) + e, y: (n.y || 0) + t };
                      }, n)
                    );
                  },
                },
                {
                  key: 'scale',
                  value: function (e, t, n) {
                    var r =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : {};
                    return this.applyToPoints(function (r) {
                      return Ku.create(r).scale(e, t, n).toJSON();
                    }, r);
                  },
                },
                {
                  key: 'applyToPoints',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = {},
                      r = this.getSource(),
                      i = this.getTarget();
                    Ku.isPointLike(r) && (n.source = e(r)),
                      Ku.isPointLike(i) && (n.target = e(i));
                    var o = this.getVertices();
                    return (
                      o.length > 0 && (n.vertices = o.map(e)),
                      this.store.set(n, t),
                      this
                    );
                  },
                },
                {
                  key: 'getBBox',
                  value: function () {
                    return this.getPolyline().bbox();
                  },
                },
                {
                  key: 'getConnectionPoint',
                  value: function () {
                    return this.getPolyline().pointAt(0.5);
                  },
                },
                {
                  key: 'getPolyline',
                  value: function () {
                    var e = [this.getSourcePoint()].concat(
                      L()(
                        this.getVertices().map(function (e) {
                          return Ku.create(e);
                        })
                      ),
                      [this.getTargetPoint()]
                    );
                    return new fc(e);
                  },
                },
                {
                  key: 'updateParent',
                  value: function (e) {
                    var t = null,
                      n = this.getSourceCell(),
                      r = this.getTargetCell(),
                      i = this.getParent();
                    return (
                      n &&
                        r &&
                        (t =
                          n === r || n.isDescendantOf(r)
                            ? r
                            : r.isDescendantOf(n)
                            ? n
                            : Lp.getCommonAncestor(n, r)),
                      !i || (t && t.id === i.id) || i.unembed(this, e),
                      t && t.embed(this, e),
                      t
                    );
                  },
                },
                {
                  key: 'hasLoop',
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      t = this.getSource(),
                      n = this.getTarget(),
                      r = t.cell,
                      i = n.cell;
                    if (!r || !i) return !1;
                    var o = r === i;
                    if (!o && e.deep && this._model) {
                      var a = this.getSourceCell(),
                        s = this.getTargetCell();
                      a &&
                        s &&
                        (o = a.isAncestorOf(s, e) || s.isAncestorOf(a, e));
                    }
                    return o;
                  },
                },
                {
                  key: 'getFragmentAncestor',
                  value: function () {
                    var e = [
                      this,
                      this.getSourceNode(),
                      this.getTargetNode(),
                    ].filter(function (e) {
                      return null != e;
                    });
                    return this.getCommonAncestor.apply(this, L()(e));
                  },
                },
                {
                  key: 'isFragmentDescendantOf',
                  value: function (e) {
                    var t = this.getFragmentAncestor();
                    return !!t && (t.id === e.id || t.isDescendantOf(e));
                  },
                },
              ]),
              r
            );
          })(Lp, Symbol.toStringTag);
        (zp.defaults = {}),
          (function (e) {
            e.equalTerminals = function (e, t) {
              var n = e,
                r = t;
              return (
                n.cell === r.cell &&
                (n.port === r.port || (null == n.port && null == r.port))
              );
            };
          })(zp || (zp = {})),
          (function (e) {
            (e.defaultLabel = {
              markup: [
                { tagName: 'rect', selector: 'body' },
                { tagName: 'text', selector: 'label' },
              ],
              attrs: {
                text: {
                  fill: '#000',
                  fontSize: 14,
                  textAnchor: 'middle',
                  textVerticalAnchor: 'middle',
                  pointerEvents: 'none',
                },
                rect: {
                  ref: 'label',
                  fill: '#fff',
                  rx: 3,
                  ry: 3,
                  refWidth: 1,
                  refHeight: 1,
                  refX: 0,
                  refY: 0,
                },
              },
              position: { distance: 0.5 },
            }),
              (e.parseStringLabel = function (e) {
                return { attrs: { label: { text: e } } };
              });
          })(zp || (zp = {})),
          (function (e) {
            (e.toStringTag = 'X6.'.concat(e.name)),
              (e.isEdge = function (t) {
                if (null == t) return !1;
                if (t instanceof e) return !0;
                var n = t[Symbol.toStringTag],
                  r = t;
                return (
                  (null == n || n === e.toStringTag) &&
                  'function' == typeof r.isNode &&
                  'function' == typeof r.isEdge &&
                  'function' == typeof r.prop &&
                  'function' == typeof r.attr &&
                  'function' == typeof r.disconnect &&
                  'function' == typeof r.getSource &&
                  'function' == typeof r.getTarget
                );
              });
          })(zp || (zp = {})),
          (function (e) {
            (e.registry = Ec.create({
              type: 'edge',
              process: function (t, n) {
                if (Tp.exist(t, !1))
                  throw new Error(
                    "Edge with name '".concat(
                      t,
                      "' was registered by anthor Node"
                    )
                  );
                if ('function' == typeof n) return n.config({ shape: t }), n;
                var r = e,
                  i = n.inherit,
                  o = void 0 === i ? 'edge' : i,
                  a = Dp(n, ['inherit']);
                if ('string' == typeof o) {
                  var s = this.get(o || 'edge');
                  null == s && o ? this.onNotFound(o, 'inherited') : (r = s);
                } else r = o;
                null == a.constructorName && (a.constructorName = t);
                var l = r.define.call(r, a);
                return l.config({ shape: t }), l;
              },
            })),
              Tp.setEdgeRegistry(e.registry);
          })(zp || (zp = {})),
          (function (e) {
            var t = 0;
            (e.define = function (n) {
              var r,
                i = n.constructorName,
                o = n.overwrite,
                a = Dp(n, ['constructorName', 'overwrite']),
                s = no(
                  (r = i || a.shape) ? ps(r) : 'CustomEdge'.concat((t += 1)),
                  this
                );
              return (
                s.config(a), a.shape && e.registry.register(a.shape, s, o), s
              );
            }),
              (e.create = function (t) {
                var n = t.shape || 'edge',
                  r = e.registry.get(n);
                return r ? new r(t) : e.registry.onNotFound(n);
              });
          })(zp || (zp = {})),
          (function (e) {
            var t = 'basic.edge';
            e.config({
              shape: t,
              propHooks: function (t) {
                var n = t.label,
                  r = t.vertices,
                  i = Dp(t, ['label', 'vertices']);
                if (n) {
                  null == i.labels && (i.labels = []);
                  var o = 'string' == typeof n ? e.parseStringLabel(n) : n;
                  i.labels.push(o);
                }
                return (
                  r &&
                    Array.isArray(r) &&
                    (i.vertices = r.map(function (e) {
                      return Ku.create(e).toJSON();
                    })),
                  i
                );
              },
            }),
              e.registry.register(t, e);
          })(zp || (zp = {}));
        var Bp = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n(e) {
              var r,
                i =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
              return (
                y()(this, n),
                ((r = t.call(this)).length = 0),
                (r.comparator = i.comparator || 'zIndex'),
                r.clean(),
                e && r.reset(e, { silent: !0 }),
                r
              );
            }
            return (
              b()(n, [
                {
                  key: 'toJSON',
                  value: function () {
                    return this.cells.map(function (e) {
                      return e.toJSON();
                    });
                  },
                },
                {
                  key: 'add',
                  value: function (e, t, n) {
                    var r,
                      i,
                      o = this;
                    'number' == typeof t
                      ? ((r = t), (i = Object.assign({ merge: !1 }, n)))
                      : ((r = this.length),
                        (i = Object.assign({ merge: !1 }, t))),
                      r > this.length && (r = this.length),
                      r < 0 && (r += this.length + 1);
                    var a,
                      s = Array.isArray(e) ? e : [e],
                      l =
                        this.comparator &&
                        'number' != typeof t &&
                        !1 !== i.sort,
                      u = this.comparator || null,
                      c = !1,
                      f = [],
                      h = [];
                    (s.forEach(function (e) {
                      var t = o.get(e);
                      t
                        ? i.merge &&
                          !e.isSameStore(t) &&
                          (t.setProp(e.getProp(), n),
                          h.push(t),
                          l &&
                            !c &&
                            (c =
                              null == u || 'function' == typeof u
                                ? t.hasChanged()
                                : 'string' == typeof u
                                ? t.hasChanged(u)
                                : u.some(function (e) {
                                    return t.hasChanged(e);
                                  })))
                        : (f.push(e), o.reference(e));
                    }),
                    f.length) &&
                      (l && (c = !0),
                      (a = this.cells).splice.apply(a, [r, 0].concat(f)),
                      (this.length = this.cells.length));
                    return (
                      c && this.sort({ silent: !0 }),
                      i.silent ||
                        (f.forEach(function (e, t) {
                          var n = { cell: e, index: r + t, options: i };
                          o.trigger('added', n),
                            i.dryrun || e.notify('added', Object.assign({}, n));
                        }),
                        c && this.trigger('sorted'),
                        (f.length || h.length) &&
                          this.trigger('updated', {
                            added: f,
                            merged: h,
                            removed: [],
                            options: i,
                          })),
                      this
                    );
                  },
                },
                {
                  key: 'remove',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = Array.isArray(e) ? e : [e],
                      r = this.removeCells(n, t);
                    return (
                      !t.silent &&
                        r.length > 0 &&
                        this.trigger('updated', {
                          options: t,
                          removed: r,
                          added: [],
                          merged: [],
                        }),
                      Array.isArray(e) ? r : r[0]
                    );
                  },
                },
                {
                  key: 'removeCells',
                  value: function (e, t) {
                    for (var n = [], r = 0; r < e.length; r += 1) {
                      var i = this.get(e[r]);
                      if (null != i) {
                        var o = this.cells.indexOf(i);
                        this.cells.splice(o, 1),
                          (this.length -= 1),
                          delete this.map[i.id],
                          n.push(i),
                          this.unreference(i),
                          t.dryrun || i.remove(),
                          t.silent ||
                            (this.trigger('removed', {
                              cell: i,
                              index: o,
                              options: t,
                            }),
                            t.dryrun ||
                              i.notify('removed', {
                                cell: i,
                                index: o,
                                options: t,
                              }));
                      }
                    }
                    return n;
                  },
                },
                {
                  key: 'reset',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      r = this.cells.slice();
                    if (
                      (r.forEach(function (e) {
                        return t.unreference(e);
                      }),
                      this.clean(),
                      this.add(e, Object.assign({ silent: !0 }, n)),
                      !n.silent)
                    ) {
                      var i = this.cells.slice();
                      this.trigger('reseted', {
                        options: n,
                        previous: r,
                        current: i,
                      });
                      var o = [],
                        a = [];
                      i.forEach(function (e) {
                        r.some(function (t) {
                          return t.id === e.id;
                        }) || o.push(e);
                      }),
                        r.forEach(function (e) {
                          i.some(function (t) {
                            return t.id === e.id;
                          }) || a.push(e);
                        }),
                        this.trigger('updated', {
                          options: n,
                          added: o,
                          removed: a,
                          merged: [],
                        });
                    }
                    return this;
                  },
                },
                {
                  key: 'push',
                  value: function (e, t) {
                    return this.add(e, this.length, t);
                  },
                },
                {
                  key: 'pop',
                  value: function (e) {
                    var t = this.at(this.length - 1);
                    return this.remove(t, e);
                  },
                },
                {
                  key: 'unshift',
                  value: function (e, t) {
                    return this.add(e, 0, t);
                  },
                },
                {
                  key: 'shift',
                  value: function (e) {
                    var t = this.at(0);
                    return this.remove(t, e);
                  },
                },
                {
                  key: 'get',
                  value: function (e) {
                    if (null == e) return null;
                    var t =
                      'string' == typeof e || 'number' == typeof e ? e : e.id;
                    return this.map[t] || null;
                  },
                },
                {
                  key: 'has',
                  value: function (e) {
                    return null != this.get(e);
                  },
                },
                {
                  key: 'at',
                  value: function (e) {
                    return e < 0 && (e += this.length), this.cells[e] || null;
                  },
                },
                {
                  key: 'first',
                  value: function () {
                    return this.at(0);
                  },
                },
                {
                  key: 'last',
                  value: function () {
                    return this.at(-1);
                  },
                },
                {
                  key: 'indexOf',
                  value: function (e) {
                    return this.cells.indexOf(e);
                  },
                },
                {
                  key: 'toArray',
                  value: function () {
                    return this.cells.slice();
                  },
                },
                {
                  key: 'sort',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return (
                      null != this.comparator &&
                        ((this.cells = Go(this.cells, this.comparator)),
                        e.silent || this.trigger('sorted')),
                      this
                    );
                  },
                },
                {
                  key: 'clone',
                  value: function () {
                    return new (0, this.constructor)(this.cells.slice(), {
                      comparator: this.comparator,
                    });
                  },
                },
                {
                  key: 'reference',
                  value: function (e) {
                    (this.map[e.id] = e), e.on('*', this.notifyCellEvent, this);
                  },
                },
                {
                  key: 'unreference',
                  value: function (e) {
                    e.off('*', this.notifyCellEvent, this),
                      delete this.map[e.id];
                  },
                },
                {
                  key: 'notifyCellEvent',
                  value: function (e, t) {
                    var n = t.cell;
                    this.trigger('cell:'.concat(e), t),
                      n &&
                        (n.isNode()
                          ? this.trigger(
                              'node:'.concat(e),
                              Object.assign(Object.assign({}, t), { node: n })
                            )
                          : n.isEdge() &&
                            this.trigger(
                              'edge:'.concat(e),
                              Object.assign(Object.assign({}, t), { edge: n })
                            ));
                  },
                },
                {
                  key: 'clean',
                  value: function () {
                    (this.length = 0), (this.cells = []), (this.map = {});
                  },
                },
              ]),
              n
            );
          })(so),
          Vp = (function (e, t) {
            M()(r, e);
            var n = N()(r);
            function r() {
              var e,
                t =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : [];
              return (
                y()(this, r),
                ((e = n.call(this)).batches = {}),
                (e.addings = new WeakMap()),
                (e.nodes = {}),
                (e.edges = {}),
                (e.outgoings = {}),
                (e.incomings = {}),
                (e.collection = new Bp(t)),
                e.setup(),
                e
              );
            }
            return (
              b()(r, [
                {
                  key: t,
                  get: function () {
                    return r.toStringTag;
                  },
                },
                {
                  key: 'notify',
                  value: function (e, t) {
                    this.trigger(e, t);
                    var n = this.graph;
                    return (
                      n &&
                        ('sorted' === e || 'reseted' === e || 'updated' === e
                          ? n.trigger('model:'.concat(e), t)
                          : n.trigger(e, t)),
                      this
                    );
                  },
                },
                {
                  key: 'setup',
                  value: function () {
                    var e = this,
                      t = this.collection;
                    t.on('sorted', function () {
                      return e.notify('sorted', null);
                    }),
                      t.on('updated', function (t) {
                        return e.notify('updated', t);
                      }),
                      t.on('cell:change:zIndex', function () {
                        return e.sortOnChangeZ();
                      }),
                      t.on('added', function (t) {
                        var n = t.cell;
                        e.onCellAdded(n);
                      }),
                      t.on('removed', function (t) {
                        var n = t.cell;
                        e.onCellRemoved(n, t.options),
                          e.notify('cell:removed', t),
                          n.isNode()
                            ? e.notify(
                                'node:removed',
                                Object.assign(Object.assign({}, t), { node: n })
                              )
                            : n.isEdge() &&
                              e.notify(
                                'edge:removed',
                                Object.assign(Object.assign({}, t), { edge: n })
                              );
                      }),
                      t.on('reseted', function (t) {
                        e.onReset(t.current), e.notify('reseted', t);
                      }),
                      t.on('edge:change:source', function (t) {
                        var n = t.edge;
                        return e.onEdgeTerminalChanged(n, 'source');
                      }),
                      t.on('edge:change:target', function (t) {
                        var n = t.edge;
                        e.onEdgeTerminalChanged(n, 'target');
                      });
                  },
                },
                {
                  key: 'sortOnChangeZ',
                  value: function () {
                    this.collection.sort();
                  },
                },
                {
                  key: 'onCellAdded',
                  value: function (e) {
                    var t = e.id;
                    e.isEdge()
                      ? (e.updateParent(),
                        (this.edges[t] = !0),
                        this.onEdgeTerminalChanged(e, 'source'),
                        this.onEdgeTerminalChanged(e, 'target'))
                      : (this.nodes[t] = !0);
                  },
                },
                {
                  key: 'onCellRemoved',
                  value: function (e, t) {
                    var n = e.id;
                    if (e.isEdge()) {
                      delete this.edges[n];
                      var r = e.getSource(),
                        i = e.getTarget();
                      if (r && r.cell) {
                        var o = this.outgoings[r.cell],
                          a = o ? o.indexOf(n) : -1;
                        a >= 0 &&
                          (o.splice(a, 1),
                          0 === o.length && delete this.outgoings[r.cell]);
                      }
                      if (i && i.cell) {
                        var s = this.incomings[i.cell],
                          l = s ? s.indexOf(n) : -1;
                        l >= 0 &&
                          (s.splice(l, 1),
                          0 === s.length && delete this.incomings[i.cell]);
                      }
                    } else delete this.nodes[n];
                    t.clear ||
                      (t.disconnectEdges
                        ? this.disconnectConnectedEdges(e, t)
                        : this.removeConnectedEdges(e, t)),
                      e.model === this && (e.model = null);
                  },
                },
                {
                  key: 'onReset',
                  value: function (e) {
                    var t = this;
                    (this.nodes = {}),
                      (this.edges = {}),
                      (this.outgoings = {}),
                      (this.incomings = {}),
                      e.forEach(function (e) {
                        return t.onCellAdded(e);
                      });
                  },
                },
                {
                  key: 'onEdgeTerminalChanged',
                  value: function (e, t) {
                    var n = 'source' === t ? this.outgoings : this.incomings,
                      r = e.previous(t);
                    if (r && r.cell) {
                      var i = Lp.isCell(r.cell) ? r.cell.id : r.cell,
                        o = n[i],
                        a = o ? o.indexOf(e.id) : -1;
                      a >= 0 && (o.splice(a, 1), 0 === o.length && delete n[i]);
                    }
                    var s = e.getTerminal(t);
                    if (s && s.cell) {
                      var l = Lp.isCell(s.cell) ? s.cell.id : s.cell,
                        u = n[l] || [];
                      -1 === u.indexOf(e.id) && u.push(e.id), (n[l] = u);
                    }
                  },
                },
                {
                  key: 'prepareCell',
                  value: function (e, t) {
                    return (
                      e.model || (t && t.dryrun) || (e.model = this),
                      null == e.zIndex &&
                        e.setZIndex(this.getMaxZIndex() + 1, { silent: !0 }),
                      e
                    );
                  },
                },
                {
                  key: 'resetCells',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                    return (
                      e.map(function (e) {
                        return t.prepareCell(
                          e,
                          Object.assign(Object.assign({}, n), { dryrun: !0 })
                        );
                      }),
                      this.collection.reset(e, n),
                      e.map(function (e) {
                        return t.prepareCell(e, { options: n });
                      }),
                      this
                    );
                  },
                },
                {
                  key: 'clear',
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      t = this.getCells();
                    if (0 === t.length) return this;
                    var n = Object.assign(Object.assign({}, e), { clear: !0 });
                    return (
                      this.batchUpdate(
                        'clear',
                        function () {
                          for (
                            var e = t.sort(function (e, t) {
                              return (
                                (e.isEdge() ? 1 : 2) - (t.isEdge() ? 1 : 2)
                              );
                            });
                            e.length > 0;

                          ) {
                            var r = e.shift();
                            r && r.remove(n);
                          }
                        },
                        n
                      ),
                      this
                    );
                  },
                },
                {
                  key: 'addNode',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = Ip.isNode(e) ? e : this.createNode(e);
                    return this.addCell(n, t), n;
                  },
                },
                {
                  key: 'updateNode',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = this.createNode(e),
                      r = n.getProp();
                    return n.dispose(), this.updateCell(r, t);
                  },
                },
                {
                  key: 'createNode',
                  value: function (e) {
                    return Ip.create(e);
                  },
                },
                {
                  key: 'addEdge',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = zp.isEdge(e) ? e : this.createEdge(e);
                    return this.addCell(n, t), n;
                  },
                },
                {
                  key: 'createEdge',
                  value: function (e) {
                    return zp.create(e);
                  },
                },
                {
                  key: 'updateEdge',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = this.createEdge(e),
                      r = n.getProp();
                    return n.dispose(), this.updateCell(r, t);
                  },
                },
                {
                  key: 'addCell',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                    return Array.isArray(e)
                      ? this.addCells(e, n)
                      : (this.collection.has(e) ||
                          this.addings.has(e) ||
                          (this.addings.set(e, !0),
                          this.collection.add(this.prepareCell(e, n), n),
                          e.eachChild(function (e) {
                            return t.addCell(e, n);
                          }),
                          this.addings.delete(e)),
                        this);
                  },
                },
                {
                  key: 'addCells',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      r = e.length;
                    if (0 === r) return this;
                    var i = Object.assign(Object.assign({}, n), {
                      position: r - 1,
                      maxPosition: r - 1,
                    });
                    return (
                      this.startBatch(
                        'add',
                        Object.assign(Object.assign({}, i), { cells: e })
                      ),
                      e.forEach(function (e) {
                        t.addCell(e, i), (i.position -= 1);
                      }),
                      this.stopBatch(
                        'add',
                        Object.assign(Object.assign({}, i), { cells: e })
                      ),
                      this
                    );
                  },
                },
                {
                  key: 'updateCell',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = e.id && this.getCell(e.id);
                    return (
                      !!n &&
                      this.batchUpdate(
                        'update',
                        function () {
                          return (
                            Object.entries(e).forEach(function (e) {
                              var r = ql()(e, 2),
                                i = r[0],
                                o = r[1];
                              return n.setProp(i, o, t);
                            }),
                            !0
                          );
                        },
                        e
                      )
                    );
                  },
                },
                {
                  key: 'removeCell',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = 'string' == typeof e ? this.getCell(e) : e;
                    return n && this.has(n)
                      ? this.collection.remove(n, t)
                      : null;
                  },
                },
                {
                  key: 'updateCellId',
                  value: function (e, t) {
                    this.startBatch('update', { id: t }), e.prop('id', t);
                    var n = e.clone({ keepId: !0 });
                    return (
                      this.addCell(n),
                      this.getConnectedEdges(e).forEach(function (n) {
                        var r = n.getSourceCell(),
                          i = n.getTargetCell();
                        r === e &&
                          n.setSource(
                            Object.assign(Object.assign({}, n.getSource()), {
                              cell: t,
                            })
                          ),
                          i === e &&
                            n.setTarget(
                              Object.assign(Object.assign({}, n.getTarget()), {
                                cell: t,
                              })
                            );
                      }),
                      this.removeCell(e),
                      this.stopBatch('update', { id: t }),
                      n
                    );
                  },
                },
                {
                  key: 'removeCells',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                    return e.length
                      ? this.batchUpdate('remove', function () {
                          return e.map(function (e) {
                            return t.removeCell(e, n);
                          });
                        })
                      : [];
                  },
                },
                {
                  key: 'removeConnectedEdges',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = this.getConnectedEdges(e);
                    return (
                      n.forEach(function (e) {
                        e.remove(t);
                      }),
                      n
                    );
                  },
                },
                {
                  key: 'disconnectConnectedEdges',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = 'string' == typeof e ? e : e.id;
                    this.getConnectedEdges(e).forEach(function (e) {
                      var r = e.getSourceCellId(),
                        i = e.getTargetCellId();
                      r === n && e.setSource({ x: 0, y: 0 }, t),
                        i === n && e.setTarget({ x: 0, y: 0 }, t);
                    });
                  },
                },
                {
                  key: 'has',
                  value: function (e) {
                    return this.collection.has(e);
                  },
                },
                {
                  key: 'total',
                  value: function () {
                    return this.collection.length;
                  },
                },
                {
                  key: 'indexOf',
                  value: function (e) {
                    return this.collection.indexOf(e);
                  },
                },
                {
                  key: 'getCell',
                  value: function (e) {
                    return this.collection.get(e);
                  },
                },
                {
                  key: 'getCells',
                  value: function () {
                    return this.collection.toArray();
                  },
                },
                {
                  key: 'getFirstCell',
                  value: function () {
                    return this.collection.first();
                  },
                },
                {
                  key: 'getLastCell',
                  value: function () {
                    return this.collection.last();
                  },
                },
                {
                  key: 'getMinZIndex',
                  value: function () {
                    var e = this.collection.first();
                    return (e && e.getZIndex()) || 0;
                  },
                },
                {
                  key: 'getMaxZIndex',
                  value: function () {
                    var e = this.collection.last();
                    return (e && e.getZIndex()) || 0;
                  },
                },
                {
                  key: 'getCellsFromCache',
                  value: function (e) {
                    var t = this;
                    return e
                      ? Object.keys(e)
                          .map(function (e) {
                            return t.getCell(e);
                          })
                          .filter(function (e) {
                            return null != e;
                          })
                      : [];
                  },
                },
                {
                  key: 'getNodes',
                  value: function () {
                    return this.getCellsFromCache(this.nodes);
                  },
                },
                {
                  key: 'getEdges',
                  value: function () {
                    return this.getCellsFromCache(this.edges);
                  },
                },
                {
                  key: 'getOutgoingEdges',
                  value: function (e) {
                    var t = this,
                      n = 'string' == typeof e ? e : e.id,
                      r = this.outgoings[n];
                    return r
                      ? r
                          .map(function (e) {
                            return t.getCell(e);
                          })
                          .filter(function (e) {
                            return e && e.isEdge();
                          })
                      : null;
                  },
                },
                {
                  key: 'getIncomingEdges',
                  value: function (e) {
                    var t = this,
                      n = 'string' == typeof e ? e : e.id,
                      r = this.incomings[n];
                    return r
                      ? r
                          .map(function (e) {
                            return t.getCell(e);
                          })
                          .filter(function (e) {
                            return e && e.isEdge();
                          })
                      : null;
                  },
                },
                {
                  key: 'getConnectedEdges',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      r = [],
                      i = 'string' == typeof e ? this.getCell(e) : e;
                    if (null == i) return r;
                    var o = {},
                      a = n.indirect,
                      s = n.incoming,
                      l = n.outgoing;
                    null == s && null == l && (s = l = !0);
                    var u = function e(n, i) {
                      var u = i ? t.getOutgoingEdges(n) : t.getIncomingEdges(n);
                      if (
                        (null != u &&
                          u.forEach(function (t) {
                            o[t.id] ||
                              (r.push(t),
                              (o[t.id] = !0),
                              a && (s && e(t, !1), l && e(t, !0)));
                          }),
                        a && n.isEdge())
                      ) {
                        var c = i ? n.getTargetCell() : n.getSourceCell();
                        c && c.isEdge() && (o[c.id] || (r.push(c), e(c, i)));
                      }
                    };
                    if ((l && u(i, !0), s && u(i, !1), n.deep)) {
                      var c = i.getDescendants({ deep: !0 }),
                        f = {};
                      c.forEach(function (e) {
                        e.isNode() && (f[e.id] = !0);
                      });
                      var h = function (e, i) {
                        var a = i
                          ? t.getOutgoingEdges(e.id)
                          : t.getIncomingEdges(e.id);
                        null != a &&
                          a.forEach(function (e) {
                            if (!o[e.id]) {
                              var t = e.getSourceCell(),
                                i = e.getTargetCell();
                              if (!n.enclosed && t && f[t.id] && i && f[i.id])
                                return;
                              r.push(e), (o[e.id] = !0);
                            }
                          });
                      };
                      c.forEach(function (e) {
                        e.isEdge() || (l && h(e, !0), s && h(e, !1));
                      });
                    }
                    return r;
                  },
                },
                {
                  key: 'isBoundary',
                  value: function (e, t) {
                    var n = 'string' == typeof e ? this.getCell(e) : e,
                      r = t
                        ? this.getIncomingEdges(n)
                        : this.getOutgoingEdges(n);
                    return null == r || 0 === r.length;
                  },
                },
                {
                  key: 'getBoundaryNodes',
                  value: function (e) {
                    var t = this,
                      n = [];
                    return (
                      Object.keys(this.nodes).forEach(function (r) {
                        if (t.isBoundary(r, e)) {
                          var i = t.getCell(r);
                          i && n.push(i);
                        }
                      }),
                      n
                    );
                  },
                },
                {
                  key: 'getRoots',
                  value: function () {
                    return this.getBoundaryNodes(!0);
                  },
                },
                {
                  key: 'getLeafs',
                  value: function () {
                    return this.getBoundaryNodes(!1);
                  },
                },
                {
                  key: 'isRoot',
                  value: function (e) {
                    return this.isBoundary(e, !0);
                  },
                },
                {
                  key: 'isLeaf',
                  value: function (e) {
                    return this.isBoundary(e, !1);
                  },
                },
                {
                  key: 'getNeighbors',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = t.incoming,
                      r = t.outgoing;
                    null == n && null == r && (n = r = !0);
                    var i = this.getConnectedEdges(e, t),
                      o = i.reduce(function (i, o) {
                        var a = o.hasLoop(t),
                          s = o.getSourceCell(),
                          l = o.getTargetCell();
                        return (
                          n &&
                            s &&
                            s.isNode() &&
                            !i[s.id] &&
                            ((!a &&
                              (s === e || (t.deep && s.isDescendantOf(e)))) ||
                              (i[s.id] = s)),
                          r &&
                            l &&
                            l.isNode() &&
                            !i[l.id] &&
                            ((!a &&
                              (l === e || (t.deep && l.isDescendantOf(e)))) ||
                              (i[l.id] = l)),
                          i
                        );
                      }, {});
                    if (e.isEdge()) {
                      if (n) {
                        var a = e.getSourceCell();
                        a && a.isNode() && !o[a.id] && (o[a.id] = a);
                      }
                      if (r) {
                        var s = e.getTargetCell();
                        s && s.isNode() && !o[s.id] && (o[s.id] = s);
                      }
                    }
                    return Object.keys(o).map(function (e) {
                      return o[e];
                    });
                  },
                },
                {
                  key: 'isNeighbor',
                  value: function (e, t) {
                    var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      r = n.incoming,
                      i = n.outgoing;
                    return (
                      null == r && null == i && (r = i = !0),
                      this.getConnectedEdges(e, n).some(function (e) {
                        var n = e.getSourceCell(),
                          o = e.getTargetCell();
                        return (
                          !(!r || !n || n.id !== t.id) ||
                          !(!i || !o || o.id !== t.id)
                        );
                      })
                    );
                  },
                },
                {
                  key: 'getSuccessors',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      r = [];
                    return (
                      this.search(
                        e,
                        function (i, o) {
                          i !== e &&
                            t.matchDistance(o, n.distance) &&
                            r.push(i);
                        },
                        Object.assign(Object.assign({}, n), { outgoing: !0 })
                      ),
                      r
                    );
                  },
                },
                {
                  key: 'isSuccessor',
                  value: function (e, t) {
                    var n = this,
                      r =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      i = !1;
                    return (
                      this.search(
                        e,
                        function (o, a) {
                          if (
                            o === t &&
                            o !== e &&
                            n.matchDistance(a, r.distance)
                          )
                            return (i = !0), !1;
                        },
                        Object.assign(Object.assign({}, r), { outgoing: !0 })
                      ),
                      i
                    );
                  },
                },
                {
                  key: 'getPredecessors',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      r = [];
                    return (
                      this.search(
                        e,
                        function (i, o) {
                          i !== e &&
                            t.matchDistance(o, n.distance) &&
                            r.push(i);
                        },
                        Object.assign(Object.assign({}, n), { incoming: !0 })
                      ),
                      r
                    );
                  },
                },
                {
                  key: 'isPredecessor',
                  value: function (e, t) {
                    var n = this,
                      r =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      i = !1;
                    return (
                      this.search(
                        e,
                        function (o, a) {
                          if (
                            o === t &&
                            o !== e &&
                            n.matchDistance(a, r.distance)
                          )
                            return (i = !0), !1;
                        },
                        Object.assign(Object.assign({}, r), { incoming: !0 })
                      ),
                      i
                    );
                  },
                },
                {
                  key: 'matchDistance',
                  value: function (e, t) {
                    return (
                      null == t ||
                      ('function' == typeof t
                        ? t(e)
                        : !(!Array.isArray(t) || !t.includes(e)) || e === t)
                    );
                  },
                },
                {
                  key: 'getCommonAncestor',
                  value: function () {
                    for (
                      var e = [], t = arguments.length, n = new Array(t), r = 0;
                      r < t;
                      r++
                    )
                      n[r] = arguments[r];
                    return (
                      n.forEach(function (t) {
                        t &&
                          (Array.isArray(t)
                            ? e.push.apply(e, L()(t))
                            : e.push(t));
                      }),
                      Lp.getCommonAncestor.apply(Lp, e)
                    );
                  },
                },
                {
                  key: 'getSubGraph',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      r = [],
                      i = {},
                      o = [],
                      a = [],
                      s = function (e) {
                        i[e.id] ||
                          (r.push(e),
                          (i[e.id] = e),
                          e.isEdge() && a.push(e),
                          e.isNode() && o.push(e));
                      };
                    return (
                      e.forEach(function (e) {
                        (s(e), n.deep) &&
                          e.getDescendants({ deep: !0 }).forEach(function (e) {
                            return s(e);
                          });
                      }),
                      a.forEach(function (e) {
                        var t = e.getSourceCell(),
                          n = e.getTargetCell();
                        t &&
                          !i[t.id] &&
                          (r.push(t), (i[t.id] = t), t.isNode() && o.push(t)),
                          n &&
                            !i[n.id] &&
                            (r.push(n), (i[n.id] = n), n.isNode() && o.push(n));
                      }),
                      o.forEach(function (e) {
                        t.getConnectedEdges(e, n).forEach(function (e) {
                          var t = e.getSourceCell(),
                            n = e.getTargetCell();
                          !i[e.id] &&
                            t &&
                            i[t.id] &&
                            n &&
                            i[n.id] &&
                            (r.push(e), (i[e.id] = e));
                        });
                      }),
                      r
                    );
                  },
                },
                {
                  key: 'cloneSubGraph',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = this.getSubGraph(e, t);
                    return this.cloneCells(n);
                  },
                },
                {
                  key: 'cloneCells',
                  value: function (e) {
                    return Lp.cloneCells(e);
                  },
                },
                {
                  key: 'getNodesFromPoint',
                  value: function (e, t) {
                    var n = 'number' == typeof e ? { x: e, y: t || 0 } : e;
                    return this.getNodes().filter(function (e) {
                      return e.getBBox().containsPoint(n);
                    });
                  },
                },
                {
                  key: 'getNodesInArea',
                  value: function (e, t, n, r, i) {
                    var o =
                        'number' == typeof e
                          ? new Zu(e, t, n, r)
                          : Zu.create(e),
                      a = 'number' == typeof e ? i : t,
                      s = a && a.strict;
                    return this.getNodes().filter(function (e) {
                      var t = e.getBBox();
                      return s ? o.containsRect(t) : o.isIntersectWithRect(t);
                    });
                  },
                },
                {
                  key: 'getEdgesInArea',
                  value: function (e, t, n, r, i) {
                    var o =
                        'number' == typeof e
                          ? new Zu(e, t, n, r)
                          : Zu.create(e),
                      a = 'number' == typeof e ? i : t,
                      s = a && a.strict;
                    return this.getEdges().filter(function (e) {
                      var t = e.getBBox();
                      return (
                        0 === t.width
                          ? t.inflate(1, 0)
                          : 0 === t.height && t.inflate(0, 1),
                        s ? o.containsRect(t) : o.isIntersectWithRect(t)
                      );
                    });
                  },
                },
                {
                  key: 'getNodesUnderNode',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = e.getBBox(),
                      r =
                        null == t.by || 'bbox' === t.by
                          ? this.getNodesInArea(n)
                          : this.getNodesFromPoint(n[t.by]);
                    return r.filter(function (t) {
                      return e.id !== t.id && !t.isDescendantOf(e);
                    });
                  },
                },
                {
                  key: 'getAllCellsBBox',
                  value: function () {
                    return this.getCellsBBox(this.getCells());
                  },
                },
                {
                  key: 'getCellsBBox',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return Lp.getCellsBBox(e, t);
                  },
                },
                {
                  key: 'search',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    n.breadthFirst
                      ? this.breadthFirstSearch(e, t, n)
                      : this.depthFirstSearch(e, t, n);
                  },
                },
                {
                  key: 'breadthFirstSearch',
                  value: function (e, t) {
                    var n = this,
                      r =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      i = [],
                      o = {},
                      a = {};
                    i.push(e), (a[e.id] = 0);
                    for (
                      var s = function () {
                        var e = i.shift();
                        return null == e || o[e.id]
                          ? 'continue'
                          : ((o[e.id] = !0),
                            !1 === de(t, n, e, a[e.id])
                              ? 'continue'
                              : void n.getNeighbors(e, r).forEach(function (t) {
                                  (a[t.id] = a[e.id] + 1), i.push(t);
                                }));
                      };
                      i.length > 0;

                    )
                      s();
                  },
                },
                {
                  key: 'depthFirstSearch',
                  value: function (e, t) {
                    var n = this,
                      r =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      i = [],
                      o = {},
                      a = {};
                    i.push(e), (a[e.id] = 0);
                    for (
                      var s = function () {
                        var e = i.pop();
                        if (null == e || o[e.id]) return 'continue';
                        if (((o[e.id] = !0), !1 === de(t, n, e, a[e.id])))
                          return 'continue';
                        var s = n.getNeighbors(e, r),
                          l = i.length;
                        s.forEach(function (t) {
                          (a[t.id] = a[e.id] + 1), i.splice(l, 0, t);
                        });
                      };
                      i.length > 0;

                    )
                      s();
                  },
                },
                {
                  key: 'getShortestPath',
                  value: function (e, t) {
                    var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      r = {};
                    this.getEdges().forEach(function (e) {
                      var t = e.getSourceCellId(),
                        i = e.getTargetCellId();
                      t &&
                        i &&
                        (r[t] || (r[t] = []),
                        r[i] || (r[i] = []),
                        r[t].push(i),
                        n.directed || r[i].push(t));
                    });
                    var i = 'string' == typeof e ? e : e.id,
                      o = Bu.run(r, i, n.weight),
                      a = [],
                      s = 'string' == typeof t ? t : t.id;
                    for (o[s] && a.push(s); (s = o[s]); ) a.unshift(s);
                    return a;
                  },
                },
                {
                  key: 'translate',
                  value: function (e, t, n) {
                    return (
                      this.getCells()
                        .filter(function (e) {
                          return !e.hasParent();
                        })
                        .forEach(function (r) {
                          return r.translate(e, t, n);
                        }),
                      this
                    );
                  },
                },
                {
                  key: 'resize',
                  value: function (e, t, n) {
                    return this.resizeCells(e, t, this.getCells(), n);
                  },
                },
                {
                  key: 'resizeCells',
                  value: function (e, t, n) {
                    var r =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : {},
                      i = this.getCellsBBox(n);
                    if (i) {
                      var o = Math.max(e / i.width, 0),
                        a = Math.max(t / i.height, 0),
                        s = i.getOrigin();
                      n.forEach(function (e) {
                        return e.scale(o, a, s, r);
                      });
                    }
                    return this;
                  },
                },
                {
                  key: 'toJSON',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return r.toJSON(this.getCells(), e);
                  },
                },
                {
                  key: 'parseJSON',
                  value: function (e) {
                    return r.fromJSON(e);
                  },
                },
                {
                  key: 'fromJSON',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = this.parseJSON(e);
                    return this.resetCells(n, t), this;
                  },
                },
                {
                  key: 'startBatch',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return (
                      (this.batches[e] = (this.batches[e] || 0) + 1),
                      this.notify('batch:start', { name: e, data: t }),
                      this
                    );
                  },
                },
                {
                  key: 'stopBatch',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return (
                      (this.batches[e] = (this.batches[e] || 0) - 1),
                      this.notify('batch:stop', { name: e, data: t }),
                      this
                    );
                  },
                },
                {
                  key: 'batchUpdate',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    this.startBatch(e, n);
                    var r = t();
                    return this.stopBatch(e, n), r;
                  },
                },
                {
                  key: 'hasActiveBatch',
                  value: function () {
                    var e = this,
                      t =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : Object.keys(this.batches),
                      n = Array.isArray(t) ? t : [t];
                    return n.some(function (t) {
                      return e.batches[t] > 0;
                    });
                  },
                },
              ]),
              r
            );
          })(so, Symbol.toStringTag);
        !(function (e) {
          (e.toStringTag = 'X6.'.concat(e.name)),
            (e.isModel = function (t) {
              if (null == t) return !1;
              if (t instanceof e) return !0;
              var n = t[Symbol.toStringTag],
                r = t;
              return (
                (null == n || n === e.toStringTag) &&
                'function' == typeof r.addNode &&
                'function' == typeof r.addEdge &&
                null != r.collection
              );
            });
        })(Vp || (Vp = {})),
          (function (e) {
            (e.toJSON = function (e) {
              var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
              return {
                cells: e.map(function (e) {
                  return e.toJSON(t);
                }),
              };
            }),
              (e.fromJSON = function (e) {
                var t = [];
                return (
                  Array.isArray(e)
                    ? t.push.apply(t, L()(e))
                    : (e.cells && t.push.apply(t, L()(e.cells)),
                      e.nodes &&
                        e.nodes.forEach(function (e) {
                          null == e.shape && (e.shape = 'rect'), t.push(e);
                        }),
                      e.edges &&
                        e.edges.forEach(function (e) {
                          null == e.shape && (e.shape = 'edge'), t.push(e);
                        })),
                  t.map(function (e) {
                    var t = e.shape;
                    if (t) {
                      if (Ip.registry.exist(t)) return Ip.create(e);
                      if (zp.registry.exist(t)) return zp.create(e);
                    }
                    throw new Error(
                      'The `shape` should be specified when creating a node/edge instance'
                    );
                  })
                );
              });
          })(Vp || (Vp = {}));
        var Fp = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Up = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'label',
                  get: function () {
                    return this.getLabel();
                  },
                  set: function (e) {
                    this.setLabel(e);
                  },
                },
                {
                  key: 'getLabel',
                  value: function () {
                    return this.getAttrByPath('text/text');
                  },
                },
                {
                  key: 'setLabel',
                  value: function (e, t) {
                    return (
                      null == e
                        ? this.removeLabel()
                        : this.setAttrByPath('text/text', e, t),
                      this
                    );
                  },
                },
                {
                  key: 'removeLabel',
                  value: function () {
                    return this.removeAttrByPath('text/text'), this;
                  },
                },
              ]),
              n
            );
          })(Ip);
        !(function (e) {
          (e.bodyAttr = { fill: '#ffffff', stroke: '#333333', strokeWidth: 2 }),
            (e.labelAttr = {
              fontSize: 14,
              fill: '#000000',
              refX: 0.5,
              refY: 0.5,
              textAnchor: 'middle',
              textVerticalAnchor: 'middle',
              fontFamily: 'Arial, helvetica, sans-serif',
            }),
            e.config({
              attrs: { text: Object.assign({}, e.labelAttr) },
              propHooks: function (e) {
                var t = e.label,
                  n = Fp(e, ['label']);
                return t && oo(n, 'attrs/text/text', t), n;
              },
              visible: !0,
            });
        })(Up || (Up = {}));
        var Hp = function (e, t) {
          var n = {};
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) &&
              t.indexOf(r) < 0 &&
              (n[r] = e[r]);
          if (null != e && 'function' == typeof Object.getOwnPropertySymbols) {
            var i = 0;
            for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
              t.indexOf(r[i]) < 0 &&
                Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                (n[r[i]] = e[r[i]]);
          }
          return n;
        };
        function Gp(e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : 'body';
          return [
            { tagName: e, selector: t },
            { tagName: 'text', selector: 'label' },
          ];
        }
        function Wp(e, t) {
          var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {},
            r = {
              constructorName: e,
              markup: Gp(e, n.selector),
              attrs: w()({}, e, Object.assign({}, Up.bodyAttr)),
            },
            i = n.parent || Up;
          return i.define(wr(r, t, { shape: e }));
        }
        Wp('rect', {
          attrs: { body: { refWidth: '100%', refHeight: '100%' } },
        });
        var qp = zp.define({
            shape: 'edge',
            markup: [
              {
                tagName: 'path',
                selector: 'wrap',
                groupSelector: 'lines',
                attrs: {
                  fill: 'none',
                  cursor: 'pointer',
                  stroke: 'transparent',
                  strokeLinecap: 'round',
                },
              },
              {
                tagName: 'path',
                selector: 'line',
                groupSelector: 'lines',
                attrs: { fill: 'none', pointerEvents: 'none' },
              },
            ],
            attrs: {
              lines: { connection: !0, strokeLinejoin: 'round' },
              wrap: { strokeWidth: 10 },
              line: { stroke: '#333', strokeWidth: 2, targetMarker: 'classic' },
            },
          }),
          Xp =
            (Wp('ellipse', {
              attrs: {
                body: {
                  refCx: '50%',
                  refCy: '50%',
                  refRx: '50%',
                  refRy: '50%',
                },
              },
            }),
            function (e, t) {
              var n = {};
              for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) &&
                  t.indexOf(r) < 0 &&
                  (n[r] = e[r]);
              if (
                null != e &&
                'function' == typeof Object.getOwnPropertySymbols
              ) {
                var i = 0;
                for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                  t.indexOf(r[i]) < 0 &&
                    Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                    (n[r[i]] = e[r[i]]);
              }
              return n;
            }),
          Yp = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'points',
                  get: function () {
                    return this.getPoints();
                  },
                  set: function (e) {
                    this.setPoints(e);
                  },
                },
                {
                  key: 'getPoints',
                  value: function () {
                    return this.getAttrByPath('body/refPoints');
                  },
                },
                {
                  key: 'setPoints',
                  value: function (e, t) {
                    return (
                      null == e
                        ? this.removePoints()
                        : this.setAttrByPath(
                            'body/refPoints',
                            n.pointsToString(e),
                            t
                          ),
                      this
                    );
                  },
                },
                {
                  key: 'removePoints',
                  value: function () {
                    return this.removeAttrByPath('body/refPoints'), this;
                  },
                },
              ]),
              n
            );
          })(Up);
        !(function (e) {
          function t(e) {
            return 'string' == typeof e
              ? e
              : e
                  .map(function (e) {
                    return Array.isArray(e)
                      ? e.join(',')
                      : Ku.isPointLike(e)
                      ? ''.concat(e.x, ', ').concat(e.y)
                      : '';
                  })
                  .join(' ');
          }
          (e.pointsToString = t),
            e.config({
              propHooks: function (e) {
                var n = e.points,
                  r = Xp(e, ['points']);
                if (n) {
                  var i = t(n);
                  i && oo(r, 'attrs/body/refPoints', i);
                }
                return r;
              },
            });
        })(Yp || (Yp = {}));
        Wp('polygon', {}, { parent: Yp }), Wp('polyline', {}, { parent: Yp });
        var Jp = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          $p =
            (Up.define({
              shape: 'path',
              markup: [
                { tagName: 'rect', selector: 'bg' },
                { tagName: 'path', selector: 'body' },
                { tagName: 'text', selector: 'label' },
              ],
              attrs: {
                bg: {
                  refWidth: '100%',
                  refHeight: '100%',
                  fill: 'none',
                  stroke: 'none',
                  pointerEvents: 'all',
                },
                body: { fill: 'none', stroke: '#000', strokeWidth: 2 },
              },
              propHooks: function (e) {
                var t = e.path,
                  n = Jp(e, ['path']);
                return t && oo(n, 'attrs/body/refD', t), n;
              },
            }),
            function (e, t) {
              var n = {};
              for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) &&
                  t.indexOf(r) < 0 &&
                  (n[r] = e[r]);
              if (
                null != e &&
                'function' == typeof Object.getOwnPropertySymbols
              ) {
                var i = 0;
                for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                  t.indexOf(r[i]) < 0 &&
                    Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                    (n[r[i]] = e[r[i]]);
              }
              return n;
            }),
          Qp =
            (Up.define({
              shape: 'text-block',
              markup: [
                { tagName: 'rect', selector: 'body' },
                Ps.SUPPORT_FOREIGNOBJECT
                  ? {
                      tagName: 'foreignObject',
                      selector: 'foreignObject',
                      children: [
                        {
                          tagName: 'div',
                          ns: il.xhtml,
                          selector: 'label',
                          style: {
                            width: '100%',
                            height: '100%',
                            position: 'static',
                            backgroundColor: 'transparent',
                            textAlign: 'center',
                            margin: 0,
                            padding: '0px 5px',
                            boxSizing: 'border-box',
                            display: 'flex',
                            alignItems: 'center',
                            justifyContent: 'center',
                          },
                        },
                      ],
                    }
                  : {
                      tagName: 'text',
                      selector: 'label',
                      attrs: { textAnchor: 'middle' },
                    },
              ],
              attrs: {
                body: Object.assign(Object.assign({}, Up.bodyAttr), {
                  refWidth: '100%',
                  refHeight: '100%',
                }),
                foreignObject: { refWidth: '100%', refHeight: '100%' },
                label: { style: { fontSize: 14 } },
              },
              propHooks: function (e) {
                var t = e.text,
                  n = $p(e, ['text']);
                return t && oo(n, 'attrs/label/text', t), n;
              },
              attrHooks: {
                text: {
                  set: function (e, t) {
                    var n = t.cell,
                      r = t.view,
                      i = t.refBBox,
                      o = t.elem,
                      a = t.attrs;
                    if (!(o instanceof HTMLElement)) {
                      var s = a.style || {},
                        l = { text: e, width: -5, height: '100%' },
                        u = Object.assign({ textVerticalAnchor: 'middle' }, s);
                      return (
                        de(wh.presets.textWrap.set, this, l, {
                          cell: n,
                          view: r,
                          elem: o,
                          refBBox: i,
                          attrs: u,
                        }),
                        { fill: s.color || null }
                      );
                    }
                    o.textContent = e;
                  },
                  position: function (e, t) {
                    var n = t.refBBox;
                    if (t.elem instanceof SVGElement) return n.getCenter();
                  },
                },
              },
            }),
            Wp(
              'image',
              {
                attrs: { image: { refWidth: '100%', refHeight: '100%' } },
                propHooks: (function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : 'xlink:href',
                    t = function (t) {
                      var n = t.imageUrl,
                        r = t.imageWidth,
                        i = t.imageHeight,
                        o = Hp(t, ['imageUrl', 'imageWidth', 'imageHeight']);
                      if (null != n || null != r || null != i) {
                        var a = function () {
                          if (o.attrs) {
                            var t = o.attrs.image;
                            null != n && (t[e] = n),
                              null != r && (t.width = r),
                              null != i && (t.height = i),
                              (o.attrs.image = t);
                          }
                        };
                        o.attrs
                          ? (null == o.attrs.image && (o.attrs.image = {}), a())
                          : ((o.attrs = { image: {} }), a());
                      }
                      return o;
                    };
                  return t;
                })(),
              },
              { selector: 'image' }
            ),
            Wp('circle', {
              attrs: { body: { refCx: '50%', refCy: '50%', refR: '50%' } },
            }),
            (function (e, t) {
              M()(r, e);
              var n = N()(r);
              function r() {
                var e;
                return (
                  y()(this, r),
                  ((e = n.apply(this, arguments)).portsCache = {}),
                  e
                );
              }
              return (
                b()(r, [
                  {
                    key: t,
                    get: function () {
                      return r.toStringTag;
                    },
                  },
                  {
                    key: 'getContainerClassName',
                    value: function () {
                      var e = [
                        wd()(
                          Cd()(r.prototype),
                          'getContainerClassName',
                          this
                        ).call(this),
                        this.prefixClassName('node'),
                      ];
                      return (
                        this.can('nodeMovable') ||
                          e.push(this.prefixClassName('node-immovable')),
                        e.join(' ')
                      );
                    },
                  },
                  {
                    key: 'updateClassName',
                    value: function (e) {
                      var t = e.target;
                      if (t.hasAttribute('magnet')) {
                        var n = this.prefixClassName('port-unconnectable');
                        this.can('magnetConnectable') ? Zs(t, n) : Ks(t, n);
                      } else {
                        var r = this.prefixClassName('node-immovable');
                        this.can('nodeMovable')
                          ? this.removeClass(r)
                          : this.addClass(r);
                      }
                    },
                  },
                  {
                    key: 'isNodeView',
                    value: function () {
                      return !0;
                    },
                  },
                  {
                    key: 'confirmUpdate',
                    value: function (e) {
                      var t = this,
                        n =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {},
                        r = e;
                      return (
                        this.hasAction(r, 'ports') &&
                          (this.removePorts(), this.cleanPortsCache()),
                        this.hasAction(r, 'render')
                          ? (this.render(),
                            (r = this.removeAction(r, [
                              'render',
                              'update',
                              'resize',
                              'translate',
                              'rotate',
                              'ports',
                              'tools',
                            ])))
                          : ((r = this.handleAction(
                              r,
                              'resize',
                              function () {
                                return t.resize();
                              },
                              'update'
                            )),
                            (r = this.handleAction(
                              r,
                              'update',
                              function () {
                                return t.update();
                              },
                              jh.useCSSSelector ? 'ports' : null
                            )),
                            (r = this.handleAction(r, 'translate', function () {
                              return t.translate();
                            })),
                            (r = this.handleAction(r, 'rotate', function () {
                              return t.rotate();
                            })),
                            (r = this.handleAction(r, 'ports', function () {
                              return t.renderPorts();
                            })),
                            (r = this.handleAction(r, 'tools', function () {
                              t.getFlag('tools') === e
                                ? t.renderTools()
                                : t.updateTools(n);
                            }))),
                        r
                      );
                    },
                  },
                  {
                    key: 'update',
                    value: function (e) {
                      this.cleanCache(),
                        jh.useCSSSelector && this.removePorts();
                      var t = this.cell,
                        n = t.getSize(),
                        r = t.getAttrs();
                      this.updateAttrs(this.container, r, {
                        attrs: e === r ? null : e,
                        rootBBox: new Zu(0, 0, n.width, n.height),
                        selectors: this.selectors,
                      }),
                        jh.useCSSSelector && this.renderPorts();
                    },
                  },
                  {
                    key: 'renderMarkup',
                    value: function () {
                      var e = this.cell.markup;
                      if (e) {
                        if ('string' == typeof e)
                          throw new TypeError('Not support string markup.');
                        return this.renderJSONMarkup(e);
                      }
                      throw new TypeError('Invalid node markup.');
                    },
                  },
                  {
                    key: 'renderJSONMarkup',
                    value: function (e) {
                      var t = this.parseJSONMarkup(e, this.container);
                      (this.selectors = t.selectors),
                        this.container.appendChild(t.fragment);
                    },
                  },
                  {
                    key: 'render',
                    value: function () {
                      return (
                        this.empty(),
                        this.renderMarkup(),
                        this.resize(),
                        this.updateTransform(),
                        jh.useCSSSelector || this.renderPorts(),
                        this.renderTools(),
                        this
                      );
                    },
                  },
                  {
                    key: 'resize',
                    value: function () {
                      this.cell.getAngle() && this.rotate(), this.update();
                    },
                  },
                  {
                    key: 'translate',
                    value: function () {
                      this.updateTransform();
                    },
                  },
                  {
                    key: 'rotate',
                    value: function () {
                      this.updateTransform();
                    },
                  },
                  {
                    key: 'getTranslationString',
                    value: function () {
                      var e = this.cell.getPosition();
                      return 'translate('.concat(e.x, ',').concat(e.y, ')');
                    },
                  },
                  {
                    key: 'getRotationString',
                    value: function () {
                      var e = this.cell.getAngle();
                      if (e) {
                        var t = this.cell.getSize();
                        return 'rotate('
                          .concat(e, ',')
                          .concat(t.width / 2, ',')
                          .concat(t.height / 2, ')');
                      }
                    },
                  },
                  {
                    key: 'updateTransform',
                    value: function () {
                      var e = this.getTranslationString(),
                        t = this.getRotationString();
                      t && (e += ' '.concat(t)),
                        this.container.setAttribute('transform', e);
                    },
                  },
                  {
                    key: 'findPortElem',
                    value: function (e, t) {
                      var n = e ? this.portsCache[e] : null;
                      if (!n) return null;
                      var r = n.portContentElement,
                        i = n.portContentSelectors || {};
                      return this.findOne(t, r, i);
                    },
                  },
                  {
                    key: 'cleanPortsCache',
                    value: function () {
                      this.portsCache = {};
                    },
                  },
                  {
                    key: 'removePorts',
                    value: function () {
                      Object.values(this.portsCache).forEach(function (e) {
                        hl(e.portElement);
                      });
                    },
                  },
                  {
                    key: 'renderPorts',
                    value: function () {
                      var e = this,
                        t = this.container,
                        n = [];
                      t.childNodes.forEach(function (e) {
                        n.push(e);
                      });
                      var r = this.cell.getParsedPorts(),
                        i = Jo(r, 'zIndex'),
                        o = 'auto';
                      i[o] &&
                        i[o].forEach(function (r) {
                          var i = e.getPortElement(r);
                          t.append(i), n.push(i);
                        }),
                        Object.keys(i).forEach(function (t) {
                          if (t !== o) {
                            var r = parseInt(t, 10);
                            e.appendPorts(i[t], r, n);
                          }
                        }),
                        this.updatePorts();
                    },
                  },
                  {
                    key: 'appendPorts',
                    value: function (e, t, n) {
                      var r = this,
                        i = e.map(function (e) {
                          return r.getPortElement(e);
                        });
                      n[t] || t < 0
                        ? pl(n[Math.max(t, 0)], i)
                        : gl(this.container, i);
                    },
                  },
                  {
                    key: 'getPortElement',
                    value: function (e) {
                      var t = this.portsCache[e.id];
                      return t ? t.portElement : this.createPortElement(e);
                    },
                  },
                  {
                    key: 'createPortElement',
                    value: function (e) {
                      var t = Ed.renderMarkup(
                          this.cell.getPortContainerMarkup()
                        ),
                        n = t.elem;
                      if (null == n)
                        throw new Error('Invalid port container markup.');
                      var r = (t = Ed.renderMarkup(this.getPortMarkup(e))).elem,
                        i = t.selectors;
                      if (null == r) throw new Error('Invalid port markup.');
                      this.setAttrs({ port: e.id, 'port-group': e.group }, r);
                      var o = 'x6-port';
                      e.group && (o += ' x6-port-'.concat(e.group)),
                        Ks(n, o),
                        Ks(n, 'x6-port'),
                        Ks(r, 'x6-port-body'),
                        n.appendChild(r);
                      var a,
                        s,
                        l = i;
                      if (this.existPortLabel(e)) {
                        if (
                          ((a = (t = Ed.renderMarkup(
                            this.getPortLabelMarkup(e.label)
                          )).elem),
                          (s = t.selectors),
                          null == a)
                        )
                          throw new Error('Invalid port label markup.');
                        if (i && s) {
                          for (var u in s)
                            if (i[u] && u !== this.rootSelector)
                              throw new Error(
                                'Selectors within port must be unique.'
                              );
                          l = Object.assign(Object.assign({}, i), s);
                        }
                        Ks(a, 'x6-port-label'), n.appendChild(a);
                      }
                      return (
                        (this.portsCache[e.id] = {
                          portElement: n,
                          portSelectors: l,
                          portLabelElement: a,
                          portLabelSelectors: s,
                          portContentElement: r,
                          portContentSelectors: i,
                        }),
                        this.graph.options.onPortRendered &&
                          this.graph.options.onPortRendered({
                            port: e,
                            node: this.cell,
                            container: n,
                            selectors: l,
                            labelContainer: a,
                            labelSelectors: s,
                            contentContainer: r,
                            contentSelectors: i,
                          }),
                        n
                      );
                    },
                  },
                  {
                    key: 'updatePorts',
                    value: function () {
                      var e = this,
                        t = this.cell.getParsedGroups(),
                        n = Object.keys(t);
                      0 === n.length
                        ? this.updatePortGroup()
                        : n.forEach(function (t) {
                            return e.updatePortGroup(t);
                          });
                    },
                  },
                  {
                    key: 'updatePortGroup',
                    value: function (e) {
                      for (
                        var t = Zu.fromSize(this.cell.getSize()),
                          n = this.cell.getPortsLayoutByGroup(e, t),
                          r = 0,
                          i = n.length;
                        r < i;
                        r += 1
                      ) {
                        var o = n[r],
                          a = o.portId,
                          s = this.portsCache[a] || {},
                          l = o.portLayout;
                        if (
                          (this.applyPortTransform(s.portElement, l),
                          null != o.portAttrs)
                        ) {
                          var u = { selectors: s.portSelectors || {} };
                          o.portSize && (u.rootBBox = Zu.fromSize(o.portSize)),
                            this.updateAttrs(s.portElement, o.portAttrs, u);
                        }
                        var c = o.labelLayout;
                        if (
                          c &&
                          s.portLabelElement &&
                          (this.applyPortTransform(
                            s.portLabelElement,
                            c,
                            -(l.angle || 0)
                          ),
                          c.attrs)
                        ) {
                          var f = { selectors: s.portLabelSelectors || {} };
                          o.labelSize &&
                            (f.rootBBox = Zu.fromSize(o.labelSize)),
                            this.updateAttrs(s.portLabelElement, c.attrs, f);
                        }
                      }
                    },
                  },
                  {
                    key: 'applyPortTransform',
                    value: function (e, t) {
                      var n =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : 0,
                        r = t.angle,
                        i = t.position,
                        o = mu()
                          .rotate(n)
                          .translate(i.x || 0, i.y || 0)
                          .rotate(r || 0);
                      Su(e, o, { absolute: !0 });
                    },
                  },
                  {
                    key: 'getPortMarkup',
                    value: function (e) {
                      return e.markup || this.cell.portMarkup;
                    },
                  },
                  {
                    key: 'getPortLabelMarkup',
                    value: function (e) {
                      return e.markup || this.cell.portLabelMarkup;
                    },
                  },
                  {
                    key: 'existPortLabel',
                    value: function (e) {
                      return e.attrs && e.attrs.text;
                    },
                  },
                  {
                    key: 'getEventArgs',
                    value: function (e, t, n) {
                      var r = this,
                        i = r.cell;
                      return null == t || null == n
                        ? { e: e, view: r, node: i, cell: i }
                        : { e: e, x: t, y: n, view: r, node: i, cell: i };
                    },
                  },
                  {
                    key: 'getPortEventArgs',
                    value: function (e, t, n) {
                      var r = this,
                        i = r.cell,
                        o = i;
                      return n
                        ? {
                            e: e,
                            x: n.x,
                            y: n.y,
                            view: r,
                            node: i,
                            cell: o,
                            port: t,
                          }
                        : { e: e, view: r, node: i, cell: o, port: t };
                    },
                  },
                  {
                    key: 'notifyMouseDown',
                    value: function (e, t, n) {
                      wd()(Cd()(r.prototype), 'onMouseDown', this).call(
                        this,
                        e,
                        t,
                        n
                      ),
                        this.notify(
                          'node:mousedown',
                          this.getEventArgs(e, t, n)
                        );
                    },
                  },
                  {
                    key: 'notifyMouseMove',
                    value: function (e, t, n) {
                      wd()(Cd()(r.prototype), 'onMouseMove', this).call(
                        this,
                        e,
                        t,
                        n
                      ),
                        this.notify(
                          'node:mousemove',
                          this.getEventArgs(e, t, n)
                        );
                    },
                  },
                  {
                    key: 'notifyMouseUp',
                    value: function (e, t, n) {
                      wd()(Cd()(r.prototype), 'onMouseUp', this).call(
                        this,
                        e,
                        t,
                        n
                      ),
                        this.notify('node:mouseup', this.getEventArgs(e, t, n));
                    },
                  },
                  {
                    key: 'notifyPortEvent',
                    value: function (e, t, n) {
                      var r = this.findAttr('port', t.target);
                      if (r) {
                        var i = t.type;
                        'node:port:mouseenter' === e
                          ? (t.type = 'mouseenter')
                          : 'node:port:mouseleave' === e &&
                            (t.type = 'mouseleave'),
                          this.notify(e, this.getPortEventArgs(t, r, n)),
                          (t.type = i);
                      }
                    },
                  },
                  {
                    key: 'onClick',
                    value: function (e, t, n) {
                      wd()(Cd()(r.prototype), 'onClick', this).call(
                        this,
                        e,
                        t,
                        n
                      ),
                        this.notify('node:click', this.getEventArgs(e, t, n)),
                        this.notifyPortEvent('node:port:click', e, {
                          x: t,
                          y: n,
                        });
                    },
                  },
                  {
                    key: 'onDblClick',
                    value: function (e, t, n) {
                      wd()(Cd()(r.prototype), 'onDblClick', this).call(
                        this,
                        e,
                        t,
                        n
                      ),
                        this.notify(
                          'node:dblclick',
                          this.getEventArgs(e, t, n)
                        ),
                        this.notifyPortEvent('node:port:dblclick', e, {
                          x: t,
                          y: n,
                        });
                    },
                  },
                  {
                    key: 'onContextMenu',
                    value: function (e, t, n) {
                      wd()(Cd()(r.prototype), 'onContextMenu', this).call(
                        this,
                        e,
                        t,
                        n
                      ),
                        this.notify(
                          'node:contextmenu',
                          this.getEventArgs(e, t, n)
                        ),
                        this.notifyPortEvent('node:port:contextmenu', e, {
                          x: t,
                          y: n,
                        });
                    },
                  },
                  {
                    key: 'onMouseDown',
                    value: function (e, t, n) {
                      this.isPropagationStopped(e) ||
                        (this.notifyMouseDown(e, t, n),
                        this.notifyPortEvent('node:port:mousedown', e, {
                          x: t,
                          y: n,
                        }),
                        this.startNodeDragging(e, t, n));
                    },
                  },
                  {
                    key: 'onMouseMove',
                    value: function (e, t, n) {
                      var r = this.getEventData(e),
                        i = r.action;
                      if ('magnet' === i) this.dragMagnet(e, t, n);
                      else {
                        if ('move' === i) {
                          var o = r.targetView || this;
                          o.dragNode(e, t, n),
                            o.notify('node:moving', {
                              e: e,
                              x: t,
                              y: n,
                              view: o,
                              cell: o.cell,
                              node: o.cell,
                            });
                        }
                        this.notifyMouseMove(e, t, n),
                          this.notifyPortEvent('node:port:mousemove', e, {
                            x: t,
                            y: n,
                          });
                      }
                      this.setEventData(e, r);
                    },
                  },
                  {
                    key: 'onMouseUp',
                    value: function (e, t, n) {
                      var r = this.getEventData(e),
                        i = r.action;
                      'magnet' === i
                        ? this.stopMagnetDragging(e, t, n)
                        : (this.notifyMouseUp(e, t, n),
                          this.notifyPortEvent('node:port:mouseup', e, {
                            x: t,
                            y: n,
                          }),
                          'move' === i &&
                            (r.targetView || this).stopNodeDragging(e, t, n));
                      var o = r.targetMagnet;
                      o && this.onMagnetClick(e, o, t, n),
                        this.checkMouseleave(e);
                    },
                  },
                  {
                    key: 'onMouseOver',
                    value: function (e) {
                      wd()(Cd()(r.prototype), 'onMouseOver', this).call(
                        this,
                        e
                      ),
                        this.notify('node:mouseover', this.getEventArgs(e)),
                        this.notifyPortEvent('node:port:mouseenter', e),
                        this.notifyPortEvent('node:port:mouseover', e);
                    },
                  },
                  {
                    key: 'onMouseOut',
                    value: function (e) {
                      wd()(Cd()(r.prototype), 'onMouseOut', this).call(this, e),
                        this.notify('node:mouseout', this.getEventArgs(e)),
                        this.notifyPortEvent('node:port:mouseleave', e),
                        this.notifyPortEvent('node:port:mouseout', e);
                    },
                  },
                  {
                    key: 'onMouseEnter',
                    value: function (e) {
                      this.updateClassName(e),
                        wd()(Cd()(r.prototype), 'onMouseEnter', this).call(
                          this,
                          e
                        ),
                        this.notify('node:mouseenter', this.getEventArgs(e));
                    },
                  },
                  {
                    key: 'onMouseLeave',
                    value: function (e) {
                      wd()(Cd()(r.prototype), 'onMouseLeave', this).call(
                        this,
                        e
                      ),
                        this.notify('node:mouseleave', this.getEventArgs(e));
                    },
                  },
                  {
                    key: 'onMouseWheel',
                    value: function (e, t, n, i) {
                      wd()(Cd()(r.prototype), 'onMouseWheel', this).call(
                        this,
                        e,
                        t,
                        n,
                        i
                      ),
                        this.notify(
                          'node:mousewheel',
                          Object.assign(
                            { delta: i },
                            this.getEventArgs(e, t, n)
                          )
                        );
                    },
                  },
                  {
                    key: 'onMagnetClick',
                    value: function (e, t, n, r) {
                      var i = this.graph;
                      i.view.getMouseMovedCount(e) > i.options.clickThreshold ||
                        this.notify(
                          'node:magnet:click',
                          Object.assign(
                            { magnet: t },
                            this.getEventArgs(e, n, r)
                          )
                        );
                    },
                  },
                  {
                    key: 'onMagnetDblClick',
                    value: function (e, t, n, r) {
                      this.notify(
                        'node:magnet:dblclick',
                        Object.assign({ magnet: t }, this.getEventArgs(e, n, r))
                      );
                    },
                  },
                  {
                    key: 'onMagnetContextMenu',
                    value: function (e, t, n, r) {
                      this.notify(
                        'node:magnet:contextmenu',
                        Object.assign({ magnet: t }, this.getEventArgs(e, n, r))
                      );
                    },
                  },
                  {
                    key: 'onMagnetMouseDown',
                    value: function (e, t, n, r) {
                      this.startMagnetDragging(e, n, r);
                    },
                  },
                  {
                    key: 'onCustomEvent',
                    value: function (e, t, n, i) {
                      this.notify(
                        'node:customevent',
                        Object.assign({ name: t }, this.getEventArgs(e, n, i))
                      ),
                        wd()(Cd()(r.prototype), 'onCustomEvent', this).call(
                          this,
                          e,
                          t,
                          n,
                          i
                        );
                    },
                  },
                  {
                    key: 'prepareEmbedding',
                    value: function (e) {
                      var t = this.graph,
                        n = this.getEventData(e).cell || this.cell,
                        r = t.findViewByCell(n),
                        i = t.snapToGrid(e.clientX, e.clientY);
                      this.notify('node:embed', {
                        e: e,
                        node: n,
                        view: r,
                        cell: n,
                        x: i.x,
                        y: i.y,
                        currentParent: n.getParent(),
                      });
                    },
                  },
                  {
                    key: 'processEmbedding',
                    value: function (e, t) {
                      var n = this,
                        r = t.cell || this.cell,
                        i = t.graph || this.graph,
                        o = i.options.embedding,
                        a = o.findParent,
                        s =
                          'function' == typeof a
                            ? de(a, i, { view: this, node: this.cell }).filter(
                                function (e) {
                                  return (
                                    Lp.isCell(e) &&
                                    n.cell.id !== e.id &&
                                    !e.isDescendantOf(n.cell)
                                  );
                                }
                              )
                            : i.model.getNodesUnderNode(r, { by: a });
                      if (o.frontOnly && s.length > 0) {
                        var l = Jo(s, 'zIndex'),
                          u = ea(
                            Object.keys(l).map(function (e) {
                              return parseInt(e, 10);
                            })
                          );
                        u && (s = l[u]);
                      }
                      s = s.filter(function (e) {
                        return e.visible;
                      });
                      for (
                        var c = null,
                          f = t.candidateEmbedView,
                          h = o.validate,
                          d = s.length - 1;
                        d >= 0;
                        d -= 1
                      ) {
                        var g = s[d];
                        if (f && f.cell.id === g.id) {
                          c = f;
                          break;
                        }
                        var p = g.findView(i);
                        if (
                          de(h, i, {
                            child: this.cell,
                            parent: p.cell,
                            childView: this,
                            parentView: p,
                          })
                        ) {
                          c = p;
                          break;
                        }
                      }
                      this.clearEmbedding(t),
                        c && c.highlight(null, { type: 'embedding' }),
                        (t.candidateEmbedView = c);
                      var v = i.snapToGrid(e.clientX, e.clientY);
                      this.notify('node:embedding', {
                        e: e,
                        cell: r,
                        node: r,
                        view: i.findViewByCell(r),
                        x: v.x,
                        y: v.y,
                        currentParent: r.getParent(),
                        candidateParent: c ? c.cell : null,
                      });
                    },
                  },
                  {
                    key: 'clearEmbedding',
                    value: function (e) {
                      var t = e.candidateEmbedView;
                      t &&
                        (t.unhighlight(null, { type: 'embedding' }),
                        (e.candidateEmbedView = null));
                    },
                  },
                  {
                    key: 'finalizeEmbedding',
                    value: function (e, t) {
                      this.graph.startBatch('embedding');
                      var n = t.cell || this.cell,
                        r = t.graph || this.graph,
                        i = r.findViewByCell(n),
                        o = n.getParent(),
                        a = t.candidateEmbedView;
                      if (
                        (a
                          ? (a.unhighlight(null, { type: 'embedding' }),
                            (t.candidateEmbedView = null),
                            (null != o && o.id === a.cell.id) ||
                              a.cell.insertChild(n, void 0, { ui: !0 }))
                          : o && o.unembed(n, { ui: !0 }),
                        r.model
                          .getConnectedEdges(n, { deep: !0 })
                          .forEach(function (e) {
                            e.updateParent({ ui: !0 });
                          }),
                        i && a)
                      ) {
                        var s = r.snapToGrid(e.clientX, e.clientY);
                        i.notify('node:embedded', {
                          e: e,
                          cell: n,
                          x: s.x,
                          y: s.y,
                          node: n,
                          view: r.findViewByCell(n),
                          previousParent: o,
                          currentParent: n.getParent(),
                        });
                      }
                      this.graph.stopBatch('embedding');
                    },
                  },
                  {
                    key: 'getDelegatedView',
                    value: function () {
                      for (var e = this.cell, t = this; t && !e.isEdge(); ) {
                        if (!e.hasParent() || t.can('stopDelegateOnDragging'))
                          return t;
                        (e = e.getParent()), (t = this.graph.findViewByCell(e));
                      }
                      return null;
                    },
                  },
                  {
                    key: 'validateMagnet',
                    value: function (e, t, n) {
                      if ('passive' !== t.getAttribute('magnet')) {
                        var r = this.graph.options.connecting.validateMagnet;
                        return (
                          !r ||
                          de(r, this.graph, {
                            e: n,
                            magnet: t,
                            view: e,
                            cell: e.cell,
                          })
                        );
                      }
                      return !1;
                    },
                  },
                  {
                    key: 'startMagnetDragging',
                    value: function (e, t, n) {
                      if (this.can('magnetConnectable')) {
                        e.stopPropagation();
                        var r = e.currentTarget,
                          i = this.graph;
                        this.setEventData(e, { targetMagnet: r }),
                          this.validateMagnet(this, r, e)
                            ? (i.options.magnetThreshold <= 0 &&
                                this.startConnectting(e, r, t, n),
                              this.setEventData(e, { action: 'magnet' }),
                              this.stopPropagation(e))
                            : this.onMouseDown(e, t, n),
                          i.view.delegateDragEvents(e, this);
                      }
                    },
                  },
                  {
                    key: 'startConnectting',
                    value: function (e, t, n, r) {
                      this.graph.model.startBatch('add-edge');
                      var i = this.createEdgeFromMagnet(t, n, r);
                      i.setEventData(
                        e,
                        i.prepareArrowheadDragging('target', {
                          x: n,
                          y: r,
                          isNewEdge: !0,
                          fallbackAction: 'remove',
                        })
                      ),
                        this.setEventData(e, { edgeView: i }),
                        i.notifyMouseDown(e, n, r);
                    },
                  },
                  {
                    key: 'getDefaultEdge',
                    value: function (e, t) {
                      var n,
                        r = this.graph.options.connecting.createEdge;
                      return (
                        r &&
                          (n = de(r, this.graph, {
                            sourceMagnet: t,
                            sourceView: e,
                            sourceCell: e.cell,
                          })),
                        n
                      );
                    },
                  },
                  {
                    key: 'createEdgeFromMagnet',
                    value: function (e, t, n) {
                      var r = this.graph,
                        i = r.model,
                        o = this.getDefaultEdge(this, e);
                      return (
                        o.setSource(
                          Object.assign(
                            Object.assign({}, o.getSource()),
                            this.getEdgeTerminal(e, t, n, o, 'source')
                          )
                        ),
                        o.setTarget(
                          Object.assign(Object.assign({}, o.getTarget()), {
                            x: t,
                            y: n,
                          })
                        ),
                        o.addTo(i, { async: !1, ui: !0 }),
                        o.findView(r)
                      );
                    },
                  },
                  {
                    key: 'dragMagnet',
                    value: function (e, t, n) {
                      var r = this.getEventData(e),
                        i = r.edgeView;
                      if (i)
                        i.onMouseMove(e, t, n),
                          this.autoScrollGraph(e.clientX, e.clientY);
                      else {
                        var o = this.graph,
                          a = o.options.magnetThreshold,
                          s = this.getEventTarget(e),
                          l = r.targetMagnet;
                        if ('onleave' === a) {
                          if (l === s || l.contains(s)) return;
                        } else if (o.view.getMouseMovedCount(e) <= a) return;
                        this.startConnectting(e, l, t, n);
                      }
                    },
                  },
                  {
                    key: 'stopMagnetDragging',
                    value: function (e, t, n) {
                      var r = this.eventData(e).edgeView;
                      r &&
                        (r.onMouseUp(e, t, n),
                        this.graph.model.stopBatch('add-edge'));
                    },
                  },
                  {
                    key: 'notifyUnhandledMouseDown',
                    value: function (e, t, n) {
                      this.notify('node:unhandled:mousedown', {
                        e: e,
                        x: t,
                        y: n,
                        view: this,
                        cell: this.cell,
                        node: this.cell,
                      });
                    },
                  },
                  {
                    key: 'notifyNodeMove',
                    value: function (e, t, n, r, i) {
                      var o = this,
                        a = [i],
                        s = this.graph.getPlugin('selection');
                      if (s && s.isSelectionMovable()) {
                        var l = s.getSelectedCells();
                        l.includes(i) &&
                          (a = l.filter(function (e) {
                            return e.isNode();
                          }));
                      }
                      a.forEach(function (i) {
                        o.notify(e, {
                          e: t,
                          x: n,
                          y: r,
                          cell: i,
                          node: i,
                          view: i.findView(o.graph),
                        });
                      });
                    },
                  },
                  {
                    key: 'getRestrictArea',
                    value: function (e) {
                      var t = this.graph.options.translating.restrict,
                        n = 'function' == typeof t ? de(t, this.graph, e) : t;
                      return 'number' == typeof n
                        ? this.graph.transform.getGraphArea().inflate(n)
                        : !0 === n
                        ? this.graph.transform.getGraphArea()
                        : n || null;
                    },
                  },
                  {
                    key: 'startNodeDragging',
                    value: function (e, t, n) {
                      var r = this.getDelegatedView();
                      if (null == r || !r.can('nodeMovable'))
                        return this.notifyUnhandledMouseDown(e, t, n);
                      this.setEventData(e, { targetView: r, action: 'move' });
                      var i = Ku.create(r.cell.getPosition());
                      r.setEventData(e, {
                        moving: !1,
                        offset: i.diff(t, n),
                        restrict: this.getRestrictArea(r),
                      });
                    },
                  },
                  {
                    key: 'dragNode',
                    value: function (e, t, n) {
                      var r = this.cell,
                        i = this.graph,
                        o = i.getGridSize(),
                        a = this.getEventData(e),
                        s = a.offset,
                        l = a.restrict;
                      a.moving ||
                        ((a.moving = !0),
                        this.addClass('node-moving'),
                        this.notifyNodeMove('node:move', e, t, n, this.cell)),
                        this.autoScrollGraph(e.clientX, e.clientY);
                      var u = Yu.snapToGrid(t + s.x, o),
                        c = Yu.snapToGrid(n + s.y, o);
                      r.setPosition(u, c, { restrict: l, deep: !0, ui: !0 }),
                        i.options.embedding.enabled &&
                          (a.embedding ||
                            (this.prepareEmbedding(e), (a.embedding = !0)),
                          this.processEmbedding(e, a));
                    },
                  },
                  {
                    key: 'stopNodeDragging',
                    value: function (e, t, n) {
                      var r = this.getEventData(e);
                      r.embedding && this.finalizeEmbedding(e, r),
                        r.moving &&
                          (this.removeClass('node-moving'),
                          this.notifyNodeMove(
                            'node:moved',
                            e,
                            t,
                            n,
                            this.cell
                          )),
                        (r.moving = !1),
                        (r.embedding = !1);
                    },
                  },
                  {
                    key: 'autoScrollGraph',
                    value: function (e, t) {
                      var n = this.graph.getPlugin('scroller');
                      n && n.autoScroll(e, t);
                    },
                  },
                ]),
                r
              );
            })(Td, Symbol.toStringTag));
        !(function (e) {
          (e.toStringTag = 'X6.'.concat(e.name)),
            (e.isNodeView = function (t) {
              if (null == t) return !1;
              if (t instanceof e) return !0;
              var n = t[Symbol.toStringTag],
                r = t;
              return (
                (null == n || n === e.toStringTag) &&
                'function' == typeof r.isNodeView &&
                'function' == typeof r.isEdgeView &&
                'function' == typeof r.confirmUpdate &&
                'function' == typeof r.update &&
                'function' == typeof r.findPortElem &&
                'function' == typeof r.resize &&
                'function' == typeof r.rotate &&
                'function' == typeof r.translate
              );
            });
        })(Qp || (Qp = {})),
          Qp.config({
            isSvgElement: !0,
            priority: 0,
            bootstrap: ['render'],
            actions: {
              view: ['render'],
              markup: ['render'],
              attrs: ['update'],
              size: ['resize', 'ports', 'tools'],
              angle: ['rotate', 'tools'],
              position: ['translate', 'tools'],
              ports: ['ports'],
              tools: ['tools'],
            },
          }),
          Qp.registry.register('node', Qp, !0);
        var Kp = (function (e, t) {
          M()(r, e);
          var n = N()(r);
          function r() {
            var e;
            return (
              y()(this, r),
              ((e = n.apply(this, arguments)).POINT_ROUNDING = 2),
              e
            );
          }
          return (
            b()(r, [
              {
                key: t,
                get: function () {
                  return r.toStringTag;
                },
              },
              {
                key: 'getContainerClassName',
                value: function () {
                  return [
                    wd()(Cd()(r.prototype), 'getContainerClassName', this).call(
                      this
                    ),
                    this.prefixClassName('edge'),
                  ].join(' ');
                },
              },
              {
                key: 'sourceBBox',
                get: function () {
                  var e = this.sourceView;
                  if (!e) {
                    var t = this.cell.getSource();
                    return new Zu(t.x, t.y);
                  }
                  var n = this.sourceMagnet;
                  return e.isEdgeElement(n)
                    ? new Zu(this.sourceAnchor.x, this.sourceAnchor.y)
                    : e.getBBoxOfElement(n || e.container);
                },
              },
              {
                key: 'targetBBox',
                get: function () {
                  var e = this.targetView;
                  if (!e) {
                    var t = this.cell.getTarget();
                    return new Zu(t.x, t.y);
                  }
                  var n = this.targetMagnet;
                  return e.isEdgeElement(n)
                    ? new Zu(this.targetAnchor.x, this.targetAnchor.y)
                    : e.getBBoxOfElement(n || e.container);
                },
              },
              {
                key: 'isEdgeView',
                value: function () {
                  return !0;
                },
              },
              {
                key: 'confirmUpdate',
                value: function (e) {
                  var t = this,
                    n =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    r = e;
                  if (this.hasAction(r, 'source')) {
                    if (!this.updateTerminalProperties('source')) return r;
                    r = this.removeAction(r, 'source');
                  }
                  if (this.hasAction(r, 'target')) {
                    if (!this.updateTerminalProperties('target')) return r;
                    r = this.removeAction(r, 'target');
                  }
                  var i = this.graph,
                    o = this.sourceView,
                    a = this.targetView;
                  return i &&
                    ((o && !i.renderer.isViewMounted(o)) ||
                      (a && !i.renderer.isViewMounted(a)))
                    ? r
                    : this.hasAction(r, 'render')
                    ? (this.render(),
                      (r = this.removeAction(r, [
                        'render',
                        'update',
                        'labels',
                        'tools',
                      ])))
                    : ((r = this.handleAction(r, 'update', function () {
                        return t.update(n);
                      })),
                      (r = this.handleAction(r, 'labels', function () {
                        return t.onLabelsChange(n);
                      })),
                      (r = this.handleAction(r, 'tools', function () {
                        return t.renderTools();
                      })));
                },
              },
              {
                key: 'render',
                value: function () {
                  return (
                    this.empty(),
                    this.renderMarkup(),
                    (this.labelContainer = null),
                    this.renderLabels(),
                    this.update(),
                    this.renderTools(),
                    this
                  );
                },
              },
              {
                key: 'renderMarkup',
                value: function () {
                  var e = this.cell.markup;
                  if (e) {
                    if ('string' == typeof e)
                      throw new TypeError('Not support string markup.');
                    return this.renderJSONMarkup(e);
                  }
                  throw new TypeError('Invalid edge markup.');
                },
              },
              {
                key: 'renderJSONMarkup',
                value: function (e) {
                  var t = this.parseJSONMarkup(e, this.container);
                  (this.selectors = t.selectors),
                    this.container.append(t.fragment);
                },
              },
              {
                key: 'customizeLabels',
                value: function () {
                  if (this.labelContainer)
                    for (
                      var e = this.cell, t = e.labels, n = 0, r = t.length;
                      n < r;
                      n += 1
                    ) {
                      var i = t[n],
                        o = this.labelCache[n],
                        a = this.labelSelectors[n],
                        s = this.graph.options.onEdgeLabelRendered;
                      s && s({ edge: e, label: i, container: o, selectors: a });
                    }
                },
              },
              {
                key: 'renderLabels',
                value: function () {
                  var e = this.cell,
                    t = e.getLabels(),
                    n = t.length,
                    r = this.labelContainer;
                  if (
                    ((this.labelCache = {}), (this.labelSelectors = {}), n <= 0)
                  )
                    return (
                      r && r.parentNode && r.parentNode.removeChild(r), this
                    );
                  r
                    ? this.empty(r)
                    : ((r = sl('g')),
                      this.addClass(this.prefixClassName('edge-labels'), r),
                      (this.labelContainer = r));
                  for (var i = 0, o = t.length; i < o; i += 1) {
                    var a = t[i],
                      s = this.normalizeLabelMarkup(
                        this.parseLabelMarkup(a.markup)
                      ),
                      l = void 0,
                      u = void 0;
                    if (s) (l = s.node), (u = s.selectors);
                    else {
                      var c = e.getDefaultLabel(),
                        f = this.normalizeLabelMarkup(
                          this.parseLabelMarkup(c.markup)
                        );
                      (l = f.node), (u = f.selectors);
                    }
                    l.setAttribute('data-index', ''.concat(i)),
                      r.appendChild(l);
                    var h = this.rootSelector;
                    if (u[h]) throw new Error('Ambiguous label root selector.');
                    (u[h] = l),
                      (this.labelCache[i] = l),
                      (this.labelSelectors[i] = u);
                  }
                  return (
                    null == r.parentNode && this.container.appendChild(r),
                    this.updateLabels(),
                    this.customizeLabels(),
                    this
                  );
                },
              },
              {
                key: 'onLabelsChange',
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {};
                  this.shouldRerenderLabels(e)
                    ? this.renderLabels()
                    : this.updateLabels(),
                    this.updateLabelPositions();
                },
              },
              {
                key: 'shouldRerenderLabels',
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    t = this.cell.previous('labels');
                  if (null == t) return !0;
                  if ('propertyPathArray' in e && 'propertyValue' in e) {
                    var n = e.propertyPathArray || [],
                      r = n.length;
                    if (r > 1) {
                      var i = n[1];
                      if (t[i]) {
                        if (2 === r)
                          return (
                            'object' === _()(e.propertyValue) &&
                            Bt(e.propertyValue, 'markup')
                          );
                        if ('markup' !== n[2]) return !1;
                      }
                    }
                  }
                  return !0;
                },
              },
              {
                key: 'parseLabelMarkup',
                value: function (e) {
                  return e
                    ? 'string' == typeof e
                      ? this.parseLabelStringMarkup(e)
                      : this.parseJSONMarkup(e)
                    : null;
                },
              },
              {
                key: 'parseLabelStringMarkup',
                value: function (e) {
                  for (
                    var t = Xl.createVectors(e),
                      n = document.createDocumentFragment(),
                      r = 0,
                      i = t.length;
                    r < i;
                    r += 1
                  ) {
                    var o = t[r].node;
                    n.appendChild(o);
                  }
                  return { fragment: n, selectors: {} };
                },
              },
              {
                key: 'normalizeLabelMarkup',
                value: function (e) {
                  if (null != e) {
                    var t,
                      n = e.fragment;
                    if (!(n instanceof DocumentFragment && n.hasChildNodes()))
                      throw new Error('Invalid label markup.');
                    var r = n.childNodes;
                    return (
                      (t =
                        r.length > 1 || 'G' !== r[0].nodeName.toUpperCase()
                          ? Xl.create('g').append(n)
                          : Xl.create(r[0])).addClass(
                        this.prefixClassName('edge-label')
                      ),
                      { node: t.node, selectors: e.selectors }
                    );
                  }
                },
              },
              {
                key: 'updateLabels',
                value: function () {
                  if (this.labelContainer)
                    for (
                      var e = this.cell,
                        t = e.labels,
                        n = this.can('edgeLabelMovable'),
                        r = e.getDefaultLabel(),
                        i = 0,
                        o = t.length;
                      i < o;
                      i += 1
                    ) {
                      var a = this.labelCache[i],
                        s = this.labelSelectors[i];
                      a.setAttribute('cursor', n ? 'move' : 'default');
                      var l = t[i],
                        u = wr({}, r.attrs, l.attrs);
                      this.updateAttrs(a, u, {
                        selectors: s,
                        rootBBox: l.size ? Zu.fromSize(l.size) : void 0,
                      });
                    }
                },
              },
              {
                key: 'renderTools',
                value: function () {
                  var e = this.cell.getTools();
                  return this.addTools(e), this;
                },
              },
              {
                key: 'update',
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {};
                  this.cleanCache(), this.updateConnection(e);
                  var t = this.cell.getAttrs();
                  return (
                    null != t &&
                      this.updateAttrs(this.container, t, {
                        selectors: this.selectors,
                      }),
                    this.updateLabelPositions(),
                    this.updateTools(e),
                    this
                  );
                },
              },
              {
                key: 'removeRedundantLinearVertices',
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    t = this.cell,
                    n = t.getVertices(),
                    r = [this.sourceAnchor].concat(L()(n), [this.targetAnchor]),
                    i = r.length,
                    o = new fc(r);
                  o.simplify({ threshold: 0.01 });
                  var a = o.points.map(function (e) {
                      return e.toJSON();
                    }),
                    s = a.length;
                  return i === s
                    ? 0
                    : (t.setVertices(a.slice(1, s - 1), e), i - s);
                },
              },
              {
                key: 'getTerminalView',
                value: function (e) {
                  switch (e) {
                    case 'source':
                      return this.sourceView || null;
                    case 'target':
                      return this.targetView || null;
                    default:
                      throw new Error("Unknown terminal type '".concat(e, "'"));
                  }
                },
              },
              {
                key: 'getTerminalAnchor',
                value: function (e) {
                  switch (e) {
                    case 'source':
                      return Ku.create(this.sourceAnchor);
                    case 'target':
                      return Ku.create(this.targetAnchor);
                    default:
                      throw new Error("Unknown terminal type '".concat(e, "'"));
                  }
                },
              },
              {
                key: 'getTerminalConnectionPoint',
                value: function (e) {
                  switch (e) {
                    case 'source':
                      return Ku.create(this.sourcePoint);
                    case 'target':
                      return Ku.create(this.targetPoint);
                    default:
                      throw new Error("Unknown terminal type '".concat(e, "'"));
                  }
                },
              },
              {
                key: 'getTerminalMagnet',
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  switch (e) {
                    case 'source':
                      if (t.raw) return this.sourceMagnet;
                      var n = this.sourceView;
                      return n ? this.sourceMagnet || n.container : null;
                    case 'target':
                      if (t.raw) return this.targetMagnet;
                      var r = this.targetView;
                      return r ? this.targetMagnet || r.container : null;
                    default:
                      throw new Error("Unknown terminal type '".concat(e, "'"));
                  }
                },
              },
              {
                key: 'updateConnection',
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    t = this.cell;
                  if (
                    e.translateBy &&
                    t.isFragmentDescendantOf(e.translateBy)
                  ) {
                    var n = e.tx || 0,
                      r = e.ty || 0;
                    (this.routePoints = new fc(this.routePoints).translate(
                      n,
                      r
                    ).points),
                      this.translateConnectionPoints(n, r),
                      this.path.translate(n, r);
                  } else {
                    var i = t.getVertices(),
                      o = this.findAnchors(i);
                    (this.sourceAnchor = o.source),
                      (this.targetAnchor = o.target),
                      (this.routePoints = this.findRoutePoints(i));
                    var a = this.findConnectionPoints(
                      this.routePoints,
                      this.sourceAnchor,
                      this.targetAnchor
                    );
                    (this.sourcePoint = a.source),
                      (this.targetPoint = a.target);
                    var s = this.findMarkerPoints(
                      this.routePoints,
                      this.sourcePoint,
                      this.targetPoint
                    );
                    this.path = this.findPath(
                      this.routePoints,
                      s.source || this.sourcePoint,
                      s.target || this.targetPoint
                    );
                  }
                  this.cleanCache();
                },
              },
              {
                key: 'findAnchors',
                value: function (e) {
                  var t = this.cell,
                    n = t.source,
                    r = t.target,
                    i = e[0],
                    o = e[e.length - 1];
                  return r.priority && !n.priority
                    ? this.findAnchorsOrdered('target', o, 'source', i)
                    : this.findAnchorsOrdered('source', i, 'target', o);
                },
              },
              {
                key: 'findAnchorsOrdered',
                value: function (e, t, n, r) {
                  var i,
                    o,
                    a,
                    s,
                    l = this.cell,
                    u = l[e],
                    c = l[n],
                    f = this.getTerminalView(e),
                    h = this.getTerminalView(n),
                    d = this.getTerminalMagnet(e),
                    g = this.getTerminalMagnet(n);
                  f
                    ? ((s = t ? Ku.create(t) : h ? g : Ku.create(c)),
                      (o = this.getAnchor(u.anchor, f, d, s, e)))
                    : (o = Ku.create(u));
                  if (h) {
                    var p = Ku.create(r || o);
                    a = this.getAnchor(c.anchor, h, g, p, n);
                  } else a = Ku.isPointLike(c) ? Ku.create(c) : new Ku();
                  return (i = {}), w()(i, e, o), w()(i, n, a), i;
                },
              },
              {
                key: 'getAnchor',
                value: function (e, t, n, r, i) {
                  var o,
                    a = t.isEdgeElement(n),
                    s = this.graph.options.connecting,
                    l = 'string' == typeof e ? { name: e } : e;
                  if (!l) {
                    var u = a
                      ? ('source' === i
                          ? s.sourceEdgeAnchor
                          : s.targetEdgeAnchor) || s.edgeAnchor
                      : ('source' === i ? s.sourceAnchor : s.targetAnchor) ||
                        s.anchor;
                    l = 'string' == typeof u ? { name: u } : u;
                  }
                  if (!l) throw new Error('Anchor should be specified.');
                  var c = l.name;
                  if (a) {
                    var f = mg.registry.get(c);
                    if ('function' != typeof f)
                      return mg.registry.onNotFound(c);
                    o = de(f, this, t, n, r, l.args || {}, i);
                  } else {
                    var h = gg.registry.get(c);
                    if ('function' != typeof h)
                      return gg.registry.onNotFound(c);
                    o = de(h, this, t, n, r, l.args || {}, i);
                  }
                  return o ? o.round(this.POINT_ROUNDING) : new Ku();
                },
              },
              {
                key: 'findRoutePoints',
                value: function () {
                  var e,
                    t =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    n =
                      this.graph.options.connecting.router || up.presets.normal,
                    r = this.cell.getRouter() || n;
                  if ('function' == typeof r) e = de(r, this, t, {}, this);
                  else {
                    var i = 'string' == typeof r ? r : r.name,
                      o = 'string' == typeof r ? {} : r.args || {},
                      a = i ? up.registry.get(i) : up.presets.normal;
                    if ('function' != typeof a)
                      return up.registry.onNotFound(i);
                    e = de(a, this, t, o, this);
                  }
                  return null == e
                    ? t.map(function (e) {
                        return Ku.create(e);
                      })
                    : e.map(function (e) {
                        return Ku.create(e);
                      });
                },
              },
              {
                key: 'findConnectionPoints',
                value: function (e, t, n) {
                  var r,
                    i,
                    o = this.cell,
                    a = this.graph.options.connecting,
                    s = o.getSource(),
                    l = o.getTarget(),
                    u = this.sourceView,
                    c = this.targetView,
                    f = e[0],
                    h = e[e.length - 1];
                  if (u && !u.isEdgeElement(this.sourceMagnet)) {
                    var d = this.sourceMagnet || u.container,
                      g = new ec(f || n, t),
                      p =
                        s.connectionPoint ||
                        a.sourceConnectionPoint ||
                        a.connectionPoint;
                    r = this.getConnectionPoint(p, u, d, g, 'source');
                  } else r = t;
                  if (c && !c.isEdgeElement(this.targetMagnet)) {
                    var v = this.targetMagnet || c.container,
                      y =
                        l.connectionPoint ||
                        a.targetConnectionPoint ||
                        a.connectionPoint,
                      m = new ec(h || t, n);
                    i = this.getConnectionPoint(y, c, v, m, 'target');
                  } else i = n;
                  return { source: r, target: i };
                },
              },
              {
                key: 'getConnectionPoint',
                value: function (e, t, n, r, i) {
                  var o = r.end;
                  if (null == e) return o;
                  var a = 'string' == typeof e ? e : e.name,
                    s = 'string' == typeof e ? {} : e.args,
                    l = Mg.registry.get(a);
                  if ('function' != typeof l) return Mg.registry.onNotFound(a);
                  var u = de(l, this, r, t, n, s || {}, i);
                  return u ? u.round(this.POINT_ROUNDING) : o;
                },
              },
              {
                key: 'findMarkerPoints',
                value: function (e, t, n) {
                  var r,
                    i,
                    o = this,
                    a = function (e) {
                      for (
                        var t = o.cell.getAttrs(),
                          n = Object.keys(t),
                          r = 0,
                          i = n.length;
                        r < i;
                        r += 1
                      ) {
                        var a = t[n[r]];
                        if (
                          a[''.concat(e, 'Marker')] ||
                          a[''.concat(e, '-marker')]
                        ) {
                          var s = a.strokeWidth || a['stroke-width'];
                          if (s) return parseFloat(s);
                          break;
                        }
                      }
                      return null;
                    },
                    s = e[0],
                    l = e[e.length - 1],
                    u = a('source');
                  u && (r = t.clone().move(s || n, -u));
                  var c = a('target');
                  return (
                    c && (i = n.clone().move(l || t, -c)),
                    (this.sourceMarkerPoint = r || t.clone()),
                    (this.targetMarkerPoint = i || n.clone()),
                    { source: r, target: i }
                  );
                },
              },
              {
                key: 'findPath',
                value: function (e, t, n) {
                  var r,
                    i,
                    o,
                    a =
                      this.cell.getConnector() ||
                      this.graph.options.connecting.connector;
                  if (
                    ('string' == typeof a
                      ? (r = a)
                      : ((r = a.name), (i = a.args)),
                    r)
                  ) {
                    var s = Ep.registry.get(r);
                    if ('function' != typeof s)
                      return Ep.registry.onNotFound(r);
                    o = s;
                  } else o = Ep.presets.normal;
                  var l = de(
                    o,
                    this,
                    t,
                    n,
                    e,
                    Object.assign(Object.assign({}, i), { raw: !0 }),
                    this
                  );
                  return 'string' == typeof l ? Sc.parse(l) : l;
                },
              },
              {
                key: 'translateConnectionPoints',
                value: function (e, t) {
                  this.sourcePoint.translate(e, t),
                    this.targetPoint.translate(e, t),
                    this.sourceAnchor.translate(e, t),
                    this.targetAnchor.translate(e, t),
                    this.sourceMarkerPoint.translate(e, t),
                    this.targetMarkerPoint.translate(e, t);
                },
              },
              {
                key: 'updateLabelPositions',
                value: function () {
                  if (null == this.labelContainer) return this;
                  if (!this.path) return this;
                  var e = this.cell,
                    t = e.getLabels();
                  if (0 === t.length) return this;
                  for (
                    var n = e.getDefaultLabel(),
                      r = this.normalizeLabelPosition(n.position),
                      i = 0,
                      o = t.length;
                    i < o;
                    i += 1
                  ) {
                    var a = t[i],
                      s = this.normalizeLabelPosition(a.position),
                      l = wr({}, r, s),
                      u = this.getLabelTransformationMatrix(l);
                    this.labelCache[i].setAttribute('transform', wu(u));
                  }
                  return this;
                },
              },
              {
                key: 'updateTerminalProperties',
                value: function (e) {
                  var t = this.cell,
                    n = this.graph,
                    r = t[e],
                    i = r && r.cell,
                    o = ''.concat(e, 'View');
                  if (!i)
                    return (this[o] = null), this.updateTerminalMagnet(e), !0;
                  var a = n.getCellById(i);
                  if (!a)
                    throw new Error(
                      "Edge's "
                        .concat(e, ' node with id "')
                        .concat(i, '" not exists')
                    );
                  var s = a.findView(n);
                  return (
                    !!s && ((this[o] = s), this.updateTerminalMagnet(e), !0)
                  );
                },
              },
              {
                key: 'updateTerminalMagnet',
                value: function (e) {
                  var t = ''.concat(e, 'Magnet'),
                    n = this.getTerminalView(e);
                  if (n) {
                    var r = n.getMagnetFromEdgeTerminal(this.cell[e]);
                    r === n.container && (r = null), (this[t] = r);
                  } else this[t] = null;
                },
              },
              {
                key: 'getLabelPositionAngle',
                value: function (e) {
                  var t = this.cell.getLabelAt(e);
                  return (
                    (t &&
                      t.position &&
                      'object' === _()(t.position) &&
                      t.position.angle) ||
                    0
                  );
                },
              },
              {
                key: 'getLabelPositionArgs',
                value: function (e) {
                  var t = this.cell.getLabelAt(e);
                  if (t && t.position && 'object' === _()(t.position))
                    return t.position.options;
                },
              },
              {
                key: 'getDefaultLabelPositionArgs',
                value: function () {
                  var e = this.cell.getDefaultLabel();
                  if (e && e.position && 'object' === _()(e.position))
                    return e.position.options;
                },
              },
              {
                key: 'mergeLabelPositionArgs',
                value: function (e, t) {
                  return null === e
                    ? null
                    : void 0 === e
                    ? null === t
                      ? null
                      : t
                    : wr({}, t, e);
                },
              },
              {
                key: 'getConnection',
                value: function () {
                  return null != this.path ? this.path.clone() : null;
                },
              },
              {
                key: 'getConnectionPathData',
                value: function () {
                  if (null == this.path) return '';
                  var e = this.cache.pathCache;
                  return (
                    Bt(e, 'data') || (e.data = this.path.serialize()),
                    e.data || ''
                  );
                },
              },
              {
                key: 'getConnectionSubdivisions',
                value: function () {
                  if (null == this.path) return null;
                  var e = this.cache.pathCache;
                  return (
                    Bt(e, 'segmentSubdivisions') ||
                      (e.segmentSubdivisions =
                        this.path.getSegmentSubdivisions()),
                    e.segmentSubdivisions
                  );
                },
              },
              {
                key: 'getConnectionLength',
                value: function () {
                  if (null == this.path) return 0;
                  var e = this.cache.pathCache;
                  return (
                    Bt(e, 'length') ||
                      (e.length = this.path.length({
                        segmentSubdivisions: this.getConnectionSubdivisions(),
                      })),
                    e.length
                  );
                },
              },
              {
                key: 'getPointAtLength',
                value: function (e) {
                  return null == this.path
                    ? null
                    : this.path.pointAtLength(e, {
                        segmentSubdivisions: this.getConnectionSubdivisions(),
                      });
                },
              },
              {
                key: 'getPointAtRatio',
                value: function (e) {
                  return null == this.path
                    ? null
                    : (Ss(e) && (e = parseFloat(e) / 100),
                      this.path.pointAt(e, {
                        segmentSubdivisions: this.getConnectionSubdivisions(),
                      }));
                },
              },
              {
                key: 'getTangentAtLength',
                value: function (e) {
                  return null == this.path
                    ? null
                    : this.path.tangentAtLength(e, {
                        segmentSubdivisions: this.getConnectionSubdivisions(),
                      });
                },
              },
              {
                key: 'getTangentAtRatio',
                value: function (e) {
                  return null == this.path
                    ? null
                    : this.path.tangentAt(e, {
                        segmentSubdivisions: this.getConnectionSubdivisions(),
                      });
                },
              },
              {
                key: 'getClosestPoint',
                value: function (e) {
                  return null == this.path
                    ? null
                    : this.path.closestPoint(e, {
                        segmentSubdivisions: this.getConnectionSubdivisions(),
                      });
                },
              },
              {
                key: 'getClosestPointLength',
                value: function (e) {
                  return null == this.path
                    ? null
                    : this.path.closestPointLength(e, {
                        segmentSubdivisions: this.getConnectionSubdivisions(),
                      });
                },
              },
              {
                key: 'getClosestPointRatio',
                value: function (e) {
                  return null == this.path
                    ? null
                    : this.path.closestPointNormalizedLength(e, {
                        segmentSubdivisions: this.getConnectionSubdivisions(),
                      });
                },
              },
              {
                key: 'getLabelPosition',
                value: function (e, t, n, r) {
                  var i,
                    o = { distance: 0 },
                    a = 0;
                  'number' == typeof n ? ((a = n), (i = r)) : (i = n),
                    null != i && (o.options = i);
                  var s,
                    l,
                    u = i && i.absoluteOffset,
                    c = !(i && i.absoluteDistance),
                    f = i && i.absoluteDistance && i.reverseDistance,
                    h = this.path,
                    d = {
                      segmentSubdivisions: this.getConnectionSubdivisions(),
                    },
                    g = new Ku(e, t),
                    p = h.closestPointT(g, d),
                    v = this.getConnectionLength() || 0,
                    y = h.lengthAtT(p, d);
                  if (
                    (c && (y = v > 0 ? y / v : 0),
                    f && (y = -1 * (v - y) || 1),
                    (o.distance = y),
                    u || (s = h.tangentAtT(p)),
                    s)
                  )
                    l = s.pointOffset(g);
                  else {
                    var m = h.pointAtT(p),
                      b = g.diff(m);
                    l = { x: b.x, y: b.y };
                  }
                  return (o.offset = l), (o.angle = a), o;
                },
              },
              {
                key: 'normalizeLabelPosition',
                value: function (e) {
                  return 'number' == typeof e ? { distance: e } : e;
                },
              },
              {
                key: 'getLabelTransformationMatrix',
                value: function (e) {
                  var t = this.normalizeLabelPosition(e),
                    n = t.options || {},
                    r = t.angle || 0,
                    i = t.distance,
                    o = i > 0 && i <= 1,
                    a = 0,
                    s = { x: 0, y: 0 },
                    l = t.offset;
                  l &&
                    ('number' == typeof l
                      ? (a = l)
                      : (null != l.x && (s.x = l.x),
                        null != l.y && (s.y = l.y)));
                  var u,
                    c = 0 !== s.x || 0 !== s.y || 0 === a,
                    f = n.keepGradient,
                    h = n.ensureLegibility,
                    d = this.path,
                    g = {
                      segmentSubdivisions: this.getConnectionSubdivisions(),
                    },
                    p = o ? i * this.getConnectionLength() : i,
                    v = d.tangentAtLength(p, g),
                    y = r;
                  if (v) {
                    if (c) (u = v.start).translate(s);
                    else {
                      var m = v.clone();
                      m.rotate(-90, v.start), m.setLength(a), (u = m.end);
                    }
                    f &&
                      ((y = v.angle() + r),
                      h && (y = Xu.normalize(((y + 90) % 180) - 90)));
                  } else (u = d.start), c && u.translate(s);
                  return mu().translate(u.x, u.y).rotate(y);
                },
              },
              {
                key: 'getVertexIndex',
                value: function (e, t) {
                  var n = this.cell.getVertices(),
                    r = this.getClosestPointLength(new Ku(e, t)),
                    i = 0;
                  if (null != r)
                    for (var o = n.length; i < o; i += 1) {
                      var a = n[i],
                        s = this.getClosestPointLength(a);
                      if (null != s && r < s) break;
                    }
                  return i;
                },
              },
              {
                key: 'getEventArgs',
                value: function (e, t, n) {
                  var r = this,
                    i = r.cell;
                  return null == t || null == n
                    ? { e: e, view: r, edge: i, cell: i }
                    : { e: e, x: t, y: n, view: r, edge: i, cell: i };
                },
              },
              {
                key: 'notifyUnhandledMouseDown',
                value: function (e, t, n) {
                  this.notify('edge:unhandled:mousedown', {
                    e: e,
                    x: t,
                    y: n,
                    view: this,
                    cell: this.cell,
                    edge: this.cell,
                  });
                },
              },
              {
                key: 'notifyMouseDown',
                value: function (e, t, n) {
                  wd()(Cd()(r.prototype), 'onMouseDown', this).call(
                    this,
                    e,
                    t,
                    n
                  ),
                    this.notify('edge:mousedown', this.getEventArgs(e, t, n));
                },
              },
              {
                key: 'notifyMouseMove',
                value: function (e, t, n) {
                  wd()(Cd()(r.prototype), 'onMouseMove', this).call(
                    this,
                    e,
                    t,
                    n
                  ),
                    this.notify('edge:mousemove', this.getEventArgs(e, t, n));
                },
              },
              {
                key: 'notifyMouseUp',
                value: function (e, t, n) {
                  wd()(Cd()(r.prototype), 'onMouseUp', this).call(
                    this,
                    e,
                    t,
                    n
                  ),
                    this.notify('edge:mouseup', this.getEventArgs(e, t, n));
                },
              },
              {
                key: 'onClick',
                value: function (e, t, n) {
                  wd()(Cd()(r.prototype), 'onClick', this).call(this, e, t, n),
                    this.notify('edge:click', this.getEventArgs(e, t, n));
                },
              },
              {
                key: 'onDblClick',
                value: function (e, t, n) {
                  wd()(Cd()(r.prototype), 'onDblClick', this).call(
                    this,
                    e,
                    t,
                    n
                  ),
                    this.notify('edge:dblclick', this.getEventArgs(e, t, n));
                },
              },
              {
                key: 'onContextMenu',
                value: function (e, t, n) {
                  wd()(Cd()(r.prototype), 'onContextMenu', this).call(
                    this,
                    e,
                    t,
                    n
                  ),
                    this.notify('edge:contextmenu', this.getEventArgs(e, t, n));
                },
              },
              {
                key: 'onMouseDown',
                value: function (e, t, n) {
                  this.notifyMouseDown(e, t, n),
                    this.startEdgeDragging(e, t, n);
                },
              },
              {
                key: 'onMouseMove',
                value: function (e, t, n) {
                  var r = this.getEventData(e);
                  switch (r.action) {
                    case 'drag-label':
                      this.dragLabel(e, t, n);
                      break;
                    case 'drag-arrowhead':
                      this.dragArrowhead(e, t, n);
                      break;
                    case 'drag-edge':
                      this.dragEdge(e, t, n);
                  }
                  return this.notifyMouseMove(e, t, n), r;
                },
              },
              {
                key: 'onMouseUp',
                value: function (e, t, n) {
                  var r = this.getEventData(e);
                  switch (r.action) {
                    case 'drag-label':
                      this.stopLabelDragging(e, t, n);
                      break;
                    case 'drag-arrowhead':
                      this.stopArrowheadDragging(e, t, n);
                      break;
                    case 'drag-edge':
                      this.stopEdgeDragging(e, t, n);
                  }
                  return (
                    this.notifyMouseUp(e, t, n), this.checkMouseleave(e), r
                  );
                },
              },
              {
                key: 'onMouseOver',
                value: function (e) {
                  wd()(Cd()(r.prototype), 'onMouseOver', this).call(this, e),
                    this.notify('edge:mouseover', this.getEventArgs(e));
                },
              },
              {
                key: 'onMouseOut',
                value: function (e) {
                  wd()(Cd()(r.prototype), 'onMouseOut', this).call(this, e),
                    this.notify('edge:mouseout', this.getEventArgs(e));
                },
              },
              {
                key: 'onMouseEnter',
                value: function (e) {
                  wd()(Cd()(r.prototype), 'onMouseEnter', this).call(this, e),
                    this.notify('edge:mouseenter', this.getEventArgs(e));
                },
              },
              {
                key: 'onMouseLeave',
                value: function (e) {
                  wd()(Cd()(r.prototype), 'onMouseLeave', this).call(this, e),
                    this.notify('edge:mouseleave', this.getEventArgs(e));
                },
              },
              {
                key: 'onMouseWheel',
                value: function (e, t, n, i) {
                  wd()(Cd()(r.prototype), 'onMouseWheel', this).call(
                    this,
                    e,
                    t,
                    n,
                    i
                  ),
                    this.notify(
                      'edge:mousewheel',
                      Object.assign({ delta: i }, this.getEventArgs(e, t, n))
                    );
                },
              },
              {
                key: 'onCustomEvent',
                value: function (e, t, n, i) {
                  if (cl(e.target, 'edge-tool', this.container)) {
                    if ((e.stopPropagation(), this.can('useEdgeTools'))) {
                      if ('edge:remove' === t)
                        return void this.cell.remove({ ui: !0 });
                      this.notify(
                        'edge:customevent',
                        Object.assign({ name: t }, this.getEventArgs(e, n, i))
                      );
                    }
                    this.notifyMouseDown(e, n, i);
                  } else
                    this.notify(
                      'edge:customevent',
                      Object.assign({ name: t }, this.getEventArgs(e, n, i))
                    ),
                      wd()(Cd()(r.prototype), 'onCustomEvent', this).call(
                        this,
                        e,
                        t,
                        n,
                        i
                      );
                },
              },
              {
                key: 'onLabelMouseDown',
                value: function (e, t, n) {
                  this.notifyMouseDown(e, t, n),
                    this.startLabelDragging(e, t, n),
                    this.getEventData(e).stopPropagation && e.stopPropagation();
                },
              },
              {
                key: 'startEdgeDragging',
                value: function (e, t, n) {
                  this.can('edgeMovable')
                    ? this.setEventData(e, {
                        x: t,
                        y: n,
                        moving: !1,
                        action: 'drag-edge',
                      })
                    : this.notifyUnhandledMouseDown(e, t, n);
                },
              },
              {
                key: 'dragEdge',
                value: function (e, t, n) {
                  var r = this.getEventData(e);
                  r.moving ||
                    ((r.moving = !0),
                    this.addClass('edge-moving'),
                    this.notify('edge:move', {
                      e: e,
                      x: t,
                      y: n,
                      view: this,
                      cell: this.cell,
                      edge: this.cell,
                    })),
                    this.cell.translate(t - r.x, n - r.y, { ui: !0 }),
                    this.setEventData(e, { x: t, y: n }),
                    this.notify('edge:moving', {
                      e: e,
                      x: t,
                      y: n,
                      view: this,
                      cell: this.cell,
                      edge: this.cell,
                    });
                },
              },
              {
                key: 'stopEdgeDragging',
                value: function (e, t, n) {
                  var r = this.getEventData(e);
                  r.moving &&
                    (this.removeClass('edge-moving'),
                    this.notify('edge:moved', {
                      e: e,
                      x: t,
                      y: n,
                      view: this,
                      cell: this.cell,
                      edge: this.cell,
                    })),
                    (r.moving = !1);
                },
              },
              {
                key: 'prepareArrowheadDragging',
                value: function (e, t) {
                  var n = this.getTerminalMagnet(e),
                    r = {
                      action: 'drag-arrowhead',
                      x: t.x,
                      y: t.y,
                      isNewEdge: !0 === t.isNewEdge,
                      terminalType: e,
                      initialMagnet: n,
                      initialTerminal: Wi(this.cell[e]),
                      fallbackAction: t.fallbackAction || 'revert',
                      getValidateConnectionArgs:
                        this.createValidateConnectionArgs(e),
                      options: t.options,
                    };
                  return this.beforeArrowheadDragging(r), r;
                },
              },
              {
                key: 'createValidateConnectionArgs',
                value: function (e) {
                  var t,
                    n = [];
                  (n[4] = e), (n[5] = this);
                  var r = 0,
                    i = 0;
                  'source' === e
                    ? ((r = 2), (t = 'target'))
                    : ((i = 2), (t = 'source'));
                  var o = this.cell[t],
                    a = o.cell;
                  if (a) {
                    var s,
                      l = (n[r] = this.graph.findViewByCell(a));
                    l &&
                      (s = l.getMagnetFromEdgeTerminal(o)) === l.container &&
                      (s = void 0),
                      (n[r + 1] = s);
                  }
                  return function (e, t) {
                    return (
                      (n[i] = e), (n[i + 1] = e.container === t ? void 0 : t), n
                    );
                  };
                },
              },
              {
                key: 'beforeArrowheadDragging',
                value: function (e) {
                  (e.zIndex = this.cell.zIndex), this.cell.toFront();
                  var t = this.container.style;
                  (e.pointerEvents = t.pointerEvents),
                    (t.pointerEvents = 'none'),
                    this.graph.options.connecting.highlight &&
                      this.highlightAvailableMagnets(e);
                },
              },
              {
                key: 'afterArrowheadDragging',
                value: function (e) {
                  null != e.zIndex &&
                    (this.cell.setZIndex(e.zIndex, { ui: !0 }),
                    (e.zIndex = null)),
                    (this.container.style.pointerEvents =
                      e.pointerEvents || ''),
                    this.graph.options.connecting.highlight &&
                      this.unhighlightAvailableMagnets(e);
                },
              },
              {
                key: 'validateConnection',
                value: function (e, t, n, i, o, a, s) {
                  var l = this,
                    u = this.graph.options.connecting,
                    c = u.allowLoop,
                    f = u.allowNode,
                    h = u.allowEdge,
                    d = u.allowPort,
                    g = u.allowMulti,
                    p = u.validateConnection,
                    v = a ? a.cell : null,
                    y = 'target' === o ? n : e,
                    m = 'target' === o ? i : t,
                    b = !0,
                    k = function (r) {
                      var u =
                          'source' === o
                            ? s
                              ? s.port
                              : null
                            : v
                            ? v.getSourcePortId()
                            : null,
                        c =
                          'target' === o
                            ? s
                              ? s.port
                              : null
                            : v
                            ? v.getTargetPortId()
                            : null;
                      return de(r, l.graph, {
                        edge: v,
                        edgeView: a,
                        sourceView: e,
                        targetView: n,
                        sourcePort: u,
                        targetPort: c,
                        sourceMagnet: t,
                        targetMagnet: i,
                        sourceCell: e ? e.cell : null,
                        targetCell: n ? n.cell : null,
                        type: o,
                      });
                    };
                  if (
                    (null != c &&
                      ('boolean' == typeof c
                        ? c || e !== n || (b = !1)
                        : (b = k(c))),
                    b &&
                      null != d &&
                      ('boolean' == typeof d
                        ? !d && m && (b = !1)
                        : (b = k(d))),
                    b &&
                      null != h &&
                      ('boolean' == typeof h
                        ? !h && r.isEdgeView(y) && (b = !1)
                        : (b = k(h))),
                    b &&
                      null != f &&
                      null == m &&
                      ('boolean' == typeof f
                        ? !f && Qp.isNodeView(y) && (b = !1)
                        : (b = k(f))),
                    b && null != g && a)
                  ) {
                    var w = a.cell,
                      x = 'source' === o ? s : w.getSource(),
                      C = 'target' === o ? s : w.getTarget(),
                      S = s ? this.graph.getCellById(s.cell) : null;
                    if (x && C && x.cell && C.cell && S)
                      if ('function' == typeof g) b = k(g);
                      else {
                        var E = this.graph.model.getConnectedEdges(S, {
                          outgoing: 'source' === o,
                          incoming: 'target' === o,
                        });
                        if (E.length)
                          if ('withPort' === g)
                            E.some(function (e) {
                              var t = e.getSource(),
                                n = e.getTarget();
                              return (
                                t &&
                                n &&
                                t.cell === x.cell &&
                                n.cell === C.cell &&
                                null != t.port &&
                                t.port === x.port &&
                                null != n.port &&
                                n.port === C.port
                              );
                            }) && (b = !1);
                          else if (!g) {
                            E.some(function (e) {
                              var t = e.getSource(),
                                n = e.getTarget();
                              return (
                                t && n && t.cell === x.cell && n.cell === C.cell
                              );
                            }) && (b = !1);
                          }
                      }
                  }
                  return b && null != p && (b = k(p)), b;
                },
              },
              {
                key: 'allowConnectToBlank',
                value: function (e) {
                  var t = this.graph,
                    n = t.options.connecting.allowBlank;
                  if ('function' != typeof n) return !!n;
                  var r = t.findViewByCell(e),
                    i = e.getSourceCell(),
                    o = e.getTargetCell(),
                    a = t.findViewByCell(i),
                    s = t.findViewByCell(o);
                  return de(n, t, {
                    edge: e,
                    edgeView: r,
                    sourceCell: i,
                    targetCell: o,
                    sourceView: a,
                    targetView: s,
                    sourcePort: e.getSourcePortId(),
                    targetPort: e.getTargetPortId(),
                    sourceMagnet: r.sourceMagnet,
                    targetMagnet: r.targetMagnet,
                  });
                },
              },
              {
                key: 'validateEdge',
                value: function (e, t, n) {
                  var r = this.graph;
                  if (!this.allowConnectToBlank(e)) {
                    var i = e.getSourceCellId(),
                      o = e.getTargetCellId();
                    if (!i || !o) return !1;
                  }
                  var a = r.options.connecting.validateEdge;
                  return !a || de(a, r, { edge: e, type: t, previous: n });
                },
              },
              {
                key: 'arrowheadDragging',
                value: function (e, t, n, r) {
                  (r.x = t),
                    (r.y = n),
                    r.currentTarget !== e &&
                      (r.currentMagnet &&
                        r.currentView &&
                        r.currentView.unhighlight(r.currentMagnet, {
                          type: 'magnetAdsorbed',
                        }),
                      (r.currentView = this.graph.findViewByElem(e)),
                      r.currentView
                        ? ((r.currentMagnet = r.currentView.findMagnet(e)),
                          r.currentMagnet &&
                          this.validateConnection.apply(
                            this,
                            L()(
                              r.getValidateConnectionArgs(
                                r.currentView,
                                r.currentMagnet
                              )
                            ).concat([
                              r.currentView.getEdgeTerminal(
                                r.currentMagnet,
                                t,
                                n,
                                this.cell,
                                r.terminalType
                              ),
                            ])
                          )
                            ? r.currentView.highlight(r.currentMagnet, {
                                type: 'magnetAdsorbed',
                              })
                            : (r.currentMagnet = null))
                        : (r.currentMagnet = null)),
                    (r.currentTarget = e),
                    this.cell.prop(
                      r.terminalType,
                      { x: t, y: n },
                      Object.assign(Object.assign({}, r.options), { ui: !0 })
                    );
                },
              },
              {
                key: 'arrowheadDragged',
                value: function (e, t, n) {
                  var r = e.currentView,
                    i = e.currentMagnet;
                  if (i && r) {
                    r.unhighlight(i, { type: 'magnetAdsorbed' });
                    var o = e.terminalType,
                      a = r.getEdgeTerminal(i, t, n, this.cell, o);
                    this.cell.setTerminal(o, a, { ui: !0 });
                  }
                },
              },
              {
                key: 'snapArrowhead',
                value: function (e, t, n) {
                  var r = this,
                    i = this.graph,
                    o = i.options.connecting,
                    a = o.snap,
                    s = o.allowEdge,
                    l = ('object' === _()(a) && a.radius) || 50,
                    u = i.renderer.findViewsInArea(
                      { x: e - l, y: t - l, width: 2 * l, height: 2 * l },
                      { nodeOnly: !0 }
                    );
                  if (s) {
                    var c = i.renderer
                      .findEdgeViewsFromPoint({ x: e, y: t }, l)
                      .filter(function (e) {
                        return e !== r;
                      });
                    u.push.apply(u, L()(c));
                  }
                  var f,
                    h = n.closestView || null,
                    d = n.closestMagnet || null;
                  (n.closestView = null), (n.closestMagnet = null);
                  var g,
                    p = Number.MAX_SAFE_INTEGER,
                    v = new Ku(e, t);
                  u.forEach(function (i) {
                    if ('false' !== i.container.getAttribute('magnet')) {
                      if (i.isNodeView())
                        f = i.cell.getBBox().getCenter().distance(v);
                      else if (i.isEdgeView()) {
                        var o = i.getClosestPoint(v);
                        f = o ? o.distance(v) : Number.MAX_SAFE_INTEGER;
                      }
                      f < l &&
                        f < p &&
                        (d === i.container ||
                          r.validateConnection.apply(
                            r,
                            L()(n.getValidateConnectionArgs(i, null)).concat([
                              i.getEdgeTerminal(
                                i.container,
                                e,
                                t,
                                r.cell,
                                n.terminalType
                              ),
                            ])
                          )) &&
                        ((p = f),
                        (n.closestView = i),
                        (n.closestMagnet = i.container));
                    }
                    i.container
                      .querySelectorAll('[magnet]')
                      .forEach(function (o) {
                        if ('false' !== o.getAttribute('magnet')) {
                          var a = i.getBBoxOfElement(o);
                          (f = v.distance(a.getCenter())) < l &&
                            f < p &&
                            (d === o ||
                              r.validateConnection.apply(
                                r,
                                L()(n.getValidateConnectionArgs(i, o)).concat([
                                  i.getEdgeTerminal(
                                    o,
                                    e,
                                    t,
                                    r.cell,
                                    n.terminalType
                                  ),
                                ])
                              )) &&
                            ((p = f),
                            (n.closestView = i),
                            (n.closestMagnet = o));
                        }
                      });
                  });
                  var y = n.terminalType,
                    m = n.closestView,
                    b = n.closestMagnet,
                    k = d !== b;
                  if (
                    (h && k && h.unhighlight(d, { type: 'magnetAdsorbed' }), m)
                  ) {
                    if (!k) return;
                    m.highlight(b, { type: 'magnetAdsorbed' }),
                      (g = m.getEdgeTerminal(b, e, t, this.cell, y));
                  } else g = { x: e, y: t };
                  this.cell.setTerminal(
                    y,
                    g,
                    {},
                    Object.assign(Object.assign({}, n.options), { ui: !0 })
                  );
                },
              },
              {
                key: 'snapArrowheadEnd',
                value: function (e) {
                  var t = e.closestView,
                    n = e.closestMagnet;
                  t &&
                    n &&
                    (t.unhighlight(n, { type: 'magnetAdsorbed' }),
                    (e.currentMagnet = t.findMagnet(n))),
                    (e.closestView = null),
                    (e.closestMagnet = null);
                },
              },
              {
                key: 'finishEmbedding',
                value: function (e) {
                  this.graph.options.embedding.enabled &&
                    this.cell.updateParent() &&
                    (e.zIndex = null);
                },
              },
              {
                key: 'fallbackConnection',
                value: function (e) {
                  if ('remove' === e.fallbackAction)
                    this.cell.remove({ ui: !0 });
                  else
                    this.cell.prop(e.terminalType, e.initialTerminal, {
                      ui: !0,
                    });
                },
              },
              {
                key: 'notifyConnectionEvent',
                value: function (e, t) {
                  var n = e.terminalType,
                    r = e.initialTerminal,
                    i = this.cell[n];
                  if (i && !zp.equalTerminals(r, i)) {
                    var o = this.graph,
                      a = r,
                      s = a.cell ? o.getCellById(a.cell) : null,
                      l = a.port,
                      u = s ? o.findViewByCell(s) : null,
                      c = s || e.isNewEdge ? null : Ku.create(r).toJSON(),
                      f = i,
                      h = f.cell ? o.getCellById(f.cell) : null,
                      d = f.port,
                      g = h ? o.findViewByCell(h) : null,
                      p = h ? null : Ku.create(i).toJSON();
                    this.notify('edge:connected', {
                      e: t,
                      previousCell: s,
                      previousPort: l,
                      previousView: u,
                      previousPoint: c,
                      currentCell: h,
                      currentView: g,
                      currentPort: d,
                      currentPoint: p,
                      previousMagnet: e.initialMagnet,
                      currentMagnet: e.currentMagnet,
                      edge: this.cell,
                      view: this,
                      type: n,
                      isNew: e.isNewEdge,
                    });
                  }
                },
              },
              {
                key: 'highlightAvailableMagnets',
                value: function (e) {
                  var t = this,
                    n = this.graph,
                    r = n.model.getCells();
                  e.marked = {};
                  for (
                    var i = function () {
                        var i = n.findViewByCell(r[o]);
                        if (!i || i.cell.id === t.cell.id) return 'continue';
                        var a = Array.prototype.slice.call(
                          i.container.querySelectorAll('[magnet]')
                        );
                        'false' !== i.container.getAttribute('magnet') &&
                          a.push(i.container);
                        var s = a.filter(function (n) {
                          return t.validateConnection.apply(
                            t,
                            L()(e.getValidateConnectionArgs(i, n)).concat([
                              i.getEdgeTerminal(
                                n,
                                e.x,
                                e.y,
                                t.cell,
                                e.terminalType
                              ),
                            ])
                          );
                        });
                        if (s.length > 0) {
                          for (var l = 0, u = s.length; l < u; l += 1)
                            i.highlight(s[l], { type: 'magnetAvailable' });
                          i.highlight(null, { type: 'nodeAvailable' }),
                            (e.marked[i.cell.id] = s);
                        }
                      },
                      o = 0,
                      a = r.length;
                    o < a;
                    o += 1
                  )
                    i();
                },
              },
              {
                key: 'unhighlightAvailableMagnets',
                value: function (e) {
                  var t = this,
                    n = e.marked || {};
                  Object.keys(n).forEach(function (e) {
                    var r = t.graph.findViewByCell(e);
                    r &&
                      (n[e].forEach(function (e) {
                        r.unhighlight(e, { type: 'magnetAvailable' });
                      }),
                      r.unhighlight(null, { type: 'nodeAvailable' }));
                  }),
                    (e.marked = null);
                },
              },
              {
                key: 'startArrowheadDragging',
                value: function (e, t, n) {
                  if (this.can('arrowheadMovable')) {
                    var r = e.target.getAttribute('data-terminal'),
                      i = this.prepareArrowheadDragging(r, { x: t, y: n });
                    this.setEventData(e, i);
                  } else this.notifyUnhandledMouseDown(e, t, n);
                },
              },
              {
                key: 'dragArrowhead',
                value: function (e, t, n) {
                  var r = this.getEventData(e);
                  this.graph.options.connecting.snap
                    ? this.snapArrowhead(t, n, r)
                    : this.arrowheadDragging(this.getEventTarget(e), t, n, r);
                },
              },
              {
                key: 'stopArrowheadDragging',
                value: function (e, t, n) {
                  var r = this.graph,
                    i = this.getEventData(e);
                  r.options.connecting.snap
                    ? this.snapArrowheadEnd(i)
                    : this.arrowheadDragged(i, t, n),
                    this.validateEdge(
                      this.cell,
                      i.terminalType,
                      i.initialTerminal
                    )
                      ? (this.finishEmbedding(i),
                        this.notifyConnectionEvent(i, e))
                      : this.fallbackConnection(i),
                    this.afterArrowheadDragging(i);
                },
              },
              {
                key: 'startLabelDragging',
                value: function (e, t, n) {
                  if (this.can('edgeLabelMovable')) {
                    var r = e.currentTarget,
                      i = parseInt(r.getAttribute('data-index'), 10),
                      o = this.getLabelPositionAngle(i),
                      a = this.getLabelPositionArgs(i),
                      s = this.getDefaultLabelPositionArgs(),
                      l = this.mergeLabelPositionArgs(a, s);
                    this.setEventData(e, {
                      index: i,
                      positionAngle: o,
                      positionArgs: l,
                      stopPropagation: !0,
                      action: 'drag-label',
                    });
                  } else this.setEventData(e, { stopPropagation: !0 });
                  this.graph.view.delegateDragEvents(e, this);
                },
              },
              {
                key: 'dragLabel',
                value: function (e, t, n) {
                  var r = this.getEventData(e),
                    i = this.cell.getLabelAt(r.index),
                    o = wr({}, i, {
                      position: this.getLabelPosition(
                        t,
                        n,
                        r.positionAngle,
                        r.positionArgs
                      ),
                    });
                  this.cell.setLabelAt(r.index, o);
                },
              },
              { key: 'stopLabelDragging', value: function (e, t, n) {} },
            ]),
            r
          );
        })(Td, Symbol.toStringTag);
        !(function (e) {
          (e.toStringTag = 'X6.'.concat(e.name)),
            (e.isEdgeView = function (t) {
              if (null == t) return !1;
              if (t instanceof e) return !0;
              var n = t[Symbol.toStringTag],
                r = t;
              return (
                (null == n || n === e.toStringTag) &&
                'function' == typeof r.isNodeView &&
                'function' == typeof r.isEdgeView &&
                'function' == typeof r.confirmUpdate &&
                'function' == typeof r.update &&
                'function' == typeof r.getConnection
              );
            });
        })(Kp || (Kp = {})),
          Kp.config({
            isSvgElement: !0,
            priority: 1,
            bootstrap: ['render', 'source', 'target'],
            actions: {
              view: ['render'],
              markup: ['render'],
              attrs: ['update'],
              source: ['source', 'update'],
              target: ['target', 'update'],
              router: ['update'],
              connector: ['update'],
              labels: ['labels'],
              defaultLabel: ['labels'],
              tools: ['tools'],
              vertices: ['vertices', 'update'],
            },
          }),
          Kp.registry.register('edge', Kp, !0);
        var Zp = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          ev = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n(e) {
              var r;
              y()(this, n), ((r = t.call(this)).graph = e);
              var i = Ed.parseJSONMarkup(n.markup),
                o = i.selectors,
                a = i.fragment;
              return (
                (r.background = o.background),
                (r.grid = o.grid),
                (r.svg = o.svg),
                (r.defs = o.defs),
                (r.viewport = o.viewport),
                (r.primer = o.primer),
                (r.stage = o.stage),
                (r.decorator = o.decorator),
                (r.overlay = o.overlay),
                (r.container = r.options.container),
                (r.restore = n.snapshoot(r.container)),
                Ks(r.container, r.prefixClassName('graph')),
                gl(r.container, a),
                r.delegateEvents(),
                r
              );
            }
            return (
              b()(n, [
                {
                  key: 'options',
                  get: function () {
                    return this.graph.options;
                  },
                },
                {
                  key: 'delegateEvents',
                  value: function () {
                    var e = this.constructor;
                    return (
                      wd()(Cd()(n.prototype), 'delegateEvents', this).call(
                        this,
                        e.events
                      ),
                      this
                    );
                  },
                },
                {
                  key: 'guard',
                  value: function (e, t) {
                    return (
                      ('mousedown' === e.type && 2 === e.button) ||
                      !(!this.options.guard || !this.options.guard(e, t)) ||
                      (e.data && void 0 !== e.data.guarded
                        ? e.data.guarded
                        : !(t && t.cell && Lp.isCell(t.cell)) &&
                          this.svg !== e.target &&
                          this.container !== e.target &&
                          !this.svg.contains(e.target))
                    );
                  },
                },
                {
                  key: 'findView',
                  value: function (e) {
                    return this.graph.findViewByElem(e);
                  },
                },
                {
                  key: 'onDblClick',
                  value: function (e) {
                    this.options.preventDefaultDblClick && e.preventDefault();
                    var t = this.normalizeEvent(e),
                      n = this.findView(t.target);
                    if (!this.guard(t, n)) {
                      var r = this.graph.snapToGrid(t.clientX, t.clientY);
                      n
                        ? n.onDblClick(t, r.x, r.y)
                        : this.graph.trigger('blank:dblclick', {
                            e: t,
                            x: r.x,
                            y: r.y,
                          });
                    }
                  },
                },
                {
                  key: 'onClick',
                  value: function (e) {
                    if (
                      this.getMouseMovedCount(e) <= this.options.clickThreshold
                    ) {
                      var t = this.normalizeEvent(e),
                        n = this.findView(t.target);
                      if (this.guard(t, n)) return;
                      var r = this.graph.snapToGrid(t.clientX, t.clientY);
                      n
                        ? n.onClick(t, r.x, r.y)
                        : this.graph.trigger('blank:click', {
                            e: t,
                            x: r.x,
                            y: r.y,
                          });
                    }
                  },
                },
                {
                  key: 'isPreventDefaultContextMenu',
                  value: function (e) {
                    var t = this.options.preventDefaultContextMenu;
                    return (
                      'function' == typeof t &&
                        (t = de(t, this.graph, { view: e })),
                      t
                    );
                  },
                },
                {
                  key: 'onContextMenu',
                  value: function (e) {
                    var t = this.normalizeEvent(e),
                      n = this.findView(t.target);
                    if (
                      (this.isPreventDefaultContextMenu(n) &&
                        e.preventDefault(),
                      !this.guard(t, n))
                    ) {
                      var r = this.graph.snapToGrid(t.clientX, t.clientY);
                      n
                        ? n.onContextMenu(t, r.x, r.y)
                        : this.graph.trigger('blank:contextmenu', {
                            e: t,
                            x: r.x,
                            y: r.y,
                          });
                    }
                  },
                },
                {
                  key: 'delegateDragEvents',
                  value: function (e, t) {
                    null == e.data && (e.data = {}),
                      this.setEventData(e, {
                        currentView: t || null,
                        mouseMovedCount: 0,
                        startPosition: { x: e.clientX, y: e.clientY },
                      });
                    var n = this.constructor;
                    this.delegateDocumentEvents(n.documentEvents, e.data),
                      this.undelegateEvents();
                  },
                },
                {
                  key: 'getMouseMovedCount',
                  value: function (e) {
                    return this.getEventData(e).mouseMovedCount || 0;
                  },
                },
                {
                  key: 'onMouseDown',
                  value: function (e) {
                    var t = this.normalizeEvent(e),
                      n = this.findView(t.target);
                    if (!this.guard(t, n)) {
                      this.options.preventDefaultMouseDown &&
                        e.preventDefault();
                      var r = this.graph.snapToGrid(t.clientX, t.clientY);
                      n
                        ? n.onMouseDown(t, r.x, r.y)
                        : (this.options.preventDefaultBlankAction &&
                            ['touchstart'].includes(t.type) &&
                            e.preventDefault(),
                          this.graph.trigger('blank:mousedown', {
                            e: t,
                            x: r.x,
                            y: r.y,
                          })),
                        this.delegateDragEvents(t, n);
                    }
                  },
                },
                {
                  key: 'onMouseMove',
                  value: function (e) {
                    var t = this.getEventData(e),
                      n = t.startPosition;
                    if (
                      (!n || n.x !== e.clientX || n.y !== e.clientY) &&
                      (null == t.mouseMovedCount && (t.mouseMovedCount = 0),
                      (t.mouseMovedCount += 1),
                      !(t.mouseMovedCount <= this.options.moveThreshold))
                    ) {
                      var r = this.normalizeEvent(e),
                        i = this.graph.snapToGrid(r.clientX, r.clientY),
                        o = t.currentView;
                      o
                        ? o.onMouseMove(r, i.x, i.y)
                        : this.graph.trigger('blank:mousemove', {
                            e: r,
                            x: i.x,
                            y: i.y,
                          }),
                        this.setEventData(r, t);
                    }
                  },
                },
                {
                  key: 'onMouseUp',
                  value: function (e) {
                    this.undelegateDocumentEvents();
                    var t = this.normalizeEvent(e),
                      n = this.graph.snapToGrid(t.clientX, t.clientY),
                      r = this.getEventData(e).currentView;
                    if (
                      (r
                        ? r.onMouseUp(t, n.x, n.y)
                        : this.graph.trigger('blank:mouseup', {
                            e: t,
                            x: n.x,
                            y: n.y,
                          }),
                      !e.isPropagationStopped())
                    ) {
                      var i = new Tu(e, { type: 'click', data: e.data });
                      this.onClick(i);
                    }
                    e.stopImmediatePropagation(), this.delegateEvents();
                  },
                },
                {
                  key: 'onMouseOver',
                  value: function (e) {
                    var t = this.normalizeEvent(e),
                      n = this.findView(t.target);
                    if (!this.guard(t, n))
                      if (n) n.onMouseOver(t);
                      else {
                        if (this.container === t.target) return;
                        this.graph.trigger('blank:mouseover', { e: t });
                      }
                  },
                },
                {
                  key: 'onMouseOut',
                  value: function (e) {
                    var t = this.normalizeEvent(e),
                      n = this.findView(t.target);
                    if (!this.guard(t, n))
                      if (n) n.onMouseOut(t);
                      else {
                        if (this.container === t.target) return;
                        this.graph.trigger('blank:mouseout', { e: t });
                      }
                  },
                },
                {
                  key: 'onMouseEnter',
                  value: function (e) {
                    var t = this.normalizeEvent(e),
                      n = this.findView(t.target);
                    if (!this.guard(t, n)) {
                      var r = this.graph.findViewByElem(t.relatedTarget);
                      if (n) {
                        if (r === n) return;
                        n.onMouseEnter(t);
                      } else {
                        if (r) return;
                        this.graph.trigger('graph:mouseenter', { e: t });
                      }
                    }
                  },
                },
                {
                  key: 'onMouseLeave',
                  value: function (e) {
                    var t = this.normalizeEvent(e),
                      n = this.findView(t.target);
                    if (!this.guard(t, n)) {
                      var r = this.graph.findViewByElem(t.relatedTarget);
                      if (n) {
                        if (r === n) return;
                        n.onMouseLeave(t);
                      } else {
                        if (r) return;
                        this.graph.trigger('graph:mouseleave', { e: t });
                      }
                    }
                  },
                },
                {
                  key: 'onMouseWheel',
                  value: function (e) {
                    var t = this.normalizeEvent(e),
                      n = this.findView(t.target);
                    if (!this.guard(t, n)) {
                      var r = t.originalEvent,
                        i = this.graph.snapToGrid(r.clientX, r.clientY),
                        o = Math.max(
                          -1,
                          Math.min(1, r.wheelDelta || -r.detail)
                        );
                      n
                        ? n.onMouseWheel(t, i.x, i.y, o)
                        : this.graph.trigger('blank:mousewheel', {
                            e: t,
                            delta: o,
                            x: i.x,
                            y: i.y,
                          });
                    }
                  },
                },
                {
                  key: 'onCustomEvent',
                  value: function (e) {
                    var t = e.currentTarget,
                      n =
                        t.getAttribute('event') || t.getAttribute('data-event');
                    if (n) {
                      var r = this.findView(t);
                      if (r) {
                        var i = this.normalizeEvent(e);
                        if (this.guard(i, r)) return;
                        var o = this.graph.snapToGrid(i.clientX, i.clientY);
                        r.onCustomEvent(i, n, o.x, o.y);
                      }
                    }
                  },
                },
                {
                  key: 'handleMagnetEvent',
                  value: function (e, t) {
                    var n = e.currentTarget,
                      r = n.getAttribute('magnet');
                    if (r && 'false' !== r.toLowerCase()) {
                      var i = this.findView(n);
                      if (i) {
                        var o = this.normalizeEvent(e);
                        if (this.guard(o, i)) return;
                        var a = this.graph.snapToGrid(o.clientX, o.clientY);
                        de(t, this.graph, i, o, n, a.x, a.y);
                      }
                    }
                  },
                },
                {
                  key: 'onMagnetMouseDown',
                  value: function (e) {
                    this.handleMagnetEvent(e, function (e, t, n, r, i) {
                      e.onMagnetMouseDown(t, n, r, i);
                    });
                  },
                },
                {
                  key: 'onMagnetDblClick',
                  value: function (e) {
                    this.handleMagnetEvent(e, function (e, t, n, r, i) {
                      e.onMagnetDblClick(t, n, r, i);
                    });
                  },
                },
                {
                  key: 'onMagnetContextMenu',
                  value: function (e) {
                    var t = this.findView(e.target);
                    this.isPreventDefaultContextMenu(t) && e.preventDefault(),
                      this.handleMagnetEvent(e, function (e, t, n, r, i) {
                        e.onMagnetContextMenu(t, n, r, i);
                      });
                  },
                },
                {
                  key: 'onLabelMouseDown',
                  value: function (e) {
                    var t = e.currentTarget,
                      n = this.findView(t);
                    if (n) {
                      var r = this.normalizeEvent(e);
                      if (this.guard(r, n)) return;
                      var i = this.graph.snapToGrid(r.clientX, r.clientY);
                      n.onLabelMouseDown(r, i.x, i.y);
                    }
                  },
                },
                {
                  key: 'onImageDragStart',
                  value: function () {
                    return !1;
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    this.undelegateEvents(),
                      this.undelegateDocumentEvents(),
                      this.restore(),
                      (this.restore = function () {});
                  },
                },
              ]),
              n
            );
          })(Sd);
        Zp([Sd.dispose()], ev.prototype, 'dispose', null),
          (function (e) {
            var t = ''.concat(jh.prefixCls, '-graph');
            (e.markup = [
              {
                ns: il.xhtml,
                tagName: 'div',
                selector: 'background',
                className: ''.concat(t, '-background'),
              },
              {
                ns: il.xhtml,
                tagName: 'div',
                selector: 'grid',
                className: ''.concat(t, '-grid'),
              },
              {
                ns: il.svg,
                tagName: 'svg',
                selector: 'svg',
                className: ''.concat(t, '-svg'),
                attrs: {
                  width: '100%',
                  height: '100%',
                  'xmlns:xlink': il.xlink,
                },
                children: [
                  { tagName: 'defs', selector: 'defs' },
                  {
                    tagName: 'g',
                    selector: 'viewport',
                    className: ''.concat(t, '-svg-viewport'),
                    children: [
                      {
                        tagName: 'g',
                        selector: 'primer',
                        className: ''.concat(t, '-svg-primer'),
                      },
                      {
                        tagName: 'g',
                        selector: 'stage',
                        className: ''.concat(t, '-svg-stage'),
                      },
                      {
                        tagName: 'g',
                        selector: 'decorator',
                        className: ''.concat(t, '-svg-decorator'),
                      },
                      {
                        tagName: 'g',
                        selector: 'overlay',
                        className: ''.concat(t, '-svg-overlay'),
                      },
                    ],
                  },
                ],
              },
            ]),
              (e.snapshoot = function (e) {
                var t = e.cloneNode();
                return (
                  e.childNodes.forEach(function (e) {
                    return t.appendChild(e);
                  }),
                  function () {
                    for (dl(e); e.attributes.length > 0; )
                      e.removeAttribute(e.attributes[0].name);
                    for (var n = 0, r = t.attributes.length; n < r; n += 1) {
                      var i = t.attributes[n];
                      e.setAttribute(i.name, i.value);
                    }
                    t.childNodes.forEach(function (t) {
                      return e.appendChild(t);
                    });
                  }
                );
              });
          })(ev || (ev = {})),
          (function (e) {
            var t,
              n = jh.prefixCls;
            (e.events =
              ((t = {
                dblclick: 'onDblClick',
                contextmenu: 'onContextMenu',
                touchstart: 'onMouseDown',
                mousedown: 'onMouseDown',
                mouseover: 'onMouseOver',
                mouseout: 'onMouseOut',
                mouseenter: 'onMouseEnter',
                mouseleave: 'onMouseLeave',
                mousewheel: 'onMouseWheel',
                DOMMouseScroll: 'onMouseWheel',
              }),
              w()(t, 'mouseenter  .'.concat(n, '-cell'), 'onMouseEnter'),
              w()(t, 'mouseleave  .'.concat(n, '-cell'), 'onMouseLeave'),
              w()(t, 'mouseenter  .'.concat(n, '-cell-tools'), 'onMouseEnter'),
              w()(t, 'mouseleave  .'.concat(n, '-cell-tools'), 'onMouseLeave'),
              w()(
                t,
                'mousedown   .'.concat(n, '-cell [event]'),
                'onCustomEvent'
              ),
              w()(
                t,
                'touchstart  .'.concat(n, '-cell [event]'),
                'onCustomEvent'
              ),
              w()(
                t,
                'mousedown   .'.concat(n, '-cell [data-event]'),
                'onCustomEvent'
              ),
              w()(
                t,
                'touchstart  .'.concat(n, '-cell [data-event]'),
                'onCustomEvent'
              ),
              w()(
                t,
                'dblclick    .'.concat(n, '-cell [magnet]'),
                'onMagnetDblClick'
              ),
              w()(
                t,
                'contextmenu .'.concat(n, '-cell [magnet]'),
                'onMagnetContextMenu'
              ),
              w()(
                t,
                'mousedown   .'.concat(n, '-cell [magnet]'),
                'onMagnetMouseDown'
              ),
              w()(
                t,
                'touchstart  .'.concat(n, '-cell [magnet]'),
                'onMagnetMouseDown'
              ),
              w()(
                t,
                'dblclick    .'.concat(n, '-cell [data-magnet]'),
                'onMagnetDblClick'
              ),
              w()(
                t,
                'contextmenu .'.concat(n, '-cell [data-magnet]'),
                'onMagnetContextMenu'
              ),
              w()(
                t,
                'mousedown   .'.concat(n, '-cell [data-magnet]'),
                'onMagnetMouseDown'
              ),
              w()(
                t,
                'touchstart  .'.concat(n, '-cell [data-magnet]'),
                'onMagnetMouseDown'
              ),
              w()(
                t,
                'dragstart   .'.concat(n, '-cell image'),
                'onImageDragStart'
              ),
              w()(
                t,
                'mousedown   .'.concat(n, '-edge .').concat(n, '-edge-label'),
                'onLabelMouseDown'
              ),
              w()(
                t,
                'touchstart  .'.concat(n, '-edge .').concat(n, '-edge-label'),
                'onLabelMouseDown'
              ),
              t)),
              (e.documentEvents = {
                mousemove: 'onMouseMove',
                touchmove: 'onMouseMove',
                mouseup: 'onMouseUp',
                touchend: 'onMouseUp',
                touchcancel: 'onMouseUp',
              });
          })(ev || (ev = {}));
        var tv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n(e) {
              var r;
              return y()(this, n), ((r = t.call(this)).graph = e), r.init(), r;
            }
            return (
              b()(n, [
                {
                  key: 'options',
                  get: function () {
                    return this.graph.options;
                  },
                },
                {
                  key: 'model',
                  get: function () {
                    return this.graph.model;
                  },
                },
                {
                  key: 'view',
                  get: function () {
                    return this.graph.view;
                  },
                },
                { key: 'init', value: function () {} },
              ]),
              n
            );
          })(O),
          nv = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          rv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'init',
                  value: function () {
                    jh.autoInsertCSS &&
                      (function (e, t) {
                        var n = qu.find(function (t) {
                          return t.name === e;
                        });
                        if (
                          !(
                            (n && ((n.loadTimes += 1), n.loadTimes > 1)) ||
                            Ps.isApplyingHMR()
                          )
                        ) {
                          var r = document.createElement('style');
                          r.setAttribute('type', 'text/css'),
                            (r.textContent = t);
                          var i = document.querySelector('head');
                          i && i.insertBefore(r, i.firstChild),
                            qu.push({ name: e, loadTimes: 1, styleElement: r });
                        }
                      })(
                        'core',
                        ".x6-graph {\n  position: relative;\n  outline: none;\n  touch-action: none;\n}\n.x6-graph-background,\n.x6-graph-grid,\n.x6-graph-svg {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.x6-graph-background-stage,\n.x6-graph-grid-stage,\n.x6-graph-svg-stage {\n  user-select: none;\n}\n.x6-graph.x6-graph-pannable {\n  cursor: grab;\n  cursor: -moz-grab;\n  cursor: -webkit-grab;\n}\n.x6-graph.x6-graph-panning {\n  cursor: grabbing;\n  cursor: -moz-grabbing;\n  cursor: -webkit-grabbing;\n  user-select: none;\n}\n.x6-node {\n  cursor: move;\n  /* stylelint-disable-next-line */\n}\n.x6-node.x6-node-immovable {\n  cursor: default;\n}\n.x6-node * {\n  -webkit-user-drag: none;\n}\n.x6-node .scalable * {\n  vector-effect: non-scaling-stroke;\n}\n.x6-node [magnet='true'] {\n  cursor: crosshair;\n  transition: opacity 0.3s;\n}\n.x6-node [magnet='true']:hover {\n  opacity: 0.7;\n}\n.x6-node foreignObject {\n  display: block;\n  overflow: visible;\n  background-color: transparent;\n}\n.x6-node foreignObject > body {\n  position: static;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  overflow: visible;\n  background-color: transparent;\n}\n.x6-edge .source-marker,\n.x6-edge .target-marker {\n  vector-effect: non-scaling-stroke;\n}\n.x6-edge .connection {\n  stroke-linejoin: round;\n  fill: none;\n}\n.x6-edge .connection-wrap {\n  cursor: move;\n  opacity: 0;\n  fill: none;\n  stroke: #000;\n  stroke-width: 15;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n.x6-edge .connection-wrap:hover {\n  opacity: 0.4;\n  stroke-opacity: 0.4;\n}\n.x6-edge .vertices {\n  cursor: move;\n  opacity: 0;\n}\n.x6-edge .vertices .vertex {\n  fill: #1abc9c;\n}\n.x6-edge .vertices .vertex :hover {\n  fill: #34495e;\n  stroke: none;\n}\n.x6-edge .vertices .vertex-remove {\n  cursor: pointer;\n  fill: #fff;\n}\n.x6-edge .vertices .vertex-remove-area {\n  cursor: pointer;\n  opacity: 0.1;\n}\n.x6-edge .vertices .vertex-group:hover .vertex-remove-area {\n  opacity: 1;\n}\n.x6-edge .arrowheads {\n  cursor: move;\n  opacity: 0;\n}\n.x6-edge .arrowheads .arrowhead {\n  fill: #1abc9c;\n}\n.x6-edge .arrowheads .arrowhead :hover {\n  fill: #f39c12;\n  stroke: none;\n}\n.x6-edge .tools {\n  cursor: pointer;\n  opacity: 0;\n}\n.x6-edge .tools .tool-options {\n  display: none;\n}\n.x6-edge .tools .tool-remove circle {\n  fill: #f00;\n}\n.x6-edge .tools .tool-remove path {\n  fill: #fff;\n}\n.x6-edge:hover .vertices,\n.x6-edge:hover .arrowheads,\n.x6-edge:hover .tools {\n  opacity: 1;\n}\n.x6-highlight-opacity {\n  opacity: 0.3;\n}\n.x6-cell-tool-editor {\n  position: relative;\n  display: inline-block;\n  min-height: 1em;\n  margin: 0;\n  padding: 0;\n  line-height: 1;\n  white-space: normal;\n  text-align: center;\n  vertical-align: top;\n  overflow-wrap: normal;\n  outline: none;\n  transform-origin: 0 0;\n  -webkit-user-drag: none;\n}\n.x6-edge-tool-editor {\n  border: 1px solid #275fc5;\n  border-radius: 2px;\n}\n"
                      );
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    !(function (e) {
                      var t = qu.findIndex(function (t) {
                        return t.name === e;
                      });
                      if (t > -1) {
                        var n = qu[t];
                        if (((n.loadTimes -= 1), n.loadTimes > 0)) return;
                        var r = n.styleElement;
                        r && r.parentNode && r.parentNode.removeChild(r),
                          (r = null),
                          qu.splice(t, 1);
                      }
                    })('core');
                  },
                },
              ]),
              n
            );
          })(tv);
        nv([rv.dispose()], rv.prototype, 'dispose', null);
        var iv,
          ov = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          };
        !(function (e) {
          e.get = function (t) {
            var n = t.grid,
              r =
                (t.panning,
                t.mousewheel,
                t.embedding,
                ov(t, ['grid', 'panning', 'mousewheel', 'embedding'])),
              i = t.container;
            if (null == i)
              throw new Error(
                'Ensure the container of the graph is specified and valid'
              );
            null == r.width && (r.width = i.clientWidth),
              null == r.height && (r.height = i.clientHeight);
            var o = wr({}, e.defaults, r),
              a = { size: 10, visible: !1 };
            return (
              (o.grid =
                'number' == typeof n
                  ? { size: n, visible: !1 }
                  : 'boolean' == typeof n
                  ? Object.assign(Object.assign({}, a), { visible: n })
                  : Object.assign(Object.assign({}, a), n)),
              ['panning', 'mousewheel', 'embedding'].forEach(function (e) {
                var n = t[e];
                'boolean' == typeof n
                  ? (o[e].enabled = n)
                  : (o[e] = Object.assign(Object.assign({}, o[e]), n));
              }),
              o
            );
          };
        })(iv || (iv = {})),
          (function (e) {
            e.defaults = {
              x: 0,
              y: 0,
              scaling: { min: 0.01, max: 16 },
              grid: { size: 10, visible: !1 },
              background: !1,
              panning: { enabled: !1, eventTypes: ['leftMouseDown'] },
              mousewheel: { enabled: !1, factor: 1.2, zoomAtMousePosition: !0 },
              highlighting: {
                default: { name: 'stroke', args: { padding: 3 } },
                nodeAvailable: {
                  name: 'className',
                  args: { className: jh.prefix('available-node') },
                },
                magnetAvailable: {
                  name: 'className',
                  args: { className: jh.prefix('available-magnet') },
                },
              },
              connecting: {
                snap: !1,
                allowLoop: !0,
                allowNode: !0,
                allowEdge: !1,
                allowPort: !0,
                allowBlank: !0,
                allowMulti: !0,
                highlight: !1,
                anchor: 'center',
                edgeAnchor: 'ratio',
                connectionPoint: 'boundary',
                router: 'normal',
                connector: 'normal',
                validateConnection: function (e) {
                  var t = e.type,
                    n = e.sourceView,
                    r = e.targetView;
                  return null != ('target' === t ? r : n);
                },
                createEdge: function () {
                  return new qp();
                },
              },
              translating: { restrict: !1 },
              embedding: {
                enabled: !1,
                findParent: 'bbox',
                frontOnly: !0,
                validate: function () {
                  return !0;
                },
              },
              moveThreshold: 0,
              clickThreshold: 0,
              magnetThreshold: 0,
              preventDefaultDblClick: !0,
              preventDefaultMouseDown: !1,
              preventDefaultContextMenu: !0,
              preventDefaultBlankAction: !0,
              interacting: { edgeLabelMovable: !1 },
              async: !0,
              virtual: !1,
              guard: function () {
                return !1;
              },
            };
          })(iv || (iv = {}));
        var av = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          sv = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          lv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'elem',
                  get: function () {
                    return this.view.grid;
                  },
                },
                {
                  key: 'grid',
                  get: function () {
                    return this.options.grid;
                  },
                },
                {
                  key: 'init',
                  value: function () {
                    this.startListening(), this.draw(this.grid);
                  },
                },
                {
                  key: 'startListening',
                  value: function () {
                    this.graph.on('scale', this.update, this),
                      this.graph.on('translate', this.update, this);
                  },
                },
                {
                  key: 'stopListening',
                  value: function () {
                    this.graph.off('scale', this.update, this),
                      this.graph.off('translate', this.update, this);
                  },
                },
                {
                  key: 'setVisible',
                  value: function (e) {
                    this.grid.visible !== e &&
                      ((this.grid.visible = e), this.update());
                  },
                },
                {
                  key: 'getGridSize',
                  value: function () {
                    return this.grid.size;
                  },
                },
                {
                  key: 'setGridSize',
                  value: function (e) {
                    (this.grid.size = Math.max(e, 1)), this.update();
                  },
                },
                {
                  key: 'show',
                  value: function () {
                    this.setVisible(!0), this.update();
                  },
                },
                {
                  key: 'hide',
                  value: function () {
                    this.setVisible(!1), this.update();
                  },
                },
                {
                  key: 'clear',
                  value: function () {
                    this.elem.style.backgroundImage = '';
                  },
                },
                {
                  key: 'draw',
                  value: function (e) {
                    this.clear(),
                      (this.instance = null),
                      Object.assign(this.grid, e),
                      (this.patterns = this.resolveGrid(e)),
                      this.update();
                  },
                },
                {
                  key: 'update',
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      t = this.grid.size;
                    if (t <= 1 || !this.grid.visible) return this.clear();
                    var n = this.graph.matrix(),
                      r = this.getInstance(),
                      i = Array.isArray(e) ? e : [e];
                    this.patterns.forEach(function (e, o) {
                      var a = 'pattern_'.concat(o),
                        s = n.a || 1,
                        l = n.d || 1,
                        u = e.update,
                        c = e.markup,
                        f = sv(e, ['update', 'markup']),
                        h = Object.assign(
                          Object.assign(Object.assign({}, f), i[o]),
                          {
                            sx: s,
                            sy: l,
                            ox: n.e || 0,
                            oy: n.f || 0,
                            width: t * s,
                            height: t * l,
                          }
                        );
                      r.has(a) ||
                        r.add(
                          a,
                          Xl.create(
                            'pattern',
                            { id: a, patternUnits: 'userSpaceOnUse' },
                            Xl.createVectors(c)
                          ).node
                        );
                      var d = r.get(a);
                      'function' == typeof u && u(d.childNodes[0], h);
                      var g = h.ox % h.width;
                      g < 0 && (g += h.width);
                      var p = h.oy % h.height;
                      p < 0 && (p += h.height),
                        Cl(d, { x: g, y: p, width: h.width, height: h.height });
                    });
                    var o = new XMLSerializer().serializeToString(r.root),
                      a = 'url(data:image/svg+xml;base64,'.concat(btoa(o), ')');
                    this.elem.style.backgroundImage = a;
                  },
                },
                {
                  key: 'getInstance',
                  value: function () {
                    return (
                      this.instance || (this.instance = new Tc()), this.instance
                    );
                  },
                },
                {
                  key: 'resolveGrid',
                  value: function (e) {
                    if (!e) return [];
                    var t = e.type;
                    if (null == t)
                      return [
                        Object.assign(
                          Object.assign({}, Tc.presets.dot),
                          e.args
                        ),
                      ];
                    var n = Tc.registry.get(t);
                    if (n) {
                      var r = e.args || [];
                      return (
                        Array.isArray(r) || (r = [r]),
                        Array.isArray(n)
                          ? n.map(function (e, t) {
                              return Object.assign(Object.assign({}, e), r[t]);
                            })
                          : [Object.assign(Object.assign({}, n), r[0])]
                      );
                    }
                    return Tc.registry.onNotFound(t);
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    this.stopListening(), this.clear();
                  },
                },
              ]),
              n
            );
          })(tv);
        av([tv.dispose()], lv.prototype, 'dispose', null);
        var uv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'container',
                  get: function () {
                    return this.graph.view.container;
                  },
                },
                {
                  key: 'viewport',
                  get: function () {
                    return this.graph.view.viewport;
                  },
                },
                {
                  key: 'stage',
                  get: function () {
                    return this.graph.view.stage;
                  },
                },
                {
                  key: 'init',
                  value: function () {
                    this.resize();
                  },
                },
                {
                  key: 'getMatrix',
                  value: function () {
                    var e = this.viewport.getAttribute('transform');
                    return (
                      e !== this.viewportTransformString &&
                        ((this.viewportMatrix = this.viewport.getCTM()),
                        (this.viewportTransformString = e)),
                      mu(this.viewportMatrix)
                    );
                  },
                },
                {
                  key: 'setMatrix',
                  value: function (e) {
                    var t = mu(e),
                      n = wu(t);
                    this.viewport.setAttribute('transform', n),
                      (this.viewportMatrix = t),
                      (this.viewportTransformString = n);
                  },
                },
                {
                  key: 'resize',
                  value: function (e, t) {
                    var n = void 0 === e ? this.options.width : e,
                      r = void 0 === t ? this.options.height : t;
                    (this.options.width = n),
                      (this.options.height = r),
                      'number' == typeof n && (n = Math.round(n)),
                      'number' == typeof r && (r = Math.round(r)),
                      (this.container.style.width =
                        null == n ? '' : ''.concat(n, 'px')),
                      (this.container.style.height =
                        null == r ? '' : ''.concat(r, 'px'));
                    var i = this.getComputedSize();
                    return (
                      this.graph.trigger('resize', Object.assign({}, i)), this
                    );
                  },
                },
                {
                  key: 'getComputedSize',
                  value: function () {
                    var e = this.options.width,
                      t = this.options.height;
                    return (
                      ws(e) || (e = this.container.clientWidth),
                      ws(t) || (t = this.container.clientHeight),
                      { width: e, height: t }
                    );
                  },
                },
                {
                  key: 'getScale',
                  value: function () {
                    return (
                      (e = this.getMatrix())
                        ? ((t = null == e.a ? 1 : e.a),
                          (i = null == e.d ? 1 : e.d),
                          (n = e.b),
                          (r = e.c))
                        : (t = i = 1),
                      {
                        sx: n ? Math.sqrt(t * t + n * n) : t,
                        sy: r ? Math.sqrt(r * r + i * i) : i,
                      }
                    );
                    var e, t, n, r, i;
                  },
                },
                {
                  key: 'scale',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : e,
                      n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : 0,
                      r =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : 0;
                    if (
                      ((e = this.clampScale(e)),
                      (t = this.clampScale(t)),
                      n || r)
                    ) {
                      var i = this.getTranslation(),
                        o = i.tx - n * (e - 1),
                        a = i.ty - r * (t - 1);
                      (o === i.tx && a === i.ty) || this.translate(o, a);
                    }
                    var s = this.getMatrix();
                    return (
                      (s.a = e),
                      (s.d = t),
                      this.setMatrix(s),
                      this.graph.trigger('scale', {
                        sx: e,
                        sy: t,
                        ox: n,
                        oy: r,
                      }),
                      this
                    );
                  },
                },
                {
                  key: 'clampScale',
                  value: function (e) {
                    var t = this.graph.options.scaling;
                    return Cs(e, t.min || 0.01, t.max || 16);
                  },
                },
                {
                  key: 'getZoom',
                  value: function () {
                    return this.getScale().sx;
                  },
                },
                {
                  key: 'zoom',
                  value: function (e, t) {
                    t = t || {};
                    var n = e,
                      r = e,
                      i = this.getScale(),
                      o = this.getComputedSize(),
                      a = o.width / 2,
                      s = o.height / 2;
                    if (
                      (t.absolute || ((n += i.sx), (r += i.sy)),
                      t.scaleGrid &&
                        ((n = Math.round(n / t.scaleGrid) * t.scaleGrid),
                        (r = Math.round(r / t.scaleGrid) * t.scaleGrid)),
                      t.maxScale &&
                        ((n = Math.min(t.maxScale, n)),
                        (r = Math.min(t.maxScale, r))),
                      t.minScale &&
                        ((n = Math.max(t.minScale, n)),
                        (r = Math.max(t.minScale, r))),
                      t.center && ((a = t.center.x), (s = t.center.y)),
                      (n = this.clampScale(n)),
                      (r = this.clampScale(r)),
                      a || s)
                    ) {
                      var l = this.getTranslation(),
                        u = a - (a - l.tx) * (n / i.sx),
                        c = s - (s - l.ty) * (r / i.sy);
                      (u === l.tx && c === l.ty) || this.translate(u, c);
                    }
                    return this.scale(n, r), this;
                  },
                },
                {
                  key: 'getRotation',
                  value: function () {
                    return (function (e) {
                      var t = { x: 0, y: 1 };
                      e && (t = Cu(e, t));
                      var n =
                        (((180 * Math.atan2(t.y, t.x)) / Math.PI) % 360) - 90;
                      return { angle: (n % 360) + (n < 0 ? 360 : 0) };
                    })(this.getMatrix());
                  },
                },
                {
                  key: 'rotate',
                  value: function (e, t, n) {
                    if (null == t || null == n) {
                      var r = Nh.getBBox(this.stage);
                      (t = r.width / 2), (n = r.height / 2);
                    }
                    var i = this.getMatrix()
                      .translate(t, n)
                      .rotate(e)
                      .translate(-t, -n);
                    return this.setMatrix(i), this;
                  },
                },
                {
                  key: 'getTranslation',
                  value: function () {
                    return {
                      tx: ((e = this.getMatrix()) && e.e) || 0,
                      ty: (e && e.f) || 0,
                    };
                    var e;
                  },
                },
                {
                  key: 'translate',
                  value: function (e, t) {
                    var n = this.getMatrix();
                    (n.e = e || 0), (n.f = t || 0), this.setMatrix(n);
                    var r = this.getTranslation();
                    return (
                      (this.options.x = r.tx),
                      (this.options.y = r.ty),
                      this.graph.trigger('translate', Object.assign({}, r)),
                      this
                    );
                  },
                },
                {
                  key: 'setOrigin',
                  value: function (e, t) {
                    return this.translate(e || 0, t || 0);
                  },
                },
                {
                  key: 'fitToContent',
                  value: function (e, t, n, r) {
                    if ('object' === _()(e)) {
                      var i = e;
                      (e = i.gridWidth || 1),
                        (t = i.gridHeight || 1),
                        (n = i.padding || 0),
                        (r = i);
                    } else
                      (e = e || 1),
                        (t = t || 1),
                        (n = n || 0),
                        null == r && (r = {});
                    var o = Os(n),
                      a = r.border || 0,
                      s = r.contentArea
                        ? Zu.create(r.contentArea)
                        : this.getContentArea(r);
                    a > 0 && s.inflate(a);
                    var l = this.getScale(),
                      u = this.getTranslation(),
                      c = l.sx,
                      f = l.sy;
                    (s.x *= c), (s.y *= f), (s.width *= c), (s.height *= f);
                    var h = Math.max(Math.ceil((s.width + s.x) / e), 1) * e,
                      d = Math.max(Math.ceil((s.height + s.y) / t), 1) * t,
                      g = 0,
                      p = 0;
                    (('negative' === r.allowNewOrigin && s.x < 0) ||
                      ('positive' === r.allowNewOrigin && s.x >= 0) ||
                      'any' === r.allowNewOrigin) &&
                      ((g = Math.ceil(-s.x / e) * e), (h += g += o.left)),
                      (('negative' === r.allowNewOrigin && s.y < 0) ||
                        ('positive' === r.allowNewOrigin && s.y >= 0) ||
                        'any' === r.allowNewOrigin) &&
                        ((p = Math.ceil(-s.y / t) * t), (d += p += o.top)),
                      (h += o.right),
                      (d += o.bottom),
                      (h = Math.max(h, r.minWidth || 0)),
                      (d = Math.max(d, r.minHeight || 0)),
                      (h = Math.min(h, r.maxWidth || Number.MAX_SAFE_INTEGER)),
                      (d = Math.min(d, r.maxHeight || Number.MAX_SAFE_INTEGER));
                    var v = this.getComputedSize(),
                      y = h !== v.width || d !== v.height;
                    return (
                      (g !== u.tx || p !== u.ty) && this.translate(g, p),
                      y && this.resize(h, d),
                      new Zu(-g / c, -p / f, h / c, d / f)
                    );
                  },
                },
                {
                  key: 'scaleContentToFit',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    this.scaleContentToFitImpl(e);
                  },
                },
                {
                  key: 'scaleContentToFitImpl',
                  value: function () {
                    var e,
                      t,
                      n =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      r =
                        !(arguments.length > 1 && void 0 !== arguments[1]) ||
                        arguments[1];
                    if (n.contentArea) {
                      var i = n.contentArea;
                      (e = this.graph.localToGraph(i)), (t = Ku.create(i));
                    } else
                      (e = this.getContentBBox(n)),
                        (t = this.graph.graphToLocal(e));
                    if (e.width && e.height) {
                      var o,
                        a = Os(n.padding),
                        s = n.minScale || 0,
                        l = n.maxScale || Number.MAX_SAFE_INTEGER,
                        u = n.minScaleX || s,
                        c = n.maxScaleX || l,
                        f = n.minScaleY || s,
                        h = n.maxScaleY || l;
                      if (n.viewportArea) o = n.viewportArea;
                      else {
                        var d = this.getComputedSize(),
                          g = this.getTranslation();
                        o = {
                          x: g.tx,
                          y: g.ty,
                          width: d.width,
                          height: d.height,
                        };
                      }
                      o = Zu.create(o).moveAndExpand({
                        x: a.left,
                        y: a.top,
                        width: -a.left - a.right,
                        height: -a.top - a.bottom,
                      });
                      var p = this.getScale(),
                        v = (o.width / e.width) * p.sx,
                        y = (o.height / e.height) * p.sy;
                      !1 !== n.preserveAspectRatio && (v = y = Math.min(v, y));
                      var m = n.scaleGrid;
                      if (
                        (m &&
                          ((v = m * Math.floor(v / m)),
                          (y = m * Math.floor(y / m))),
                        (v = Cs(v, u, c)),
                        (y = Cs(y, f, h)),
                        this.scale(v, y),
                        r)
                      ) {
                        var b = this.options,
                          k = o.x - t.x * v - b.x,
                          w = o.y - t.y * y - b.y;
                        this.translate(k, w);
                      }
                    }
                  },
                },
                {
                  key: 'getContentArea',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return !1 !== e.useCellGeometry
                      ? this.model.getAllCellsBBox() || new Zu()
                      : Nh.getBBox(this.stage);
                  },
                },
                {
                  key: 'getContentBBox',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return this.graph.localToGraph(this.getContentArea(e));
                  },
                },
                {
                  key: 'getGraphArea',
                  value: function () {
                    var e = Zu.fromSize(this.getComputedSize());
                    return this.graph.graphToLocal(e);
                  },
                },
                {
                  key: 'zoomToRect',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = Zu.create(e),
                      r = this.graph;
                    (t.contentArea = n),
                      null == t.viewportArea &&
                        (t.viewportArea = {
                          x: r.options.x,
                          y: r.options.y,
                          width: this.options.width,
                          height: this.options.height,
                        }),
                      this.scaleContentToFitImpl(t, !1);
                    var i = n.getCenter();
                    return this.centerPoint(i.x, i.y), this;
                  },
                },
                {
                  key: 'zoomToFit',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return this.zoomToRect(this.getContentArea(e), e);
                  },
                },
                {
                  key: 'centerPoint',
                  value: function (e, t) {
                    var n = this.getComputedSize(),
                      r = this.getScale(),
                      i = this.getTranslation(),
                      o = n.width / 2,
                      a = n.height / 2;
                    (t = 'number' == typeof t ? t : a),
                      (e = o - (e = 'number' == typeof e ? e : o) * r.sx),
                      (t = a - t * r.sy),
                      (i.tx === e && i.ty === t) || this.translate(e, t);
                  },
                },
                {
                  key: 'centerContent',
                  value: function (e) {
                    var t = this.graph.getContentArea(e).getCenter();
                    this.centerPoint(t.x, t.y);
                  },
                },
                {
                  key: 'centerCell',
                  value: function (e) {
                    return this.positionCell(e, 'center');
                  },
                },
                {
                  key: 'positionPoint',
                  value: function (e, t, n) {
                    var r = this.getComputedSize();
                    (t = Es(t, Math.max(0, r.width))) < 0 && (t = r.width + t),
                      (n = Es(n, Math.max(0, r.height))) < 0 &&
                        (n = r.height + n);
                    var i = this.getTranslation(),
                      o = this.getScale(),
                      a = t - e.x * o.sx,
                      s = n - e.y * o.sy;
                    (i.tx === a && i.ty === s) || this.translate(a, s);
                  },
                },
                {
                  key: 'positionRect',
                  value: function (e, t) {
                    var n = Zu.create(e);
                    switch (t) {
                      case 'center':
                        return this.positionPoint(n.getCenter(), '50%', '50%');
                      case 'top':
                        return this.positionPoint(n.getTopCenter(), '50%', 0);
                      case 'top-right':
                        return this.positionPoint(n.getTopRight(), '100%', 0);
                      case 'right':
                        return this.positionPoint(
                          n.getRightMiddle(),
                          '100%',
                          '50%'
                        );
                      case 'bottom-right':
                        return this.positionPoint(
                          n.getBottomRight(),
                          '100%',
                          '100%'
                        );
                      case 'bottom':
                        return this.positionPoint(
                          n.getBottomCenter(),
                          '50%',
                          '100%'
                        );
                      case 'bottom-left':
                        return this.positionPoint(n.getBottomLeft(), 0, '100%');
                      case 'left':
                        return this.positionPoint(n.getLeftMiddle(), 0, '50%');
                      case 'top-left':
                        return this.positionPoint(n.getTopLeft(), 0, 0);
                      default:
                        return this;
                    }
                  },
                },
                {
                  key: 'positionCell',
                  value: function (e, t) {
                    var n = e.getBBox();
                    return this.positionRect(n, t);
                  },
                },
                {
                  key: 'positionContent',
                  value: function (e, t) {
                    var n = this.graph.getContentArea(t);
                    return this.positionRect(n, e);
                  },
                },
              ]),
              n
            );
          })(tv),
          cv = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          fv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'elem',
                  get: function () {
                    return this.view.background;
                  },
                },
                {
                  key: 'init',
                  value: function () {
                    this.startListening(),
                      this.options.background &&
                        this.draw(this.options.background);
                  },
                },
                {
                  key: 'startListening',
                  value: function () {
                    this.graph.on('scale', this.update, this),
                      this.graph.on('translate', this.update, this);
                  },
                },
                {
                  key: 'stopListening',
                  value: function () {
                    this.graph.off('scale', this.update, this),
                      this.graph.off('translate', this.update, this);
                  },
                },
                {
                  key: 'updateBackgroundImage',
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      t = e.size || 'auto auto',
                      n = e.position || 'center',
                      r = this.graph.transform.getScale(),
                      i = this.graph.translate();
                    if ('object' === _()(n)) {
                      var o = i.tx + r.sx * (n.x || 0),
                        a = i.ty + r.sy * (n.y || 0);
                      n = ''.concat(o, 'px ').concat(a, 'px');
                    }
                    'object' === _()(t) &&
                      ((t = Zu.fromSize(t).scale(r.sx, r.sy)),
                      (t = ''.concat(t.width, 'px ').concat(t.height, 'px'))),
                      (this.elem.style.backgroundSize = t),
                      (this.elem.style.backgroundPosition = n);
                  },
                },
                {
                  key: 'drawBackgroundImage',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    if (e instanceof HTMLImageElement) {
                      var n = this.optionsCache;
                      if (!n || n.image === t.image) {
                        var r,
                          i = t.opacity,
                          o = t.size,
                          a = t.repeat || 'no-repeat',
                          s = Nc.registry.get(a);
                        if ('function' == typeof s) {
                          var l = t.quality || 1;
                          (e.width *= l), (e.height *= l);
                          var u = s(e, t);
                          if (!(u instanceof HTMLCanvasElement))
                            throw new Error(
                              'Background pattern must return an HTML Canvas instance'
                            );
                          (r = u.toDataURL('image/png')),
                            (a =
                              t.repeat && a !== t.repeat ? t.repeat : 'repeat'),
                            'object' === _()(o)
                              ? ((o.width *= u.width / e.width),
                                (o.height *= u.height / e.height))
                              : void 0 === o &&
                                (t.size = {
                                  width: u.width / l,
                                  height: u.height / l,
                                });
                        } else
                          (r = e.src),
                            void 0 === o &&
                              (t.size = { width: e.width, height: e.height });
                        null != n &&
                          'object' === _()(t.size) &&
                          t.image === n.image &&
                          t.repeat === n.repeat &&
                          t.quality === n.quality &&
                          (n.size = Wi(t.size));
                        var c = this.elem.style;
                        (c.backgroundImage = 'url('.concat(r, ')')),
                          (c.backgroundRepeat = a),
                          (c.opacity = null == i || i >= 1 ? '' : ''.concat(i)),
                          this.updateBackgroundImage(t);
                      }
                    } else this.elem.style.backgroundImage = '';
                  },
                },
                {
                  key: 'updateBackgroundColor',
                  value: function (e) {
                    this.elem.style.backgroundColor = e || '';
                  },
                },
                {
                  key: 'updateBackgroundOptions',
                  value: function (e) {
                    this.graph.options.background = e;
                  },
                },
                {
                  key: 'update',
                  value: function () {
                    this.optionsCache &&
                      this.updateBackgroundImage(this.optionsCache);
                  },
                },
                {
                  key: 'draw',
                  value: function (e) {
                    var t = this,
                      n = e || {};
                    if (
                      (this.updateBackgroundOptions(e),
                      this.updateBackgroundColor(n.color),
                      n.image)
                    ) {
                      this.optionsCache = Wi(n);
                      var r = document.createElement('img');
                      (r.onload = function () {
                        return t.drawBackgroundImage(r, e);
                      }),
                        r.setAttribute('crossorigin', 'anonymous'),
                        (r.src = n.image);
                    } else
                      this.drawBackgroundImage(null),
                        (this.optionsCache = null);
                  },
                },
                {
                  key: 'clear',
                  value: function () {
                    this.draw();
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    this.clear(), this.stopListening();
                  },
                },
              ]),
              n
            );
          })(tv);
        cv([tv.dispose()], fv.prototype, 'dispose', null);
        var hv = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          dv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'widgetOptions',
                  get: function () {
                    return this.options.panning;
                  },
                },
                {
                  key: 'pannable',
                  get: function () {
                    return (
                      this.widgetOptions && !0 === this.widgetOptions.enabled
                    );
                  },
                },
                {
                  key: 'init',
                  value: function () {
                    this.startListening(), this.updateClassName();
                  },
                },
                {
                  key: 'startListening',
                  value: function () {
                    var e = this.widgetOptions.eventTypes;
                    e &&
                      (e.includes('leftMouseDown') &&
                        (this.graph.on(
                          'blank:mousedown',
                          this.preparePanning,
                          this
                        ),
                        this.graph.on(
                          'node:unhandled:mousedown',
                          this.preparePanning,
                          this
                        ),
                        this.graph.on(
                          'edge:unhandled:mousedown',
                          this.preparePanning,
                          this
                        )),
                      e.includes('rightMouseDown') &&
                        ((this.onRightMouseDown =
                          this.onRightMouseDown.bind(this)),
                        ju.on(
                          this.graph.container,
                          'mousedown',
                          this.onRightMouseDown
                        )),
                      e.includes('mouseWheel') &&
                        ((this.mousewheelHandle = new _u(
                          this.graph.container,
                          this.onMouseWheel.bind(this),
                          this.allowMouseWheel.bind(this)
                        )),
                        this.mousewheelHandle.enable()));
                  },
                },
                {
                  key: 'stopListening',
                  value: function () {
                    var e = this.widgetOptions.eventTypes;
                    e &&
                      (e.includes('leftMouseDown') &&
                        (this.graph.off(
                          'blank:mousedown',
                          this.preparePanning,
                          this
                        ),
                        this.graph.off(
                          'node:unhandled:mousedown',
                          this.preparePanning,
                          this
                        ),
                        this.graph.off(
                          'edge:unhandled:mousedown',
                          this.preparePanning,
                          this
                        )),
                      e.includes('rightMouseDown') &&
                        ju.off(
                          this.graph.container,
                          'mousedown',
                          this.onRightMouseDown
                        ),
                      e.includes('mouseWheel') &&
                        this.mousewheelHandle &&
                        this.mousewheelHandle.disable());
                  },
                },
                {
                  key: 'preparePanning',
                  value: function (e) {
                    var t = e.e,
                      n = this.graph.getPlugin('selection'),
                      r = n && n.allowRubberband(t, !0);
                    (this.allowPanning(t, !0) ||
                      (this.allowPanning(t) && !r)) &&
                      this.startPanning(t);
                  },
                },
                {
                  key: 'allowPanning',
                  value: function (e, t) {
                    return (
                      this.pannable &&
                      Uu.isMatch(e, this.widgetOptions.modifiers, t)
                    );
                  },
                },
                {
                  key: 'startPanning',
                  value: function (e) {
                    var t = this.view.normalizeEvent(e);
                    (this.clientX = t.clientX),
                      (this.clientY = t.clientY),
                      (this.panning = !0),
                      this.updateClassName(),
                      ju.on(document.body, {
                        'mousemove.panning touchmove.panning':
                          this.pan.bind(this),
                        'mouseup.panning touchend.panning':
                          this.stopPanning.bind(this),
                        'mouseleave.panning': this.stopPanning.bind(this),
                      }),
                      ju.on(
                        window,
                        'mouseup.panning',
                        this.stopPanning.bind(this)
                      );
                  },
                },
                {
                  key: 'pan',
                  value: function (e) {
                    var t = this.view.normalizeEvent(e),
                      n = t.clientX - this.clientX,
                      r = t.clientY - this.clientY;
                    (this.clientX = t.clientX),
                      (this.clientY = t.clientY),
                      this.graph.translateBy(n, r);
                  },
                },
                {
                  key: 'stopPanning',
                  value: function (e) {
                    (this.panning = !1),
                      this.updateClassName(),
                      ju.off(document.body, '.panning'),
                      ju.off(window, '.panning');
                  },
                },
                {
                  key: 'updateClassName',
                  value: function () {
                    var e = this.view.container,
                      t = this.view.prefixClassName('graph-panning'),
                      n = this.view.prefixClassName('graph-pannable');
                    this.pannable
                      ? this.panning
                        ? (Ks(e, t), Zs(e, n))
                        : (Zs(e, t), Ks(e, n))
                      : (Zs(e, t), Zs(e, n));
                  },
                },
                {
                  key: 'onRightMouseDown',
                  value: function (e) {
                    2 === e.button &&
                      this.allowPanning(e, !0) &&
                      this.startPanning(e);
                  },
                },
                {
                  key: 'allowMouseWheel',
                  value: function (e) {
                    return this.pannable && !e.ctrlKey;
                  },
                },
                {
                  key: 'onMouseWheel',
                  value: function (e, t, n) {
                    e.ctrlKey || this.graph.translateBy(-t, -n);
                  },
                },
                {
                  key: 'autoPanning',
                  value: function (e, t) {
                    var n = 10,
                      r = this.graph.getGraphArea(),
                      i = 0,
                      o = 0;
                    e <= r.left + n && (i = -10),
                      t <= r.top + n && (o = -10),
                      e >= r.right - n && (i = n),
                      t >= r.bottom - n && (o = n),
                      (0 === i && 0 === o) || this.graph.translateBy(-i, -o);
                  },
                },
                {
                  key: 'enablePanning',
                  value: function () {
                    this.pannable ||
                      ((this.widgetOptions.enabled = !0),
                      this.updateClassName());
                  },
                },
                {
                  key: 'disablePanning',
                  value: function () {
                    this.pannable &&
                      ((this.widgetOptions.enabled = !1),
                      this.updateClassName());
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    this.stopListening();
                  },
                },
              ]),
              n
            );
          })(tv);
        hv([tv.dispose()], dv.prototype, 'dispose', null);
        var gv = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          pv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              var e;
              return (
                y()(this, n),
                ((e = t.apply(this, arguments)).cumulatedFactor = 1),
                e
              );
            }
            return (
              b()(n, [
                {
                  key: 'widgetOptions',
                  get: function () {
                    return this.options.mousewheel;
                  },
                },
                {
                  key: 'init',
                  value: function () {
                    (this.container = this.graph.container),
                      (this.target = this.widgetOptions.global
                        ? document
                        : this.container),
                      (this.mousewheelHandle = new _u(
                        this.target,
                        this.onMouseWheel.bind(this),
                        this.allowMouseWheel.bind(this)
                      )),
                      this.widgetOptions.enabled && this.enable(!0);
                  },
                },
                {
                  key: 'disabled',
                  get: function () {
                    return !0 !== this.widgetOptions.enabled;
                  },
                },
                {
                  key: 'enable',
                  value: function (e) {
                    (this.disabled || e) &&
                      ((this.widgetOptions.enabled = !0),
                      this.mousewheelHandle.enable());
                  },
                },
                {
                  key: 'disable',
                  value: function () {
                    this.disabled ||
                      ((this.widgetOptions.enabled = !1),
                      this.mousewheelHandle.disable());
                  },
                },
                {
                  key: 'allowMouseWheel',
                  value: function (e) {
                    var t = this.widgetOptions.guard;
                    return (
                      (null == t || t.call(e)) &&
                      Uu.isMatch(e, this.widgetOptions.modifiers)
                    );
                  },
                },
                {
                  key: 'onMouseWheel',
                  value: function (e) {
                    var t = this.widgetOptions.guard;
                    if (
                      (null == t || t.call(e)) &&
                      Uu.isMatch(e, this.widgetOptions.modifiers)
                    ) {
                      var n = this.widgetOptions.factor || 1.2;
                      null == this.currentScale &&
                        ((this.startPos = { x: e.clientX, y: e.clientY }),
                        (this.currentScale =
                          this.graph.transform.getScale().sx)),
                        e.deltaY < 0
                          ? this.currentScale < 0.15
                            ? (this.cumulatedFactor =
                                (this.currentScale + 0.01) / this.currentScale)
                            : (this.cumulatedFactor =
                                Math.round(this.currentScale * n * 20) /
                                20 /
                                this.currentScale)
                          : this.currentScale <= 0.15
                          ? (this.cumulatedFactor =
                              (this.currentScale - 0.01) / this.currentScale)
                          : (this.cumulatedFactor =
                              Math.round(this.currentScale * (1 / n) * 20) /
                              20 /
                              this.currentScale),
                        (this.cumulatedFactor = Math.max(
                          0.01,
                          Math.min(
                            this.currentScale * this.cumulatedFactor,
                            160
                          ) / this.currentScale
                        ));
                      var r = this.currentScale,
                        i = this.graph.transform.clampScale(
                          r * this.cumulatedFactor
                        ),
                        o =
                          this.widgetOptions.minScale ||
                          Number.MIN_SAFE_INTEGER,
                        a =
                          this.widgetOptions.maxScale ||
                          Number.MAX_SAFE_INTEGER;
                      if ((i = Cs(i, o, a)) !== r)
                        if (this.widgetOptions.zoomAtMousePosition) {
                          var s = !!this.graph.getPlugin('scroller')
                            ? this.graph.clientToLocal(this.startPos)
                            : this.graph.clientToGraph(this.startPos);
                          this.graph.zoom(i, {
                            absolute: !0,
                            center: s.clone(),
                          });
                        } else this.graph.zoom(i, { absolute: !0 });
                      (this.currentScale = null), (this.cumulatedFactor = 1);
                    }
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    this.disable();
                  },
                },
              ]),
              n
            );
          })(tv);
        gv([O.dispose()], pv.prototype, 'dispose', null);
        var vv = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          yv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'init',
                  value: function () {
                    (this.resetRenderArea = fe(this.resetRenderArea, 200, {
                      leading: !0,
                    })),
                      this.resetRenderArea(),
                      this.startListening();
                  },
                },
                {
                  key: 'startListening',
                  value: function () {
                    this.graph.on('translate', this.resetRenderArea, this),
                      this.graph.on('scale', this.resetRenderArea, this),
                      this.graph.on('resize', this.resetRenderArea, this);
                  },
                },
                {
                  key: 'stopListening',
                  value: function () {
                    this.graph.off('translate', this.resetRenderArea, this),
                      this.graph.off('scale', this.resetRenderArea, this),
                      this.graph.off('resize', this.resetRenderArea, this);
                  },
                },
                {
                  key: 'enableVirtualRender',
                  value: function () {
                    (this.options.virtual = !0), this.resetRenderArea();
                  },
                },
                {
                  key: 'disableVirtualRender',
                  value: function () {
                    (this.options.virtual = !1),
                      this.graph.renderer.setRenderArea(void 0);
                  },
                },
                {
                  key: 'resetRenderArea',
                  value: function () {
                    if (this.options.virtual) {
                      var e = this.graph.getGraphArea();
                      this.graph.renderer.setRenderArea(e);
                    }
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    this.stopListening();
                  },
                },
              ]),
              n
            );
          })(tv);
        vv([tv.dispose()], yv.prototype, 'dispose', null);
        var mv,
          bv = (function () {
            function e() {
              y()(this, e),
                (this.isFlushing = !1),
                (this.isFlushPending = !1),
                (this.scheduleId = 0),
                (this.queue = []),
                (this.frameInterval = 33),
                (this.initialTime = Date.now());
            }
            return (
              b()(e, [
                {
                  key: 'queueJob',
                  value: function (e) {
                    if (e.priority & mv.PRIOR) e.cb();
                    else {
                      var t = this.findInsertionIndex(e);
                      t >= 0 && this.queue.splice(t, 0, e);
                    }
                  },
                },
                {
                  key: 'queueFlush',
                  value: function () {
                    this.isFlushing ||
                      this.isFlushPending ||
                      ((this.isFlushPending = !0), this.scheduleJob());
                  },
                },
                {
                  key: 'queueFlushSync',
                  value: function () {
                    this.isFlushing ||
                      this.isFlushPending ||
                      ((this.isFlushPending = !0), this.flushJobsSync());
                  },
                },
                {
                  key: 'clearJobs',
                  value: function () {
                    (this.queue.length = 0),
                      (this.isFlushing = !1),
                      (this.isFlushPending = !1),
                      this.cancelScheduleJob();
                  },
                },
                {
                  key: 'flushJobs',
                  value: function () {
                    (this.isFlushPending = !1), (this.isFlushing = !0);
                    for (
                      var e, t = this.getCurrentTime();
                      (e = this.queue.shift()) &&
                      (e.cb(),
                      !(this.getCurrentTime() - t >= this.frameInterval));

                    );
                    (this.isFlushing = !1),
                      this.queue.length && this.queueFlush();
                  },
                },
                {
                  key: 'flushJobsSync',
                  value: function () {
                    var e;
                    for (
                      this.isFlushPending = !1, this.isFlushing = !0;
                      (e = this.queue.shift());

                    )
                      try {
                        e.cb();
                      } catch (e) {
                        console.log(e);
                      }
                    this.isFlushing = !1;
                  },
                },
                {
                  key: 'findInsertionIndex',
                  value: function (e) {
                    for (
                      var t = 0,
                        n = this.queue.length,
                        r = n - 1,
                        i = e.priority;
                      t <= r;

                    ) {
                      var o = ((r - t) >> 1) + t;
                      i <= this.queue[o].priority
                        ? (t = o + 1)
                        : ((n = o), (r = o - 1));
                    }
                    return n;
                  },
                },
                {
                  key: 'scheduleJob',
                  value: function () {
                    'requestIdleCallback' in window
                      ? (this.scheduleId && this.cancelScheduleJob(),
                        (this.scheduleId = window.requestIdleCallback(
                          this.flushJobs.bind(this),
                          { timeout: 100 }
                        )))
                      : (this.scheduleId && this.cancelScheduleJob(),
                        (this.scheduleId = window.setTimeout(
                          this.flushJobs.bind(this)
                        )));
                  },
                },
                {
                  key: 'cancelScheduleJob',
                  value: function () {
                    'cancelIdleCallback' in window
                      ? (this.scheduleId &&
                          window.cancelIdleCallback(this.scheduleId),
                        (this.scheduleId = 0))
                      : (this.scheduleId && clearTimeout(this.scheduleId),
                        (this.scheduleId = 0));
                  },
                },
                {
                  key: 'getCurrentTime',
                  value: function () {
                    return 'object' ===
                      ('undefined' == typeof performance
                        ? 'undefined'
                        : _()(performance)) &&
                      'function' == typeof performance.now
                      ? performance.now()
                      : Date.now() - this.initialTime;
                  },
                },
              ]),
              e
            );
          })();
        !(function (e) {
          (e[(e.RenderEdge = 2)] = 'RenderEdge'),
            (e[(e.RenderNode = 4)] = 'RenderNode'),
            (e[(e.Update = 8)] = 'Update'),
            (e[(e.PRIOR = 1048576)] = 'PRIOR');
        })(mv || (mv = {}));
        var kv = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          wv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n(e) {
              var r;
              return (
                y()(this, n),
                ((r = t.call(this)).views = {}),
                (r.willRemoveViews = {}),
                (r.queue = new bv()),
                (r.graph = e),
                r.init(),
                r
              );
            }
            return (
              b()(n, [
                {
                  key: 'model',
                  get: function () {
                    return this.graph.model;
                  },
                },
                {
                  key: 'container',
                  get: function () {
                    return this.graph.view.stage;
                  },
                },
                {
                  key: 'init',
                  value: function () {
                    this.startListening(),
                      this.renderViews(this.model.getCells());
                  },
                },
                {
                  key: 'startListening',
                  value: function () {
                    this.model.on('reseted', this.onModelReseted, this),
                      this.model.on('cell:added', this.onCellAdded, this),
                      this.model.on('cell:removed', this.onCellRemoved, this),
                      this.model.on(
                        'cell:change:zIndex',
                        this.onCellZIndexChanged,
                        this
                      ),
                      this.model.on(
                        'cell:change:visible',
                        this.onCellVisibleChanged,
                        this
                      );
                  },
                },
                {
                  key: 'stopListening',
                  value: function () {
                    this.model.off('reseted', this.onModelReseted, this),
                      this.model.off('cell:added', this.onCellAdded, this),
                      this.model.off('cell:removed', this.onCellRemoved, this),
                      this.model.off(
                        'cell:change:zIndex',
                        this.onCellZIndexChanged,
                        this
                      ),
                      this.model.off(
                        'cell:change:visible',
                        this.onCellVisibleChanged,
                        this
                      );
                  },
                },
                {
                  key: 'onModelReseted',
                  value: function (e) {
                    var t = e.options;
                    this.queue.clearJobs(),
                      this.removeZPivots(),
                      this.resetViews(),
                      this.renderViews(this.model.getCells(), t);
                  },
                },
                {
                  key: 'onCellAdded',
                  value: function (e) {
                    var t = e.cell,
                      n = e.options;
                    this.renderViews([t], n);
                  },
                },
                {
                  key: 'onCellRemoved',
                  value: function (e) {
                    var t = e.cell;
                    this.removeViews([t]);
                  },
                },
                {
                  key: 'onCellZIndexChanged',
                  value: function (e) {
                    var t = e.cell,
                      r = e.options,
                      i = this.views[t.id];
                    i &&
                      this.requestViewUpdate(
                        i.view,
                        n.FLAG_INSERT,
                        r,
                        mv.Update,
                        !0
                      );
                  },
                },
                {
                  key: 'onCellVisibleChanged',
                  value: function (e) {
                    var t = e.cell,
                      n = e.current;
                    this.toggleVisible(t, !!n);
                  },
                },
                {
                  key: 'requestViewUpdate',
                  value: function (e, t) {
                    var n = this,
                      r =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      i =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : mv.Update,
                      o =
                        !(arguments.length > 4 && void 0 !== arguments[4]) ||
                        arguments[4],
                      a = e.cell.id,
                      s = this.views[a];
                    if (s) {
                      (s.flag = t), (s.options = r);
                      var l = e.hasAction(t, ['translate', 'resize', 'rotate']);
                      e.isNodeView() && l && ((i = mv.PRIOR), (o = !1)),
                        this.queue.queueJob({
                          id: a,
                          priority: i,
                          cb: function () {
                            n.renderViewInArea(e, t, r);
                          },
                        });
                      var u = this.getEffectedEdges(e);
                      u.forEach(function (e) {
                        n.requestViewUpdate(e.view, e.flag, r, i, !1);
                      }),
                        o && this.flush();
                    }
                  },
                },
                {
                  key: 'setRenderArea',
                  value: function (e) {
                    (this.renderArea = e), this.flushWaittingViews();
                  },
                },
                {
                  key: 'isViewMounted',
                  value: function (e) {
                    if (null == e) return !1;
                    var t = this.views[e.cell.id];
                    return !!t && t.state === n.ViewState.MOUNTED;
                  },
                },
                {
                  key: 'renderViews',
                  value: function (e) {
                    var t = this,
                      r =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                    e.sort(function (e, t) {
                      return e.isNode() && t.isEdge() ? -1 : 0;
                    }),
                      e.forEach(function (e) {
                        var i = e.id,
                          o = 0,
                          a = t.views[i];
                        if (a) o = n.FLAG_INSERT;
                        else {
                          var s = t.createCellView(e);
                          s &&
                            ((s.graph = t.graph),
                            (o = n.FLAG_INSERT | s.getBootstrapFlag()),
                            (a = {
                              view: s,
                              flag: o,
                              options: r,
                              state: n.ViewState.CREATED,
                            }),
                            (t.views[i] = a));
                        }
                        a &&
                          t.requestViewUpdate(
                            a.view,
                            o,
                            r,
                            t.getRenderPriority(a.view),
                            !1
                          );
                      }),
                      this.flush();
                  },
                },
                {
                  key: 'renderViewInArea',
                  value: function (e, t) {
                    var r = this,
                      i =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {},
                      o = e.cell,
                      a = o.id,
                      s = this.views[a];
                    if (s) {
                      var l = 0;
                      this.isUpdateable(e) || s.state === n.ViewState.MOUNTED
                        ? ((l = this.updateView(e, t, i)), (s.flag = l))
                        : (s.state = n.ViewState.WAITTING),
                        l &&
                          o.isEdge() &&
                          0 == (l & e.getFlag(['source', 'target'])) &&
                          this.queue.queueJob({
                            id: a,
                            priority: mv.RenderEdge,
                            cb: function () {
                              r.updateView(e, t, i);
                            },
                          });
                    }
                  },
                },
                {
                  key: 'removeViews',
                  value: function (e) {
                    var t = this;
                    e.forEach(function (e) {
                      var n = e.id,
                        r = t.views[n];
                      r &&
                        ((t.willRemoveViews[n] = r),
                        delete t.views[n],
                        t.queue.queueJob({
                          id: n,
                          priority: t.getRenderPriority(r.view),
                          cb: function () {
                            t.removeView(r.view);
                          },
                        }));
                    }),
                      this.flush();
                  },
                },
                {
                  key: 'flush',
                  value: function () {
                    this.graph.options.async
                      ? this.queue.queueFlush()
                      : this.queue.queueFlushSync();
                  },
                },
                {
                  key: 'flushWaittingViews',
                  value: function () {
                    var e = this;
                    Object.values(this.views).forEach(function (t) {
                      if (t && t.state === n.ViewState.WAITTING) {
                        var r = t.view,
                          i = t.flag,
                          o = t.options;
                        e.requestViewUpdate(
                          r,
                          i,
                          o,
                          e.getRenderPriority(r),
                          !1
                        );
                      }
                    }),
                      this.flush();
                  },
                },
                {
                  key: 'updateView',
                  value: function (e, t) {
                    var r =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    if (null == e) return 0;
                    if (Td.isCellView(e)) {
                      if (t & n.FLAG_REMOVE) return this.removeView(e.cell), 0;
                      t & n.FLAG_INSERT &&
                        (this.insertView(e), (t ^= n.FLAG_INSERT));
                    }
                    return t ? e.confirmUpdate(t, r) : 0;
                  },
                },
                {
                  key: 'insertView',
                  value: function (e) {
                    var t = this.views[e.cell.id];
                    if (t) {
                      var r = e.cell.getZIndex(),
                        i = this.addZPivot(r);
                      this.container.insertBefore(e.container, i),
                        e.cell.isVisible() || this.toggleVisible(e.cell, !1),
                        (t.state = n.ViewState.MOUNTED),
                        this.graph.trigger('view:mounted', { view: e });
                    }
                  },
                },
                {
                  key: 'resetViews',
                  value: function () {
                    var e = this;
                    (this.willRemoveViews = Object.assign(
                      Object.assign({}, this.views),
                      this.willRemoveViews
                    )),
                      Object.values(this.willRemoveViews).forEach(function (t) {
                        t && e.removeView(t.view);
                      }),
                      (this.views = {}),
                      (this.willRemoveViews = {});
                  },
                },
                {
                  key: 'removeView',
                  value: function (e) {
                    var t = e.cell,
                      n = this.willRemoveViews[t.id];
                    n &&
                      e &&
                      (n.view.remove(),
                      delete this.willRemoveViews[t.id],
                      this.graph.trigger('view:unmounted', { view: e }));
                  },
                },
                {
                  key: 'toggleVisible',
                  value: function (e, t) {
                    for (
                      var n = this.model.getConnectedEdges(e),
                        r = 0,
                        i = n.length;
                      r < i;
                      r += 1
                    ) {
                      var o = n[r];
                      if (t) {
                        var a = o.getSourceCell(),
                          s = o.getTargetCell();
                        if ((a && !a.isVisible()) || (s && !s.isVisible()))
                          continue;
                        this.toggleVisible(o, !0);
                      } else this.toggleVisible(o, !1);
                    }
                    var l = this.views[e.id];
                    l &&
                      Fl(l.view.container, { display: t ? 'unset' : 'none' });
                  },
                },
                {
                  key: 'addZPivot',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : 0;
                    null == this.zPivots && (this.zPivots = {});
                    var t = this.zPivots,
                      n = t[e];
                    if (n) return n;
                    n = t[e] = document.createComment('z-index:'.concat(e + 1));
                    var r = -1 / 0;
                    for (var i in t) {
                      var o = +i;
                      o < e && o > r && (r = o);
                    }
                    var a = this.container;
                    if (r !== -1 / 0) {
                      var s = t[r];
                      a.insertBefore(n, s.nextSibling);
                    } else a.insertBefore(n, a.firstChild);
                    return n;
                  },
                },
                {
                  key: 'removeZPivots',
                  value: function () {
                    this.zPivots &&
                      Object.values(this.zPivots).forEach(function (e) {
                        e && e.parentNode && e.parentNode.removeChild(e);
                      }),
                      (this.zPivots = {});
                  },
                },
                {
                  key: 'createCellView',
                  value: function (e) {
                    var t = { graph: this.graph },
                      n = this.graph.options.createCellView;
                    if (n) {
                      var r = de(n, this.graph, e);
                      if (r) return new r(e, t);
                      if (null === r) return null;
                    }
                    var i = e.view;
                    if (null != i && 'string' == typeof i) {
                      var o = Td.registry.get(i);
                      return o ? new o(e, t) : Td.registry.onNotFound(i);
                    }
                    return e.isNode()
                      ? new Qp(e, t)
                      : e.isEdge()
                      ? new Kp(e, t)
                      : null;
                  },
                },
                {
                  key: 'getEffectedEdges',
                  value: function (e) {
                    for (
                      var t = [],
                        n = e.cell,
                        r = this.model.getConnectedEdges(n),
                        i = 0,
                        o = r.length;
                      i < o;
                      i += 1
                    ) {
                      var a = r[i],
                        s = this.views[a.id];
                      if (s) {
                        var l = s.view;
                        if (this.isViewMounted(l)) {
                          var u = ['update'];
                          a.getTargetCell() === n && u.push('target'),
                            a.getSourceCell() === n && u.push('source'),
                            t.push({ id: a.id, view: l, flag: l.getFlag(u) });
                        }
                      }
                    }
                    return t;
                  },
                },
                {
                  key: 'isUpdateable',
                  value: function (e) {
                    if (e.isNodeView()) {
                      if (!this.renderArea) return !0;
                      var t = e.cell;
                      return this.renderArea.isIntersectWithRect(t.getBBox());
                    }
                    if (e.isEdgeView()) {
                      var n = e.cell,
                        r = n.getSourceCell(),
                        i = n.getTargetCell();
                      if (r) {
                        var o = this.views[r.id];
                        if (o && !this.isViewMounted(o.view)) return !1;
                      }
                      if (i) {
                        var a = this.views[i.id];
                        if (a && !this.isViewMounted(a.view)) return !1;
                      }
                    }
                    return !0;
                  },
                },
                {
                  key: 'getRenderPriority',
                  value: function (e) {
                    return e.cell.isNode() ? mv.RenderNode : mv.RenderEdge;
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    this.stopListening();
                  },
                },
              ]),
              n
            );
          })(O);
        kv([O.dispose()], wv.prototype, 'dispose', null),
          (function (e) {
            (e.FLAG_INSERT = 1 << 30),
              (e.FLAG_REMOVE = 1 << 29),
              (e.FLAG_RENDER = 67108863);
          })(wv || (wv = {})),
          (function (e) {
            !(function (e) {
              (e[(e.CREATED = 0)] = 'CREATED'),
                (e[(e.MOUNTED = 1)] = 'MOUNTED'),
                (e[(e.WAITTING = 2)] = 'WAITTING');
            })(e.ViewState || (e.ViewState = {}));
          })(wv || (wv = {}));
        var xv = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          Cv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              var e;
              return (
                y()(this, n),
                ((e = t.apply(this, arguments)).schedule = new wv(e.graph)),
                e
              );
            }
            return (
              b()(n, [
                {
                  key: 'requestViewUpdate',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    this.schedule.requestViewUpdate(e, t, n);
                  },
                },
                {
                  key: 'isViewMounted',
                  value: function (e) {
                    return this.schedule.isViewMounted(e);
                  },
                },
                {
                  key: 'setRenderArea',
                  value: function (e) {
                    this.schedule.setRenderArea(e);
                  },
                },
                {
                  key: 'findViewByElem',
                  value: function (e) {
                    if (null == e) return null;
                    var t = this.options.container,
                      n =
                        'string' == typeof e
                          ? t.querySelector(e)
                          : e instanceof Element
                          ? e
                          : e[0];
                    if (n) {
                      var r = this.graph.view.findAttr('data-cell-id', n);
                      if (r) {
                        var i = this.schedule.views;
                        if (i[r]) return i[r].view;
                      }
                    }
                    return null;
                  },
                },
                {
                  key: 'findViewByCell',
                  value: function (e) {
                    if (null == e) return null;
                    var t = Lp.isCell(e) ? e.id : e,
                      n = this.schedule.views;
                    return n[t] ? n[t].view : null;
                  },
                },
                {
                  key: 'findViewsFromPoint',
                  value: function (e) {
                    var t = this,
                      n = { x: e.x, y: e.y };
                    return this.model
                      .getCells()
                      .map(function (e) {
                        return t.findViewByCell(e);
                      })
                      .filter(function (e) {
                        return (
                          null != e &&
                          Nh.getBBox(e.container, {
                            target: t.view.stage,
                          }).containsPoint(n)
                        );
                      });
                  },
                },
                {
                  key: 'findEdgeViewsFromPoint',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 5;
                    return this.model
                      .getEdges()
                      .map(function (e) {
                        return t.findViewByCell(e);
                      })
                      .filter(function (t) {
                        if (null != t) {
                          var r = t.getClosestPoint(e);
                          if (r) return r.distance(e) <= n;
                        }
                        return !1;
                      });
                  },
                },
                {
                  key: 'findViewsInArea',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      r = Zu.create(e);
                    return this.model
                      .getCells()
                      .map(function (e) {
                        return t.findViewByCell(e);
                      })
                      .filter(function (e) {
                        if (e) {
                          if (n.nodeOnly && !e.isNodeView()) return !1;
                          var i = Nh.getBBox(e.container, {
                            target: t.view.stage,
                          });
                          return (
                            0 === i.width
                              ? i.inflate(1, 0)
                              : 0 === i.height && i.inflate(0, 1),
                            n.strict
                              ? r.containsRect(i)
                              : r.isIntersectWithRect(i)
                          );
                        }
                        return !1;
                      });
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    this.schedule.dispose();
                  },
                },
              ]),
              n
            );
          })(tv);
        xv([tv.dispose()], Cv.prototype, 'dispose', null);
        var Sv = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Ev = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'cid',
                  get: function () {
                    return this.graph.view.cid;
                  },
                },
                {
                  key: 'svg',
                  get: function () {
                    return this.view.svg;
                  },
                },
                {
                  key: 'defs',
                  get: function () {
                    return this.view.defs;
                  },
                },
                {
                  key: 'isDefined',
                  value: function (e) {
                    return null != this.svg.getElementById(e);
                  },
                },
                {
                  key: 'filter',
                  value: function (e) {
                    var t = e.id,
                      n = e.name;
                    if (
                      (t ||
                        (t = 'filter-'
                          .concat(n, '-')
                          .concat(this.cid, '-')
                          .concat(vs(JSON.stringify(e)))),
                      !this.isDefined(t))
                    ) {
                      var r = jc.registry.get(n);
                      if (null == r) return jc.registry.onNotFound(n);
                      var i = r(e.args || {}),
                        o = Object.assign(
                          Object.assign(
                            {
                              x: -1,
                              y: -1,
                              width: 3,
                              height: 3,
                              filterUnits: 'objectBoundingBox',
                            },
                            e.attrs
                          ),
                          { id: t }
                        );
                      Xl.create(Ed.sanitize(i), o).appendTo(this.defs);
                    }
                    return t;
                  },
                },
                {
                  key: 'gradient',
                  value: function (e) {
                    var t = e.id,
                      n = e.type;
                    if (
                      (t ||
                        (t = 'gradient-'
                          .concat(n, '-')
                          .concat(this.cid, '-')
                          .concat(vs(JSON.stringify(e)))),
                      !this.isDefined(t))
                    ) {
                      var r = e.stops.map(function (e) {
                          var t =
                            null != e.opacity && Number.isFinite(e.opacity)
                              ? e.opacity
                              : 1;
                          return '<stop offset="'
                            .concat(e.offset, '" stop-color="')
                            .concat(e.color, '" stop-opacity="')
                            .concat(t, '"/>');
                        }),
                        i = '<'
                          .concat(n, '>')
                          .concat(r.join(''), '</')
                          .concat(n, '>'),
                        o = Object.assign({ id: t }, e.attrs);
                      Xl.create(i, o).appendTo(this.defs);
                    }
                    return t;
                  },
                },
                {
                  key: 'marker',
                  value: function (e) {
                    var t = e.id,
                      n = e.refX,
                      r = e.refY,
                      i = e.markerUnits,
                      o = e.markerOrient,
                      a = e.tagName,
                      s = e.children,
                      l = Sv(e, [
                        'id',
                        'refX',
                        'refY',
                        'markerUnits',
                        'markerOrient',
                        'tagName',
                        'children',
                      ]),
                      u = t;
                    if (
                      (u ||
                        (u = 'marker-'
                          .concat(this.cid, '-')
                          .concat(vs(JSON.stringify(e)))),
                      !this.isDefined(u))
                    ) {
                      'path' !== a && delete l.d;
                      var c = Xl.create(
                        'marker',
                        {
                          refX: n,
                          refY: r,
                          id: u,
                          overflow: 'visible',
                          orient: null != o ? o : 'auto',
                          markerUnits: i || 'userSpaceOnUse',
                        },
                        s
                          ? s.map(function (e) {
                              var t = e.tagName,
                                n = Sv(e, ['tagName']);
                              return Xl.create(
                                ''.concat(t) || 'path',
                                El(Object.assign(Object.assign({}, l), n))
                              );
                            })
                          : [Xl.create(a || 'path', El(l))]
                      );
                      this.defs.appendChild(c.node);
                    }
                    return u;
                  },
                },
                {
                  key: 'remove',
                  value: function (e) {
                    var t = this.svg.getElementById(e);
                    t && t.parentNode && t.parentNode.removeChild(t);
                  },
                },
              ]),
              n
            );
          })(tv),
          Ov = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'getClientMatrix',
                  value: function () {
                    return mu(this.view.stage.getScreenCTM());
                  },
                },
                {
                  key: 'getClientOffset',
                  value: function () {
                    var e = this.view.svg.getBoundingClientRect();
                    return new Ku(e.left, e.top);
                  },
                },
                {
                  key: 'getPageOffset',
                  value: function () {
                    return this.getClientOffset().translate(
                      window.scrollX,
                      window.scrollY
                    );
                  },
                },
                {
                  key: 'snapToGrid',
                  value: function (e, t) {
                    return (
                      'number' == typeof e
                        ? this.clientToLocalPoint(e, t)
                        : this.clientToLocalPoint(e.x, e.y)
                    ).snapToGrid(this.graph.getGridSize());
                  },
                },
                {
                  key: 'localToGraphPoint',
                  value: function (e, t) {
                    var n = Ku.create(e, t);
                    return Nh.transformPoint(n, this.graph.matrix());
                  },
                },
                {
                  key: 'localToClientPoint',
                  value: function (e, t) {
                    var n = Ku.create(e, t);
                    return Nh.transformPoint(n, this.getClientMatrix());
                  },
                },
                {
                  key: 'localToPagePoint',
                  value: function (e, t) {
                    return (
                      'number' == typeof e
                        ? this.localToGraphPoint(e, t)
                        : this.localToGraphPoint(e)
                    ).translate(this.getPageOffset());
                  },
                },
                {
                  key: 'localToGraphRect',
                  value: function (e, t, n, r) {
                    var i = Zu.create(e, t, n, r);
                    return Nh.transformRectangle(i, this.graph.matrix());
                  },
                },
                {
                  key: 'localToClientRect',
                  value: function (e, t, n, r) {
                    var i = Zu.create(e, t, n, r);
                    return Nh.transformRectangle(i, this.getClientMatrix());
                  },
                },
                {
                  key: 'localToPageRect',
                  value: function (e, t, n, r) {
                    return (
                      'number' == typeof e
                        ? this.localToGraphRect(e, t, n, r)
                        : this.localToGraphRect(e)
                    ).translate(this.getPageOffset());
                  },
                },
                {
                  key: 'graphToLocalPoint',
                  value: function (e, t) {
                    var n = Ku.create(e, t);
                    return Nh.transformPoint(n, this.graph.matrix().inverse());
                  },
                },
                {
                  key: 'clientToLocalPoint',
                  value: function (e, t) {
                    var n = Ku.create(e, t);
                    return Nh.transformPoint(
                      n,
                      this.getClientMatrix().inverse()
                    );
                  },
                },
                {
                  key: 'clientToGraphPoint',
                  value: function (e, t) {
                    var n = Ku.create(e, t);
                    return Nh.transformPoint(
                      n,
                      this.graph
                        .matrix()
                        .multiply(this.getClientMatrix().inverse())
                    );
                  },
                },
                {
                  key: 'pageToLocalPoint',
                  value: function (e, t) {
                    var n = Ku.create(e, t).diff(this.getPageOffset());
                    return this.graphToLocalPoint(n);
                  },
                },
                {
                  key: 'graphToLocalRect',
                  value: function (e, t, n, r) {
                    var i = Zu.create(e, t, n, r);
                    return Nh.transformRectangle(
                      i,
                      this.graph.matrix().inverse()
                    );
                  },
                },
                {
                  key: 'clientToLocalRect',
                  value: function (e, t, n, r) {
                    var i = Zu.create(e, t, n, r);
                    return Nh.transformRectangle(
                      i,
                      this.getClientMatrix().inverse()
                    );
                  },
                },
                {
                  key: 'clientToGraphRect',
                  value: function (e, t, n, r) {
                    var i = Zu.create(e, t, n, r);
                    return Nh.transformRectangle(
                      i,
                      this.graph
                        .matrix()
                        .multiply(this.getClientMatrix().inverse())
                    );
                  },
                },
                {
                  key: 'pageToLocalRect',
                  value: function (e, t, n, r) {
                    var i = Zu.create(e, t, n, r),
                      o = this.getPageOffset();
                    return (i.x -= o.x), (i.y -= o.y), this.graphToLocalRect(i);
                  },
                },
              ]),
              n
            );
          })(tv),
          Pv = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          Av = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              var e;
              return (
                y()(this, n),
                ((e = t.apply(this, arguments)).highlights = {}),
                e
              );
            }
            return (
              b()(n, [
                {
                  key: 'init',
                  value: function () {
                    this.startListening();
                  },
                },
                {
                  key: 'startListening',
                  value: function () {
                    this.graph.on('cell:highlight', this.onCellHighlight, this),
                      this.graph.on(
                        'cell:unhighlight',
                        this.onCellUnhighlight,
                        this
                      );
                  },
                },
                {
                  key: 'stopListening',
                  value: function () {
                    this.graph.off(
                      'cell:highlight',
                      this.onCellHighlight,
                      this
                    ),
                      this.graph.off(
                        'cell:unhighlight',
                        this.onCellUnhighlight,
                        this
                      );
                  },
                },
                {
                  key: 'onCellHighlight',
                  value: function (e) {
                    var t = e.view,
                      n = e.magnet,
                      r = e.options,
                      i = void 0 === r ? {} : r,
                      o = this.resolveHighlighter(i);
                    if (o) {
                      var a = this.getHighlighterId(n, o);
                      if (!this.highlights[a]) {
                        var s = o.highlighter;
                        s.highlight(t, n, Object.assign({}, o.args)),
                          (this.highlights[a] = {
                            cellView: t,
                            magnet: n,
                            highlighter: s,
                            args: o.args,
                          });
                      }
                    }
                  },
                },
                {
                  key: 'onCellUnhighlight',
                  value: function (e) {
                    var t = e.magnet,
                      n = e.options,
                      r = void 0 === n ? {} : n,
                      i = this.resolveHighlighter(r);
                    if (i) {
                      var o = this.getHighlighterId(t, i);
                      this.unhighlight(o);
                    }
                  },
                },
                {
                  key: 'resolveHighlighter',
                  value: function (e) {
                    var t = this.options,
                      n = e.highlighter;
                    if (null == n) {
                      var r = e.type;
                      n = (r && t.highlighting[r]) || t.highlighting.default;
                    }
                    if (null == n) return null;
                    var i = 'string' == typeof n ? { name: n } : n,
                      o = i.name,
                      a = zh.registry.get(o);
                    return null == a
                      ? zh.registry.onNotFound(o)
                      : (zh.check(o, a),
                        { name: o, highlighter: a, args: i.args || {} });
                  },
                },
                {
                  key: 'getHighlighterId',
                  value: function (e, t) {
                    return nl(e), t.name + e.id + JSON.stringify(t.args);
                  },
                },
                {
                  key: 'unhighlight',
                  value: function (e) {
                    var t = this.highlights[e];
                    t &&
                      (t.highlighter.unhighlight(t.cellView, t.magnet, t.args),
                      delete this.highlights[e]);
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    var e = this;
                    Object.keys(this.highlights).forEach(function (t) {
                      return e.unhighlight(t);
                    }),
                      this.stopListening();
                  },
                },
              ]),
              n
            );
          })(tv);
        Pv([Av.dispose()], Av.prototype, 'dispose', null);
        var Mv = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          Tv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'getScroller',
                  value: function () {
                    var e = this.graph.getPlugin('scroller');
                    return e && e.options.enabled ? e : null;
                  },
                },
                {
                  key: 'getContainer',
                  value: function () {
                    var e = this.getScroller();
                    return e
                      ? e.container.parentElement
                      : this.graph.container.parentElement;
                  },
                },
                {
                  key: 'getSensorTarget',
                  value: function () {
                    var e = this.options.autoResize;
                    if (e)
                      return 'boolean' == typeof e ? this.getContainer() : e;
                  },
                },
                {
                  key: 'init',
                  value: function () {
                    var e = this;
                    if (this.options.autoResize) {
                      var t = this.getSensorTarget();
                      t &&
                        Du.bind(t, function () {
                          var n = t.offsetWidth,
                            r = t.offsetHeight;
                          e.resize(n, r);
                        });
                    }
                  },
                },
                {
                  key: 'resize',
                  value: function (e, t) {
                    var n = this.getScroller();
                    n ? n.resize(e, t) : this.graph.transform.resize(e, t);
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    Du.clear(this.graph.container);
                  },
                },
              ]),
              n
            );
          })(tv);
        Mv([tv.dispose()], Tv.prototype, 'dispose', null);
        var Nv = function (e, t, n, r) {
            var i,
              o = arguments.length,
              a =
                o < 3
                  ? t
                  : null === r
                  ? (r = Object.getOwnPropertyDescriptor(t, n))
                  : r;
            if (
              'object' ===
                ('undefined' == typeof Reflect ? 'undefined' : _()(Reflect)) &&
              'function' == typeof Reflect.decorate
            )
              a = Reflect.decorate(e, t, n, r);
            else
              for (var s = e.length - 1; s >= 0; s--)
                (i = e[s]) &&
                  (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
            return o > 3 && a && Object.defineProperty(t, n, a), a;
          },
          jv = (function (e, t) {
            M()(r, e);
            var n = N()(r);
            function r(e) {
              var t;
              return (
                y()(this, r),
                ((t = n.call(this)).installedPlugins = new Set()),
                (t.options = iv.get(e)),
                (t.css = new rv($u()(t))),
                (t.view = new ev($u()(t))),
                (t.defs = new Ev($u()(t))),
                (t.coord = new Ov($u()(t))),
                (t.transform = new uv($u()(t))),
                (t.highlight = new Av($u()(t))),
                (t.grid = new lv($u()(t))),
                (t.background = new fv($u()(t))),
                t.options.model
                  ? (t.model = t.options.model)
                  : ((t.model = new Vp()), (t.model.graph = $u()(t))),
                (t.renderer = new Cv($u()(t))),
                (t.panning = new dv($u()(t))),
                (t.mousewheel = new pv($u()(t))),
                (t.virtualRender = new yv($u()(t))),
                (t.size = new Tv($u()(t))),
                t
              );
            }
            return (
              b()(r, [
                {
                  key: 'container',
                  get: function () {
                    return this.options.container;
                  },
                },
                {
                  key: t,
                  get: function () {
                    return r.toStringTag;
                  },
                },
                {
                  key: 'isNode',
                  value: function (e) {
                    return e.isNode();
                  },
                },
                {
                  key: 'isEdge',
                  value: function (e) {
                    return e.isEdge();
                  },
                },
                {
                  key: 'resetCells',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.resetCells(e, t), this;
                  },
                },
                {
                  key: 'clearCells',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return this.model.clear(e), this;
                  },
                },
                {
                  key: 'toJSON',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return this.model.toJSON(e);
                  },
                },
                {
                  key: 'parseJSON',
                  value: function (e) {
                    return this.model.parseJSON(e);
                  },
                },
                {
                  key: 'fromJSON',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.fromJSON(e, t), this;
                  },
                },
                {
                  key: 'getCellById',
                  value: function (e) {
                    return this.model.getCell(e);
                  },
                },
                {
                  key: 'addNode',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.addNode(e, t);
                  },
                },
                {
                  key: 'addNodes',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                    return this.addCell(
                      e.map(function (e) {
                        return Ip.isNode(e) ? e : t.createNode(e);
                      }),
                      n
                    );
                  },
                },
                {
                  key: 'createNode',
                  value: function (e) {
                    return this.model.createNode(e);
                  },
                },
                {
                  key: 'removeNode',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.removeCell(e, t);
                  },
                },
                {
                  key: 'addEdge',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.addEdge(e, t);
                  },
                },
                {
                  key: 'addEdges',
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                    return this.addCell(
                      e.map(function (e) {
                        return zp.isEdge(e) ? e : t.createEdge(e);
                      }),
                      n
                    );
                  },
                },
                {
                  key: 'removeEdge',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.removeCell(e, t);
                  },
                },
                {
                  key: 'createEdge',
                  value: function (e) {
                    return this.model.createEdge(e);
                  },
                },
                {
                  key: 'addCell',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.addCell(e, t), this;
                  },
                },
                {
                  key: 'removeCell',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.removeCell(e, t);
                  },
                },
                {
                  key: 'removeCells',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.removeCells(e, t);
                  },
                },
                {
                  key: 'removeConnectedEdges',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.removeConnectedEdges(e, t);
                  },
                },
                {
                  key: 'disconnectConnectedEdges',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.disconnectConnectedEdges(e, t), this;
                  },
                },
                {
                  key: 'hasCell',
                  value: function (e) {
                    return this.model.has(e);
                  },
                },
                {
                  key: 'getCells',
                  value: function () {
                    return this.model.getCells();
                  },
                },
                {
                  key: 'getCellCount',
                  value: function () {
                    return this.model.total();
                  },
                },
                {
                  key: 'getNodes',
                  value: function () {
                    return this.model.getNodes();
                  },
                },
                {
                  key: 'getEdges',
                  value: function () {
                    return this.model.getEdges();
                  },
                },
                {
                  key: 'getOutgoingEdges',
                  value: function (e) {
                    return this.model.getOutgoingEdges(e);
                  },
                },
                {
                  key: 'getIncomingEdges',
                  value: function (e) {
                    return this.model.getIncomingEdges(e);
                  },
                },
                {
                  key: 'getConnectedEdges',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.getConnectedEdges(e, t);
                  },
                },
                {
                  key: 'getRootNodes',
                  value: function () {
                    return this.model.getRoots();
                  },
                },
                {
                  key: 'getLeafNodes',
                  value: function () {
                    return this.model.getLeafs();
                  },
                },
                {
                  key: 'isRootNode',
                  value: function (e) {
                    return this.model.isRoot(e);
                  },
                },
                {
                  key: 'isLeafNode',
                  value: function (e) {
                    return this.model.isLeaf(e);
                  },
                },
                {
                  key: 'getNeighbors',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.getNeighbors(e, t);
                  },
                },
                {
                  key: 'isNeighbor',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    return this.model.isNeighbor(e, t, n);
                  },
                },
                {
                  key: 'getSuccessors',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.getSuccessors(e, t);
                  },
                },
                {
                  key: 'isSuccessor',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    return this.model.isSuccessor(e, t, n);
                  },
                },
                {
                  key: 'getPredecessors',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.getPredecessors(e, t);
                  },
                },
                {
                  key: 'isPredecessor',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    return this.model.isPredecessor(e, t, n);
                  },
                },
                {
                  key: 'getCommonAncestor',
                  value: function () {
                    var e;
                    return (e = this.model).getCommonAncestor.apply(
                      e,
                      arguments
                    );
                  },
                },
                {
                  key: 'getSubGraph',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.getSubGraph(e, t);
                  },
                },
                {
                  key: 'cloneSubGraph',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.cloneSubGraph(e, t);
                  },
                },
                {
                  key: 'cloneCells',
                  value: function (e) {
                    return this.model.cloneCells(e);
                  },
                },
                {
                  key: 'getNodesFromPoint',
                  value: function (e, t) {
                    return this.model.getNodesFromPoint(e, t);
                  },
                },
                {
                  key: 'getNodesInArea',
                  value: function (e, t, n, r, i) {
                    return this.model.getNodesInArea(e, t, n, r, i);
                  },
                },
                {
                  key: 'getNodesUnderNode',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.getNodesUnderNode(e, t);
                  },
                },
                {
                  key: 'searchCell',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    return this.model.search(e, t, n), this;
                  },
                },
                {
                  key: 'getShortestPath',
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    return this.model.getShortestPath(e, t, n);
                  },
                },
                {
                  key: 'getAllCellsBBox',
                  value: function () {
                    return this.model.getAllCellsBBox();
                  },
                },
                {
                  key: 'getCellsBBox',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    return this.model.getCellsBBox(e, t);
                  },
                },
                {
                  key: 'startBatch',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    this.model.startBatch(e, t);
                  },
                },
                {
                  key: 'stopBatch',
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    this.model.stopBatch(e, t);
                  },
                },
                {
                  key: 'batchUpdate',
                  value: function (e, t, n) {
                    var r = 'string' == typeof e ? e : 'update',
                      i = 'string' == typeof e ? t : e,
                      o = 'function' == typeof t ? n : t;
                    this.startBatch(r, o);
                    var a = i();
                    return this.stopBatch(r, o), a;
                  },
                },
                {
                  key: 'updateCellId',
                  value: function (e, t) {
                    return this.model.updateCellId(e, t);
                  },
                },
                {
                  key: 'findView',
                  value: function (e) {
                    return Lp.isCell(e)
                      ? this.findViewByCell(e)
                      : this.findViewByElem(e);
                  },
                },
                {
                  key: 'findViews',
                  value: function (e) {
                    return Zu.isRectangleLike(e)
                      ? this.findViewsInArea(e)
                      : Ku.isPointLike(e)
                      ? this.findViewsFromPoint(e)
                      : [];
                  },
                },
                {
                  key: 'findViewByCell',
                  value: function (e) {
                    return this.renderer.findViewByCell(e);
                  },
                },
                {
                  key: 'findViewByElem',
                  value: function (e) {
                    return this.renderer.findViewByElem(e);
                  },
                },
                {
                  key: 'findViewsFromPoint',
                  value: function (e, t) {
                    var n = 'number' == typeof e ? { x: e, y: t } : e;
                    return this.renderer.findViewsFromPoint(n);
                  },
                },
                {
                  key: 'findViewsInArea',
                  value: function (e, t, n, r, i) {
                    var o =
                        'number' == typeof e
                          ? { x: e, y: t, width: n, height: r }
                          : e,
                      a = 'number' == typeof e ? i : t;
                    return this.renderer.findViewsInArea(o, a);
                  },
                },
                {
                  key: 'matrix',
                  value: function (e) {
                    return void 0 === e
                      ? this.transform.getMatrix()
                      : (this.transform.setMatrix(e), this);
                  },
                },
                {
                  key: 'resize',
                  value: function (e, t) {
                    var n = this.getPlugin('scroller');
                    return (
                      n ? n.resize(e, t) : this.transform.resize(e, t), this
                    );
                  },
                },
                {
                  key: 'scale',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : e,
                      n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : 0,
                      r =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : 0;
                    return void 0 === e
                      ? this.transform.getScale()
                      : (this.transform.scale(e, t, n, r), this);
                  },
                },
                {
                  key: 'zoom',
                  value: function (e, t) {
                    var n = this.getPlugin('scroller');
                    if (n) {
                      if (void 0 === e) return n.zoom();
                      n.zoom(e, t);
                    } else {
                      if (void 0 === e) return this.transform.getZoom();
                      this.transform.zoom(e, t);
                    }
                    return this;
                  },
                },
                {
                  key: 'zoomTo',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = this.getPlugin('scroller');
                    return (
                      n
                        ? n.zoom(
                            e,
                            Object.assign(Object.assign({}, t), {
                              absolute: !0,
                            })
                          )
                        : this.transform.zoom(
                            e,
                            Object.assign(Object.assign({}, t), {
                              absolute: !0,
                            })
                          ),
                      this
                    );
                  },
                },
                {
                  key: 'zoomToRect',
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {},
                      n = this.getPlugin('scroller');
                    return (
                      n ? n.zoomToRect(e, t) : this.transform.zoomToRect(e, t),
                      this
                    );
                  },
                },
                {
                  key: 'zoomToFit',
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      t = this.getPlugin('scroller');
                    return (
                      t ? t.zoomToFit(e) : this.transform.zoomToFit(e), this
                    );
                  },
                },
                {
                  key: 'rotate',
                  value: function (e, t, n) {
                    return void 0 === e
                      ? this.transform.getRotation()
                      : (this.transform.rotate(e, t, n), this);
                  },
                },
                {
                  key: 'translate',
                  value: function (e, t) {
                    return void 0 === e
                      ? this.transform.getTranslation()
                      : (this.transform.translate(e, t), this);
                  },
                },
                {
                  key: 'translateBy',
                  value: function (e, t) {
                    var n = this.translate(),
                      r = n.tx + e,
                      i = n.ty + t;
                    return this.translate(r, i);
                  },
                },
                {
                  key: 'getGraphArea',
                  value: function () {
                    return this.transform.getGraphArea();
                  },
                },
                {
                  key: 'getContentArea',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return this.transform.getContentArea(e);
                  },
                },
                {
                  key: 'getContentBBox',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return this.transform.getContentBBox(e);
                  },
                },
                {
                  key: 'fitToContent',
                  value: function (e, t, n, r) {
                    return this.transform.fitToContent(e, t, n, r);
                  },
                },
                {
                  key: 'scaleContentToFit',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return this.transform.scaleContentToFit(e), this;
                  },
                },
                {
                  key: 'center',
                  value: function (e) {
                    return this.centerPoint(e);
                  },
                },
                {
                  key: 'centerPoint',
                  value: function (e, t, n) {
                    var r = this.getPlugin('scroller');
                    return (
                      r
                        ? r.centerPoint(e, t, n)
                        : this.transform.centerPoint(e, t),
                      this
                    );
                  },
                },
                {
                  key: 'centerContent',
                  value: function (e) {
                    var t = this.getPlugin('scroller');
                    return (
                      t ? t.centerContent(e) : this.transform.centerContent(e),
                      this
                    );
                  },
                },
                {
                  key: 'centerCell',
                  value: function (e, t) {
                    var n = this.getPlugin('scroller');
                    return (
                      n ? n.centerCell(e, t) : this.transform.centerCell(e),
                      this
                    );
                  },
                },
                {
                  key: 'positionPoint',
                  value: function (e, t, n) {
                    var r =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : {},
                      i = this.getPlugin('scroller');
                    return (
                      i
                        ? i.positionPoint(e, t, n, r)
                        : this.transform.positionPoint(e, t, n),
                      this
                    );
                  },
                },
                {
                  key: 'positionRect',
                  value: function (e, t, n) {
                    var r = this.getPlugin('scroller');
                    return (
                      r
                        ? r.positionRect(e, t, n)
                        : this.transform.positionRect(e, t),
                      this
                    );
                  },
                },
                {
                  key: 'positionCell',
                  value: function (e, t, n) {
                    var r = this.getPlugin('scroller');
                    return (
                      r
                        ? r.positionCell(e, t, n)
                        : this.transform.positionCell(e, t),
                      this
                    );
                  },
                },
                {
                  key: 'positionContent',
                  value: function (e, t) {
                    var n = this.getPlugin('scroller');
                    return (
                      n
                        ? n.positionContent(e, t)
                        : this.transform.positionContent(e, t),
                      this
                    );
                  },
                },
                {
                  key: 'snapToGrid',
                  value: function (e, t) {
                    return this.coord.snapToGrid(e, t);
                  },
                },
                {
                  key: 'pageToLocal',
                  value: function (e, t, n, r) {
                    return Zu.isRectangleLike(e)
                      ? this.coord.pageToLocalRect(e)
                      : 'number' == typeof e &&
                        'number' == typeof t &&
                        'number' == typeof n &&
                        'number' == typeof r
                      ? this.coord.pageToLocalRect(e, t, n, r)
                      : this.coord.pageToLocalPoint(e, t);
                  },
                },
                {
                  key: 'localToPage',
                  value: function (e, t, n, r) {
                    return Zu.isRectangleLike(e)
                      ? this.coord.localToPageRect(e)
                      : 'number' == typeof e &&
                        'number' == typeof t &&
                        'number' == typeof n &&
                        'number' == typeof r
                      ? this.coord.localToPageRect(e, t, n, r)
                      : this.coord.localToPagePoint(e, t);
                  },
                },
                {
                  key: 'clientToLocal',
                  value: function (e, t, n, r) {
                    return Zu.isRectangleLike(e)
                      ? this.coord.clientToLocalRect(e)
                      : 'number' == typeof e &&
                        'number' == typeof t &&
                        'number' == typeof n &&
                        'number' == typeof r
                      ? this.coord.clientToLocalRect(e, t, n, r)
                      : this.coord.clientToLocalPoint(e, t);
                  },
                },
                {
                  key: 'localToClient',
                  value: function (e, t, n, r) {
                    return Zu.isRectangleLike(e)
                      ? this.coord.localToClientRect(e)
                      : 'number' == typeof e &&
                        'number' == typeof t &&
                        'number' == typeof n &&
                        'number' == typeof r
                      ? this.coord.localToClientRect(e, t, n, r)
                      : this.coord.localToClientPoint(e, t);
                  },
                },
                {
                  key: 'localToGraph',
                  value: function (e, t, n, r) {
                    return Zu.isRectangleLike(e)
                      ? this.coord.localToGraphRect(e)
                      : 'number' == typeof e &&
                        'number' == typeof t &&
                        'number' == typeof n &&
                        'number' == typeof r
                      ? this.coord.localToGraphRect(e, t, n, r)
                      : this.coord.localToGraphPoint(e, t);
                  },
                },
                {
                  key: 'graphToLocal',
                  value: function (e, t, n, r) {
                    return Zu.isRectangleLike(e)
                      ? this.coord.graphToLocalRect(e)
                      : 'number' == typeof e &&
                        'number' == typeof t &&
                        'number' == typeof n &&
                        'number' == typeof r
                      ? this.coord.graphToLocalRect(e, t, n, r)
                      : this.coord.graphToLocalPoint(e, t);
                  },
                },
                {
                  key: 'clientToGraph',
                  value: function (e, t, n, r) {
                    return Zu.isRectangleLike(e)
                      ? this.coord.clientToGraphRect(e)
                      : 'number' == typeof e &&
                        'number' == typeof t &&
                        'number' == typeof n &&
                        'number' == typeof r
                      ? this.coord.clientToGraphRect(e, t, n, r)
                      : this.coord.clientToGraphPoint(e, t);
                  },
                },
                {
                  key: 'defineFilter',
                  value: function (e) {
                    return this.defs.filter(e);
                  },
                },
                {
                  key: 'defineGradient',
                  value: function (e) {
                    return this.defs.gradient(e);
                  },
                },
                {
                  key: 'defineMarker',
                  value: function (e) {
                    return this.defs.marker(e);
                  },
                },
                {
                  key: 'getGridSize',
                  value: function () {
                    return this.grid.getGridSize();
                  },
                },
                {
                  key: 'setGridSize',
                  value: function (e) {
                    return this.grid.setGridSize(e), this;
                  },
                },
                {
                  key: 'showGrid',
                  value: function () {
                    return this.grid.show(), this;
                  },
                },
                {
                  key: 'hideGrid',
                  value: function () {
                    return this.grid.hide(), this;
                  },
                },
                {
                  key: 'clearGrid',
                  value: function () {
                    return this.grid.clear(), this;
                  },
                },
                {
                  key: 'drawGrid',
                  value: function (e) {
                    return this.grid.draw(e), this;
                  },
                },
                {
                  key: 'updateBackground',
                  value: function () {
                    return this.background.update(), this;
                  },
                },
                {
                  key: 'drawBackground',
                  value: function (e, t) {
                    var n = this.getPlugin('scroller');
                    return (
                      null == n || (null != this.options.background && t)
                        ? this.background.draw(e)
                        : n.drawBackground(e, t),
                      this
                    );
                  },
                },
                {
                  key: 'clearBackground',
                  value: function (e) {
                    var t = this.getPlugin('scroller');
                    return (
                      null == t || (null != this.options.background && e)
                        ? this.background.clear()
                        : t.clearBackground(e),
                      this
                    );
                  },
                },
                {
                  key: 'enableVirtualRender',
                  value: function () {
                    return this.virtualRender.enableVirtualRender(), this;
                  },
                },
                {
                  key: 'disableVirtualRender',
                  value: function () {
                    return this.virtualRender.disableVirtualRender(), this;
                  },
                },
                {
                  key: 'isMouseWheelEnabled',
                  value: function () {
                    return !this.mousewheel.disabled;
                  },
                },
                {
                  key: 'enableMouseWheel',
                  value: function () {
                    return this.mousewheel.enable(), this;
                  },
                },
                {
                  key: 'disableMouseWheel',
                  value: function () {
                    return this.mousewheel.disable(), this;
                  },
                },
                {
                  key: 'toggleMouseWheel',
                  value: function (e) {
                    return (
                      null == e
                        ? this.isMouseWheelEnabled()
                          ? this.disableMouseWheel()
                          : this.enableMouseWheel()
                        : e
                        ? this.enableMouseWheel()
                        : this.disableMouseWheel(),
                      this
                    );
                  },
                },
                {
                  key: 'isPannable',
                  value: function () {
                    var e = this.getPlugin('scroller');
                    return e ? e.isPannable() : this.panning.pannable;
                  },
                },
                {
                  key: 'enablePanning',
                  value: function () {
                    var e = this.getPlugin('scroller');
                    return (
                      e ? e.enablePanning() : this.panning.enablePanning(), this
                    );
                  },
                },
                {
                  key: 'disablePanning',
                  value: function () {
                    var e = this.getPlugin('scroller');
                    return (
                      e ? e.disablePanning() : this.panning.disablePanning(),
                      this
                    );
                  },
                },
                {
                  key: 'togglePanning',
                  value: function (e) {
                    return (
                      null == e
                        ? this.isPannable()
                          ? this.disablePanning()
                          : this.enablePanning()
                        : e !== this.isPannable() &&
                          (e ? this.enablePanning() : this.disablePanning()),
                      this
                    );
                  },
                },
                {
                  key: 'use',
                  value: function (e) {
                    if (!this.installedPlugins.has(e)) {
                      this.installedPlugins.add(e);
                      for (
                        var t = arguments.length,
                          n = new Array(t > 1 ? t - 1 : 0),
                          r = 1;
                        r < t;
                        r++
                      )
                        n[r - 1] = arguments[r];
                      e.init.apply(e, [this].concat(n));
                    }
                    return this;
                  },
                },
                {
                  key: 'getPlugin',
                  value: function (e) {
                    return Array.from(this.installedPlugins).find(function (t) {
                      return t.name === e;
                    });
                  },
                },
                {
                  key: 'getPlugins',
                  value: function (e) {
                    return Array.from(this.installedPlugins).filter(function (
                      t
                    ) {
                      return e.includes(t.name);
                    });
                  },
                },
                {
                  key: 'enablePlugins',
                  value: function (e) {
                    var t = e;
                    Array.isArray(t) || (t = [t]);
                    var n = this.getPlugins(t);
                    return (
                      null == n ||
                        n.forEach(function (e) {
                          var t;
                          null === (t = null == e ? void 0 : e.enable) ||
                            void 0 === t ||
                            t.call(e);
                        }),
                      this
                    );
                  },
                },
                {
                  key: 'disablePlugins',
                  value: function (e) {
                    var t = e;
                    Array.isArray(t) || (t = [t]);
                    var n = this.getPlugins(t);
                    return (
                      null == n ||
                        n.forEach(function (e) {
                          var t;
                          null === (t = null == e ? void 0 : e.disable) ||
                            void 0 === t ||
                            t.call(e);
                        }),
                      this
                    );
                  },
                },
                {
                  key: 'isPluginEnabled',
                  value: function (e) {
                    var t,
                      n = this.getPlugin(e);
                    return null === (t = null == n ? void 0 : n.isEnabled) ||
                      void 0 === t
                      ? void 0
                      : t.call(n);
                  },
                },
                {
                  key: 'disposePlugins',
                  value: function (e) {
                    var t = e;
                    Array.isArray(t) || (t = [t]);
                    var n = this.getPlugins(t);
                    return (
                      null == n ||
                        n.forEach(function (e) {
                          e.dispose();
                        }),
                      this
                    );
                  },
                },
                {
                  key: 'dispose',
                  value: function () {
                    this.clearCells(),
                      this.off(),
                      this.css.dispose(),
                      this.defs.dispose(),
                      this.grid.dispose(),
                      this.coord.dispose(),
                      this.transform.dispose(),
                      this.highlight.dispose(),
                      this.background.dispose(),
                      this.mousewheel.dispose(),
                      this.panning.dispose(),
                      this.view.dispose(),
                      this.renderer.dispose(),
                      this.installedPlugins.forEach(function (e) {
                        e.dispose();
                      });
                  },
                },
              ]),
              r
            );
          })(so, Symbol.toStringTag);
        Nv([so.dispose()], jv.prototype, 'dispose', null),
          (function (e) {
            (e.View = ev),
              (e.Renderer = Cv),
              (e.MouseWheel = pv),
              (e.DefsManager = Ev),
              (e.GridManager = lv),
              (e.CoordManager = Ov),
              (e.TransformManager = uv),
              (e.HighlightManager = Av),
              (e.BackgroundManager = fv);
          })(jv || (jv = {})),
          (function (e) {
            (e.toStringTag = 'X6.'.concat(e.name)),
              (e.isGraph = function (t) {
                if (null == t) return !1;
                if (t instanceof e) return !0;
                var n = t[Symbol.toStringTag];
                return null == n || n === e.toStringTag;
              });
          })(jv || (jv = {})),
          (function (e) {
            e.render = function (t, n) {
              var r =
                t instanceof HTMLElement ? new e({ container: t }) : new e(t);
              return null != n && r.fromJSON(n), r;
            };
          })(jv || (jv = {})),
          (function (e) {
            (e.registerNode = Ip.registry.register),
              (e.registerEdge = zp.registry.register),
              (e.registerView = Td.registry.register),
              (e.registerAttr = wh.registry.register),
              (e.registerGrid = Tc.registry.register),
              (e.registerFilter = jc.registry.register),
              (e.registerNodeTool = Zd.registry.register),
              (e.registerEdgeTool = eg.registry.register),
              (e.registerBackground = Nc.registry.register),
              (e.registerHighlighter = zh.registry.register),
              (e.registerPortLayout = Xh.registry.register),
              (e.registerPortLabelLayout = pd.registry.register),
              (e.registerMarker = eh.registry.register),
              (e.registerRouter = up.registry.register),
              (e.registerConnector = Ep.registry.register),
              (e.registerAnchor = gg.registry.register),
              (e.registerEdgeAnchor = mg.registry.register),
              (e.registerConnectionPoint = Mg.registry.register);
          })(jv || (jv = {})),
          (function (e) {
            (e.unregisterNode = Ip.registry.unregister),
              (e.unregisterEdge = zp.registry.unregister),
              (e.unregisterView = Td.registry.unregister),
              (e.unregisterAttr = wh.registry.unregister),
              (e.unregisterGrid = Tc.registry.unregister),
              (e.unregisterFilter = jc.registry.unregister),
              (e.unregisterNodeTool = Zd.registry.unregister),
              (e.unregisterEdgeTool = eg.registry.unregister),
              (e.unregisterBackground = Nc.registry.unregister),
              (e.unregisterHighlighter = zh.registry.unregister),
              (e.unregisterPortLayout = Xh.registry.unregister),
              (e.unregisterPortLabelLayout = pd.registry.unregister),
              (e.unregisterMarker = eh.registry.unregister),
              (e.unregisterRouter = up.registry.unregister),
              (e.unregisterConnector = Ep.registry.unregister),
              (e.unregisterAnchor = gg.registry.unregister),
              (e.unregisterEdgeAnchor = mg.registry.unregister),
              (e.unregisterConnectionPoint = Mg.registry.unregister);
          })(jv || (jv = {}));
        var Lv = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Rv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return b()(n);
          })(Ip);
        !(function (e) {
          var t = (function (t) {
            M()(r, t);
            var n = N()(r);
            function r() {
              return y()(this, r), n.apply(this, arguments);
            }
            return (
              b()(r, [
                {
                  key: 'init',
                  value: function () {
                    var t = this;
                    wd()(Cd()(r.prototype), 'init', this).call(this),
                      this.cell.on('change:*', function (n) {
                        var r = n.key,
                          i = e.shapeMaps[t.cell.shape];
                        if (i) {
                          var o = i.effect;
                          (o && !o.includes(r)) || t.renderHTMLComponent();
                        }
                      });
                  },
                },
                {
                  key: 'confirmUpdate',
                  value: function (e) {
                    var t = this,
                      n = wd()(Cd()(r.prototype), 'confirmUpdate', this).call(
                        this,
                        e
                      );
                    return this.handleAction(n, r.action, function () {
                      return t.renderHTMLComponent();
                    });
                  },
                },
                {
                  key: 'renderHTMLComponent',
                  value: function () {
                    var t = this.selectors && this.selectors.foContent;
                    if (t) {
                      dl(t);
                      var n = e.shapeMaps[this.cell.shape];
                      if (!n) return;
                      var r = n.html;
                      'function' == typeof r && (r = r(this.cell)),
                        r &&
                          ('string' == typeof r ? (t.innerHTML = r) : gl(t, r));
                    }
                  },
                },
              ]),
              r
            );
          })(Qp);
          (e.View = t),
            (function (e) {
              (e.action = 'html'),
                e.config({
                  bootstrap: [e.action],
                  actions: { html: e.action },
                }),
                Qp.registry.register('html-view', e, !0);
            })((t = e.View || (e.View = {})));
        })(Rv || (Rv = {})),
          (function (e) {
            e.config({
              view: 'html-view',
              markup: [
                { tagName: 'rect', selector: 'body' },
                Object.assign({}, Ed.getForeignObjectMarkup()),
                { tagName: 'text', selector: 'label' },
              ],
              attrs: {
                body: {
                  fill: 'none',
                  stroke: 'none',
                  refWidth: '100%',
                  refHeight: '100%',
                },
                fo: { refWidth: '100%', refHeight: '100%' },
              },
            }),
              Ip.registry.register('html', e, !0);
          })(Rv || (Rv = {})),
          (function (e) {
            (e.shapeMaps = {}),
              (e.register = function (t) {
                var n = t.shape,
                  r = t.html,
                  i = t.effect,
                  o = t.inherit,
                  a = Lv(t, ['shape', 'html', 'effect', 'inherit']);
                if (!n) throw new Error('should specify shape in config');
                (e.shapeMaps[n] = { html: r, effect: i }),
                  jv.registerNode(
                    n,
                    Object.assign({ inherit: o || 'html' }, a),
                    !0
                  );
              });
          })(Rv || (Rv = {}));
        var _v = (function (e) {
          M()(n, e);
          var t = N()(n);
          function n() {
            return y()(this, n), t.apply(this, arguments);
          }
          return b()(n);
        })(Ip);
        !(function (e) {
          function t(e) {
            var t = [],
              n = Ed.getForeignObjectMarkup();
            return (
              e
                ? t.push.apply(t, [{ tagName: e, selector: 'body' }, n])
                : t.push(n),
              t
            );
          }
          e.config({
            view: 'react-shape-view',
            markup: t(),
            attrs: {
              body: {
                fill: 'none',
                stroke: 'none',
                refWidth: '100%',
                refHeight: '100%',
              },
              fo: { refWidth: '100%', refHeight: '100%' },
            },
            propHooks: function (e) {
              if (null == e.markup) {
                var n = e.primer;
                if (n) {
                  e.markup = t(n);
                  var r = {};
                  switch (n) {
                    case 'circle':
                      r = { refCx: '50%', refCy: '50%', refR: '50%' };
                      break;
                    case 'ellipse':
                      r = {
                        refCx: '50%',
                        refCy: '50%',
                        refRx: '50%',
                        refRy: '50%',
                      };
                  }
                  e.attrs = wr(
                    {},
                    {
                      body: Object.assign(
                        { refWidth: null, refHeight: null },
                        r
                      ),
                    },
                    e.attrs || {}
                  );
                }
              }
              return e;
            },
          }),
            Ip.registry.register('react-shape', e, !0);
        })(_v || (_v = {}));
        var Iv,
          Dv = i(629),
          zv = i.t(Dv, 2),
          Bv = i(793);
        !(function (e) {
          var t,
            n = !1,
            r = function (e, t) {
              var n = t.payload;
              switch (t.type) {
                case 'add':
                  var r = e.findIndex(function (e) {
                    return e.id === n.id;
                  });
                  return r >= 0 ? ((e[r] = n), L()(e)) : [].concat(L()(e), [n]);
                case 'remove':
                  var i = e.findIndex(function (e) {
                    return e.id === n.id;
                  });
                  if (i >= 0) {
                    var o = L()(e);
                    return o.splice(i, 1), o;
                  }
              }
              return e;
            };
          (e.connect = function (e, r) {
            n && t({ type: 'add', payload: { id: e, portal: r } });
          }),
            (e.disconnect = function (e) {
              n && t({ type: 'remove', payload: { id: e } });
            }),
            (e.isActive = function () {
              return n;
            }),
            (e.getProvider = function () {
              return function () {
                n = !0;
                var e = (0, S.useReducer)(r, []),
                  i = ql()(e, 2),
                  o = i[0],
                  a = i[1];
                return (
                  (t = a),
                  S.createElement(S.Fragment, {
                    children: o.map(function (e) {
                      return e.portal;
                    }),
                  })
                );
              };
            });
        })(Iv || (Iv = {}));
        var Vv = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Fv = {};
        var Uv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n(e) {
              var r;
              return (
                y()(this, n), ((r = t.call(this, e)).state = { tick: 0 }), r
              );
            }
            return (
              b()(n, [
                {
                  key: 'componentDidMount',
                  value: function () {
                    var e = this,
                      t = this.props.node;
                    t.on('change:*', function (n) {
                      var r = n.key,
                        i = Fv[t.shape];
                      if (i) {
                        var o = i.effect;
                        (o && !o.includes(r)) ||
                          e.setState({ tick: e.state.tick + 1 });
                      }
                    });
                  },
                },
                {
                  key: 'clone',
                  value: function (e) {
                    var t = this.props,
                      n = t.node,
                      r = t.graph;
                    return 'string' == typeof e.type
                      ? S.cloneElement(e)
                      : S.cloneElement(e, { node: n, graph: r });
                  },
                },
                {
                  key: 'render',
                  value: function () {
                    var e = this.props.node,
                      t = Fv[e.shape];
                    if (!t) return null;
                    var n = t.component;
                    if (S.isValidElement(n)) return this.clone(n);
                    var r = n;
                    return this.clone(S.createElement(r, null));
                  },
                },
              ]),
              n
            );
          })(S.PureComponent),
          Hv = (function (e) {
            M()(n, e);
            var t = N()(n);
            function n() {
              return y()(this, n), t.apply(this, arguments);
            }
            return (
              b()(n, [
                {
                  key: 'getComponentContainer',
                  value: function () {
                    return this.selectors && this.selectors.foContent;
                  },
                },
                {
                  key: 'confirmUpdate',
                  value: function (e) {
                    var t = this,
                      r = wd()(Cd()(n.prototype), 'confirmUpdate', this).call(
                        this,
                        e
                      );
                    return this.handleAction(r, n.action, function () {
                      t.renderReactComponent();
                    });
                  },
                },
                {
                  key: 'renderReactComponent',
                  value: function () {
                    this.unmountReactComponent();
                    var e = this.getComponentContainer(),
                      t = this.cell;
                    if (e) {
                      var n = S.createElement(Uv, {
                        node: t,
                        graph: this.graph,
                      });
                      if (Iv.isActive()) {
                        var r = (0, Dv.createPortal)(n, e);
                        Iv.connect(this.cell.id, r);
                      } else (this.root = (0, Bv.s)(e)), this.root.render(n);
                    }
                  },
                },
                {
                  key: 'unmountReactComponent',
                  value: function () {
                    this.getComponentContainer() &&
                      this.root &&
                      (this.root.unmount(), (this.root = void 0));
                  },
                },
                {
                  key: 'onMouseDown',
                  value: function (e, t, r) {
                    var i = e.target;
                    if ('input' === i.tagName.toLowerCase()) {
                      var o = i.getAttribute('type');
                      if (
                        null == o ||
                        [
                          'text',
                          'password',
                          'number',
                          'email',
                          'search',
                          'tel',
                          'url',
                        ].includes(o)
                      )
                        return;
                    }
                    wd()(Cd()(n.prototype), 'onMouseDown', this).call(
                      this,
                      e,
                      t,
                      r
                    );
                  },
                },
                {
                  key: 'unmount',
                  value: function () {
                    return (
                      Iv.isActive() && Iv.disconnect(this.cell.id),
                      this.unmountReactComponent(),
                      wd()(Cd()(n.prototype), 'unmount', this).call(this),
                      this
                    );
                  },
                },
              ]),
              n
            );
          })(Qp);
        !(function (e) {
          (e.action = 'react'),
            e.config({
              bootstrap: [e.action],
              actions: { component: e.action },
            }),
            Qp.registry.register('react-shape-view', e, !0);
        })(Hv || (Hv = {}));
        var Gv = i(967),
          Wv = i.n(Gv),
          qv = S.createContext({
            getPrefixCls: function (e, t) {
              return t || (e ? 'ant-'.concat(e) : 'ant');
            },
            iconPrefixCls: 'anticon',
          });
        qv.Consumer;
        function Xv() {
          return (
            (Xv = Object.assign
              ? Object.assign.bind()
              : function (e) {
                  for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                      Object.prototype.hasOwnProperty.call(n, r) &&
                        (e[r] = n[r]);
                  }
                  return e;
                }),
            Xv.apply(this, arguments)
          );
        }
        function Yv(e) {
          return (
            (Yv =
              'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      'function' == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? 'symbol'
                      : typeof e;
                  }),
            Yv(e)
          );
        }
        function Jv(e) {
          var t = (function (e, t) {
            if ('object' !== Yv(e) || null === e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
              var r = n.call(e, t || 'default');
              if ('object' !== Yv(r)) return r;
              throw new TypeError(
                '@@toPrimitive must return a primitive value.'
              );
            }
            return ('string' === t ? String : Number)(e);
          })(e, 'string');
          return 'symbol' === Yv(t) ? t : String(t);
        }
        function $v(e, t, n) {
          return (
            (t = Jv(t)) in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function Qv(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function Kv(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? Qv(Object(n), !0).forEach(function (t) {
                  $v(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : Qv(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        function Zv(e, t) {
          if (null == e) return {};
          var n,
            r,
            i = (function (e, t) {
              if (null == e) return {};
              var n,
                r,
                i = {},
                o = Object.keys(e);
              for (r = 0; r < o.length; r++)
                (n = o[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
              return i;
            })(e, t);
          if (Object.getOwnPropertySymbols) {
            var o = Object.getOwnPropertySymbols(e);
            for (r = 0; r < o.length; r++)
              (n = o[r]),
                t.indexOf(n) >= 0 ||
                  (Object.prototype.propertyIsEnumerable.call(e, n) &&
                    (i[n] = e[n]));
          }
          return i;
        }
        function ey(e, t) {
          (null == t || t > e.length) && (t = e.length);
          for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
          return r;
        }
        function ty(e, t) {
          if (e) {
            if ('string' == typeof e) return ey(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return (
              'Object' === n && e.constructor && (n = e.constructor.name),
              'Map' === n || 'Set' === n
                ? Array.from(e)
                : 'Arguments' === n ||
                  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                ? ey(e, t)
                : void 0
            );
          }
        }
        function ny(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n =
                null == e
                  ? null
                  : ('undefined' != typeof Symbol && e[Symbol.iterator]) ||
                    e['@@iterator'];
              if (null != n) {
                var r,
                  i,
                  o,
                  a,
                  s = [],
                  l = !0,
                  u = !1;
                try {
                  if (((o = (n = n.call(e)).next), 0 === t)) {
                    if (Object(n) !== n) return;
                    l = !1;
                  } else
                    for (
                      ;
                      !(l = (r = o.call(n)).done) &&
                      (s.push(r.value), s.length !== t);
                      l = !0
                    );
                } catch (e) {
                  (u = !0), (i = e);
                } finally {
                  try {
                    if (
                      !l &&
                      null != n.return &&
                      ((a = n.return()), Object(a) !== a)
                    )
                      return;
                  } finally {
                    if (u) throw i;
                  }
                }
                return s;
              }
            })(e, t) ||
            ty(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
              );
            })()
          );
        }
        function ry() {
          return !(
            'undefined' == typeof window ||
            !window.document ||
            !window.document.createElement
          );
        }
        var iy = {};
        function oy(e, t) {
          0;
        }
        function ay(e, t, n) {
          t || iy[n] || (e(!1, n), (iy[n] = !0));
        }
        var sy = function (e, t) {
            ay(oy, e, t);
          },
          ly = i(201);
        function uy(e, t, n) {
          var r = S.useRef({});
          return (
            ('value' in r.current && !n(r.current.condition, t)) ||
              ((r.current.value = e()), (r.current.condition = t)),
            r.current.value
          );
        }
        function cy(e, t) {
          'function' == typeof e
            ? e(t)
            : 'object' === Yv(e) && e && 'current' in e && (e.current = t);
        }
        function fy() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          var r = t.filter(function (e) {
            return e;
          });
          return r.length <= 1
            ? r[0]
            : function (e) {
                t.forEach(function (t) {
                  cy(t, e);
                });
              };
        }
        function hy() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return uy(
            function () {
              return fy.apply(void 0, t);
            },
            t,
            function (e, t) {
              return (
                e.length === t.length &&
                e.every(function (e, n) {
                  return e === t[n];
                })
              );
            }
          );
        }
        function dy(e) {
          var t,
            n,
            r = (0, ly.isMemo)(e) ? e.type.type : e.type;
          return (
            !!(
              'function' != typeof r ||
              (null !== (t = r.prototype) && void 0 !== t && t.render)
            ) &&
            !!(
              'function' != typeof e ||
              (null !== (n = e.prototype) && void 0 !== n && n.render)
            )
          );
        }
        var gy = S.createContext(null);
        function py(e) {
          return (
            (function (e) {
              if (Array.isArray(e)) return ey(e);
            })(e) ||
            (function (e) {
              if (
                ('undefined' != typeof Symbol && null != e[Symbol.iterator]) ||
                null != e['@@iterator']
              )
                return Array.from(e);
            })(e) ||
            ty(e) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
              );
            })()
          );
        }
        var vy = ry() ? S.useLayoutEffect : S.useEffect,
          yy = vy,
          my = function (e, t) {
            var n = S.useRef(!0);
            vy(function () {
              if (!n.current) return e();
            }, t),
              vy(function () {
                return (
                  (n.current = !1),
                  function () {
                    n.current = !0;
                  }
                );
              }, []);
          },
          by = [];
        var ky,
          wy = 'data-rc-order',
          xy = 'rc-util-key',
          Cy = new Map();
        function Sy() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = e.mark;
          return t ? (t.startsWith('data-') ? t : 'data-'.concat(t)) : xy;
        }
        function Ey(e) {
          return e.attachTo
            ? e.attachTo
            : document.querySelector('head') || document.body;
        }
        function Oy(e) {
          return 'queue' === e ? 'prependQueue' : e ? 'prepend' : 'append';
        }
        function Py(e) {
          return Array.from((Cy.get(e) || e).children).filter(function (e) {
            return 'STYLE' === e.tagName;
          });
        }
        function Ay(e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (!ry()) return null;
          var n = t.csp,
            r = t.prepend,
            i = document.createElement('style');
          i.setAttribute(wy, Oy(r)),
            null != n && n.nonce && (i.nonce = null == n ? void 0 : n.nonce),
            (i.innerHTML = e);
          var o = Ey(t),
            a = o.firstChild;
          if (r) {
            if ('queue' === r) {
              var s = Py(o).filter(function (e) {
                return ['prepend', 'prependQueue'].includes(e.getAttribute(wy));
              });
              if (s.length)
                return o.insertBefore(i, s[s.length - 1].nextSibling), i;
            }
            o.insertBefore(i, a);
          } else o.appendChild(i);
          return i;
        }
        function My(e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            n = Ey(t);
          return Py(n).find(function (n) {
            return n.getAttribute(Sy(t)) === e;
          });
        }
        function Ty(e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            n = My(e, t);
          if (n) {
            var r = Ey(t);
            r.removeChild(n);
          }
        }
        function Ny(e, t) {
          var n = Cy.get(e);
          if (
            !n ||
            !(function (e, t) {
              if (!e) return !1;
              if (e.contains) return e.contains(t);
              for (var n = t; n; ) {
                if (n === e) return !0;
                n = n.parentNode;
              }
              return !1;
            })(document, n)
          ) {
            var r = Ay('', t),
              i = r.parentNode;
            Cy.set(e, i), e.removeChild(r);
          }
        }
        function jy(e, t) {
          var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {},
            r = Ey(n);
          Ny(r, n);
          var i = My(t, n);
          if (i) {
            var o, a, s;
            if (
              null !== (o = n.csp) &&
              void 0 !== o &&
              o.nonce &&
              i.nonce !==
                (null === (a = n.csp) || void 0 === a ? void 0 : a.nonce)
            )
              i.nonce = null === (s = n.csp) || void 0 === s ? void 0 : s.nonce;
            return i.innerHTML !== e && (i.innerHTML = e), i;
          }
          var l = Ay(e, n);
          return l.setAttribute(Sy(n), t), l;
        }
        function Ly(e) {
          if ('undefined' == typeof document) return 0;
          if (e || void 0 === ky) {
            var t = document.createElement('div');
            (t.style.width = '100%'), (t.style.height = '200px');
            var n = document.createElement('div'),
              r = n.style;
            (r.position = 'absolute'),
              (r.top = '0'),
              (r.left = '0'),
              (r.pointerEvents = 'none'),
              (r.visibility = 'hidden'),
              (r.width = '200px'),
              (r.height = '150px'),
              (r.overflow = 'hidden'),
              n.appendChild(t),
              document.body.appendChild(n);
            var i = t.offsetWidth;
            n.style.overflow = 'scroll';
            var o = t.offsetWidth;
            i === o && (o = n.clientWidth),
              document.body.removeChild(n),
              (ky = i - o);
          }
          return ky;
        }
        var Ry = 'rc-util-locker-'.concat(Date.now()),
          _y = 0;
        function Iy(e) {
          var t = !!e,
            n = ny(
              S.useState(function () {
                return (_y += 1), ''.concat(Ry, '_').concat(_y);
              }),
              1
            )[0];
          yy(
            function () {
              if (t) {
                var e = Ly(),
                  r =
                    document.body.scrollHeight >
                      (window.innerHeight ||
                        document.documentElement.clientHeight) &&
                    window.innerWidth > document.body.offsetWidth;
                jy(
                  '\nhtml body {\n  overflow-y: hidden;\n  '.concat(
                    r ? 'width: calc(100% - '.concat(e, 'px);') : '',
                    '\n}'
                  ),
                  n
                );
              } else Ty(n);
              return function () {
                Ty(n);
              };
            },
            [t, n]
          );
        }
        var Dy = !1;
        var zy = function (e) {
            return (
              !1 !== e &&
              (ry() && e
                ? 'string' == typeof e
                  ? document.querySelector(e)
                  : 'function' == typeof e
                  ? e()
                  : e
                : null)
            );
          },
          By = S.forwardRef(function (e, t) {
            var n = e.open,
              r = e.autoLock,
              i = e.getContainer,
              o = (e.debug, e.autoDestroy),
              a = void 0 === o || o,
              s = e.children,
              l = ny(S.useState(n), 2),
              u = l[0],
              c = l[1],
              f = u || n;
            S.useEffect(
              function () {
                (a || n) && c(n);
              },
              [n, a]
            );
            var h = ny(
                S.useState(function () {
                  return zy(i);
                }),
                2
              ),
              d = h[0],
              g = h[1];
            S.useEffect(function () {
              var e = zy(i);
              g(null != e ? e : null);
            });
            var p = (function (e, t) {
                var n = ny(
                    S.useState(function () {
                      return ry() ? document.createElement('div') : null;
                    }),
                    1
                  )[0],
                  r = S.useRef(!1),
                  i = S.useContext(gy),
                  o = ny(S.useState(by), 2),
                  a = o[0],
                  s = o[1],
                  l =
                    i ||
                    (r.current
                      ? void 0
                      : function (e) {
                          s(function (t) {
                            return [e].concat(py(t));
                          });
                        });
                function u() {
                  n.parentElement || document.body.appendChild(n),
                    (r.current = !0);
                }
                function c() {
                  var e;
                  null === (e = n.parentElement) ||
                    void 0 === e ||
                    e.removeChild(n),
                    (r.current = !1);
                }
                return (
                  yy(
                    function () {
                      return e ? (i ? i(u) : u()) : c(), c;
                    },
                    [e]
                  ),
                  yy(
                    function () {
                      a.length &&
                        (a.forEach(function (e) {
                          return e();
                        }),
                        s(by));
                    },
                    [a]
                  ),
                  [n, l]
                );
              })(f && !d),
              v = ny(p, 2),
              y = v[0],
              m = v[1],
              b = null != d ? d : y;
            Iy(r && n && ry() && (b === y || b === document.body));
            var k = null;
            s && dy(s) && t && (k = s.ref);
            var w = hy(k, t);
            if (!f || !ry() || void 0 === d) return null;
            var x,
              C = !1 === b || ('boolean' == typeof x && (Dy = x), Dy),
              E = s;
            return (
              t && (E = S.cloneElement(s, { ref: w })),
              S.createElement(
                gy.Provider,
                { value: m },
                C ? E : (0, Dv.createPortal)(E, b)
              )
            );
          });
        var Vy = By;
        function Fy(e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            n = [];
          return (
            S.Children.forEach(e, function (e) {
              (null != e || t.keepEmpty) &&
                (Array.isArray(e)
                  ? (n = n.concat(Fy(e)))
                  : (0, ly.isFragment)(e) && e.props
                  ? (n = n.concat(Fy(e.props.children, t)))
                  : n.push(e));
            }),
            n
          );
        }
        function Uy(e) {
          return e instanceof HTMLElement || e instanceof SVGElement;
        }
        function Hy(e) {
          return Uy(e)
            ? e
            : e instanceof S.Component
            ? Dv.findDOMNode(e)
            : null;
        }
        var Gy = (function () {
            if ('undefined' != typeof Map) return Map;
            function e(e, t) {
              var n = -1;
              return (
                e.some(function (e, r) {
                  return e[0] === t && ((n = r), !0);
                }),
                n
              );
            }
            return (function () {
              function t() {
                this.__entries__ = [];
              }
              return (
                Object.defineProperty(t.prototype, 'size', {
                  get: function () {
                    return this.__entries__.length;
                  },
                  enumerable: !0,
                  configurable: !0,
                }),
                (t.prototype.get = function (t) {
                  var n = e(this.__entries__, t),
                    r = this.__entries__[n];
                  return r && r[1];
                }),
                (t.prototype.set = function (t, n) {
                  var r = e(this.__entries__, t);
                  ~r
                    ? (this.__entries__[r][1] = n)
                    : this.__entries__.push([t, n]);
                }),
                (t.prototype.delete = function (t) {
                  var n = this.__entries__,
                    r = e(n, t);
                  ~r && n.splice(r, 1);
                }),
                (t.prototype.has = function (t) {
                  return !!~e(this.__entries__, t);
                }),
                (t.prototype.clear = function () {
                  this.__entries__.splice(0);
                }),
                (t.prototype.forEach = function (e, t) {
                  void 0 === t && (t = null);
                  for (var n = 0, r = this.__entries__; n < r.length; n++) {
                    var i = r[n];
                    e.call(t, i[1], i[0]);
                  }
                }),
                t
              );
            })();
          })(),
          Wy =
            'undefined' != typeof window &&
            'undefined' != typeof document &&
            window.document === document,
          qy =
            void 0 !== i.g && i.g.Math === Math
              ? i.g
              : 'undefined' != typeof self && self.Math === Math
              ? self
              : 'undefined' != typeof window && window.Math === Math
              ? window
              : Function('return this')(),
          Xy =
            'function' == typeof requestAnimationFrame
              ? requestAnimationFrame.bind(qy)
              : function (e) {
                  return setTimeout(function () {
                    return e(Date.now());
                  }, 1e3 / 60);
                };
        var Yy = [
            'top',
            'right',
            'bottom',
            'left',
            'width',
            'height',
            'size',
            'weight',
          ],
          Jy = 'undefined' != typeof MutationObserver,
          $y = (function () {
            function e() {
              (this.connected_ = !1),
                (this.mutationEventsAdded_ = !1),
                (this.mutationsObserver_ = null),
                (this.observers_ = []),
                (this.onTransitionEnd_ = this.onTransitionEnd_.bind(this)),
                (this.refresh = (function (e, t) {
                  var n = !1,
                    r = !1,
                    i = 0;
                  function o() {
                    n && ((n = !1), e()), r && s();
                  }
                  function a() {
                    Xy(o);
                  }
                  function s() {
                    var e = Date.now();
                    if (n) {
                      if (e - i < 2) return;
                      r = !0;
                    } else (n = !0), (r = !1), setTimeout(a, t);
                    i = e;
                  }
                  return s;
                })(this.refresh.bind(this), 20));
            }
            return (
              (e.prototype.addObserver = function (e) {
                ~this.observers_.indexOf(e) || this.observers_.push(e),
                  this.connected_ || this.connect_();
              }),
              (e.prototype.removeObserver = function (e) {
                var t = this.observers_,
                  n = t.indexOf(e);
                ~n && t.splice(n, 1),
                  !t.length && this.connected_ && this.disconnect_();
              }),
              (e.prototype.refresh = function () {
                this.updateObservers_() && this.refresh();
              }),
              (e.prototype.updateObservers_ = function () {
                var e = this.observers_.filter(function (e) {
                  return e.gatherActive(), e.hasActive();
                });
                return (
                  e.forEach(function (e) {
                    return e.broadcastActive();
                  }),
                  e.length > 0
                );
              }),
              (e.prototype.connect_ = function () {
                Wy &&
                  !this.connected_ &&
                  (document.addEventListener(
                    'transitionend',
                    this.onTransitionEnd_
                  ),
                  window.addEventListener('resize', this.refresh),
                  Jy
                    ? ((this.mutationsObserver_ = new MutationObserver(
                        this.refresh
                      )),
                      this.mutationsObserver_.observe(document, {
                        attributes: !0,
                        childList: !0,
                        characterData: !0,
                        subtree: !0,
                      }))
                    : (document.addEventListener(
                        'DOMSubtreeModified',
                        this.refresh
                      ),
                      (this.mutationEventsAdded_ = !0)),
                  (this.connected_ = !0));
              }),
              (e.prototype.disconnect_ = function () {
                Wy &&
                  this.connected_ &&
                  (document.removeEventListener(
                    'transitionend',
                    this.onTransitionEnd_
                  ),
                  window.removeEventListener('resize', this.refresh),
                  this.mutationsObserver_ &&
                    this.mutationsObserver_.disconnect(),
                  this.mutationEventsAdded_ &&
                    document.removeEventListener(
                      'DOMSubtreeModified',
                      this.refresh
                    ),
                  (this.mutationsObserver_ = null),
                  (this.mutationEventsAdded_ = !1),
                  (this.connected_ = !1));
              }),
              (e.prototype.onTransitionEnd_ = function (e) {
                var t = e.propertyName,
                  n = void 0 === t ? '' : t;
                Yy.some(function (e) {
                  return !!~n.indexOf(e);
                }) && this.refresh();
              }),
              (e.getInstance = function () {
                return (
                  this.instance_ || (this.instance_ = new e()), this.instance_
                );
              }),
              (e.instance_ = null),
              e
            );
          })(),
          Qy = function (e, t) {
            for (var n = 0, r = Object.keys(t); n < r.length; n++) {
              var i = r[n];
              Object.defineProperty(e, i, {
                value: t[i],
                enumerable: !1,
                writable: !1,
                configurable: !0,
              });
            }
            return e;
          },
          Ky = function (e) {
            return (e && e.ownerDocument && e.ownerDocument.defaultView) || qy;
          },
          Zy = om(0, 0, 0, 0);
        function em(e) {
          return parseFloat(e) || 0;
        }
        function tm(e) {
          for (var t = [], n = 1; n < arguments.length; n++)
            t[n - 1] = arguments[n];
          return t.reduce(function (t, n) {
            return t + em(e['border-' + n + '-width']);
          }, 0);
        }
        function nm(e) {
          var t = e.clientWidth,
            n = e.clientHeight;
          if (!t && !n) return Zy;
          var r = Ky(e).getComputedStyle(e),
            i = (function (e) {
              for (
                var t = {}, n = 0, r = ['top', 'right', 'bottom', 'left'];
                n < r.length;
                n++
              ) {
                var i = r[n],
                  o = e['padding-' + i];
                t[i] = em(o);
              }
              return t;
            })(r),
            o = i.left + i.right,
            a = i.top + i.bottom,
            s = em(r.width),
            l = em(r.height);
          if (
            ('border-box' === r.boxSizing &&
              (Math.round(s + o) !== t && (s -= tm(r, 'left', 'right') + o),
              Math.round(l + a) !== n && (l -= tm(r, 'top', 'bottom') + a)),
            !(function (e) {
              return e === Ky(e).document.documentElement;
            })(e))
          ) {
            var u = Math.round(s + o) - t,
              c = Math.round(l + a) - n;
            1 !== Math.abs(u) && (s -= u), 1 !== Math.abs(c) && (l -= c);
          }
          return om(i.left, i.top, s, l);
        }
        var rm =
          'undefined' != typeof SVGGraphicsElement
            ? function (e) {
                return e instanceof Ky(e).SVGGraphicsElement;
              }
            : function (e) {
                return (
                  e instanceof Ky(e).SVGElement &&
                  'function' == typeof e.getBBox
                );
              };
        function im(e) {
          return Wy
            ? rm(e)
              ? (function (e) {
                  var t = e.getBBox();
                  return om(0, 0, t.width, t.height);
                })(e)
              : nm(e)
            : Zy;
        }
        function om(e, t, n, r) {
          return { x: e, y: t, width: n, height: r };
        }
        var am = (function () {
            function e(e) {
              (this.broadcastWidth = 0),
                (this.broadcastHeight = 0),
                (this.contentRect_ = om(0, 0, 0, 0)),
                (this.target = e);
            }
            return (
              (e.prototype.isActive = function () {
                var e = im(this.target);
                return (
                  (this.contentRect_ = e),
                  e.width !== this.broadcastWidth ||
                    e.height !== this.broadcastHeight
                );
              }),
              (e.prototype.broadcastRect = function () {
                var e = this.contentRect_;
                return (
                  (this.broadcastWidth = e.width),
                  (this.broadcastHeight = e.height),
                  e
                );
              }),
              e
            );
          })(),
          sm = function (e, t) {
            var n = (function (e) {
              var t = e.x,
                n = e.y,
                r = e.width,
                i = e.height,
                o =
                  'undefined' != typeof DOMRectReadOnly
                    ? DOMRectReadOnly
                    : Object,
                a = Object.create(o.prototype);
              return (
                Qy(a, {
                  x: t,
                  y: n,
                  width: r,
                  height: i,
                  top: n,
                  right: t + r,
                  bottom: i + n,
                  left: t,
                }),
                a
              );
            })(t);
            Qy(this, { target: e, contentRect: n });
          },
          lm = (function () {
            function e(e, t, n) {
              if (
                ((this.activeObservations_ = []),
                (this.observations_ = new Gy()),
                'function' != typeof e)
              )
                throw new TypeError(
                  'The callback provided as parameter 1 is not a function.'
                );
              (this.callback_ = e),
                (this.controller_ = t),
                (this.callbackCtx_ = n);
            }
            return (
              (e.prototype.observe = function (e) {
                if (!arguments.length)
                  throw new TypeError(
                    '1 argument required, but only 0 present.'
                  );
                if (
                  'undefined' != typeof Element &&
                  Element instanceof Object
                ) {
                  if (!(e instanceof Ky(e).Element))
                    throw new TypeError(
                      'parameter 1 is not of type "Element".'
                    );
                  var t = this.observations_;
                  t.has(e) ||
                    (t.set(e, new am(e)),
                    this.controller_.addObserver(this),
                    this.controller_.refresh());
                }
              }),
              (e.prototype.unobserve = function (e) {
                if (!arguments.length)
                  throw new TypeError(
                    '1 argument required, but only 0 present.'
                  );
                if (
                  'undefined' != typeof Element &&
                  Element instanceof Object
                ) {
                  if (!(e instanceof Ky(e).Element))
                    throw new TypeError(
                      'parameter 1 is not of type "Element".'
                    );
                  var t = this.observations_;
                  t.has(e) &&
                    (t.delete(e),
                    t.size || this.controller_.removeObserver(this));
                }
              }),
              (e.prototype.disconnect = function () {
                this.clearActive(),
                  this.observations_.clear(),
                  this.controller_.removeObserver(this);
              }),
              (e.prototype.gatherActive = function () {
                var e = this;
                this.clearActive(),
                  this.observations_.forEach(function (t) {
                    t.isActive() && e.activeObservations_.push(t);
                  });
              }),
              (e.prototype.broadcastActive = function () {
                if (this.hasActive()) {
                  var e = this.callbackCtx_,
                    t = this.activeObservations_.map(function (e) {
                      return new sm(e.target, e.broadcastRect());
                    });
                  this.callback_.call(e, t, e), this.clearActive();
                }
              }),
              (e.prototype.clearActive = function () {
                this.activeObservations_.splice(0);
              }),
              (e.prototype.hasActive = function () {
                return this.activeObservations_.length > 0;
              }),
              e
            );
          })(),
          um = 'undefined' != typeof WeakMap ? new WeakMap() : new Gy(),
          cm = function e(t) {
            if (!(this instanceof e))
              throw new TypeError('Cannot call a class as a function.');
            if (!arguments.length)
              throw new TypeError('1 argument required, but only 0 present.');
            var n = $y.getInstance(),
              r = new lm(t, n, this);
            um.set(this, r);
          };
        ['observe', 'unobserve', 'disconnect'].forEach(function (e) {
          cm.prototype[e] = function () {
            var t;
            return (t = um.get(this))[e].apply(t, arguments);
          };
        });
        var fm = void 0 !== qy.ResizeObserver ? qy.ResizeObserver : cm,
          hm = new Map();
        var dm = new fm(function (e) {
          e.forEach(function (e) {
            var t,
              n = e.target;
            null === (t = hm.get(n)) ||
              void 0 === t ||
              t.forEach(function (e) {
                return e(n);
              });
          });
        });
        function gm(e, t) {
          if (!(e instanceof t))
            throw new TypeError('Cannot call a class as a function');
        }
        function pm(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              'value' in r && (r.writable = !0),
              Object.defineProperty(e, Jv(r.key), r);
          }
        }
        function vm(e, t, n) {
          return (
            t && pm(e.prototype, t),
            n && pm(e, n),
            Object.defineProperty(e, 'prototype', { writable: !1 }),
            e
          );
        }
        function ym(e, t) {
          return (
            (ym = Object.setPrototypeOf
              ? Object.setPrototypeOf.bind()
              : function (e, t) {
                  return (e.__proto__ = t), e;
                }),
            ym(e, t)
          );
        }
        function mm(e, t) {
          if ('function' != typeof t && null !== t)
            throw new TypeError(
              'Super expression must either be null or a function'
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: { value: e, writable: !0, configurable: !0 },
          })),
            Object.defineProperty(e, 'prototype', { writable: !1 }),
            t && ym(e, t);
        }
        function bm(e) {
          return (
            (bm = Object.setPrototypeOf
              ? Object.getPrototypeOf.bind()
              : function (e) {
                  return e.__proto__ || Object.getPrototypeOf(e);
                }),
            bm(e)
          );
        }
        function km(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return e;
        }
        function wm(e, t) {
          if (t && ('object' === Yv(t) || 'function' == typeof t)) return t;
          if (void 0 !== t)
            throw new TypeError(
              'Derived constructors may only return object or undefined'
            );
          return km(e);
        }
        function xm(e) {
          var t = (function () {
            if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ('function' == typeof Proxy) return !0;
            try {
              return (
                Boolean.prototype.valueOf.call(
                  Reflect.construct(Boolean, [], function () {})
                ),
                !0
              );
            } catch (e) {
              return !1;
            }
          })();
          return function () {
            var n,
              r = bm(e);
            if (t) {
              var i = bm(this).constructor;
              n = Reflect.construct(r, arguments, i);
            } else n = r.apply(this, arguments);
            return wm(this, n);
          };
        }
        var Cm = (function (e) {
            mm(n, e);
            var t = xm(n);
            function n() {
              return gm(this, n), t.apply(this, arguments);
            }
            return (
              vm(n, [
                {
                  key: 'render',
                  value: function () {
                    return this.props.children;
                  },
                },
              ]),
              n
            );
          })(S.Component),
          Sm = S.createContext(null);
        function Em(e, t) {
          var n = e.children,
            r = e.disabled,
            i = S.useRef(null),
            o = S.useRef(null),
            a = S.useContext(Sm),
            s = 'function' == typeof n,
            l = s ? n(i) : n,
            u = S.useRef({
              width: -1,
              height: -1,
              offsetWidth: -1,
              offsetHeight: -1,
            }),
            c = !s && S.isValidElement(l) && dy(l),
            f = c ? l.ref : null,
            h = S.useMemo(
              function () {
                return fy(f, i);
              },
              [f, i]
            ),
            d = function () {
              return Hy(i.current) || Hy(o.current);
            };
          S.useImperativeHandle(t, function () {
            return d();
          });
          var g = S.useRef(e);
          g.current = e;
          var p = S.useCallback(function (e) {
            var t = g.current,
              n = t.onResize,
              r = t.data,
              i = e.getBoundingClientRect(),
              o = i.width,
              s = i.height,
              l = e.offsetWidth,
              c = e.offsetHeight,
              f = Math.floor(o),
              h = Math.floor(s);
            if (
              u.current.width !== f ||
              u.current.height !== h ||
              u.current.offsetWidth !== l ||
              u.current.offsetHeight !== c
            ) {
              var d = { width: f, height: h, offsetWidth: l, offsetHeight: c };
              u.current = d;
              var p = l === Math.round(o) ? o : l,
                v = c === Math.round(s) ? s : c,
                y = Kv(Kv({}, d), {}, { offsetWidth: p, offsetHeight: v });
              null == a || a(y, e, r),
                n &&
                  Promise.resolve().then(function () {
                    n(y, e);
                  });
            }
          }, []);
          return (
            S.useEffect(
              function () {
                var e,
                  t,
                  n = d();
                return (
                  n &&
                    !r &&
                    ((e = n),
                    (t = p),
                    hm.has(e) || (hm.set(e, new Set()), dm.observe(e)),
                    hm.get(e).add(t)),
                  function () {
                    return (function (e, t) {
                      hm.has(e) &&
                        (hm.get(e).delete(t),
                        hm.get(e).size || (dm.unobserve(e), hm.delete(e)));
                    })(n, p);
                  }
                );
              },
              [i.current, r]
            ),
            S.createElement(
              Cm,
              { ref: o },
              c ? S.cloneElement(l, { ref: h }) : l
            )
          );
        }
        var Om = S.forwardRef(Em);
        function Pm(e, t) {
          var n = e.children;
          return ('function' == typeof n ? [n] : Fy(n)).map(function (n, r) {
            var i =
              (null == n ? void 0 : n.key) ||
              ''.concat('rc-observer-key', '-').concat(r);
            return S.createElement(
              Om,
              Xv({}, e, { key: i, ref: 0 === r ? t : void 0 }),
              n
            );
          });
        }
        var Am = S.forwardRef(Pm);
        Am.Collection = function (e) {
          var t = e.children,
            n = e.onBatchResize,
            r = S.useRef(0),
            i = S.useRef([]),
            o = S.useContext(Sm),
            a = S.useCallback(
              function (e, t, a) {
                r.current += 1;
                var s = r.current;
                i.current.push({ size: e, element: t, data: a }),
                  Promise.resolve().then(function () {
                    s === r.current &&
                      (null == n || n(i.current), (i.current = []));
                  }),
                  null == o || o(e, t, a);
              },
              [n, o]
            );
          return S.createElement(Sm.Provider, { value: a }, t);
        };
        var Mm = Am;
        function Tm(e) {
          var t = S.useRef();
          t.current = e;
          var n = S.useCallback(function () {
            for (
              var e, n = arguments.length, r = new Array(n), i = 0;
              i < n;
              i++
            )
              r[i] = arguments[i];
            return null === (e = t.current) || void 0 === e
              ? void 0
              : e.call.apply(e, [t].concat(r));
          }, []);
          return n;
        }
        var Nm = 0;
        function jm(e) {
          var t = ny(S.useState('ssr-id'), 2),
            n = t[0],
            r = t[1],
            i = Kv({}, E).useId,
            o = null == i ? void 0 : i();
          return (
            S.useEffect(function () {
              if (!i) {
                var e = Nm;
                (Nm += 1), r('rc_unique_'.concat(e));
              }
            }, []),
            e || o || n
          );
        }
        var Lm = function () {
            if ('undefined' == typeof navigator || 'undefined' == typeof window)
              return !1;
            var e = navigator.userAgent || navigator.vendor || window.opera;
            return (
              /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(
                e
              ) ||
              /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(
                null == e ? void 0 : e.substr(0, 4)
              )
            );
          },
          Rm = S.createContext(null);
        function _m(e) {
          return e ? (Array.isArray(e) ? e : [e]) : [];
        }
        function Im(e, t, n, r) {
          return S.useMemo(
            function () {
              var i = _m(null != n ? n : t),
                o = _m(null != r ? r : t),
                a = new Set(i),
                s = new Set(o);
              return (
                e &&
                  (a.has('hover') && (a.delete('hover'), a.add('click')),
                  s.has('hover') && (s.delete('hover'), s.add('click'))),
                [a, s]
              );
            },
            [e, t, n, r]
          );
        }
        var Dm = function (e) {
          if (!e) return !1;
          if (e instanceof Element) {
            if (e.offsetParent) return !0;
            if (e.getBBox) {
              var t = e.getBBox(),
                n = t.width,
                r = t.height;
              if (n || r) return !0;
            }
            if (e.getBoundingClientRect) {
              var i = e.getBoundingClientRect(),
                o = i.width,
                a = i.height;
              if (o || a) return !0;
            }
          }
          return !1;
        };
        function zm() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : [],
            t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [],
            n = arguments.length > 2 ? arguments[2] : void 0;
          return n ? e[0] === t[0] : e[0] === t[0] && e[1] === t[1];
        }
        function Bm(e, t, n, r) {
          for (
            var i = n.points, o = Object.keys(e), a = 0;
            a < o.length;
            a += 1
          ) {
            var s,
              l = o[a];
            if (
              zm(null === (s = e[l]) || void 0 === s ? void 0 : s.points, i, r)
            )
              return ''.concat(t, '-placement-').concat(l);
          }
          return '';
        }
        function Vm(e, t, n, r) {
          return (
            t ||
            (n
              ? { motionName: ''.concat(e, '-').concat(n) }
              : r
              ? { motionName: r }
              : null)
          );
        }
        function Fm(e) {
          return e.ownerDocument.defaultView;
        }
        function Um(e) {
          for (
            var t = [],
              n = null == e ? void 0 : e.parentElement,
              r = ['hidden', 'scroll', 'auto'];
            n;

          ) {
            var i = Fm(n).getComputedStyle(n),
              o = i.overflowX,
              a = i.overflowY;
            (r.includes(o) || r.includes(a)) && t.push(n),
              (n = n.parentElement);
          }
          return t;
        }
        function Hm(e) {
          return Number.isNaN(e) ? 1 : e;
        }
        function Gm() {
          var e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : '';
          return [e[0], e[1]];
        }
        function Wm(e, t) {
          var n,
            r = t[0],
            i = t[1];
          return (
            (n =
              't' === r
                ? e.y
                : 'b' === r
                ? e.y + e.height
                : e.y + e.height / 2),
            {
              x:
                'l' === i ? e.x : 'r' === i ? e.x + e.width : e.x + e.width / 2,
              y: n,
            }
          );
        }
        function qm(e, t) {
          var n = { t: 'b', b: 't', l: 'r', r: 'l' };
          return e
            .map(function (e, r) {
              return r === t ? n[e] || 'c' : e;
            })
            .join('');
        }
        function Xm(e, t, n, r, i, o, a) {
          var s = ny(
              S.useState({
                ready: !1,
                offsetX: 0,
                offsetY: 0,
                arrowX: 0,
                arrowY: 0,
                scaleX: 1,
                scaleY: 1,
                align: i[r] || {},
              }),
              2
            ),
            l = s[0],
            u = s[1],
            c = S.useRef(0),
            f = S.useMemo(
              function () {
                return t ? Um(t) : [];
              },
              [t]
            ),
            h = S.useRef({});
          e || (h.current = {});
          var d = Tm(function () {
              if (t && n && e) {
                var s,
                  l = t,
                  c = l.style.left,
                  d = l.style.top,
                  g = l.ownerDocument,
                  p = Fm(l),
                  v = Kv(Kv({}, i[r]), o);
                if (
                  ((l.style.left = '0'), (l.style.top = '0'), Array.isArray(n))
                )
                  s = { x: n[0], y: n[1], width: 0, height: 0 };
                else {
                  var y = n.getBoundingClientRect();
                  s = { x: y.x, y: y.y, width: y.width, height: y.height };
                }
                var m = l.getBoundingClientRect(),
                  b = p.getComputedStyle(l),
                  k = b.width,
                  w = b.height,
                  x = g.documentElement,
                  C = x.clientWidth,
                  S = x.clientHeight,
                  E = x.scrollWidth,
                  O = x.scrollHeight,
                  P = x.scrollTop,
                  A = x.scrollLeft,
                  M = m.height,
                  T = m.width,
                  N = s.height,
                  j = s.width,
                  L =
                    'scroll' === v.htmlRegion
                      ? { left: -A, top: -P, right: E - A, bottom: O - P }
                      : { left: 0, top: 0, right: C, bottom: S };
                (L = (function (e, t) {
                  var n = Kv({}, e);
                  return (
                    (t || []).forEach(function (e) {
                      if (
                        !(e instanceof HTMLBodyElement) &&
                        'static' !== Fm(e).getComputedStyle(e).position
                      ) {
                        var t = e.getBoundingClientRect(),
                          r = e.offsetHeight,
                          i = e.clientHeight,
                          o = e.offsetWidth,
                          a =
                            (o - e.clientWidth) *
                            Hm(Math.round((t.width / o) * 1e3) / 1e3),
                          s =
                            (r - i) *
                            Hm(Math.round((t.height / r) * 1e3) / 1e3),
                          l = t.x + t.width - a,
                          u = t.y + t.height - s;
                        (n.left = Math.max(n.left, t.x)),
                          (n.top = Math.max(n.top, t.y)),
                          (n.right = Math.min(n.right, l)),
                          (n.bottom = Math.min(n.bottom, u));
                      }
                    }),
                    n
                  );
                })(L, f)),
                  (l.style.left = c),
                  (l.style.top = d);
                var R = Hm(Math.round((T / parseFloat(k)) * 1e3) / 1e3),
                  _ = Hm(Math.round((M / parseFloat(w)) * 1e3) / 1e3);
                if (0 === R || 0 === _ || (Uy(n) && !Dm(n))) return;
                var I = v.offset,
                  D = v.targetOffset,
                  z = ny(I || [], 2),
                  B = z[0],
                  V = void 0 === B ? 0 : B,
                  F = z[1],
                  U = void 0 === F ? 0 : F,
                  H = ny(D || [], 2),
                  G = H[0],
                  W = void 0 === G ? 0 : G,
                  q = H[1],
                  X = void 0 === q ? 0 : q;
                (s.x += W), (s.y += X);
                var Y = ny(v.points || [], 2),
                  J = Y[0],
                  $ = Gm(Y[1]),
                  Q = Gm(J),
                  K = Wm(s, $),
                  Z = Wm(m, Q),
                  ee = Kv({}, v),
                  te = K.x - Z.x + V,
                  ne = K.y - Z.y + U;
                function ze(e, t) {
                  var n = m.x + e,
                    r = m.y + t,
                    i = n + T,
                    o = r + M,
                    a = Math.max(n, L.left),
                    s = Math.max(r, L.top),
                    l = Math.min(i, L.right),
                    u = Math.min(o, L.bottom);
                  return Math.max(0, (l - a) * (u - s));
                }
                var re,
                  ie,
                  oe,
                  ae,
                  se = ze(te, ne),
                  le = Wm(s, ['t', 'l']),
                  ue = Wm(m, ['t', 'l']),
                  ce = Wm(s, ['b', 'r']),
                  fe = Wm(m, ['b', 'r']),
                  he = v.overflow || {},
                  de = he.adjustX,
                  ge = he.adjustY,
                  pe = he.shiftX,
                  ve = he.shiftY,
                  ye = function (e) {
                    return 'boolean' == typeof e ? e : e >= 0;
                  };
                function Be() {
                  (re = m.y + ne),
                    (ie = re + M),
                    (oe = m.x + te),
                    (ae = oe + T);
                }
                Be();
                var me = ye(ge),
                  be = Q[0] === $[0];
                if (me && 't' === Q[0] && (ie > L.bottom || h.current.bt)) {
                  var ke = ne;
                  be ? (ke -= M - N) : (ke = le.y - fe.y - U),
                    ze(te, ke) >= se
                      ? ((h.current.bt = !0),
                        (ne = ke),
                        (ee.points = [qm(Q, 0), qm($, 0)]))
                      : (h.current.bt = !1);
                }
                if (me && 'b' === Q[0] && (re < L.top || h.current.tb)) {
                  var we = ne;
                  be ? (we += M - N) : (we = ce.y - ue.y - U),
                    ze(te, we) >= se
                      ? ((h.current.tb = !0),
                        (ne = we),
                        (ee.points = [qm(Q, 0), qm($, 0)]))
                      : (h.current.tb = !1);
                }
                var xe = ye(de),
                  Ce = Q[1] === $[1];
                if (xe && 'l' === Q[1] && (ae > L.right || h.current.rl)) {
                  var Se = te;
                  Ce ? (Se -= T - j) : (Se = le.x - fe.x - V),
                    ze(Se, ne) >= se
                      ? ((h.current.rl = !0),
                        (te = Se),
                        (ee.points = [qm(Q, 1), qm($, 1)]))
                      : (h.current.rl = !1);
                }
                if (xe && 'r' === Q[1] && (oe < L.left || h.current.lr)) {
                  var Ee = te;
                  Ce ? (Ee += T - j) : (Ee = ce.x - ue.x - V),
                    ze(Ee, ne) >= se
                      ? ((h.current.lr = !0),
                        (te = Ee),
                        (ee.points = [qm(Q, 1), qm($, 1)]))
                      : (h.current.lr = !1);
                }
                Be();
                var Oe = !0 === pe ? 0 : pe;
                'number' == typeof Oe &&
                  (oe < L.left &&
                    ((te -= oe - L.left),
                    s.x + j < L.left + Oe && (te += s.x - L.left + j - Oe)),
                  ae > L.right &&
                    ((te -= ae - L.right),
                    s.x > L.right - Oe && (te += s.x - L.right + Oe)));
                var Pe = !0 === ve ? 0 : ve;
                'number' == typeof Pe &&
                  (re < L.top &&
                    ((ne -= re - L.top),
                    s.y + N < L.top + Pe && (ne += s.y - L.top + N - Pe)),
                  ie > L.bottom &&
                    ((ne -= ie - L.bottom),
                    s.y > L.bottom - Pe && (ne += s.y - L.bottom + Pe)));
                var Ae = m.x + te,
                  Me = Ae + T,
                  Te = m.y + ne,
                  Ne = Te + M,
                  je = s.x,
                  Le = je + j,
                  Re = s.y,
                  _e = Re + N,
                  Ie = (Math.max(Ae, je) + Math.min(Me, Le)) / 2 - Ae,
                  De = (Math.max(Te, Re) + Math.min(Ne, _e)) / 2 - Te;
                null == a || a(t, ee),
                  u({
                    ready: !0,
                    offsetX: te / R,
                    offsetY: ne / _,
                    arrowX: Ie / R,
                    arrowY: De / _,
                    scaleX: R,
                    scaleY: _,
                    align: ee,
                  });
              }
            }),
            g = function () {
              u(function (e) {
                return Kv(Kv({}, e), {}, { ready: !1 });
              });
            };
          return (
            yy(g, [r]),
            yy(
              function () {
                e || g();
              },
              [e]
            ),
            [
              l.ready,
              l.offsetX,
              l.offsetY,
              l.arrowX,
              l.arrowY,
              l.scaleX,
              l.scaleY,
              l.align,
              function () {
                c.current += 1;
                var e = c.current;
                Promise.resolve().then(function () {
                  c.current === e && d();
                });
              },
            ]
          );
        }
        function Ym(e, t, n, r) {
          yy(
            function () {
              if (e && t && n) {
                var i = n,
                  o = Um(t),
                  a = Um(i),
                  s = Fm(i),
                  l = new Set([s].concat(py(o), py(a)));
                function u() {
                  r();
                }
                return (
                  l.forEach(function (e) {
                    e.addEventListener('scroll', u, { passive: !0 });
                  }),
                  s.addEventListener('resize', u, { passive: !0 }),
                  r(),
                  function () {
                    l.forEach(function (e) {
                      e.removeEventListener('scroll', u),
                        s.removeEventListener('resize', u);
                    });
                  }
                );
              }
            },
            [e, t, n]
          );
        }
        function Jm(e, t) {
          var n = {};
          return (
            (n[e.toLowerCase()] = t.toLowerCase()),
            (n['Webkit'.concat(e)] = 'webkit'.concat(t)),
            (n['Moz'.concat(e)] = 'moz'.concat(t)),
            (n['ms'.concat(e)] = 'MS'.concat(t)),
            (n['O'.concat(e)] = 'o'.concat(t.toLowerCase())),
            n
          );
        }
        var $m = (function (e, t) {
            var n = {
              animationend: Jm('Animation', 'AnimationEnd'),
              transitionend: Jm('Transition', 'TransitionEnd'),
            };
            return (
              e &&
                ('AnimationEvent' in t || delete n.animationend.animation,
                'TransitionEvent' in t || delete n.transitionend.transition),
              n
            );
          })(ry(), 'undefined' != typeof window ? window : {}),
          Qm = {};
        if (ry()) {
          var Km = document.createElement('div');
          Qm = Km.style;
        }
        var Zm = {};
        function eb(e) {
          if (Zm[e]) return Zm[e];
          var t = $m[e];
          if (t)
            for (var n = Object.keys(t), r = n.length, i = 0; i < r; i += 1) {
              var o = n[i];
              if (Object.prototype.hasOwnProperty.call(t, o) && o in Qm)
                return (Zm[e] = t[o]), Zm[e];
            }
          return '';
        }
        var tb = eb('animationend'),
          nb = eb('transitionend'),
          rb = !(!tb || !nb),
          ib = tb || 'animationend',
          ob = nb || 'transitionend';
        function ab(e, t) {
          if (!e) return null;
          if ('object' === Yv(e)) {
            var n = t.replace(/-\w/g, function (e) {
              return e[1].toUpperCase();
            });
            return e[n];
          }
          return ''.concat(e, '-').concat(t);
        }
        var sb = 'none',
          lb = 'appear',
          ub = 'enter',
          cb = 'leave',
          fb = 'none',
          hb = 'prepare',
          db = 'start',
          gb = 'active',
          pb = 'end';
        function vb(e) {
          var t = S.useRef(!1),
            n = ny(S.useState(e), 2),
            r = n[0],
            i = n[1];
          return (
            S.useEffect(function () {
              return (
                (t.current = !1),
                function () {
                  t.current = !0;
                }
              );
            }, []),
            [
              r,
              function (e, n) {
                (n && t.current) || i(e);
              },
            ]
          );
        }
        var yb = function (e) {
            return +setTimeout(e, 16);
          },
          mb = function (e) {
            return clearTimeout(e);
          };
        'undefined' != typeof window &&
          'requestAnimationFrame' in window &&
          ((yb = function (e) {
            return window.requestAnimationFrame(e);
          }),
          (mb = function (e) {
            return window.cancelAnimationFrame(e);
          }));
        var bb = 0,
          kb = new Map();
        function wb(e) {
          kb.delete(e);
        }
        var xb = function (e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1,
            n = (bb += 1);
          function r(t) {
            if (0 === t) wb(n), e();
            else {
              var i = yb(function () {
                r(t - 1);
              });
              kb.set(n, i);
            }
          }
          return r(t), n;
        };
        xb.cancel = function (e) {
          var t = kb.get(e);
          return wb(t), mb(t);
        };
        var Cb = xb,
          Sb = ry() ? S.useLayoutEffect : S.useEffect,
          Eb = [hb, db, gb, pb];
        function Ob(e) {
          return e === gb || e === pb;
        }
        var Pb = function (e, t) {
          var n = ny(vb(fb), 2),
            r = n[0],
            i = n[1],
            o = (function () {
              var e = S.useRef(null);
              function t() {
                Cb.cancel(e.current);
              }
              return (
                S.useEffect(function () {
                  return function () {
                    t();
                  };
                }, []),
                [
                  function n(r) {
                    var i =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 2;
                    t();
                    var o = Cb(function () {
                      i <= 1
                        ? r({
                            isCanceled: function () {
                              return o !== e.current;
                            },
                          })
                        : n(r, i - 1);
                    });
                    e.current = o;
                  },
                  t,
                ]
              );
            })(),
            a = ny(o, 2),
            s = a[0],
            l = a[1];
          return (
            Sb(
              function () {
                if (r !== fb && r !== pb) {
                  var e = Eb.indexOf(r),
                    n = Eb[e + 1],
                    o = t(r);
                  false === o
                    ? i(n, !0)
                    : s(function (e) {
                        function t() {
                          e.isCanceled() || i(n, !0);
                        }
                        !0 === o ? t() : Promise.resolve(o).then(t);
                      });
                }
              },
              [e, r]
            ),
            S.useEffect(function () {
              return function () {
                l();
              };
            }, []),
            [
              function () {
                i(hb, !0);
              },
              r,
            ]
          );
        };
        function Ab(e, t, n, r) {
          var i = r.motionEnter,
            o = void 0 === i || i,
            a = r.motionAppear,
            s = void 0 === a || a,
            l = r.motionLeave,
            u = void 0 === l || l,
            c = r.motionDeadline,
            f = r.motionLeaveImmediately,
            h = r.onAppearPrepare,
            d = r.onEnterPrepare,
            g = r.onLeavePrepare,
            p = r.onAppearStart,
            v = r.onEnterStart,
            y = r.onLeaveStart,
            m = r.onAppearActive,
            b = r.onEnterActive,
            k = r.onLeaveActive,
            w = r.onAppearEnd,
            x = r.onEnterEnd,
            C = r.onLeaveEnd,
            E = r.onVisibleChanged,
            O = ny(vb(), 2),
            P = O[0],
            A = O[1],
            M = ny(vb(sb), 2),
            T = M[0],
            N = M[1],
            j = ny(vb(null), 2),
            L = j[0],
            R = j[1],
            _ = (0, S.useRef)(!1),
            I = (0, S.useRef)(null);
          function D() {
            return n();
          }
          var z = (0, S.useRef)(!1);
          function B(e) {
            var t = D();
            if (!e || e.deadline || e.target === t) {
              var n,
                r = z.current;
              T === lb && r
                ? (n = null == w ? void 0 : w(t, e))
                : T === ub && r
                ? (n = null == x ? void 0 : x(t, e))
                : T === cb && r && (n = null == C ? void 0 : C(t, e)),
                T !== sb && r && !1 !== n && (N(sb, !0), R(null, !0));
            }
          }
          var V = (function (e) {
              var t = (0, S.useRef)(),
                n = (0, S.useRef)(e);
              n.current = e;
              var r = S.useCallback(function (e) {
                n.current(e);
              }, []);
              function i(e) {
                e &&
                  (e.removeEventListener(ob, r), e.removeEventListener(ib, r));
              }
              return (
                S.useEffect(function () {
                  return function () {
                    i(t.current);
                  };
                }, []),
                [
                  function (e) {
                    t.current && t.current !== e && i(t.current),
                      e &&
                        e !== t.current &&
                        (e.addEventListener(ob, r),
                        e.addEventListener(ib, r),
                        (t.current = e));
                  },
                  i,
                ]
              );
            })(B),
            F = ny(V, 1)[0],
            U = S.useMemo(
              function () {
                var e, t, n;
                switch (T) {
                  case lb:
                    return $v((e = {}), hb, h), $v(e, db, p), $v(e, gb, m), e;
                  case ub:
                    return $v((t = {}), hb, d), $v(t, db, v), $v(t, gb, b), t;
                  case cb:
                    return $v((n = {}), hb, g), $v(n, db, y), $v(n, gb, k), n;
                  default:
                    return {};
                }
              },
              [T]
            ),
            H = ny(
              Pb(T, function (e) {
                if (e === hb) {
                  var t = U[hb];
                  return !!t && t(D());
                }
                var n;
                W in U &&
                  R(
                    (null === (n = U[W]) || void 0 === n
                      ? void 0
                      : n.call(U, D(), null)) || null
                  );
                return (
                  W === gb &&
                    (F(D()),
                    c > 0 &&
                      (clearTimeout(I.current),
                      (I.current = setTimeout(function () {
                        B({ deadline: !0 });
                      }, c)))),
                  true
                );
              }),
              2
            ),
            G = H[0],
            W = H[1],
            q = Ob(W);
          (z.current = q),
            Sb(
              function () {
                A(t);
                var n,
                  r = _.current;
                ((_.current = !0), e) &&
                  (!r && t && s && (n = lb),
                  r && t && o && (n = ub),
                  ((r && !t && u) || (!r && f && !t && u)) && (n = cb),
                  n && (N(n), G()));
              },
              [t]
            ),
            (0, S.useEffect)(
              function () {
                ((T === lb && !s) || (T === ub && !o) || (T === cb && !u)) &&
                  N(sb);
              },
              [s, o, u]
            ),
            (0, S.useEffect)(function () {
              return function () {
                (_.current = !1), clearTimeout(I.current);
              };
            }, []);
          var X = S.useRef(!1);
          (0, S.useEffect)(
            function () {
              P && (X.current = !0),
                void 0 !== P &&
                  T === sb &&
                  ((X.current || P) && (null == E || E(P)), (X.current = !0));
            },
            [P, T]
          );
          var Y = L;
          return (
            U[hb] && W === db && (Y = Kv({ transition: 'none' }, Y)),
            [T, W, Y, null != P ? P : t]
          );
        }
        var Mb = (function (e) {
            mm(n, e);
            var t = xm(n);
            function n() {
              return gm(this, n), t.apply(this, arguments);
            }
            return (
              vm(n, [
                {
                  key: 'render',
                  value: function () {
                    return this.props.children;
                  },
                },
              ]),
              n
            );
          })(S.Component),
          Tb = Mb;
        var Nb = (function (e) {
            var t = e;
            function n(e) {
              return !(!e.motionName || !t);
            }
            'object' === Yv(e) && (t = e.transitionSupport);
            var r = S.forwardRef(function (e, t) {
              var r = e.visible,
                i = void 0 === r || r,
                o = e.removeOnLeave,
                a = void 0 === o || o,
                s = e.forceRender,
                l = e.children,
                u = e.motionName,
                c = e.leavedClassName,
                f = e.eventProps,
                h = n(e),
                d = (0, S.useRef)(),
                g = (0, S.useRef)();
              var p = ny(
                  Ab(
                    h,
                    i,
                    function () {
                      try {
                        return d.current instanceof HTMLElement
                          ? d.current
                          : Hy(g.current);
                      } catch (e) {
                        return null;
                      }
                    },
                    e
                  ),
                  4
                ),
                v = p[0],
                y = p[1],
                m = p[2],
                b = p[3],
                k = S.useRef(b);
              b && (k.current = !0);
              var w,
                x = S.useCallback(
                  function (e) {
                    (d.current = e), cy(t, e);
                  },
                  [t]
                ),
                C = Kv(Kv({}, f), {}, { visible: i });
              if (l)
                if (v !== sb && n(e)) {
                  var E, O;
                  y === hb
                    ? (O = 'prepare')
                    : Ob(y)
                    ? (O = 'active')
                    : y === db && (O = 'start'),
                    (w = l(
                      Kv(
                        Kv({}, C),
                        {},
                        {
                          className: Wv()(
                            ab(u, v),
                            ((E = {}),
                            $v(E, ab(u, ''.concat(v, '-').concat(O)), O),
                            $v(E, u, 'string' == typeof u),
                            E)
                          ),
                          style: m,
                        }
                      ),
                      x
                    ));
                } else
                  w = b
                    ? l(Kv({}, C), x)
                    : !a && k.current && c
                    ? l(Kv(Kv({}, C), {}, { className: c }), x)
                    : s || (!a && !c)
                    ? l(Kv(Kv({}, C), {}, { style: { display: 'none' } }), x)
                    : null;
              else w = null;
              S.isValidElement(w) &&
                dy(w) &&
                (w.ref || (w = S.cloneElement(w, { ref: x })));
              return S.createElement(Tb, { ref: g }, w);
            });
            return (r.displayName = 'CSSMotion'), r;
          })(rb),
          jb = 'add',
          Lb = 'keep',
          Rb = 'remove',
          _b = 'removed';
        function Ib(e) {
          var t;
          return Kv(
            Kv(
              {},
              (t = e && 'object' === Yv(e) && 'key' in e ? e : { key: e })
            ),
            {},
            { key: String(t.key) }
          );
        }
        function Db() {
          var e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
          return e.map(Ib);
        }
        function zb() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : [],
            t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [],
            n = [],
            r = 0,
            i = t.length,
            o = Db(e),
            a = Db(t);
          o.forEach(function (e) {
            for (var t = !1, o = r; o < i; o += 1) {
              var s = a[o];
              if (s.key === e.key) {
                r < o &&
                  ((n = n.concat(
                    a.slice(r, o).map(function (e) {
                      return Kv(Kv({}, e), {}, { status: jb });
                    })
                  )),
                  (r = o)),
                  n.push(Kv(Kv({}, s), {}, { status: Lb })),
                  (r += 1),
                  (t = !0);
                break;
              }
            }
            t || n.push(Kv(Kv({}, e), {}, { status: Rb }));
          }),
            r < i &&
              (n = n.concat(
                a.slice(r).map(function (e) {
                  return Kv(Kv({}, e), {}, { status: jb });
                })
              ));
          var s = {};
          n.forEach(function (e) {
            var t = e.key;
            s[t] = (s[t] || 0) + 1;
          });
          var l = Object.keys(s).filter(function (e) {
            return s[e] > 1;
          });
          return (
            l.forEach(function (e) {
              (n = n.filter(function (t) {
                var n = t.key,
                  r = t.status;
                return n !== e || r !== Rb;
              })).forEach(function (t) {
                t.key === e && (t.status = Lb);
              });
            }),
            n
          );
        }
        var Bb = ['component', 'children', 'onVisibleChanged', 'onAllRemoved'],
          Vb = ['status'],
          Fb = [
            'eventProps',
            'visible',
            'children',
            'motionName',
            'motionAppear',
            'motionEnter',
            'motionLeave',
            'motionLeaveImmediately',
            'motionDeadline',
            'removeOnLeave',
            'leavedClassName',
            'onAppearStart',
            'onAppearActive',
            'onAppearEnd',
            'onEnterStart',
            'onEnterActive',
            'onEnterEnd',
            'onLeaveStart',
            'onLeaveActive',
            'onLeaveEnd',
          ];
        !(function (e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : Nb,
            n = (function (e) {
              mm(r, e);
              var n = xm(r);
              function r() {
                var e;
                gm(this, r);
                for (
                  var t = arguments.length, i = new Array(t), o = 0;
                  o < t;
                  o++
                )
                  i[o] = arguments[o];
                return (
                  $v(km((e = n.call.apply(n, [this].concat(i)))), 'state', {
                    keyEntities: [],
                  }),
                  $v(km(e), 'removeKey', function (t) {
                    var n = e.state.keyEntities.map(function (e) {
                      return e.key !== t
                        ? e
                        : Kv(Kv({}, e), {}, { status: _b });
                    });
                    return (
                      e.setState({ keyEntities: n }),
                      n.filter(function (e) {
                        return e.status !== _b;
                      }).length
                    );
                  }),
                  e
                );
              }
              return (
                vm(
                  r,
                  [
                    {
                      key: 'render',
                      value: function () {
                        var e = this,
                          n = this.state.keyEntities,
                          r = this.props,
                          i = r.component,
                          o = r.children,
                          a = r.onVisibleChanged,
                          s = r.onAllRemoved,
                          l = Zv(r, Bb),
                          u = i || S.Fragment,
                          c = {};
                        return (
                          Fb.forEach(function (e) {
                            (c[e] = l[e]), delete l[e];
                          }),
                          delete l.keys,
                          S.createElement(
                            u,
                            l,
                            n.map(function (n) {
                              var r = n.status,
                                i = Zv(n, Vb),
                                l = r === jb || r === Lb;
                              return S.createElement(
                                t,
                                Xv({}, c, {
                                  key: i.key,
                                  visible: l,
                                  eventProps: i,
                                  onVisibleChanged: function (t) {
                                    (null == a || a(t, { key: i.key }), t) ||
                                      (0 === e.removeKey(i.key) && s && s());
                                  },
                                }),
                                o
                              );
                            })
                          )
                        );
                      },
                    },
                  ],
                  [
                    {
                      key: 'getDerivedStateFromProps',
                      value: function (e, t) {
                        var n = e.keys,
                          r = t.keyEntities,
                          i = Db(n);
                        return {
                          keyEntities: zb(r, i).filter(function (e) {
                            var t = r.find(function (t) {
                              var n = t.key;
                              return e.key === n;
                            });
                            return !t || t.status !== _b || e.status !== Rb;
                          }),
                        };
                      },
                    },
                  ]
                ),
                r
              );
            })(S.Component);
          $v(n, 'defaultProps', { component: 'div' });
        })(rb);
        var Ub = Nb;
        function Hb(e) {
          var t = e.prefixCls,
            n = e.align,
            r = e.arrowX,
            i = void 0 === r ? 0 : r,
            o = e.arrowY,
            a = void 0 === o ? 0 : o,
            s = S.useRef();
          if (!n || !n.points) return null;
          var l = { position: 'absolute' };
          if (!1 !== n.autoArrow) {
            var u = n.points[0],
              c = n.points[1],
              f = u[0],
              h = u[1],
              d = c[0],
              g = c[1];
            f !== d && ['t', 'b'].includes(f)
              ? 't' === f
                ? (l.top = 0)
                : (l.bottom = 0)
              : (l.top = a),
              h !== g && ['l', 'r'].includes(h)
                ? 'l' === h
                  ? (l.left = 0)
                  : (l.right = 0)
                : (l.left = i);
          }
          return S.createElement('div', {
            ref: s,
            className: ''.concat(t, '-arrow'),
            style: l,
          });
        }
        function Gb(e) {
          var t = e.prefixCls,
            n = e.open,
            r = e.zIndex,
            i = e.mask,
            o = e.motion;
          return i
            ? React.createElement(
                Ub,
                Xv({}, o, { motionAppear: !0, visible: n, removeOnLeave: !0 }),
                function (e) {
                  var n = e.className;
                  return React.createElement('div', {
                    style: { zIndex: r },
                    className: Wv()(''.concat(t, '-mask'), n),
                  });
                }
              )
            : null;
        }
        var Wb = S.forwardRef(function (e, t) {
          var n = e.popup,
            r = e.className,
            i = e.prefixCls,
            o = e.style,
            a = e.target,
            s = e.onVisibleChanged,
            l = e.open,
            u = e.keepDom,
            c = e.onClick,
            f = e.mask,
            h = e.arrow,
            d = e.align,
            g = e.arrowX,
            p = e.arrowY,
            v = e.motion,
            y = e.maskMotion,
            m = e.forceRender,
            b = e.getPopupContainer,
            k = e.autoDestroy,
            w = e.portal,
            x = e.zIndex,
            C = e.onMouseEnter,
            E = e.onMouseLeave,
            O = e.ready,
            P = e.offsetX,
            A = e.offsetY,
            M = e.onAlign,
            T = e.onPrepare,
            N = e.stretch,
            j = e.targetWidth,
            L = e.targetHeight,
            R = 'function' == typeof n ? n() : n,
            _ = l || u,
            I = (null == b ? void 0 : b.length) > 0,
            D = ny(S.useState(!b || !I), 2),
            z = D[0],
            B = D[1];
          if (
            (yy(
              function () {
                !z && I && a && B(!0);
              },
              [z, I, a]
            ),
            !z)
          )
            return null;
          var V =
              O || !l
                ? { left: P, top: A }
                : { left: '-1000vw', top: '-1000vh' },
            F = {};
          return (
            N &&
              (N.includes('height') && L
                ? (F.height = L)
                : N.includes('minHeight') && L && (F.minHeight = L),
              N.includes('width') && j
                ? (F.width = j)
                : N.includes('minWidth') && j && (F.minWidth = j)),
            l || (F.pointerEvents = 'none'),
            S.createElement(
              w,
              {
                open: m || _,
                getContainer:
                  b &&
                  function () {
                    return b(a);
                  },
                autoDestroy: k,
              },
              S.createElement(Gb, {
                prefixCls: i,
                open: l,
                zIndex: x,
                mask: f,
                motion: y,
              }),
              S.createElement(Mm, { onResize: M, disabled: !l }, function (e) {
                return S.createElement(
                  Ub,
                  Xv(
                    {
                      motionAppear: !0,
                      motionEnter: !0,
                      motionLeave: !0,
                      removeOnLeave: !1,
                      forceRender: m,
                      leavedClassName: ''.concat(i, '-hidden'),
                    },
                    v,
                    {
                      onAppearPrepare: T,
                      onEnterPrepare: T,
                      visible: l,
                      onVisibleChanged: function (e) {
                        var t;
                        null == v ||
                          null === (t = v.onVisibleChanged) ||
                          void 0 === t ||
                          t.call(v, e),
                          s(e);
                      },
                    }
                  ),
                  function (n, a) {
                    var s = n.className,
                      l = n.style,
                      u = Wv()(i, s, r);
                    return S.createElement(
                      'div',
                      {
                        ref: fy(e, t, a),
                        className: u,
                        style: Kv(
                          Kv(Kv(Kv({}, V), F), l),
                          {},
                          { boxSizing: 'border-box', zIndex: x },
                          o
                        ),
                        onMouseEnter: C,
                        onMouseLeave: E,
                        onClick: c,
                      },
                      h &&
                        S.createElement(Hb, {
                          prefixCls: i,
                          align: d,
                          arrowX: g,
                          arrowY: p,
                        }),
                      R
                    );
                  }
                );
              })
            )
          );
        });
        var qb = Wb,
          Xb = S.forwardRef(function (e, t) {
            var n = e.children,
              r = e.getTriggerDOMNode,
              i = dy(n),
              o = S.useCallback(
                function (e) {
                  cy(t, r ? r(e) : e);
                },
                [r]
              ),
              a = hy(o, n.ref);
            return i ? S.cloneElement(n, { ref: a }) : n;
          });
        var Yb = Xb,
          Jb = [
            'prefixCls',
            'children',
            'action',
            'showAction',
            'hideAction',
            'popupVisible',
            'defaultPopupVisible',
            'onPopupVisibleChange',
            'afterPopupVisibleChange',
            'mouseEnterDelay',
            'mouseLeaveDelay',
            'focusDelay',
            'blurDelay',
            'mask',
            'maskClosable',
            'getPopupContainer',
            'forceRender',
            'autoDestroy',
            'destroyPopupOnHide',
            'popup',
            'popupClassName',
            'popupStyle',
            'popupPlacement',
            'builtinPlacements',
            'popupAlign',
            'zIndex',
            'stretch',
            'getPopupClassNameFromAlign',
            'alignPoint',
            'onPopupClick',
            'onPopupAlign',
            'arrow',
            'popupMotion',
            'maskMotion',
            'popupTransitionName',
            'popupAnimation',
            'maskTransitionName',
            'maskAnimation',
            'className',
            'getTriggerDOMNode',
          ];
        var $b = (function () {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : Vy,
              t = S.forwardRef(function (t, n) {
                var r = t.prefixCls,
                  i = void 0 === r ? 'rc-trigger-popup' : r,
                  o = t.children,
                  a = t.action,
                  s = void 0 === a ? 'hover' : a,
                  l = t.showAction,
                  u = t.hideAction,
                  c = t.popupVisible,
                  f = t.defaultPopupVisible,
                  h = t.onPopupVisibleChange,
                  d = t.afterPopupVisibleChange,
                  g = t.mouseEnterDelay,
                  p = t.mouseLeaveDelay,
                  v = void 0 === p ? 0.1 : p,
                  y = t.focusDelay,
                  m = t.blurDelay,
                  b = t.mask,
                  k = t.maskClosable,
                  w = void 0 === k || k,
                  x = t.getPopupContainer,
                  C = t.forceRender,
                  E = t.autoDestroy,
                  O = t.destroyPopupOnHide,
                  P = t.popup,
                  A = t.popupClassName,
                  M = t.popupStyle,
                  T = t.popupPlacement,
                  N = t.builtinPlacements,
                  j = void 0 === N ? {} : N,
                  L = t.popupAlign,
                  R = t.zIndex,
                  _ = t.stretch,
                  I = t.getPopupClassNameFromAlign,
                  D = t.alignPoint,
                  z = t.onPopupClick,
                  B = t.onPopupAlign,
                  V = t.arrow,
                  F = t.popupMotion,
                  U = t.maskMotion,
                  H = t.popupTransitionName,
                  G = t.popupAnimation,
                  W = t.maskTransitionName,
                  q = t.maskAnimation,
                  X = t.className,
                  Y = t.getTriggerDOMNode,
                  J = Zv(t, Jb),
                  $ = E || O || !1,
                  Q = ny(S.useState(!1), 2),
                  K = Q[0],
                  Z = Q[1];
                yy(function () {
                  Z(Lm());
                }, []);
                var ee = S.useRef({}),
                  te = S.useContext(Rm),
                  ne = S.useMemo(
                    function () {
                      return {
                        registerSubPopup: function (e, t) {
                          (ee.current[e] = t),
                            null == te || te.registerSubPopup(e, t);
                        },
                      };
                    },
                    [te]
                  ),
                  re = jm(),
                  ie = ny(S.useState(null), 2),
                  oe = ie[0],
                  ae = ie[1],
                  se = Tm(function (e) {
                    Uy(e) && oe !== e && ae(e),
                      null == te || te.registerSubPopup(re, e);
                  }),
                  le = ny(S.useState(null), 2),
                  ue = le[0],
                  ce = le[1],
                  fe = Tm(function (e) {
                    Uy(e) && ue !== e && ce(e);
                  }),
                  he = S.Children.only(o),
                  de = (null == he ? void 0 : he.props) || {},
                  ge = {},
                  pe = Tm(function (e) {
                    var t,
                      n,
                      r = ue;
                    return (
                      (null == r ? void 0 : r.contains(e)) ||
                      (null == r ||
                      null === (t = r.getRootNode()) ||
                      void 0 === t
                        ? void 0
                        : t.host) === e ||
                      e === r ||
                      (null == oe ? void 0 : oe.contains(e)) ||
                      (null == oe ||
                      null === (n = oe.getRootNode()) ||
                      void 0 === n
                        ? void 0
                        : n.host) === e ||
                      e === oe ||
                      Object.values(ee.current).some(function (t) {
                        return (null == t ? void 0 : t.contains(e)) || e === t;
                      })
                    );
                  }),
                  ve = Vm(i, F, G, H),
                  ye = Vm(i, U, q, W),
                  me = ny(S.useState(f || !1), 2),
                  be = me[0],
                  ke = me[1],
                  we = null != c ? c : be,
                  xe = Tm(function (e) {
                    void 0 === c && ke(e);
                  });
                yy(
                  function () {
                    ke(c || !1);
                  },
                  [c]
                );
                var Ce = S.useRef(we);
                Ce.current = we;
                var Se = Tm(function (e) {
                    we !== e && (xe(e), null == h || h(e));
                  }),
                  Ee = S.useRef(),
                  Oe = function () {
                    clearTimeout(Ee.current);
                  },
                  Pe = function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                    Oe(),
                      0 === t
                        ? Se(e)
                        : (Ee.current = setTimeout(function () {
                            Se(e);
                          }, 1e3 * t));
                  };
                S.useEffect(function () {
                  return Oe;
                }, []);
                var Ae = ny(S.useState(!1), 2),
                  Me = Ae[0],
                  Te = Ae[1],
                  Ne = S.useRef(!0);
                yy(
                  function () {
                    (Ne.current && !we) || Te(!0), (Ne.current = !0);
                  },
                  [we]
                );
                var je = ny(S.useState(null), 2),
                  Le = je[0],
                  Re = je[1],
                  _e = ny(S.useState([0, 0]), 2),
                  Ie = _e[0],
                  De = _e[1],
                  ze = function (e) {
                    De([e.clientX, e.clientY]);
                  },
                  Be = ny(Xm(we, oe, D ? Ie : ue, T, j, L, B), 9),
                  Ve = Be[0],
                  Fe = Be[1],
                  Ue = Be[2],
                  He = Be[3],
                  Ge = Be[4],
                  We = Be[5],
                  qe = Be[6],
                  Xe = Be[7],
                  Ye = Be[8],
                  Je = Tm(function () {
                    Me || Ye();
                  });
                Ym(we, ue, oe, Je),
                  yy(
                    function () {
                      Je();
                    },
                    [Ie]
                  ),
                  yy(
                    function () {
                      !we || (null != j && j[T]) || Je();
                    },
                    [JSON.stringify(L)]
                  );
                var $e = S.useMemo(
                  function () {
                    var e = Bm(j, i, Xe, D);
                    return Wv()(e, null == I ? void 0 : I(Xe));
                  },
                  [Xe, I, j, i, D]
                );
                S.useImperativeHandle(n, function () {
                  return { forceAlign: Je };
                });
                yy(
                  function () {
                    Le && (Ye(), Le(), Re(null));
                  },
                  [Le]
                );
                var Qe = ny(S.useState(0), 2),
                  Ke = Qe[0],
                  Ze = Qe[1],
                  et = ny(S.useState(0), 2),
                  tt = et[0],
                  nt = et[1],
                  rt = ny(Im(K, s, l, u), 2),
                  it = rt[0],
                  ot = rt[1],
                  at = function (e, t, n, r) {
                    ge[e] = function (i) {
                      var o;
                      null == r || r(i), Pe(t, n);
                      for (
                        var a = arguments.length,
                          s = new Array(a > 1 ? a - 1 : 0),
                          l = 1;
                        l < a;
                        l++
                      )
                        s[l - 1] = arguments[l];
                      null === (o = de[e]) ||
                        void 0 === o ||
                        o.call.apply(o, [de, i].concat(s));
                    };
                  },
                  st = it.has('click'),
                  lt = ot.has('click') || ot.has('contextMenu');
                (st || lt) &&
                  (ge.onClick = function (e) {
                    var t;
                    Ce.current && lt
                      ? Pe(!1)
                      : !Ce.current && st && (ze(e), Pe(!0));
                    for (
                      var n = arguments.length,
                        r = new Array(n > 1 ? n - 1 : 0),
                        i = 1;
                      i < n;
                      i++
                    )
                      r[i - 1] = arguments[i];
                    null === (t = de.onClick) ||
                      void 0 === t ||
                      t.call.apply(t, [de, e].concat(r));
                  }),
                  S.useEffect(
                    function () {
                      if (lt && oe && (!b || w)) {
                        var e = function (e) {
                            var t = e.target;
                            Ce.current && !pe(t) && Pe(!1);
                          },
                          t = Fm(oe),
                          n = null == ue ? void 0 : ue.getRootNode();
                        t.addEventListener('click', e);
                        var r = n && n !== ue.ownerDocument;
                        return (
                          r && n.addEventListener('click', e),
                          function () {
                            t.removeEventListener('click', e),
                              r && n.removeEventListener('click', e);
                          }
                        );
                      }
                    },
                    [lt, ue, oe, b, w]
                  );
                var ut,
                  ct,
                  ft = it.has('hover'),
                  ht = ot.has('hover');
                ft &&
                  (at('onMouseEnter', !0, g, function (e) {
                    ze(e);
                  }),
                  (ut = function () {
                    Pe(!0, g);
                  }),
                  D &&
                    (ge.onMouseMove = function (e) {
                      var t;
                      null === (t = de.onMouseMove) ||
                        void 0 === t ||
                        t.call(de, e);
                    })),
                  ht &&
                    (at('onMouseLeave', !1, v),
                    (ct = function () {
                      Pe(!1, v);
                    })),
                  it.has('focus') && at('onFocus', !0, y),
                  ot.has('focus') && at('onBlur', !1, m),
                  it.has('contextMenu') &&
                    (ge.onContextMenu = function (e) {
                      var t;
                      ze(e), Pe(!0), e.preventDefault();
                      for (
                        var n = arguments.length,
                          r = new Array(n > 1 ? n - 1 : 0),
                          i = 1;
                        i < n;
                        i++
                      )
                        r[i - 1] = arguments[i];
                      null === (t = de.onContextMenu) ||
                        void 0 === t ||
                        t.call.apply(t, [de, e].concat(r));
                    }),
                  X && (ge.className = Wv()(de.className, X));
                var dt = Kv(Kv({}, de), ge),
                  gt = {};
                [
                  'onContextMenu',
                  'onClick',
                  'onMouseDown',
                  'onTouchStart',
                  'onMouseEnter',
                  'onMouseLeave',
                  'onFocus',
                  'onBlur',
                ].forEach(function (e) {
                  J[e] &&
                    (gt[e] = function () {
                      for (
                        var t, n = arguments.length, r = new Array(n), i = 0;
                        i < n;
                        i++
                      )
                        r[i] = arguments[i];
                      null === (t = dt[e]) ||
                        void 0 === t ||
                        t.call.apply(t, [dt].concat(r)),
                        J[e].apply(J, r);
                    });
                });
                var pt = S.cloneElement(he, Kv(Kv({}, dt), gt));
                return S.createElement(
                  S.Fragment,
                  null,
                  S.createElement(
                    Mm,
                    {
                      disabled: !we,
                      ref: fe,
                      onResize: function (e, t) {
                        if ((Je(), _)) {
                          var n = t.getBoundingClientRect();
                          Ze(n.width), nt(n.height);
                        }
                      },
                    },
                    S.createElement(Yb, { getTriggerDOMNode: Y }, pt)
                  ),
                  S.createElement(
                    Rm.Provider,
                    { value: ne },
                    S.createElement(qb, {
                      portal: e,
                      ref: se,
                      prefixCls: i,
                      popup: P,
                      className: Wv()(A, $e),
                      style: M,
                      target: ue,
                      onMouseEnter: ut,
                      onMouseLeave: ct,
                      zIndex: R,
                      open: we,
                      keepDom: Me,
                      onClick: z,
                      mask: b,
                      motion: ve,
                      maskMotion: ye,
                      onVisibleChanged: function (e) {
                        Te(!1), Ye(), null == d || d(e);
                      },
                      onPrepare: function () {
                        return new Promise(function (e) {
                          Re(function () {
                            return e;
                          });
                        });
                      },
                      forceRender: C,
                      autoDestroy: $,
                      getPopupContainer: x,
                      align: Xe,
                      arrow: V,
                      ready: Ve,
                      offsetX: Fe,
                      offsetY: Ue,
                      arrowX: He,
                      arrowY: Ge,
                      onAlign: Je,
                      stretch: _,
                      targetWidth: Ke / We,
                      targetHeight: tt / qe,
                    })
                  )
                );
              });
            return t;
          })(Vy),
          Qb = { shiftX: 64, adjustY: 1 },
          Kb = { adjustX: 1, shiftY: !0 },
          Zb = [0, 0],
          ek = {
            left: {
              points: ['cr', 'cl'],
              overflow: Kb,
              offset: [-4, 0],
              targetOffset: Zb,
            },
            right: {
              points: ['cl', 'cr'],
              overflow: Kb,
              offset: [4, 0],
              targetOffset: Zb,
            },
            top: {
              points: ['bc', 'tc'],
              overflow: Qb,
              offset: [0, -4],
              targetOffset: Zb,
            },
            bottom: {
              points: ['tc', 'bc'],
              overflow: Qb,
              offset: [0, 4],
              targetOffset: Zb,
            },
            topLeft: {
              points: ['bl', 'tl'],
              overflow: Qb,
              offset: [0, -4],
              targetOffset: Zb,
            },
            leftTop: {
              points: ['tr', 'tl'],
              overflow: Kb,
              offset: [-4, 0],
              targetOffset: Zb,
            },
            topRight: {
              points: ['br', 'tr'],
              overflow: Qb,
              offset: [0, -4],
              targetOffset: Zb,
            },
            rightTop: {
              points: ['tl', 'tr'],
              overflow: Kb,
              offset: [4, 0],
              targetOffset: Zb,
            },
            bottomRight: {
              points: ['tr', 'br'],
              overflow: Qb,
              offset: [0, 4],
              targetOffset: Zb,
            },
            rightBottom: {
              points: ['bl', 'br'],
              overflow: Kb,
              offset: [4, 0],
              targetOffset: Zb,
            },
            bottomLeft: {
              points: ['tl', 'bl'],
              overflow: Qb,
              offset: [0, 4],
              targetOffset: Zb,
            },
            leftBottom: {
              points: ['br', 'bl'],
              overflow: Kb,
              offset: [-4, 0],
              targetOffset: Zb,
            },
          };
        function tk(e) {
          var t = e.children,
            n = e.prefixCls,
            r = e.id,
            i = e.overlayInnerStyle,
            o = e.className,
            a = e.style;
          return S.createElement(
            'div',
            { className: Wv()(''.concat(n, '-content'), o), style: a },
            S.createElement(
              'div',
              {
                className: ''.concat(n, '-inner'),
                id: r,
                role: 'tooltip',
                style: i,
              },
              'function' == typeof t ? t() : t
            )
          );
        }
        var nk = [
            'overlayClassName',
            'trigger',
            'mouseEnterDelay',
            'mouseLeaveDelay',
            'overlayStyle',
            'prefixCls',
            'children',
            'onVisibleChange',
            'afterVisibleChange',
            'transitionName',
            'animation',
            'motion',
            'placement',
            'align',
            'destroyTooltipOnHide',
            'defaultVisible',
            'getTooltipContainer',
            'overlayInnerStyle',
            'arrowContent',
            'overlay',
            'id',
            'showArrow',
          ],
          rk = function (e, t) {
            var n = e.overlayClassName,
              r = e.trigger,
              i = void 0 === r ? ['hover'] : r,
              o = e.mouseEnterDelay,
              a = void 0 === o ? 0 : o,
              s = e.mouseLeaveDelay,
              l = void 0 === s ? 0.1 : s,
              u = e.overlayStyle,
              c = e.prefixCls,
              f = void 0 === c ? 'rc-tooltip' : c,
              h = e.children,
              d = e.onVisibleChange,
              g = e.afterVisibleChange,
              p = e.transitionName,
              v = e.animation,
              y = e.motion,
              m = e.placement,
              b = void 0 === m ? 'right' : m,
              k = e.align,
              w = void 0 === k ? {} : k,
              x = e.destroyTooltipOnHide,
              C = void 0 !== x && x,
              E = e.defaultVisible,
              O = e.getTooltipContainer,
              P = e.overlayInnerStyle,
              A = (e.arrowContent, e.overlay),
              M = e.id,
              T = e.showArrow,
              N = void 0 === T || T,
              j = Zv(e, nk),
              L = (0, S.useRef)(null);
            (0, S.useImperativeHandle)(t, function () {
              return L.current;
            });
            var R = Kv({}, j);
            'visible' in e && (R.popupVisible = e.visible);
            return S.createElement(
              $b,
              Xv(
                {
                  popupClassName: n,
                  prefixCls: f,
                  popup: function () {
                    return S.createElement(
                      tk,
                      {
                        key: 'content',
                        prefixCls: f,
                        id: M,
                        overlayInnerStyle: P,
                      },
                      A
                    );
                  },
                  action: i,
                  builtinPlacements: ek,
                  popupPlacement: b,
                  ref: L,
                  popupAlign: w,
                  getPopupContainer: O,
                  onPopupVisibleChange: d,
                  afterPopupVisibleChange: g,
                  popupTransitionName: p,
                  popupAnimation: v,
                  popupMotion: y,
                  defaultPopupVisible: E,
                  autoDestroy: C,
                  mouseLeaveDelay: l,
                  popupStyle: u,
                  mouseEnterDelay: a,
                  arrow: N,
                },
                R
              ),
              h
            );
          },
          ik = (0, S.forwardRef)(rk);
        function ok(e) {
          return void 0 !== e;
        }
        var ak = function (e, t, n) {
            return void 0 !== n ? n : ''.concat(e, '-').concat(t);
          },
          sk = function (e, t, n, r, i) {
            var o = e / 2,
              a = o,
              s = (1 * n) / Math.sqrt(2),
              l = o - n * (1 - 1 / Math.sqrt(2)),
              u = o - t * (1 / Math.sqrt(2)),
              c = n * (Math.sqrt(2) - 1) + t * (1 / Math.sqrt(2)),
              f = 2 * o - u,
              h = c,
              d = 2 * o - s,
              g = l,
              p = 2 * o - 0,
              v = a,
              y = o * Math.sqrt(2) + n * (Math.sqrt(2) - 2);
            return {
              pointerEvents: 'none',
              width: e,
              height: e,
              overflow: 'hidden',
              '&::before': {
                position: 'absolute',
                bottom: 0,
                insetInlineStart: 0,
                width: e,
                height: e / 2,
                background: r,
                clipPath: "path('M "
                  .concat(0, ' ')
                  .concat(a, ' A ')
                  .concat(n, ' ')
                  .concat(n, ' 0 0 0 ')
                  .concat(s, ' ')
                  .concat(l, ' L ')
                  .concat(u, ' ')
                  .concat(c, ' A ')
                  .concat(t, ' ')
                  .concat(t, ' 0 0 1 ')
                  .concat(f, ' ')
                  .concat(h, ' L ')
                  .concat(d, ' ')
                  .concat(g, ' A ')
                  .concat(n, ' ')
                  .concat(n, ' 0 0 0 ')
                  .concat(p, ' ')
                  .concat(v, " Z')"),
                content: '""',
              },
              '&::after': {
                content: '""',
                position: 'absolute',
                width: y,
                height: y,
                bottom: 0,
                insetInline: 0,
                margin: 'auto',
                borderRadius: {
                  _skip_check_: !0,
                  value: '0 0 '.concat(t, 'px 0'),
                },
                transform: 'translateY(50%) rotate(-135deg)',
                boxShadow: i,
                zIndex: 0,
                background: 'transparent',
              },
            };
          };
        function lk(e) {
          var t = e.contentRadius,
            n = t > 12 ? t + 2 : 12;
          return {
            dropdownArrowOffset: n,
            dropdownArrowOffsetVertical: e.limitVerticalRadius ? 8 : n,
          };
        }
        function uk(e, t) {
          return e ? t : {};
        }
        function ck(e, t) {
          var n,
            r,
            i,
            o,
            a = e.componentCls,
            s = e.sizePopupArrow,
            l = e.borderRadiusXS,
            u = e.borderRadiusOuter,
            c = e.boxShadowPopoverArrow,
            f = t.colorBg,
            h = t.contentRadius,
            d = void 0 === h ? e.borderRadiusLG : h,
            g = t.limitVerticalRadius,
            p = t.arrowDistance,
            v = void 0 === p ? 0 : p,
            y = t.arrowPlacement,
            m = void 0 === y ? { left: !0, right: !0, top: !0, bottom: !0 } : y,
            b = lk({ contentRadius: d, limitVerticalRadius: g }),
            k = b.dropdownArrowOffsetVertical,
            x = b.dropdownArrowOffset;
          return w()(
            {},
            a,
            Object.assign(
              Object.assign(
                Object.assign(
                  Object.assign(
                    w()({}, ''.concat(a, '-arrow'), [
                      Object.assign(
                        Object.assign(
                          { position: 'absolute', zIndex: 1, display: 'block' },
                          sk(s, l, u, f, c)
                        ),
                        { '&:before': { background: f } }
                      ),
                    ]),
                    uk(
                      !!m.top,
                      ((n = {}),
                      w()(
                        n,
                        [
                          '&-placement-top '.concat(a, '-arrow'),
                          '&-placement-topLeft '.concat(a, '-arrow'),
                          '&-placement-topRight '.concat(a, '-arrow'),
                        ].join(','),
                        {
                          bottom: v,
                          transform: 'translateY(100%) rotate(180deg)',
                        }
                      ),
                      w()(n, '&-placement-top '.concat(a, '-arrow'), {
                        left: { _skip_check_: !0, value: '50%' },
                        transform:
                          'translateX(-50%) translateY(100%) rotate(180deg)',
                      }),
                      w()(n, '&-placement-topLeft '.concat(a, '-arrow'), {
                        left: { _skip_check_: !0, value: x },
                      }),
                      w()(n, '&-placement-topRight '.concat(a, '-arrow'), {
                        right: { _skip_check_: !0, value: x },
                      }),
                      n)
                    )
                  ),
                  uk(
                    !!m.bottom,
                    ((r = {}),
                    w()(
                      r,
                      [
                        '&-placement-bottom '.concat(a, '-arrow'),
                        '&-placement-bottomLeft '.concat(a, '-arrow'),
                        '&-placement-bottomRight '.concat(a, '-arrow'),
                      ].join(','),
                      { top: v, transform: 'translateY(-100%)' }
                    ),
                    w()(r, '&-placement-bottom '.concat(a, '-arrow'), {
                      left: { _skip_check_: !0, value: '50%' },
                      transform: 'translateX(-50%) translateY(-100%)',
                    }),
                    w()(r, '&-placement-bottomLeft '.concat(a, '-arrow'), {
                      left: { _skip_check_: !0, value: x },
                    }),
                    w()(r, '&-placement-bottomRight '.concat(a, '-arrow'), {
                      right: { _skip_check_: !0, value: x },
                    }),
                    r)
                  )
                ),
                uk(
                  !!m.left,
                  ((i = {}),
                  w()(
                    i,
                    [
                      '&-placement-left '.concat(a, '-arrow'),
                      '&-placement-leftTop '.concat(a, '-arrow'),
                      '&-placement-leftBottom '.concat(a, '-arrow'),
                    ].join(','),
                    {
                      right: { _skip_check_: !0, value: v },
                      transform: 'translateX(100%) rotate(90deg)',
                    }
                  ),
                  w()(i, '&-placement-left '.concat(a, '-arrow'), {
                    top: { _skip_check_: !0, value: '50%' },
                    transform:
                      'translateY(-50%) translateX(100%) rotate(90deg)',
                  }),
                  w()(i, '&-placement-leftTop '.concat(a, '-arrow'), {
                    top: k,
                  }),
                  w()(i, '&-placement-leftBottom '.concat(a, '-arrow'), {
                    bottom: k,
                  }),
                  i)
                )
              ),
              uk(
                !!m.right,
                ((o = {}),
                w()(
                  o,
                  [
                    '&-placement-right '.concat(a, '-arrow'),
                    '&-placement-rightTop '.concat(a, '-arrow'),
                    '&-placement-rightBottom '.concat(a, '-arrow'),
                  ].join(','),
                  {
                    left: { _skip_check_: !0, value: v },
                    transform: 'translateX(-100%) rotate(-90deg)',
                  }
                ),
                w()(o, '&-placement-right '.concat(a, '-arrow'), {
                  top: { _skip_check_: !0, value: '50%' },
                  transform:
                    'translateY(-50%) translateX(-100%) rotate(-90deg)',
                }),
                w()(o, '&-placement-rightTop '.concat(a, '-arrow'), { top: k }),
                w()(o, '&-placement-rightBottom '.concat(a, '-arrow'), {
                  bottom: k,
                }),
                o)
              )
            )
          );
        }
        var fk = {
            left: { points: ['cr', 'cl'] },
            right: { points: ['cl', 'cr'] },
            top: { points: ['bc', 'tc'] },
            bottom: { points: ['tc', 'bc'] },
            topLeft: { points: ['bl', 'tl'] },
            leftTop: { points: ['tr', 'tl'] },
            topRight: { points: ['br', 'tr'] },
            rightTop: { points: ['tl', 'tr'] },
            bottomRight: { points: ['tr', 'br'] },
            rightBottom: { points: ['bl', 'br'] },
            bottomLeft: { points: ['tl', 'bl'] },
            leftBottom: { points: ['br', 'bl'] },
          },
          hk = {
            topLeft: { points: ['bl', 'tc'] },
            leftTop: { points: ['tr', 'cl'] },
            topRight: { points: ['br', 'tc'] },
            rightTop: { points: ['tl', 'cr'] },
            bottomRight: { points: ['tr', 'bc'] },
            rightBottom: { points: ['bl', 'cr'] },
            bottomLeft: { points: ['tl', 'bc'] },
            leftBottom: { points: ['br', 'cl'] },
          },
          dk = new Set([
            'topLeft',
            'topRight',
            'bottomLeft',
            'bottomRight',
            'leftTop',
            'leftBottom',
            'rightTop',
            'rightBottom',
          ]);
        function gk(e) {
          var t = e.arrowWidth,
            n = e.autoAdjustOverflow,
            r = e.arrowPointAtCenter,
            i = e.offset,
            o = e.borderRadius,
            a = t / 2,
            s = {};
          return (
            Object.keys(fk).forEach(function (e) {
              var l = (r && hk[e]) || fk[e],
                u = Object.assign(Object.assign({}, l), { offset: [0, 0] });
              switch (((s[e] = u), dk.has(e) && (u.autoArrow = !1), e)) {
                case 'top':
                case 'topLeft':
                case 'topRight':
                  u.offset[1] = -a - i;
                  break;
                case 'bottom':
                case 'bottomLeft':
                case 'bottomRight':
                  u.offset[1] = a + i;
                  break;
                case 'left':
                case 'leftTop':
                case 'leftBottom':
                  u.offset[0] = -a - i;
                  break;
                case 'right':
                case 'rightTop':
                case 'rightBottom':
                  u.offset[0] = a + i;
              }
              var c = lk({ contentRadius: o, limitVerticalRadius: !0 });
              if (r)
                switch (e) {
                  case 'topLeft':
                  case 'bottomLeft':
                    u.offset[0] = -c.dropdownArrowOffset - a;
                    break;
                  case 'topRight':
                  case 'bottomRight':
                    u.offset[0] = c.dropdownArrowOffset + a;
                    break;
                  case 'leftTop':
                  case 'rightTop':
                    u.offset[1] = -c.dropdownArrowOffset - a;
                    break;
                  case 'leftBottom':
                  case 'rightBottom':
                    u.offset[1] = c.dropdownArrowOffset + a;
                }
              u.overflow = (function (e, t, n, r) {
                if (!1 === r) return { adjustX: !1, adjustY: !1 };
                var i = r && 'object' === _()(r) ? r : {},
                  o = {};
                switch (e) {
                  case 'top':
                  case 'bottom':
                    o.shiftX = 2 * t.dropdownArrowOffset + n;
                    break;
                  case 'left':
                  case 'right':
                    o.shiftY = 2 * t.dropdownArrowOffsetVertical + n;
                }
                var a = Object.assign(Object.assign({}, o), i);
                return (
                  a.shiftX || (a.adjustX = !0), a.shiftY || (a.adjustY = !0), a
                );
              })(e, c, t, n);
            }),
            s
          );
        }
        var pk = S.isValidElement;
        function vk(e, t) {
          return (function (e, t, n) {
            return pk(e)
              ? S.cloneElement(e, 'function' == typeof n ? n(e.props || {}) : n)
              : t;
          })(e, e, t);
        }
        var yk = function (e) {
          for (var t, n = 0, r = 0, i = e.length; i >= 4; ++r, i -= 4)
            (t =
              1540483477 *
                (65535 &
                  (t =
                    (255 & e.charCodeAt(r)) |
                    ((255 & e.charCodeAt(++r)) << 8) |
                    ((255 & e.charCodeAt(++r)) << 16) |
                    ((255 & e.charCodeAt(++r)) << 24))) +
              ((59797 * (t >>> 16)) << 16)),
              (n =
                (1540483477 * (65535 & (t ^= t >>> 24)) +
                  ((59797 * (t >>> 16)) << 16)) ^
                (1540483477 * (65535 & n) + ((59797 * (n >>> 16)) << 16)));
          switch (i) {
            case 3:
              n ^= (255 & e.charCodeAt(r + 2)) << 16;
            case 2:
              n ^= (255 & e.charCodeAt(r + 1)) << 8;
            case 1:
              n =
                1540483477 * (65535 & (n ^= 255 & e.charCodeAt(r))) +
                ((59797 * (n >>> 16)) << 16);
          }
          return (
            ((n =
              1540483477 * (65535 & (n ^= n >>> 13)) +
              ((59797 * (n >>> 16)) << 16)) ^
              (n >>> 15)) >>>
            0
          ).toString(36);
        };
        var mk = (function () {
            function e() {
              gm(this, e), $v(this, 'cache', new Map());
            }
            return (
              vm(e, [
                {
                  key: 'get',
                  value: function (e) {
                    return this.cache.get(e.join('%')) || null;
                  },
                },
                {
                  key: 'update',
                  value: function (e, t) {
                    var n = e.join('%'),
                      r = t(this.cache.get(n));
                    null === r ? this.cache.delete(n) : this.cache.set(n, r);
                  },
                },
              ]),
              e
            );
          })(),
          bk = mk,
          kk = 'data-token-hash',
          wk = 'data-css-hash',
          xk = '__cssinjs_instance__',
          Ck = Math.random().toString(12).slice(2);
        function Sk() {
          if (
            'undefined' != typeof document &&
            document.head &&
            document.body
          ) {
            var e =
                document.body.querySelectorAll('style['.concat(wk, ']')) || [],
              t = document.head.firstChild;
            Array.from(e).forEach(function (e) {
              (e[xk] = e[xk] || Ck), document.head.insertBefore(e, t);
            });
            var n = {};
            Array.from(
              document.querySelectorAll('style['.concat(wk, ']'))
            ).forEach(function (e) {
              var t,
                r = e.getAttribute(wk);
              n[r]
                ? e[xk] === Ck &&
                  (null === (t = e.parentNode) ||
                    void 0 === t ||
                    t.removeChild(e))
                : (n[r] = !0);
            });
          }
          return new bk();
        }
        var Ek = S.createContext({
            hashPriority: 'low',
            cache: Sk(),
            defaultCache: !0,
          }),
          Ok = Ek;
        var Pk = function () {
          return !1;
        };
        function Ak(e, t, n, r) {
          var i = S.useContext(Ok).cache,
            o = [e].concat(py(t));
          Pk();
          return (
            S.useMemo(
              function () {
                i.update(o, function (e) {
                  var t = ny(e || [], 2),
                    r = t[0];
                  return [(void 0 === r ? 0 : r) + 1, t[1] || n()];
                });
              },
              [o.join('_')]
            ),
            S.useEffect(function () {
              return function () {
                i.update(o, function (e) {
                  var t = ny(e || [], 2),
                    n = t[0],
                    i = void 0 === n ? 0 : n,
                    o = t[1];
                  return 0 === i - 1
                    ? (null == r || r(o, !1), null)
                    : [i - 1, o];
                });
              };
            }, o),
            i.get(o)[1]
          );
        }
        function Mk(e) {
          var t = '';
          return (
            Object.keys(e).forEach(function (n) {
              var r = e[n];
              (t += n), r && 'object' === Yv(r) ? (t += Mk(r)) : (t += r);
            }),
            t
          );
        }
        function Tk(e, t) {
          return yk(''.concat(t, '_').concat(Mk(e)));
        }
        var Nk = 'layer-'
            .concat(Date.now(), '-')
            .concat(Math.random())
            .replace(/\./g, ''),
          jk = '903px';
        var Lk = void 0;
        function Rk() {
          return (
            void 0 === Lk &&
              (Lk = (function (e, t) {
                if (ry()) {
                  var n;
                  jy(e, Nk);
                  var r = document.createElement('div');
                  (r.style.position = 'fixed'),
                    (r.style.left = '0'),
                    (r.style.top = '0'),
                    null == t || t(r),
                    document.body.appendChild(r);
                  var i = getComputedStyle(r).width === jk;
                  return (
                    null === (n = r.parentNode) ||
                      void 0 === n ||
                      n.removeChild(r),
                    Ty(Nk),
                    i
                  );
                }
                return !1;
              })(
                '@layer '
                  .concat(Nk, ' { .')
                  .concat(Nk, ' { width: ')
                  .concat(jk, '!important; } }'),
                function (e) {
                  e.className = Nk;
                }
              )),
            Lk
          );
        }
        var _k = {},
          Ik = new Map();
        function Dk(e) {
          Ik.set(e, (Ik.get(e) || 0) + 1);
        }
        function zk(e) {
          Ik.set(e, (Ik.get(e) || 0) - 1);
          var t = Array.from(Ik.keys()),
            n = t.filter(function (e) {
              return (Ik.get(e) || 0) <= 0;
            });
          n.length < t.length &&
            n.forEach(function (e) {
              !(function (e) {
                'undefined' != typeof document &&
                  document
                    .querySelectorAll('style['.concat(kk, '="').concat(e, '"]'))
                    .forEach(function (e) {
                      var t;
                      e[xk] === Ck &&
                        (null === (t = e.parentNode) ||
                          void 0 === t ||
                          t.removeChild(e));
                    });
              })(e),
                Ik.delete(e);
            });
        }
        var Bk = {
            animationIterationCount: 1,
            borderImageOutset: 1,
            borderImageSlice: 1,
            borderImageWidth: 1,
            boxFlex: 1,
            boxFlexGroup: 1,
            boxOrdinalGroup: 1,
            columnCount: 1,
            columns: 1,
            flex: 1,
            flexGrow: 1,
            flexPositive: 1,
            flexShrink: 1,
            flexNegative: 1,
            flexOrder: 1,
            gridRow: 1,
            gridRowEnd: 1,
            gridRowSpan: 1,
            gridRowStart: 1,
            gridColumn: 1,
            gridColumnEnd: 1,
            gridColumnSpan: 1,
            gridColumnStart: 1,
            msGridRow: 1,
            msGridRowSpan: 1,
            msGridColumn: 1,
            msGridColumnSpan: 1,
            fontWeight: 1,
            lineHeight: 1,
            opacity: 1,
            order: 1,
            orphans: 1,
            tabSize: 1,
            widows: 1,
            zIndex: 1,
            zoom: 1,
            WebkitLineClamp: 1,
            fillOpacity: 1,
            floodOpacity: 1,
            stopOpacity: 1,
            strokeDasharray: 1,
            strokeDashoffset: 1,
            strokeMiterlimit: 1,
            strokeOpacity: 1,
            strokeWidth: 1,
          },
          Vk = 'comm',
          Fk = 'rule',
          Uk = 'decl',
          Hk = Math.abs,
          Gk = String.fromCharCode;
        Object.assign;
        function Wk(e) {
          return e.trim();
        }
        function qk(e, t, n) {
          return e.replace(t, n);
        }
        function Xk(e, t) {
          return e.indexOf(t);
        }
        function Yk(e, t) {
          return 0 | e.charCodeAt(t);
        }
        function Jk(e, t, n) {
          return e.slice(t, n);
        }
        function $k(e) {
          return e.length;
        }
        function Qk(e) {
          return e.length;
        }
        function Kk(e, t) {
          return t.push(e), e;
        }
        function Zk(e, t) {
          for (var n = '', r = Qk(e), i = 0; i < r; i++)
            n += t(e[i], i, e, t) || '';
          return n;
        }
        function ew(e, t, n, r) {
          switch (e.type) {
            case '@import':
            case Uk:
              return (e.return = e.return || e.value);
            case Vk:
              return '';
            case '@keyframes':
              return (e.return = e.value + '{' + Zk(e.children, r) + '}');
            case Fk:
              e.value = e.props.join(',');
          }
          return $k((n = Zk(e.children, r)))
            ? (e.return = e.value + '{' + n + '}')
            : '';
        }
        var tw = 1,
          nw = 1,
          rw = 0,
          iw = 0,
          ow = 0,
          aw = '';
        function sw(e, t, n, r, i, o, a) {
          return {
            value: e,
            root: t,
            parent: n,
            type: r,
            props: i,
            children: o,
            line: tw,
            column: nw,
            length: a,
            return: '',
          };
        }
        function lw() {
          return (
            (ow = iw > 0 ? Yk(aw, --iw) : 0),
            nw--,
            10 === ow && ((nw = 1), tw--),
            ow
          );
        }
        function uw() {
          return (
            (ow = iw < rw ? Yk(aw, iw++) : 0),
            nw++,
            10 === ow && ((nw = 1), tw++),
            ow
          );
        }
        function cw() {
          return Yk(aw, iw);
        }
        function fw() {
          return iw;
        }
        function hw(e, t) {
          return Jk(aw, e, t);
        }
        function dw(e) {
          switch (e) {
            case 0:
            case 9:
            case 10:
            case 13:
            case 32:
              return 5;
            case 33:
            case 43:
            case 44:
            case 47:
            case 62:
            case 64:
            case 126:
            case 59:
            case 123:
            case 125:
              return 4;
            case 58:
              return 3;
            case 34:
            case 39:
            case 40:
            case 91:
              return 2;
            case 41:
            case 93:
              return 1;
          }
          return 0;
        }
        function gw(e) {
          return (tw = nw = 1), (rw = $k((aw = e))), (iw = 0), [];
        }
        function pw(e) {
          return (aw = ''), e;
        }
        function vw(e) {
          return Wk(hw(iw - 1, bw(91 === e ? e + 2 : 40 === e ? e + 1 : e)));
        }
        function yw(e) {
          for (; (ow = cw()) && ow < 33; ) uw();
          return dw(e) > 2 || dw(ow) > 3 ? '' : ' ';
        }
        function mw(e, t) {
          for (
            ;
            --t &&
            uw() &&
            !(
              ow < 48 ||
              ow > 102 ||
              (ow > 57 && ow < 65) ||
              (ow > 70 && ow < 97)
            );

          );
          return hw(e, fw() + (t < 6 && 32 == cw() && 32 == uw()));
        }
        function bw(e) {
          for (; uw(); )
            switch (ow) {
              case e:
                return iw;
              case 34:
              case 39:
                34 !== e && 39 !== e && bw(ow);
                break;
              case 40:
                41 === e && bw(e);
                break;
              case 92:
                uw();
            }
          return iw;
        }
        function kw(e, t) {
          for (; uw() && e + ow !== 57 && (e + ow !== 84 || 47 !== cw()); );
          return '/*' + hw(t, iw - 1) + '*' + Gk(47 === e ? e : uw());
        }
        function ww(e) {
          for (; !dw(cw()); ) uw();
          return hw(e, iw);
        }
        function xw(e) {
          return pw(Cw('', null, null, null, [''], (e = gw(e)), 0, [0], e));
        }
        function Cw(e, t, n, r, i, o, a, s, l) {
          for (
            var u = 0,
              c = 0,
              f = a,
              h = 0,
              d = 0,
              g = 0,
              p = 1,
              v = 1,
              y = 1,
              m = 0,
              b = '',
              k = i,
              w = o,
              x = r,
              C = b;
            v;

          )
            switch (((g = m), (m = uw()))) {
              case 40:
                if (108 != g && 58 == Yk(C, f - 1)) {
                  -1 != Xk((C += qk(vw(m), '&', '&\f')), '&\f') && (y = -1);
                  break;
                }
              case 34:
              case 39:
              case 91:
                C += vw(m);
                break;
              case 9:
              case 10:
              case 13:
              case 32:
                C += yw(g);
                break;
              case 92:
                C += mw(fw() - 1, 7);
                continue;
              case 47:
                switch (cw()) {
                  case 42:
                  case 47:
                    Kk(Ew(kw(uw(), fw()), t, n), l);
                    break;
                  default:
                    C += '/';
                }
                break;
              case 123 * p:
                s[u++] = $k(C) * y;
              case 125 * p:
              case 59:
              case 0:
                switch (m) {
                  case 0:
                  case 125:
                    v = 0;
                  case 59 + c:
                    d > 0 &&
                      $k(C) - f &&
                      Kk(
                        d > 32
                          ? Ow(C + ';', r, n, f - 1)
                          : Ow(qk(C, ' ', '') + ';', r, n, f - 2),
                        l
                      );
                    break;
                  case 59:
                    C += ';';
                  default:
                    if (
                      (Kk(
                        (x = Sw(C, t, n, u, c, i, s, b, (k = []), (w = []), f)),
                        o
                      ),
                      123 === m)
                    )
                      if (0 === c) Cw(C, t, x, x, k, o, f, s, w);
                      else
                        switch (99 === h && 110 === Yk(C, 3) ? 100 : h) {
                          case 100:
                          case 109:
                          case 115:
                            Cw(
                              e,
                              x,
                              x,
                              r &&
                                Kk(
                                  Sw(e, x, x, 0, 0, i, s, b, i, (k = []), f),
                                  w
                                ),
                              i,
                              w,
                              f,
                              s,
                              r ? k : w
                            );
                            break;
                          default:
                            Cw(C, x, x, x, [''], w, 0, s, w);
                        }
                }
                (u = c = d = 0), (p = y = 1), (b = C = ''), (f = a);
                break;
              case 58:
                (f = 1 + $k(C)), (d = g);
              default:
                if (p < 1)
                  if (123 == m) --p;
                  else if (125 == m && 0 == p++ && 125 == lw()) continue;
                switch (((C += Gk(m)), m * p)) {
                  case 38:
                    y = c > 0 ? 1 : ((C += '\f'), -1);
                    break;
                  case 44:
                    (s[u++] = ($k(C) - 1) * y), (y = 1);
                    break;
                  case 64:
                    45 === cw() && (C += vw(uw())),
                      (h = cw()),
                      (c = f = $k((b = C += ww(fw())))),
                      m++;
                    break;
                  case 45:
                    45 === g && 2 == $k(C) && (p = 0);
                }
            }
          return o;
        }
        function Sw(e, t, n, r, i, o, a, s, l, u, c) {
          for (
            var f = i - 1,
              h = 0 === i ? o : [''],
              d = Qk(h),
              g = 0,
              p = 0,
              v = 0;
            g < r;
            ++g
          )
            for (
              var y = 0, m = Jk(e, f + 1, (f = Hk((p = a[g])))), b = e;
              y < d;
              ++y
            )
              (b = Wk(p > 0 ? h[y] + ' ' + m : qk(m, /&\f/g, h[y]))) &&
                (l[v++] = b);
          return sw(e, t, n, 0 === i ? Fk : s, l, u, c);
        }
        function Ew(e, t, n) {
          return sw(e, t, n, Vk, Gk(ow), Jk(e, 2, -2), 0);
        }
        function Ow(e, t, n, r) {
          return sw(e, t, n, Uk, Jk(e, 0, r), Jk(e, r + 1, -1), r);
        }
        var Pw = ry();
        function Aw(e) {
          return Zk(xw(e), ew).replace(/\{%%%\:[^;];}/g, ';');
        }
        function Mw(e) {
          return 'object' === Yv(e) && e && '_skip_check_' in e;
        }
        function Tw(e, t, n) {
          if (!t) return e;
          var r = '.'.concat(t),
            i = 'low' === n ? ':where('.concat(r, ')') : r;
          return e
            .split(',')
            .map(function (e) {
              var t,
                n = e.trim().split(/\s+/),
                r = n[0] || '',
                o =
                  (null === (t = r.match(/^\w+/)) || void 0 === t
                    ? void 0
                    : t[0]) || '';
              return [(r = ''.concat(o).concat(i).concat(r.slice(o.length)))]
                .concat(py(n.slice(1)))
                .join(' ');
            })
            .join(',');
        }
        var Nw = function e(t) {
          var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            r =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : { root: !0, parentSelectors: [] },
            i = r.root,
            o = r.injectHash,
            a = r.parentSelectors,
            s = n.hashId,
            l = n.layer,
            u = (n.path, n.hashPriority),
            c = n.transformers,
            f = void 0 === c ? [] : c,
            h = (n.linters, ''),
            d = {};
          function g(t) {
            var r = t.getName(s);
            if (!d[r]) {
              var i = ny(e(t.style, n, { root: !1, parentSelectors: a }), 1)[0];
              d[r] = '@keyframes '.concat(t.getName(s)).concat(i);
            }
          }
          function p(e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [];
            return (
              e.forEach(function (e) {
                Array.isArray(e) ? p(e, t) : e && t.push(e);
              }),
              t
            );
          }
          var v = p(Array.isArray(t) ? t : [t]);
          if (
            (v.forEach(function (t) {
              var r = 'string' != typeof t || i ? t : {};
              if ('string' == typeof r) h += ''.concat(r, '\n');
              else if (r._keyframe) g(r);
              else {
                var l = f.reduce(function (e, t) {
                  var n;
                  return (
                    (null == t || null === (n = t.visit) || void 0 === n
                      ? void 0
                      : n.call(t, e)) || e
                  );
                }, r);
                Object.keys(l).forEach(function (t) {
                  var r = l[t];
                  if (
                    'object' !== Yv(r) ||
                    !r ||
                    ('animationName' === t && r._keyframe) ||
                    Mw(r)
                  ) {
                    var c,
                      f =
                        null !== (c = null == r ? void 0 : r.value) &&
                        void 0 !== c
                          ? c
                          : r;
                    0;
                    var p = t.replace(/[A-Z]/g, function (e) {
                        return '-'.concat(e.toLowerCase());
                      }),
                      v = f;
                    Bk[t] ||
                      'number' != typeof v ||
                      0 === v ||
                      (v = ''.concat(v, 'px')),
                      'animationName' === t &&
                        null != r &&
                        r._keyframe &&
                        (g(r), (v = r.getName(s))),
                      (h += ''.concat(p, ':').concat(v, ';'));
                  } else {
                    var y = !1,
                      m = t.trim(),
                      b = !1;
                    (i || o) && s
                      ? m.startsWith('@')
                        ? (y = !0)
                        : (m = Tw(t, s, u))
                      : !i ||
                        s ||
                        ('&' !== m && '' !== m) ||
                        ((m = ''), (b = !0));
                    var k = ny(
                        e(r, n, {
                          root: b,
                          injectHash: y,
                          parentSelectors: [].concat(py(a), [m]),
                        }),
                        2
                      ),
                      w = k[0],
                      x = k[1];
                    (d = Kv(Kv({}, d), x)), (h += ''.concat(m).concat(w));
                  }
                });
              }
            }),
            i)
          ) {
            if (l && Rk()) {
              var y = l.split(','),
                m = y[y.length - 1].trim();
              (h = '@layer '.concat(m, ' {').concat(h, '}')),
                y.length > 1 && (h = '@layer '.concat(l, '{%%%:%}').concat(h));
            }
          } else h = '{'.concat(h, '}');
          return [h, d];
        };
        function jw() {
          return null;
        }
        function Lw(e, t) {
          var n = e.token,
            r = e.path,
            i = e.hashId,
            o = e.layer,
            a = e.nonce,
            s = S.useContext(Ok),
            l = s.autoClear,
            u = (s.mock, s.defaultCache),
            c = s.hashPriority,
            f = s.container,
            h = s.ssrInline,
            d = s.transformers,
            g = s.linters,
            p = n._tokenKey,
            v = [p].concat(py(r)),
            y = Pw;
          var m = Ak(
              'style',
              v,
              function () {
                var e = t(),
                  n = ny(
                    Nw(e, {
                      hashId: i,
                      hashPriority: c,
                      layer: o,
                      path: r.join('-'),
                      transformers: d,
                      linters: g,
                    }),
                    2
                  ),
                  s = n[0],
                  l = n[1],
                  u = Aw(s),
                  h = (function (e, t) {
                    return yk(''.concat(e.join('%')).concat(t));
                  })(v, u);
                if (y) {
                  var m = { mark: wk, prepend: 'queue', attachTo: f },
                    b = 'function' == typeof a ? a() : a;
                  b && (m.csp = { nonce: b });
                  var k = jy(u, h, m);
                  (k[xk] = Ck),
                    k.setAttribute(kk, p),
                    Object.keys(l).forEach(function (e) {
                      jy(Aw(l[e]), '_effect-'.concat(e), m);
                    });
                }
                return [u, p, h];
              },
              function (e, t) {
                var n = ny(e, 3)[2];
                (t || l) && Pw && Ty(n, { mark: wk });
              }
            ),
            b = ny(m, 3),
            k = b[0],
            w = b[1],
            x = b[2];
          return function (e) {
            var t, n;
            h && !y && u
              ? (t = S.createElement(
                  'style',
                  Xv({}, ($v((n = {}), kk, w), $v(n, wk, x), n), {
                    dangerouslySetInnerHTML: { __html: k },
                  })
                ))
              : (t = S.createElement(jw, null));
            return S.createElement(S.Fragment, null, t, e);
          };
        }
        var Rw = (function () {
            function e(t, n) {
              gm(this, e),
                $v(this, 'name', void 0),
                $v(this, 'style', void 0),
                $v(this, '_keyframe', !0),
                (this.name = t),
                (this.style = n);
            }
            return (
              vm(e, [
                {
                  key: 'getName',
                  value: function () {
                    var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : '';
                    return e ? ''.concat(e, '-').concat(this.name) : this.name;
                  },
                },
              ]),
              e
            );
          })(),
          _w = Rw;
        var Iw = (function () {
          function e() {
            gm(this, e),
              $v(this, 'cache', void 0),
              $v(this, 'keys', void 0),
              $v(this, 'cacheCallTimes', void 0),
              (this.cache = new Map()),
              (this.keys = []),
              (this.cacheCallTimes = 0);
          }
          return (
            vm(e, [
              {
                key: 'size',
                value: function () {
                  return this.keys.length;
                },
              },
              {
                key: 'internalGet',
                value: function (e) {
                  var t,
                    n,
                    r =
                      arguments.length > 1 &&
                      void 0 !== arguments[1] &&
                      arguments[1],
                    i = { map: this.cache };
                  return (
                    e.forEach(function (e) {
                      var t, n;
                      i
                        ? (i =
                            null === (t = i) ||
                            void 0 === t ||
                            null === (n = t.map) ||
                            void 0 === n
                              ? void 0
                              : n.get(e))
                        : (i = void 0);
                    }),
                    null !== (t = i) &&
                      void 0 !== t &&
                      t.value &&
                      r &&
                      (i.value[1] = this.cacheCallTimes++),
                    null === (n = i) || void 0 === n ? void 0 : n.value
                  );
                },
              },
              {
                key: 'get',
                value: function (e) {
                  var t;
                  return null === (t = this.internalGet(e, !0)) || void 0 === t
                    ? void 0
                    : t[0];
                },
              },
              {
                key: 'has',
                value: function (e) {
                  return !!this.internalGet(e);
                },
              },
              {
                key: 'set',
                value: function (t, n) {
                  var r = this;
                  if (!this.has(t)) {
                    if (
                      this.size() + 1 >
                      e.MAX_CACHE_SIZE + e.MAX_CACHE_OFFSET
                    ) {
                      var i = this.keys.reduce(
                          function (e, t) {
                            var n = ny(e, 2)[1];
                            return r.internalGet(t)[1] < n
                              ? [t, r.internalGet(t)[1]]
                              : e;
                          },
                          [this.keys[0], this.cacheCallTimes]
                        ),
                        o = ny(i, 1)[0];
                      this.delete(o);
                    }
                    this.keys.push(t);
                  }
                  var a = this.cache;
                  t.forEach(function (e, i) {
                    if (i === t.length - 1)
                      a.set(e, { value: [n, r.cacheCallTimes++] });
                    else {
                      var o = a.get(e);
                      o
                        ? o.map || (o.map = new Map())
                        : a.set(e, { map: new Map() }),
                        (a = a.get(e).map);
                    }
                  });
                },
              },
              {
                key: 'deleteByPath',
                value: function (e, t) {
                  var n,
                    r = e.get(t[0]);
                  if (1 === t.length)
                    return (
                      r.map ? e.set(t[0], { map: r.map }) : e.delete(t[0]),
                      null === (n = r.value) || void 0 === n ? void 0 : n[0]
                    );
                  var i = this.deleteByPath(r.map, t.slice(1));
                  return (
                    (r.map && 0 !== r.map.size) || r.value || e.delete(t[0]), i
                  );
                },
              },
              {
                key: 'delete',
                value: function (e) {
                  if (this.has(e))
                    return (
                      (this.keys = this.keys.filter(function (t) {
                        return !(function (e, t) {
                          if (e.length !== t.length) return !1;
                          for (var n = 0; n < e.length; n++)
                            if (e[n] !== t[n]) return !1;
                          return !0;
                        })(t, e);
                      })),
                      this.deleteByPath(this.cache, e)
                    );
                },
              },
            ]),
            e
          );
        })();
        $v(Iw, 'MAX_CACHE_SIZE', 20), $v(Iw, 'MAX_CACHE_OFFSET', 5);
        var Dw = 0,
          zw = (function () {
            function e(t) {
              gm(this, e),
                $v(this, 'derivatives', void 0),
                $v(this, 'id', void 0),
                (this.derivatives = Array.isArray(t) ? t : [t]),
                (this.id = Dw),
                0 === t.length && oy(t.length),
                (Dw += 1);
            }
            return (
              vm(e, [
                {
                  key: 'getDerivativeToken',
                  value: function (e) {
                    return this.derivatives.reduce(function (t, n) {
                      return n(e, t);
                    }, void 0);
                  },
                },
              ]),
              e
            );
          })(),
          Bw = new Iw();
        function Vw(e) {
          return (e.notSplit = !0), e;
        }
        Vw(['borderTop', 'borderBottom']),
          Vw(['borderTop']),
          Vw(['borderBottom']),
          Vw(['borderLeft', 'borderRight']),
          Vw(['borderLeft']),
          Vw(['borderRight']);
        function Fw(e, t) {
          (function (e) {
            return (
              'string' == typeof e &&
              -1 !== e.indexOf('.') &&
              1 === parseFloat(e)
            );
          })(e) && (e = '100%');
          var n = (function (e) {
            return 'string' == typeof e && -1 !== e.indexOf('%');
          })(e);
          return (
            (e = 360 === t ? e : Math.min(t, Math.max(0, parseFloat(e)))),
            n && (e = parseInt(String(e * t), 10) / 100),
            Math.abs(e - t) < 1e-6
              ? 1
              : (e =
                  360 === t
                    ? (e < 0 ? (e % t) + t : e % t) / parseFloat(String(t))
                    : (e % t) / parseFloat(String(t)))
          );
        }
        function Uw(e) {
          return Math.min(1, Math.max(0, e));
        }
        function Hw(e) {
          return (
            (e = parseFloat(e)), (isNaN(e) || e < 0 || e > 1) && (e = 1), e
          );
        }
        function Gw(e) {
          return e <= 1 ? ''.concat(100 * Number(e), '%') : e;
        }
        function Ww(e) {
          return 1 === e.length ? '0' + e : String(e);
        }
        function qw(e, t, n) {
          (e = Fw(e, 255)), (t = Fw(t, 255)), (n = Fw(n, 255));
          var r = Math.max(e, t, n),
            i = Math.min(e, t, n),
            o = 0,
            a = 0,
            s = (r + i) / 2;
          if (r === i) (a = 0), (o = 0);
          else {
            var l = r - i;
            switch (((a = s > 0.5 ? l / (2 - r - i) : l / (r + i)), r)) {
              case e:
                o = (t - n) / l + (t < n ? 6 : 0);
                break;
              case t:
                o = (n - e) / l + 2;
                break;
              case n:
                o = (e - t) / l + 4;
            }
            o /= 6;
          }
          return { h: o, s: a, l: s };
        }
        function Xw(e, t, n) {
          return (
            n < 0 && (n += 1),
            n > 1 && (n -= 1),
            n < 1 / 6
              ? e + 6 * n * (t - e)
              : n < 0.5
              ? t
              : n < 2 / 3
              ? e + (t - e) * (2 / 3 - n) * 6
              : e
          );
        }
        function Yw(e, t, n) {
          (e = Fw(e, 255)), (t = Fw(t, 255)), (n = Fw(n, 255));
          var r = Math.max(e, t, n),
            i = Math.min(e, t, n),
            o = 0,
            a = r,
            s = r - i,
            l = 0 === r ? 0 : s / r;
          if (r === i) o = 0;
          else {
            switch (r) {
              case e:
                o = (t - n) / s + (t < n ? 6 : 0);
                break;
              case t:
                o = (n - e) / s + 2;
                break;
              case n:
                o = (e - t) / s + 4;
            }
            o /= 6;
          }
          return { h: o, s: l, v: a };
        }
        function Jw(e, t, n, r) {
          var i = [
            Ww(Math.round(e).toString(16)),
            Ww(Math.round(t).toString(16)),
            Ww(Math.round(n).toString(16)),
          ];
          return r &&
            i[0].startsWith(i[0].charAt(1)) &&
            i[1].startsWith(i[1].charAt(1)) &&
            i[2].startsWith(i[2].charAt(1))
            ? i[0].charAt(0) + i[1].charAt(0) + i[2].charAt(0)
            : i.join('');
        }
        function $w(e) {
          return Math.round(255 * parseFloat(e)).toString(16);
        }
        function Qw(e) {
          return Kw(e) / 255;
        }
        function Kw(e) {
          return parseInt(e, 16);
        }
        var Zw = {
          aliceblue: '#f0f8ff',
          antiquewhite: '#faebd7',
          aqua: '#00ffff',
          aquamarine: '#7fffd4',
          azure: '#f0ffff',
          beige: '#f5f5dc',
          bisque: '#ffe4c4',
          black: '#000000',
          blanchedalmond: '#ffebcd',
          blue: '#0000ff',
          blueviolet: '#8a2be2',
          brown: '#a52a2a',
          burlywood: '#deb887',
          cadetblue: '#5f9ea0',
          chartreuse: '#7fff00',
          chocolate: '#d2691e',
          coral: '#ff7f50',
          cornflowerblue: '#6495ed',
          cornsilk: '#fff8dc',
          crimson: '#dc143c',
          cyan: '#00ffff',
          darkblue: '#00008b',
          darkcyan: '#008b8b',
          darkgoldenrod: '#b8860b',
          darkgray: '#a9a9a9',
          darkgreen: '#006400',
          darkgrey: '#a9a9a9',
          darkkhaki: '#bdb76b',
          darkmagenta: '#8b008b',
          darkolivegreen: '#556b2f',
          darkorange: '#ff8c00',
          darkorchid: '#9932cc',
          darkred: '#8b0000',
          darksalmon: '#e9967a',
          darkseagreen: '#8fbc8f',
          darkslateblue: '#483d8b',
          darkslategray: '#2f4f4f',
          darkslategrey: '#2f4f4f',
          darkturquoise: '#00ced1',
          darkviolet: '#9400d3',
          deeppink: '#ff1493',
          deepskyblue: '#00bfff',
          dimgray: '#696969',
          dimgrey: '#696969',
          dodgerblue: '#1e90ff',
          firebrick: '#b22222',
          floralwhite: '#fffaf0',
          forestgreen: '#228b22',
          fuchsia: '#ff00ff',
          gainsboro: '#dcdcdc',
          ghostwhite: '#f8f8ff',
          goldenrod: '#daa520',
          gold: '#ffd700',
          gray: '#808080',
          green: '#008000',
          greenyellow: '#adff2f',
          grey: '#808080',
          honeydew: '#f0fff0',
          hotpink: '#ff69b4',
          indianred: '#cd5c5c',
          indigo: '#4b0082',
          ivory: '#fffff0',
          khaki: '#f0e68c',
          lavenderblush: '#fff0f5',
          lavender: '#e6e6fa',
          lawngreen: '#7cfc00',
          lemonchiffon: '#fffacd',
          lightblue: '#add8e6',
          lightcoral: '#f08080',
          lightcyan: '#e0ffff',
          lightgoldenrodyellow: '#fafad2',
          lightgray: '#d3d3d3',
          lightgreen: '#90ee90',
          lightgrey: '#d3d3d3',
          lightpink: '#ffb6c1',
          lightsalmon: '#ffa07a',
          lightseagreen: '#20b2aa',
          lightskyblue: '#87cefa',
          lightslategray: '#778899',
          lightslategrey: '#778899',
          lightsteelblue: '#b0c4de',
          lightyellow: '#ffffe0',
          lime: '#00ff00',
          limegreen: '#32cd32',
          linen: '#faf0e6',
          magenta: '#ff00ff',
          maroon: '#800000',
          mediumaquamarine: '#66cdaa',
          mediumblue: '#0000cd',
          mediumorchid: '#ba55d3',
          mediumpurple: '#9370db',
          mediumseagreen: '#3cb371',
          mediumslateblue: '#7b68ee',
          mediumspringgreen: '#00fa9a',
          mediumturquoise: '#48d1cc',
          mediumvioletred: '#c71585',
          midnightblue: '#191970',
          mintcream: '#f5fffa',
          mistyrose: '#ffe4e1',
          moccasin: '#ffe4b5',
          navajowhite: '#ffdead',
          navy: '#000080',
          oldlace: '#fdf5e6',
          olive: '#808000',
          olivedrab: '#6b8e23',
          orange: '#ffa500',
          orangered: '#ff4500',
          orchid: '#da70d6',
          palegoldenrod: '#eee8aa',
          palegreen: '#98fb98',
          paleturquoise: '#afeeee',
          palevioletred: '#db7093',
          papayawhip: '#ffefd5',
          peachpuff: '#ffdab9',
          peru: '#cd853f',
          pink: '#ffc0cb',
          plum: '#dda0dd',
          powderblue: '#b0e0e6',
          purple: '#800080',
          rebeccapurple: '#663399',
          red: '#ff0000',
          rosybrown: '#bc8f8f',
          royalblue: '#4169e1',
          saddlebrown: '#8b4513',
          salmon: '#fa8072',
          sandybrown: '#f4a460',
          seagreen: '#2e8b57',
          seashell: '#fff5ee',
          sienna: '#a0522d',
          silver: '#c0c0c0',
          skyblue: '#87ceeb',
          slateblue: '#6a5acd',
          slategray: '#708090',
          slategrey: '#708090',
          snow: '#fffafa',
          springgreen: '#00ff7f',
          steelblue: '#4682b4',
          tan: '#d2b48c',
          teal: '#008080',
          thistle: '#d8bfd8',
          tomato: '#ff6347',
          turquoise: '#40e0d0',
          violet: '#ee82ee',
          wheat: '#f5deb3',
          white: '#ffffff',
          whitesmoke: '#f5f5f5',
          yellow: '#ffff00',
          yellowgreen: '#9acd32',
        };
        function ex(e) {
          var t,
            n,
            r,
            i = { r: 0, g: 0, b: 0 },
            o = 1,
            a = null,
            s = null,
            l = null,
            u = !1,
            c = !1;
          return (
            'string' == typeof e &&
              (e = (function (e) {
                if (((e = e.trim().toLowerCase()), 0 === e.length)) return !1;
                var t = !1;
                if (Zw[e]) (e = Zw[e]), (t = !0);
                else if ('transparent' === e)
                  return { r: 0, g: 0, b: 0, a: 0, format: 'name' };
                var n = ix.rgb.exec(e);
                if (n) return { r: n[1], g: n[2], b: n[3] };
                if (((n = ix.rgba.exec(e)), n))
                  return { r: n[1], g: n[2], b: n[3], a: n[4] };
                if (((n = ix.hsl.exec(e)), n))
                  return { h: n[1], s: n[2], l: n[3] };
                if (((n = ix.hsla.exec(e)), n))
                  return { h: n[1], s: n[2], l: n[3], a: n[4] };
                if (((n = ix.hsv.exec(e)), n))
                  return { h: n[1], s: n[2], v: n[3] };
                if (((n = ix.hsva.exec(e)), n))
                  return { h: n[1], s: n[2], v: n[3], a: n[4] };
                if (((n = ix.hex8.exec(e)), n))
                  return {
                    r: Kw(n[1]),
                    g: Kw(n[2]),
                    b: Kw(n[3]),
                    a: Qw(n[4]),
                    format: t ? 'name' : 'hex8',
                  };
                if (((n = ix.hex6.exec(e)), n))
                  return {
                    r: Kw(n[1]),
                    g: Kw(n[2]),
                    b: Kw(n[3]),
                    format: t ? 'name' : 'hex',
                  };
                if (((n = ix.hex4.exec(e)), n))
                  return {
                    r: Kw(n[1] + n[1]),
                    g: Kw(n[2] + n[2]),
                    b: Kw(n[3] + n[3]),
                    a: Qw(n[4] + n[4]),
                    format: t ? 'name' : 'hex8',
                  };
                if (((n = ix.hex3.exec(e)), n))
                  return {
                    r: Kw(n[1] + n[1]),
                    g: Kw(n[2] + n[2]),
                    b: Kw(n[3] + n[3]),
                    format: t ? 'name' : 'hex',
                  };
                return !1;
              })(e)),
            'object' === _()(e) &&
              (ox(e.r) && ox(e.g) && ox(e.b)
                ? ((t = e.r),
                  (n = e.g),
                  (r = e.b),
                  (i = {
                    r: 255 * Fw(t, 255),
                    g: 255 * Fw(n, 255),
                    b: 255 * Fw(r, 255),
                  }),
                  (u = !0),
                  (c = '%' === String(e.r).substr(-1) ? 'prgb' : 'rgb'))
                : ox(e.h) && ox(e.s) && ox(e.v)
                ? ((a = Gw(e.s)),
                  (s = Gw(e.v)),
                  (i = (function (e, t, n) {
                    (e = 6 * Fw(e, 360)), (t = Fw(t, 100)), (n = Fw(n, 100));
                    var r = Math.floor(e),
                      i = e - r,
                      o = n * (1 - t),
                      a = n * (1 - i * t),
                      s = n * (1 - (1 - i) * t),
                      l = r % 6;
                    return {
                      r: 255 * [n, a, o, o, s, n][l],
                      g: 255 * [s, n, n, a, o, o][l],
                      b: 255 * [o, o, s, n, n, a][l],
                    };
                  })(e.h, a, s)),
                  (u = !0),
                  (c = 'hsv'))
                : ox(e.h) &&
                  ox(e.s) &&
                  ox(e.l) &&
                  ((a = Gw(e.s)),
                  (l = Gw(e.l)),
                  (i = (function (e, t, n) {
                    var r, i, o;
                    if (
                      ((e = Fw(e, 360)),
                      (t = Fw(t, 100)),
                      (n = Fw(n, 100)),
                      0 === t)
                    )
                      (i = n), (o = n), (r = n);
                    else {
                      var a = n < 0.5 ? n * (1 + t) : n + t - n * t,
                        s = 2 * n - a;
                      (r = Xw(s, a, e + 1 / 3)),
                        (i = Xw(s, a, e)),
                        (o = Xw(s, a, e - 1 / 3));
                    }
                    return { r: 255 * r, g: 255 * i, b: 255 * o };
                  })(e.h, a, l)),
                  (u = !0),
                  (c = 'hsl')),
              Object.prototype.hasOwnProperty.call(e, 'a') && (o = e.a)),
            (o = Hw(o)),
            {
              ok: u,
              format: e.format || c,
              r: Math.min(255, Math.max(i.r, 0)),
              g: Math.min(255, Math.max(i.g, 0)),
              b: Math.min(255, Math.max(i.b, 0)),
              a: o,
            }
          );
        }
        var tx = '(?:'
            .concat('[-\\+]?\\d*\\.\\d+%?', ')|(?:')
            .concat('[-\\+]?\\d+%?', ')'),
          nx = '[\\s|\\(]+('
            .concat(tx, ')[,|\\s]+(')
            .concat(tx, ')[,|\\s]+(')
            .concat(tx, ')\\s*\\)?'),
          rx = '[\\s|\\(]+('
            .concat(tx, ')[,|\\s]+(')
            .concat(tx, ')[,|\\s]+(')
            .concat(tx, ')[,|\\s]+(')
            .concat(tx, ')\\s*\\)?'),
          ix = {
            CSS_UNIT: new RegExp(tx),
            rgb: new RegExp('rgb' + nx),
            rgba: new RegExp('rgba' + rx),
            hsl: new RegExp('hsl' + nx),
            hsla: new RegExp('hsla' + rx),
            hsv: new RegExp('hsv' + nx),
            hsva: new RegExp('hsva' + rx),
            hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
            hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
            hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
            hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
          };
        function ox(e) {
          return Boolean(ix.CSS_UNIT.exec(String(e)));
        }
        var ax = [
          { index: 7, opacity: 0.15 },
          { index: 6, opacity: 0.25 },
          { index: 5, opacity: 0.3 },
          { index: 5, opacity: 0.45 },
          { index: 5, opacity: 0.65 },
          { index: 5, opacity: 0.85 },
          { index: 4, opacity: 0.9 },
          { index: 3, opacity: 0.95 },
          { index: 2, opacity: 0.97 },
          { index: 1, opacity: 0.98 },
        ];
        function sx(e) {
          var t = Yw(e.r, e.g, e.b);
          return { h: 360 * t.h, s: t.s, v: t.v };
        }
        function lx(e) {
          var t = e.r,
            n = e.g,
            r = e.b;
          return '#'.concat(Jw(t, n, r, !1));
        }
        function ux(e, t, n) {
          var r = n / 100;
          return {
            r: (t.r - e.r) * r + e.r,
            g: (t.g - e.g) * r + e.g,
            b: (t.b - e.b) * r + e.b,
          };
        }
        function cx(e, t, n) {
          var r;
          return (
            (r =
              Math.round(e.h) >= 60 && Math.round(e.h) <= 240
                ? n
                  ? Math.round(e.h) - 2 * t
                  : Math.round(e.h) + 2 * t
                : n
                ? Math.round(e.h) + 2 * t
                : Math.round(e.h) - 2 * t) < 0
              ? (r += 360)
              : r >= 360 && (r -= 360),
            r
          );
        }
        function fx(e, t, n) {
          return 0 === e.h && 0 === e.s
            ? e.s
            : ((r = n
                ? e.s - 0.16 * t
                : 4 === t
                ? e.s + 0.16
                : e.s + 0.05 * t) > 1 && (r = 1),
              n && 5 === t && r > 0.1 && (r = 0.1),
              r < 0.06 && (r = 0.06),
              Number(r.toFixed(2)));
          var r;
        }
        function hx(e, t, n) {
          var r;
          return (
            (r = n ? e.v + 0.05 * t : e.v - 0.15 * t) > 1 && (r = 1),
            Number(r.toFixed(2))
          );
        }
        function dx(e) {
          for (
            var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {},
              n = [],
              r = ex(e),
              i = 5;
            i > 0;
            i -= 1
          ) {
            var o = sx(r),
              a = lx(ex({ h: cx(o, i, !0), s: fx(o, i, !0), v: hx(o, i, !0) }));
            n.push(a);
          }
          n.push(lx(r));
          for (var s = 1; s <= 4; s += 1) {
            var l = sx(r),
              u = lx(ex({ h: cx(l, s), s: fx(l, s), v: hx(l, s) }));
            n.push(u);
          }
          return 'dark' === t.theme
            ? ax.map(function (e) {
                var r = e.index,
                  i = e.opacity;
                return lx(
                  ux(ex(t.backgroundColor || '#141414'), ex(n[r]), 100 * i)
                );
              })
            : n;
        }
        var gx = {
            red: '#F5222D',
            volcano: '#FA541C',
            orange: '#FA8C16',
            gold: '#FAAD14',
            yellow: '#FADB14',
            lime: '#A0D911',
            green: '#52C41A',
            cyan: '#13C2C2',
            blue: '#1677FF',
            geekblue: '#2F54EB',
            purple: '#722ED1',
            magenta: '#EB2F96',
            grey: '#666666',
          },
          px = {},
          vx = {};
        Object.keys(gx).forEach(function (e) {
          (px[e] = dx(gx[e])),
            (px[e].primary = px[e][5]),
            (vx[e] = dx(gx[e], { theme: 'dark', backgroundColor: '#141414' })),
            (vx[e].primary = vx[e][5]);
        });
        px.red,
          px.volcano,
          px.gold,
          px.orange,
          px.yellow,
          px.lime,
          px.green,
          px.cyan,
          px.blue,
          px.geekblue,
          px.purple,
          px.magenta,
          px.grey,
          px.grey;
        var yx = function (e) {
          var t = e.controlHeight;
          return {
            controlHeightSM: 0.75 * t,
            controlHeightXS: 0.5 * t,
            controlHeightLG: 1.25 * t,
          };
        };
        var mx = {
            blue: '#1677ff',
            purple: '#722ED1',
            cyan: '#13C2C2',
            green: '#52C41A',
            magenta: '#EB2F96',
            pink: '#eb2f96',
            red: '#F5222D',
            orange: '#FA8C16',
            yellow: '#FADB14',
            volcano: '#FA541C',
            geekblue: '#2F54EB',
            gold: '#FAAD14',
            lime: '#A0D911',
          },
          bx = Object.assign(Object.assign({}, mx), {
            colorPrimary: '#1677ff',
            colorSuccess: '#52c41a',
            colorWarning: '#faad14',
            colorError: '#ff4d4f',
            colorInfo: '#1677ff',
            colorTextBase: '',
            colorBgBase: '',
            fontFamily:
              "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial,\n'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',\n'Noto Color Emoji'",
            fontFamilyCode:
              "'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace",
            fontSize: 14,
            lineWidth: 1,
            lineType: 'solid',
            motionUnit: 0.1,
            motionBase: 0,
            motionEaseOutCirc: 'cubic-bezier(0.08, 0.82, 0.17, 1)',
            motionEaseInOutCirc: 'cubic-bezier(0.78, 0.14, 0.15, 0.86)',
            motionEaseOut: 'cubic-bezier(0.215, 0.61, 0.355, 1)',
            motionEaseInOut: 'cubic-bezier(0.645, 0.045, 0.355, 1)',
            motionEaseOutBack: 'cubic-bezier(0.12, 0.4, 0.29, 1.46)',
            motionEaseInBack: 'cubic-bezier(0.71, -0.46, 0.88, 0.6)',
            motionEaseInQuint: 'cubic-bezier(0.755, 0.05, 0.855, 0.06)',
            motionEaseOutQuint: 'cubic-bezier(0.23, 1, 0.32, 1)',
            borderRadius: 6,
            sizeUnit: 4,
            sizeStep: 4,
            sizePopupArrow: 16,
            controlHeight: 32,
            zIndexBase: 0,
            zIndexPopupBase: 1e3,
            opacityImage: 1,
            wireframe: !1,
          }),
          kx = (function () {
            function e(t, n) {
              var r;
              if (
                (void 0 === t && (t = ''),
                void 0 === n && (n = {}),
                t instanceof e)
              )
                return t;
              'number' == typeof t &&
                (t = (function (e) {
                  return { r: e >> 16, g: (65280 & e) >> 8, b: 255 & e };
                })(t)),
                (this.originalInput = t);
              var i = ex(t);
              (this.originalInput = t),
                (this.r = i.r),
                (this.g = i.g),
                (this.b = i.b),
                (this.a = i.a),
                (this.roundA = Math.round(100 * this.a) / 100),
                (this.format =
                  null !== (r = n.format) && void 0 !== r ? r : i.format),
                (this.gradientType = n.gradientType),
                this.r < 1 && (this.r = Math.round(this.r)),
                this.g < 1 && (this.g = Math.round(this.g)),
                this.b < 1 && (this.b = Math.round(this.b)),
                (this.isValid = i.ok);
            }
            return (
              (e.prototype.isDark = function () {
                return this.getBrightness() < 128;
              }),
              (e.prototype.isLight = function () {
                return !this.isDark();
              }),
              (e.prototype.getBrightness = function () {
                var e = this.toRgb();
                return (299 * e.r + 587 * e.g + 114 * e.b) / 1e3;
              }),
              (e.prototype.getLuminance = function () {
                var e = this.toRgb(),
                  t = e.r / 255,
                  n = e.g / 255,
                  r = e.b / 255;
                return (
                  0.2126 *
                    (t <= 0.03928
                      ? t / 12.92
                      : Math.pow((t + 0.055) / 1.055, 2.4)) +
                  0.7152 *
                    (n <= 0.03928
                      ? n / 12.92
                      : Math.pow((n + 0.055) / 1.055, 2.4)) +
                  0.0722 *
                    (r <= 0.03928
                      ? r / 12.92
                      : Math.pow((r + 0.055) / 1.055, 2.4))
                );
              }),
              (e.prototype.getAlpha = function () {
                return this.a;
              }),
              (e.prototype.setAlpha = function (e) {
                return (
                  (this.a = Hw(e)),
                  (this.roundA = Math.round(100 * this.a) / 100),
                  this
                );
              }),
              (e.prototype.isMonochrome = function () {
                return 0 === this.toHsl().s;
              }),
              (e.prototype.toHsv = function () {
                var e = Yw(this.r, this.g, this.b);
                return { h: 360 * e.h, s: e.s, v: e.v, a: this.a };
              }),
              (e.prototype.toHsvString = function () {
                var e = Yw(this.r, this.g, this.b),
                  t = Math.round(360 * e.h),
                  n = Math.round(100 * e.s),
                  r = Math.round(100 * e.v);
                return 1 === this.a
                  ? 'hsv('.concat(t, ', ').concat(n, '%, ').concat(r, '%)')
                  : 'hsva('
                      .concat(t, ', ')
                      .concat(n, '%, ')
                      .concat(r, '%, ')
                      .concat(this.roundA, ')');
              }),
              (e.prototype.toHsl = function () {
                var e = qw(this.r, this.g, this.b);
                return { h: 360 * e.h, s: e.s, l: e.l, a: this.a };
              }),
              (e.prototype.toHslString = function () {
                var e = qw(this.r, this.g, this.b),
                  t = Math.round(360 * e.h),
                  n = Math.round(100 * e.s),
                  r = Math.round(100 * e.l);
                return 1 === this.a
                  ? 'hsl('.concat(t, ', ').concat(n, '%, ').concat(r, '%)')
                  : 'hsla('
                      .concat(t, ', ')
                      .concat(n, '%, ')
                      .concat(r, '%, ')
                      .concat(this.roundA, ')');
              }),
              (e.prototype.toHex = function (e) {
                return void 0 === e && (e = !1), Jw(this.r, this.g, this.b, e);
              }),
              (e.prototype.toHexString = function (e) {
                return void 0 === e && (e = !1), '#' + this.toHex(e);
              }),
              (e.prototype.toHex8 = function (e) {
                return (
                  void 0 === e && (e = !1),
                  (function (e, t, n, r, i) {
                    var o = [
                      Ww(Math.round(e).toString(16)),
                      Ww(Math.round(t).toString(16)),
                      Ww(Math.round(n).toString(16)),
                      Ww($w(r)),
                    ];
                    return i &&
                      o[0].startsWith(o[0].charAt(1)) &&
                      o[1].startsWith(o[1].charAt(1)) &&
                      o[2].startsWith(o[2].charAt(1)) &&
                      o[3].startsWith(o[3].charAt(1))
                      ? o[0].charAt(0) +
                          o[1].charAt(0) +
                          o[2].charAt(0) +
                          o[3].charAt(0)
                      : o.join('');
                  })(this.r, this.g, this.b, this.a, e)
                );
              }),
              (e.prototype.toHex8String = function (e) {
                return void 0 === e && (e = !1), '#' + this.toHex8(e);
              }),
              (e.prototype.toHexShortString = function (e) {
                return (
                  void 0 === e && (e = !1),
                  1 === this.a ? this.toHexString(e) : this.toHex8String(e)
                );
              }),
              (e.prototype.toRgb = function () {
                return {
                  r: Math.round(this.r),
                  g: Math.round(this.g),
                  b: Math.round(this.b),
                  a: this.a,
                };
              }),
              (e.prototype.toRgbString = function () {
                var e = Math.round(this.r),
                  t = Math.round(this.g),
                  n = Math.round(this.b);
                return 1 === this.a
                  ? 'rgb('.concat(e, ', ').concat(t, ', ').concat(n, ')')
                  : 'rgba('
                      .concat(e, ', ')
                      .concat(t, ', ')
                      .concat(n, ', ')
                      .concat(this.roundA, ')');
              }),
              (e.prototype.toPercentageRgb = function () {
                var e = function (e) {
                  return ''.concat(Math.round(100 * Fw(e, 255)), '%');
                };
                return { r: e(this.r), g: e(this.g), b: e(this.b), a: this.a };
              }),
              (e.prototype.toPercentageRgbString = function () {
                var e = function (e) {
                  return Math.round(100 * Fw(e, 255));
                };
                return 1 === this.a
                  ? 'rgb('
                      .concat(e(this.r), '%, ')
                      .concat(e(this.g), '%, ')
                      .concat(e(this.b), '%)')
                  : 'rgba('
                      .concat(e(this.r), '%, ')
                      .concat(e(this.g), '%, ')
                      .concat(e(this.b), '%, ')
                      .concat(this.roundA, ')');
              }),
              (e.prototype.toName = function () {
                if (0 === this.a) return 'transparent';
                if (this.a < 1) return !1;
                for (
                  var e = '#' + Jw(this.r, this.g, this.b, !1),
                    t = 0,
                    n = Object.entries(Zw);
                  t < n.length;
                  t++
                ) {
                  var r = n[t],
                    i = r[0];
                  if (e === r[1]) return i;
                }
                return !1;
              }),
              (e.prototype.toString = function (e) {
                var t = Boolean(e);
                e = null != e ? e : this.format;
                var n = !1,
                  r = this.a < 1 && this.a >= 0;
                return t || !r || (!e.startsWith('hex') && 'name' !== e)
                  ? ('rgb' === e && (n = this.toRgbString()),
                    'prgb' === e && (n = this.toPercentageRgbString()),
                    ('hex' !== e && 'hex6' !== e) || (n = this.toHexString()),
                    'hex3' === e && (n = this.toHexString(!0)),
                    'hex4' === e && (n = this.toHex8String(!0)),
                    'hex8' === e && (n = this.toHex8String()),
                    'name' === e && (n = this.toName()),
                    'hsl' === e && (n = this.toHslString()),
                    'hsv' === e && (n = this.toHsvString()),
                    n || this.toHexString())
                  : 'name' === e && 0 === this.a
                  ? this.toName()
                  : this.toRgbString();
              }),
              (e.prototype.toNumber = function () {
                return (
                  (Math.round(this.r) << 16) +
                  (Math.round(this.g) << 8) +
                  Math.round(this.b)
                );
              }),
              (e.prototype.clone = function () {
                return new e(this.toString());
              }),
              (e.prototype.lighten = function (t) {
                void 0 === t && (t = 10);
                var n = this.toHsl();
                return (n.l += t / 100), (n.l = Uw(n.l)), new e(n);
              }),
              (e.prototype.brighten = function (t) {
                void 0 === t && (t = 10);
                var n = this.toRgb();
                return (
                  (n.r = Math.max(
                    0,
                    Math.min(255, n.r - Math.round((-t / 100) * 255))
                  )),
                  (n.g = Math.max(
                    0,
                    Math.min(255, n.g - Math.round((-t / 100) * 255))
                  )),
                  (n.b = Math.max(
                    0,
                    Math.min(255, n.b - Math.round((-t / 100) * 255))
                  )),
                  new e(n)
                );
              }),
              (e.prototype.darken = function (t) {
                void 0 === t && (t = 10);
                var n = this.toHsl();
                return (n.l -= t / 100), (n.l = Uw(n.l)), new e(n);
              }),
              (e.prototype.tint = function (e) {
                return void 0 === e && (e = 10), this.mix('white', e);
              }),
              (e.prototype.shade = function (e) {
                return void 0 === e && (e = 10), this.mix('black', e);
              }),
              (e.prototype.desaturate = function (t) {
                void 0 === t && (t = 10);
                var n = this.toHsl();
                return (n.s -= t / 100), (n.s = Uw(n.s)), new e(n);
              }),
              (e.prototype.saturate = function (t) {
                void 0 === t && (t = 10);
                var n = this.toHsl();
                return (n.s += t / 100), (n.s = Uw(n.s)), new e(n);
              }),
              (e.prototype.greyscale = function () {
                return this.desaturate(100);
              }),
              (e.prototype.spin = function (t) {
                var n = this.toHsl(),
                  r = (n.h + t) % 360;
                return (n.h = r < 0 ? 360 + r : r), new e(n);
              }),
              (e.prototype.mix = function (t, n) {
                void 0 === n && (n = 50);
                var r = this.toRgb(),
                  i = new e(t).toRgb(),
                  o = n / 100;
                return new e({
                  r: (i.r - r.r) * o + r.r,
                  g: (i.g - r.g) * o + r.g,
                  b: (i.b - r.b) * o + r.b,
                  a: (i.a - r.a) * o + r.a,
                });
              }),
              (e.prototype.analogous = function (t, n) {
                void 0 === t && (t = 6), void 0 === n && (n = 30);
                var r = this.toHsl(),
                  i = 360 / n,
                  o = [this];
                for (r.h = (r.h - ((i * t) >> 1) + 720) % 360; --t; )
                  (r.h = (r.h + i) % 360), o.push(new e(r));
                return o;
              }),
              (e.prototype.complement = function () {
                var t = this.toHsl();
                return (t.h = (t.h + 180) % 360), new e(t);
              }),
              (e.prototype.monochromatic = function (t) {
                void 0 === t && (t = 6);
                for (
                  var n = this.toHsv(),
                    r = n.h,
                    i = n.s,
                    o = n.v,
                    a = [],
                    s = 1 / t;
                  t--;

                )
                  a.push(new e({ h: r, s: i, v: o })), (o = (o + s) % 1);
                return a;
              }),
              (e.prototype.splitcomplement = function () {
                var t = this.toHsl(),
                  n = t.h;
                return [
                  this,
                  new e({ h: (n + 72) % 360, s: t.s, l: t.l }),
                  new e({ h: (n + 216) % 360, s: t.s, l: t.l }),
                ];
              }),
              (e.prototype.onBackground = function (t) {
                var n = this.toRgb(),
                  r = new e(t).toRgb(),
                  i = n.a + r.a * (1 - n.a);
                return new e({
                  r: (n.r * n.a + r.r * r.a * (1 - n.a)) / i,
                  g: (n.g * n.a + r.g * r.a * (1 - n.a)) / i,
                  b: (n.b * n.a + r.b * r.a * (1 - n.a)) / i,
                  a: i,
                });
              }),
              (e.prototype.triad = function () {
                return this.polyad(3);
              }),
              (e.prototype.tetrad = function () {
                return this.polyad(4);
              }),
              (e.prototype.polyad = function (t) {
                for (
                  var n = this.toHsl(), r = n.h, i = [this], o = 360 / t, a = 1;
                  a < t;
                  a++
                )
                  i.push(new e({ h: (r + a * o) % 360, s: n.s, l: n.l }));
                return i;
              }),
              (e.prototype.equals = function (t) {
                return this.toRgbString() === new e(t).toRgbString();
              }),
              e
            );
          })();
        function wx(e, t) {
          var n = t.generateColorPalettes,
            r = t.generateNeutralColorPalettes,
            i = e.colorSuccess,
            o = e.colorWarning,
            a = e.colorError,
            s = e.colorInfo,
            l = e.colorPrimary,
            u = e.colorBgBase,
            c = e.colorTextBase,
            f = n(l),
            h = n(i),
            d = n(o),
            g = n(a),
            p = n(s),
            v = r(u, c);
          return Object.assign(Object.assign({}, v), {
            colorPrimaryBg: f[1],
            colorPrimaryBgHover: f[2],
            colorPrimaryBorder: f[3],
            colorPrimaryBorderHover: f[4],
            colorPrimaryHover: f[5],
            colorPrimary: f[6],
            colorPrimaryActive: f[7],
            colorPrimaryTextHover: f[8],
            colorPrimaryText: f[9],
            colorPrimaryTextActive: f[10],
            colorSuccessBg: h[1],
            colorSuccessBgHover: h[2],
            colorSuccessBorder: h[3],
            colorSuccessBorderHover: h[4],
            colorSuccessHover: h[4],
            colorSuccess: h[6],
            colorSuccessActive: h[7],
            colorSuccessTextHover: h[8],
            colorSuccessText: h[9],
            colorSuccessTextActive: h[10],
            colorErrorBg: g[1],
            colorErrorBgHover: g[2],
            colorErrorBorder: g[3],
            colorErrorBorderHover: g[4],
            colorErrorHover: g[5],
            colorError: g[6],
            colorErrorActive: g[7],
            colorErrorTextHover: g[8],
            colorErrorText: g[9],
            colorErrorTextActive: g[10],
            colorWarningBg: d[1],
            colorWarningBgHover: d[2],
            colorWarningBorder: d[3],
            colorWarningBorderHover: d[4],
            colorWarningHover: d[4],
            colorWarning: d[6],
            colorWarningActive: d[7],
            colorWarningTextHover: d[8],
            colorWarningText: d[9],
            colorWarningTextActive: d[10],
            colorInfoBg: p[1],
            colorInfoBgHover: p[2],
            colorInfoBorder: p[3],
            colorInfoBorderHover: p[4],
            colorInfoHover: p[4],
            colorInfo: p[6],
            colorInfoActive: p[7],
            colorInfoTextHover: p[8],
            colorInfoText: p[9],
            colorInfoTextActive: p[10],
            colorBgMask: new kx('#000').setAlpha(0.45).toRgbString(),
            colorWhite: '#fff',
          });
        }
        var xx = function (e) {
          var t = e,
            n = e,
            r = e,
            i = e;
          return (
            e < 6 && e >= 5
              ? (t = e + 1)
              : e < 16 && e >= 6
              ? (t = e + 2)
              : e >= 16 && (t = 16),
            e < 7 && e >= 5
              ? (n = 4)
              : e < 8 && e >= 7
              ? (n = 5)
              : e < 14 && e >= 8
              ? (n = 6)
              : e < 16 && e >= 14
              ? (n = 7)
              : e >= 16 && (n = 8),
            e < 6 && e >= 2 ? (r = 1) : e >= 6 && (r = 2),
            e > 4 && e < 8 ? (i = 4) : e >= 8 && (i = 6),
            {
              borderRadius: e > 16 ? 16 : e,
              borderRadiusXS: r,
              borderRadiusSM: n,
              borderRadiusLG: t,
              borderRadiusOuter: i,
            }
          );
        };
        var Cx = function (e, t) {
            return new kx(e).setAlpha(t).toRgbString();
          },
          Sx = function (e, t) {
            return new kx(e).darken(t).toHexString();
          },
          Ex = function (e) {
            var t = dx(e);
            return {
              1: t[0],
              2: t[1],
              3: t[2],
              4: t[3],
              5: t[4],
              6: t[5],
              7: t[6],
              8: t[4],
              9: t[5],
              10: t[6],
            };
          },
          Ox = function (e, t) {
            var n = e || '#fff',
              r = t || '#000';
            return {
              colorBgBase: n,
              colorTextBase: r,
              colorText: Cx(r, 0.88),
              colorTextSecondary: Cx(r, 0.65),
              colorTextTertiary: Cx(r, 0.45),
              colorTextQuaternary: Cx(r, 0.25),
              colorFill: Cx(r, 0.15),
              colorFillSecondary: Cx(r, 0.06),
              colorFillTertiary: Cx(r, 0.04),
              colorFillQuaternary: Cx(r, 0.02),
              colorBgLayout: Sx(n, 4),
              colorBgContainer: Sx(n, 0),
              colorBgElevated: Sx(n, 0),
              colorBgSpotlight: Cx(r, 0.85),
              colorBorder: Sx(n, 15),
              colorBorderSecondary: Sx(n, 6),
            };
          };
        var Px = function (e) {
          var t = (function (e) {
              var t = new Array(10).fill(null).map(function (t, n) {
                var r = n - 1,
                  i = e * Math.pow(2.71828, r / 5),
                  o = n > 1 ? Math.floor(i) : Math.ceil(i);
                return 2 * Math.floor(o / 2);
              });
              return (
                (t[1] = e),
                t.map(function (e) {
                  return { size: e, lineHeight: (e + 8) / e };
                })
              );
            })(e),
            n = t.map(function (e) {
              return e.size;
            }),
            r = t.map(function (e) {
              return e.lineHeight;
            });
          return {
            fontSizeSM: n[0],
            fontSize: n[1],
            fontSizeLG: n[2],
            fontSizeXL: n[3],
            fontSizeHeading1: n[6],
            fontSizeHeading2: n[5],
            fontSizeHeading3: n[4],
            fontSizeHeading4: n[3],
            fontSizeHeading5: n[2],
            lineHeight: r[1],
            lineHeightLG: r[2],
            lineHeightSM: r[0],
            lineHeightHeading1: r[6],
            lineHeightHeading2: r[5],
            lineHeightHeading3: r[4],
            lineHeightHeading4: r[3],
            lineHeightHeading5: r[2],
          };
        };
        function Ax(e) {
          var t = Object.keys(mx)
            .map(function (t) {
              var n = dx(e[t]);
              return new Array(10).fill(1).reduce(function (e, r, i) {
                return (
                  (e[''.concat(t, '-').concat(i + 1)] = n[i]),
                  (e[''.concat(t).concat(i + 1)] = n[i]),
                  e
                );
              }, {});
            })
            .reduce(function (e, t) {
              return (e = Object.assign(Object.assign({}, e), t));
            }, {});
          return Object.assign(
            Object.assign(
              Object.assign(
                Object.assign(
                  Object.assign(
                    Object.assign(Object.assign({}, e), t),
                    wx(e, {
                      generateColorPalettes: Ex,
                      generateNeutralColorPalettes: Ox,
                    })
                  ),
                  Px(e.fontSize)
                ),
                (function (e) {
                  var t = e.sizeUnit,
                    n = e.sizeStep;
                  return {
                    sizeXXL: t * (n + 8),
                    sizeXL: t * (n + 4),
                    sizeLG: t * (n + 2),
                    sizeMD: t * (n + 1),
                    sizeMS: t * n,
                    size: t * n,
                    sizeSM: t * (n - 1),
                    sizeXS: t * (n - 2),
                    sizeXXS: t * (n - 3),
                  };
                })(e)
              ),
              yx(e)
            ),
            (function (e) {
              var t = e.motionUnit,
                n = e.motionBase,
                r = e.borderRadius,
                i = e.lineWidth;
              return Object.assign(
                {
                  motionDurationFast: ''.concat((n + t).toFixed(1), 's'),
                  motionDurationMid: ''.concat((n + 2 * t).toFixed(1), 's'),
                  motionDurationSlow: ''.concat((n + 3 * t).toFixed(1), 's'),
                  lineWidthBold: i + 1,
                },
                xx(r)
              );
            })(e)
          );
        }
        function Mx(e) {
          return e >= 0 && e <= 255;
        }
        var Tx = function (e, t) {
            var n = new kx(e).toRgb(),
              r = n.r,
              i = n.g,
              o = n.b;
            if (n.a < 1) return e;
            for (
              var a = new kx(t).toRgb(), s = a.r, l = a.g, u = a.b, c = 0.01;
              c <= 1;
              c += 0.01
            ) {
              var f = Math.round((r - s * (1 - c)) / c),
                h = Math.round((i - l * (1 - c)) / c),
                d = Math.round((o - u * (1 - c)) / c);
              if (Mx(f) && Mx(h) && Mx(d))
                return new kx({
                  r: f,
                  g: h,
                  b: d,
                  a: Math.round(100 * c) / 100,
                }).toRgbString();
            }
            return new kx({ r: r, g: i, b: o, a: 1 }).toRgbString();
          },
          Nx = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          };
        function jx(e) {
          var t = e.override,
            n = Nx(e, ['override']),
            r = Object.assign({}, t);
          Object.keys(bx).forEach(function (e) {
            delete r[e];
          });
          var i = Object.assign(Object.assign({}, n), r),
            o = 1200,
            a = 1600;
          return Object.assign(
            Object.assign(Object.assign({}, i), {
              colorLink: i.colorInfoText,
              colorLinkHover: i.colorInfoHover,
              colorLinkActive: i.colorInfoActive,
              colorFillContent: i.colorFillSecondary,
              colorFillContentHover: i.colorFill,
              colorFillAlter: i.colorFillQuaternary,
              colorBgContainerDisabled: i.colorFillTertiary,
              colorBorderBg: i.colorBgContainer,
              colorSplit: Tx(i.colorBorderSecondary, i.colorBgContainer),
              colorTextPlaceholder: i.colorTextQuaternary,
              colorTextDisabled: i.colorTextQuaternary,
              colorTextHeading: i.colorText,
              colorTextLabel: i.colorTextSecondary,
              colorTextDescription: i.colorTextTertiary,
              colorTextLightSolid: i.colorWhite,
              colorHighlight: i.colorError,
              colorBgTextHover: i.colorFillSecondary,
              colorBgTextActive: i.colorFill,
              colorIcon: i.colorTextTertiary,
              colorIconHover: i.colorText,
              colorErrorOutline: Tx(i.colorErrorBg, i.colorBgContainer),
              colorWarningOutline: Tx(i.colorWarningBg, i.colorBgContainer),
              fontSizeIcon: i.fontSizeSM,
              lineWidthFocus: 4 * i.lineWidth,
              lineWidth: i.lineWidth,
              controlOutlineWidth: 2 * i.lineWidth,
              controlInteractiveSize: i.controlHeight / 2,
              controlItemBgHover: i.colorFillTertiary,
              controlItemBgActive: i.colorPrimaryBg,
              controlItemBgActiveHover: i.colorPrimaryBgHover,
              controlItemBgActiveDisabled: i.colorFill,
              controlTmpOutline: i.colorFillQuaternary,
              controlOutline: Tx(i.colorPrimaryBg, i.colorBgContainer),
              lineType: i.lineType,
              borderRadius: i.borderRadius,
              borderRadiusXS: i.borderRadiusXS,
              borderRadiusSM: i.borderRadiusSM,
              borderRadiusLG: i.borderRadiusLG,
              fontWeightStrong: 600,
              opacityLoading: 0.65,
              linkDecoration: 'none',
              linkHoverDecoration: 'none',
              linkFocusDecoration: 'none',
              controlPaddingHorizontal: 12,
              controlPaddingHorizontalSM: 8,
              paddingXXS: i.sizeXXS,
              paddingXS: i.sizeXS,
              paddingSM: i.sizeSM,
              padding: i.size,
              paddingMD: i.sizeMD,
              paddingLG: i.sizeLG,
              paddingXL: i.sizeXL,
              paddingContentHorizontalLG: i.sizeLG,
              paddingContentVerticalLG: i.sizeMS,
              paddingContentHorizontal: i.sizeMS,
              paddingContentVertical: i.sizeSM,
              paddingContentHorizontalSM: i.size,
              paddingContentVerticalSM: i.sizeXS,
              marginXXS: i.sizeXXS,
              marginXS: i.sizeXS,
              marginSM: i.sizeSM,
              margin: i.size,
              marginMD: i.sizeMD,
              marginLG: i.sizeLG,
              marginXL: i.sizeXL,
              marginXXL: i.sizeXXL,
              boxShadow:
                '\n      0 6px 16px 0 rgba(0, 0, 0, 0.08),\n      0 3px 6px -4px rgba(0, 0, 0, 0.12),\n      0 9px 28px 8px rgba(0, 0, 0, 0.05)\n    ',
              boxShadowSecondary:
                '\n      0 6px 16px 0 rgba(0, 0, 0, 0.08),\n      0 3px 6px -4px rgba(0, 0, 0, 0.12),\n      0 9px 28px 8px rgba(0, 0, 0, 0.05)\n    ',
              boxShadowTertiary:
                '\n      0 1px 2px 0 rgba(0, 0, 0, 0.03),\n      0 1px 6px -1px rgba(0, 0, 0, 0.02),\n      0 2px 4px 0 rgba(0, 0, 0, 0.02)\n    ',
              screenXS: 480,
              screenXSMin: 480,
              screenXSMax: 575,
              screenSM: 576,
              screenSMMin: 576,
              screenSMMax: 767,
              screenMD: 768,
              screenMDMin: 768,
              screenMDMax: 991,
              screenLG: 992,
              screenLGMin: 992,
              screenLGMax: 1199,
              screenXL: o,
              screenXLMin: o,
              screenXLMax: 1599,
              screenXXL: a,
              screenXXLMin: a,
              boxShadowPopoverArrow: '2px 2px 5px rgba(0, 0, 0, 0.05)',
              boxShadowCard: '\n      0 1px 2px -2px '
                .concat(
                  new kx('rgba(0, 0, 0, 0.16)').toRgbString(),
                  ',\n      0 3px 6px 0 '
                )
                .concat(
                  new kx('rgba(0, 0, 0, 0.12)').toRgbString(),
                  ',\n      0 5px 12px 4px '
                )
                .concat(new kx('rgba(0, 0, 0, 0.09)').toRgbString(), '\n    '),
              boxShadowDrawerRight:
                '\n      -6px 0 16px 0 rgba(0, 0, 0, 0.08),\n      -3px 0 6px -4px rgba(0, 0, 0, 0.12),\n      -9px 0 28px 8px rgba(0, 0, 0, 0.05)\n    ',
              boxShadowDrawerLeft:
                '\n      6px 0 16px 0 rgba(0, 0, 0, 0.08),\n      3px 0 6px -4px rgba(0, 0, 0, 0.12),\n      9px 0 28px 8px rgba(0, 0, 0, 0.05)\n    ',
              boxShadowDrawerUp:
                '\n      0 6px 16px 0 rgba(0, 0, 0, 0.08),\n      0 3px 6px -4px rgba(0, 0, 0, 0.12),\n      0 9px 28px 8px rgba(0, 0, 0, 0.05)\n    ',
              boxShadowDrawerDown:
                '\n      0 -6px 16px 0 rgba(0, 0, 0, 0.08),\n      0 -3px 6px -4px rgba(0, 0, 0, 0.12),\n      0 -9px 28px 8px rgba(0, 0, 0, 0.05)\n    ',
              boxShadowTabsOverflowLeft:
                'inset 10px 0 8px -8px rgba(0, 0, 0, 0.08)',
              boxShadowTabsOverflowRight:
                'inset -10px 0 8px -8px rgba(0, 0, 0, 0.08)',
              boxShadowTabsOverflowTop:
                'inset 0 10px 8px -8px rgba(0, 0, 0, 0.08)',
              boxShadowTabsOverflowBottom:
                'inset 0 -10px 8px -8px rgba(0, 0, 0, 0.08)',
            }),
            r
          );
        }
        var Lx,
          Rx,
          _x =
            ((Lx = Ax),
            (Rx = Array.isArray(Lx) ? Lx : [Lx]),
            Bw.has(Rx) || Bw.set(Rx, new zw(Rx)),
            Bw.get(Rx)),
          Ix = { token: bx, hashed: !0 },
          Dx = S.createContext(Ix);
        function zx() {
          var e = S.useContext(Dx),
            t = e.token,
            n = e.hashed,
            r = e.theme,
            i = e.components,
            o = ''.concat('5.4.2', '-').concat(n || ''),
            a = r || _x,
            s = (function (e, t) {
              var n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : {},
                r = n.salt,
                i = void 0 === r ? '' : r,
                o = n.override,
                a = void 0 === o ? _k : o,
                s = n.formatToken,
                l = S.useMemo(
                  function () {
                    return Object.assign.apply(Object, [{}].concat(py(t)));
                  },
                  [t]
                ),
                u = S.useMemo(
                  function () {
                    return Mk(l);
                  },
                  [l]
                ),
                c = S.useMemo(
                  function () {
                    return Mk(a);
                  },
                  [a]
                ),
                f = Ak(
                  'token',
                  [i, e.id, u, c],
                  function () {
                    var t = Kv(Kv({}, e.getDerivativeToken(l)), a);
                    s && (t = s(t));
                    var n = Tk(t, i);
                    (t._tokenKey = n), Dk(n);
                    var r = ''.concat('css', '-').concat(yk(n));
                    return (t._hashId = r), [t, r];
                  },
                  function (e) {
                    zk(e[0]._tokenKey);
                  }
                );
              return f;
            })(a, [bx, t], {
              salt: o,
              override: Object.assign({ override: t }, i),
              formatToken: jx,
            }),
            l = ql()(s, 2),
            u = l[0],
            c = l[1];
          return [a, u, n ? c : ''];
        }
        var Bx = function () {
            var e = zx(),
              t = ql()(e, 3);
            return { theme: t[0], token: t[1], hashId: t[2] };
          },
          Vx = function (e) {
            return {
              boxSizing: 'border-box',
              margin: 0,
              padding: 0,
              color: e.colorText,
              fontSize: e.fontSize,
              lineHeight: e.lineHeight,
              listStyle: 'none',
              fontFamily: e.fontFamily,
            };
          },
          Fx = function (e) {
            var t;
            return {
              a:
                ((t = {
                  color: e.colorLink,
                  textDecoration: e.linkDecoration,
                  backgroundColor: 'transparent',
                  outline: 'none',
                  cursor: 'pointer',
                  transition: 'color '.concat(e.motionDurationSlow),
                  '-webkit-text-decoration-skip': 'objects',
                  '&:hover': { color: e.colorLinkHover },
                  '&:active': { color: e.colorLinkActive },
                }),
                w()(t, '&:active,\n  &:hover', {
                  textDecoration: e.linkHoverDecoration,
                  outline: 0,
                }),
                w()(t, '&:focus', {
                  textDecoration: e.linkFocusDecoration,
                  outline: 0,
                }),
                w()(t, '&[disabled]', {
                  color: e.colorTextDisabled,
                  cursor: 'not-allowed',
                }),
                t),
            };
          },
          Ux = function (e, t) {
            var n = e.fontFamily,
              r = e.fontSize,
              i = '[class^="'.concat(t, '"], [class*=" ').concat(t, '"]');
            return w()(
              {},
              i,
              w()(
                {
                  fontFamily: n,
                  fontSize: r,
                  boxSizing: 'border-box',
                  '&::before, &::after': { boxSizing: 'border-box' },
                },
                i,
                {
                  boxSizing: 'border-box',
                  '&::before, &::after': { boxSizing: 'border-box' },
                }
              )
            );
          },
          Hx = function (e) {
            return { animationDuration: e, animationFillMode: 'both' };
          },
          Gx = function (e) {
            return { animationDuration: e, animationFillMode: 'both' };
          },
          Wx = function (e, t, n, r) {
            var i,
              o =
                arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
              a = o ? '&' : '';
            return (
              (i = {}),
              w()(
                i,
                '\n      '
                  .concat(a)
                  .concat(e, '-enter,\n      ')
                  .concat(a)
                  .concat(e, '-appear\n    '),
                Object.assign(Object.assign({}, Hx(r)), {
                  animationPlayState: 'paused',
                })
              ),
              w()(
                i,
                ''.concat(a).concat(e, '-leave'),
                Object.assign(Object.assign({}, Gx(r)), {
                  animationPlayState: 'paused',
                })
              ),
              w()(
                i,
                '\n      '
                  .concat(a)
                  .concat(e, '-enter')
                  .concat(e, '-enter-active,\n      ')
                  .concat(a)
                  .concat(e, '-appear')
                  .concat(e, '-appear-active\n    '),
                { animationName: t, animationPlayState: 'running' }
              ),
              w()(
                i,
                ''.concat(a).concat(e, '-leave').concat(e, '-leave-active'),
                {
                  animationName: n,
                  animationPlayState: 'running',
                  pointerEvents: 'none',
                }
              ),
              i
            );
          },
          qx = new _w('antZoomIn', {
            '0%': { transform: 'scale(0.2)', opacity: 0 },
            '100%': { transform: 'scale(1)', opacity: 1 },
          }),
          Xx = new _w('antZoomOut', {
            '0%': { transform: 'scale(1)' },
            '100%': { transform: 'scale(0.2)', opacity: 0 },
          }),
          Yx = new _w('antZoomBigIn', {
            '0%': { transform: 'scale(0.8)', opacity: 0 },
            '100%': { transform: 'scale(1)', opacity: 1 },
          }),
          Jx = new _w('antZoomBigOut', {
            '0%': { transform: 'scale(1)' },
            '100%': { transform: 'scale(0.8)', opacity: 0 },
          }),
          $x = new _w('antZoomUpIn', {
            '0%': {
              transform: 'scale(0.8)',
              transformOrigin: '50% 0%',
              opacity: 0,
            },
            '100%': { transform: 'scale(1)', transformOrigin: '50% 0%' },
          }),
          Qx = new _w('antZoomUpOut', {
            '0%': { transform: 'scale(1)', transformOrigin: '50% 0%' },
            '100%': {
              transform: 'scale(0.8)',
              transformOrigin: '50% 0%',
              opacity: 0,
            },
          }),
          Kx = {
            zoom: { inKeyframes: qx, outKeyframes: Xx },
            'zoom-big': { inKeyframes: Yx, outKeyframes: Jx },
            'zoom-big-fast': { inKeyframes: Yx, outKeyframes: Jx },
            'zoom-left': {
              inKeyframes: new _w('antZoomLeftIn', {
                '0%': {
                  transform: 'scale(0.8)',
                  transformOrigin: '0% 50%',
                  opacity: 0,
                },
                '100%': { transform: 'scale(1)', transformOrigin: '0% 50%' },
              }),
              outKeyframes: new _w('antZoomLeftOut', {
                '0%': { transform: 'scale(1)', transformOrigin: '0% 50%' },
                '100%': {
                  transform: 'scale(0.8)',
                  transformOrigin: '0% 50%',
                  opacity: 0,
                },
              }),
            },
            'zoom-right': {
              inKeyframes: new _w('antZoomRightIn', {
                '0%': {
                  transform: 'scale(0.8)',
                  transformOrigin: '100% 50%',
                  opacity: 0,
                },
                '100%': { transform: 'scale(1)', transformOrigin: '100% 50%' },
              }),
              outKeyframes: new _w('antZoomRightOut', {
                '0%': { transform: 'scale(1)', transformOrigin: '100% 50%' },
                '100%': {
                  transform: 'scale(0.8)',
                  transformOrigin: '100% 50%',
                  opacity: 0,
                },
              }),
            },
            'zoom-up': { inKeyframes: $x, outKeyframes: Qx },
            'zoom-down': {
              inKeyframes: new _w('antZoomDownIn', {
                '0%': {
                  transform: 'scale(0.8)',
                  transformOrigin: '50% 100%',
                  opacity: 0,
                },
                '100%': { transform: 'scale(1)', transformOrigin: '50% 100%' },
              }),
              outKeyframes: new _w('antZoomDownOut', {
                '0%': { transform: 'scale(1)', transformOrigin: '50% 100%' },
                '100%': {
                  transform: 'scale(0.8)',
                  transformOrigin: '50% 100%',
                  opacity: 0,
                },
              }),
            },
          },
          Zx = function (e, t) {
            var n,
              r = e.antCls,
              i = ''.concat(r, '-').concat(t),
              o = Kx[t],
              a = o.inKeyframes,
              s = o.outKeyframes;
            return [
              Wx(
                i,
                a,
                s,
                'zoom-big-fast' === t
                  ? e.motionDurationFast
                  : e.motionDurationMid
              ),
              ((n = {}),
              w()(
                n,
                '\n        '
                  .concat(i, '-enter,\n        ')
                  .concat(i, '-appear\n      '),
                {
                  transform: 'scale(0)',
                  opacity: 0,
                  animationTimingFunction: e.motionEaseOutCirc,
                  '&-prepare': { transform: 'none' },
                }
              ),
              w()(n, ''.concat(i, '-leave'), {
                animationTimingFunction: e.motionEaseInOutCirc,
              }),
              n),
            ];
          },
          eC = [
            'blue',
            'purple',
            'cyan',
            'green',
            'magenta',
            'pink',
            'red',
            'orange',
            'yellow',
            'volcano',
            'geekblue',
            'lime',
            'gold',
          ];
        function tC(e, t) {
          return eC.reduce(function (n, r) {
            var i = e[''.concat(r, '1')],
              o = e[''.concat(r, '3')],
              a = e[''.concat(r, '6')],
              s = e[''.concat(r, '7')];
            return Object.assign(
              Object.assign({}, n),
              t(r, {
                lightColor: i,
                lightBorderColor: o,
                darkColor: a,
                textColor: s,
              })
            );
          }, {});
        }
        var nC = 'undefined' != typeof CSSINJS_STATISTIC,
          rC = !0;
        function iC() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          if (!nC) return Object.assign.apply(Object, [{}].concat(t));
          rC = !1;
          var r = {};
          return (
            t.forEach(function (e) {
              Object.keys(e).forEach(function (t) {
                Object.defineProperty(r, t, {
                  configurable: !0,
                  enumerable: !0,
                  get: function () {
                    return e[t];
                  },
                });
              });
            }),
            (rC = !0),
            r
          );
        }
        var oC = {};
        function aC() {}
        function sC(e, t, n, r) {
          return function (i) {
            var o = zx(),
              a = ql()(o, 3),
              s = a[0],
              l = a[1],
              u = a[2],
              c = (0, S.useContext)(qv),
              f = c.getPrefixCls,
              h = c.iconPrefixCls,
              d = c.csp,
              g = f(),
              p = {
                theme: s,
                token: l,
                hashId: u,
                nonce: function () {
                  return null == d ? void 0 : d.nonce;
                },
              };
            return (
              Lw(
                Object.assign(Object.assign({}, p), { path: ['Shared', g] }),
                function () {
                  return [{ '&': Fx(l) }];
                }
              ),
              [
                Lw(
                  Object.assign(Object.assign({}, p), { path: [e, i, h] }),
                  function () {
                    var o = (function (e) {
                        var t,
                          n = e,
                          r = aC;
                        return (
                          nC &&
                            ((t = new Set()),
                            (n = new Proxy(e, {
                              get: function (e, n) {
                                return rC && t.add(n), e[n];
                              },
                            })),
                            (r = function (e, n) {
                              oC[e] = { global: Array.from(t), component: n };
                            })),
                          { token: n, keys: t, flush: r }
                        );
                      })(l),
                      a = o.token,
                      s = o.flush,
                      c = 'function' == typeof n ? n(a) : n,
                      f = Object.assign(Object.assign({}, c), l[e]),
                      d = iC(
                        a,
                        {
                          componentCls: '.'.concat(i),
                          prefixCls: i,
                          iconCls: '.'.concat(h),
                          antCls: '.'.concat(g),
                        },
                        f
                      ),
                      p = t(d, {
                        hashId: u,
                        prefixCls: i,
                        rootPrefixCls: g,
                        iconPrefixCls: h,
                        overrideComponentToken: l[e],
                      });
                    return (
                      s(e, f),
                      [
                        !1 === (null == r ? void 0 : r.resetStyle)
                          ? null
                          : Ux(l, i),
                        p,
                      ]
                    );
                  }
                ),
                u,
              ]
            );
          };
        }
        var lC = function (e) {
            var t,
              n = e.componentCls,
              r = e.tooltipMaxWidth,
              i = e.tooltipColor,
              o = e.tooltipBg,
              a = e.tooltipBorderRadius,
              s = e.zIndexPopup,
              l = e.controlHeight,
              u = e.boxShadowSecondary,
              c = e.paddingSM,
              f = e.paddingXS,
              h = e.tooltipRadiusOuter;
            return [
              w()(
                {},
                n,
                Object.assign(
                  Object.assign(
                    Object.assign(
                      Object.assign({}, Vx(e)),
                      ((t = {
                        position: 'absolute',
                        zIndex: s,
                        display: 'block',
                        width: 'max-content',
                        maxWidth: r,
                        visibility: 'visible',
                        '&-hidden': { display: 'none' },
                        '--antd-arrow-background-color': o,
                      }),
                      w()(t, ''.concat(n, '-inner'), {
                        minWidth: l,
                        minHeight: l,
                        padding: ''.concat(c / 2, 'px ').concat(f, 'px'),
                        color: i,
                        textAlign: 'start',
                        textDecoration: 'none',
                        wordWrap: 'break-word',
                        backgroundColor: o,
                        borderRadius: a,
                        boxShadow: u,
                      }),
                      w()(
                        t,
                        [
                          '&-placement-left',
                          '&-placement-leftTop',
                          '&-placement-leftBottom',
                          '&-placement-right',
                          '&-placement-rightTop',
                          '&-placement-rightBottom',
                        ].join(','),
                        w()({}, ''.concat(n, '-inner'), {
                          borderRadius: Math.min(a, 8),
                        })
                      ),
                      w()(t, ''.concat(n, '-content'), {
                        position: 'relative',
                      }),
                      t)
                    ),
                    tC(e, function (e, t) {
                      var r,
                        i = t.darkColor;
                      return w()(
                        {},
                        '&'.concat(n, '-').concat(e),
                        ((r = {}),
                        w()(r, ''.concat(n, '-inner'), { backgroundColor: i }),
                        w()(r, ''.concat(n, '-arrow'), {
                          '--antd-arrow-background-color': i,
                        }),
                        r)
                      );
                    })
                  ),
                  { '&-rtl': { direction: 'rtl' } }
                )
              ),
              ck(iC(e, { borderRadiusOuter: h }), {
                colorBg: 'var(--antd-arrow-background-color)',
                contentRadius: a,
                limitVerticalRadius: !0,
              }),
              w()({}, ''.concat(n, '-pure'), {
                position: 'relative',
                maxWidth: 'none',
                margin: e.sizePopupArrow,
              }),
            ];
          },
          uC = function (e, t) {
            var n = sC(
              'Tooltip',
              function (e) {
                if (!1 === t) return [];
                var n = e.borderRadius,
                  r = e.colorTextLightSolid,
                  i = e.colorBgDefault,
                  o = e.borderRadiusOuter,
                  a = iC(e, {
                    tooltipMaxWidth: 250,
                    tooltipColor: r,
                    tooltipBorderRadius: n,
                    tooltipBg: i,
                    tooltipRadiusOuter: o > 4 ? 4 : o,
                  });
                return [lC(a), Zx(e, 'zoom-big-fast')];
              },
              function (e) {
                return {
                  zIndexPopup: e.zIndexPopupBase + 70,
                  colorBgDefault: e.colorBgSpotlight,
                };
              }
            );
            return n(e);
          },
          cC = eC.map(function (e) {
            return ''.concat(e, '-inverse');
          }),
          fC = ['success', 'processing', 'error', 'default', 'warning'];
        function hC(e) {
          var t =
            !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          return t ? [].concat(py(cC), py(eC)).includes(e) : eC.includes(e);
        }
        function dC(e, t) {
          var n = hC(t),
            r = Wv()(w()({}, ''.concat(e, '-').concat(t), t && n)),
            i = {},
            o = {};
          return (
            t &&
              !n &&
              ((i.background = t), (o['--antd-arrow-background-color'] = t)),
            { className: r, overlayStyle: i, arrowStyle: o }
          );
        }
        var gC = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          pC = Bx;
        function vC(e, t) {
          var n = e.type;
          if (
            ((!0 === n.__ANT_BUTTON || 'button' === e.type) &&
              e.props.disabled) ||
            (!0 === n.__ANT_SWITCH && (e.props.disabled || e.props.loading)) ||
            (!0 === n.__ANT_RADIO && e.props.disabled)
          ) {
            var r = (function (e, t) {
                var n = {},
                  r = Object.assign({}, e);
                return (
                  t.forEach(function (t) {
                    e && t in e && ((n[t] = e[t]), delete r[t]);
                  }),
                  { picked: n, omitted: r }
                );
              })(e.props.style, [
                'position',
                'left',
                'right',
                'top',
                'bottom',
                'float',
                'display',
                'zIndex',
              ]),
              i = r.picked,
              o = r.omitted,
              a = Object.assign(Object.assign({ display: 'inline-block' }, i), {
                cursor: 'not-allowed',
                width: e.props.block ? '100%' : void 0,
              }),
              s = vk(e, {
                style: Object.assign(Object.assign({}, o), {
                  pointerEvents: 'none',
                }),
                className: null,
              });
            return S.createElement(
              'span',
              {
                style: a,
                className: Wv()(
                  e.props.className,
                  ''.concat(t, '-disabled-compatible-wrapper')
                ),
              },
              s
            );
          }
          return e;
        }
        var yC = S.forwardRef(function (e, t) {
          var n,
            r,
            i = e.prefixCls,
            o = e.openClassName,
            a = e.getTooltipContainer,
            s = e.overlayClassName,
            l = e.color,
            u = e.overlayInnerStyle,
            c = e.children,
            f = e.afterOpenChange,
            h = e.afterVisibleChange,
            d = e.destroyTooltipOnHide,
            g = e.arrow,
            p = void 0 === g || g,
            v = e.title,
            y = e.overlay,
            m = e.builtinPlacements,
            b = e.arrowPointAtCenter,
            k = void 0 !== b && b,
            x = e.autoAdjustOverflow,
            C = void 0 === x || x,
            E = !!p,
            O = pC().token,
            P = S.useContext(qv),
            A = P.getPopupContainer,
            M = P.getPrefixCls,
            T = P.direction,
            N = S.useRef(null),
            j = function () {
              var e;
              null === (e = N.current) || void 0 === e || e.forceAlign();
            };
          S.useImperativeHandle(t, function () {
            return {
              forceAlign: j,
              forcePopupAlign: function () {
                j();
              },
            };
          });
          var L,
            R,
            I,
            D,
            z,
            B,
            V,
            F,
            U,
            H,
            G,
            W,
            q,
            X,
            Y,
            J,
            $ =
              ((L = !1),
              (R = {
                value: null !== (n = e.open) && void 0 !== n ? n : e.visible,
                defaultValue:
                  null !== (r = e.defaultOpen) && void 0 !== r
                    ? r
                    : e.defaultVisible,
              }),
              (D = (I = R || {}).defaultValue),
              (z = I.value),
              (B = I.onChange),
              (V = I.postState),
              (F = ny(
                vb(function () {
                  return ok(z)
                    ? z
                    : ok(D)
                    ? 'function' == typeof D
                      ? D()
                      : D
                    : 'function' == typeof L
                    ? L()
                    : L;
                }),
                2
              )),
              (U = F[0]),
              (H = F[1]),
              (G = void 0 !== z ? z : U),
              (W = V ? V(G) : G),
              (q = Tm(B)),
              (X = ny(vb([G]), 2)),
              (Y = X[0]),
              (J = X[1]),
              my(
                function () {
                  var e = Y[0];
                  U !== e && q(U, e);
                },
                [Y]
              ),
              my(
                function () {
                  ok(z) || H(z);
                },
                [z]
              ),
              [
                W,
                Tm(function (e, t) {
                  H(e, t), J([G], t);
                }),
              ]),
            Q = ql()($, 2),
            K = Q[0],
            Z = Q[1],
            ee = !v && !y && 0 !== v,
            te = S.useMemo(
              function () {
                var e,
                  t,
                  n = k;
                return (
                  'object' === _()(p) &&
                    (n =
                      null !==
                        (t =
                          null !== (e = p.pointAtCenter) && void 0 !== e
                            ? e
                            : p.arrowPointAtCenter) && void 0 !== t
                        ? t
                        : k),
                  m ||
                    gk({
                      arrowPointAtCenter: n,
                      autoAdjustOverflow: C,
                      arrowWidth: E ? O.sizePopupArrow : 0,
                      borderRadius: O.borderRadius,
                      offset: O.marginXXS,
                    })
                );
              },
              [k, p, m, O]
            ),
            ne = S.useMemo(
              function () {
                return 0 === v ? v : y || v || '';
              },
              [y, v]
            ),
            re = e.getPopupContainer,
            ie = e.placement,
            oe = void 0 === ie ? 'top' : ie,
            ae = e.mouseEnterDelay,
            se = void 0 === ae ? 0.1 : ae,
            le = e.mouseLeaveDelay,
            ue = void 0 === le ? 0.1 : le,
            ce = e.overlayStyle,
            fe = e.rootClassName,
            he = gC(e, [
              'getPopupContainer',
              'placement',
              'mouseEnterDelay',
              'mouseLeaveDelay',
              'overlayStyle',
              'rootClassName',
            ]),
            de = M('tooltip', i),
            ge = M(),
            pe = e['data-popover-inject'],
            ve = K;
          'open' in e || 'visible' in e || !ee || (ve = !1);
          var ye = vC(
              pk(c) &&
                !(function (e) {
                  return e && pk(e) && e.type === S.Fragment;
                })(c)
                ? c
                : S.createElement('span', null, c),
              de
            ),
            me = ye.props,
            be =
              me.className && 'string' != typeof me.className
                ? me.className
                : Wv()(me.className, w()({}, o || ''.concat(de, '-open'), !0)),
            ke = uC(de, !pe),
            we = ql()(ke, 2),
            xe = we[0],
            Ce = we[1],
            Se = dC(de, l),
            Ee = Object.assign(Object.assign({}, u), Se.overlayStyle),
            Oe = Se.arrowStyle,
            Pe = Wv()(
              s,
              w()({}, ''.concat(de, '-rtl'), 'rtl' === T),
              Se.className,
              fe,
              Ce
            );
          return xe(
            S.createElement(
              ik,
              Object.assign({}, he, {
                showArrow: E,
                placement: oe,
                mouseEnterDelay: se,
                mouseLeaveDelay: ue,
                prefixCls: de,
                overlayClassName: Pe,
                overlayStyle: Object.assign(Object.assign({}, Oe), ce),
                getTooltipContainer: re || a || A,
                ref: N,
                builtinPlacements: te,
                overlay: ne,
                visible: ve,
                onVisibleChange: function (t) {
                  var n, r;
                  Z(!ee && t),
                    ee ||
                      (null === (n = e.onOpenChange) ||
                        void 0 === n ||
                        n.call(e, t),
                      null === (r = e.onVisibleChange) ||
                        void 0 === r ||
                        r.call(e, t));
                },
                afterVisibleChange: null != f ? f : h,
                onPopupAlign: function (e, t) {
                  var n = Object.keys(te).find(function (e) {
                    var n, r;
                    return (
                      te[e].points[0] ===
                        (null === (n = t.points) || void 0 === n
                          ? void 0
                          : n[0]) &&
                      te[e].points[1] ===
                        (null === (r = t.points) || void 0 === r
                          ? void 0
                          : r[1])
                    );
                  });
                  if (n) {
                    var r = e.getBoundingClientRect(),
                      i = { top: '50%', left: '50%' };
                    /top|Bottom/.test(n)
                      ? (i.top = ''.concat(r.height - t.offset[1], 'px'))
                      : /Top|bottom/.test(n) &&
                        (i.top = ''.concat(-t.offset[1], 'px')),
                      /left|Right/.test(n)
                        ? (i.left = ''.concat(r.width - t.offset[0], 'px'))
                        : /right|Left/.test(n) &&
                          (i.left = ''.concat(-t.offset[0], 'px')),
                      (e.style.transformOrigin = ''
                        .concat(i.left, ' ')
                        .concat(i.top));
                  }
                },
                overlayInnerStyle: Ee,
                arrowContent: S.createElement('span', {
                  className: ''.concat(de, '-arrow-content'),
                }),
                motion: {
                  motionName: ak(ge, 'zoom-big-fast', e.transitionName),
                  motionDeadline: 1e3,
                },
                destroyTooltipOnHide: !!d,
              }),
              ve ? vk(ye, { className: be }) : ye
            )
          );
        });
        yC._InternalPanelDoNotUseOrYouWillBeFired = function (e) {
          var t = e.prefixCls,
            n = e.className,
            r = e.placement,
            i = void 0 === r ? 'top' : r,
            o = e.title,
            a = e.color,
            s = e.overlayInnerStyle,
            l = (0, S.useContext(qv).getPrefixCls)('tooltip', t),
            u = uC(l, !0),
            c = ql()(u, 2),
            f = c[0],
            h = c[1],
            d = dC(l, a),
            g = Object.assign(Object.assign({}, s), d.overlayStyle),
            p = d.arrowStyle;
          return f(
            S.createElement(
              'div',
              {
                className: Wv()(
                  h,
                  l,
                  ''.concat(l, '-pure'),
                  ''.concat(l, '-placement-').concat(i),
                  n,
                  d.className
                ),
                style: p,
              },
              S.createElement('div', { className: ''.concat(l, '-arrow') }),
              S.createElement(
                tk,
                Object.assign({}, e, {
                  className: h,
                  prefixCls: l,
                  overlayInnerStyle: g,
                }),
                o
              )
            )
          );
        };
        var mC = yC,
          bC = function (e) {
            return e ? ('function' == typeof e ? e() : e) : null;
          },
          kC = function (e) {
            var t,
              n = e.componentCls,
              r = e.popoverBg,
              i = e.popoverColor,
              o = e.width,
              a = e.fontWeightStrong,
              s = e.popoverPadding,
              l = e.boxShadowSecondary,
              u = e.colorTextHeading,
              c = e.borderRadiusLG,
              f = e.zIndexPopup,
              h = e.marginXS,
              d = e.colorBgElevated;
            return [
              w()(
                {},
                n,
                Object.assign(
                  Object.assign({}, Vx(e)),
                  ((t = {
                    position: 'absolute',
                    top: 0,
                    left: { _skip_check_: !0, value: 0 },
                    zIndex: f,
                    fontWeight: 'normal',
                    whiteSpace: 'normal',
                    textAlign: 'start',
                    cursor: 'auto',
                    userSelect: 'text',
                    '--antd-arrow-background-color': d,
                    '&-rtl': { direction: 'rtl' },
                    '&-hidden': { display: 'none' },
                  }),
                  w()(t, ''.concat(n, '-content'), { position: 'relative' }),
                  w()(t, ''.concat(n, '-inner'), {
                    backgroundColor: r,
                    backgroundClip: 'padding-box',
                    borderRadius: c,
                    boxShadow: l,
                    padding: s,
                  }),
                  w()(t, ''.concat(n, '-title'), {
                    minWidth: o,
                    marginBottom: h,
                    color: u,
                    fontWeight: a,
                  }),
                  w()(t, ''.concat(n, '-inner-content'), { color: i }),
                  t)
                )
              ),
              ck(e, { colorBg: 'var(--antd-arrow-background-color)' }),
              w()(
                {},
                ''.concat(n, '-pure'),
                w()(
                  {
                    position: 'relative',
                    maxWidth: 'none',
                    margin: e.sizePopupArrow,
                    display: 'inline-block',
                  },
                  ''.concat(n, '-content'),
                  { display: 'inline-block' }
                )
              ),
            ];
          },
          wC = function (e) {
            var t = e.componentCls;
            return w()(
              {},
              t,
              eC.map(function (n) {
                var r,
                  i = e[''.concat(n, '6')];
                return w()(
                  {},
                  '&'.concat(t, '-').concat(n),
                  ((r = { '--antd-arrow-background-color': i }),
                  w()(r, ''.concat(t, '-inner'), { backgroundColor: i }),
                  w()(r, ''.concat(t, '-arrow'), { background: 'transparent' }),
                  r)
                );
              })
            );
          },
          xC = function (e) {
            var t,
              n = e.componentCls,
              r = e.lineWidth,
              i = e.lineType,
              o = e.colorSplit,
              a = e.paddingSM,
              s = e.controlHeight,
              l = e.fontSize,
              u = e.lineHeight,
              c = e.padding,
              f = s - Math.round(l * u),
              h = f / 2,
              d = f / 2 - r,
              g = c;
            return w()(
              {},
              n,
              ((t = {}),
              w()(t, ''.concat(n, '-inner'), { padding: 0 }),
              w()(t, ''.concat(n, '-title'), {
                margin: 0,
                padding: ''.concat(h, 'px ').concat(g, 'px ').concat(d, 'px'),
                borderBottom: ''.concat(r, 'px ').concat(i, ' ').concat(o),
              }),
              w()(t, ''.concat(n, '-inner-content'), {
                padding: ''.concat(a, 'px ').concat(g, 'px'),
              }),
              t)
            );
          },
          CC = sC(
            'Popover',
            function (e) {
              var t = e.colorBgElevated,
                n = e.colorText,
                r = e.wireframe,
                i = iC(e, {
                  popoverBg: t,
                  popoverColor: n,
                  popoverPadding: 12,
                });
              return [kC(i), wC(i), r && xC(i), Zx(i, 'zoom-big')];
            },
            function (e) {
              return { zIndexPopup: e.zIndexPopupBase + 30, width: 177 };
            }
          ),
          SC = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          };
        function EC(e) {
          var t = e.hashId,
            n = e.prefixCls,
            r = e.className,
            i = e.style,
            o = e.placement,
            a = void 0 === o ? 'top' : o,
            s = e.title,
            l = e.content,
            u = e.children;
          return S.createElement(
            'div',
            {
              className: Wv()(
                t,
                n,
                ''.concat(n, '-pure'),
                ''.concat(n, '-placement-').concat(a),
                r
              ),
              style: i,
            },
            S.createElement('div', { className: ''.concat(n, '-arrow') }),
            S.createElement(
              tk,
              Object.assign({}, e, { className: t, prefixCls: n }),
              u ||
                (function (e, t, n) {
                  if (t || n)
                    return S.createElement(
                      S.Fragment,
                      null,
                      t &&
                        S.createElement(
                          'div',
                          { className: ''.concat(e, '-title') },
                          bC(t)
                        ),
                      S.createElement(
                        'div',
                        { className: ''.concat(e, '-inner-content') },
                        bC(n)
                      )
                    );
                })(n, s, l)
            )
          );
        }
        var OC = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          PC = function (e) {
            var t = e.title,
              n = e.content,
              r = e.prefixCls;
            return t || n
              ? S.createElement(
                  S.Fragment,
                  null,
                  t &&
                    S.createElement(
                      'div',
                      { className: ''.concat(r, '-title') },
                      bC(t)
                    ),
                  S.createElement(
                    'div',
                    { className: ''.concat(r, '-inner-content') },
                    bC(n)
                  )
                )
              : null;
          },
          AC = S.forwardRef(function (e, t) {
            var n = e.prefixCls,
              r = e.title,
              i = e.content,
              o = e.overlayClassName,
              a = e.placement,
              s = void 0 === a ? 'top' : a,
              l = e.trigger,
              u = void 0 === l ? 'hover' : l,
              c = e.mouseEnterDelay,
              f = void 0 === c ? 0.1 : c,
              h = e.mouseLeaveDelay,
              d = void 0 === h ? 0.1 : h,
              g = e.overlayStyle,
              p = void 0 === g ? {} : g,
              v = OC(e, [
                'prefixCls',
                'title',
                'content',
                'overlayClassName',
                'placement',
                'trigger',
                'mouseEnterDelay',
                'mouseLeaveDelay',
                'overlayStyle',
              ]),
              y = S.useContext(qv).getPrefixCls,
              m = y('popover', n),
              b = CC(m),
              k = ql()(b, 2),
              w = k[0],
              x = k[1],
              C = y(),
              E = Wv()(o, x);
            return w(
              S.createElement(
                mC,
                Object.assign(
                  {
                    placement: s,
                    trigger: u,
                    mouseEnterDelay: f,
                    mouseLeaveDelay: d,
                    overlayStyle: p,
                  },
                  v,
                  {
                    prefixCls: m,
                    overlayClassName: E,
                    ref: t,
                    overlay: S.createElement(PC, {
                      prefixCls: m,
                      title: r,
                      content: i,
                    }),
                    transitionName: ak(C, 'zoom-big', v.transitionName),
                    'data-popover-inject': !0,
                  }
                )
              )
            );
          });
        AC._InternalPanelDoNotUseOrYouWillBeFired = function (e) {
          var t = e.prefixCls,
            n = SC(e, ['prefixCls']),
            r = (0, S.useContext(qv).getPrefixCls)('popover', t),
            i = CC(r),
            o = ql()(i, 2),
            a = o[0],
            s = o[1];
          return a(
            S.createElement(
              EC,
              Object.assign({}, n, { prefixCls: r, hashId: s })
            )
          );
        };
        var MC = AC,
          TC = function (e) {
            var t,
              n = e.componentCls,
              r = e.sizePaddingEdgeHorizontal,
              i = e.colorSplit,
              o = e.lineWidth;
            return w()(
              {},
              n,
              Object.assign(
                Object.assign({}, Vx(e)),
                ((t = {
                  borderBlockStart: ''.concat(o, 'px solid ').concat(i),
                  '&-vertical': {
                    position: 'relative',
                    top: '-0.06em',
                    display: 'inline-block',
                    height: '0.9em',
                    margin: '0 '.concat(e.dividerVerticalGutterMargin, 'px'),
                    verticalAlign: 'middle',
                    borderTop: 0,
                    borderInlineStart: ''.concat(o, 'px solid ').concat(i),
                  },
                  '&-horizontal': {
                    display: 'flex',
                    clear: 'both',
                    width: '100%',
                    minWidth: '100%',
                    margin: ''.concat(e.dividerHorizontalGutterMargin, 'px 0'),
                  },
                }),
                w()(t, '&-horizontal'.concat(n, '-with-text'), {
                  display: 'flex',
                  alignItems: 'center',
                  margin: ''.concat(
                    e.dividerHorizontalWithTextGutterMargin,
                    'px 0'
                  ),
                  color: e.colorTextHeading,
                  fontWeight: 500,
                  fontSize: e.fontSizeLG,
                  whiteSpace: 'nowrap',
                  textAlign: 'center',
                  borderBlockStart: '0 '.concat(i),
                  '&::before, &::after': {
                    position: 'relative',
                    width: '50%',
                    borderBlockStart: ''.concat(o, 'px solid transparent'),
                    borderBlockStartColor: 'inherit',
                    borderBlockEnd: 0,
                    transform: 'translateY(50%)',
                    content: "''",
                  },
                }),
                w()(t, '&-horizontal'.concat(n, '-with-text-left'), {
                  '&::before': { width: '5%' },
                  '&::after': { width: '95%' },
                }),
                w()(t, '&-horizontal'.concat(n, '-with-text-right'), {
                  '&::before': { width: '95%' },
                  '&::after': { width: '5%' },
                }),
                w()(t, ''.concat(n, '-inner-text'), {
                  display: 'inline-block',
                  padding: '0 1em',
                }),
                w()(t, '&-dashed', {
                  background: 'none',
                  borderColor: i,
                  borderStyle: 'dashed',
                  borderWidth: ''.concat(o, 'px 0 0'),
                }),
                w()(
                  t,
                  '&-horizontal'.concat(n, '-with-text').concat(n, '-dashed'),
                  { '&::before, &::after': { borderStyle: 'dashed none none' } }
                ),
                w()(t, '&-vertical'.concat(n, '-dashed'), {
                  borderInlineStart: o,
                  borderInlineEnd: 0,
                  borderBlockStart: 0,
                  borderBlockEnd: 0,
                }),
                w()(t, '&-plain'.concat(n, '-with-text'), {
                  color: e.colorText,
                  fontWeight: 'normal',
                  fontSize: e.fontSize,
                }),
                w()(
                  t,
                  '&-horizontal'
                    .concat(n, '-with-text-left')
                    .concat(n, '-no-default-orientation-margin-left'),
                  w()(
                    {
                      '&::before': { width: 0 },
                      '&::after': { width: '100%' },
                    },
                    ''.concat(n, '-inner-text'),
                    { paddingInlineStart: r }
                  )
                ),
                w()(
                  t,
                  '&-horizontal'
                    .concat(n, '-with-text-right')
                    .concat(n, '-no-default-orientation-margin-right'),
                  w()(
                    {
                      '&::before': { width: '100%' },
                      '&::after': { width: 0 },
                    },
                    ''.concat(n, '-inner-text'),
                    { paddingInlineEnd: r }
                  )
                ),
                t)
              )
            );
          },
          NC = sC(
            'Divider',
            function (e) {
              var t = iC(e, {
                dividerVerticalGutterMargin: e.marginXS,
                dividerHorizontalWithTextGutterMargin: e.margin,
                dividerHorizontalGutterMargin: e.marginLG,
              });
              return [TC(t)];
            },
            { sizePaddingEdgeHorizontal: 0 }
          ),
          jC = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          };
        var LC = function (e) {
            var t,
              n = S.useContext(qv),
              r = n.getPrefixCls,
              i = n.direction,
              o = e.prefixCls,
              a = e.type,
              s = void 0 === a ? 'horizontal' : a,
              l = e.orientation,
              u = void 0 === l ? 'center' : l,
              c = e.orientationMargin,
              f = e.className,
              h = e.rootClassName,
              d = e.children,
              g = e.dashed,
              p = e.plain,
              v = jC(e, [
                'prefixCls',
                'type',
                'orientation',
                'orientationMargin',
                'className',
                'rootClassName',
                'children',
                'dashed',
                'plain',
              ]),
              y = r('divider', o),
              m = NC(y),
              b = ql()(m, 2),
              k = b[0],
              x = b[1],
              C = u.length > 0 ? '-'.concat(u) : u,
              E = !!d,
              O = 'left' === u && null != c,
              P = 'right' === u && null != c,
              A = Wv()(
                y,
                x,
                ''.concat(y, '-').concat(s),
                ((t = {}),
                w()(t, ''.concat(y, '-with-text'), E),
                w()(t, ''.concat(y, '-with-text').concat(C), E),
                w()(t, ''.concat(y, '-dashed'), !!g),
                w()(t, ''.concat(y, '-plain'), !!p),
                w()(t, ''.concat(y, '-rtl'), 'rtl' === i),
                w()(t, ''.concat(y, '-no-default-orientation-margin-left'), O),
                w()(t, ''.concat(y, '-no-default-orientation-margin-right'), P),
                t),
                f,
                h
              ),
              M = Object.assign(
                Object.assign({}, O && { marginLeft: c }),
                P && { marginRight: c }
              );
            return k(
              S.createElement(
                'div',
                Object.assign({ className: A }, v, { role: 'separator' }),
                d &&
                  'vertical' !== s &&
                  S.createElement(
                    'span',
                    { className: ''.concat(y, '-inner-text'), style: M },
                    d
                  )
              )
            );
          },
          RC = {
            icon: {
              tag: 'svg',
              attrs: { viewBox: '64 64 896 896', focusable: 'false' },
              children: [
                {
                  tag: 'path',
                  attrs: {
                    d: 'M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z',
                  },
                },
              ],
            },
            name: 'close',
            theme: 'outlined',
          },
          _C = (0, S.createContext)({});
        function IC(e) {
          return (
            'object' === Yv(e) &&
            'string' == typeof e.name &&
            'string' == typeof e.theme &&
            ('object' === Yv(e.icon) || 'function' == typeof e.icon)
          );
        }
        function DC() {
          var e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return Object.keys(e).reduce(function (t, n) {
            var r = e[n];
            if ('class' === n) (t.className = r), delete t.class;
            else t[n] = r;
            return t;
          }, {});
        }
        function zC(e, t, n) {
          return n
            ? S.createElement(
                e.tag,
                Kv(Kv({ key: t }, DC(e.attrs)), n),
                (e.children || []).map(function (n, r) {
                  return zC(n, ''.concat(t, '-').concat(e.tag, '-').concat(r));
                })
              )
            : S.createElement(
                e.tag,
                Kv({ key: t }, DC(e.attrs)),
                (e.children || []).map(function (n, r) {
                  return zC(n, ''.concat(t, '-').concat(e.tag, '-').concat(r));
                })
              );
        }
        function BC(e) {
          return dx(e)[0];
        }
        function VC(e) {
          return e ? (Array.isArray(e) ? e : [e]) : [];
        }
        var FC =
            '\n.anticon {\n  display: inline-block;\n  color: inherit;\n  font-style: normal;\n  line-height: 0;\n  text-align: center;\n  text-transform: none;\n  vertical-align: -0.125em;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.anticon > * {\n  line-height: 1;\n}\n\n.anticon svg {\n  display: inline-block;\n}\n\n.anticon::before {\n  display: none;\n}\n\n.anticon .anticon-icon {\n  display: block;\n}\n\n.anticon[tabindex] {\n  cursor: pointer;\n}\n\n.anticon-spin::before,\n.anticon-spin {\n  display: inline-block;\n  -webkit-animation: loadingCircle 1s infinite linear;\n  animation: loadingCircle 1s infinite linear;\n}\n\n@-webkit-keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n',
          UC = [
            'icon',
            'className',
            'onClick',
            'style',
            'primaryColor',
            'secondaryColor',
          ],
          HC = {
            primaryColor: '#333',
            secondaryColor: '#E6E6E6',
            calculated: !1,
          };
        var GC = function (e) {
          var t,
            n,
            r = e.icon,
            i = e.className,
            o = e.onClick,
            a = e.style,
            s = e.primaryColor,
            l = e.secondaryColor,
            u = Zv(e, UC),
            c = HC;
          if (
            (s && (c = { primaryColor: s, secondaryColor: l || BC(s) }),
            (function () {
              var e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : FC,
                t = (0, S.useContext)(_C),
                n = t.csp,
                r = t.prefixCls,
                i = e;
              r && (i = i.replace(/anticon/g, r)),
                (0, S.useEffect)(function () {
                  jy(i, '@ant-design-icons', { prepend: !0, csp: n });
                }, []);
            })(),
            (t = IC(r)),
            (n = 'icon should be icon definiton, but got '.concat(r)),
            sy(t, '[@ant-design/icons] '.concat(n)),
            !IC(r))
          )
            return null;
          var f = r;
          return (
            f &&
              'function' == typeof f.icon &&
              (f = Kv(
                Kv({}, f),
                {},
                { icon: f.icon(c.primaryColor, c.secondaryColor) }
              )),
            zC(
              f.icon,
              'svg-'.concat(f.name),
              Kv(
                {
                  className: i,
                  onClick: o,
                  style: a,
                  'data-icon': f.name,
                  width: '1em',
                  height: '1em',
                  fill: 'currentColor',
                  'aria-hidden': 'true',
                },
                u
              )
            )
          );
        };
        (GC.displayName = 'IconReact'),
          (GC.getTwoToneColors = function () {
            return Kv({}, HC);
          }),
          (GC.setTwoToneColors = function (e) {
            var t = e.primaryColor,
              n = e.secondaryColor;
            (HC.primaryColor = t),
              (HC.secondaryColor = n || BC(t)),
              (HC.calculated = !!n);
          });
        var WC = GC;
        function qC(e) {
          var t = ny(VC(e), 2),
            n = t[0],
            r = t[1];
          return WC.setTwoToneColors({ primaryColor: n, secondaryColor: r });
        }
        var XC = [
          'className',
          'icon',
          'spin',
          'rotate',
          'tabIndex',
          'onClick',
          'twoToneColor',
        ];
        qC('#1890ff');
        var YC = S.forwardRef(function (e, t) {
          var n,
            r = e.className,
            i = e.icon,
            o = e.spin,
            a = e.rotate,
            s = e.tabIndex,
            l = e.onClick,
            u = e.twoToneColor,
            c = Zv(e, XC),
            f = S.useContext(_C),
            h = f.prefixCls,
            d = void 0 === h ? 'anticon' : h,
            g = f.rootClassName,
            p = Wv()(
              g,
              d,
              ($v((n = {}), ''.concat(d, '-').concat(i.name), !!i.name),
              $v(n, ''.concat(d, '-spin'), !!o || 'loading' === i.name),
              n),
              r
            ),
            v = s;
          void 0 === v && l && (v = -1);
          var y = a
              ? {
                  msTransform: 'rotate('.concat(a, 'deg)'),
                  transform: 'rotate('.concat(a, 'deg)'),
                }
              : void 0,
            m = ny(VC(u), 2),
            b = m[0],
            k = m[1];
          return S.createElement(
            'span',
            Kv(
              Kv({ role: 'img', 'aria-label': i.name }, c),
              {},
              { ref: t, tabIndex: v, onClick: l, className: p }
            ),
            S.createElement(WC, {
              icon: i,
              primaryColor: b,
              secondaryColor: k,
              style: y,
            })
          );
        });
        (YC.displayName = 'AntdIcon'),
          (YC.getTwoToneColor = function () {
            var e = WC.getTwoToneColors();
            return e.calculated
              ? [e.primaryColor, e.secondaryColor]
              : e.primaryColor;
          }),
          (YC.setTwoToneColor = qC);
        var JC = YC,
          $C = function (e, t) {
            return S.createElement(JC, Kv(Kv({}, e), {}, { ref: t, icon: RC }));
          };
        $C.displayName = 'CloseOutlined';
        var QC = S.forwardRef($C),
          KC = function (e) {
            var t = e.componentCls,
              n = e.colorPrimary;
            return w()({}, t, {
              position: 'absolute',
              background: 'transparent',
              pointerEvents: 'none',
              boxSizing: 'border-box',
              color: 'var(--wave-color, '.concat(n, ')'),
              boxShadow: '0 0 0 0 currentcolor',
              opacity: 0.2,
              '&.wave-motion-appear': {
                transition: [
                  'box-shadow 0.4s '.concat(e.motionEaseOutCirc),
                  'opacity 2s '.concat(e.motionEaseOutCirc),
                ].join(','),
                '&-active': { boxShadow: '0 0 0 6px currentcolor', opacity: 0 },
              },
            });
          },
          ZC = sC('Wave', function (e) {
            return [KC(e)];
          });
        function eS() {
          eS = function () {
            return e;
          };
          var e = {},
            t = Object.prototype,
            n = t.hasOwnProperty,
            r =
              Object.defineProperty ||
              function (e, t, n) {
                e[t] = n.value;
              },
            i = 'function' == typeof Symbol ? Symbol : {},
            o = i.iterator || '@@iterator',
            a = i.asyncIterator || '@@asyncIterator',
            s = i.toStringTag || '@@toStringTag';
          function l(e, t, n) {
            return (
              Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              }),
              e[t]
            );
          }
          try {
            l({}, '');
          } catch (e) {
            l = function (e, t, n) {
              return (e[t] = n);
            };
          }
          function u(e, t, n, i) {
            var o = t && t.prototype instanceof h ? t : h,
              a = Object.create(o.prototype),
              s = new E(i || []);
            return r(a, '_invoke', { value: w(e, n, s) }), a;
          }
          function c(e, t, n) {
            try {
              return { type: 'normal', arg: e.call(t, n) };
            } catch (e) {
              return { type: 'throw', arg: e };
            }
          }
          e.wrap = u;
          var f = {};
          function h() {}
          function d() {}
          function g() {}
          var p = {};
          l(p, o, function () {
            return this;
          });
          var v = Object.getPrototypeOf,
            y = v && v(v(O([])));
          y && y !== t && n.call(y, o) && (p = y);
          var m = (g.prototype = h.prototype = Object.create(p));
          function b(e) {
            ['next', 'throw', 'return'].forEach(function (t) {
              l(e, t, function (e) {
                return this._invoke(t, e);
              });
            });
          }
          function k(e, t) {
            function i(r, o, a, s) {
              var l = c(e[r], e, o);
              if ('throw' !== l.type) {
                var u = l.arg,
                  f = u.value;
                return f && 'object' == Yv(f) && n.call(f, '__await')
                  ? t.resolve(f.__await).then(
                      function (e) {
                        i('next', e, a, s);
                      },
                      function (e) {
                        i('throw', e, a, s);
                      }
                    )
                  : t.resolve(f).then(
                      function (e) {
                        (u.value = e), a(u);
                      },
                      function (e) {
                        return i('throw', e, a, s);
                      }
                    );
              }
              s(l.arg);
            }
            var o;
            r(this, '_invoke', {
              value: function (e, n) {
                function r() {
                  return new t(function (t, r) {
                    i(e, n, t, r);
                  });
                }
                return (o = o ? o.then(r, r) : r());
              },
            });
          }
          function w(e, t, n) {
            var r = 'suspendedStart';
            return function (i, o) {
              if ('executing' === r)
                throw new Error('Generator is already running');
              if ('completed' === r) {
                if ('throw' === i) throw o;
                return P();
              }
              for (n.method = i, n.arg = o; ; ) {
                var a = n.delegate;
                if (a) {
                  var s = x(a, n);
                  if (s) {
                    if (s === f) continue;
                    return s;
                  }
                }
                if ('next' === n.method) n.sent = n._sent = n.arg;
                else if ('throw' === n.method) {
                  if ('suspendedStart' === r) throw ((r = 'completed'), n.arg);
                  n.dispatchException(n.arg);
                } else 'return' === n.method && n.abrupt('return', n.arg);
                r = 'executing';
                var l = c(e, t, n);
                if ('normal' === l.type) {
                  if (
                    ((r = n.done ? 'completed' : 'suspendedYield'), l.arg === f)
                  )
                    continue;
                  return { value: l.arg, done: n.done };
                }
                'throw' === l.type &&
                  ((r = 'completed'), (n.method = 'throw'), (n.arg = l.arg));
              }
            };
          }
          function x(e, t) {
            var n = t.method,
              r = e.iterator[n];
            if (void 0 === r)
              return (
                (t.delegate = null),
                ('throw' === n &&
                  e.iterator.return &&
                  ((t.method = 'return'),
                  (t.arg = void 0),
                  x(e, t),
                  'throw' === t.method)) ||
                  ('return' !== n &&
                    ((t.method = 'throw'),
                    (t.arg = new TypeError(
                      "The iterator does not provide a '" + n + "' method"
                    )))),
                f
              );
            var i = c(r, e.iterator, t.arg);
            if ('throw' === i.type)
              return (
                (t.method = 'throw'), (t.arg = i.arg), (t.delegate = null), f
              );
            var o = i.arg;
            return o
              ? o.done
                ? ((t[e.resultName] = o.value),
                  (t.next = e.nextLoc),
                  'return' !== t.method &&
                    ((t.method = 'next'), (t.arg = void 0)),
                  (t.delegate = null),
                  f)
                : o
              : ((t.method = 'throw'),
                (t.arg = new TypeError('iterator result is not an object')),
                (t.delegate = null),
                f);
          }
          function C(e) {
            var t = { tryLoc: e[0] };
            1 in e && (t.catchLoc = e[1]),
              2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])),
              this.tryEntries.push(t);
          }
          function S(e) {
            var t = e.completion || {};
            (t.type = 'normal'), delete t.arg, (e.completion = t);
          }
          function E(e) {
            (this.tryEntries = [{ tryLoc: 'root' }]),
              e.forEach(C, this),
              this.reset(!0);
          }
          function O(e) {
            if (e) {
              var t = e[o];
              if (t) return t.call(e);
              if ('function' == typeof e.next) return e;
              if (!isNaN(e.length)) {
                var r = -1,
                  i = function t() {
                    for (; ++r < e.length; )
                      if (n.call(e, r))
                        return (t.value = e[r]), (t.done = !1), t;
                    return (t.value = void 0), (t.done = !0), t;
                  };
                return (i.next = i);
              }
            }
            return { next: P };
          }
          function P() {
            return { value: void 0, done: !0 };
          }
          return (
            (d.prototype = g),
            r(m, 'constructor', { value: g, configurable: !0 }),
            r(g, 'constructor', { value: d, configurable: !0 }),
            (d.displayName = l(g, s, 'GeneratorFunction')),
            (e.isGeneratorFunction = function (e) {
              var t = 'function' == typeof e && e.constructor;
              return (
                !!t &&
                (t === d || 'GeneratorFunction' === (t.displayName || t.name))
              );
            }),
            (e.mark = function (e) {
              return (
                Object.setPrototypeOf
                  ? Object.setPrototypeOf(e, g)
                  : ((e.__proto__ = g), l(e, s, 'GeneratorFunction')),
                (e.prototype = Object.create(m)),
                e
              );
            }),
            (e.awrap = function (e) {
              return { __await: e };
            }),
            b(k.prototype),
            l(k.prototype, a, function () {
              return this;
            }),
            (e.AsyncIterator = k),
            (e.async = function (t, n, r, i, o) {
              void 0 === o && (o = Promise);
              var a = new k(u(t, n, r, i), o);
              return e.isGeneratorFunction(n)
                ? a
                : a.next().then(function (e) {
                    return e.done ? e.value : a.next();
                  });
            }),
            b(m),
            l(m, s, 'Generator'),
            l(m, o, function () {
              return this;
            }),
            l(m, 'toString', function () {
              return '[object Generator]';
            }),
            (e.keys = function (e) {
              var t = Object(e),
                n = [];
              for (var r in t) n.push(r);
              return (
                n.reverse(),
                function e() {
                  for (; n.length; ) {
                    var r = n.pop();
                    if (r in t) return (e.value = r), (e.done = !1), e;
                  }
                  return (e.done = !0), e;
                }
              );
            }),
            (e.values = O),
            (E.prototype = {
              constructor: E,
              reset: function (e) {
                if (
                  ((this.prev = 0),
                  (this.next = 0),
                  (this.sent = this._sent = void 0),
                  (this.done = !1),
                  (this.delegate = null),
                  (this.method = 'next'),
                  (this.arg = void 0),
                  this.tryEntries.forEach(S),
                  !e)
                )
                  for (var t in this)
                    't' === t.charAt(0) &&
                      n.call(this, t) &&
                      !isNaN(+t.slice(1)) &&
                      (this[t] = void 0);
              },
              stop: function () {
                this.done = !0;
                var e = this.tryEntries[0].completion;
                if ('throw' === e.type) throw e.arg;
                return this.rval;
              },
              dispatchException: function (e) {
                if (this.done) throw e;
                var t = this;
                function r(n, r) {
                  return (
                    (a.type = 'throw'),
                    (a.arg = e),
                    (t.next = n),
                    r && ((t.method = 'next'), (t.arg = void 0)),
                    !!r
                  );
                }
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                  var o = this.tryEntries[i],
                    a = o.completion;
                  if ('root' === o.tryLoc) return r('end');
                  if (o.tryLoc <= this.prev) {
                    var s = n.call(o, 'catchLoc'),
                      l = n.call(o, 'finallyLoc');
                    if (s && l) {
                      if (this.prev < o.catchLoc) return r(o.catchLoc, !0);
                      if (this.prev < o.finallyLoc) return r(o.finallyLoc);
                    } else if (s) {
                      if (this.prev < o.catchLoc) return r(o.catchLoc, !0);
                    } else {
                      if (!l)
                        throw new Error(
                          'try statement without catch or finally'
                        );
                      if (this.prev < o.finallyLoc) return r(o.finallyLoc);
                    }
                  }
                }
              },
              abrupt: function (e, t) {
                for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                  var i = this.tryEntries[r];
                  if (
                    i.tryLoc <= this.prev &&
                    n.call(i, 'finallyLoc') &&
                    this.prev < i.finallyLoc
                  ) {
                    var o = i;
                    break;
                  }
                }
                o &&
                  ('break' === e || 'continue' === e) &&
                  o.tryLoc <= t &&
                  t <= o.finallyLoc &&
                  (o = null);
                var a = o ? o.completion : {};
                return (
                  (a.type = e),
                  (a.arg = t),
                  o
                    ? ((this.method = 'next'), (this.next = o.finallyLoc), f)
                    : this.complete(a)
                );
              },
              complete: function (e, t) {
                if ('throw' === e.type) throw e.arg;
                return (
                  'break' === e.type || 'continue' === e.type
                    ? (this.next = e.arg)
                    : 'return' === e.type
                    ? ((this.rval = this.arg = e.arg),
                      (this.method = 'return'),
                      (this.next = 'end'))
                    : 'normal' === e.type && t && (this.next = t),
                  f
                );
              },
              finish: function (e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                  var n = this.tryEntries[t];
                  if (n.finallyLoc === e)
                    return this.complete(n.completion, n.afterLoc), S(n), f;
                }
              },
              catch: function (e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                  var n = this.tryEntries[t];
                  if (n.tryLoc === e) {
                    var r = n.completion;
                    if ('throw' === r.type) {
                      var i = r.arg;
                      S(n);
                    }
                    return i;
                  }
                }
                throw new Error('illegal catch attempt');
              },
              delegateYield: function (e, t, n) {
                return (
                  (this.delegate = {
                    iterator: O(e),
                    resultName: t,
                    nextLoc: n,
                  }),
                  'next' === this.method && (this.arg = void 0),
                  f
                );
              },
            }),
            e
          );
        }
        function tS(e, t, n, r, i, o, a) {
          try {
            var s = e[o](a),
              l = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(l) : Promise.resolve(l).then(r, i);
        }
        function nS(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (r, i) {
              var o = e.apply(t, n);
              function a(e) {
                tS(o, r, i, a, s, 'next', e);
              }
              function s(e) {
                tS(o, r, i, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        var rS,
          iS = Kv({}, zv),
          oS = iS.version,
          aS = iS.render,
          sS = iS.unmountComponentAtNode;
        try {
          Number((oS || '').split('.')[0]) >= 18 && (rS = iS.createRoot);
        } catch (e) {}
        function lS(e) {
          var t = iS.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
          t && 'object' === Yv(t) && (t.usingClientEntryPoint = e);
        }
        var uS = '__rc_react_root__';
        function cS(e, t) {
          rS
            ? (function (e, t) {
                lS(!0);
                var n = t[uS] || rS(t);
                lS(!1), n.render(e), (t[uS] = n);
              })(e, t)
            : (function (e, t) {
                aS(e, t);
              })(e, t);
        }
        function fS(e) {
          return hS.apply(this, arguments);
        }
        function hS() {
          return (hS = nS(
            eS().mark(function e(t) {
              return eS().wrap(function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return e.abrupt(
                        'return',
                        Promise.resolve().then(function () {
                          var e;
                          null === (e = t[uS]) || void 0 === e || e.unmount(),
                            delete t[uS];
                        })
                      );
                    case 1:
                    case 'end':
                      return e.stop();
                  }
              }, e);
            })
          )).apply(this, arguments);
        }
        function dS(e) {
          sS(e);
        }
        function gS() {
          return (gS = nS(
            eS().mark(function e(t) {
              return eS().wrap(function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      if (void 0 === rS) {
                        e.next = 2;
                        break;
                      }
                      return e.abrupt('return', fS(t));
                    case 2:
                      dS(t);
                    case 3:
                    case 'end':
                      return e.stop();
                  }
              }, e);
            })
          )).apply(this, arguments);
        }
        function pS(e) {
          return (
            e &&
            '#fff' !== e &&
            '#ffffff' !== e &&
            'rgb(255, 255, 255)' !== e &&
            'rgba(255, 255, 255, 1)' !== e &&
            (function (e) {
              var t = (e || '').match(
                /rgba?\((\d*), (\d*), (\d*)(, [\d.]*)?\)/
              );
              return !(
                t &&
                t[1] &&
                t[2] &&
                t[3] &&
                t[1] === t[2] &&
                t[2] === t[3]
              );
            })(e) &&
            !/rgba\((?:\d*, ){3}0\)/.test(e) &&
            'transparent' !== e
          );
        }
        function vS(e) {
          return Number.isNaN(e) ? 0 : e;
        }
        var yS = function (e) {
          var t = e.className,
            n = e.target,
            r = S.useRef(null),
            i = S.useState(null),
            o = ql()(i, 2),
            a = o[0],
            s = o[1],
            l = S.useState([]),
            u = ql()(l, 2),
            c = u[0],
            f = u[1],
            h = S.useState(0),
            d = ql()(h, 2),
            g = d[0],
            p = d[1],
            v = S.useState(0),
            y = ql()(v, 2),
            m = y[0],
            b = y[1],
            k = S.useState(0),
            w = ql()(k, 2),
            x = w[0],
            C = w[1],
            E = S.useState(0),
            O = ql()(E, 2),
            P = O[0],
            A = O[1],
            M = S.useState(!1),
            T = ql()(M, 2),
            N = T[0],
            j = T[1],
            L = {
              left: g,
              top: m,
              width: x,
              height: P,
              borderRadius: c
                .map(function (e) {
                  return ''.concat(e, 'px');
                })
                .join(' '),
            };
          function R() {
            var e = getComputedStyle(n);
            s(
              (function (e) {
                var t = getComputedStyle(e),
                  n = t.borderTopColor,
                  r = t.borderColor,
                  i = t.backgroundColor;
                return pS(n) ? n : pS(r) ? r : pS(i) ? i : null;
              })(n)
            );
            var t = 'static' === e.position,
              r = e.borderLeftWidth,
              i = e.borderTopWidth;
            p(t ? n.offsetLeft : vS(-parseFloat(r))),
              b(t ? n.offsetTop : vS(-parseFloat(i))),
              C(n.offsetWidth),
              A(n.offsetHeight);
            var o = e.borderTopLeftRadius,
              a = e.borderTopRightRadius,
              l = e.borderBottomLeftRadius,
              u = e.borderBottomRightRadius;
            f(
              [o, a, u, l].map(function (e) {
                return vS(parseFloat(e));
              })
            );
          }
          return (
            a && (L['--wave-color'] = a),
            S.useEffect(function () {
              if (n) {
                var e,
                  t = Cb(function () {
                    R(), j(!0);
                  });
                return (
                  'undefined' != typeof ResizeObserver &&
                    (e = new ResizeObserver(R)).observe(n),
                  function () {
                    Cb.cancel(t), null == e || e.disconnect();
                  }
                );
              }
            }, []),
            N
              ? S.createElement(
                  Ub,
                  {
                    visible: !0,
                    motionAppear: !0,
                    motionName: 'wave-motion',
                    motionDeadline: 5e3,
                    onAppearEnd: function (e, t) {
                      var n;
                      if (t.deadline || 'opacity' === t.propertyName) {
                        var i =
                          null === (n = r.current) || void 0 === n
                            ? void 0
                            : n.parentElement;
                        (function (e) {
                          return gS.apply(this, arguments);
                        })(i).then(function () {
                          var e;
                          null === (e = i.parentElement) ||
                            void 0 === e ||
                            e.removeChild(i);
                        });
                      }
                      return !1;
                    },
                  },
                  function (e) {
                    var n = e.className;
                    return S.createElement('div', {
                      ref: r,
                      className: Wv()(t, n),
                      style: L,
                    });
                  }
                )
              : null
          );
        };
        function mS(e, t) {
          return function () {
            !(function (e, t) {
              var n = document.createElement('div');
              (n.style.position = 'absolute'),
                (n.style.left = '0px'),
                (n.style.top = '0px'),
                null == e ||
                  e.insertBefore(n, null == e ? void 0 : e.firstChild),
                cS(S.createElement(yS, { target: e, className: t }), n);
            })(e.current, t);
          };
        }
        var bS = function (e) {
          var t = e.children,
            n = e.disabled,
            r = (0, S.useContext)(qv).getPrefixCls,
            i = (0, S.useRef)(null),
            o = r('wave'),
            a = ZC(o),
            s = ql()(a, 2)[1],
            l = mS(i, Wv()(o, s));
          return (
            S.useEffect(
              function () {
                var e = i.current;
                if (e && 1 === e.nodeType && !n) {
                  var t = function (t) {
                    'INPUT' === t.target.tagName ||
                      !Dm(t.target) ||
                      !e.getAttribute ||
                      e.getAttribute('disabled') ||
                      e.disabled ||
                      e.className.includes('disabled') ||
                      e.className.includes('-leave') ||
                      l();
                  };
                  return (
                    e.addEventListener('click', t, !0),
                    function () {
                      e.removeEventListener('click', t, !0);
                    }
                  );
                }
              },
              [n]
            ),
            S.isValidElement(t)
              ? vk(t, { ref: dy(t) ? fy(t.ref, i) : i })
              : null != t
              ? t
              : null
          );
        };
        var kS = function (e, t, n) {
            var r,
              i =
                'string' != typeof (r = n)
                  ? r
                  : r.charAt(0).toUpperCase() + r.slice(1);
            return w()({}, ''.concat(e.componentCls, '-').concat(t), {
              color: e['color'.concat(n)],
              background: e['color'.concat(i, 'Bg')],
              borderColor: e['color'.concat(i, 'Border')],
            });
          },
          wS = function (e) {
            return tC(e, function (t, n) {
              var r = n.textColor,
                i = n.lightBorderColor,
                o = n.lightColor,
                a = n.darkColor;
              return w()(
                {},
                ''.concat(e.componentCls, '-').concat(t),
                w()(
                  {
                    color: r,
                    background: o,
                    borderColor: i,
                    '&-inverse': {
                      color: e.colorTextLightSolid,
                      background: a,
                      borderColor: a,
                    },
                  },
                  '&'.concat(e.componentCls, '-borderless'),
                  { borderColor: 'transparent' }
                )
              );
            });
          },
          xS = function (e) {
            var t,
              n,
              r,
              i = e.paddingXXS,
              o = e.lineWidth,
              a = e.tagPaddingHorizontal,
              s = e.componentCls,
              l = a - o,
              u = i - o;
            return (
              (r = {}),
              w()(
                r,
                s,
                Object.assign(
                  Object.assign({}, Vx(e)),
                  ((n = {
                    display: 'inline-block',
                    height: 'auto',
                    marginInlineEnd: e.marginXS,
                    paddingInline: l,
                    fontSize: e.tagFontSize,
                    lineHeight: ''.concat(e.tagLineHeight, 'px'),
                    whiteSpace: 'nowrap',
                    background: e.tagDefaultBg,
                    border: ''
                      .concat(e.lineWidth, 'px ')
                      .concat(e.lineType, ' ')
                      .concat(e.colorBorder),
                    borderRadius: e.borderRadiusSM,
                    opacity: 1,
                    transition: 'all '.concat(e.motionDurationMid),
                    textAlign: 'start',
                  }),
                  w()(n, '&'.concat(s, '-rtl'), { direction: 'rtl' }),
                  w()(n, '&, a, a:hover', { color: e.tagDefaultColor }),
                  w()(n, ''.concat(s, '-close-icon'), {
                    marginInlineStart: u,
                    color: e.colorTextDescription,
                    fontSize: e.tagIconSize,
                    cursor: 'pointer',
                    transition: 'all '.concat(e.motionDurationMid),
                    '&:hover': { color: e.colorTextHeading },
                  }),
                  w()(
                    n,
                    '&'.concat(s, '-has-color'),
                    w()(
                      { borderColor: 'transparent' },
                      '&, a, a:hover, '
                        .concat(e.iconCls, '-close, ')
                        .concat(e.iconCls, '-close:hover'),
                      { color: e.colorTextLightSolid }
                    )
                  ),
                  w()(
                    n,
                    '&-checkable',
                    ((t = {
                      backgroundColor: 'transparent',
                      borderColor: 'transparent',
                      cursor: 'pointer',
                    }),
                    w()(t, '&:not('.concat(s, '-checkable-checked):hover'), {
                      color: e.colorPrimary,
                      backgroundColor: e.colorFillSecondary,
                    }),
                    w()(t, '&:active, &-checked', {
                      color: e.colorTextLightSolid,
                    }),
                    w()(t, '&-checked', {
                      backgroundColor: e.colorPrimary,
                      '&:hover': { backgroundColor: e.colorPrimaryHover },
                    }),
                    w()(t, '&:active', {
                      backgroundColor: e.colorPrimaryActive,
                    }),
                    t)
                  ),
                  w()(n, '&-hidden', { display: 'none' }),
                  w()(
                    n,
                    '> '
                      .concat(e.iconCls, ' + span, > span + ')
                      .concat(e.iconCls),
                    { marginInlineStart: l }
                  ),
                  n)
                )
              ),
              w()(r, ''.concat(s, '-borderless'), {
                borderColor: 'transparent',
                background: e.tagBorderlessBg,
              }),
              r
            );
          },
          CS = sC('Tag', function (e) {
            var t = e.fontSize,
              n = e.lineHeight,
              r = e.lineWidth,
              i = e.fontSizeIcon,
              o = Math.round(t * n),
              a = iC(e, {
                tagFontSize: e.fontSizeSM,
                tagLineHeight: o - 2 * r,
                tagDefaultBg: e.colorFillQuaternary,
                tagDefaultColor: e.colorText,
                tagIconSize: i - 2 * r,
                tagPaddingHorizontal: 8,
                tagBorderlessBg: e.colorFillTertiary,
              });
            return [
              xS(a),
              wS(a),
              kS(a, 'success', 'Success'),
              kS(a, 'processing', 'Info'),
              kS(a, 'error', 'Error'),
              kS(a, 'warning', 'Warning'),
            ];
          }),
          SS = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          ES = function (e) {
            var t,
              n = e.prefixCls,
              r = e.className,
              i = e.checked,
              o = e.onChange,
              a = e.onClick,
              s = SS(e, [
                'prefixCls',
                'className',
                'checked',
                'onChange',
                'onClick',
              ]),
              l = (0, S.useContext(qv).getPrefixCls)('tag', n),
              u = CS(l),
              c = ql()(u, 2),
              f = c[0],
              h = c[1],
              d = Wv()(
                l,
                ((t = {}),
                w()(t, ''.concat(l, '-checkable'), !0),
                w()(t, ''.concat(l, '-checkable-checked'), i),
                t),
                r,
                h
              );
            return f(
              S.createElement(
                'span',
                Object.assign({}, s, {
                  className: d,
                  onClick: function (e) {
                    null == o || o(!i), null == a || a(e);
                  },
                })
              )
            );
          },
          OS = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          PS = function (e, t) {
            var n,
              r = e.prefixCls,
              i = e.className,
              o = e.rootClassName,
              a = e.style,
              s = e.children,
              l = e.icon,
              u = e.color,
              c = e.onClose,
              f = e.closeIcon,
              h = e.closable,
              d = void 0 !== h && h,
              g = e.bordered,
              p = void 0 === g || g,
              v = OS(e, [
                'prefixCls',
                'className',
                'rootClassName',
                'style',
                'children',
                'icon',
                'color',
                'onClose',
                'closeIcon',
                'closable',
                'bordered',
              ]),
              y = S.useContext(qv),
              m = y.getPrefixCls,
              b = y.direction,
              k = S.useState(!0),
              x = ql()(k, 2),
              C = x[0],
              E = x[1];
            S.useEffect(
              function () {
                'visible' in v && E(v.visible);
              },
              [v.visible]
            );
            var O =
                hC(u) ||
                (function (e) {
                  return fC.includes(e);
                })(u),
              P = Object.assign({ backgroundColor: u && !O ? u : void 0 }, a),
              A = m('tag', r),
              M = CS(A),
              T = ql()(M, 2),
              N = T[0],
              j = T[1],
              L = Wv()(
                A,
                ((n = {}),
                w()(n, ''.concat(A, '-').concat(u), O),
                w()(n, ''.concat(A, '-has-color'), u && !O),
                w()(n, ''.concat(A, '-hidden'), !C),
                w()(n, ''.concat(A, '-rtl'), 'rtl' === b),
                w()(n, ''.concat(A, '-borderless'), !p),
                n),
                i,
                o,
                j
              ),
              R = function (e) {
                e.stopPropagation(),
                  null == c || c(e),
                  e.defaultPrevented || E(!1);
              },
              _ = S.useMemo(
                function () {
                  return d
                    ? f
                      ? S.createElement(
                          'span',
                          {
                            className: ''.concat(A, '-close-icon'),
                            onClick: R,
                          },
                          f
                        )
                      : S.createElement(QC, {
                          className: ''.concat(A, '-close-icon'),
                          onClick: R,
                        })
                    : null;
                },
                [d, f, A, R]
              ),
              I = 'function' == typeof v.onClick || (s && 'a' === s.type),
              D = l || null,
              z = D
                ? S.createElement(
                    S.Fragment,
                    null,
                    D,
                    S.createElement('span', null, s)
                  )
                : s,
              B = S.createElement(
                'span',
                Object.assign({}, v, { ref: t, className: L, style: P }),
                z,
                _
              );
            return N(I ? S.createElement(bS, null, B) : B);
          },
          AS = S.forwardRef(PS);
        AS.CheckableTag = ES;
        var MS,
          TS = AS,
          NS = function () {
            if (!ry() || !window.document.documentElement) return !1;
            if (void 0 !== MS) return MS;
            var e = document.createElement('div');
            return (
              (e.style.display = 'flex'),
              (e.style.flexDirection = 'column'),
              (e.style.rowGap = '1px'),
              e.appendChild(document.createElement('div')),
              e.appendChild(document.createElement('div')),
              document.body.appendChild(e),
              (MS = 1 === e.scrollHeight),
              document.body.removeChild(e),
              MS
            );
          },
          jS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];
        function LS() {
          var e = zx(),
            t = ql()(e, 2)[1],
            n = (function (e) {
              return {
                xs: '(max-width: '.concat(e.screenXSMax, 'px)'),
                sm: '(min-width: '.concat(e.screenSM, 'px)'),
                md: '(min-width: '.concat(e.screenMD, 'px)'),
                lg: '(min-width: '.concat(e.screenLG, 'px)'),
                xl: '(min-width: '.concat(e.screenXL, 'px)'),
                xxl: '(min-width: '.concat(e.screenXXL, 'px)'),
              };
            })(
              (function (e) {
                var t = e,
                  n = [].concat(jS).reverse();
                return (
                  n.forEach(function (e, r) {
                    var i = e.toUpperCase(),
                      o = 'screen'.concat(i, 'Min'),
                      a = 'screen'.concat(i);
                    if (!(t[o] <= t[a]))
                      throw new Error(
                        ''
                          .concat(o, '<=')
                          .concat(a, ' fails : !(')
                          .concat(t[o], '<=')
                          .concat(t[a], ')')
                      );
                    if (r < n.length - 1) {
                      var s = 'screen'.concat(i, 'Max');
                      if (!(t[a] <= t[s]))
                        throw new Error(
                          ''
                            .concat(a, '<=')
                            .concat(s, ' fails : !(')
                            .concat(t[a], '<=')
                            .concat(t[s], ')')
                        );
                      var l = n[r + 1].toUpperCase(),
                        u = 'screen'.concat(l, 'Min');
                      if (!(t[s] <= t[u]))
                        throw new Error(
                          ''
                            .concat(s, '<=')
                            .concat(u, ' fails : !(')
                            .concat(t[s], '<=')
                            .concat(t[u], ')')
                        );
                    }
                  }),
                  e
                );
              })(t)
            );
          return S.useMemo(
            function () {
              var e = new Map(),
                t = -1,
                r = {};
              return {
                matchHandlers: {},
                dispatch: function (t) {
                  return (
                    (r = t),
                    e.forEach(function (e) {
                      return e(r);
                    }),
                    e.size >= 1
                  );
                },
                subscribe: function (n) {
                  return (
                    e.size || this.register(), (t += 1), e.set(t, n), n(r), t
                  );
                },
                unsubscribe: function (t) {
                  e.delete(t), e.size || this.unregister();
                },
                unregister: function () {
                  var t = this;
                  Object.keys(n).forEach(function (e) {
                    var r = n[e],
                      i = t.matchHandlers[r];
                    null == i ||
                      i.mql.removeListener(null == i ? void 0 : i.listener);
                  }),
                    e.clear();
                },
                register: function () {
                  var e = this;
                  Object.keys(n).forEach(function (t) {
                    var i = n[t],
                      o = function (n) {
                        var i = n.matches;
                        e.dispatch(
                          Object.assign(Object.assign({}, r), w()({}, t, i))
                        );
                      },
                      a = window.matchMedia(i);
                    a.addListener(o),
                      (e.matchHandlers[i] = { mql: a, listener: o }),
                      o(a);
                  });
                },
                responsiveMap: n,
              };
            },
            [t]
          );
        }
        var RS = (0, S.createContext)({}),
          _S = function (e) {
            var t = e.componentCls;
            return w()({}, t, {
              display: 'flex',
              flexFlow: 'row wrap',
              minWidth: 0,
              '&::before, &::after': { display: 'flex' },
              '&-no-wrap': { flexWrap: 'nowrap' },
              '&-start': { justifyContent: 'flex-start' },
              '&-center': { justifyContent: 'center' },
              '&-end': { justifyContent: 'flex-end' },
              '&-space-between': { justifyContent: 'space-between' },
              '&-space-around': { justifyContent: 'space-around' },
              '&-space-evenly': { justifyContent: 'space-evenly' },
              '&-top': { alignItems: 'flex-start' },
              '&-middle': { alignItems: 'center' },
              '&-bottom': { alignItems: 'flex-end' },
            });
          },
          IS = function (e) {
            var t = e.componentCls;
            return w()({}, t, {
              position: 'relative',
              maxWidth: '100%',
              minHeight: 1,
            });
          },
          DS = function (e, t) {
            return (function (e, t) {
              for (
                var n = e.componentCls, r = e.gridColumns, i = {}, o = r;
                o >= 0;
                o--
              )
                0 === o
                  ? ((i[''.concat(n).concat(t, '-').concat(o)] = {
                      display: 'none',
                    }),
                    (i[''.concat(n, '-push-').concat(o)] = {
                      insetInlineStart: 'auto',
                    }),
                    (i[''.concat(n, '-pull-').concat(o)] = {
                      insetInlineEnd: 'auto',
                    }),
                    (i[''.concat(n).concat(t, '-push-').concat(o)] = {
                      insetInlineStart: 'auto',
                    }),
                    (i[''.concat(n).concat(t, '-pull-').concat(o)] = {
                      insetInlineEnd: 'auto',
                    }),
                    (i[''.concat(n).concat(t, '-offset-').concat(o)] = {
                      marginInlineStart: 0,
                    }),
                    (i[''.concat(n).concat(t, '-order-').concat(o)] = {
                      order: 0,
                    }))
                  : ((i[''.concat(n).concat(t, '-').concat(o)] = {
                      display: 'block',
                      flex: '0 0 '.concat((o / r) * 100, '%'),
                      maxWidth: ''.concat((o / r) * 100, '%'),
                    }),
                    (i[''.concat(n).concat(t, '-push-').concat(o)] = {
                      insetInlineStart: ''.concat((o / r) * 100, '%'),
                    }),
                    (i[''.concat(n).concat(t, '-pull-').concat(o)] = {
                      insetInlineEnd: ''.concat((o / r) * 100, '%'),
                    }),
                    (i[''.concat(n).concat(t, '-offset-').concat(o)] = {
                      marginInlineStart: ''.concat((o / r) * 100, '%'),
                    }),
                    (i[''.concat(n).concat(t, '-order-').concat(o)] = {
                      order: o,
                    }));
              return i;
            })(e, t);
          },
          zS = sC('Grid', function (e) {
            return [_S(e)];
          }),
          BS = sC('Grid', function (e) {
            var t = iC(e, { gridColumns: 24 }),
              n = {
                '-sm': t.screenSMMin,
                '-md': t.screenMDMin,
                '-lg': t.screenLGMin,
                '-xl': t.screenXLMin,
                '-xxl': t.screenXXLMin,
              };
            return [
              IS(t),
              DS(t, ''),
              DS(t, '-xs'),
              Object.keys(n)
                .map(function (e) {
                  return (function (e, t, n) {
                    return w()(
                      {},
                      '@media (min-width: '.concat(t, 'px)'),
                      Object.assign({}, DS(e, n))
                    );
                  })(t, n[e], e);
                })
                .reduce(function (e, t) {
                  return Object.assign(Object.assign({}, e), t);
                }, {}),
            ];
          }),
          VS = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          };
        function FS(e, t) {
          var n = S.useState('string' == typeof e ? e : ''),
            r = ql()(n, 2),
            i = r[0],
            o = r[1];
          return (
            S.useEffect(
              function () {
                !(function () {
                  if (('string' == typeof e && o(e), 'object' === _()(e)))
                    for (var n = 0; n < jS.length; n++) {
                      var r = jS[n];
                      if (t[r]) {
                        var i = e[r];
                        if (void 0 !== i) return void o(i);
                      }
                    }
                })();
              },
              [JSON.stringify(e), t]
            ),
            i
          );
        }
        var US = S.forwardRef(function (e, t) {
          var n,
            r,
            i,
            o,
            a,
            s = e.prefixCls,
            l = e.justify,
            u = e.align,
            c = e.className,
            f = e.style,
            h = e.children,
            d = e.gutter,
            g = void 0 === d ? 0 : d,
            p = e.wrap,
            v = VS(e, [
              'prefixCls',
              'justify',
              'align',
              'className',
              'style',
              'children',
              'gutter',
              'wrap',
            ]),
            y = S.useContext(qv),
            m = y.getPrefixCls,
            b = y.direction,
            k = S.useState({ xs: !0, sm: !0, md: !0, lg: !0, xl: !0, xxl: !0 }),
            x = ql()(k, 2),
            C = x[0],
            E = x[1],
            O = S.useState({ xs: !1, sm: !1, md: !1, lg: !1, xl: !1, xxl: !1 }),
            P = ql()(O, 2),
            A = P[0],
            M = P[1],
            T = FS(u, A),
            N = FS(l, A),
            j =
              ((r = S.useState(!1)),
              (i = ql()(r, 2)),
              (o = i[0]),
              (a = i[1]),
              S.useEffect(function () {
                a(NS());
              }, []),
              o),
            L = S.useRef(g),
            R = LS();
          S.useEffect(function () {
            var e = R.subscribe(function (e) {
              M(e);
              var t = L.current || 0;
              ((!Array.isArray(t) && 'object' === _()(t)) ||
                (Array.isArray(t) &&
                  ('object' === _()(t[0]) || 'object' === _()(t[1])))) &&
                E(e);
            });
            return function () {
              return R.unsubscribe(e);
            };
          }, []);
          var I,
            D = m('row', s),
            z = zS(D),
            B = ql()(z, 2),
            V = B[0],
            F = B[1],
            U =
              ((I = [void 0, void 0]),
              (Array.isArray(g) ? g : [g, void 0]).forEach(function (e, t) {
                if ('object' === _()(e))
                  for (var n = 0; n < jS.length; n++) {
                    var r = jS[n];
                    if (C[r] && void 0 !== e[r]) {
                      I[t] = e[r];
                      break;
                    }
                  }
                else I[t] = e;
              }),
              I),
            H = Wv()(
              D,
              ((n = {}),
              w()(n, ''.concat(D, '-no-wrap'), !1 === p),
              w()(n, ''.concat(D, '-').concat(N), N),
              w()(n, ''.concat(D, '-').concat(T), T),
              w()(n, ''.concat(D, '-rtl'), 'rtl' === b),
              n),
              c,
              F
            ),
            G = {},
            W = null != U[0] && U[0] > 0 ? U[0] / -2 : void 0,
            q = null != U[1] && U[1] > 0 ? U[1] / -2 : void 0;
          if ((W && ((G.marginLeft = W), (G.marginRight = W)), j)) {
            var X = ql()(U, 2);
            G.rowGap = X[1];
          } else q && ((G.marginTop = q), (G.marginBottom = q));
          var Y = ql()(U, 2),
            J = Y[0],
            $ = Y[1],
            Q = S.useMemo(
              function () {
                return { gutter: [J, $], wrap: p, supportFlexGap: j };
              },
              [J, $, p, j]
            );
          return V(
            S.createElement(
              RS.Provider,
              { value: Q },
              S.createElement(
                'div',
                Object.assign({}, v, {
                  className: H,
                  style: Object.assign(Object.assign({}, G), f),
                  ref: t,
                }),
                h
              )
            )
          );
        });
        var HS = US,
          GS = function (e, t) {
            var n = {};
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (
              null != e &&
              'function' == typeof Object.getOwnPropertySymbols
            ) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                t.indexOf(r[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                  (n[r[i]] = e[r[i]]);
            }
            return n;
          };
        var WS = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'],
          qS = S.forwardRef(function (e, t) {
            var n,
              r = S.useContext(qv),
              i = r.getPrefixCls,
              o = r.direction,
              a = S.useContext(RS),
              s = a.gutter,
              l = a.wrap,
              u = a.supportFlexGap,
              c = e.prefixCls,
              f = e.span,
              h = e.order,
              d = e.offset,
              g = e.push,
              p = e.pull,
              v = e.className,
              y = e.children,
              m = e.flex,
              b = e.style,
              k = GS(e, [
                'prefixCls',
                'span',
                'order',
                'offset',
                'push',
                'pull',
                'className',
                'children',
                'flex',
                'style',
              ]),
              x = i('col', c),
              C = BS(x),
              E = ql()(C, 2),
              O = E[0],
              P = E[1],
              A = {};
            WS.forEach(function (t) {
              var n,
                r = {},
                i = e[t];
              'number' == typeof i
                ? (r.span = i)
                : 'object' === _()(i) && (r = i || {}),
                delete k[t],
                (A = Object.assign(
                  Object.assign({}, A),
                  ((n = {}),
                  w()(
                    n,
                    ''.concat(x, '-').concat(t, '-').concat(r.span),
                    void 0 !== r.span
                  ),
                  w()(
                    n,
                    ''.concat(x, '-').concat(t, '-order-').concat(r.order),
                    r.order || 0 === r.order
                  ),
                  w()(
                    n,
                    ''.concat(x, '-').concat(t, '-offset-').concat(r.offset),
                    r.offset || 0 === r.offset
                  ),
                  w()(
                    n,
                    ''.concat(x, '-').concat(t, '-push-').concat(r.push),
                    r.push || 0 === r.push
                  ),
                  w()(
                    n,
                    ''.concat(x, '-').concat(t, '-pull-').concat(r.pull),
                    r.pull || 0 === r.pull
                  ),
                  w()(n, ''.concat(x, '-rtl'), 'rtl' === o),
                  n)
                ));
            });
            var M = Wv()(
                x,
                ((n = {}),
                w()(n, ''.concat(x, '-').concat(f), void 0 !== f),
                w()(n, ''.concat(x, '-order-').concat(h), h),
                w()(n, ''.concat(x, '-offset-').concat(d), d),
                w()(n, ''.concat(x, '-push-').concat(g), g),
                w()(n, ''.concat(x, '-pull-').concat(p), p),
                n),
                v,
                A,
                P
              ),
              T = {};
            if (s && s[0] > 0) {
              var N = s[0] / 2;
              (T.paddingLeft = N), (T.paddingRight = N);
            }
            if (s && s[1] > 0 && !u) {
              var j = s[1] / 2;
              (T.paddingTop = j), (T.paddingBottom = j);
            }
            return (
              m &&
                ((T.flex = (function (e) {
                  return 'number' == typeof e
                    ? ''.concat(e, ' ').concat(e, ' auto')
                    : /^\d+(\.\d+)?(px|em|rem|%)$/.test(e)
                    ? '0 0 '.concat(e)
                    : e;
                })(m)),
                !1 !== l || T.minWidth || (T.minWidth = 0)),
              O(
                S.createElement(
                  'div',
                  Object.assign({}, k, {
                    style: Object.assign(Object.assign({}, T), b),
                    className: M,
                    ref: t,
                  }),
                  y
                )
              )
            );
          });
        var XS = qS,
          YS = {
            icon: {
              tag: 'svg',
              attrs: { viewBox: '64 64 896 896', focusable: 'false' },
              children: [
                {
                  tag: 'path',
                  attrs: {
                    d: 'M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3zM664.8 561.6l36.1 210.3L512 672.7 323.1 772l36.1-210.3-152.8-149L417.6 382 512 190.7 606.4 382l211.2 30.7-152.8 148.9z',
                  },
                },
              ],
            },
            name: 'star',
            theme: 'outlined',
          },
          JS = (0, S.createContext)({}),
          $S = [
            { index: 7, opacity: 0.15 },
            { index: 6, opacity: 0.25 },
            { index: 5, opacity: 0.3 },
            { index: 5, opacity: 0.45 },
            { index: 5, opacity: 0.65 },
            { index: 5, opacity: 0.85 },
            { index: 4, opacity: 0.9 },
            { index: 3, opacity: 0.95 },
            { index: 2, opacity: 0.97 },
            { index: 1, opacity: 0.98 },
          ];
        function QS(e) {
          var t = Yw(e.r, e.g, e.b);
          return { h: 360 * t.h, s: t.s, v: t.v };
        }
        function KS(e) {
          var t = e.r,
            n = e.g,
            r = e.b;
          return '#'.concat(Jw(t, n, r, !1));
        }
        function ZS(e, t, n) {
          var r = n / 100;
          return {
            r: (t.r - e.r) * r + e.r,
            g: (t.g - e.g) * r + e.g,
            b: (t.b - e.b) * r + e.b,
          };
        }
        function eE(e, t, n) {
          var r;
          return (
            (r =
              Math.round(e.h) >= 60 && Math.round(e.h) <= 240
                ? n
                  ? Math.round(e.h) - 2 * t
                  : Math.round(e.h) + 2 * t
                : n
                ? Math.round(e.h) + 2 * t
                : Math.round(e.h) - 2 * t) < 0
              ? (r += 360)
              : r >= 360 && (r -= 360),
            r
          );
        }
        function tE(e, t, n) {
          return 0 === e.h && 0 === e.s
            ? e.s
            : ((r = n
                ? e.s - 0.16 * t
                : 4 === t
                ? e.s + 0.16
                : e.s + 0.05 * t) > 1 && (r = 1),
              n && 5 === t && r > 0.1 && (r = 0.1),
              r < 0.06 && (r = 0.06),
              Number(r.toFixed(2)));
          var r;
        }
        function nE(e, t, n) {
          var r;
          return (
            (r = n ? e.v + 0.05 * t : e.v - 0.15 * t) > 1 && (r = 1),
            Number(r.toFixed(2))
          );
        }
        function rE(e) {
          for (
            var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {},
              n = [],
              r = ex(e),
              i = 5;
            i > 0;
            i -= 1
          ) {
            var o = QS(r),
              a = KS(ex({ h: eE(o, i, !0), s: tE(o, i, !0), v: nE(o, i, !0) }));
            n.push(a);
          }
          n.push(KS(r));
          for (var s = 1; s <= 4; s += 1) {
            var l = QS(r),
              u = KS(ex({ h: eE(l, s), s: tE(l, s), v: nE(l, s) }));
            n.push(u);
          }
          return 'dark' === t.theme
            ? $S.map(function (e) {
                var r = e.index,
                  i = e.opacity;
                return KS(
                  ZS(ex(t.backgroundColor || '#141414'), ex(n[r]), 100 * i)
                );
              })
            : n;
        }
        var iE = {
            red: '#F5222D',
            volcano: '#FA541C',
            orange: '#FA8C16',
            gold: '#FAAD14',
            yellow: '#FADB14',
            lime: '#A0D911',
            green: '#52C41A',
            cyan: '#13C2C2',
            blue: '#1890FF',
            geekblue: '#2F54EB',
            purple: '#722ED1',
            magenta: '#EB2F96',
            grey: '#666666',
          },
          oE = {},
          aE = {};
        Object.keys(iE).forEach(function (e) {
          (oE[e] = rE(iE[e])),
            (oE[e].primary = oE[e][5]),
            (aE[e] = rE(iE[e], { theme: 'dark', backgroundColor: '#141414' })),
            (aE[e].primary = aE[e][5]);
        });
        oE.red,
          oE.volcano,
          oE.gold,
          oE.orange,
          oE.yellow,
          oE.lime,
          oE.green,
          oE.cyan,
          oE.blue,
          oE.geekblue,
          oE.purple,
          oE.magenta,
          oE.grey;
        function sE(e) {
          return (
            'object' === Yv(e) &&
            'string' == typeof e.name &&
            'string' == typeof e.theme &&
            ('object' === Yv(e.icon) || 'function' == typeof e.icon)
          );
        }
        function lE() {
          var e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return Object.keys(e).reduce(function (t, n) {
            var r = e[n];
            if ('class' === n) (t.className = r), delete t.class;
            else t[n] = r;
            return t;
          }, {});
        }
        function uE(e, t, n) {
          return n
            ? S.createElement(
                e.tag,
                Kv(Kv({ key: t }, lE(e.attrs)), n),
                (e.children || []).map(function (n, r) {
                  return uE(n, ''.concat(t, '-').concat(e.tag, '-').concat(r));
                })
              )
            : S.createElement(
                e.tag,
                Kv({ key: t }, lE(e.attrs)),
                (e.children || []).map(function (n, r) {
                  return uE(n, ''.concat(t, '-').concat(e.tag, '-').concat(r));
                })
              );
        }
        function cE(e) {
          return rE(e)[0];
        }
        function fE(e) {
          return e ? (Array.isArray(e) ? e : [e]) : [];
        }
        var hE =
            '\n.anticon {\n  display: inline-block;\n  color: inherit;\n  font-style: normal;\n  line-height: 0;\n  text-align: center;\n  text-transform: none;\n  vertical-align: -0.125em;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.anticon > * {\n  line-height: 1;\n}\n\n.anticon svg {\n  display: inline-block;\n}\n\n.anticon::before {\n  display: none;\n}\n\n.anticon .anticon-icon {\n  display: block;\n}\n\n.anticon[tabindex] {\n  cursor: pointer;\n}\n\n.anticon-spin::before,\n.anticon-spin {\n  display: inline-block;\n  -webkit-animation: loadingCircle 1s infinite linear;\n  animation: loadingCircle 1s infinite linear;\n}\n\n@-webkit-keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n',
          dE = [
            'icon',
            'className',
            'onClick',
            'style',
            'primaryColor',
            'secondaryColor',
          ],
          gE = {
            primaryColor: '#333',
            secondaryColor: '#E6E6E6',
            calculated: !1,
          };
        var pE = function (e) {
          var t,
            n,
            r = e.icon,
            i = e.className,
            o = e.onClick,
            a = e.style,
            s = e.primaryColor,
            l = e.secondaryColor,
            u = Zv(e, dE),
            c = gE;
          if (
            (s && (c = { primaryColor: s, secondaryColor: l || cE(s) }),
            (function () {
              var e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : hE,
                t = (0, S.useContext)(JS).csp;
              (0, S.useEffect)(function () {
                jy(e, '@ant-design-icons', { prepend: !0, csp: t });
              }, []);
            })(),
            (t = sE(r)),
            (n = 'icon should be icon definiton, but got '.concat(r)),
            sy(t, '[@ant-design/icons] '.concat(n)),
            !sE(r))
          )
            return null;
          var f = r;
          return (
            f &&
              'function' == typeof f.icon &&
              (f = Kv(
                Kv({}, f),
                {},
                { icon: f.icon(c.primaryColor, c.secondaryColor) }
              )),
            uE(
              f.icon,
              'svg-'.concat(f.name),
              Kv(
                {
                  className: i,
                  onClick: o,
                  style: a,
                  'data-icon': f.name,
                  width: '1em',
                  height: '1em',
                  fill: 'currentColor',
                  'aria-hidden': 'true',
                },
                u
              )
            )
          );
        };
        (pE.displayName = 'IconReact'),
          (pE.getTwoToneColors = function () {
            return Kv({}, gE);
          }),
          (pE.setTwoToneColors = function (e) {
            var t = e.primaryColor,
              n = e.secondaryColor;
            (gE.primaryColor = t),
              (gE.secondaryColor = n || cE(t)),
              (gE.calculated = !!n);
          });
        var vE = pE;
        function yE(e) {
          var t = ny(fE(e), 2),
            n = t[0],
            r = t[1];
          return vE.setTwoToneColors({ primaryColor: n, secondaryColor: r });
        }
        var mE = [
          'className',
          'icon',
          'spin',
          'rotate',
          'tabIndex',
          'onClick',
          'twoToneColor',
        ];
        yE('#1890ff');
        var bE = S.forwardRef(function (e, t) {
          var n,
            r = e.className,
            i = e.icon,
            o = e.spin,
            a = e.rotate,
            s = e.tabIndex,
            l = e.onClick,
            u = e.twoToneColor,
            c = Zv(e, mE),
            f = S.useContext(JS),
            h = f.prefixCls,
            d = void 0 === h ? 'anticon' : h,
            g = f.rootClassName,
            p = Wv()(
              g,
              d,
              ($v((n = {}), ''.concat(d, '-').concat(i.name), !!i.name),
              $v(n, ''.concat(d, '-spin'), !!o || 'loading' === i.name),
              n),
              r
            ),
            v = s;
          void 0 === v && l && (v = -1);
          var y = a
              ? {
                  msTransform: 'rotate('.concat(a, 'deg)'),
                  transform: 'rotate('.concat(a, 'deg)'),
                }
              : void 0,
            m = ny(fE(u), 2),
            b = m[0],
            k = m[1];
          return S.createElement(
            'span',
            Kv(
              Kv({ role: 'img', 'aria-label': i.name }, c),
              {},
              { ref: t, tabIndex: v, onClick: l, className: p }
            ),
            S.createElement(vE, {
              icon: i,
              primaryColor: b,
              secondaryColor: k,
              style: y,
            })
          );
        });
        (bE.displayName = 'AntdIcon'),
          (bE.getTwoToneColor = function () {
            var e = vE.getTwoToneColors();
            return e.calculated
              ? [e.primaryColor, e.secondaryColor]
              : e.primaryColor;
          }),
          (bE.setTwoToneColor = yE);
        var kE = bE,
          wE = function (e, t) {
            return S.createElement(kE, Kv(Kv({}, e), {}, { ref: t, icon: YS }));
          };
        wE.displayName = 'StarOutlined';
        var xE = S.forwardRef(wE),
          CE = {
            icon: {
              tag: 'svg',
              attrs: { viewBox: '64 64 896 896', focusable: 'false' },
              children: [
                {
                  tag: 'path',
                  attrs: {
                    d: 'M908 640H804V488c0-4.4-3.6-8-8-8H548v-96h108c8.8 0 16-7.2 16-16V80c0-8.8-7.2-16-16-16H368c-8.8 0-16 7.2-16 16v288c0 8.8 7.2 16 16 16h108v96H228c-4.4 0-8 3.6-8 8v152H116c-8.8 0-16 7.2-16 16v288c0 8.8 7.2 16 16 16h288c8.8 0 16-7.2 16-16V656c0-8.8-7.2-16-16-16H292v-88h440v88H620c-8.8 0-16 7.2-16 16v288c0 8.8 7.2 16 16 16h288c8.8 0 16-7.2 16-16V656c0-8.8-7.2-16-16-16zm-564 76v168H176V716h168zm84-408V140h168v168H428zm420 576H680V716h168v168z',
                  },
                },
              ],
            },
            name: 'apartment',
            theme: 'outlined',
          },
          SE = function (e, t) {
            return S.createElement(kE, Kv(Kv({}, e), {}, { ref: t, icon: CE }));
          };
        SE.displayName = 'ApartmentOutlined';
        var EE = S.forwardRef(SE),
          OE =
            ('undefined' != typeof globalThis && globalThis) ||
            ('undefined' != typeof self && self) ||
            (void 0 !== OE && OE),
          PE = 'URLSearchParams' in OE,
          AE = 'Symbol' in OE && 'iterator' in Symbol,
          ME =
            'FileReader' in OE &&
            'Blob' in OE &&
            (function () {
              try {
                return new Blob(), !0;
              } catch (e) {
                return !1;
              }
            })(),
          TE = 'FormData' in OE,
          NE = 'ArrayBuffer' in OE;
        if (NE)
          var jE = [
              '[object Int8Array]',
              '[object Uint8Array]',
              '[object Uint8ClampedArray]',
              '[object Int16Array]',
              '[object Uint16Array]',
              '[object Int32Array]',
              '[object Uint32Array]',
              '[object Float32Array]',
              '[object Float64Array]',
            ],
            LE =
              ArrayBuffer.isView ||
              function (e) {
                return e && jE.indexOf(Object.prototype.toString.call(e)) > -1;
              };
        function RE(e) {
          if (
            ('string' != typeof e && (e = String(e)),
            /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(e) || '' === e)
          )
            throw new TypeError(
              'Invalid character in header field name: "' + e + '"'
            );
          return e.toLowerCase();
        }
        function _E(e) {
          return 'string' != typeof e && (e = String(e)), e;
        }
        function IE(e) {
          var t = {
            next: function () {
              var t = e.shift();
              return { done: void 0 === t, value: t };
            },
          };
          return (
            AE &&
              (t[Symbol.iterator] = function () {
                return t;
              }),
            t
          );
        }
        function DE(e) {
          (this.map = {}),
            e instanceof DE
              ? e.forEach(function (e, t) {
                  this.append(t, e);
                }, this)
              : Array.isArray(e)
              ? e.forEach(function (e) {
                  this.append(e[0], e[1]);
                }, this)
              : e &&
                Object.getOwnPropertyNames(e).forEach(function (t) {
                  this.append(t, e[t]);
                }, this);
        }
        function zE(e) {
          if (e.bodyUsed) return Promise.reject(new TypeError('Already read'));
          e.bodyUsed = !0;
        }
        function BE(e) {
          return new Promise(function (t, n) {
            (e.onload = function () {
              t(e.result);
            }),
              (e.onerror = function () {
                n(e.error);
              });
          });
        }
        function VE(e) {
          var t = new FileReader(),
            n = BE(t);
          return t.readAsArrayBuffer(e), n;
        }
        function FE(e) {
          if (e.slice) return e.slice(0);
          var t = new Uint8Array(e.byteLength);
          return t.set(new Uint8Array(e)), t.buffer;
        }
        function UE() {
          return (
            (this.bodyUsed = !1),
            (this._initBody = function (e) {
              var t;
              (this.bodyUsed = this.bodyUsed),
                (this._bodyInit = e),
                e
                  ? 'string' == typeof e
                    ? (this._bodyText = e)
                    : ME && Blob.prototype.isPrototypeOf(e)
                    ? (this._bodyBlob = e)
                    : TE && FormData.prototype.isPrototypeOf(e)
                    ? (this._bodyFormData = e)
                    : PE && URLSearchParams.prototype.isPrototypeOf(e)
                    ? (this._bodyText = e.toString())
                    : NE && ME && (t = e) && DataView.prototype.isPrototypeOf(t)
                    ? ((this._bodyArrayBuffer = FE(e.buffer)),
                      (this._bodyInit = new Blob([this._bodyArrayBuffer])))
                    : NE && (ArrayBuffer.prototype.isPrototypeOf(e) || LE(e))
                    ? (this._bodyArrayBuffer = FE(e))
                    : (this._bodyText = e = Object.prototype.toString.call(e))
                  : (this._bodyText = ''),
                this.headers.get('content-type') ||
                  ('string' == typeof e
                    ? this.headers.set(
                        'content-type',
                        'text/plain;charset=UTF-8'
                      )
                    : this._bodyBlob && this._bodyBlob.type
                    ? this.headers.set('content-type', this._bodyBlob.type)
                    : PE &&
                      URLSearchParams.prototype.isPrototypeOf(e) &&
                      this.headers.set(
                        'content-type',
                        'application/x-www-form-urlencoded;charset=UTF-8'
                      ));
            }),
            ME &&
              ((this.blob = function () {
                var e = zE(this);
                if (e) return e;
                if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                if (this._bodyArrayBuffer)
                  return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                if (this._bodyFormData)
                  throw new Error('could not read FormData body as blob');
                return Promise.resolve(new Blob([this._bodyText]));
              }),
              (this.arrayBuffer = function () {
                if (this._bodyArrayBuffer) {
                  var e = zE(this);
                  return (
                    e ||
                    (ArrayBuffer.isView(this._bodyArrayBuffer)
                      ? Promise.resolve(
                          this._bodyArrayBuffer.buffer.slice(
                            this._bodyArrayBuffer.byteOffset,
                            this._bodyArrayBuffer.byteOffset +
                              this._bodyArrayBuffer.byteLength
                          )
                        )
                      : Promise.resolve(this._bodyArrayBuffer))
                  );
                }
                return this.blob().then(VE);
              })),
            (this.text = function () {
              var e,
                t,
                n,
                r = zE(this);
              if (r) return r;
              if (this._bodyBlob)
                return (
                  (e = this._bodyBlob),
                  (t = new FileReader()),
                  (n = BE(t)),
                  t.readAsText(e),
                  n
                );
              if (this._bodyArrayBuffer)
                return Promise.resolve(
                  (function (e) {
                    for (
                      var t = new Uint8Array(e), n = new Array(t.length), r = 0;
                      r < t.length;
                      r++
                    )
                      n[r] = String.fromCharCode(t[r]);
                    return n.join('');
                  })(this._bodyArrayBuffer)
                );
              if (this._bodyFormData)
                throw new Error('could not read FormData body as text');
              return Promise.resolve(this._bodyText);
            }),
            TE &&
              (this.formData = function () {
                return this.text().then(WE);
              }),
            (this.json = function () {
              return this.text().then(JSON.parse);
            }),
            this
          );
        }
        (DE.prototype.append = function (e, t) {
          (e = RE(e)), (t = _E(t));
          var n = this.map[e];
          this.map[e] = n ? n + ', ' + t : t;
        }),
          (DE.prototype.delete = function (e) {
            delete this.map[RE(e)];
          }),
          (DE.prototype.get = function (e) {
            return (e = RE(e)), this.has(e) ? this.map[e] : null;
          }),
          (DE.prototype.has = function (e) {
            return this.map.hasOwnProperty(RE(e));
          }),
          (DE.prototype.set = function (e, t) {
            this.map[RE(e)] = _E(t);
          }),
          (DE.prototype.forEach = function (e, t) {
            for (var n in this.map)
              this.map.hasOwnProperty(n) && e.call(t, this.map[n], n, this);
          }),
          (DE.prototype.keys = function () {
            var e = [];
            return (
              this.forEach(function (t, n) {
                e.push(n);
              }),
              IE(e)
            );
          }),
          (DE.prototype.values = function () {
            var e = [];
            return (
              this.forEach(function (t) {
                e.push(t);
              }),
              IE(e)
            );
          }),
          (DE.prototype.entries = function () {
            var e = [];
            return (
              this.forEach(function (t, n) {
                e.push([n, t]);
              }),
              IE(e)
            );
          }),
          AE && (DE.prototype[Symbol.iterator] = DE.prototype.entries);
        var HE = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];
        function GE(e, t) {
          if (!(this instanceof GE))
            throw new TypeError(
              'Please use the "new" operator, this DOM object constructor cannot be called as a function.'
            );
          var n,
            r,
            i = (t = t || {}).body;
          if (e instanceof GE) {
            if (e.bodyUsed) throw new TypeError('Already read');
            (this.url = e.url),
              (this.credentials = e.credentials),
              t.headers || (this.headers = new DE(e.headers)),
              (this.method = e.method),
              (this.mode = e.mode),
              (this.signal = e.signal),
              i ||
                null == e._bodyInit ||
                ((i = e._bodyInit), (e.bodyUsed = !0));
          } else this.url = String(e);
          if (
            ((this.credentials =
              t.credentials || this.credentials || 'same-origin'),
            (!t.headers && this.headers) || (this.headers = new DE(t.headers)),
            (this.method =
              ((n = t.method || this.method || 'GET'),
              (r = n.toUpperCase()),
              HE.indexOf(r) > -1 ? r : n)),
            (this.mode = t.mode || this.mode || null),
            (this.signal = t.signal || this.signal),
            (this.referrer = null),
            ('GET' === this.method || 'HEAD' === this.method) && i)
          )
            throw new TypeError('Body not allowed for GET or HEAD requests');
          if (
            (this._initBody(i),
            !(
              ('GET' !== this.method && 'HEAD' !== this.method) ||
              ('no-store' !== t.cache && 'no-cache' !== t.cache)
            ))
          ) {
            var o = /([?&])_=[^&]*/;
            if (o.test(this.url))
              this.url = this.url.replace(o, '$1_=' + new Date().getTime());
            else {
              this.url +=
                (/\?/.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();
            }
          }
        }
        function WE(e) {
          var t = new FormData();
          return (
            e
              .trim()
              .split('&')
              .forEach(function (e) {
                if (e) {
                  var n = e.split('='),
                    r = n.shift().replace(/\+/g, ' '),
                    i = n.join('=').replace(/\+/g, ' ');
                  t.append(decodeURIComponent(r), decodeURIComponent(i));
                }
              }),
            t
          );
        }
        function qE(e, t) {
          if (!(this instanceof qE))
            throw new TypeError(
              'Please use the "new" operator, this DOM object constructor cannot be called as a function.'
            );
          t || (t = {}),
            (this.type = 'default'),
            (this.status = void 0 === t.status ? 200 : t.status),
            (this.ok = this.status >= 200 && this.status < 300),
            (this.statusText =
              void 0 === t.statusText ? '' : '' + t.statusText),
            (this.headers = new DE(t.headers)),
            (this.url = t.url || ''),
            this._initBody(e);
        }
        (GE.prototype.clone = function () {
          return new GE(this, { body: this._bodyInit });
        }),
          UE.call(GE.prototype),
          UE.call(qE.prototype),
          (qE.prototype.clone = function () {
            return new qE(this._bodyInit, {
              status: this.status,
              statusText: this.statusText,
              headers: new DE(this.headers),
              url: this.url,
            });
          }),
          (qE.error = function () {
            var e = new qE(null, { status: 0, statusText: '' });
            return (e.type = 'error'), e;
          });
        var XE = [301, 302, 303, 307, 308];
        qE.redirect = function (e, t) {
          if (-1 === XE.indexOf(t)) throw new RangeError('Invalid status code');
          return new qE(null, { status: t, headers: { location: e } });
        };
        var YE = OE.DOMException;
        try {
          new YE();
        } catch (e) {
          ((YE = function (e, t) {
            (this.message = e), (this.name = t);
            var n = Error(e);
            this.stack = n.stack;
          }).prototype = Object.create(Error.prototype)),
            (YE.prototype.constructor = YE);
        }
        function JE(e, t) {
          return new Promise(function (n, r) {
            var i = new GE(e, t);
            if (i.signal && i.signal.aborted)
              return r(new YE('Aborted', 'AbortError'));
            var o = new XMLHttpRequest();
            function a() {
              o.abort();
            }
            (o.onload = function () {
              var e,
                t,
                r = {
                  status: o.status,
                  statusText: o.statusText,
                  headers:
                    ((e = o.getAllResponseHeaders() || ''),
                    (t = new DE()),
                    e
                      .replace(/\r?\n[\t ]+/g, ' ')
                      .split('\r')
                      .map(function (e) {
                        return 0 === e.indexOf('\n')
                          ? e.substr(1, e.length)
                          : e;
                      })
                      .forEach(function (e) {
                        var n = e.split(':'),
                          r = n.shift().trim();
                        if (r) {
                          var i = n.join(':').trim();
                          t.append(r, i);
                        }
                      }),
                    t),
                };
              r.url =
                'responseURL' in o
                  ? o.responseURL
                  : r.headers.get('X-Request-URL');
              var i = 'response' in o ? o.response : o.responseText;
              setTimeout(function () {
                n(new qE(i, r));
              }, 0);
            }),
              (o.onerror = function () {
                setTimeout(function () {
                  r(new TypeError('Network request failed'));
                }, 0);
              }),
              (o.ontimeout = function () {
                setTimeout(function () {
                  r(new TypeError('Network request failed'));
                }, 0);
              }),
              (o.onabort = function () {
                setTimeout(function () {
                  r(new YE('Aborted', 'AbortError'));
                }, 0);
              }),
              o.open(
                i.method,
                (function (e) {
                  try {
                    return '' === e && OE.location.href ? OE.location.href : e;
                  } catch (t) {
                    return e;
                  }
                })(i.url),
                !0
              ),
              'include' === i.credentials
                ? (o.withCredentials = !0)
                : 'omit' === i.credentials && (o.withCredentials = !1),
              'responseType' in o &&
                (ME
                  ? (o.responseType = 'blob')
                  : NE &&
                    i.headers.get('Content-Type') &&
                    -1 !==
                      i.headers
                        .get('Content-Type')
                        .indexOf('application/octet-stream') &&
                    (o.responseType = 'arraybuffer')),
              !t || 'object' !== _()(t.headers) || t.headers instanceof DE
                ? i.headers.forEach(function (e, t) {
                    o.setRequestHeader(t, e);
                  })
                : Object.getOwnPropertyNames(t.headers).forEach(function (e) {
                    o.setRequestHeader(e, _E(t.headers[e]));
                  }),
              i.signal &&
                (i.signal.addEventListener('abort', a),
                (o.onreadystatechange = function () {
                  4 === o.readyState &&
                    i.signal.removeEventListener('abort', a);
                })),
              o.send(void 0 === i._bodyInit ? null : i._bodyInit);
          });
        }
        (JE.polyfill = !0),
          OE.fetch ||
            ((OE.fetch = JE),
            (OE.Headers = DE),
            (OE.Request = GE),
            (OE.Response = qE));
        var $E = function (e) {
            var t = e.source,
              n = e.language,
              r = (t.url, t.completeUrl),
              i = t.describe,
              o = t.tags,
              a = void 0 === o ? [] : o,
              s = t.websiteUrl,
              l = t.githubUrl,
              u = t.latestVersionUrl,
              c = t.overviewUrl,
              f = t.apiUrl,
              h = t.name,
              d = (0, S.useState)(0),
              g = ql()(d, 2),
              p = g[0],
              v = g[1],
              y = (0, S.useState)(0),
              m = ql()(y, 2),
              b = m[0],
              k = m[1];
            console.log(h, 'name');
            var w = ['Spring Cloud', 'Nacos', 'RocketMQ', 'Seata', 'Sentinel'],
              x = [
                { label: 'GitHub', url: l },
                { label: '官网', url: s },
                { label: '最新版本', url: u },
                { label: '快速入门', url: c },
                {
                  label: '快速构建',
                  url: 'https://start.aliyun.com/',
                  visible: w.includes(h),
                },
              ],
              E = [
                { label: 'GitHub', url: l },
                { label: 'Website', url: s },
                { label: 'Latest', url: u },
                { label: 'Quick Start', url: c },
                {
                  label: 'Initializer',
                  url: 'https://start.aliyun.com/',
                  visible: w.includes(h),
                },
              ],
              O = function () {
                window.open(l, '_blank');
              },
              P = function () {
                var e = ''.concat(l, '/fork');
                window.open(e, '_blank');
              };
            return (
              (0, S.useEffect)(function () {
                !(function () {
                  var e,
                    t = sessionStorage.getItem('ServerlessGitHubInfo'),
                    n = null !== (e = JSON.parse(t)) && void 0 !== e ? e : {};
                  if (n.hasOwnProperty(h)) {
                    var r = n[h],
                      i = r.starCount,
                      o = r.forkCount;
                    v(i), k(o);
                  } else
                    fetch(f)
                      .then(function (e) {
                        return e.json();
                      })
                      .then(function (e) {
                        v(e.stargazers_count), k(e.forks_count);
                        var t = C()({}, n);
                        (t[h] = {
                          starCount: e.stargazers_count,
                          forkCount: e.forks_count,
                        }),
                          sessionStorage.setItem(
                            'ServerlessGitHubInfo',
                            JSON.stringify(t)
                          );
                      });
                })();
              }, []),
              S.createElement(
                'div',
                { className: 'node-card' },
                S.createElement(
                  'div',
                  {
                    style: {
                      marginBottom: 4,
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'center',
                    },
                  },
                  S.createElement('img', {
                    src: r,
                    alt: '',
                    style: { width: 150 },
                  }),
                  S.createElement(
                    'div',
                    null,
                    a.map(function (e) {
                      return S.createElement(
                        TS,
                        { color: 'processing', style: { marginBottom: 4 } },
                        e
                      );
                    })
                  )
                ),
                S.createElement(LC, { style: { margin: '8px 0' } }),
                S.createElement('div', { style: { marginBottom: 12 } }, i),
                S.createElement(
                  'div',
                  null,
                  ('cn' === n ? x : E).map(function (e) {
                    var t = e.visible;
                    if (void 0 === t || t)
                      return S.createElement(
                        HS,
                        null,
                        S.createElement(XS, { span: 6 }, e.label, ':'),
                        S.createElement(
                          XS,
                          { span: 18 },
                          S.createElement(
                            'div',
                            {
                              style: {
                                width: '100%',
                                overflow: 'hidden',
                                whiteSpace: 'nowrap',
                                textOverflow: 'ellipsis',
                              },
                            },
                            S.createElement(
                              'a',
                              { href: e.url, target: '_blank' },
                              e.url
                            )
                          ),
                          'GitHub' === e.label &&
                            S.createElement(
                              'div',
                              null,
                              S.createElement(
                                TS,
                                {
                                  color: '#cccffd',
                                  icon: S.createElement(xE, {
                                    style: { color: '#5072fc' },
                                  }),
                                  onClick: O,
                                  style: { cursor: 'pointer' },
                                },
                                S.createElement(
                                  'span',
                                  { style: { color: '#5072fc' } },
                                  p
                                )
                              ),
                              S.createElement(
                                TS,
                                {
                                  color: '#cccffd',
                                  icon: S.createElement(EE, {
                                    style: { color: '#5072fc' },
                                  }),
                                  onClick: P,
                                  style: { cursor: 'pointer' },
                                },
                                S.createElement(
                                  'span',
                                  { style: { color: '#5072fc' } },
                                  b
                                )
                              )
                            )
                        )
                      );
                  })
                )
              )
            );
          },
          QE = function (e) {
            var t = e.iconSource,
              n = e.hasBase,
              r = void 0 === n || n,
              i = e.language,
              o = (0, S.useState)(!1),
              a = ql()(o, 2),
              s = a[0],
              l = a[1],
              u = (0, S.useState)(!1),
              c = ql()(u, 2),
              f = c[0],
              h = c[1],
              d = function () {
                h(!0);
              },
              g = function () {
                h(!1);
              };
            return S.createElement(
              S.Fragment,
              null,
              r &&
                S.createElement(
                  'div',
                  { className: 'node-base' },
                  S.createElement('img', {
                    src: 'https://img.alicdn.com/imgextra/i2/O1CN01uk4pyc1Hf7Jj1MMc9_!!6000000000784-55-tps-72-49.svg',
                    alt: '',
                    style: { width: 70 },
                  }),
                  f &&
                    S.createElement(
                      'div',
                      { className: 'base-active' },
                      S.createElement('img', {
                        src: 'https://img.alicdn.com/imgextra/i1/O1CN01xf1t2a1QDTxbMruxa_!!6000000001942-55-tps-60-30.svg',
                        alt: '',
                      })
                    )
                ),
              S.createElement('div', { className: 'node-icon-title' }, t.name),
              r
                ? S.createElement(
                    MC,
                    {
                      content: S.createElement($E, { source: t, language: i }),
                      trigger: 'hover',
                      open: s,
                      onOpenChange: function (e) {
                        l(e);
                      },
                    },
                    S.createElement(
                      'div',
                      {
                        className: 'node-icon',
                        onMouseEnter: d,
                        onMouseLeave: g,
                      },
                      S.createElement('img', { src: t.url, alt: '' })
                    )
                  )
                : S.createElement(
                    'div',
                    {
                      className: 'node-icon node-icon-no-base',
                      onMouseEnter: d,
                      onMouseLeave: g,
                    },
                    S.createElement('img', { src: t.url, alt: '' })
                  )
            );
          },
          KE = function (e) {
            var t = e.iconSource,
              n = e.hasBase,
              r = void 0 !== n && n,
              i = e.language;
            return S.createElement(
              S.Fragment,
              null,
              1 === t.length &&
                S.createElement(
                  'div',
                  null,
                  S.createElement('div', { className: 'custom-node' }),
                  S.createElement(
                    'div',
                    { className: 'custom-node-base' },
                    S.createElement(QE, {
                      iconSource: t[0],
                      hasBase: r,
                      language: i,
                    })
                  )
                ),
              2 === t.length &&
                S.createElement(
                  'div',
                  null,
                  S.createElement('div', { className: 'double-node' }),
                  S.createElement(
                    'div',
                    { className: 'double-node-base1' },
                    S.createElement(QE, { iconSource: t[0], language: i })
                  ),
                  S.createElement(
                    'div',
                    { className: 'double-node-base2' },
                    S.createElement(QE, { iconSource: t[1], language: i })
                  )
                ),
              (3 === t.length || 4 === t.length) &&
                S.createElement(
                  'div',
                  null,
                  S.createElement('div', { className: 'four-node' }),
                  S.createElement(
                    'div',
                    { className: 'four-node-base1' },
                    S.createElement(QE, { iconSource: t[0], language: i })
                  ),
                  S.createElement(
                    'div',
                    { className: 'four-node-base2' },
                    S.createElement(QE, { iconSource: t[1], language: i })
                  ),
                  S.createElement(
                    'div',
                    { className: 'four-node-base3' },
                    S.createElement(QE, { iconSource: t[2], language: i })
                  ),
                  4 === t.length &&
                    S.createElement(
                      'div',
                      { className: 'four-node-base4' },
                      S.createElement(QE, { iconSource: t[3], language: i })
                    )
                )
            );
          },
          ZE =
            'https://img.alicdn.com/imgextra/i2/O1CN014OFGKB1PjFoyRkUVK_!!6000000001876-55-tps-28-28.svg',
          eO =
            'https://img.alicdn.com/imgextra/i2/O1CN01YaRcu81aNgwrDXFdb_!!6000000003318-55-tps-36-36.svg',
          tO =
            'https://img.alicdn.com/imgextra/i3/O1CN01Z19f2d1X38JuBVfLX_!!6000000002867-55-tps-22-33.svg',
          nO =
            'https://img.alicdn.com/imgextra/i2/O1CN01gTVczm23JDwHnxg2U_!!6000000007234-55-tps-20-30.svg',
          rO =
            'https://img.alicdn.com/imgextra/i3/O1CN015oej0c1DwHiK9gS2H_!!6000000000280-55-tps-26-36.svg',
          iO =
            'https://img.alicdn.com/imgextra/i1/O1CN01XZzR6J1DgiEaLFB8c_!!6000000000246-55-tps-22-24.svg',
          oO =
            'https://img.alicdn.com/imgextra/i3/O1CN01Mi9RDw1wFphKfvLxV_!!6000000006279-55-tps-29-14.svg',
          aO =
            'https://img.alicdn.com/imgextra/i3/O1CN01xqLyrD1EzmKwFr5za_!!6000000000423-55-tps-54-53.svg',
          sO =
            'https://img.alicdn.com/imgextra/i4/O1CN01TQsfeG1Joqy8zt3am_!!6000000001076-55-tps-28-32.svg',
          lO =
            'https://img.alicdn.com/imgextra/i4/O1CN01K8luu41pyX2kiPDpx_!!6000000005429-55-tps-28-27.svg',
          uO =
            'https://img.alicdn.com/imgextra/i1/O1CN01KfsTd81N4NEm4dUeW_!!6000000001516-55-tps-28-25.svg',
          cO =
            'https://img.alicdn.com/imgextra/i1/O1CN01Bgku601IaMpCoTO7l_!!6000000000909-55-tps-23-27.svg',
          fO =
            'https://img.alicdn.com/imgextra/i2/O1CN01a6QhuT1K9SmsiRJsj_!!6000000001121-55-tps-72-72.svg',
          hO =
            'https://img.alicdn.com/imgextra/i3/O1CN01W9zJae25Wcl6rIDF5_!!6000000007534-55-tps-31-18.svg',
          dO =
            'https://img.alicdn.com/imgextra/i3/O1CN01CPTOAs21f5cQLspak_!!6000000007011-55-tps-24-34.svg',
          gO =
            'https://img.alicdn.com/imgextra/i2/O1CN01zB4RIc29U74D9oN1v_!!6000000008070-0-tps-1084-170.jpg',
          pO =
            'https://img.alicdn.com/imgextra/i2/O1CN01TwMGAB1JBSuJs89IV_!!6000000000990-55-tps-200-36.svg',
          vO =
            'https://img.alicdn.com/imgextra/i4/O1CN01MOPC3d26x1CW2bKow_!!6000000007727-55-tps-200-36.svg',
          yO =
            'https://img.alicdn.com/imgextra/i3/O1CN01RYYGIS1M97jPdoxvS_!!6000000001391-55-tps-200-36.svg',
          mO =
            'https://img.alicdn.com/imgextra/i4/O1CN01QTT3O11ntplFwB078_!!6000000005148-55-tps-576-200.svg',
          bO =
            'https://img.alicdn.com/imgextra/i2/O1CN01syKCmL26AvcDuGjki_!!6000000007622-55-tps-200-36.svg',
          kO =
            'https://img.alicdn.com/imgextra/i4/O1CN011jCRlz22FGuMYgt1w_!!6000000007090-55-tps-200-36.svg',
          wO =
            'https://img.alicdn.com/imgextra/i4/O1CN01tpHsxw1KDaMHBTj0J_!!6000000001130-55-tps-200-36.svg',
          xO =
            'https://img.alicdn.com/imgextra/i1/O1CN018g3SFB1cVb10sxwJc_!!6000000003606-55-tps-201-37.svg',
          CO =
            'https://img.alicdn.com/imgextra/i2/O1CN01oZ8maS1diFZgFZOiX_!!6000000003769-55-tps-200-36.svg',
          SO =
            'https://img.alicdn.com/imgextra/i3/O1CN01JUoVCT1I0BXNas0nd_!!6000000000830-55-tps-200-36.svg',
          EO =
            'https://img.alicdn.com/imgextra/i4/O1CN01QmiFs01FsjrmkMBeL_!!6000000000543-55-tps-200-36.svg',
          OO =
            'https://img.alicdn.com/imgextra/i1/O1CN019dTRNx1b6ZlBZBptH_!!6000000003416-55-tps-200-43.svg',
          PO = {
            middle1: [{ url: aO, name: '', visible: !1 }],
            middle2: [
              {
                url: uO,
                completeUrl: CO,
                name: 'Higress',
                describe:
                  '⼀个遵循开源Ingress/Gateway API标准，提供流量调度、服务治理、安全防护三合⼀的高集成、易使用、易扩展、热更新的下⼀代云原生网关。',
                tags: ['流量网关', '微服务网关', '安全网关'],
                websiteUrl: 'https://higress.io/',
                githubUrl: 'https://github.com/alibaba/higress',
                latestVersionUrl:
                  'https://github.com/alibaba/higress/releases/tag/v0.5.0',
                overviewUrl:
                  'https://higress.io/zh-cn/docs/overview/what-is-higress.html',
                apiUrl: '//api.github.com/repos/alibaba/higress',
              },
            ],
            middle3: [
              {
                url: cO,
                completeUrl: SO,
                name: 'Dubbo',
                describe:
                  'Apache Dubbo是⼀款微服务框架，为⼤规模微服务 实践提供⾼性能RPC通信、流量治理、可观测性等解决⽅案，涵盖Java、Golang等多种语⾔SDK实现。',
                tags: ['微服务', '服务调⽤', 'RPC通信'],
                websiteUrl: 'https://dubbo.apache.org/',
                githubUrl: 'https://github.com/apache/dubbo',
                latestVersionUrl:
                  'https://github.com/apache/dubbo/releases/tag/dubbo-3.1.3',
                overviewUrl: 'https://dubbo.apache.org/zh/overview/',
                apiUrl: '//api.github.com/repos/alibaba/dubbo',
              },
              {
                url: ZE,
                completeUrl: gO,
                name: 'Spring Cloud',
                describe: '一站式的分布式应用开发框架。',
                tags: ['应用框架', '微服务'],
                githubUrl: ' https://github.com/alibaba/spring-cloud-alibaba',
                apiUrl: '//api.github.com/repos/alibaba/spring-cloud-alibaba',
                websiteUrl: 'https://spring.io/projects/spring-cloud-alibaba',
                overviewUrl:
                  'https://github.com/alibaba/spring-cloud-alibaba/blob/2021.x/README-zh.md',
                latestVersionUrl:
                  'https://github.com/alibaba/spring-cloud-alibaba/releases/tag/2021.0.4.0',
              },
            ],
            middle4: [
              {
                url: cO,
                completeUrl: SO,
                name: 'Dubbo',
                describe:
                  'Apache Dubbo是⼀款微服务框架，为⼤规模微服务 实践提供⾼性能RPC通信、流量治理、可观测性等解决⽅案，涵盖Java、Golang等多种语⾔SDK实现。',
                tags: ['微服务', '服务调⽤', 'RPC通信'],
                websiteUrl: 'https://dubbo.apache.org/',
                githubUrl: 'https://github.com/apache/dubbo',
                latestVersionUrl:
                  'https://github.com/apache/dubbo/releases/tag/dubbo-3.1.3',
                overviewUrl: 'https://dubbo.apache.org/zh/overview/',
                apiUrl: '//api.github.com/repos/alibaba/dubbo',
              },
              {
                url: ZE,
                completeUrl: gO,
                name: 'Spring Cloud',
                describe: '一站式的分布式应用开发框架。',
                tags: ['应用框架', '微服务'],
                githubUrl: ' https://github.com/alibaba/spring-cloud-alibaba',
                apiUrl: '//api.github.com/repos/alibaba/spring-cloud-alibaba',
                websiteUrl: 'https://spring.io/projects/spring-cloud-alibaba',
                overviewUrl:
                  'https://github.com/alibaba/spring-cloud-alibaba/blob/2021.x/README-zh.md',
                latestVersionUrl:
                  'https://github.com/alibaba/spring-cloud-alibaba/releases/tag/2021.0.4.0',
              },
            ],
            middle5: [{ url: fO, name: '', visible: !1 }],
            right1: [
              {
                url: rO,
                completeUrl: mO,
                name: 'RocketMQ',
                describe:
                  '云原生“消息、事件、流”实时数据处理平台，覆盖云边端⼀体化数据处理场景。',
                tags: ['消息', '事件', '流'],
                websiteUrl: 'https://rocketmq.apache.org/',
                githubUrl: 'https://github.com/apache/rocketmq',
                latestVersionUrl:
                  'https://github.com/apache/rocketmq/releases/tag/rocketmq-all-5.0.0',
                overviewUrl:
                  'https://rocketmq.apache.org/zh/docs/quickStart/02quickstart',
                apiUrl: '//api.github.com/repos/apache/rocketmq',
              },
            ],
            right2: [
              {
                url: oO,
                completeUrl: kO,
                name: 'Nacos',
                describe:
                  '⼀个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。',
                tags: ['配置管理', '服务发现', '服务管理'],
                websiteUrl: 'https://nacos.io/',
                githubUrl: 'https://github.com/alibaba/nacos',
                latestVersionUrl:
                  'https://github.com/alibaba/nacos/releases/tag/2.1.2',
                overviewUrl:
                  'https://nacos.io/zh-cn/docs/v2/quickstart/quick-start.html',
                apiUrl: '//api.github.com/repos/alibaba/nacos',
              },
              {
                url: iO,
                completeUrl: bO,
                name: 'OpenSergo',
                describe:
                  'OpenSergo是⼀套开放通用的、面向云原生服务、覆盖微服务及上下游关联组件的微服务治理标准。',
                tags: ['微服务治理 ', '治理标准', '流量治理'],
                websiteUrl: 'https://opensergo.io/',
                githubUrl:
                  'https://github.com/opensergo/opensergo-specification',
                latestVersionUrl:
                  'https://github.com/opensergo/opensergo-java-sdk/releases/tag/v0.1.0-beta1',
                overviewUrl:
                  'https://opensergo.io/zh-cn/docs/quick-start/opensergo-control-plane/',
                apiUrl:
                  '//api.github.com/repos/opensergo/opensergo-specification',
              },
            ],
            right3: [
              {
                url: eO,
                completeUrl: pO,
                name: 'Skywalking',
                describe:
                  '⼀款用于分布式系统的应用程序性能监视工具，尤其是面向微服务、云原生和基于容器(Kubernetes)架构设计。',
                tags: ['链路追踪', '应用诊断', '性能监控'],
                websiteUrl: 'https://skywalking.apache.org/',
                githubUrl: 'https://github.com/apache/skywalking',
                latestVersionUrl:
                  'https://github.com/apache/skywalking/releases/tag/v9.3.0',
                overviewUrl:
                  'https://skywalking.apache.org/docs/skywalking-showcase/latest/readme/',
                apiUrl: '//api.github.com/repos/apache/skywalking',
              },
            ],
            left1: [
              {
                url: tO,
                completeUrl: vO,
                name: 'Sentinel',
                describe:
                  'Sentinel是⼀款面向分布式、多语言异构化服务架构的流量治理组件。',
                tags: ['高可用', '流量治理', '流量防护'],
                websiteUrl: 'https://sentinelguard.io/',
                githubUrl: 'https://github.com/alibaba/Sentinel',
                latestVersionUrl:
                  'https://github.com/alibaba/Sentinel/releases/tag/1.8.6',
                overviewUrl:
                  'https://sentinelguard.io/zh-cn/docs/quick-start.html',
                apiUrl: '//api.github.com/repos/alibaba/sentinel',
              },
              {
                url: hO,
                completeUrl: EO,
                name: 'ChaosBlade',
                describe:
                  'ChaosBlade是⼀个云原生混沌工程平台，支持多种环境、集群和语言。',
                tags: ['高可用', '云原生', '混沌工程'],
                websiteUrl: 'https://chaosblade.io/',
                githubUrl: 'https://github.com/chaosblade-io/chaosblade',
                latestVersionUrl:
                  'https://github.com/chaosblade-io/chaosblade/releases/tag/v1.7.0',
                overviewUrl: 'https://chaosblade.io/docs',
                apiUrl: '//api.github.com/repos/chaosblade-io/chaosblade',
              },
              {
                url: dO,
                completeUrl: OO,
                name: 'AppActive',
                describe:
                  '一款标准、通用且功能强大的，致力于构建应用多活架构的开源中间件。',
                tags: ['多活容灾', '高可用', '稳定性'],
                websiteUrl: 'https://doc.appactive.io/',
                githubUrl: 'https://github.com/alibaba/Appactive',
                latestVersionUrl:
                  'https://github.com/alibaba/Appactive/releases/tag/v0.2.1',
                overviewUrl: 'https://doc.appactive.io/docs/cn/README_CN.html/',
                apiUrl: '//api.github.com/repos/alibaba/Appactive',
              },
            ],
            left2: [
              {
                url: sO,
                completeUrl: wO,
                name: 'KubeVela',
                describe:
                  '是⼀个现代化的软件交付平台，它可以让你的应用交付在当今流行的混合、多云环境中变得更加简单、高效、可靠。',
                tags: ['软件交付', '应用管理', '多云部署'],
                websiteUrl: 'https://kubevela.io/',
                githubUrl: 'https://github.com/kubevela/kubevela',
                latestVersionUrl:
                  'https://github.com/kubevela/kubevela/releases/tag/v1.6.4',
                overviewUrl: 'https://kubevela.io/zh/docs/quick-start',
                apiUrl: '//api.github.com/repos/kubevela/kubevela',
              },
              {
                url: lO,
                completeUrl: xO,
                name: 'Kubernetes',
                describe:
                  'Kubernetes是⼀个开源的容器编排引擎，用来对容器化应用进行自动化部署、扩缩和管理。',
                tags: ['容器编排', '应用管理', '发布部署'],
                websiteUrl: 'https://kubernetes.io/',
                githubUrl: 'https://github.com/kubernetes/kubernetes',
                latestVersionUrl:
                  'https://github.com/kubernetes/kubernetes/releases/tag/v1.23.14',
                overviewUrl: 'https://kubernetes.io/zh-cn/docs/setup/',
                apiUrl: '//api.github.com/repos/kubernetes/kubernetes',
              },
            ],
            left3: [
              {
                url: nO,
                completeUrl: yO,
                name: 'Seata',
                describe:
                  'Seata是⼀款开源的分布式事务解决方案，致力于在微服务架构下提供高性能和简单易用的分布式事务服务。',
                tags: ['分布式事务', '数据一致性', '微服务'],
                websiteUrl: 'https://seata.io/',
                githubUrl: 'https://github.com/seata/seata',
                latestVersionUrl:
                  'https://github.com/seata/seata/releases/tag/v1.5.2',
                overviewUrl:
                  'https://seata.io/zh-cn/docs/ops/deploy-guide-beginner.html',
                apiUrl: '//api.github.com/repos/seata/seata',
              },
            ],
          },
          AO = {
            middle1: [{ url: aO, name: '', visible: !1 }],
            middle2: [
              {
                url: uO,
                completeUrl: CO,
                name: 'Higress',
                describe:
                  "Higress is a next-generation cloud-native gateway based on Alibaba's internal gateway practices.",
                tags: ['microservice', 'security', 'gateway'],
                websiteUrl: 'https://higress.io/',
                githubUrl: 'https://github.com/alibaba/higress',
                latestVersionUrl:
                  'https://github.com/alibaba/higress/releases/tag/v0.5.0',
                overviewUrl:
                  'https://higress.io/zh-cn/docs/overview/what-is-higress.html',
                apiUrl: '//api.github.com/repos/alibaba/higress',
              },
            ],
            middle3: [
              {
                url: cO,
                completeUrl: SO,
                name: 'Dubbo',
                describe:
                  'Apache Dubbo is a microservice framework that provides high-performance RPC communication, traffic governance, observability and other solutions for large-scale microservice practices.Covers Java, Golang and other language SDK implementations.',
                tags: ['microservice', 'communication', 'RPC'],
                websiteUrl: 'https://dubbo.apache.org/',
                githubUrl: 'https://github.com/apache/dubbo',
                latestVersionUrl:
                  'https://github.com/apache/dubbo/releases/tag/dubbo-3.1.3',
                overviewUrl: 'https://dubbo.apache.org/zh/overview/',
                apiUrl: '//api.github.com/repos/alibaba/dubbo',
              },
              {
                url: ZE,
                completeUrl: gO,
                name: 'Spring Cloud',
                describe:
                  'one-stop solution for distributed application development.',
                tags: ['microservice', 'framework', 'spring'],
                githubUrl: ' https://github.com/alibaba/spring-cloud-alibaba',
                apiUrl: '//api.github.com/repos/alibaba/spring-cloud-alibaba',
                websiteUrl: 'https://spring.io/projects/spring-cloud-alibaba',
                overviewUrl:
                  'https://github.com/alibaba/spring-cloud-alibaba/blob/2021.x/README-zh.md',
                latestVersionUrl:
                  'https://github.com/alibaba/spring-cloud-alibaba/releases/tag/2021.0.4.0',
              },
            ],
            middle4: [
              {
                url: cO,
                completeUrl: SO,
                name: 'Dubbo',
                describe:
                  'Apache Dubbo is a microservice framework that provides high-performance RPC communication, traffic governance, observability and other solutions for large-scale microservice practices.Covers Java, Golang and other language SDK implementations.',
                tags: ['microservice', 'communication', 'RPC'],
                websiteUrl: 'https://dubbo.apache.org/',
                githubUrl: 'https://github.com/apache/dubbo',
                latestVersionUrl:
                  'https://github.com/apache/dubbo/releases/tag/dubbo-3.1.3',
                overviewUrl: 'https://dubbo.apache.org/zh/overview/',
                apiUrl: '//api.github.com/repos/alibaba/dubbo',
              },
              {
                url: ZE,
                completeUrl: gO,
                name: 'Spring Cloud',
                describe:
                  'one-stop solution for distributed application development.',
                tags: ['microservice', 'framework', 'spring'],
                githubUrl: ' https://github.com/alibaba/spring-cloud-alibaba',
                apiUrl: '//api.github.com/repos/alibaba/spring-cloud-alibaba',
                websiteUrl: 'https://spring.io/projects/spring-cloud-alibaba',
                overviewUrl:
                  'https://github.com/alibaba/spring-cloud-alibaba/blob/2021.x/README-zh.md',
                latestVersionUrl:
                  'https://github.com/alibaba/spring-cloud-alibaba/releases/tag/2021.0.4.0',
              },
            ],
            middle5: [{ url: fO, name: '', visible: !1 }],
            right1: [
              {
                url: rO,
                completeUrl: mO,
                name: 'RocketMQ',
                describe:
                  'A cloud-native "messaging, eventing, streaming" real-time data processing platform, covering cloud-edge-device collaboration scenarios.',
                tags: ['messaging', 'eventing', 'streaming'],
                websiteUrl: 'https://rocketmq.apache.org/',
                githubUrl: 'https://github.com/apache/rocketmq',
                latestVersionUrl:
                  'https://github.com/apache/rocketmq/releases/tag/rocketmq-all-5.0.0',
                overviewUrl:
                  'https://rocketmq.apache.org/zh/docs/quickStart/02quickstart',
                apiUrl: '//api.github.com/repos/apache/rocketmq',
              },
            ],
            right2: [
              {
                url: oO,
                completeUrl: kO,
                name: 'Nacos',
                describe:
                  'an easy-to-use dynamic service discovery, configuration and service management platform for building cloud native applications.',
                tags: ['configuration', 'discovery', 'service management'],
                websiteUrl: 'https://nacos.io/',
                githubUrl: 'https://github.com/alibaba/nacos',
                latestVersionUrl:
                  'https://github.com/alibaba/nacos/releases/tag/2.1.2',
                overviewUrl:
                  'https://nacos.io/zh-cn/docs/v2/quickstart/quick-start.html',
                apiUrl: '//api.github.com/repos/alibaba/nacos',
              },
              {
                url: iO,
                completeUrl: bO,
                name: 'OpenSergo',
                describe:
                  'An open, language-agnostic cloud-native microservice governance specification.',
                tags: ['governance ', 'microservice', 'specification'],
                websiteUrl: 'https://opensergo.io/',
                githubUrl:
                  'https://github.com/opensergo/opensergo-specification',
                latestVersionUrl:
                  'https://github.com/opensergo/opensergo-java-sdk/releases/tag/v0.1.0-beta1',
                overviewUrl:
                  'https://opensergo.io/zh-cn/docs/quick-start/opensergo-control-plane/',
                apiUrl:
                  '//api.github.com/repos/opensergo/opensergo-specification',
              },
            ],
            right3: [
              {
                url: eO,
                completeUrl: pO,
                name: 'Skywalking',
                describe:
                  'Application performance monitor tool for distributed systems, especially designed for microservices, cloud native and container-based (Kubernetes) architectures.',
                tags: ['APM', 'tracing', 'monitor'],
                websiteUrl: 'https://skywalking.apache.org/',
                githubUrl: 'https://github.com/apache/skywalking',
                latestVersionUrl:
                  'https://github.com/apache/skywalking/releases/tag/v9.3.0',
                overviewUrl:
                  'https://skywalking.apache.org/docs/skywalking-showcase/latest/readme/',
                apiUrl: '//api.github.com/repos/apache/skywalking',
              },
            ],
            left1: [
              {
                url: tO,
                completeUrl: vO,
                name: 'Sentinel',
                describe: 'The Flow Sentinel of Your Microservices.',
                tags: ['high availability', 'governance', 'traffic'],
                websiteUrl: 'https://sentinelguard.io/',
                githubUrl: 'https://github.com/alibaba/Sentinel',
                latestVersionUrl:
                  'https://github.com/alibaba/Sentinel/releases/tag/1.8.6',
                overviewUrl:
                  'https://sentinelguard.io/zh-cn/docs/quick-start.html',
                apiUrl: '//api.github.com/repos/alibaba/sentinel',
              },
              {
                url: hO,
                completeUrl: EO,
                name: 'ChaosBlade',
                describe:
                  'Help companies solve the high availability problems in the process of migrating to cloud-native systems through chaos engineering',
                tags: ['high availability', 'cloud-native', 'chaosblade'],
                websiteUrl: 'https://chaosblade.io/',
                githubUrl: 'https://github.com/chaosblade-io/chaosblade',
                latestVersionUrl:
                  'https://github.com/chaosblade-io/chaosblade/releases/tag/v1.7.0',
                overviewUrl: 'https://chaosblade.io/docs',
                apiUrl: '//api.github.com/repos/chaosblade-io/chaosblade',
              },
              {
                url: dO,
                completeUrl: OO,
                name: 'AppActive',
                describe:
                  'A middleware dedicate to building multi-site active/active application architectures.',
                tags: ['multi-site', 'high availability'],
                websiteUrl: 'https://doc.appactive.io/',
                githubUrl: 'https://github.com/alibaba/Appactive',
                latestVersionUrl:
                  'https://github.com/alibaba/Appactive/releases/tag/v0.2.1',
                overviewUrl: 'https://doc.appactive.io/docs/cn/README_CN.html/',
                apiUrl: '//api.github.com/repos/alibaba/Appactive',
              },
            ],
            left2: [
              {
                url: sO,
                completeUrl: wO,
                name: 'KubeVela',
                describe: 'Make shipping applications more enjoyable.',
                tags: ['application management', 'deployment'],
                websiteUrl: 'https://kubevela.io/',
                githubUrl: 'https://github.com/kubevela/kubevela',
                latestVersionUrl:
                  'https://github.com/kubevela/kubevela/releases/tag/v1.6.4',
                overviewUrl: 'https://kubevela.io/zh/docs/quick-start',
                apiUrl: '//api.github.com/repos/kubevela/kubevela',
              },
              {
                url: lO,
                completeUrl: xO,
                name: 'Kubernetes',
                describe:
                  'Kubernetes is a portable, extensible, open source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation.',
                tags: ['orchestration', 'container', 'deployment'],
                websiteUrl: 'https://kubernetes.io/',
                githubUrl: 'https://github.com/kubernetes/kubernetes',
                latestVersionUrl:
                  'https://github.com/kubernetes/kubernetes/releases/tag/v1.23.14',
                overviewUrl: 'https://kubernetes.io/zh-cn/docs/setup/',
                apiUrl: '//api.github.com/repos/kubernetes/kubernetes',
              },
            ],
            left3: [
              {
                url: nO,
                completeUrl: yO,
                name: 'Seata',
                describe:
                  'Seata is an open source distributed transaction solution that delivers high performance and easy to use distributed transaction services under a microservices architecture.',
                tags: [
                  'distributed transaction',
                  'consistency',
                  'microservice',
                ],
                websiteUrl: 'https://seata.io/',
                githubUrl: 'https://github.com/seata/seata',
                latestVersionUrl:
                  'https://github.com/seata/seata/releases/tag/v1.5.2',
                overviewUrl:
                  'https://seata.io/zh-cn/docs/ops/deploy-guide-beginner.html',
                apiUrl: '//api.github.com/repos/seata/seata',
              },
            ],
          },
          MO = {
            middle1: 'loT/PC/Moblie',
            middle2: '网关',
            middle3: '服务集群A',
            middle4: '服务集群B',
            middle5: '数据存储',
            left1: '治理面',
            left2: '运维面',
            left3: '分布式事务',
            right1: '异步调用',
            right2: '控制面',
            right3: '可观测',
          },
          TO = {
            middle1: 'loT/PC/Moblie',
            middle2: 'GateWay',
            middle3: 'Service cluster A',
            middle4: 'Service cluster B',
            middle5: 'Data storage',
            left1: 'Governance plane',
            left2: 'Operation plane',
            left3: 'Distributed transaction',
            right1: 'Asynchronous call',
            right2: 'Control plane',
            right3: 'Observable',
          },
          NO = ['middle1', 'middle5'],
          jO = function (e) {
            var t = e.node,
              n = (0, S.useState)({}),
              r = ql()(n, 2),
              i = r[0],
              o = r[1],
              a = (0, S.useState)('cn'),
              s = ql()(a, 2),
              l = s[0],
              u = s[1],
              c = t.id,
              f = document.documentElement.lang;
            return (
              (0, S.useEffect)(
                function () {
                  var e,
                    t,
                    n = document.getElementById('__docusaurus'),
                    r =
                      ((e = 'docsite_language'),
                      (t = ''),
                      (
                        (document.cookie && document.cookie.split(';')) ||
                        []
                      ).forEach(function (n) {
                        var r = n.split('=') || [],
                          i = ql()(r, 2),
                          o = i[0],
                          a = void 0 === o ? '' : o,
                          s = i[1],
                          l = void 0 === s ? '' : s;
                        a.trim() === e && (t = l);
                      }),
                      t.trim());
                  u(
                    r && !n
                      ? 'zh-cn' === r
                        ? 'cn'
                        : 'en'
                      : 'zh' === f || 'zh-cn' === f || 'zh-CN' === f
                      ? 'cn'
                      : 'en' === f || 'en-US' === f
                      ? 'en'
                      : 'cn'
                  );
                },
                [f]
              ),
              (0, S.useEffect)(
                function () {
                  o('cn' === l ? PO : AO);
                },
                [l]
              ),
              S.createElement(
                S.Fragment,
                null,
                S.createElement(
                  'div',
                  { className: 'custom-node-title' },
                  'cn' === l ? MO[c] : TO[c]
                ),
                i[c] &&
                  S.createElement(KE, {
                    iconSource: i[c],
                    hasBase: !NO.includes(c),
                    language: l,
                  })
              )
            );
          };
        !(function (e) {
          var t = e.shape,
            n = e.component,
            r = e.effect,
            i = e.inherit,
            o = Vv(e, ['shape', 'component', 'effect', 'inherit']);
          if (!t) throw new Error('should specify shape in config');
          (Fv[t] = { component: n, effect: r }),
            jv.registerNode(
              t,
              Object.assign({ inherit: i || 'react-shape' }, o),
              !0
            );
        })({ shape: 'custom-node', effect: ['color'], component: jO });
        var LO = null,
          RO =
            /Safari/.test(navigator.userAgent) &&
            /Apple Computer/.test(navigator.vendor),
          _O = navigator.userAgent.match(
            /(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i
          ),
          IO = {
            line: {
              strokeDasharray: 2,
              strokeWidth: 2,
              targetMarker: { tagName: 'path' },
              stroke: {
                type: 'linearGradient',
                stops: [
                  { offset: '0%', color: '#ccc' },
                  { offset: '50%', color: '#999' },
                  { offset: '100%', color: '#000' },
                ],
              },
              style: { animation: 'ant-line 60s infinite linear' },
            },
          },
          DO = {
            nodes: [
              { id: 'middle1', x: 250, y: 50, shape: 'custom-node' },
              { id: 'middle2', x: 450, y: 150, shape: 'custom-node' },
              { id: 'middle3', x: 650, y: 250, shape: 'custom-node' },
              { id: 'middle4', x: 850, y: 350, shape: 'custom-node' },
              { id: 'middle5', x: 1050, y: 450, shape: 'custom-node' },
              { id: 'left1', x: 230, y: 250, shape: 'custom-node' },
              { id: 'left2', x: 500, y: 400, shape: 'custom-node' },
              { id: 'left3', x: 750, y: 500, shape: 'custom-node' },
              { id: 'right1', x: 750, y: 100, shape: 'custom-node' },
              { id: 'right2', x: 1050, y: 250, shape: 'custom-node' },
              { id: 'right3', x: 1200, y: 320, shape: 'custom-node' },
            ],
            edges: [
              {
                source: { x: 360, y: 230 },
                target: { x: 360, y: 230 },
                vertices: [
                  { x: 530, y: 140 },
                  { x: 700, y: 230 },
                  { x: 700, y: 160 },
                  { x: 830, y: 90 },
                  { x: 970, y: 170 },
                  { x: 970, y: 360 },
                  { x: 1300, y: 520 },
                  { x: 1130, y: 610 },
                  { x: 970, y: 530 },
                  { x: 970, y: 590 },
                  { x: 830, y: 660 },
                  { x: 700, y: 595 },
                  { x: 700, y: 400 },
                ],
                attrs: {
                  line: {
                    stroke: '#bbb',
                    strokeDasharray: 5,
                    targetMarker: { tagName: 'path' },
                    strokeWidth: 1,
                    strokeLinecap: 'round',
                  },
                },
              },
              {
                source: { x: 380, y: 150 },
                target: { x: 470, y: 200 },
                connector: { name: 'smooth' },
                vertices: [{ x: 435, y: 160 }],
                attrs: C()({}, IO),
              },
              {
                source: { x: 580, y: 250 },
                target: { x: 670, y: 300 },
                connector: { name: 'smooth' },
                vertices: [{ x: 635, y: 260 }],
                attrs: C()({}, IO),
              },
              {
                source: { x: 780, y: 350 },
                target: { x: 870, y: 400 },
                connector: { name: 'smooth' },
                vertices: [{ x: 835, y: 360 }],
                attrs: C()({}, IO),
              },
              {
                source: { x: 980, y: 450 },
                target: { x: 1070, y: 500 },
                connector: { name: 'smooth' },
                vertices: [{ x: 1035, y: 460 }],
                attrs: C()({}, IO),
              },
              {
                source: { x: 770, y: 300 },
                target: { x: 820, y: 225 },
                connector: { name: 'smooth' },
                vertices: [{ x: 810, y: 270 }],
                attrs: C()({}, IO),
              },
              {
                source: { x: 825, y: 230 },
                target: { x: 920, y: 370 },
                connector: { name: 'smooth' },
                vertices: [{ x: 860, y: 320 }],
                attrs: C()({}, IO),
              },
              {
                source: { x: 730, y: 380 },
                target: { x: 800, y: 565 },
                connector: { name: 'smooth' },
                vertices: [{ x: 750, y: 480 }],
                attrs: C()({}, IO),
              },
              {
                source: { x: 920, y: 480 },
                target: { x: 850, y: 565 },
                connector: { name: 'smooth' },
                vertices: [{ x: 880, y: 540 }],
                attrs: C()({}, IO),
              },
            ],
          },
          zO = function e() {
            var t = document.getElementById('solution-container');
            if (t) {
              if (RO || _O) {
                var n = document.createElement('img');
                (n.src =
                  'https://img.alicdn.com/imgextra/i1/O1CN01Olj8iy1gDVrneKK4D_!!6000000004108-0-tps-2874-1404.jpg'),
                  (n.style.width = '100%'),
                  t.appendChild(n);
              } else {
                var r,
                  i = new jv({
                    container: t,
                    height: 700,
                    interacting: !1,
                    grid: { size: 20, visible: !0 },
                    background: { color: '#e5f1fe' },
                    mousewheel: !1,
                    autoResize: !1,
                    panning: { enabled: !1, eventTypes: ['leftMouseDown'] },
                  }),
                  o =
                    null ===
                      (r =
                        document.getElementById('solution-container').style
                          .width) || void 0 === r
                      ? void 0
                      : r.split('px')[0],
                  a = Number(o) / window.innerWidth;
                i.fromJSON(DO), i.centerContent(), i.zoom(a - 1);
              }
              LO && clearTimeout(LO);
            } else
              LO = setTimeout(function () {
                e();
              }, 500);
          };
        zO();
        var BO = (function () {
          function e() {
            y()(this, e),
              w()(this, 'subs', void 0),
              w()(this, 'id', void 0),
              (this.id = new Date()),
              (this.subs = []);
          }
          return (
            b()(e, [
              {
                key: 'defined',
                value: function () {
                  e.watch.add(this);
                },
              },
              {
                key: 'notify',
                value: function () {
                  this.subs.forEach(function (e, t) {
                    if ('function' == typeof e.update)
                      try {
                        e.update.apply(e);
                      } catch (e) {
                        console.warr(e);
                      }
                  });
                },
              },
            ]),
            e
          );
        })();
        w()(BO, 'watch', void 0), (BO.watch = null);
        var VO,
          FO = (function () {
            function e(t, n) {
              y()(this, e),
                w()(this, 'name', void 0),
                w()(this, 'id', void 0),
                w()(this, 'callBack', void 0),
                (this.name = t),
                (this.id = new Date()),
                (this.callBack = n);
            }
            return (
              b()(e, [
                {
                  key: 'add',
                  value: function (e) {
                    e.subs.push(this);
                  },
                },
                {
                  key: 'update',
                  value: function () {
                    (0, this.callBack)(this.name);
                  },
                },
              ]),
              e
            );
          })(),
          UO =
            ((VO = new BO()),
            function (e) {
              if ('historychange' === e)
                return function (e, t) {
                  var n = new FO(e, t);
                  (BO.watch = n), VO.defined(), (BO.watch = null);
                };
              if ('pushState' === e || 'replaceState' === e) {
                var t = history[e];
                return function () {
                  t.apply(history, arguments), VO.notify();
                };
              }
            });
        (window.addHistoryListener = UO('historychange')),
          (history.pushState = UO('pushState')),
          (history.replaceState = UO('replaceState')),
          window.addHistoryListener('history', function () {
            zO();
          });
        var HO = function () {
          return S.createElement('div', { id: 'solution-container' });
        };
      })(),
      o
    );
  })();
});
