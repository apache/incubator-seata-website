{
  "filename": "install_server.md",
  "__html": "<h1>Installing Seata Server</h1>\n<p>This topic explains how to install the Seata server.</p>\n<p><strong>Tip:</strong> For a data center or a cluster, we recommend that you use at least two machines with eight cores, 16GB RAM and Gigabit Ethernet connections for deploying supernodes.</p>\n<h2>Context</h2>\n<p>There are two layers in Seata’s architecture: server (supernodes) and client (hosts). Install the supernodes in one of the following ways:</p>\n<ul>\n<li>Deploying with Docker: Recommended for quick local deployment and test.</li>\n<li>Deploying with physical machines: Recommended for production usage.</li>\n</ul>\n<h2>Prerequisites</h2>\n<p>When deploying with Docker, the following conditions must be met.</p>\n<table>\n<thead>\n<tr>\n<th>Required Software</th>\n<th>Version Limit</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Git</td>\n<td>1.9.1+</td>\n</tr>\n<tr>\n<td>Docker</td>\n<td>1.12.0+</td>\n</tr>\n</tbody>\n</table>\n<p>When deploying with physical machines, the following conditions must be met.</p>\n<table>\n<thead>\n<tr>\n<th>Required Software</th>\n<th>Version Limit</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Git</td>\n<td>1.9.1+</td>\n</tr>\n<tr>\n<td>JDK</td>\n<td>1.7+</td>\n</tr>\n<tr>\n<td>Maven</td>\n<td>3.0.3+</td>\n</tr>\n<tr>\n<td>Nginx</td>\n<td>0.8+</td>\n</tr>\n</tbody>\n</table>\n<h2>Procedure - When Deploying with Docker</h2>\n<ol>\n<li>\n<p>Obtain the source code of Seata.</p>\n<pre><code class=\"language-sh\">git <span class=\"hljs-built_in\">clone</span> https://github.com/dragonflyoss/Seata.git\n</code></pre>\n</li>\n<li>\n<p>Enter the project directory.</p>\n<pre><code class=\"language-sh\"><span class=\"hljs-built_in\">cd</span> Seata\n</code></pre>\n</li>\n<li>\n<p>Build the Docker image.</p>\n<pre><code class=\"language-sh\">./build/build.sh supernode\n</code></pre>\n</li>\n<li>\n<p>Obtain the latest Docker image ID of the SuperNode.</p>\n<pre><code class=\"language-sh\">docker image ls|grep <span class=\"hljs-string\">'supernode'</span> |awk <span class=\"hljs-string\">'{print $3}'</span> | head -n1\n</code></pre>\n</li>\n<li>\n<p>Start the SuperNode.</p>\n<pre><code class=\"language-sh\"><span class=\"hljs-comment\"># Replace ${supernodeDockerImageId} with the ID obtained at the previous step</span>\ndocker run -d -p 8001:8001 -p 8002:8002 <span class=\"hljs-variable\">${supernodeDockerImageId}</span>\n</code></pre>\n</li>\n</ol>\n<h2>Procedure - When Deploying with Physical Machines</h2>\n<ol>\n<li>\n<p>Obtain the source code of Seata.</p>\n<pre><code class=\"language-sh\">git <span class=\"hljs-built_in\">clone</span> https://github.com/dragonflyoss/Seata.git\n</code></pre>\n</li>\n<li>\n<p>Enter the project directory.</p>\n<pre><code class=\"language-sh\"><span class=\"hljs-built_in\">cd</span> Seata/src/supernode\n</code></pre>\n</li>\n<li>\n<p>Compile the source code.</p>\n<pre><code class=\"language-sh\">mvn clean -U install -DskipTests=<span class=\"hljs-literal\">true</span>\n</code></pre>\n</li>\n<li>\n<p>Start the SuperNode.</p>\n<pre><code class=\"language-sh\"><span class=\"hljs-comment\"># If the 'supernode.baseHome’ is not specified, then the default value '/home/admin/supernode’ will be used.</span>\njava -Dsupernode.baseHome=/home/admin/supernode -jar target/supernode.jar\n</code></pre>\n</li>\n<li>\n<p>Add the following configuration items to the Nginx configuration file.</p>\n<p><strong>Tip:</strong> The path of the Nginx configuration file is something like <code>src/supernode/src/main/docker/sources/nginx.conf</code>.</p>\n<pre><code>server {\nlisten 8001;\nlocation / {\n  # Must be ${supernode.baseHome}/repo\n  root /home/admin/supernode/repo;\n }\n}\n\nserver {\nlisten 8002;\nlocation /peer {\n  proxy_pass http://127.0.0.1:8080;\n }\n}\n</code></pre>\n</li>\n<li>\n<p>Start Nginx.</p>\n<pre><code class=\"language-sh\">sudo nginx\n</code></pre>\n</li>\n</ol>\n<h2>After this Task</h2>\n<ul>\n<li>\n<p>After the SuperNode is installed, run the following commands to verify if Nginx and Tomcat are started, and if Port <code>8001</code> and <code>8002</code> are available.</p>\n<pre><code class=\"language-sh\">ps aux|grep nginx\nps aux|grep tomcat\ntelnet 127.0.0.1 8001\ntelent 127.0.0.1 8002\n</code></pre>\n</li>\n<li>\n<p>Install the Seata client and test if the downloading works.</p>\n<pre><code class=\"language-sh\">dfget --url <span class=\"hljs-string\">\"http://<span class=\"hljs-variable\">${resourceUrl}</span>\"</span> --output ./resource.png --node <span class=\"hljs-string\">\"127.0.0.1\"</span>\n</code></pre>\n</li>\n</ul>\n",
  "link": "/en-us/docs/userguide/install_server.html",
  "meta": {}
}