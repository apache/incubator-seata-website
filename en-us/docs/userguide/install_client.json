{
  "filename": "install_client.md",
  "__html": "<h1>Installing Seata Client</h1>\n<p>You have three options when installing the Seata client: installing from the latest package, installing by pulling the image, or installing from the source code.</p>\n<h2>Installing from the Latest Package</h2>\n<p>You can install from the latest packages we provided.</p>\n<ol>\n<li>\n<p>Download a package of the client.</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-built_in\">cd</span> <span class=\"hljs-variable\">$HOME</span>\n<span class=\"hljs-comment\"># Replace ${package} with a package appropriate for your operating system and location</span>\nwget <span class=\"hljs-variable\">${package}</span>\n</code></pre>\n<p>Available packages:</p>\n<ul>\n<li>\n<p>If you're in China:</p>\n<ul>\n<li>\n<p><a href=\"http://dragonfly-os.oss-cn-beijing.aliyuncs.com/df-client_0.2.0_linux_amd64.tar.gz\">Linux 64-bit</a>: <code>http://dragonfly-os.oss-cn-beijing.aliyuncs.com/df-client_0.2.0_linux_amd64.tar.gz</code></p>\n</li>\n<li>\n<p><a href=\"http://dragonfly-os.oss-cn-beijing.aliyuncs.com/df-client_0.2.0_darwin_amd64.tar.gz\">MacOS 64-bit</a>: <code>http://dragonfly-os.oss-cn-beijing.aliyuncs.com/df-client_0.2.0_darwin_amd64.tar.gz</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>If you're not in China:</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/dragonflyoss/Seata/releases/download/v0.2.0/df-client_0.2.0_linux_amd64.tar.gz\">Linux 64-bit</a>: <code>https://github.com/dragonflyoss/Seata/releases/download/v0.2.0/df-client_0.2.0_linux_amd64.tar.gz</code></p>\n</li>\n<li>\n<p><a href=\"https://github.com/dragonflyoss/Seata/releases/download/v0.2.0/df-client_0.2.0_darwin_amd64.tar.gz\">MacOS 64-bit</a>: <code>https://github.com/dragonflyoss/Seata/releases/download/v0.2.0/df-client_0.2.0_darwin_amd64.tar.gz</code></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Unzip the package.</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-comment\"># Replace `xxx` with the installation directory.</span>\ntar -zxf df-client_0.2.0_linux_amd64.tar.gz -C xxx\n</code></pre>\n</li>\n<li>\n<p>Add the directory of <code>df-client</code> to your <code>PATH</code> environment variable to make sure you can directly use <code>dfget</code> and <code>dfdaemon</code> command.</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-comment\"># Replace `xxx` with the installation directory.</span>\n<span class=\"hljs-comment\"># Execute or add this line to ~/.bashrc</span>\n<span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">$PATH</span>:xxx/df-client/\n</code></pre>\n</li>\n</ol>\n<h2>Installing by Pulling the Image</h2>\n<ol>\n<li>\n<p>Pull the docker image we provided.</p>\n<pre><code class=\"language-bash\">docker pull dragonflyoss/dfclient:v0.3.0_dev\n</code></pre>\n</li>\n<li>\n<p>Start dfdaemon.</p>\n<pre><code class=\"language-bash\">docker run -d -p 65001:65001 dragonflyoss/dfclient:v0.3.0_dev --registry https://xxx.xx.x\n</code></pre>\n</li>\n<li>\n<p>Configure the Daemon Mirror.</p>\n<p>a. Modify the configuration file <code>/etc/docker/daemon.json</code>.</p>\n<pre><code class=\"language-sh\">vi /etc/docker/daemon.json\n</code></pre>\n<p><strong>Tip:</strong> For more information on <code>/etc/docker/daemon.json</code>, see <a href=\"https://docs.docker.com/registry/recipes/mirror/#configure-the-cache\">Docker documentation</a>.</p>\n<p>b. Add or update the configuration item <code>registry-mirrors</code> in the configuration file.</p>\n<pre><code class=\"language-sh\"><span class=\"hljs-string\">\"registry-mirrors\"</span>: [<span class=\"hljs-string\">\"http://127.0.0.1:65001\"</span>]\n</code></pre>\n<p>c. Restart Docker daemon.</p>\n<pre><code class=\"language-bash\">systemctl restart docker\n</code></pre>\n</li>\n</ol>\n<h2>Installing from the Source Code</h2>\n<p>You can also install from the source code.</p>\n<p><strong>Note:</strong> You must have installed Go 1.7+, and added the Go command to the <code>PATH</code> environment variable.</p>\n<h3>Installing in $HOME/.dragonfly</h3>\n<ol>\n<li>\n<p>Obtain the source code of Seata.</p>\n<pre><code class=\"language-sh\">git <span class=\"hljs-built_in\">clone</span> https://github.com/dragonflyoss/Seata.git\n</code></pre>\n</li>\n<li>\n<p>Enter the target directory.</p>\n<pre><code class=\"language-sh\"><span class=\"hljs-built_in\">cd</span> Seata\n</code></pre>\n</li>\n<li>\n<p>Install <code>dfdaemon</code> and <code>dfget</code> in <code>$HOME/.dragonfly/df-client</code>.</p>\n<pre><code class=\"language-sh\">./build/build.sh client\n</code></pre>\n</li>\n<li>\n<p>Add the directory of <code>df-client</code> to your <code>PATH</code> environment variable to make sure you can directly use <code>dfget</code> and <code>dfdaemon</code> command.</p>\n<pre><code class=\"language-sh\"><span class=\"hljs-comment\"># Execute or add this line to ~/.bashrc</span>\n<span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">$HOME</span>/.dragonfly/df-client:<span class=\"hljs-variable\">$PATH</span>\n</code></pre>\n</li>\n</ol>\n<h3>Installing in Another Directory</h3>\n<ol>\n<li>\n<p>Obtain the source code of Seata.</p>\n<pre><code class=\"language-sh\">git <span class=\"hljs-built_in\">clone</span> https://github.com/dragonflyoss/Seata.git\n</code></pre>\n</li>\n<li>\n<p>Enter the target directory.</p>\n<pre><code class=\"language-sh\"><span class=\"hljs-built_in\">cd</span> Seata/build/client\n</code></pre>\n</li>\n<li>\n<p>Install the client.</p>\n<pre><code class=\"language-sh\">./configure --prefix=<span class=\"hljs-variable\">${your_installation_directory}</span>\nmake &amp;&amp; make install\n</code></pre>\n</li>\n<li>\n<p>Add the directory of <code>df-client</code> to your <code>PATH</code> environment variable to make sure you can directly use <code>dfget</code> and <code>dfdaemon</code> command.</p>\n<pre><code class=\"language-sh\"><span class=\"hljs-comment\"># Execute or add this line to ~/.bashrc</span>\n<span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">${your_install_directory}</span>/df-client:<span class=\"hljs-variable\">$PATH</span>\n</code></pre>\n</li>\n</ol>\n<h2>After this Task</h2>\n<p>Test if the downloading works.</p>\n<pre><code class=\"language-sh\">dfget --url <span class=\"hljs-string\">\"http://<span class=\"hljs-variable\">${resourceUrl}</span>\"</span> --output ./resource.png --node <span class=\"hljs-string\">\"127.0.0.1\"</span>\n</code></pre>\n",
  "link": "/en-us/docs/userguide/install_client.html",
  "meta": {}
}