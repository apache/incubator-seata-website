"use strict";(self.webpackChunkseata_website=self.webpackChunkseata_website||[]).push([[5587],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>C});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,C=u["".concat(s,".").concat(d)]||u[d]||g[d]||i;return t?r.createElement(C,l(l({ref:n},p),{},{components:t})):r.createElement(C,l({ref:n},p))}));function C(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},66174:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const i={title:"Fescar \u4e0e Spring Cloud \u96c6\u6210\u6e90\u7801\u6df1\u5ea6\u5256\u6790",author:"\u90ed\u6811\u6297 \u5b63\u654f",date:"2019/04/15",keywords:["fescar\u3001seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"]},l="Fescar \u4e0e Spring Cloud \u96c6\u6210\u6e90\u7801\u6df1\u5ea6\u5256\u6790",o={permalink:"/blog/how-to-support-spring-cloud",source:"@site/blog/how-to-support-spring-cloud.md",title:"Fescar \u4e0e Spring Cloud \u96c6\u6210\u6e90\u7801\u6df1\u5ea6\u5256\u6790",description:"Fescar \u7b80\u4ecb",date:"2019-04-15T00:00:00.000Z",formattedDate:"April 15, 2019",tags:[],readingTime:20.04,hasTruncateMarker:!1,authors:[{name:"\u90ed\u6811\u6297 \u5b63\u654f"}],frontMatter:{title:"Fescar \u4e0e Spring Cloud \u96c6\u6210\u6e90\u7801\u6df1\u5ea6\u5256\u6790",author:"\u90ed\u6811\u6297 \u5b63\u654f",date:"2019/04/15",keywords:["fescar\u3001seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"]},prevItem:{title:"Seata\u5206\u5e03\u5f0fGo Server\u6b63\u5f0f\u5f00\u6e90-TaaS\u8bbe\u8ba1\u7b80\u4ecb",permalink:"/blog/seata-analysis-go-server"},nextItem:{title:"Seata\uff08Fescar\uff09\u5206\u5e03\u5f0f\u4e8b\u52a1 \u6574\u5408 Spring Cloud",permalink:"/blog/integrate-seata-with-spring-cloud"}},s={authorsImageUrls:[void 0]},c=[{value:"Fescar \u7b80\u4ecb",id:"fescar-\u7b80\u4ecb",level:3},{value:"Fescar \u4e8b\u52a1\u4f20\u64ad\u673a\u5236",id:"fescar-\u4e8b\u52a1\u4f20\u64ad\u673a\u5236",level:3},{value:"Fescar \u4e0e Spring Cloud Alibaba \u96c6\u6210\u90e8\u5206\u6e90\u7801\u89e3\u6790",id:"fescar-\u4e0e-spring-cloud-alibaba-\u96c6\u6210\u90e8\u5206\u6e90\u7801\u89e3\u6790",level:3},{value:"Fescar AutoConfiguration",id:"fescar-autoconfiguration",level:4},{value:"\u5fae\u670d\u52a1\u88ab\u8c03\u7528\u65b9",id:"\u5fae\u670d\u52a1\u88ab\u8c03\u7528\u65b9",level:4},{value:"\u5fae\u670d\u52a1\u8c03\u7528\u65b9",id:"\u5fae\u670d\u52a1\u8c03\u7528\u65b9",level:4},{value:"RestTemplate",id:"resttemplate",level:5},{value:"Feign",id:"feign",level:5},{value:"Hystrix \u9694\u79bb",id:"hystrix-\u9694\u79bb",level:5},{value:"\u53c2\u8003\u6587\u732e",id:"\u53c2\u8003\u6587\u732e",level:3}],p={toc:c},u="wrapper";function g(e){let{components:n,...i}=e;return(0,a.kt)(u,(0,r.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"fescar-\u7b80\u4ecb"},"Fescar \u7b80\u4ecb"),(0,a.kt)("p",null,"\u5e38\u89c1\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u65b9\u5f0f\u6709\u57fa\u4e8e 2PC \u7684 XA (e.g. atomikos)\uff0c\u4ece\u4e1a\u52a1\u5c42\u5165\u624b\u7684 TCC( e.g. byteTCC)\u3001\u4e8b\u52a1\u6d88\u606f ( e.g. RocketMQ Half Message) \u7b49\u7b49\u3002XA \u662f\u9700\u8981\u672c\u5730\u6570\u636e\u5e93\u652f\u6301\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u534f\u8bae\uff0c\u8d44\u6e90\u9501\u5728\u6570\u636e\u5e93\u5c42\u9762\u5bfc\u81f4\u6027\u80fd\u8f83\u5dee\uff0c\u800c\u652f\u4ed8\u5b9d\u4f5c\u4e3a\u5e03\u9053\u5e08\u5f15\u5165\u7684 TCC \u6a21\u5f0f\u9700\u8981\u5927\u91cf\u7684\u4e1a\u52a1\u4ee3\u7801\u4fdd\u8bc1\uff0c\u5f00\u53d1\u7ef4\u62a4\u6210\u672c\u8f83\u9ad8\u3002"),(0,a.kt)("p",null,"\u5206\u5e03\u5f0f\u4e8b\u52a1\u662f\u4e1a\u754c\u6bd4\u8f83\u5173\u6ce8\u7684\u9886\u57df\uff0c\u8fd9\u4e5f\u662f\u77ed\u77ed\u65f6\u95f4 Fescar \u80fd\u6536\u83b76k Star\u7684\u539f\u56e0\u4e4b\u4e00\u3002Fescar \u540d\u5b57\u53d6\u81ea ",(0,a.kt)("strong",{parentName:"p"},"Fast & Easy Commit And Rollback")," \uff0c\u7b80\u5355\u6765\u8bf4 Fescar \u901a\u8fc7\u5bf9\u672c\u5730 RDBMS \u5206\u652f\u4e8b\u52a1\u7684\u534f\u8c03\u6765\u9a71\u52a8\u5b8c\u6210\u5168\u5c40\u4e8b\u52a1\uff0c\u662f\u5de5\u4f5c\u5728\u5e94\u7528\u5c42\u7684\u4e2d\u95f4\u4ef6\u3002\u4e3b\u8981\u4f18\u70b9\u662f\u76f8\u5bf9\u4e8eXA\u6a21\u5f0f\u662f\u6027\u80fd\u8f83\u597d\u4e0d\u957f\u65f6\u95f4\u5360\u7528\u8fde\u63a5\u8d44\u6e90\uff0c\u76f8\u5bf9\u4e8e TCC \u65b9\u5f0f\u5f00\u53d1\u6210\u672c\u548c\u4e1a\u52a1\u4fb5\u5165\u6027\u8f83\u4f4e\u3002"),(0,a.kt)("p",null,"\u7c7b\u4f3c\u4e8e XA\uff0cFescar \u5c06\u89d2\u8272\u5206\u4e3a TC\u3001RM\u3001TM\uff0c\u4e8b\u52a1\u6574\u4f53\u8fc7\u7a0b\u6a21\u578b\u5982\u4e0b\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Fescar\u4e8b\u52a1\u8fc7\u7a0b",src:t(83002).Z,width:"794",height:"478"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"1. TM \u5411 TC \u7533\u8bf7\u5f00\u542f\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\uff0c\u5168\u5c40\u4e8b\u52a1\u521b\u5efa\u6210\u529f\u5e76\u751f\u6210\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684 XID\u3002\n2. XID \u5728\u5fae\u670d\u52a1\u8c03\u7528\u94fe\u8def\u7684\u4e0a\u4e0b\u6587\u4e2d\u4f20\u64ad\u3002\n3. RM \u5411 TC \u6ce8\u518c\u5206\u652f\u4e8b\u52a1\uff0c\u5c06\u5176\u7eb3\u5165 XID \u5bf9\u5e94\u5168\u5c40\u4e8b\u52a1\u7684\u7ba1\u8f96\u3002\n4. TM \u5411 TC \u53d1\u8d77\u9488\u5bf9 XID \u7684\u5168\u5c40\u63d0\u4ea4\u6216\u56de\u6eda\u51b3\u8bae\u3002\n5. TC \u8c03\u5ea6 XID \u4e0b\u7ba1\u8f96\u7684\u5168\u90e8\u5206\u652f\u4e8b\u52a1\u5b8c\u6210\u63d0\u4ea4\u6216\u56de\u6eda\u8bf7\u6c42\u3002\n")),(0,a.kt)("p",null,"\u5176\u4e2d\u5728\u76ee\u524d\u7684\u5b9e\u73b0\u7248\u672c\u4e2d TC \u662f\u72ec\u7acb\u90e8\u7f72\u7684\u8fdb\u7a0b\uff0c\u7ef4\u62a4\u5168\u5c40\u4e8b\u52a1\u7684\u64cd\u4f5c\u8bb0\u5f55\u548c\u5168\u5c40\u9501\u8bb0\u5f55\uff0c\u8d1f\u8d23\u534f\u8c03\u5e76\u9a71\u52a8\u5168\u5c40\u4e8b\u52a1\u7684\u63d0\u4ea4\u6216\u56de\u6eda\u3002TM RM \u5219\u4e0e\u5e94\u7528\u7a0b\u5e8f\u5de5\u4f5c\u5728\u540c\u4e00\u5e94\u7528\u8fdb\u7a0b\u3002RM \u5bf9 JDBC \u6570\u636e\u6e90\u91c7\u7528\u4ee3\u7406\u7684\u65b9\u5f0f\u5bf9\u5e95\u5c42\u6570\u636e\u5e93\u505a\u7ba1\u7406\uff0c\u5229\u7528\u8bed\u6cd5\u89e3\u6790\uff0c\u5728\u6267\u884c\u4e8b\u52a1\u65f6\u4fdd\u7559\u5feb\u7167\uff0c\u5e76\u751f\u6210 undo log\u3002\u5927\u6982\u7684\u6d41\u7a0b\u548c\u6a21\u578b\u5212\u5206\u5c31\u4ecb\u7ecd\u5230\u8fd9\u91cc\uff0c\u4e0b\u9762\u5f00\u59cb\u5bf9 Fescar \u4e8b\u52a1\u4f20\u64ad\u673a\u5236\u7684\u5206\u6790\u3002"),(0,a.kt)("h3",{id:"fescar-\u4e8b\u52a1\u4f20\u64ad\u673a\u5236"},"Fescar \u4e8b\u52a1\u4f20\u64ad\u673a\u5236"),(0,a.kt)("p",null,"Fescar \u4e8b\u52a1\u4f20\u64ad\u5305\u62ec\u5e94\u7528\u5185\u4e8b\u52a1\u5d4c\u5957\u8c03\u7528\u548c\u8de8\u670d\u52a1\u8c03\u7528\u7684\u4e8b\u52a1\u4f20\u64ad\u3002Fescar \u4e8b\u52a1\u662f\u600e\u4e48\u5728\u5fae\u670d\u52a1\u8c03\u7528\u94fe\u4e2d\u4f20\u64ad\u7684\u5462\uff1fFescar \u63d0\u4f9b\u4e86\u4e8b\u52a1 API \u5141\u8bb8\u7528\u6237\u624b\u52a8\u7ed1\u5b9a\u4e8b\u52a1\u7684 XID \u5e76\u52a0\u5165\u5230\u5168\u5c40\u4e8b\u52a1\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u6839\u636e\u4e0d\u540c\u7684\u670d\u52a1\u6846\u67b6\u673a\u5236\uff0c\u5c06 XID \u5728\u94fe\u8def\u4e2d\u4f20\u9012\u5373\u53ef\u5b9e\u73b0\u4e8b\u52a1\u7684\u4f20\u64ad\u3002"),(0,a.kt)("p",null,"RPC \u8bf7\u6c42\u8fc7\u7a0b\u5206\u4e3a\u8c03\u7528\u65b9\u4e0e\u88ab\u8c03\u7528\u65b9\u4e24\u90e8\u5206\uff0c\u6211\u4eec\u9700\u8981\u5bf9 XID \u5728\u8bf7\u6c42\u4e0e\u54cd\u5e94\u65f6\u505a\u76f8\u5e94\u7684\u5904\u7406\u3002\u5927\u81f4\u8fc7\u7a0b\u4e3a\uff1a\u8c03\u7528\u65b9\u5373\u8bf7\u6c42\u65b9\u5c06\u5f53\u524d\u4e8b\u52a1\u4e0a\u4e0b\u6587\u4e2d\u7684 XID \u53d6\u51fa\uff0c\u901a\u8fc7RPC\u534f\u8bae\u4f20\u9012\u7ed9\u88ab\u8c03\u7528\u65b9\uff1b\u88ab\u8c03\u7528\u65b9\u4ece\u8bf7\u6c42\u4e2d\u7684\u5c06 XID \u53d6\u51fa\uff0c\u5e76\u7ed1\u5b9a\u5230\u81ea\u5df1\u7684\u4e8b\u52a1\u4e0a\u4e0b\u6587\u4e2d\uff0c\u7eb3\u5165\u5168\u5c40\u4e8b\u52a1\u3002\u5fae\u670d\u52a1\u6846\u67b6\u4e00\u822c\u90fd\u6709\u76f8\u5e94\u7684 Filter \u548c Interceptor \u673a\u5236\uff0c\u6211\u4eec\u6765\u5177\u4f53\u5206\u6790\u4e0b Spring Cloud \u4e0eFescar \u7684\u6574\u5408\u8fc7\u7a0b\u3002"),(0,a.kt)("h3",{id:"fescar-\u4e0e-spring-cloud-alibaba-\u96c6\u6210\u90e8\u5206\u6e90\u7801\u89e3\u6790"},"Fescar \u4e0e Spring Cloud Alibaba \u96c6\u6210\u90e8\u5206\u6e90\u7801\u89e3\u6790"),(0,a.kt)("p",null,"\u672c\u90e8\u5206\u6e90\u7801\u5168\u90e8\u6765\u81ea\u4e8e spring-cloud-alibaba-fescar. \u6e90\u7801\u89e3\u6790\u90e8\u5206\u4e3b\u8981\u5305\u62ec AutoConfiguration\u3001\u5fae\u670d\u52a1\u88ab\u8c03\u7528\u65b9\u548c\u5fae\u670d\u52a1\u8c03\u7528\u65b9\u4e09\u5927\u90e8\u5206\u3002\u5bf9\u4e8e\u5fae\u670d\u52a1\u8c03\u7528\u65b9\u65b9\u5f0f\u5177\u4f53\u5206\u4e3a RestTemplate \u548c Feign\uff0c\u5176\u4e2d\u5bf9\u4e8e Feign \u8bf7\u6c42\u65b9\u5f0f\u53c8\u8fdb\u4e00\u6b65\u7ec6\u5206\u4e3a\u7ed3\u5408 Hystrix \u548c Sentinel \u7684\u4f7f\u7528\u6a21\u5f0f\u3002"),(0,a.kt)("h4",{id:"fescar-autoconfiguration"},"Fescar AutoConfiguration"),(0,a.kt)("p",null,"\u5bf9\u4e8e AutoConfiguration \u7684\u89e3\u6790\u6b64\u5904\u53ea\u4ecb\u7ecd\u4e0e Fescar \u542f\u52a8\u76f8\u5173\u7684\u90e8\u5206\uff0c\u5176\u4ed6\u90e8\u5206\u7684\u89e3\u6790\u5c06\u7a7f\u63d2\u4e8e\u3010\u5fae\u670d\u52a1\u88ab\u8c03\u7528\u65b9\u3011\u548c \u3010\u5fae\u670d\u52a1\u8c03\u7528\u65b9\u3011\u7ae0\u8282\u8fdb\u884c\u4ecb\u7ecd\u3002"),(0,a.kt)("p",null,"Fescar \u7684\u542f\u52a8\u9700\u8981\u914d\u7f6e GlobalTransactionScanner\uff0cGlobalTransactionScanner \u8d1f\u8d23\u521d\u59cb\u5316 Fescar \u7684 RM client\u3001TM  client \u548c \u81ea\u52a8\u4ee3\u7406\u6807\u6ce8 GlobalTransactional \u6ce8\u89e3\u7684\u7c7b\u3002GlobalTransactionScanner bean \u7684\u542f\u52a8\u901a\u8fc7 GlobalTransactionAutoConfiguration \u52a0\u8f7d\u5e76\u6ce8\u5165FescarProperties\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","FescarProperties \u5305\u542b\u4e86 Fescar \u7684\u91cd\u8981\u5c5e\u6027 txServiceGroup \uff0c\u6b64\u5c5e\u6027\u7684\u53ef\u901a\u8fc7 application.properties \u6587\u4ef6\u4e2d\u7684 key: spring.cloud.alibaba.fescar.txServiceGroup \u8bfb\u53d6\uff0c\u9ed8\u8ba4\u503c\u4e3a ${spring.application.name}-fescar-service-group \u3002txServiceGroup \u8868\u793a Fescar \u7684\u903b\u8f91\u4e8b\u52a1\u5206\u7ec4\u540d\uff0c\u6b64\u5206\u7ec4\u540d\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\uff08\u76ee\u524d\u652f\u6301\u6587\u4ef6\u3001Apollo\uff09\u83b7\u53d6\u903b\u8f91\u4e8b\u52a1\u5206\u7ec4\u540d\u5bf9\u5e94\u7684 TC \u96c6\u7fa4\u540d\u79f0\uff0c\u8fdb\u4e00\u6b65\u901a\u8fc7\u96c6\u7fa4\u540d\u79f0\u6784\u9020\u51fa TC \u96c6\u7fa4\u7684\u670d\u52a1\u540d\uff0c\u901a\u8fc7\u6ce8\u518c\u4e2d\u5fc3\uff08\u76ee\u524d\u652f\u6301nacos\u3001redis\u3001zk\u548ceureka\uff09\u548c\u670d\u52a1\u540d\u627e\u5230\u53ef\u7528\u7684 TC \u670d\u52a1\u8282\u70b9\uff0c\u7136\u540e RM client\u3001TM  client \u4e0e TC \u8fdb\u884c rpc \u4ea4\u4e92\u3002"),(0,a.kt)("h4",{id:"\u5fae\u670d\u52a1\u88ab\u8c03\u7528\u65b9"},"\u5fae\u670d\u52a1\u88ab\u8c03\u7528\u65b9"),(0,a.kt)("p",null,"\u7531\u4e8e\u8c03\u7528\u65b9\u7684\u903b\u8f91\u6bd4\u8f83\u591a\u4e00\u70b9\uff0c\u6211\u4eec\u5148\u5206\u6790\u88ab\u8c03\u7528\u65b9\u7684\u903b\u8f91\u3002\u9488\u5bf9\u4e8e Spring Cloud \u9879\u76ee\uff0c\u9ed8\u8ba4\u91c7\u7528\u7684 RPC \u4f20\u8f93\u534f\u8bae\u662f HTTP \u534f\u8bae\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86 HandlerInterceptor \u673a\u5236\u6765\u5bf9HTTP\u7684\u8bf7\u6c42\u505a\u62e6\u622a\u3002"),(0,a.kt)("p",null,"HandlerInterceptor \u662f Spring \u63d0\u4f9b\u7684\u63a5\u53e3\uff0c \u5b83\u6709\u4ee5\u4e0b\u4e09\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u88ab\u8986\u5199\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"    /**\n     * Intercept the execution of a handler. Called after HandlerMapping determined\n     * an appropriate handler object, but before HandlerAdapter invokes the handler.\n     */\n    default boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)\n            throws Exception {\n\n        return true;\n    }\n\n    /**\n     * Intercept the execution of a handler. Called after HandlerAdapter actually\n     * invoked the handler, but before the DispatcherServlet renders the view.\n     * Can expose additional model objects to the view via the given ModelAndView.\n     */\n    default void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,\n            @Nullable ModelAndView modelAndView) throws Exception {\n    }\n\n    /**\n     * Callback after completion of request processing, that is, after rendering\n     * the view. Will be called on any outcome of handler execution, thus allows\n     * for proper resource cleanup.\n     */\n    default void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler,\n            @Nullable Exception ex) throws Exception {\n    }\n")),(0,a.kt)("p",null,"\u6839\u636e\u6ce8\u91ca\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u660e\u786e\u7684\u770b\u5230\u5404\u4e2a\u65b9\u6cd5\u7684\u4f5c\u7528\u65f6\u95f4\u548c\u5e38\u7528\u7528\u9014\u3002\u5bf9\u4e8e Fescar \u96c6\u6210\u6765\u8bb2\uff0c\u5b83\u6839\u636e\u9700\u8981\u91cd\u5199\u4e86 preHandle\u3001afterCompletion \u65b9\u6cd5\u3002"),(0,a.kt)("p",null,"FescarHandlerInterceptor \u7684\u4f5c\u7528\u662f\u5c06\u670d\u52a1\u94fe\u8def\u4f20\u9012\u8fc7\u6765\u7684 XID\uff0c\u7ed1\u5b9a\u5230\u670d\u52a1\u8282\u70b9\u7684\u4e8b\u52a1\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5e76\u4e14\u5728\u8bf7\u6c42\u5b8c\u6210\u540e\u6e05\u7406\u76f8\u5173\u8d44\u6e90\u3002FescarHandlerInterceptorConfiguration \u4e2d\u914d\u7f6e\u4e86\u6240\u6709\u7684 url \u5747\u8fdb\u884c\u62e6\u622a\uff0c\u5bf9\u6240\u6709\u7684\u8bf7\u6c42\u8fc7\u6765\u5747\u4f1a\u6267\u884c\u8be5\u62e6\u622a\u5668\uff0c\u8fdb\u884c XID \u7684\u8f6c\u6362\u4e0e\u4e8b\u52a1\u7ed1\u5b9a\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * @author xiaojing\n *\n * Fescar HandlerInterceptor, Convert Fescar information into\n * @see com.alibaba.fescar.core.context.RootContext from http request\'s header in\n * {@link org.springframework.web.servlet.HandlerInterceptor#preHandle(HttpServletRequest , HttpServletResponse , Object )},\n * And clean up Fescar information after servlet method invocation in\n * {@link org.springframework.web.servlet.HandlerInterceptor#afterCompletion(HttpServletRequest, HttpServletResponse, Object, Exception)}\n */\npublic class FescarHandlerInterceptor implements HandlerInterceptor {\n\n    private static final Logger log = LoggerFactory\n            .getLogger(FescarHandlerInterceptor.class);\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response,\n            Object handler) throws Exception {\n\n        String xid = RootContext.getXID();\n        String rpcXid = request.getHeader(RootContext.KEY_XID);\n        if (log.isDebugEnabled()) {\n            log.debug("xid in RootContext {} xid in RpcContext {}", xid, rpcXid);\n        }\n\n        if (xid == null && rpcXid != null) {\n            RootContext.bind(rpcXid);\n            if (log.isDebugEnabled()) {\n                log.debug("bind {} to RootContext", rpcXid);\n            }\n        }\n        return true;\n    }\n\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response,\n            Object handler, Exception e) throws Exception {\n\n        String rpcXid = request.getHeader(RootContext.KEY_XID);\n\n        if (StringUtils.isEmpty(rpcXid)) {\n            return;\n        }\n\n        String unbindXid = RootContext.unbind();\n        if (log.isDebugEnabled()) {\n            log.debug("unbind {} from RootContext", unbindXid);\n        }\n        if (!rpcXid.equalsIgnoreCase(unbindXid)) {\n            log.warn("xid in change during RPC from {} to {}", rpcXid, unbindXid);\n            if (unbindXid != null) {\n                RootContext.bind(unbindXid);\n                log.warn("bind {} back to RootContext", unbindXid);\n            }\n        }\n    }\n\n}\n\n')),(0,a.kt)("p",null,"preHandle \u5728\u8bf7\u6c42\u6267\u884c\u524d\u88ab\u8c03\u7528\uff0cxid \u4e3a\u5f53\u524d\u4e8b\u52a1\u4e0a\u4e0b\u6587\u5df2\u7ecf\u7ed1\u5b9a\u7684\u5168\u5c40\u4e8b\u52a1\u7684\u552f\u4e00\u6807\u8bc6\uff0crpcXid \u4e3a\u8bf7\u6c42\u901a\u8fc7 HTTP Header \u4f20\u9012\u8fc7\u6765\u9700\u8981\u7ed1\u5b9a\u7684\u5168\u5c40\u4e8b\u52a1\u6807\u8bc6\u3002preHandle \u65b9\u6cd5\u4e2d\u5224\u65ad\u5982\u679c\u5f53\u524d\u4e8b\u52a1\u4e0a\u4e0b\u6587\u4e2d\u6ca1\u6709 XID\uff0c\u4e14 rpcXid \u4e0d\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5c31\u5c06 rpcXid \u7ed1\u5b9a\u5230\u5f53\u524d\u7684\u4e8b\u52a1\u4e0a\u4e0b\u6587\u3002"),(0,a.kt)("p",null,"afterCompletion \u5728\u8bf7\u6c42\u5b8c\u6210\u540e\u88ab\u8c03\u7528\uff0c\u8be5\u65b9\u6cd5\u7528\u6765\u6267\u884c\u8d44\u6e90\u7684\u76f8\u5173\u6e05\u7406\u52a8\u4f5c\u3002Fescar \u901a\u8fc7 RootContext.unbind() \u65b9\u6cd5\u5bf9\u4e8b\u52a1\u4e0a\u4e0b\u6587\u6d89\u53ca\u5230\u7684 XID \u8fdb\u884c\u89e3\u7ed1\u3002\u4e0b\u9762 if \u4e2d\u7684\u903b\u8f91\u662f\u4e3a\u4e86\u4ee3\u7801\u7684\u5065\u58ee\u6027\u8003\u8651\uff0c\u5982\u679c\u9047\u5230 rpcXid\u548c unbindXid \u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u518d\u5c06 unbindXid \u91cd\u65b0\u7ed1\u5b9a\u56de\u53bb\u3002"),(0,a.kt)("p",null,"\u5bf9\u4e8e Spring Cloud \u6765\u8bb2\uff0c\u9ed8\u8ba4\u91c7\u7528\u7684 RPC \u65b9\u5f0f\u662f HTTP \u7684\u65b9\u5f0f\uff0c\u6240\u4ee5\u5bf9\u88ab\u8c03\u7528\u65b9\u6765\u8bb2\uff0c\u5b83\u7684\u8bf7\u6c42\u62e6\u622a\u65b9\u5f0f\u4e0d\u7528\u505a\u4efb\u4f55\u533a\u5206\uff0c\u53ea\u9700\u8981\u4ece Header \u4e2d\u5c06 XID \u5c31\u53ef\u4ee5\u53d6\u51fa\u7ed1\u5b9a\u5230\u81ea\u5df1\u7684\u4e8b\u52a1\u4e0a\u4e0b\u6587\u4e2d\u5373\u53ef\u3002\u4f46\u662f\u5bf9\u4e8e\u8c03\u7528\u65b9\u7531\u4e8e\u8bf7\u6c42\u7ec4\u4ef6\u7684\u591a\u6837\u5316\uff0c\u5305\u62ec\u7194\u65ad\u9694\u79bb\u673a\u5236\uff0c\u6240\u4ee5\u8981\u533a\u5206\u4e0d\u540c\u7684\u60c5\u51b5\u505a\u5904\u7406\uff0c\u540e\u9762\u6211\u4eec\u6765\u5177\u4f53\u5206\u6790\u4e00\u4e0b\u3002"),(0,a.kt)("h4",{id:"\u5fae\u670d\u52a1\u8c03\u7528\u65b9"},"\u5fae\u670d\u52a1\u8c03\u7528\u65b9"),(0,a.kt)("p",null,"Fescar \u5c06\u8bf7\u6c42\u65b9\u5f0f\u5206\u4e3a\uff1aRestTemplate\u3001Feign\u3001Feign+Hystrix \u548c Feign+Sentinel \u3002\u4e0d\u540c\u7684\u7ec4\u4ef6\u901a\u8fc7 Spring Boot \u7684 Auto Configuration \u6765\u5b8c\u6210\u81ea\u52a8\u7684\u914d\u7f6e\uff0c\u5177\u4f53\u7684\u914d\u7f6e\u7c7b\u6e05\u5355\u53ef\u4ee5\u770b spring.factories \uff0c\u4e0b\u6587\u4e5f\u4f1a\u4ecb\u7ecd\u76f8\u5173\u7684\u914d\u7f6e\u7c7b\u3002"),(0,a.kt)("h5",{id:"resttemplate"},"RestTemplate"),(0,a.kt)("p",null,"\u5148\u6765\u770b\u4e0b\u5982\u679c\u8c03\u7528\u65b9\u5982\u679c\u662f\u662f\u57fa\u4e8e RestTemplate \u7684\u8bf7\u6c42\uff0cFescar \u662f\u600e\u4e48\u4f20\u9012 XID \u7684\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class FescarRestTemplateInterceptor implements ClientHttpRequestInterceptor {\n    @Override\n    public ClientHttpResponse intercept(HttpRequest httpRequest, byte[] bytes,\n            ClientHttpRequestExecution clientHttpRequestExecution) throws IOException {\n        HttpRequestWrapper requestWrapper = new HttpRequestWrapper(httpRequest);\n\n        String xid = RootContext.getXID();\n\n        if (!StringUtils.isEmpty(xid)) {\n            requestWrapper.getHeaders().add(RootContext.KEY_XID, xid);\n        }\n        return clientHttpRequestExecution.execute(requestWrapper, bytes);\n    }\n}\n")),(0,a.kt)("p",null,"FescarRestTemplateInterceptor \u5b9e\u73b0\u4e86 ClientHttpRequestInterceptor \u63a5\u53e3\u7684 intercept \u65b9\u6cd5\uff0c\u5bf9\u8c03\u7528\u7684\u8bf7\u6c42\u505a\u4e86\u5305\u88c5\uff0c\u5728\u53d1\u9001\u8bf7\u6c42\u65f6\u82e5\u5b58\u5728 Fescar \u4e8b\u52a1\u4e0a\u4e0b\u6587 XID \u5219\u53d6\u51fa\u5e76\u653e\u5230 HTTP Header \u4e2d\u3002"),(0,a.kt)("p",null,"FescarRestTemplateInterceptor \u901a\u8fc7 FescarRestTemplateAutoConfiguration \u5b9e\u73b0\u5c06 FescarRestTemplateInterceptor \u914d\u7f6e\u5230 RestTemplate \u4e2d\u53bb\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\npublic class FescarRestTemplateAutoConfiguration {\n\n    @Bean\n    public FescarRestTemplateInterceptor fescarRestTemplateInterceptor() {\n        return new FescarRestTemplateInterceptor();\n    }\n\n    @Autowired(required = false)\n    private Collection<RestTemplate> restTemplates;\n\n    @Autowired\n    private FescarRestTemplateInterceptor fescarRestTemplateInterceptor;\n\n    @PostConstruct\n    public void init() {\n        if (this.restTemplates != null) {\n            for (RestTemplate restTemplate : restTemplates) {\n                List<ClientHttpRequestInterceptor> interceptors = new ArrayList<ClientHttpRequestInterceptor>(\n                        restTemplate.getInterceptors());\n                interceptors.add(this.fescarRestTemplateInterceptor);\n                restTemplate.setInterceptors(interceptors);\n            }\n        }\n    }\n\n}\n")),(0,a.kt)("p",null,"init \u65b9\u6cd5\u904d\u5386\u6240\u6709\u7684 restTemplate \uff0c\u5e76\u5c06\u539f\u6765 restTemplate \u4e2d\u7684\u62e6\u622a\u5668\u53d6\u51fa\uff0c\u589e\u52a0 fescarRestTemplateInterceptor \u540e\u7f6e\u5165\u5e76\u91cd\u6392\u5e8f\u3002"),(0,a.kt)("h5",{id:"feign"},"Feign"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Feign \u7c7b\u5173\u7cfb\u56fe",src:t(80391).Z,width:"1986",height:"788"})),(0,a.kt)("p",null,"\u63a5\u4e0b\u6765\u770b\u4e0b Feign \u7684\u76f8\u5173\u4ee3\u7801\uff0c\u8be5\u5305\u4e0b\u9762\u7684\u7c7b\u8fd8\u662f\u6bd4\u8f83\u591a\u7684\uff0c\u6211\u4eec\u5148\u4ece\u5176 AutoConfiguration \u5165\u624b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\n@ConditionalOnClass(Client.class)\n@AutoConfigureBefore(FeignAutoConfiguration.class)\npublic class FescarFeignClientAutoConfiguration {\n\n    @Bean\n    @Scope("prototype")\n    @ConditionalOnClass(name = "com.netflix.hystrix.HystrixCommand")\n    @ConditionalOnProperty(name = "feign.hystrix.enabled", havingValue = "true")\n    Feign.Builder feignHystrixBuilder(BeanFactory beanFactory) {\n        return FescarHystrixFeignBuilder.builder(beanFactory);\n    }\n\n    @Bean\n    @Scope("prototype")\n    @ConditionalOnClass(name = "com.alibaba.csp.sentinel.SphU")\n    @ConditionalOnProperty(name = "feign.sentinel.enabled", havingValue = "true")\n    Feign.Builder feignSentinelBuilder(BeanFactory beanFactory) {\n        return FescarSentinelFeignBuilder.builder(beanFactory);\n    }\n\n    @Bean\n    @ConditionalOnMissingBean\n    @Scope("prototype")\n    Feign.Builder feignBuilder(BeanFactory beanFactory) {\n        return FescarFeignBuilder.builder(beanFactory);\n    }\n\n    @Configuration\n    protected static class FeignBeanPostProcessorConfiguration {\n\n        @Bean\n        FescarBeanPostProcessor fescarBeanPostProcessor(\n                FescarFeignObjectWrapper fescarFeignObjectWrapper) {\n            return new FescarBeanPostProcessor(fescarFeignObjectWrapper);\n        }\n\n        @Bean\n        FescarContextBeanPostProcessor fescarContextBeanPostProcessor(\n                BeanFactory beanFactory) {\n            return new FescarContextBeanPostProcessor(beanFactory);\n        }\n\n        @Bean\n        FescarFeignObjectWrapper fescarFeignObjectWrapper(BeanFactory beanFactory) {\n            return new FescarFeignObjectWrapper(beanFactory);\n        }\n    }\n\n}\n')),(0,a.kt)("p",null,"FescarFeignClientAutoConfiguration \u5728\u5b58\u5728 Client.class \u65f6\u751f\u6548\uff0c\u4e14\u8981\u6c42\u4f5c\u7528\u5728 FeignAutoConfiguration \u4e4b\u524d\u3002\u7531\u4e8eFeignClientsConfiguration \u662f\u5728 FeignAutoConfiguration \u751f\u6210 FeignContext \u751f\u6548\u7684\uff0c\u6240\u4ee5\u6839\u636e\u4f9d\u8d56\u5173\u7cfb\uff0c FescarFeignClientAutoConfiguration \u540c\u6837\u65e9\u4e8e FeignClientsConfiguration\u3002"),(0,a.kt)("p",null,"FescarFeignClientAutoConfiguration \u81ea\u5b9a\u4e49\u4e86 Feign.Builder\uff0c\u9488\u5bf9\u4e8e feign.sentinel\uff0cfeign.hystrix  \u548c feign \u7684\u60c5\u51b5\u505a\u4e86\u9002\u914d\uff0c\u76ee\u7684\u662f\u81ea\u5b9a\u4e49 feign \u4e2d Client \u7684\u771f\u6b63\u5b9e\u73b0\u4e3a FescarFeignClient\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"HystrixFeign.builder().retryer(Retryer.NEVER_RETRY)\n      .client(new FescarFeignClient(beanFactory))\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"SentinelFeign.builder().retryer(Retryer.NEVER_RETRY)\n                .client(new FescarFeignClient(beanFactory));\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Feign.builder().client(new FescarFeignClient(beanFactory));\n")),(0,a.kt)("p",null,"FescarFeignClient \u662f\u5bf9\u539f\u6765\u7684 Feign \u5ba2\u6237\u7aef\u4ee3\u7406\u589e\u5f3a\uff0c\u5177\u4f53\u4ee3\u7801\u89c1\u4e0b\u56fe\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class FescarFeignClient implements Client {\n\n    private final Client delegate;\n    private final BeanFactory beanFactory;\n\n    FescarFeignClient(BeanFactory beanFactory) {\n        this.beanFactory = beanFactory;\n        this.delegate = new Client.Default(null, null);\n    }\n\n    FescarFeignClient(BeanFactory beanFactory, Client delegate) {\n        this.delegate = delegate;\n        this.beanFactory = beanFactory;\n    }\n\n    @Override\n    public Response execute(Request request, Request.Options options) throws IOException {\n\n        Request modifiedRequest = getModifyRequest(request);\n\n        try {\n            return this.delegate.execute(modifiedRequest, options);\n        }\n        finally {\n\n        }\n    }\n\n    private Request getModifyRequest(Request request) {\n\n        String xid = RootContext.getXID();\n\n        if (StringUtils.isEmpty(xid)) {\n            return request;\n        }\n\n        Map<String, Collection<String>> headers = new HashMap<>();\n        headers.putAll(request.headers());\n\n        List<String> fescarXid = new ArrayList<>();\n        fescarXid.add(xid);\n        headers.put(RootContext.KEY_XID, fescarXid);\n\n        return Request.create(request.method(), request.url(), headers, request.body(),\n                request.charset());\n    }\n\n")),(0,a.kt)("p",null,"\u4e0a\u9762\u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cFescarFeignClient \u5bf9\u539f\u6765\u7684 Request \u505a\u4e86\u4fee\u6539\uff0c\u5b83\u9996\u5148\u5c06 XID \u4ece\u5f53\u524d\u7684\u4e8b\u52a1\u4e0a\u4e0b\u6587\u4e2d\u53d6\u51fa\uff0c\u5728 XID \u4e0d\u4e3a\u7a7a\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06 XID \u653e\u5230\u4e86 Header \u4e2d\u3002"),(0,a.kt)("p",null,"FeignBeanPostProcessorConfiguration \u5b9a\u4e49\u4e863\u4e2a bean\uff1aFescarContextBeanPostProcessor\u3001FescarBeanPostProcessor \u548c FescarFeignObjectWrapper\u3002\u5176\u4e2d FescarContextBeanPostProcessor FescarBeanPostProcessor \u5b9e\u73b0\u4e86Spring  BeanPostProcessor \u63a5\u53e3\u3002\n\u4ee5\u4e0b\u4e3a FescarContextBeanPostProcessor \u5b9e\u73b0\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"    @Override\n    public Object postProcessBeforeInitialization(Object bean, String beanName)\n            throws BeansException {\n        if (bean instanceof FeignContext && !(bean instanceof FescarFeignContext)) {\n            return new FescarFeignContext(getFescarFeignObjectWrapper(),\n                    (FeignContext) bean);\n        }\n        return bean;\n    }\n\n    @Override\n    public Object postProcessAfterInitialization(Object bean, String beanName)\n            throws BeansException {\n        return bean;\n    }\n")),(0,a.kt)("p",null,"BeanPostProcessor \u4e2d\u7684\u4e24\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u5bf9 Spring \u5bb9\u5668\u4e2d\u7684 Bean \u505a\u524d\u540e\u5904\u7406\uff0cpostProcessBeforeInitialization \u5904\u7406\u65f6\u673a\u662f\u521d\u59cb\u5316\u4e4b\u524d\uff0cpostProcessAfterInitialization \u7684\u5904\u7406\u65f6\u673a\u662f\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u8fd92\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u539f\u5148\u751f\u6210\u7684\u5b9e\u4f8b bean\uff0c\u6216\u8005\u4f7f\u7528 wrapper \u5305\u88c5\u540e\u7684\u5b9e\u4f8b\u3002"),(0,a.kt)("p",null,"FescarContextBeanPostProcessor  \u5c06 FeignContext \u5305\u88c5\u6210 FescarFeignContext\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","FescarBeanPostProcessor  \u5c06 FeignClient \u6839\u636e\u662f\u5426\u7ee7\u627f\u4e86 LoadBalancerFeignClient \u5305\u88c5\u6210 FescarLoadBalancerFeignClient \u548c FescarFeignClient\u3002"),(0,a.kt)("p",null,"FeignAutoConfiguration \u4e2d\u7684 FeignContext \u5e76\u6ca1\u6709\u52a0 ConditionalOnXXX \u7684\u6761\u4ef6\uff0c\u6240\u4ee5 Fescar \u91c7\u7528\u9884\u7f6e\u5904\u7406\u7684\u65b9\u5f0f\u5c06 FeignContext \u5305\u88c5\u6210 FescarFeignContext\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"    @Bean\n    public FeignContext feignContext() {\n        FeignContext context = new FeignContext();\n        context.setConfigurations(this.configurations);\n        return context;\n    }\n")),(0,a.kt)("p",null,"\u800c\u5bf9\u4e8e Feign Client\uff0cFeignClientFactoryBean \u4e2d\u4f1a\u83b7\u53d6 FeignContext \u7684\u5b9e\u4f8b\u5bf9\u8c61\u3002\u5bf9\u4e8e\u5f00\u53d1\u8005\u91c7\u7528 @Configuration \u6ce8\u89e3\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e\u7684 Feign Client \u5bf9\u8c61\uff0c\u8fd9\u91cc\u4f1a\u88ab\u914d\u7f6e\u5230 builder\uff0c\u5bfc\u81f4 FescarFeignBuilder \u4e2d\u589e\u5f3a\u540e\u7684 FescarFeignCliet \u5931\u6548\u3002FeignClientFactoryBean \u4e2d\u5173\u952e\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'    /**\n     * @param <T> the target type of the Feign client\n     * @return a {@link Feign} client created with the specified data and the context information\n     */\n    <T> T getTarget() {\n        FeignContext context = applicationContext.getBean(FeignContext.class);\n        Feign.Builder builder = feign(context);\n\n        if (!StringUtils.hasText(this.url)) {\n            if (!this.name.startsWith("http")) {\n                url = "http://" + this.name;\n            }\n            else {\n                url = this.name;\n            }\n            url += cleanPath();\n            return (T) loadBalance(builder, context, new HardCodedTarget<>(this.type,\n                    this.name, url));\n        }\n        if (StringUtils.hasText(this.url) && !this.url.startsWith("http")) {\n            this.url = "http://" + this.url;\n        }\n        String url = this.url + cleanPath();\n        Client client = getOptional(context, Client.class);\n        if (client != null) {\n            if (client instanceof LoadBalancerFeignClient) {\n                // not load balancing because we have a url,\n                // but ribbon is on the classpath, so unwrap\n                client = ((LoadBalancerFeignClient)client).getDelegate();\n            }\n            builder.client(client);\n        }\n        Targeter targeter = get(context, Targeter.class);\n        return (T) targeter.target(this, builder, context, new HardCodedTarget<>(\n                this.type, this.name, url));\n    }\n')),(0,a.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u6839\u636e\u662f\u5426\u6307\u5b9a\u4e86\u6ce8\u89e3\u53c2\u6570\u4e2d\u7684 URL \u6765\u9009\u62e9\u76f4\u63a5\u8c03\u7528 URL \u8fd8\u662f\u8d70\u8d1f\u8f7d\u5747\u8861\uff0ctargeter.target \u901a\u8fc7\u52a8\u6001\u4ee3\u7406\u521b\u5efa\u5bf9\u8c61\u3002\u5927\u81f4\u8fc7\u7a0b\u4e3a\uff1a\u5c06\u89e3\u6790\u51fa\u7684feign\u65b9\u6cd5\u653e\u5165map\n\uff0c\u518d\u901a\u8fc7\u5c06\u5176\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u751f\u6210InvocationHandler\uff0c\u8fdb\u800c\u751f\u6210\u52a8\u6001\u4ee3\u7406\u5bf9\u8c61\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","FescarContextBeanPostProcessor \u7684\u5b58\u5728\uff0c\u5373\u4f7f\u5f00\u53d1\u8005\u5bf9 FeignClient \u81ea\u5b9a\u4e49\u64cd\u4f5c\uff0c\u4f9d\u65e7\u53ef\u4ee5\u5b8c\u6210 Fescar \u6240\u9700\u7684\u5168\u5c40\u4e8b\u52a1\u7684\u589e\u5f3a\u3002"),(0,a.kt)("p",null,"\u5bf9\u4e8e FescarFeignObjectWrapper\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u4e0bWrapper\u65b9\u6cd5\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"    Object wrap(Object bean) {\n        if (bean instanceof Client && !(bean instanceof FescarFeignClient)) {\n            if (bean instanceof LoadBalancerFeignClient) {\n                LoadBalancerFeignClient client = ((LoadBalancerFeignClient) bean);\n                return new FescarLoadBalancerFeignClient(client.getDelegate(), factory(),\n                        clientFactory(), this.beanFactory);\n            }\n            return new FescarFeignClient(this.beanFactory, (Client) bean);\n        }\n        return bean;\n    }\n")),(0,a.kt)("p",null,"wrap \u65b9\u6cd5\u4e2d\uff0c\u5982\u679c bean \u662f LoadBalancerFeignClient \u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u90a3\u4e48\u9996\u5148\u901a\u8fc7 client.getDelegate() \u65b9\u6cd5\u5c06 LoadBalancerFeignClient \u4ee3\u7406\u7684\u5b9e\u9645 Client \u5bf9\u8c61\u53d6\u51fa\u540e\u5305\u88c5\u6210 FescarFeignClient\uff0c\u518d\u751f\u6210 LoadBalancerFeignClient \u7684\u5b50\u7c7b FescarLoadBalancerFeignClient \u5bf9\u8c61\u3002\u5982\u679c bean \u662f Client \u7684\u5b9e\u4f8b\u5bf9\u8c61\u4e14\u4e0d\u662f FescarFeignClient LoadBalancerFeignClient\uff0c\u90a3\u4e48 bean \u4f1a\u76f4\u63a5\u5305\u88c5\u751f\u6210 FescarFeignClient\u3002"),(0,a.kt)("p",null,"\u4e0a\u9762\u7684\u6d41\u7a0b\u8bbe\u8ba1\u8fd8\u662f\u6bd4\u8f83\u5de7\u5999\u7684\uff0c\u9996\u5148\u6839\u636e Spring boot \u7684 Auto Configuration \u63a7\u5236\u4e86\u914d\u7f6e\u7684\u5148\u540e\u987a\u5e8f\uff0c\u540c\u65f6\u81ea\u5b9a\u4e49\u4e86 Feign Builder \u7684Bean\uff0c\u4fdd\u8bc1\u4e86 Client \u5747\u662f\u7ecf\u8fc7\u589e\u5f3a\u540e\u7684 FescarFeignClient \u3002\u518d\u901a\u8fc7 BeanPostProcessor \u5bf9Spring \u5bb9\u5668\u4e2d\u7684 Bean \u505a\u4e86\u4e00\u904d\u5305\u88c5\uff0c\u4fdd\u8bc1\u5bb9\u5668\u5185\u7684Bean\u5747\u662f\u589e\u5f3a\u540e FescarFeignClient \uff0c\u907f\u514d FeignClientFactoryBean getTarget \u65b9\u6cd5\u7684\u66ff\u6362\u52a8\u4f5c\u3002"),(0,a.kt)("h5",{id:"hystrix-\u9694\u79bb"},"Hystrix \u9694\u79bb"),(0,a.kt)("p",null,"\u4e0b\u9762\u6211\u4eec\u518d\u6765\u770b\u4e0b Hystrix \u90e8\u5206\uff0c\u4e3a\u4ec0\u4e48\u8981\u5355\u72ec\u628a Hystrix \u62c6\u51fa\u6765\u770b\u5462\uff0c\u800c\u4e14 Fescar \u4ee3\u7801\u4e5f\u5355\u72ec\u5b9e\u73b0\u4e86\u4e2a\u7b56\u7565\u7c7b\u3002\u76ee\u524d\u4e8b\u52a1\u4e0a\u4e0b\u6587 RootContext \u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u57fa\u4e8e ThreadLocal \u65b9\u5f0f\u7684 ThreadLocalContextCore\uff0c\u4e5f\u5c31\u662f\u4e0a\u4e0b\u6587\u5176\u5b9e\u662f\u548c\u7ebf\u7a0b\u7ed1\u5b9a\u7684\u3002Hystrix \u672c\u8eab\u6709\u4e24\u79cd\u9694\u79bb\u72b6\u6001\u7684\u6a21\u5f0f\uff0c\u57fa\u4e8e\u4fe1\u53f7\u91cf\u6216\u8005\u57fa\u4e8e\u7ebf\u7a0b\u6c60\u8fdb\u884c\u9694\u79bb\u3002Hystrix \u5b98\u65b9\u5efa\u8bae\u662f\u91c7\u53d6\u7ebf\u7a0b\u6c60\u7684\u65b9\u5f0f\u6765\u5145\u5206\u9694\u79bb\uff0c\u4e5f\u662f\u4e00\u822c\u60c5\u51b5\u4e0b\u5728\u91c7\u7528\u7684\u6a21\u5f0f\uff1a "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Thread or Semaphore\nThe default, and the recommended setting, is to run HystrixCommands using thread isolation (THREAD) and HystrixObservableCommands using semaphore isolation (SEMAPHORE).\n\nCommands executed in threads have an extra layer of protection against latencies beyond what network timeouts can offer.\n\nGenerally the only time you should use semaphore isolation for HystrixCommands is when the call is so high volume (hundreds per second, per instance) that the overhead of separate threads is too high; this typically only applies to non-network calls.\n")),(0,a.kt)("p",null,"service \u5c42\u7684\u4e1a\u52a1\u4ee3\u7801\u548c\u8bf7\u6c42\u53d1\u51fa\u7684\u7ebf\u7a0b\u80af\u5b9a\u4e0d\u662f\u540c\u4e00\u4e2a\uff0c\u90a3\u4e48 ThreadLocal \u7684\u65b9\u5f0f\u5c31\u6ca1\u529e\u6cd5\u5c06 XID \u4f20\u9012\u7ed9 Hystrix \u7684\u7ebf\u7a0b\u5e76\u4f20\u9012\u7ed9\u88ab\u8c03\u7528\u65b9\u7684\u3002\u600e\u4e48\u5904\u7406\u8fd9\u4ef6\u4e8b\u60c5\u5462\uff0cHystrix \u63d0\u4f9b\u4e86\u673a\u5236\u8ba9\u5f00\u53d1\u8005\u53bb\u81ea\u5b9a\u4e49\u5e76\u53d1\u7b56\u7565\uff0c\u53ea\u9700\u8981\u7ee7\u627f HystrixConcurrencyStrategy \u91cd\u5199 wrapCallable \u65b9\u6cd5\u5373\u53ef\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class FescarHystrixConcurrencyStrategy extends HystrixConcurrencyStrategy {\n\n    private HystrixConcurrencyStrategy delegate;\n\n    public FescarHystrixConcurrencyStrategy() {\n        this.delegate = HystrixPlugins.getInstance().getConcurrencyStrategy();\n        HystrixPlugins.reset();\n        HystrixPlugins.getInstance().registerConcurrencyStrategy(this);\n    }\n\n    @Override\n    public <K> Callable<K> wrapCallable(Callable<K> c) {\n        if (c instanceof FescarContextCallable) {\n            return c;\n        }\n\n        Callable<K> wrappedCallable;\n        if (this.delegate != null) {\n            wrappedCallable = this.delegate.wrapCallable(c);\n        }\n        else {\n            wrappedCallable = c;\n        }\n        if (wrappedCallable instanceof FescarContextCallable) {\n            return wrappedCallable;\n        }\n\n        return new FescarContextCallable<>(wrappedCallable);\n    }\n\n    private static class FescarContextCallable<K> implements Callable<K> {\n\n        private final Callable<K> actual;\n        private final String xid;\n\n        FescarContextCallable(Callable<K> actual) {\n            this.actual = actual;\n            this.xid = RootContext.getXID();\n        }\n\n        @Override\n        public K call() throws Exception {\n            try {\n                RootContext.bind(xid);\n                return actual.call();\n            }\n            finally {\n                RootContext.unbind();\n            }\n        }\n\n    }\n}\n")),(0,a.kt)("p",null,"Fescar \u4e5f\u63d0\u4f9b\u4e00\u4e2a FescarHystrixAutoConfiguration\uff0c\u5728\u5b58\u5728 HystrixCommand \u7684\u65f6\u5019\u751f\u6210FescarHystrixConcurrencyStrategy"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\n@ConditionalOnClass(HystrixCommand.class)\npublic class FescarHystrixAutoConfiguration {\n\n    @Bean\n    FescarHystrixConcurrencyStrategy fescarHystrixConcurrencyStrategy() {\n        return new FescarHystrixConcurrencyStrategy();\n    }\n\n}\n")),(0,a.kt)("h3",{id:"\u53c2\u8003\u6587\u732e"},"\u53c2\u8003\u6587\u732e"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Fescar: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/alibaba/fescar"},"https://github.com/alibaba/fescar"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Spring Cloud Alibaba: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/spring-cloud-incubator/spring-cloud-alibaba"},"https://github.com/spring-cloud-incubator/spring-cloud-alibaba"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"spring-cloud-openfeign: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/spring-cloud/spring-cloud-openfeign"},"https://github.com/spring-cloud/spring-cloud-openfeign")),(0,a.kt)("h3",{parentName:"li",id:"\u672c\u6587\u4f5c\u8005"},"\u672c\u6587\u4f5c\u8005"),(0,a.kt)("p",{parentName:"li"}," \u90ed\u6811\u6297\uff0c\u793e\u533a\u6635\u79f0 ywind\uff0c\u66fe\u5c31\u804c\u4e8e\u534e\u4e3a\u7ec8\u7aef\u4e91\uff0c\u73b0\u641c\u72d0\u667a\u80fd\u5a92\u4f53\u4e2d\u5fc3Java\u5de5\u7a0b\u5e08\uff0c\u76ee\u524d\u4e3b\u8981\u8d1f\u8d23\u641c\u72d0\u53f7\u76f8\u5173\u5f00\u53d1\uff0c\u5bf9\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001\u5206\u5e03\u5f0f\u7cfb\u7edf\u548c\u5fae\u670d\u52a1\u67b6\u6784\u6709\u5f02\u5e38\u6d53\u539a\u7684\u5174\u8da3\u3002",(0,a.kt)("br",{parentName:"p"}),"\n","\u5b63\u654f(\u6e05\u94ed)\uff0c\u793e\u533a\u6635\u79f0 slievrly\uff0cFescar \u5f00\u6e90\u9879\u76ee\u8d1f\u8d23\u4eba\uff0c\u963f\u91cc\u5df4\u5df4\u4e2d\u95f4\u4ef6 TXC/GTS \u6838\u5fc3\u7814\u53d1\u6210\u5458\uff0c\u957f\u671f\u4ece\u4e8b\u4e8e\u5206\u5e03\u5f0f\u4e2d\u95f4\u4ef6\u6838\u5fc3\u7814\u53d1\u5de5\u4f5c\uff0c\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u9886\u57df\u6709\u7740\u8f83\u4e30\u5bcc\u7684\u6280\u672f\u79ef\u7d2f\u3002"))))}g.isMDXComponent=!0},80391:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/20190305184812-46ab74f3830c4789b6f410150de067d6.png"},83002:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/fescar-microservices-88885eb3928c478894342041e066a5ce.png"}}]);