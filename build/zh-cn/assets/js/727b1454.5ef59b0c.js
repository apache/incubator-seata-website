"use strict";(self.webpackChunkseata_website=self.webpackChunkseata_website||[]).push([[4152],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),g=c(t),u=o,m=g["".concat(l,".").concat(u)]||g[u]||d[u]||r;return t?a.createElement(m,s(s({ref:n},p),{},{components:t})):a.createElement(m,s({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,s=new Array(r);s[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[g]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<r;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},62037:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=t(87462),o=(t(67294),t(3905));const r={title:"seata-golang \u901a\u4fe1\u6a21\u578b\u8be6\u89e3",keywords:["seata","seata-golang","seata-go","getty","\u5206\u5e03\u5f0f\u4e8b\u52a1"],description:"\u672c\u6587\u8be6\u7ec6\u8bb2\u8ff0 seata-golang \u5e95\u5c42 rpc \u901a\u4fe1\u7684\u5b9e\u73b0\u539f\u7406",author:"\u5218\u6653\u654f",date:"2021/01/04"},s="\u57fa\u4e8e getty \u7684 seata-golang \u901a\u4fe1\u6a21\u578b\u8be6\u89e3",i={permalink:"/zh-cn/blog/seata-golang-communication-mode",source:"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-golang-communication-mode.md",title:"seata-golang \u901a\u4fe1\u6a21\u578b\u8be6\u89e3",description:"\u672c\u6587\u8be6\u7ec6\u8bb2\u8ff0 seata-golang \u5e95\u5c42 rpc \u901a\u4fe1\u7684\u5b9e\u73b0\u539f\u7406",date:"2021-01-04T00:00:00.000Z",formattedDate:"2021\u5e741\u67084\u65e5",tags:[],readingTime:18.72,hasTruncateMarker:!1,authors:[{name:"\u5218\u6653\u654f"}],frontMatter:{title:"seata-golang \u901a\u4fe1\u6a21\u578b\u8be6\u89e3",keywords:["seata","seata-golang","seata-go","getty","\u5206\u5e03\u5f0f\u4e8b\u52a1"],description:"\u672c\u6587\u8be6\u7ec6\u8bb2\u8ff0 seata-golang \u5e95\u5c42 rpc \u901a\u4fe1\u7684\u5b9e\u73b0\u539f\u7406",author:"\u5218\u6653\u654f",date:"2021/01/04"},prevItem:{title:"Seata\u914d\u7f6e\u7ba1\u7406\u539f\u7406\u89e3\u6790",permalink:"/zh-cn/blog/seata-config-manager"},nextItem:{title:"Seata\u6570\u636e\u6e90\u4ee3\u7406\u89e3\u6790",permalink:"/zh-cn/blog/seata-datasource-proxy"}},l={authorsImageUrls:[void 0]},c=[{value:"\u4e00\u3001\u7b80\u4ecb",id:"\u4e00\u7b80\u4ecb",level:2},{value:"\u4e8c\u3001\u5982\u4f55\u57fa\u4e8e getty \u5b9e\u73b0 RPC \u901a\u4fe1",id:"\u4e8c\u5982\u4f55\u57fa\u4e8e-getty-\u5b9e\u73b0-rpc-\u901a\u4fe1",level:2},{value:"1. \u5efa\u7acb\u8fde\u63a5",id:"1-\u5efa\u7acb\u8fde\u63a5",level:3},{value:"2. \u6536\u53d1\u62a5\u6587",id:"2-\u6536\u53d1\u62a5\u6587",level:3},{value:"3. \u5e95\u5c42\u5904\u7406\u7f51\u7edc\u62a5\u6587\u7684\u903b\u8f91\u5982\u4f55\u4e0e\u4e1a\u52a1\u903b\u8f91\u89e3\u8026",id:"3-\u5e95\u5c42\u5904\u7406\u7f51\u7edc\u62a5\u6587\u7684\u903b\u8f91\u5982\u4f55\u4e0e\u4e1a\u52a1\u903b\u8f91\u89e3\u8026",level:3},{value:"4. \u5177\u4f53\u5b9e\u73b0",id:"4-\u5177\u4f53\u5b9e\u73b0",level:3},{value:"4.1 \u7f16\u89e3\u7801\u534f\u8bae\u5b9e\u73b0",id:"41-\u7f16\u89e3\u7801\u534f\u8bae\u5b9e\u73b0",level:4},{value:"4.2 Client \u7aef\u5b9e\u73b0",id:"42-client-\u7aef\u5b9e\u73b0",level:4},{value:"4.3 Server \u7aef Transaction Coordinator \u5b9e\u73b0",id:"43-server-\u7aef-transaction-coordinator-\u5b9e\u73b0",level:4},{value:"4.4 session manager \u5206\u6790",id:"44-session-manager-\u5206\u6790",level:4},{value:"\u4e09\u3001seata-golang \u7684\u672a\u6765",id:"\u4e09seata-golang-\u7684\u672a\u6765",level:2},{value:"<strong>\u4f5c\u8005\u7b80\u4ecb</strong>",id:"\u4f5c\u8005\u7b80\u4ecb",level:3},{value:"\u53c2\u8003\u8d44\u6599",id:"\u53c2\u8003\u8d44\u6599",level:4}],p={toc:c},g="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(g,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u4f5c\u8005 | \u5218\u6653\u654f \u4e8e\u96e8"),(0,o.kt)("h2",{id:"\u4e00\u7b80\u4ecb"},"\u4e00\u3001\u7b80\u4ecb"),(0,o.kt)("p",null,"Java \u7684\u4e16\u754c\u91cc\uff0c\u5927\u5bb6\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u4e2a\u9ad8\u6027\u80fd\u7f51\u7edc\u901a\u4fe1\u6846\u67b6 netty\uff0c\u5f88\u591a RPC \u6846\u67b6\u90fd\u662f\u57fa\u4e8e netty \u6765\u5b9e\u73b0\u7684\u3002\u5728 golang \u7684\u4e16\u754c\u91cc\uff0c",(0,o.kt)("a",{parentName:"p",href:"https://github.com/AlexStocks/getty"},"getty")," \u4e5f\u662f\u4e00\u4e2a\u7c7b\u4f3c netty \u7684\u9ad8\u6027\u80fd\u7f51\u7edc\u901a\u4fe1\u5e93\u3002getty \u6700\u521d\u7531 dubbogo \u9879\u76ee\u8d1f\u8d23\u4eba\u4e8e\u96e8\u5f00\u53d1\uff0c\u4f5c\u4e3a\u5e95\u5c42\u901a\u4fe1\u5e93\u5728 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/dubbo-go"},"dubbo-go")," \u4e2d\u4f7f\u7528\u3002\u968f\u7740 dubbo-go \u6350\u732e\u7ed9 apache \u57fa\u91d1\u4f1a\uff0c\u5728\u793e\u533a\u5c0f\u4f19\u4f34\u7684\u5171\u540c\u52aa\u529b\u4e0b\uff0cgetty \u4e5f\u6700\u7ec8\u8fdb\u5165\u5230 apache \u8fd9\u4e2a\u5927\u5bb6\u5ead\uff0c\u5e76\u6539\u540d ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/dubbo-getty"},"dubbo-getty")," \u3002"),(0,o.kt)("p",null,"18 \u5e74\u7684\u65f6\u5019\uff0c\u6211\u5728\u516c\u53f8\u91cc\u5b9e\u8df5\u5fae\u670d\u52a1\uff0c\u5f53\u65f6\u9047\u5230\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u3002\u540c\u5e74\uff0c\u963f\u91cc\u5728\u793e\u533a\u5f00\u6e90\u4ed6\u4eec\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u4e5f\u5f88\u5feb\u5173\u6ce8\u5230\u8fd9\u4e2a\u9879\u76ee\uff0c\u8d77\u521d\u8fd8\u53eb fescar\uff0c\u540e\u6765\u66f4\u540d seata\u3002\u7531\u4e8e\u6211\u5bf9\u5f00\u6e90\u6280\u672f\u5f88\u611f\u5174\u8da3\uff0c\u52a0\u4e86\u5f88\u591a\u793e\u533a\u7fa4\uff0c\u5f53\u65f6\u4e5f\u5f88\u5173\u6ce8 dubbo-go \u8fd9\u4e2a\u9879\u76ee\uff0c\u5728\u91cc\u9762\u9ed8\u9ed8\u6f5c\u6c34\u3002\u968f\u7740\u5bf9 seata \u7684\u4e86\u89e3\uff0c\u9010\u6e10\u840c\u751f\u4e86\u505a\u4e00\u4e2a go \u7248\u672c\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u6846\u67b6\u7684\u60f3\u6cd5\u3002"),(0,o.kt)("p",null,"\u8981\u505a\u4e00\u4e2a golang \u7248\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u6846\u67b6\uff0c\u9996\u8981\u7684\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5b9e\u73b0 RPC \u901a\u4fe1\u3002dubbo-go \u5c31\u662f\u5f88\u597d\u7684\u4e00\u4e2a\u4f8b\u5b50\u6446\u5728\u773c\u524d\uff0c\u9042\u5f00\u59cb\u7814\u7a76 dubbo-go \u7684\u5e95\u5c42 getty\u3002"),(0,o.kt)("h2",{id:"\u4e8c\u5982\u4f55\u57fa\u4e8e-getty-\u5b9e\u73b0-rpc-\u901a\u4fe1"},"\u4e8c\u3001\u5982\u4f55\u57fa\u4e8e getty \u5b9e\u73b0 RPC \u901a\u4fe1"),(0,o.kt)("p",null,"getty \u6846\u67b6\u7684\u6574\u4f53\u6a21\u578b\u56fe\u5982\u4e0b\uff1a"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i1/O1CN011TIcL01jY4JaweOfV_!!6000000004559-2-tps-954-853.png",alt:"image.png"})),(0,o.kt)("p",null,"\u4e0b\u9762\u7ed3\u5408\u76f8\u5173\u4ee3\u7801\uff0c\u8be6\u8ff0 seata-golang \u7684 RPC \u901a\u4fe1\u8fc7\u7a0b\u3002"),(0,o.kt)("h3",{id:"1-\u5efa\u7acb\u8fde\u63a5"},"1. \u5efa\u7acb\u8fde\u63a5"),(0,o.kt)("p",null,"\u5b9e\u73b0 RPC \u901a\u4fe1\uff0c\u9996\u5148\u8981\u5efa\u7acb\u7f51\u7edc\u8fde\u63a5\u5427\uff0c\u6211\u4eec\u4ece ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/dubbo-getty/blob/master/client.go"},"client.go")," \u5f00\u59cb\u770b\u8d77\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (c *client) connect() {\n    var (\n        err error\n        ss  Session\n    )\n\n    for {\n        // \u5efa\u7acb\u4e00\u4e2a session \u8fde\u63a5\n        ss = c.dial()\n        if ss == nil {\n            // client has been closed\n            break\n        }\n        err = c.newSession(ss)\n        if err == nil {\n            // \u6536\u53d1\u62a5\u6587\n            ss.(*session).run()\n            // \u6b64\u5904\u7701\u7565\u90e8\u5206\u4ee3\u7801\n      \n            break\n        }\n        // don't distinguish between tcp connection and websocket connection. Because\n        // gorilla/websocket/conn.go:(Conn)Close also invoke net.Conn.Close()\n        ss.Conn().Close()\n    }\n}\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"connect()")," \u65b9\u6cd5\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"dial()")," \u65b9\u6cd5\u5f97\u5230\u4e86\u4e00\u4e2a session \u8fde\u63a5\uff0c\u8fdb\u5165 dial() \u65b9\u6cd5\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"func (c *client) dial() Session {\n    switch c.endPointType {\n    case TCP_CLIENT:\n        return c.dialTCP()\n    case UDP_CLIENT:\n        return c.dialUDP()\n    case WS_CLIENT:\n        return c.dialWS()\n    case WSS_CLIENT:\n        return c.dialWSS()\n    }\n\n    return nil\n}\n")),(0,o.kt)("p",null,"\u6211\u4eec\u5173\u6ce8\u7684\u662f TCP \u8fde\u63a5\uff0c\u6240\u4ee5\u7ee7\u7eed\u8fdb\u5165 ",(0,o.kt)("inlineCode",{parentName:"p"},"c.dialTCP()")," \u65b9\u6cd5\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func (c *client) dialTCP() Session {\n    var (\n        err  error\n        conn net.Conn\n    )\n\n    for {\n        if c.IsClosed() {\n            return nil\n        }\n        if c.sslEnabled {\n            if sslConfig, err := c.tlsConfigBuilder.BuildTlsConfig(); err == nil && sslConfig != nil {\n                d := &net.Dialer{Timeout: connectTimeout}\n                // \u5efa\u7acb\u52a0\u5bc6\u8fde\u63a5\n                conn, err = tls.DialWithDialer(d, "tcp", c.addr, sslConfig)\n            }\n        } else {\n            // \u5efa\u7acb tcp \u8fde\u63a5\n            conn, err = net.DialTimeout("tcp", c.addr, connectTimeout)\n        }\n        if err == nil && gxnet.IsSameAddr(conn.RemoteAddr(), conn.LocalAddr()) {\n            conn.Close()\n            err = errSelfConnect\n        }\n        if err == nil {\n            // \u8fd4\u56de\u4e00\u4e2a TCPSession\n            return newTCPSession(conn, c)\n        }\n\n        log.Infof("net.DialTimeout(addr:%s, timeout:%v) = error:%+v", c.addr, connectTimeout, perrors.WithStack(err))\n        <-wheel.After(connectInterval)\n    }\n}\n')),(0,o.kt)("p",null,"\u81f3\u6b64\uff0c\u6211\u4eec\u77e5\u9053\u4e86 getty \u5982\u4f55\u5efa\u7acb TCP \u8fde\u63a5\uff0c\u5e76\u8fd4\u56de TCPSession\u3002"),(0,o.kt)("h3",{id:"2-\u6536\u53d1\u62a5\u6587"},"2. \u6536\u53d1\u62a5\u6587"),(0,o.kt)("p",null,"\u90a3\u5b83\u662f\u600e\u4e48\u6536\u53d1\u62a5\u6587\u7684\u5462\uff0c\u6211\u4eec\u56de\u5230 connection \u65b9\u6cd5\u63a5\u7740\u5f80\u4e0b\u770b\uff0c\u6709\u8fd9\u6837\u4e00\u884c ",(0,o.kt)("inlineCode",{parentName:"p"},"ss.(*session).run()"),"\uff0c\u5728\u8fd9\u884c\u4ee3\u7801\u4e4b\u540e\u4ee3\u7801\u90fd\u662f\u5f88\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u731c\u6d4b\u8fd9\u884c\u4ee3\u7801\u8fd0\u884c\u7684\u903b\u8f91\u91cc\u9762\u4e00\u5b9a\u5305\u542b\u6536\u53d1\u62a5\u6587\u7684\u903b\u8f91\uff0c\u63a5\u7740\u8fdb\u5165 ",(0,o.kt)("inlineCode",{parentName:"p"},"run()")," \u65b9\u6cd5\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (s *session) run() {\n    // \u7701\u7565\u90e8\u5206\u4ee3\u7801\n  \n    go s.handleLoop()\n    go s.handlePackage()\n}\n")),(0,o.kt)("p",null,"\u8fd9\u91cc\u8d77\u4e86\u4e24\u4e2a goroutine\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"handleLoop")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"handlePackage"),"\uff0c\u770b\u5b57\u9762\u610f\u601d\u7b26\u5408\u6211\u4eec\u7684\u731c\u60f3\uff0c\u8fdb\u5165 ",(0,o.kt)("inlineCode",{parentName:"p"},"handleLoop()")," \u65b9\u6cd5\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func (s *session) handleLoop() {\n    // \u7701\u7565\u90e8\u5206\u4ee3\u7801\n  \n    for {\n        // A select blocks until one of its cases is ready to run.\n        // It choose one at random if multiple are ready. Otherwise it choose default branch if none is ready.\n        select {\n        // \u7701\u7565\u90e8\u5206\u4ee3\u7801\n      \n        case outPkg, ok = <-s.wQ:\n            // \u7701\u7565\u90e8\u5206\u4ee3\u7801\n\n            iovec = iovec[:0]\n            for idx := 0; idx < maxIovecNum; idx++ {\n        // \u901a\u8fc7 s.writer \u5c06 interface{} \u7c7b\u578b\u7684 outPkg \u7f16\u7801\u6210\u4e8c\u8fdb\u5236\u7684\u6bd4\u7279\n                pkgBytes, err = s.writer.Write(s, outPkg)\n                // \u7701\u7565\u90e8\u5206\u4ee3\u7801\n        \n                iovec = append(iovec, pkgBytes)\n\n                //\u7701\u7565\u90e8\u5206\u4ee3\u7801\n            }\n            // \u5c06\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u6bd4\u7279\u53d1\u9001\u51fa\u53bb\n            err = s.WriteBytesArray(iovec[:]...)\n            if err != nil {\n                log.Errorf("%s, [session.handleLoop]s.WriteBytesArray(iovec len:%d) = error:%+v",\n                    s.sessionToken(), len(iovec), perrors.WithStack(err))\n                s.stop()\n                // break LOOP\n                flag = false\n            }\n\n        case <-wheel.After(s.period):\n            if flag {\n                if wsFlag {\n                    err := wsConn.writePing()\n                    if err != nil {\n                        log.Warnf("wsConn.writePing() = error:%+v", perrors.WithStack(err))\n                    }\n                }\n                // \u5b9a\u65f6\u6267\u884c\u7684\u903b\u8f91\uff0c\u5fc3\u8df3\u7b49\n                s.listener.OnCron(s)\n            }\n        }\n    }\n}\n')),(0,o.kt)("p",null,"\u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"handleLoop()")," \u65b9\u6cd5\u5904\u7406\u7684\u662f\u53d1\u9001\u62a5\u6587\u7684\u903b\u8f91\uff0cRPC \u9700\u8981\u53d1\u9001\u7684\u6d88\u606f\u9996\u5148\u7531 ",(0,o.kt)("inlineCode",{parentName:"p"},"s.writer")," \u7f16\u7801\u6210\u4e8c\u8fdb\u5236\u6bd4\u7279\uff0c\u7136\u540e\u901a\u8fc7\u5efa\u7acb\u7684 TCP \u8fde\u63a5\u53d1\u9001\u51fa\u53bb\u3002\u8fd9\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"s.writer")," \u5bf9\u5e94\u7684 Writer \u63a5\u53e3\u662f RPC \u6846\u67b6\u5fc5\u987b\u8981\u5b9e\u73b0\u7684\u4e00\u4e2a\u63a5\u53e3\u3002"),(0,o.kt)("p",null,"\u7ee7\u7eed\u770b ",(0,o.kt)("inlineCode",{parentName:"p"},"handlePackage()")," \u65b9\u6cd5\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func (s *session) handlePackage() {\n    // \u7701\u7565\u90e8\u5206\u4ee3\u7801\n\n    if _, ok := s.Connection.(*gettyTCPConn); ok {\n        if s.reader == nil {\n            errStr := fmt.Sprintf("session{name:%s, conn:%#v, reader:%#v}", s.name, s.Connection, s.reader)\n            log.Error(errStr)\n            panic(errStr)\n        }\n\n        err = s.handleTCPPackage()\n    } else if _, ok := s.Connection.(*gettyWSConn); ok {\n        err = s.handleWSPackage()\n    } else if _, ok := s.Connection.(*gettyUDPConn); ok {\n        err = s.handleUDPPackage()\n    } else {\n        panic(fmt.Sprintf("unknown type session{%#v}", s))\n    }\n}\n')),(0,o.kt)("p",null,"\u8fdb\u5165 ",(0,o.kt)("inlineCode",{parentName:"p"},"handleTCPPackage()")," \u65b9\u6cd5\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (s *session) handleTCPPackage() error {\n    // \u7701\u7565\u90e8\u5206\u4ee3\u7801\n\n    conn = s.Connection.(*gettyTCPConn)\n    for {\n        // \u7701\u7565\u90e8\u5206\u4ee3\u7801\n\n        bufLen = 0\n        for {\n            // for clause for the network timeout condition check\n            // s.conn.SetReadTimeout(time.Now().Add(s.rTimeout))\n            // \u4ece TCP \u8fde\u63a5\u4e2d\u6536\u5230\u62a5\u6587\n            bufLen, err = conn.recv(buf)\n            // \u7701\u7565\u90e8\u5206\u4ee3\u7801\n      \n            break\n        }\n        // \u7701\u7565\u90e8\u5206\u4ee3\u7801\n    \n        // \u5c06\u6536\u5230\u7684\u62a5\u6587\u4e8c\u8fdb\u5236\u6bd4\u7279\u5199\u5165 pkgBuf\n        pktBuf.Write(buf[:bufLen])\n        for {\n            if pktBuf.Len() <= 0 {\n                break\n            }\n            // \u901a\u8fc7 s.reader \u5c06\u6536\u5230\u7684\u62a5\u6587\u89e3\u7801\u6210 RPC \u6d88\u606f\n            pkg, pkgLen, err = s.reader.Read(s, pktBuf.Bytes())\n            // \u7701\u7565\u90e8\u5206\u4ee3\u7801\n\n      s.UpdateActive()\n            // \u5c06\u6536\u5230\u7684\u6d88\u606f\u653e\u5165 TaskQueue \u4f9b RPC \u6d88\u8d39\u7aef\u6d88\u8d39\n            s.addTask(pkg)\n            pktBuf.Next(pkgLen)\n            // continue to handle case 5\n        }\n        if exit {\n            break\n        }\n    }\n\n    return perrors.WithStack(err)\n}\n")),(0,o.kt)("p",null,"\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u903b\u8f91\u6211\u4eec\u5206\u6790\u51fa\uff0cRPC \u6d88\u8d39\u7aef\u9700\u8981\u5c06\u4ece TCP \u8fde\u63a5\u6536\u5230\u7684\u4e8c\u8fdb\u5236\u6bd4\u7279\u62a5\u6587\u89e3\u7801\u6210 RPC \u80fd\u6d88\u8d39\u7684\u6d88\u606f\uff0c\u8fd9\u4e2a\u5de5\u4f5c\u7531 s.reader \u5b9e\u73b0\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u6784\u5efa RPC \u901a\u4fe1\u5c42\u4e5f\u9700\u8981\u5b9e\u73b0 s.reader \u5bf9\u5e94\u7684 Reader \u63a5\u53e3\u3002"),(0,o.kt)("h3",{id:"3-\u5e95\u5c42\u5904\u7406\u7f51\u7edc\u62a5\u6587\u7684\u903b\u8f91\u5982\u4f55\u4e0e\u4e1a\u52a1\u903b\u8f91\u89e3\u8026"},"3. \u5e95\u5c42\u5904\u7406\u7f51\u7edc\u62a5\u6587\u7684\u903b\u8f91\u5982\u4f55\u4e0e\u4e1a\u52a1\u903b\u8f91\u89e3\u8026"),(0,o.kt)("p",null,"\u6211\u4eec\u90fd\u77e5\u9053\uff0cnetty \u901a\u8fc7 boss \u7ebf\u7a0b\u548c worker \u7ebf\u7a0b\u5b9e\u73b0\u4e86\u5e95\u5c42\u7f51\u7edc\u903b\u8f91\u548c\u4e1a\u52a1\u903b\u8f91\u7684\u89e3\u8026\u3002\u90a3\u4e48\uff0cgetty \u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462\uff1f"),(0,o.kt)("p",null,"\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"handlePackage()")," \u65b9\u6cd5\u6700\u540e\uff0c\u6211\u4eec\u770b\u5230\uff0c\u6536\u5230\u7684\u6d88\u606f\u88ab\u653e\u5165\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"s.addTask(pkg)")," \u8fd9\u4e2a\u65b9\u6cd5\uff0c\u63a5\u7740\u5f80\u4e0b\u5206\u6790\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (s *session) addTask(pkg interface{}) {\n    f := func() {\n        s.listener.OnMessage(s, pkg)\n        s.incReadPkgNum()\n    }\n    if taskPool := s.EndPoint().GetTaskPool(); taskPool != nil {\n        taskPool.AddTaskAlways(f)\n        return\n    }\n    f()\n}\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"pkg")," \u53c2\u6570\u4f20\u9012\u5230\u4e86\u4e00\u4e2a\u533f\u540d\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u6700\u7ec8\u653e\u5165\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"taskPool"),"\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5f88\u5173\u952e\uff0c\u5728\u6211\u540e\u6765\u5199 seata-golang \u4ee3\u7801\u7684\u65f6\u5019\uff0c\u5c31\u9047\u5230\u4e86\u4e00\u4e2a\u5751\uff0c\u8fd9\u4e2a\u5751\u540e\u9762\u5206\u6790\u3002"),(0,o.kt)("p",null,"\u63a5\u7740\u6211\u4eec\u770b\u4e00\u4e0b ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/dubbogo/gost/blob/master/sync/task_pool.go"},"taskPool")," \u7684\u5b9a\u4e49\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"// NewTaskPoolSimple build a simple task pool\nfunc NewTaskPoolSimple(size int) GenericTaskPool {\n    if size < 1 {\n        size = runtime.NumCPU() * 100\n    }\n    return &taskPoolSimple{\n        work: make(chan task),\n        sem:  make(chan struct{}, size),\n        done: make(chan struct{}),\n    }\n}\n")),(0,o.kt)("p",null,"\u6784\u5efa\u4e86\u4e00\u4e2a\u7f13\u51b2\u5927\u5c0f\u4e3a size \uff08\u9ed8\u8ba4\u4e3a \xa0",(0,o.kt)("inlineCode",{parentName:"p"},"runtime.NumCPU() * 100"),"\uff09 \u7684 channel ",(0,o.kt)("inlineCode",{parentName:"p"},"sem"),"\u3002\u518d\u770b\u65b9\u6cd5 ",(0,o.kt)("inlineCode",{parentName:"p"},"AddTaskAlways(t task)"),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (p *taskPoolSimple) AddTaskAlways(t task) {\n    select {\n    case <-p.done:\n        return\n    default:\n    }\n\n    select {\n    case p.work <- t:\n        return\n    default:\n    }\n    select {\n    case p.work <- t:\n    case p.sem <- struct{}{}:\n        p.wg.Add(1)\n        go p.worker(t)\n    default:\n        goSafely(t)\n    }\n}\n")),(0,o.kt)("p",null,"\u52a0\u5165\u7684\u4efb\u52a1\uff0c\u4f1a\u5148\u7531 len(p.sem) \u4e2a goroutine \u53bb\u6d88\u8d39\uff0c\u5982\u679c\u6ca1\u6709 goroutine \u7a7a\u95f2\uff0c\u5219\u4f1a\u542f\u52a8\u4e00\u4e2a\u4e34\u65f6\u7684 goroutine \u53bb\u8fd0\u884c t()\u3002\u76f8\u5f53\u4e8e\u6709 \xa0len(p.sem) \u4e2a goroutine \u7ec4\u6210\u4e86 goroutine pool\uff0cpool \u4e2d\u7684 goroutine \u53bb\u5904\u7406\u4e1a\u52a1\u903b\u8f91\uff0c\u800c\u4e0d\u662f\u7531\u5904\u7406\u7f51\u7edc\u62a5\u6587\u7684 goroutine \u53bb\u8fd0\u884c\u4e1a\u52a1\u903b\u8f91\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u89e3\u8026\u3002\u5199 seata-golang \u65f6\u9047\u5230\u7684\u4e00\u4e2a\u5751\uff0c\u5c31\u662f\u5fd8\u8bb0\u8bbe\u7f6e taskPool \u9020\u6210\u4e86\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u548c\u5904\u7406\u5e95\u5c42\u7f51\u7edc\u62a5\u6587\u903b\u8f91\u7684 goroutine \u662f\u540c\u4e00\u4e2a\uff0c\u6211\u5728\u4e1a\u52a1\u903b\u8f91\u4e2d\u963b\u585e\u7b49\u5f85\u4e00\u4e2a\u4efb\u52a1\u5b8c\u6210\u65f6\uff0c\u963b\u585e\u4e86\u6574\u4e2a goroutine\uff0c\u4f7f\u5f97\u963b\u585e\u671f\u95f4\u6536\u4e0d\u5230\u4efb\u4f55\u62a5\u6587\u3002"),(0,o.kt)("h3",{id:"4-\u5177\u4f53\u5b9e\u73b0"},"4. \u5177\u4f53\u5b9e\u73b0"),(0,o.kt)("p",null,"\u4e0b\u9762\u7684\u4ee3\u7801\u89c1 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/dubbo-getty/blob/master/getty.go"},"getty.go"),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"// Reader is used to unmarshal a complete pkg from buffer\ntype Reader interface {\n    Read(Session, []byte) (interface{}, int, error)\n}\n\n// Writer is used to marshal pkg and write to session\ntype Writer interface {\n    // if @Session is udpGettySession, the second parameter is UDPContext.\n    Write(Session, interface{}) ([]byte, error)\n}\n\n// ReadWriter interface use for handle application packages\ntype ReadWriter interface {\n    Reader\n    Writer\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"// EventListener is used to process pkg that received from remote session\ntype EventListener interface {\n    // invoked when session opened\n    // If the return error is not nil, @Session will be closed.\n    OnOpen(Session) error\n\n    // invoked when session closed.\n    OnClose(Session)\n\n    // invoked when got error.\n    OnError(Session, error)\n\n    // invoked periodically, its period can be set by (Session)SetCronPeriod\n    OnCron(Session)\n\n    // invoked when getty received a package. Pls attention that do not handle long time\n    // logic processing in this func. You'd better set the package's maximum length.\n    // If the message's length is greater than it, u should should return err in\n    // Reader{Read} and getty will close this connection soon.\n    //\n    // If ur logic processing in this func will take a long time, u should start a goroutine\n    // pool(like working thread pool in cpp) to handle the processing asynchronously. Or u\n    // can do the logic processing in other asynchronous way.\n    // !!!In short, ur OnMessage callback func should return asap.\n    //\n    // If this is a udp event listener, the second parameter type is UDPContext.\n    OnMessage(Session, interface{})\n}\n")),(0,o.kt)("p",null,"\u901a\u8fc7\u5bf9\u6574\u4e2a getty \u4ee3\u7801\u7684\u5206\u6790\uff0c\u6211\u4eec\u53ea\u8981\u5b9e\u73b0 \xa0",(0,o.kt)("inlineCode",{parentName:"p"},"ReadWriter")," \u6765\u5bf9 RPC \xa0\u6d88\u606f\u7f16\u89e3\u7801\uff0c\u518d\u5b9e\u73b0 ",(0,o.kt)("inlineCode",{parentName:"p"},"EventListener")," \u6765\u5904\u7406 RPC \u6d88\u606f\u7684\u5bf9\u5e94\u7684\u5177\u4f53\u903b\u8f91\uff0c\u5c06 ",(0,o.kt)("inlineCode",{parentName:"p"},"ReadWriter")," \u5b9e\u73b0\u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"EventLister")," \u5b9e\u73b0\u6ce8\u5165\u5230 RPC \u7684 Client \u548c Server \u7aef\uff0c\u5219\u53ef\u5b9e\u73b0 RPC \u901a\u4fe1\u3002"),(0,o.kt)("h4",{id:"41-\u7f16\u89e3\u7801\u534f\u8bae\u5b9e\u73b0"},"4.1 \u7f16\u89e3\u7801\u534f\u8bae\u5b9e\u73b0"),(0,o.kt)("p",null,"\u4e0b\u9762\u662f seata \u534f\u8bae\u7684\u5b9a\u4e49\uff1a\n",(0,o.kt)("img",{parentName:"p",src:"https://cdn.nlark.com/yuque/0/2020/png/737378/1607180799872-5f96afb6-680d-4e69-8c95-b8fd1ac4c3a7.png#align=left&display=inline&height=209&margin=%5Bobject%20Object%5D&name=image-20201205214556457.png&originHeight=209&originWidth=690&size=18407&status=done&style=none&width=690",alt:"image-20201205214556457.png"})),(0,o.kt)("p",null,"\u5728 ReadWriter \u63a5\u53e3\u7684\u5b9e\u73b0 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/opentrx/seata-golang"},(0,o.kt)("inlineCode",{parentName:"a"},"RpcPackageHandler"))," \u4e2d\uff0c\u8c03\u7528 Codec \u65b9\u6cd5\u5bf9\u6d88\u606f\u4f53\u6309\u7167\u4e0a\u9762\u7684\u683c\u5f0f\u7f16\u89e3\u7801\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// \u6d88\u606f\u7f16\u7801\u4e3a\u4e8c\u8fdb\u5236\u6bd4\u7279\nfunc MessageEncoder(codecType byte, in interface{}) []byte {\n    switch codecType {\n    case SEATA:\n        return SeataEncoder(in)\n    default:\n        log.Errorf("not support codecType, %s", codecType)\n        return nil\n    }\n}\n\n// \u4e8c\u8fdb\u5236\u6bd4\u7279\u89e3\u7801\u4e3a\u6d88\u606f\u4f53\nfunc MessageDecoder(codecType byte, in []byte) (interface{}, int) {\n    switch codecType {\n    case SEATA:\n        return SeataDecoder(in)\n    default:\n        log.Errorf("not support codecType, %s", codecType)\n        return nil, 0\n    }\n}\n')),(0,o.kt)("h4",{id:"42-client-\u7aef\u5b9e\u73b0"},"4.2 Client \u7aef\u5b9e\u73b0"),(0,o.kt)("p",null,"\u518d\u6765\u770b client \u7aef ",(0,o.kt)("inlineCode",{parentName:"p"},"EventListener")," \u7684\u5b9e\u73b0 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/opentrx/seata-golang/blob/dev/pkg/client/rpc_remoting_client.go"},(0,o.kt)("inlineCode",{parentName:"a"},"RpcRemotingClient")),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func (client *RpcRemoteClient) OnOpen(session getty.Session) error {\n    go func() \n        request := protocal.RegisterTMRequest{AbstractIdentifyRequest: protocal.AbstractIdentifyRequest{\n            ApplicationId:           client.conf.ApplicationId,\n            TransactionServiceGroup: client.conf.TransactionServiceGroup,\n        }}\n    // \u5efa\u7acb\u8fde\u63a5\u540e\u5411 Transaction Coordinator \u53d1\u8d77\u6ce8\u518c TransactionManager \u7684\u8bf7\u6c42\n        _, err := client.sendAsyncRequestWithResponse(session, request, RPC_REQUEST_TIMEOUT)\n        if err == nil {\n      // \u5c06\u4e0e Transaction Coordinator \u5efa\u7acb\u7684\u8fde\u63a5\u4fdd\u5b58\u5728\u8fde\u63a5\u6c60\u4f9b\u540e\u7eed\u4f7f\u7528\n            clientSessionManager.RegisterGettySession(session)\n            client.GettySessionOnOpenChannel <- session.RemoteAddr()\n        }\n    }()\n\n    return nil\n}\n\n// OnError ...\nfunc (client *RpcRemoteClient) OnError(session getty.Session, err error) {\n    clientSessionManager.ReleaseGettySession(session)\n}\n\n// OnClose ...\nfunc (client *RpcRemoteClient) OnClose(session getty.Session) {\n    clientSessionManager.ReleaseGettySession(session)\n}\n\n// OnMessage ...\nfunc (client *RpcRemoteClient) OnMessage(session getty.Session, pkg interface{}) {\n    log.Info("received message:{%v}", pkg)\n    rpcMessage, ok := pkg.(protocal.RpcMessage)\n    if ok {\n        heartBeat, isHeartBeat := rpcMessage.Body.(protocal.HeartBeatMessage)\n        if isHeartBeat && heartBeat == protocal.HeartBeatMessagePong {\n            log.Debugf("received PONG from %s", session.RemoteAddr())\n        }\n    }\n\n    if rpcMessage.MessageType == protocal.MSGTYPE_RESQUEST ||\n        rpcMessage.MessageType == protocal.MSGTYPE_RESQUEST_ONEWAY {\n        log.Debugf("msgId:%s, body:%v", rpcMessage.Id, rpcMessage.Body)\n      \n        // \u5904\u7406\u4e8b\u52a1\u6d88\u606f\uff0c\u63d0\u4ea4 or \u56de\u6eda\n        client.onMessage(rpcMessage, session.RemoteAddr())\n    } else {\n        resp, loaded := client.futures.Load(rpcMessage.Id)\n        if loaded {\n            response := resp.(*getty2.MessageFuture)\n            response.Response = rpcMessage.Body\n            response.Done <- true\n            client.futures.Delete(rpcMessage.Id)\n        }\n    }\n}\n\n// OnCron ...\nfunc (client *RpcRemoteClient) OnCron(session getty.Session) {\n  // \u53d1\u9001\u5fc3\u8df3\n    client.defaultSendRequest(session, protocal.HeartBeatMessagePing)\n}\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"clientSessionManager.RegisterGettySession(session)")," \u7684\u903b\u8f91 4.4 \u5c0f\u8282\u5206\u6790\u3002"),(0,o.kt)("h4",{id:"43-server-\u7aef-transaction-coordinator-\u5b9e\u73b0"},"4.3 Server \u7aef Transaction Coordinator \u5b9e\u73b0"),(0,o.kt)("p",null,"\u4ee3\u7801\u89c1 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/opentrx/seata-golang/blob/dev/tc/server/default_coordinator_event_listener.go"},(0,o.kt)("inlineCode",{parentName:"a"},"DefaultCoordinator")),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func (coordinator *DefaultCoordinator) OnOpen(session getty.Session) error {\n    log.Infof("got getty_session:%s", session.Stat())\n    return nil\n}\n\nfunc (coordinator *DefaultCoordinator) OnError(session getty.Session, err error) {\n    // \u91ca\u653e TCP \u8fde\u63a5\n  SessionManager.ReleaseGettySession(session)\n    session.Close()\n    log.Errorf("getty_session{%s} got error{%v}, will be closed.", session.Stat(), err)\n}\n\nfunc (coordinator *DefaultCoordinator) OnClose(session getty.Session) {\n    log.Info("getty_session{%s} is closing......", session.Stat())\n}\n\nfunc (coordinator *DefaultCoordinator) OnMessage(session getty.Session, pkg interface{}) {\n    log.Debugf("received message:{%v}", pkg)\n    rpcMessage, ok := pkg.(protocal.RpcMessage)\n    if ok {\n        _, isRegTM := rpcMessage.Body.(protocal.RegisterTMRequest)\n        if isRegTM {\n      // \u5c06 TransactionManager \u4fe1\u606f\u548c TCP \u8fde\u63a5\u5efa\u7acb\u6620\u5c04\u5173\u7cfb\n            coordinator.OnRegTmMessage(rpcMessage, session)\n            return\n        }\n\n        heartBeat, isHeartBeat := rpcMessage.Body.(protocal.HeartBeatMessage)\n        if isHeartBeat && heartBeat == protocal.HeartBeatMessagePing {\n            coordinator.OnCheckMessage(rpcMessage, session)\n            return\n        }\n\n        if rpcMessage.MessageType == protocal.MSGTYPE_RESQUEST ||\n            rpcMessage.MessageType == protocal.MSGTYPE_RESQUEST_ONEWAY {\n            log.Debugf("msgId:%s, body:%v", rpcMessage.Id, rpcMessage.Body)\n            _, isRegRM := rpcMessage.Body.(protocal.RegisterRMRequest)\n            if isRegRM {\n        // \u5c06 ResourceManager \u4fe1\u606f\u548c TCP \u8fde\u63a5\u5efa\u7acb\u6620\u5c04\u5173\u7cfb\n                coordinator.OnRegRmMessage(rpcMessage, session)\n            } else {\n                if SessionManager.IsRegistered(session) {\n                    defer func() {\n                        if err := recover(); err != nil {\n                            log.Errorf("Catch Exception while do RPC, request: %v,err: %w", rpcMessage, err)\n                        }\n                    }()\n          // \u5904\u7406\u4e8b\u52a1\u6d88\u606f\uff0c\u5168\u5c40\u4e8b\u52a1\u6ce8\u518c\u3001\u5206\u652f\u4e8b\u52a1\u6ce8\u518c\u3001\u5206\u652f\u4e8b\u52a1\u63d0\u4ea4\u3001\u5168\u5c40\u4e8b\u52a1\u56de\u6eda\u7b49\n                    coordinator.OnTrxMessage(rpcMessage, session)\n                } else {\n                    session.Close()\n                    log.Infof("close a unhandled connection! [%v]", session)\n                }\n            }\n        } else {\n            resp, loaded := coordinator.futures.Load(rpcMessage.Id)\n            if loaded {\n                response := resp.(*getty2.MessageFuture)\n                response.Response = rpcMessage.Body\n                response.Done <- true\n                coordinator.futures.Delete(rpcMessage.Id)\n            }\n        }\n    }\n}\n\nfunc (coordinator *DefaultCoordinator) OnCron(session getty.Session) {\n\n}\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"coordinator.OnRegTmMessage(rpcMessage, session)")," \u6ce8\u518c Transaction Manager\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"coordinator.OnRegRmMessage(rpcMessage, session)")," \u6ce8\u518c Resource Manager\u3002\u5177\u4f53\u903b\u8f91\u5206\u6790\u89c1 4.4 \u5c0f\u8282\u3002\n\u6d88\u606f\u8fdb\u5165 ",(0,o.kt)("inlineCode",{parentName:"p"},"coordinator.OnTrxMessage(rpcMessage, session)")," \u65b9\u6cd5\uff0c\u5c06\u6309\u7167\u6d88\u606f\u7684\u7c7b\u578b\u7801\u8def\u7531\u5230\u5177\u4f53\u7684\u903b\u8f91\u5f53\u4e2d\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"    switch msg.GetTypeCode() {\n    case protocal.TypeGlobalBegin:\n        req := msg.(protocal.GlobalBeginRequest)\n        resp := coordinator.doGlobalBegin(req, ctx)\n        return resp\n    case protocal.TypeGlobalStatus:\n        req := msg.(protocal.GlobalStatusRequest)\n        resp := coordinator.doGlobalStatus(req, ctx)\n        return resp\n    case protocal.TypeGlobalReport:\n        req := msg.(protocal.GlobalReportRequest)\n        resp := coordinator.doGlobalReport(req, ctx)\n        return resp\n    case protocal.TypeGlobalCommit:\n        req := msg.(protocal.GlobalCommitRequest)\n        resp := coordinator.doGlobalCommit(req, ctx)\n        return resp\n    case protocal.TypeGlobalRollback:\n        req := msg.(protocal.GlobalRollbackRequest)\n        resp := coordinator.doGlobalRollback(req, ctx)\n        return resp\n    case protocal.TypeBranchRegister:\n        req := msg.(protocal.BranchRegisterRequest)\n        resp := coordinator.doBranchRegister(req, ctx)\n        return resp\n    case protocal.TypeBranchStatusReport:\n        req := msg.(protocal.BranchReportRequest)\n        resp := coordinator.doBranchReport(req, ctx)\n        return resp\n    default:\n        return nil\n    }\n")),(0,o.kt)("h4",{id:"44-session-manager-\u5206\u6790"},"4.4 session manager \u5206\u6790"),(0,o.kt)("p",null,"Client \u7aef\u540c Transaction Coordinator \u5efa\u7acb\u8fde\u63a5\u8d77\u8fde\u63a5\u540e\uff0c\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"clientSessionManager.RegisterGettySession(session)")," \u5c06\u8fde\u63a5\u4fdd\u5b58\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"serverSessions = sync.Map{}")," \u8fd9\u4e2a map \u4e2d\u3002map \u7684 key \u4e3a\u4ece session \u4e2d\u83b7\u53d6\u7684 RemoteAddress \u5373 Transaction Coordinator \u7684\u5730\u5740\uff0cvalue \u4e3a session\u3002\u8fd9\u6837\uff0cClient \u7aef\u5c31\u53ef\u4ee5\u901a\u8fc7 map \u4e2d\u7684\u4e00\u4e2a session \u6765\u5411 Transaction Coordinator \u6ce8\u518c Transaction Manager \u548c Resource Manager \u4e86\u3002\u5177\u4f53\u4ee3\u7801\u89c1 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/opentrx/seata-golang/blob/dev/pkg/client/getty_client_session_manager.go"},(0,o.kt)("inlineCode",{parentName:"a"},"getty_client_session_manager.go"),"\u3002"),"\nTransaction Manager \u548c Resource Manager \u6ce8\u518c\u5230 Transaction Coordinator \u540e\uff0c\u4e00\u4e2a\u8fde\u63a5\u65e2\u6709\u53ef\u80fd\u7528\u6765\u53d1\u9001 TM \u6d88\u606f\u4e5f\u6709\u53ef\u80fd\u7528\u6765\u53d1\u9001 RM \u6d88\u606f\u3002\u6211\u4eec\u901a\u8fc7 RpcContext \u6765\u6807\u8bc6\u4e00\u4e2a\u8fde\u63a5\u4fe1\u606f\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type RpcContext struct {\n    Version                 string\n    TransactionServiceGroup string\n    ClientRole              meta.TransactionRole\n    ApplicationId           string\n    ClientId                string\n    ResourceSets            *model.Set\n    Session                 getty.Session\n}\n")),(0,o.kt)("p",null,"\u5f53\u6536\u5230\u4e8b\u52a1\u6d88\u606f\u65f6\uff0c\u6211\u4eec\u9700\u8981\u6784\u9020\u8fd9\u6837\u4e00\u4e2a RpcContext \u4f9b\u540e\u7eed\u4e8b\u52a1\u5904\u7406\u903b\u8f91\u4f7f\u7528\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4f1a\u6784\u9020\u4e0b\u5217 map \u6765\u7f13\u5b58\u6620\u5c04\u5173\u7cfb\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"var (\n    // session -> transactionRole\n    // TM will register before RM, if a session is not the TM registered,\n    // it will be the RM registered\n    session_transactionroles = sync.Map{}\n\n    // session -> applicationId\n    identified_sessions = sync.Map{}\n\n    // applicationId -> ip -> port -> session\n    client_sessions = sync.Map{}\n\n    // applicationId -> resourceIds\n    client_resources = sync.Map{}\n)\n")),(0,o.kt)("p",null,"\u8fd9\u6837\uff0cTransaction Manager \u548c Resource Manager \u5206\u522b\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"coordinator.OnRegTmMessage(rpcMessage, session)")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"coordinator.OnRegRmMessage(rpcMessage, session)")," \u6ce8\u518c\u5230 Transaction Coordinator \u65f6\uff0c\u4f1a\u5728\u4e0a\u8ff0 client_sessions map \u4e2d\u7f13\u5b58 applicationId\u3001ip\u3001port \u4e0e session \u7684\u5173\u7cfb\uff0c\u5728 client_resources map \u4e2d\u7f13\u5b58 applicationId \u4e0e resourceIds\uff08\u4e00\u4e2a\u5e94\u7528\u53ef\u80fd\u5b58\u5728\u591a\u4e2a Resource Manager\uff09 \u7684\u5173\u7cfb\u3002\u5728\u9700\u8981\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u8ff0\u6620\u5c04\u5173\u7cfb\u6784\u9020\u4e00\u4e2a RpcContext\u3002\u8fd9\u90e8\u5206\u7684\u5b9e\u73b0\u548c java \u7248 seata \u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\u3002\u5177\u4f53\u4ee3\u7801\u89c1 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/opentrx/seata-golang/blob/dev/tc/server/getty_session_manager.go"},(0,o.kt)("inlineCode",{parentName:"a"},"getty_session_manager.go"),"\u3002"),"\n\u81f3\u6b64\uff0c\u6211\u4eec\u5c31\u5206\u6790\u5b8c\u4e86 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/opentrx/seata-golang"},"seata-golang")," \u6574\u4e2a RPC \u901a\u4fe1\u6a21\u578b\u7684\u673a\u5236\u3002"),(0,o.kt)("h2",{id:"\u4e09seata-golang-\u7684\u672a\u6765"},"\u4e09\u3001seata-golang \u7684\u672a\u6765"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/opentrx/seata-golang"},"seata-golang")," \xa0\u4ece\u4eca\u5e74 4 \u6708\u4efd\u5f00\u59cb\u5f00\u53d1\uff0c\u5230 8 \u6708\u4efd\u57fa\u672c\u5b9e\u73b0\u548c java \u7248 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/seata/seata"},"seata 1.2")," \u534f\u8bae\u7684\u4e92\u901a\uff0c\u5bf9 mysql \u6570\u636e\u5e93\u5b9e\u73b0\u4e86 AT \u6a21\u5f0f\uff08\u81ea\u52a8\u534f\u8c03\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u63d0\u4ea4\u56de\u6eda\uff09\uff0c\u5b9e\u73b0\u4e86 TCC \u6a21\u5f0f\uff0cTC \u7aef\u4f7f\u7528 mysql \u5b58\u50a8\u6570\u636e\uff0c\u4f7f TC \u53d8\u6210\u4e00\u4e2a\u65e0\u72b6\u6001\u5e94\u7528\u652f\u6301\u9ad8\u53ef\u7528\u90e8\u7f72\u3002\u4e0b\u56fe\u5c55\u793a\u4e86 AT \u6a21\u5f0f\u7684\u539f\u7406\uff1a",(0,o.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i3/O1CN01alqsQS1G2oQecFYIs_!!6000000000565-2-tps-1025-573.png",alt:"image20201205-232516.png"})),(0,o.kt)("p",null,"\u540e\u7eed\uff0c\u8fd8\u6709\u8bb8\u591a\u5de5\u4f5c\u53ef\u4ee5\u505a\uff0c\u6bd4\u5982\uff1a\u5bf9\u6ce8\u518c\u4e2d\u5fc3\u7684\u652f\u6301\u3001\u5bf9\u914d\u7f6e\u4e2d\u5fc3\u7684\u652f\u6301\u3001\u548c java \u7248 seata 1.4 \u7684\u534f\u8bae\u4e92\u901a\u3001\u5176\u4ed6\u6570\u636e\u5e93\u7684\u652f\u6301\u3001raft transaction coordinator \u7684\u5b9e\u73b0\u7b49\uff0c\u5e0c\u671b\u5bf9\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u611f\u5174\u8da3\u7684\u5f00\u53d1\u8005\u53ef\u4ee5\u52a0\u5165\u8fdb\u6765\u4e00\u8d77\u6765\u6253\u9020\u4e00\u4e2a\u5b8c\u5584\u7684 golang \u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u6846\u67b6\u3002"),(0,o.kt)("p",null,"\u5982\u679c\u4f60\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u6b22\u8fce\u9489\u9489\u626b\u7801\u52a0\u5165\u4ea4\u6d41\u7fa4\u3010\u9489\u9489\u7fa4\u53f7 33069364\u3011\uff1a"),(0,o.kt)("img",{src:"https://img.alicdn.com/imgextra/i2/O1CN01IjOVG425erjuzqcOi_!!6000000007552-2-tps-600-621.png",width:"200px"}),(0,o.kt)("h3",{id:"\u4f5c\u8005\u7b80\u4ecb"},(0,o.kt)("strong",{parentName:"h3"},"\u4f5c\u8005\u7b80\u4ecb")),(0,o.kt)("p",null,"\u5218\u6653\u654f (GitHubID dk-lockdown)\uff0c\u76ee\u524d\u5c31\u804c\u4e8e h3c \u6210\u90fd\u5206\u516c\u53f8\uff0c\u64c5\u957f\u4f7f\u7528 Java/Go \u8bed\u8a00\uff0c\u5728\u4e91\u539f\u751f\u548c\u5fae\u670d\u52a1\u76f8\u5173\u6280\u672f\u65b9\u5411\u5747\u6709\u6d89\u730e\uff0c\u76ee\u524d\u4e13\u653b\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002\n\u4e8e\u96e8(github @AlexStocks)\uff0cdubbo-go \u9879\u76ee\u548c\u793e\u533a\u8d1f\u8d23\u4eba\uff0c\u4e00\u4e2a\u6709\u5341\u591a\u5e74\u670d\u52a1\u7aef\u57fa\u7840\u67b6\u6784\u7814\u53d1\u4e00\u7ebf\u5de5\u4f5c\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\uff0c\u9646\u7eed\u53c2\u4e0e\u6539\u8fdb\u8fc7 Muduo/Pika/Dubbo/Sentinel-go \u7b49\u77e5\u540d\u9879\u76ee\uff0c\u76ee\u524d\u5728\u8682\u8681\u91d1\u670d\u53ef\u4fe1\u539f\u751f\u90e8\u4ece\u4e8b\u5bb9\u5668\u7f16\u6392\u548c service mesh \u5de5\u4f5c\u3002"),(0,o.kt)("h4",{id:"\u53c2\u8003\u8d44\u6599"},"\u53c2\u8003\u8d44\u6599"),(0,o.kt)("p",null,"seata \u5b98\u65b9\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://seata.io"},"https://seata.io")),(0,o.kt)("p",null,"java \u7248 seata\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://github.com/seata/seata"},"https://github.com/seata/seata")),(0,o.kt)("p",null,"seata-golang \u9879\u76ee\u5730\u5740\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://github.com/transaction-wg/seata-golang"},"https://github.com/opentrx/seata-golang")),(0,o.kt)("p",null,"seata-golang go \u591c\u8bfb b\u7ad9\u5206\u4eab\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://www.bilibili.com/video/BV1oz411e72T"},"https://www.bilibili.com/video/BV1oz411e72T")))}d.isMDXComponent=!0}}]);