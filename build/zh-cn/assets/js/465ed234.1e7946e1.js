"use strict";(self.webpackChunkseata_website=self.webpackChunkseata_website||[]).push([[5299],{87407:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"/seata-community-meetup-hangzhou-ready","metadata":{"permalink":"/zh-cn/blog/seata-community-meetup-hangzhou-ready","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-community-meetup-hangzhou-ready.md","title":"Seata Community Meetup\xb7\u676d\u5dde\u7ad9","description":"Seata Community Meetup\xb7\u676d\u5dde\u7ad9,\u5c06\u4e8e12\u670821\u53f7\u5728\u676d\u5dde\u5e02\u68a6\u60f3\u5c0f\u9547\u6d59\u6c5f\u9752\u5e74\u4f17\u521b\u7a7a\u95f4\u6b63\u5f0f\u53ec\u5f00","date":"2023-06-30T08:51:29.000Z","formattedDate":"2023\u5e746\u670830\u65e5","tags":[],"readingTime":0.64,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Seata Community Meetup\xb7\u676d\u5dde\u7ad9","keywords":["Seata","\u676d\u5dde","meetup"],"description":"Seata Community Meetup\xb7\u676d\u5dde\u7ad9,\u5c06\u4e8e12\u670821\u53f7\u5728\u676d\u5dde\u5e02\u68a6\u60f3\u5c0f\u9547\u6d59\u6c5f\u9752\u5e74\u4f17\u521b\u7a7a\u95f4\u6b63\u5f0f\u53ec\u5f00"},"nextItem":{"title":"Seata Community Meetup\xb7\u676d\u5dde\u7ad9","permalink":"/zh-cn/blog/seata-meetup-hangzhou"}},"content":"### \u6d3b\u52a8\u4ecb\u7ecd\\n\\n### \u4eae\u70b9\u89e3\u8bfb\\n\\n- Seata \u5f00\u6e90\u9879\u76ee\u53d1\u8d77\u4eba\u5e26\u6765\u300aSeata \u8fc7\u53bb\u3001\u73b0\u5728\u548c\u672a\u6765\u300b\u4ee5\u53ca Seata 1.0 \u7684\u65b0\u7279\u6027\u3002\\n- Seata \u6838\u5fc3\u8d21\u732e\u8005\u8be6\u89e3 Seata AT, TCC, Saga \u6a21\u5f0f\u3002\\n- Seata \u843d\u5730\u4e92\u8054\u7f51\u533b\u7597\uff0c\u6ef4\u6ef4\u51fa\u884c\u5b9e\u8df5\u5256\u6790\u3002\\n\\n### \u5982\u60a8\u4e0d\u80fd\u524d\u6765\u53c2\u4f1a\\n\\n- [\u9884\u7ea6\u76f4\u64ad\uff08\u5f00\u53d1\u8005\u793e\u533a\uff09](https://developer.aliyun.com/live/1760)\\n- [\u52a0\u5165 Seata \u5343\u4eba\u9489\u9489\u7fa4](http://w2wz.com/h2nb)\\n\\n### \u73b0\u573a\u798f\u5229\\n\\n- \u8bb2\u5e08 PPT \u6253\u5305\u4e0b\u8f7d\\n- \u7cbe\u7f8e\u8336\u6b47,\u963f\u91cc\u516c\u4ed4,\u5929\u732b\u7cbe\u7075\u7b49\u597d\u793c\u7b49\u4f60\u6765\u62ff\\n\\n### \u8bae\u7a0b\\n\\n![](https://img.alicdn.com/tfs/TB1K5nYwVP7gK0jSZFjXXc5aXXa-3175-14507.png)"},{"id":"/seata-meetup-hangzhou","metadata":{"permalink":"/zh-cn/blog/seata-meetup-hangzhou","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-meetup-hangzhou.md","title":"Seata Community Meetup\xb7\u676d\u5dde\u7ad9","description":"Seata Community Meetup\xb7\u676d\u5dde\u7ad9,\u4e8e12\u670821\u53f7\u5728\u676d\u5dde\u5e02\u68a6\u60f3\u5c0f\u9547\u6d59\u6c5f\u9752\u5e74\u4f17\u521b\u7a7a\u95f4\u5b8c\u7f8e\u4e3e\u529e","date":"2023-06-30T08:51:29.000Z","formattedDate":"2023\u5e746\u670830\u65e5","tags":[],"readingTime":1.06,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Seata Community Meetup\xb7\u676d\u5dde\u7ad9","keywords":["Seata","\u676d\u5dde","meetup"],"description":"Seata Community Meetup\xb7\u676d\u5dde\u7ad9,\u4e8e12\u670821\u53f7\u5728\u676d\u5dde\u5e02\u68a6\u60f3\u5c0f\u9547\u6d59\u6c5f\u9752\u5e74\u4f17\u521b\u7a7a\u95f4\u5b8c\u7f8e\u4e3e\u529e"},"prevItem":{"title":"Seata Community Meetup\xb7\u676d\u5dde\u7ad9","permalink":"/zh-cn/blog/seata-community-meetup-hangzhou-ready"},"nextItem":{"title":"Seata\u7684\u53ef\u89c2\u6d4b\u5b9e\u8df5","permalink":"/zh-cn/blog/seata-observable-practice"}},"content":"![](https://img.alicdn.com/tfs/TB1qH2YwVP7gK0jSZFjXXc5aXXa-2002-901.jpg)\\n\\n### \u6d3b\u52a8\u4ecb\u7ecd\\n\\n### \u4eae\u70b9\u89e3\u8bfb\\n\\n- Seata \u5f00\u6e90\u9879\u76ee\u53d1\u8d77\u4eba\u5e26\u6765\u300aSeata \u8fc7\u53bb\u3001\u73b0\u5728\u548c\u672a\u6765\u300b\u4ee5\u53ca Seata 1.0 \u7684\u65b0\u7279\u6027\u3002\\n- Seata \u6838\u5fc3\u8d21\u732e\u8005\u8be6\u89e3 Seata AT, TCC, Saga \u6a21\u5f0f\u3002\\n- Seata \u843d\u5730\u4e92\u8054\u7f51\u533b\u7597\uff0c\u6ef4\u6ef4\u51fa\u884c\u5b9e\u8df5\u5256\u6790\u3002\\n\\n- [\u56de\u653e\u798f\u5229\uff08\u5f00\u53d1\u8005\u793e\u533a\uff09](https://developer.aliyun.com/live/1760)\\n- [\u52a0\u5165 Seata \u5343\u4eba\u9489\u9489\u7fa4](http://w2wz.com/h2nb)\\n\\n### \u5206\u4eab\u5609\u5bbe\\n\\n- \u5b63\u654f(\u6e05\u94ed) \u300aSeata \u7684\u8fc7\u53bb\u3001\u73b0\u5728\u548c\u672a\u6765\u300b [slides](https://github.com/a364176773/awesome-seata/blob/master/slides/meetup/201912%40hangzhou/%E5%AD%A3%E6%95%8F%EF%BC%88%E6%B8%85%E9%93%AD%EF%BC%89%E3%80%8ASeata%20%E7%9A%84%E8%BF%87%E5%8E%BB%E3%80%81%E7%8E%B0%E5%9C%A8%E5%92%8C%E6%9C%AA%E6%9D%A5%E3%80%8B.pdf)\\n\\n  ![](https://img.alicdn.com/tfs/TB1BALWw4z1gK0jSZSgXXavwpXa-6720-4480.jpg)\\n\\n- \u5434\u6c5f\u5777\u300a\u6211\u4e0eSEATA\u7684\u5f00\u6e90\u4e4b\u8def\u4ee5\u53caSEATA\u5728\u4e92\u8054\u7f51\u533b\u7597\u7cfb\u7edf\u4e2d\u7684\u5e94\u7528\u300b [slides](https://github.com/seata/awesome-seata/blob/master/slides/meetup/201912%40hangzhou/%E5%AD%A3%E6%95%8F%EF%BC%88%E6%B8%85%E9%93%AD%EF%BC%89%E3%80%8ASeata%20%E7%9A%84%E8%BF%87%E5%8E%BB%E3%80%81%E7%8E%B0%E5%9C%A8%E5%92%8C%E6%9C%AA%E6%9D%A5%E3%80%8B.pdf)\\n\\n  ![1577282651](https://img.alicdn.com/tfs/TB1Xzz1w4v1gK0jSZFFXXb0sXXa-6720-4480.jpg)\\n\\n- \u7533\u6d77\u5f3a\uff08\u714a\u6a8d)\u300a\u5e26\u4f60\u8bfb\u900f Seata AT \u6a21\u5f0f\u7684\u7cbe\u9ad3\u300b [slides](https://github.com/seata/awesome-seata/tree/master/slides/meetup/201912%40hangzhou)\\n\\n  ![1577282652](https://img.alicdn.com/tfs/TB1UK22w7T2gK0jSZPcXXcKkpXa-6720-4480.jpg)\\n\\n- \u5f20\u68ee \u300a\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u4e4bTCC\u6a21\u5f0f\u8be6\u89e3\u300b\\n\\n  ![1577282653](https://img.alicdn.com/tfs/TB1fCPZw.T1gK0jSZFhXXaAtVXa-6720-4480.jpg)\\n\\n- \u9648\u9f99\uff08\u5c79\u8fdc\uff09\u300aSeata \u957f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848 Saga \u6a21\u5f0f\u300b\\n\\n  ![1577282654](https://img.alicdn.com/tfs/TB1zLv3wYj1gK0jSZFuXXcrHpXa-6720-4480.jpg)\\n\\n- \u9648\u9e4f\u5fd7\u300aSeata%20\u5728\u6ef4\u6ef4\u4e24\u8f6e\u8f66\u4e1a\u52a1\u7684\u5b9e\u8df5\u300b [slides](https://github.com/seata/awesome-seata/blob/master/slides/meetup/201912%40hangzhou/%E9%99%88%E9%B9%8F%E5%BF%97%E3%80%8ASeata%20%E5%9C%A8%E6%BB%B4%E6%BB%B4%E4%B8%A4%E8%BD%AE%E8%BD%A6%E4%B8%9A%E5%8A%A1%E7%9A%84%E5%AE%9E%E8%B7%B5%E3%80%8B.pdf)\\n\\n  ![1577282655](https://img.alicdn.com/tfs/TB1phvYw4n1gK0jSZKPXXXvUXXa-6720-4480.jpg)\\n\\n### \u7279\u522b\u5609\u5956\\n\\n![](https://img.alicdn.com/tfs/TB1khDVw.z1gK0jSZLeXXb9kVXa-6720-4480.jpg)"},{"id":"/seata-observable-practice","metadata":{"permalink":"/zh-cn/blog/seata-observable-practice","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-observable-practice.md","title":"Seata\u7684\u53ef\u89c2\u6d4b\u5b9e\u8df5","description":"\u672c\u6587\u4ecb\u7ecdSeata\u5728\u53ef\u89c2\u6d4b\u9886\u57df\u7684\u63a2\u7d22\u548c\u5b9e\u8df5","date":"2023-06-25T00:00:00.000Z","formattedDate":"2023\u5e746\u670825\u65e5","tags":[],"readingTime":11.375,"hasTruncateMarker":false,"authors":[{"name":"\u5218\u620e-Seata"}],"frontMatter":{"title":"Seata\u7684\u53ef\u89c2\u6d4b\u5b9e\u8df5","keywords":["Seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001\u6570\u636e\u4e00\u81f4\u6027\u3001\u5fae\u670d\u52a1\u3001\u53ef\u89c2\u6d4b"],"description":"\u672c\u6587\u4ecb\u7ecdSeata\u5728\u53ef\u89c2\u6d4b\u9886\u57df\u7684\u63a2\u7d22\u548c\u5b9e\u8df5","author":"\u5218\u620e-Seata","date":"2023/06/25"},"prevItem":{"title":"Seata Community Meetup\xb7\u676d\u5dde\u7ad9","permalink":"/zh-cn/blog/seata-meetup-hangzhou"},"nextItem":{"title":"Seata\uff1a\u8fde\u63a5\u6570\u636e\u4e0e\u5e94\u7528","permalink":"/zh-cn/blog/seata-connect-data-and-application"}},"content":"## Seata\u7b80\u4ecb\\nSeata\u7684\u524d\u8eab\u662f\u963f\u91cc\u5df4\u5df4\u96c6\u56e2\u5185\u5927\u89c4\u6a21\u4f7f\u7528\u4fdd\u8bc1\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e00\u81f4\u6027\u7684\u4e2d\u95f4\u4ef6\uff0cSeata\u662f\u5176\u5f00\u6e90\u4ea7\u54c1\uff0c\u7531\u793e\u533a\u7ef4\u62a4\u3002\u5728\u4ecb\u7ecdSeata\u524d\uff0c\u5148\u4e0e\u5927\u5bb6\u8ba8\u8bba\u4e0b\u6211\u4eec\u4e1a\u52a1\u53d1\u5c55\u8fc7\u7a0b\u4e2d\u7ecf\u5e38\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u573a\u666f\u3002\\n### \u4e1a\u52a1\u573a\u666f\\n\u6211\u4eec\u4e1a\u52a1\u5728\u53d1\u5c55\u7684\u8fc7\u7a0b\u4e2d\uff0c\u57fa\u672c\u4e0a\u90fd\u662f\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u5e94\u7528\uff0c\u9010\u6e10\u8fc7\u6e21\u5230\u89c4\u6a21\u5e9e\u5927\u3001\u4e1a\u52a1\u590d\u6742\u7684\u5e94\u7528\u3002\u8fd9\u4e9b\u590d\u6742\u7684\u573a\u666f\u96be\u514d\u9047\u5230\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406\u95ee\u9898\uff0cSeata\u7684\u51fa\u73b0\u6b63\u662f\u89e3\u51b3\u8fd9\u4e9b\u5206\u5e03\u5f0f\u573a\u666f\u4e0b\u7684\u4e8b\u52a1\u7ba1\u7406\u95ee\u9898\u3002\u4ecb\u7ecd\u4e0b\u5176\u4e2d\u51e0\u4e2a\u7ecf\u5178\u7684\u573a\u666f\uff1a\\n#### \u573a\u666f\u4e00\uff1a\u5206\u5e93\u5206\u8868\u573a\u666f\u4e0b\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\\n![image.png](/img/blog/metrics-\u5206\u5e93\u5206\u8868\u573a\u666f\u4e0b\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1.png)\\n\u8d77\u521d\u6211\u4eec\u7684\u4e1a\u52a1\u89c4\u6a21\u5c0f\u3001\u8f7b\u91cf\u5316\uff0c\u5355\u4e00\u6570\u636e\u5e93\u5c31\u80fd\u4fdd\u969c\u6211\u4eec\u7684\u6570\u636e\u94fe\u8def\u3002\u4f46\u968f\u7740\u4e1a\u52a1\u89c4\u6a21\u4e0d\u65ad\u6269\u5927\u3001\u4e1a\u52a1\u4e0d\u65ad\u590d\u6742\u5316\uff0c\u901a\u5e38\u5355\u4e00\u6570\u636e\u5e93\u5728\u5bb9\u91cf\u3001\u6027\u80fd\u4e0a\u4f1a\u906d\u9047\u74f6\u9888\u3002\u901a\u5e38\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5411\u5206\u5e93\u3001\u5206\u8868\u7684\u67b6\u6784\u6f14\u8fdb\u3002\u6b64\u65f6\uff0c\u5373\u5f15\u5165\u4e86**\u5206\u5e93\u5206\u8868\u573a\u666f\u4e0b**\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u573a\u666f\u3002\\n#### \u573a\u666f\u4e8c\uff1a\u8de8\u670d\u52a1\u573a\u666f\u4e0b\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\\n![image.png](/img/blog/metrics-\u8de8\u670d\u52a1\u573a\u666f\u4e0b\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1.png)\\n\u964d\u4f4e\u5355\u4f53\u5e94\u7528\u590d\u6742\u5ea6\u7684\u65b9\u6848\uff1a\u5e94\u7528\u5fae\u670d\u52a1\u5316\u62c6\u5206\u3002\u62c6\u5206\u540e\uff0c\u6211\u4eec\u7684\u4ea7\u54c1\u7531\u591a\u4e2a\u529f\u80fd\u5404\u5f02\u7684\u5fae\u670d\u52a1\u7ec4\u4ef6\u6784\u6210\uff0c\u6bcf\u4e2a\u5fae\u670d\u52a1\u90fd\u4f7f\u7528\u72ec\u7acb\u7684\u6570\u636e\u5e93\u8d44\u6e90\u3002\u5728\u6d89\u53ca\u5230\u8de8\u670d\u52a1\u8c03\u7528\u7684\u6570\u636e\u4e00\u81f4\u6027\u573a\u666f\u65f6\uff0c\u5c31\u5f15\u5165\u4e86**\u8de8\u670d\u52a1\u573a\u666f\u4e0b**\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002\\n### Seata\u67b6\u6784\\n![image.png](/img/blog/metrics-Seata\u67b6\u6784.png)\\n\u5176\u6838\u5fc3\u7ec4\u4ef6\u4e3b\u8981\u5982\u4e0b\uff1a\\n\\n- **Transaction Coordinator\uff08TC\uff09**\\n\\n\u4e8b\u52a1\u534f\u8c03\u5668\uff0c\u7ef4\u62a4\u5168\u5c40\u4e8b\u52a1\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u8d1f\u8d23\u534f\u8c03\u5e76\u9a71\u52a8\u5168\u5c40\u4e8b\u52a1\u7684\u63d0\u4ea4\u6216\u56de\u6eda\u3002\\n\\n- **Transaction Manager\uff08TM\uff09**\\n\\n\u63a7\u5236\u5168\u5c40\u4e8b\u52a1\u7684\u8fb9\u754c\uff0c\u8d1f\u8d23\u5f00\u542f\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\uff0c\u5e76\u6700\u7ec8\u53d1\u8d77\u5168\u5c40\u63d0\u4ea4\u6216\u5168\u5c40\u56de\u6eda\u7684\u51b3\u8bae\uff0cTM\u5b9a\u4e49\u5168\u5c40\u4e8b\u52a1\u7684\u8fb9\u754c\u3002\\n\\n- **Resource Manager\uff08RM\uff09**\\n\\n\u63a7\u5236\u5206\u652f\u4e8b\u52a1\uff0c\u8d1f\u8d23\u5206\u652f\u6ce8\u518c\u3001\u72b6\u6001\u6c47\u62a5\uff0c\u5e76\u63a5\u6536\u4e8b\u52a1\u534f\u8c03\u5668\u7684\u6307\u4ee4\uff0c\u9a71\u52a8\u5206\u652f\uff08\u672c\u5730\uff09\u4e8b\u52a1\u7684\u63d0\u4ea4\u548c\u56de\u6eda\u3002RM\u8d1f\u8d23\u5b9a\u4e49\u5206\u652f\u4e8b\u52a1\u7684\u8fb9\u754c\u548c\u884c\u4e3a\u3002\\n## Seata\u7684\u53ef\u89c2\u6d4b\u5b9e\u8df5\\n### \u4e3a\u4ec0\u4e48\u9700\u8981\u53ef\u89c2\u6d4b\uff1f\\n\\n- **\u5206\u5e03\u5f0f\u4e8b\u52a1\u6d88\u606f\u94fe\u8def\u8f83\u590d\u6742**\\n\\nSeata\u5728\u89e3\u51b3\u4e86\u7528\u6237\u6613\u7528\u6027\u548c\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e00\u81f4\u6027\u8fd9\u4e9b\u95ee\u9898\u7684\u540c\u65f6\uff0c\u9700\u8981\u591a\u6b21TC\u4e0eTM\u3001RM\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u5c24\u5176\u5f53\u5fae\u670d\u52a1\u7684\u94fe\u8def\u53d8\u590d\u6742\u65f6\uff0cSeata\u7684\u4ea4\u4e92\u94fe\u8def\u4e5f\u4f1a\u5448\u6b63\u76f8\u5173\u6027\u589e\u52a0\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5176\u5b9e\u6211\u4eec\u5c31\u9700\u8981\u5f15\u5165\u53ef\u89c2\u6d4b\u7684\u80fd\u529b\u6765\u89c2\u5bdf\u3001\u5206\u6790\u4e8b\u7269\u94fe\u8def\u3002\\n\\n- **\u5f02\u5e38\u94fe\u8def\u3001\u6545\u969c\u6392\u67e5\u96be\u5b9a\u4f4d\uff0c\u6027\u80fd\u4f18\u5316\u65e0\u4ece\u4e0b\u624b**\\n\\n\u5728\u6392\u67e5Seata\u7684\u5f02\u5e38\u4e8b\u52a1\u94fe\u8def\u65f6\uff0c\u4f20\u7edf\u7684\u65b9\u6cd5\u9700\u8981\u770b\u65e5\u5fd7\uff0c\u8fd9\u6837\u68c0\u7d22\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\u3002\u5728\u5f15\u5165\u53ef\u89c2\u6d4b\u80fd\u529b\u540e\uff0c\u5e2e\u52a9\u6211\u4eec\u76f4\u89c2\u7684\u5206\u6790\u94fe\u8def\uff0c\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\uff1b\u4e3a\u4f18\u5316\u8017\u65f6\u7684\u4e8b\u52a1\u94fe\u8def\u63d0\u4f9b\u4f9d\u636e\u3002\\n\\n- **\u53ef\u89c6\u5316\u3001\u6570\u636e\u53ef\u91cf\u5316**\\n\\n\u53ef\u89c6\u5316\u80fd\u529b\u53ef\u8ba9\u7528\u6237\u5bf9\u4e8b\u52a1\u6267\u884c\u60c5\u51b5\u6709\u76f4\u89c2\u7684\u611f\u53d7\uff1b\u501f\u52a9\u53ef\u91cf\u5316\u7684\u6570\u636e\uff0c\u53ef\u5e2e\u52a9\u7528\u6237\u8bc4\u4f30\u8d44\u6e90\u6d88\u8017\u3001\u89c4\u5212\u9884\u7b97\u3002\\n### \u53ef\u89c2\u6d4b\u80fd\u529b\u6982\u89c8\\n| **\u53ef\u89c2\u6d4b\u7ef4\u5ea6** | **seata\u671f\u671b\u7684\u80fd\u529b** | **\u6280\u672f\u9009\u578b\u53c2\u8003** |\\n| --- | --- | --- |\\n| Metrics | \u529f\u80fd\u5c42\u9762\uff1a\u53ef\u6309\u4e1a\u52a1\u5206\u7ec4\u9694\u79bb\uff0c\u91c7\u96c6\u4e8b\u52a1\u603b\u91cf\u3001\u8017\u65f6\u7b49\u91cd\u8981\u6307\u6807\\n\u6027\u80fd\u5c42\u9762\uff1a\u9ad8\u5ea6\u91cf\u6027\u80fd\uff0c\u63d2\u4ef6\u6309\u9700\u52a0\u8f7d\\n\u67b6\u6784\u5c42\u9762\uff1a\u51cf\u5c11\u7b2c\u4e09\u65b9\u4f9d\u8d56\uff0c\u670d\u52a1\u7aef\u3001\u5ba2\u6237\u7aef\u80fd\u591f\u91c7\u7528\u7edf\u4e00\u7684\u67b6\u6784\uff0c\u51cf\u5c11\u6280\u672f\u590d\u6742\u5ea6\\n\u517c\u5bb9\u6027\u5c42\u9762\uff1a\u81f3\u5c11\u517c\u5bb9Prometheus\u751f\u6001 | Prometheus\uff1a\u6307\u6807\u5b58\u50a8\u548c\u67e5\u8be2\u7b49\u9886\u57df\u6709\u7740\u4e1a\u754c\u9886\u5148\u7684\u5730\u4f4d\\nOpenTelemetry\uff1a\u53ef\u89c2\u6d4b\u6570\u636e\u91c7\u96c6\u548c\u89c4\u8303\u7684\u4e8b\u5b9e\u6807\u51c6\u3002\u4f46\u81ea\u8eab\u5e76\u4e0d\u8d1f\u8d23\u6570\u636e\u7684\u5b58\u50a8\uff0c\u5c55\u793a\u548c\u5206\u6790 |\\n| Tracing | \u529f\u80fd\u5c42\u9762\uff1a\u5168\u94fe\u8def\u8ffd\u8e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u751f\u547d\u5468\u671f\uff0c\u53cd\u5e94\u5206\u5e03\u5f0f\u4e8b\u52a1\u6267\u884c\u6027\u80fd\u6d88\u8017\\n\u6613\u7528\u6027\u65b9\u9762\uff1a\u5bf9\u4f7f\u7528seata\u7684\u7528\u6237\u800c\u8a00\u7b80\u5355\u6613\u63a5\u5165 | SkyWalking\uff1a\u5229\u7528Java\u7684Agent\u63a2\u9488\u6280\u672f\uff0c\u6548\u7387\u9ad8\uff0c\u7b80\u5355\u6613\u7528\u3002 |\\n| Logging | \u529f\u80fd\u5c42\u9762\uff1a\u8bb0\u5f55\u670d\u52a1\u7aef\u3001\u5ba2\u6237\u7aef\u5168\u90e8\u751f\u547d\u5468\u671f\u4fe1\u606f\\n\u6613\u7528\u6027\u5c42\u9762\uff1a\u80fd\u6839\u636eXID\u5feb\u901f\u5339\u914d\u5168\u5c40\u4e8b\u52a1\u5bf9\u5e94\u94fe\u8def\u65e5\u5fd7 | Alibaba Cloud Service\\nELK |\\n\\n### Metrics\u7ef4\u5ea6\\n#### \u8bbe\u8ba1\u601d\u8def\\n\\n1. Seata\u4f5c\u4e3a\u4e00\u4e2a\u88ab\u96c6\u6210\u7684\u6570\u636e\u4e00\u81f4\u6027\u6846\u67b6\uff0cMetrics\u6a21\u5757\u5c06\u5c3d\u53ef\u80fd\u5c11\u7684\u4f7f\u7528\u7b2c\u4e09\u65b9\u4f9d\u8d56\u4ee5\u964d\u4f4e\u53d1\u751f\u51b2\u7a81\u7684\u98ce\u9669\\n2. Metrics\u6a21\u5757\u5c06\u7aed\u529b\u4e89\u53d6\u66f4\u9ad8\u7684\u5ea6\u91cf\u6027\u80fd\u548c\u66f4\u4f4e\u7684\u8d44\u6e90\u5f00\u9500\uff0c\u5c3d\u53ef\u80fd\u964d\u4f4e\u5f00\u542f\u540e\u5e26\u6765\u7684\u526f\u4f5c\u7528\\n3. \u914d\u7f6e\u65f6\uff0cMetrics\u662f\u5426\u6fc0\u6d3b\u3001\u6570\u636e\u5982\u4f55\u53d1\u5e03\uff0c\u53d6\u51b3\u4e8e\u5bf9\u5e94\u7684\u914d\u7f6e\uff1b\u5f00\u542f\u914d\u7f6e\u5219\u81ea\u52a8\u542f\u7528\uff0c\u5e76\u9ed8\u8ba4\u5c06\u5ea6\u91cf\u6570\u636e\u901a\u8fc7prometheusexporter\u7684\u5f62\u5f0f\u53d1\u5e03\\n4. \u4e0d\u4f7f\u7528Spring\uff0c\u4f7f\u7528SPI(Service Provider Interface)\u52a0\u8f7d\u6269\u5c55\\n#### \u6a21\u5757\u8bbe\u8ba1\\n![\u56fe\u7247 1.png](/img/blog/metrics-\u6a21\u5757\u8bbe\u8ba1.png)\\n\\n- seata-metrics-core\uff1aMetrics\u6838\u5fc3\u6a21\u5757\uff0c\u6839\u636e\u914d\u7f6e\u7ec4\u7ec7\uff08\u52a0\u8f7d\uff091\u4e2aRegistry\u548cN\u4e2aExporter\uff1b\\n- seata-metrics-api\uff1a\u5b9a\u4e49\u4e86Meter\u6307\u6807\u63a5\u53e3\uff0cRegistry\u6307\u6807\u6ce8\u518c\u4e2d\u5fc3\u63a5\u53e3\uff1b\\n- seata-metrics-exporter-prometheus\uff1a\u5185\u7f6e\u7684prometheus-exporter\u5b9e\u73b0\uff1b\\n- seata-metrics-registry-compact\uff1a\u5185\u7f6e\u7684Registry\u5b9e\u73b0\uff0c\u5e76\u8f7b\u91cf\u7ea7\u5b9e\u73b0\u4e86Gauge\u3001Counter\u3001Summay\u3001Timer\u6307\u6807\uff1b\\n#### metrics\u6a21\u5757\u5de5\u4f5c\u6d41\\n![\u56fe\u7247 1.png](/img/blog/metrics-\u6a21\u5757\u5de5\u4f5c\u6d41.png)\\n\u4e0a\u56fe\u662fmetrics\u6a21\u5757\u7684\u5de5\u4f5c\u6d41\uff0c\u5176\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a\\n\\n1. \u5229\u7528SPI\u673a\u5236\uff0c\u6839\u636e\u914d\u7f6e\u52a0\u8f7dExporter\u548cRegistry\u7684\u5b9e\u73b0\u7c7b\uff1b\\n2. \u57fa\u4e8e\u6d88\u606f\u8ba2\u9605\u4e0e\u901a\u77e5\u673a\u5236\uff0c\u76d1\u542c\u6240\u6709\u5168\u5c40\u4e8b\u52a1\u7684\u72b6\u6001\u53d8\u66f4\u4e8b\u4ef6\uff0c\u5e76publish\u5230EventBus\uff1b\\n3. \u4e8b\u4ef6\u8ba2\u9605\u8005\u6d88\u8d39\u4e8b\u4ef6\uff0c\u5e76\u5c06\u751f\u6210\u7684metrics\u5199\u5165Registry\uff1b\\n4. \u76d1\u63a7\u7cfb\u7edf\uff08\u5982prometheus\uff09\u4eceExporter\u4e2d\u62c9\u53d6\u6570\u636e\u3002\\n#### TC\u6838\u5fc3\u6307\u6807\\n![image.png](/img/blog/metrics-TC\u6838\u5fc3\u6307\u6807.png)\\n#### TM\u6838\u5fc3\u6307\u6807\\n![image.png](/img/blog/metrics-TM\u6838\u5fc3\u6307\u6807.png)\\n#### RM\u6838\u5fc3\u6307\u6807\\n![image.png](/img/blog/metrics-RM\u6838\u5fc3\u6307\u6807.png)\\n#### \u5927\u76d8\u5c55\u793a\\n![lQLPJxZhZlqESU3NBpjNBp6w8zYK6VbMgzYCoKVrWEDWAA_1694_1688.png](/img/blog/metrics-\u5927\u76d8\u5c55\u793a.png)\\n### Tracing\u7ef4\u5ea6\\n#### Seata\u4e3a\u4ec0\u4e48\u9700\u8981tracing\uff1f\\n\\n1. \u5bf9\u4e1a\u52a1\u4fa7\u800c\u8a00\uff0c\u5f15\u5165Seata\u540e\uff0c\u5bf9\u4e1a\u52a1\u6027\u80fd\u4f1a\u5e26\u6765\u591a\u5927\u635f\u8017\uff1f\u4e3b\u8981\u65f6\u95f4\u6d88\u8017\u5728\u4ec0\u4e48\u5730\u65b9\uff1f\u5982\u4f55\u9488\u5bf9\u6027\u7684\u4f18\u5316\u4e1a\u52a1\u903b\u8f91\uff1f\u8fd9\u4e9b\u90fd\u662f\u672a\u77e5\u7684\u3002\\n2. Seata\u7684\u6240\u6709\u6d88\u606f\u8bb0\u5f55\u90fd\u901a\u8fc7\u65e5\u5fd7\u6301\u4e45\u5316\u843d\u76d8\uff0c\u4f46\u5bf9\u4e0d\u4e86\u89e3Seata\u7684\u7528\u6237\u800c\u8a00\uff0c\u65e5\u5fd7\u975e\u5e38\u4e0d\u53cb\u597d\u3002\u80fd\u5426\u901a\u8fc7\u63a5\u5165Tracing\uff0c\u63d0\u5347\u4e8b\u52a1\u94fe\u8def\u6392\u67e5\u6548\u7387\uff1f\\n3. \u5bf9\u4e8e\u65b0\u624b\u7528\u6237\uff0c\u53ef\u901a\u8fc7Tracing\u8bb0\u5f55\uff0c\u5feb\u901f\u4e86\u89e3seata\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u964d\u4f4eseata\u4f7f\u7528\u95e8\u69db\u3002\\n#### Seata\u7684tracing\u89e3\u51b3\u65b9\u6848\\n\\n- Seata\u5728\u81ea\u5b9a\u4e49\u7684RPC\u6d88\u606f\u534f\u8bae\u4e2d\u5b9a\u4e49\u4e86Header\u4fe1\u606f\uff1b\\n- SkyWalking\u62e6\u622a\u6307\u5b9a\u7684RPC\u6d88\u606f\uff0c\u5e76\u6ce8\u5165tracing\u76f8\u5173\u7684span\u4fe1\u606f\uff1b\\n- \u4ee5RPC\u6d88\u606f\u7684\u53d1\u51fa&\u63a5\u6536\u4e3a\u4e34\u754c\u70b9\uff0c\u5b9a\u4e49\u4e86span\u7684\u751f\u547d\u5468\u671f\u8303\u56f4\u3002\\n\\n\u57fa\u4e8e\u4e0a\u8ff0\u7684\u65b9\u5f0f\uff0cSeata\u5b9e\u73b0\u4e86\u4e8b\u52a1\u5168\u94fe\u8def\u7684tracing\uff0c\u5177\u4f53\u63a5\u5165\u53ef\u53c2\u8003[\u4e3a[Seata\u5e94\u7528 | Seata-server]\u63a5\u5165Skywalking](https://seata.io/zh-cn/docs/user/apm/skywalking.html)\u3002\\n#### tracing\u6548\u679c\\n\\n- \u57fa\u4e8e\u7684demo\u573a\u666f\uff1a\\n1. \u7528\u6237\u8bf7\u6c42\u4ea4\u6613\u670d\u52a1\\n2. \u4ea4\u6613\u670d\u52a1\u9501\u5b9a\u5e93\u5b58\\n3. \u4ea4\u6613\u670d\u52a1\u521b\u5efa\u8d26\u5355\\n4. \u8d26\u5355\u670d\u52a1\u8fdb\u884c\u6263\u6b3e\\n\\n![image.png](/img/blog/metrics-tracing\u6548\u679c-\u4e1a\u52a1\u903b\u8f91\u56fe.png)\\n\\n- GlobalCommit\u6210\u529f\u7684\u4e8b\u52a1\u94fe\u8def\uff08\u4e8b\u4f8b\uff09\\n\\n![image.png](/img/blog/metrics-tracing\u6548\u679c-tracing\u94fe1.png)\\n![image.png](/img/blog/metrics-tracing\u6548\u679c-tracing\u94fe2.png)\\n![image.png](/img/blog/metrics-tracing\u6548\u679c-tracing\u94fe3.png)\\n### Logging\u7ef4\u5ea6\\n#### \u8bbe\u8ba1\u601d\u8def\\n![image.png](/img/blog/metrics-logging\u8bbe\u8ba1\u601d\u8def.png)\\nLogging\u8fd9\u4e00\u5757\u5176\u5b9e\u627f\u62c5\u7684\u662f\u53ef\u89c2\u6d4b\u8fd9\u51e0\u4e2a\u7ef4\u5ea6\u5f53\u4e2d\u7684\u515c\u5e95\u89d2\u8272\u3002\u653e\u5728\u6700\u5e95\u5c42\u7684\uff0c\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u65e5\u5fd7\u683c\u5f0f\u7684\u8bbe\u8ba1\uff0c\u53ea\u6709\u597d\u65e5\u5fd7\u683c\u5f0f\uff0c\u6211\u4eec\u624d\u80fd\u5bf9\u5b83\u8fdb\u884c\u66f4\u597d\u7684\u91c7\u96c6\u3001\u6a21\u5757\u5316\u7684\u5b58\u50a8\u548c\u5c55\u793a\u3002\u5728\u5176\u4e4b\u4e0a\uff0c\u662f\u65e5\u5fd7\u7684\u91c7\u96c6\u3001\u5b58\u50a8\u3001\u76d1\u63a7\u3001\u544a\u8b66\u3001\u6570\u636e\u53ef\u89c6\u5316\uff0c\u8fd9\u4e9b\u6a21\u5757\u66f4\u591a\u7684\u662f\u6709\u73b0\u6210\u7684\u5de5\u5177\uff0c\u6bd4\u5982\u963f\u91cc\u7684SLS\u65e5\u5fd7\u670d\u52a1\u3001\u8fd8\u6709ELK\u7684\u4e00\u5957\u6280\u672f\u6808\uff0c\u6211\u4eec\u66f4\u591a\u662f\u5c06\u5f00\u9500\u6210\u672c\u3001\u63a5\u5165\u590d\u6742\u5ea6\u3001\u751f\u6001\u7e41\u8363\u5ea6\u7b49\u4f5c\u4e3a\u8003\u91cf\u3002\\n#### \u65e5\u5fd7\u683c\u5f0f\u8bbe\u8ba1\\n\u8fd9\u91cc\u62ffSeata-Server\u7684\u4e00\u4e2a\u65e5\u5fd7\u683c\u5f0f\u4f5c\u4e3a\u6848\u4f8b\uff1a\\n![image.png](/img/blog/metrics-logging\u65e5\u5fd7\u6548\u679c.png)\\n\\n- \u7ebf\u7a0b\u6c60\u89c4\u8303\u547d\u540d\uff1a\u5f53\u7ebf\u7a0b\u6c60\u3001\u7ebf\u7a0b\u6bd4\u8f83\u591a\u65f6\uff0c\u89c4\u8303\u7684\u7ebf\u7a0b\u547d\u540d\u80fd\u5c06\u65e0\u5e8f\u6267\u884c\u7684\u7ebf\u7a0b\u6267\u884c\u6b21\u5e8f\u6e05\u6670\u5c55\u793a\u3002\\n- \u65b9\u6cd5\u5168\u7c7b\u540d\u53ef\u8ffd\u6eaf\uff1a\u5feb\u901f\u5b9a\u4f4d\u5230\u5177\u4f53\u7684\u4ee3\u7801\u5757\u3002\\n- \u91cd\u70b9\u8fd0\u884c\u65f6\u4fe1\u606f\u900f\u51fa\uff1a\u91cd\u70b9\u7a81\u51fa\u5173\u952e\u65e5\u5fd7\uff0c\u4e0d\u5173\u952e\u7684\u65e5\u5fd7\u4e0d\u6253\u5370\uff0c\u51cf\u5c11\u65e5\u5fd7\u5197\u4f59\u3002\\n- \u6d88\u606f\u683c\u5f0f\u53ef\u6269\u5c55\uff1a\u901a\u8fc7\u6269\u5c55\u6d88\u606f\u7c7b\u7684\u8f93\u51fa\u683c\u5f0f\uff0c\u51cf\u5c11\u65e5\u5fd7\u7684\u4ee3\u7801\u4fee\u6539\u91cf\u3002\\n## \u603b\u7ed3&\u5c55\u671b\\n#### Metrics\\n\u603b\u7ed3\uff1a\u57fa\u672c\u5b9e\u73b0\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u53ef\u91cf\u5316\u3001\u53ef\u89c2\u6d4b\u3002\\n\u5c55\u671b\uff1a\u66f4\u7ec6\u7c92\u5ea6\u7684\u6307\u6807\u3001\u66f4\u5e7f\u9614\u7684\u751f\u6001\u517c\u5bb9\u3002\\n#### Tracing\\n\u603b\u7ed3\uff1a\u5206\u5e03\u5f0f\u4e8b\u52a1\u5168\u94fe\u8def\u7684\u53ef\u8ffd\u6eaf\u3002\\n\u5c55\u671b\uff1a\u6839\u636exid\u8ffd\u6eaf\u4e8b\u52a1\u94fe\u8def\uff0c\u5f02\u5e38\u94fe\u8def\u6839\u56e0\u5feb\u901f\u5b9a\u4f4d\u3002\\n#### Logging\\n\u603b\u7ed3\uff1a\u7ed3\u6784\u5316\u7684\u65e5\u5fd7\u683c\u5f0f\u3002\\n\u5c55\u671b\uff1a\u65e5\u5fd7\u53ef\u89c2\u6d4b\u4f53\u7cfb\u6f14\u8fdb\u3002"},{"id":"/seata-connect-data-and-application","metadata":{"permalink":"/zh-cn/blog/seata-connect-data-and-application","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-connect-data-and-application.md","title":"Seata\uff1a\u8fde\u63a5\u6570\u636e\u4e0e\u5e94\u7528","description":"\u672c\u6587\u4ecb\u7ecdSeata\u7684\u8fc7\u53bb\u3001\u73b0\u5728\u548c\u672a\u6765\u6f14\u8fdb","date":"2023-06-10T00:00:00.000Z","formattedDate":"2023\u5e746\u670810\u65e5","tags":[],"readingTime":22.88,"hasTruncateMarker":false,"authors":[{"name":"\u5b63\u654f-Seata \u5f00\u6e90\u793e\u533a\u521b\u59cb\u4eba\uff0c\u5206\u5e03\u5f0f\u4e8b\u52a1\u56e2\u961f\u8d1f\u8d23\u4eba"}],"frontMatter":{"title":"Seata\uff1a\u8fde\u63a5\u6570\u636e\u4e0e\u5e94\u7528","keywords":["Seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001\u6570\u636e\u4e00\u81f4\u6027\u3001\u5fae\u670d\u52a1"],"description":"\u672c\u6587\u4ecb\u7ecdSeata\u7684\u8fc7\u53bb\u3001\u73b0\u5728\u548c\u672a\u6765\u6f14\u8fdb","author":"\u5b63\u654f-Seata \u5f00\u6e90\u793e\u533a\u521b\u59cb\u4eba\uff0c\u5206\u5e03\u5f0f\u4e8b\u52a1\u56e2\u961f\u8d1f\u8d23\u4eba","date":"2023/06/10"},"prevItem":{"title":"Seata\u7684\u53ef\u89c2\u6d4b\u5b9e\u8df5","permalink":"/zh-cn/blog/seata-observable-practice"},"nextItem":{"title":"\u751f\u4ea7\u73af\u5883\u53ef\u7528\u7684 seata-go 1.2.0 \u6765\u4e86\uff01\uff01\uff01","permalink":"/zh-cn/blog/seata-go-1.2.0"}},"content":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u5206\u5e03\u5f0f\u4e8b\u52a1\u4ece\u5185\u90e8\u5230\u5546\u4e1a\u5316\u548c\u5f00\u6e90\u7684\u6f14\u8fdb\u5386\u7a0b\uff0cSeata\u793e\u533a\u5f53\u524d\u8fdb\u5c55\u548c\u672a\u6765\u89c4\u5212\u3002\\n\\nSeata\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u65e8\u5728\u4e3a\u73b0\u4ee3\u5316\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u63d0\u4f9b\u89e3\u51b3\u65b9\u6848\u3002Seata\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u5305\u62ecAT\u3001TCC\u3001Saga\u548cXA\u4e8b\u52a1\u6a21\u5f0f\uff0c\u53ef\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u548c\u6570\u636e\u5b58\u50a8\u65b9\u6848\u3002Seata\u8fd8\u63d0\u4f9b\u4e86\u7b80\u4fbf\u6613\u7528\u7684API\uff0c\u4ee5\u53ca\u4e30\u5bcc\u7684\u6587\u6863\u548c\u793a\u4f8b\uff0c\u65b9\u4fbf\u4f01\u4e1a\u5728\u5e94\u7528Seata\u65f6\u8fdb\u884c\u5feb\u901f\u5f00\u53d1\u548c\u90e8\u7f72\u3002\\n\\n**Seata\u7684\u4f18\u52bf\u5728\u4e8e\u5177\u6709\u9ad8\u53ef\u7528\u6027\u3001\u9ad8\u6027\u80fd\u3001\u9ad8\u6269\u5c55\u6027\u7b49\u7279\u70b9\uff0c\u540c\u65f6\u5728\u8fdb\u884c\u6a2a\u5411\u6269\u5c55\u65f6\u4e5f\u65e0\u9700\u505a\u989d\u5916\u7684\u590d\u6742\u64cd\u4f5c\u3002** \u76ee\u524dSeata\u5df2\u5728\u963f\u91cc\u4e91\u4e0a\u51e0\u5343\u5bb6\u5ba2\u6237\u4e1a\u52a1\u7cfb\u7edf\u4e2d\u4f7f\u7528\uff0c\u5176\u53ef\u9760\u6027\u5f97\u5230\u4e86\u4e1a\u5185\u5404\u5927\u5382\u5546\u7684\u8ba4\u53ef\u548c\u5e94\u7528\u3002\\n\\n\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0cSeata\u7684\u793e\u533a\u4e5f\u5728\u4e0d\u65ad\u6269\u5927\uff0c\u73b0\u5df2\u6210\u4e3a\u5f00\u53d1\u8005\u4ea4\u6d41\u3001\u5206\u4eab\u548c\u5b66\u4e60\u7684\u91cd\u8981\u5e73\u53f0\uff0c\u4e5f\u5f97\u5230\u4e86\u8d8a\u6765\u8d8a\u591a\u4f01\u4e1a\u7684\u652f\u6301\u548c\u5173\u6ce8\u3002\\n\\n\u4eca\u5929\u6211\u4e3b\u8981\u9488\u5bf9\u4ee5\u4e0b\u4e09\u4e2a\u5c0f\u8bae\u9898\u5bf9Seata\u8fdb\u884c\u5206\u4eab\uff1a\\n- **\u4eceTXC/GTS \u5230 Seata**\\n- **Seata \u793e\u533a\u6700\u65b0\u8fdb\u5c55**\\n- **Seata \u793e\u533a\u672a\u6765\u89c4\u5212**\\n<br/>\\n### \u4eceTXC/GTS \u5230Seata\\n#### \u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u7f18\u8d77\\n![\u4ea7\u54c1\u77e9\u9635](/img/blog/\u4ea7\u54c1\u77e9\u9635.jpg) \\nSeata \u5728\u963f\u91cc\u5185\u90e8\u7684\u4ea7\u54c1\u4ee3\u53f7\u53ebTXC\uff08taobao transaction constructor\uff09\uff0c\u8fd9\u4e2a\u540d\u5b57\u6709\u975e\u5e38\u6d53\u539a\u7684\u7ec4\u7ec7\u67b6\u6784\u8272\u5f69\u3002TXC \u8d77\u6e90\u4e8e\u963f\u91cc\u4e94\u5f69\u77f3\u9879\u76ee\uff0c\u4e94\u5f69\u77f3\u662f\u4e0a\u53e4\u795e\u8bdd\u4e2d\u5973\u5a32\u8865\u5929\u6240\u7528\u7684\u77f3\u5b50\uff0c\u9879\u76ee\u540d\u55bb\u610f\u4e3a\u6253\u7834\u5173\u952e\u6280\u672f\u58c1\u5792\uff0c\u8c61\u5f81\u7740\u963f\u91cc\u5728\u4ece\u5355\u4f53\u67b6\u6784\u5411\u5206\u5e03\u5f0f\u67b6\u6784\u7684\u6f14\u8fdb\u8fc7\u7a0b\u4e2d\u7684\u91cd\u8981\u91cc\u7a0b\u7891\u3002\u5728\u8fd9\u4e2a\u9879\u76ee\u7684\u8fc7\u7a0b\u4e2d\u6f14\u8fdb\u51fa\u4e00\u6279\u5212\u65f6\u4ee3\u7684\u4e92\u8054\u7f51\u4e2d\u95f4\u4ef6\uff0c\u5305\u62ec\u6211\u4eec\u5e38\u8bf4\u7684\u4e09\u5927\u4ef6\uff1a\\n- **HSF \u670d\u52a1\u8c03\u7528\u6846\u67b6**  \\n\u89e3\u51b3\u5355\u4f53\u5e94\u7528\u5230\u670d\u52a1\u5316\u540e\u7684\u670d\u52a1\u901a\u4fe1\u8c03\u7528\u95ee\u9898\u3002\\n- **TDDL \u5206\u5e93\u5206\u8868\u6846\u67b6**   \\n\u89e3\u51b3\u89c4\u6a21\u5316\u540e\u5355\u5e93\u5b58\u50a8\u5bb9\u91cf\u548c\u8fde\u63a5\u6570\u95ee\u9898\u3002\\n- **MetaQ \u6d88\u606f\u6846\u67b6**   \\n\u89e3\u51b3\u5f02\u6b65\u8c03\u7528\u95ee\u9898\u3002\\n\\n\u4e09\u5927\u4ef6\u7684\u8bde\u751f\u6ee1\u8db3\u4e86\u5fae\u670d\u52a1\u5316\u4e1a\u52a1\u5f00\u53d1\u7684\u57fa\u672c\u9700\u6c42\uff0c\u4f46\u662f\u5fae\u670d\u52a1\u5316\u540e\u7684\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898\u5e76\u672a\u5f97\u5230\u59a5\u5584\u89e3\u51b3\uff0c\u7f3a\u5c11\u7edf\u4e00\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5e94\u7528\u5fae\u670d\u52a1\u5316\u540e\u51fa\u73b0\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898\u6982\u7387\u8fdc\u5927\u4e8e\u5355\u4f53\u5e94\u7528\uff0c\u4ece\u8fdb\u7a0b\u5185\u8c03\u7528\u5230\u7f51\u7edc\u8c03\u7528\u8fd9\u79cd\u590d\u6742\u7684\u73af\u5883\u52a0\u5267\u4e86\u5f02\u5e38\u573a\u666f\u7684\u4ea7\u751f\uff0c\u670d\u52a1\u8df3\u6570\u7684\u589e\u591a\u4f7f\u5f97\u5728\u51fa\u73b0\u4e1a\u52a1\u5904\u7406\u5f02\u5e38\u65f6\u65e0\u6cd5\u534f\u540c\u4e0a\u4e0b\u6e38\u670d\u52a1\u540c\u65f6\u8fdb\u884c\u6570\u636e\u56de\u6eda\u3002TXC\u7684\u8bde\u751f\u6b63\u662f\u4e3a\u4e86\u89e3\u51b3\u5e94\u7528\u67b6\u6784\u5c42\u6570\u636e\u4e00\u81f4\u6027\u7684\u75db\u70b9\u95ee\u9898\uff0cTXC \u6838\u5fc3\u8981\u89e3\u51b3\u7684\u6570\u636e\u4e00\u81f4\u6027\u573a\u666f\u5305\u62ec\uff1a\\n- **\u8de8\u670d\u52a1\u7684\u4e00\u81f4\u6027\u3002** \u5e94\u5bf9\u7cfb\u7edf\u5f02\u5e38\u5982\u8c03\u7528\u8d85\u65f6\u548c\u4e1a\u52a1\u5f02\u5e38\u65f6\u534f\u8c03\u4e0a\u4e0b\u6e38\u670d\u52a1\u8282\u70b9\u56de\u6eda\u3002\\n- **\u5206\u5e93\u5206\u8868\u7684\u6570\u636e\u4e00\u81f4\u6027\u3002** \u5e94\u5bf9\u4e1a\u52a1\u5c42\u903b\u8f91SQL\u64cd\u4f5c\u7684\u6570\u636e\u5728\u4e0d\u540c\u6570\u636e\u5206\u7247\u4e0a\uff0c\u4fdd\u8bc1\u5176\u5206\u5e93\u5206\u8868\u64cd\u4f5c\u7684\u5185\u90e8\u4e8b\u52a1\u3002\\n- **\u6d88\u606f\u53d1\u9001\u7684\u6570\u636e\u4e00\u81f4\u6027\u3002** \u5e94\u5bf9\u6570\u636e\u64cd\u4f5c\u548c\u6d88\u606f\u53d1\u9001\u6210\u529f\u7684\u4e0d\u4e00\u81f4\u6027\u95ee\u9898\u3002\\n\\n\u4e3a\u4e86\u514b\u670d\u4ee5\u4e0a\u901a\u7528\u573a\u666f\u9047\u5230\u7684\u95ee\u9898\uff0cTXC\u4e0e\u4e09\u5927\u4ef6\u505a\u4e86\u65e0\u7f1d\u96c6\u6210\u3002\u4e1a\u52a1\u4f7f\u7528\u4e09\u5927\u4ef6\u5f00\u53d1\u65f6\uff0c\u5b8c\u5168\u611f\u77e5\u4e0d\u5230\u80cc\u540eTXC\u7684\u5b58\u5728\uff0c\u4e1a\u52a1\u4e0d\u9700\u8981\u8003\u8651\u6570\u636e\u4e00\u81f4\u6027\u7684\u8bbe\u8ba1\u95ee\u9898\uff0c\u6570\u636e\u4e00\u81f4\u6027\u4fdd\u8bc1\u4ea4\u7ed9\u4e86\u6846\u67b6\u6258\u7ba1\uff0c\u4e1a\u52a1\u66f4\u52a0\u805a\u7126\u4e8e\u4e1a\u52a1\u672c\u8eab\u7684\u5f00\u53d1\uff0c\u6781\u5927\u7684\u63d0\u5347\u4e86\u5f00\u53d1\u7684\u6548\u7387\u3002\\n<br/>\\n\\n![GTS\u67b6\u6784](/img/blog/GTS\u67b6\u6784.jpg) \\n\\nTXC\u5df2\u5728\u963f\u91cc\u96c6\u56e2\u5185\u90e8\u5e7f\u6cdb\u5e94\u7528\u591a\u5e74\uff0c\u7ecf\u8fc7\u53cc11\u7b49\u5927\u578b\u6d3b\u52a8\u7684\u6d2a\u8352\u6d41\u91cf\u6d17\u793c\uff0cTXC\u6781\u5927\u63d0\u9ad8\u4e86\u4e1a\u52a1\u7684\u5f00\u53d1\u6548\u7387\uff0c\u4fdd\u8bc1\u4e86\u6570\u636e\u7684\u6b63\u786e\u6027\uff0c\u6d88\u9664\u4e86\u6570\u636e\u4e0d\u4e00\u81f4\u5bfc\u81f4\u7684\u8d44\u635f\u548c\u5546\u8a89\u95ee\u9898\u3002\u968f\u7740\u67b6\u6784\u7684\u4e0d\u65ad\u6f14\u8fdb\uff0c**\u6807\u51c6\u7684\u4e09\u8282\u70b9\u96c6\u7fa4\u5df2\u53ef\u4ee5\u627f\u8f7d\u63a5\u8fd110W TPS\u7684\u5cf0\u503c\u548c\u6beb\u79d2\u7ea7\u4e8b\u52a1\u5904\u7406\u3002\u5728\u53ef\u7528\u6027\u548c\u6027\u80fd\u65b9\u9762\u90fd\u8fbe\u5230\u4e864\u4e2a9\u7684SLA\u4fdd\u8bc1\uff0c\u5373\u4f7f\u5728\u65e0\u503c\u5b88\u72b6\u6001\u4e0b\u4e5f\u80fd\u4fdd\u8bc1\u5168\u5e74\u65e0\u6545\u969c\u3002**\\n<br/>\\n\\n#### \u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u6f14\u8fdb\\n\u65b0\u4e8b\u7269\u7684\u8bde\u751f\u603b\u662f\u4f1a\u4f34\u968f\u7740\u8d28\u7591\u7684\u58f0\u97f3\u3002\u4e2d\u95f4\u4ef6\u5c42\u6765\u4fdd\u8bc1\u6570\u636e\u4e00\u81f4\u6027\u5230\u5e95\u53ef\u9760\u5417\uff1fTXC\u6700\u521d\u7684\u8bde\u751f\u53ea\u662f\u4e00\u79cd\u6a21\u7cca\u7684\u7406\u8bba\uff0c\u7f3a\u4e4f\u7406\u8bba\u6a21\u578b\u548c\u5de5\u7a0b\u5b9e\u8df5\u3002\u5728\u6211\u4eec\u8fdb\u884cMVP\uff08\u6700\u5c0f\u53ef\u884c\u4ea7\u54c1\uff09\u6a21\u578b\u6d4b\u8bd5\u5e76\u63a8\u5e7f\u4e1a\u52a1\u4e0a\u7ebf\u540e\uff0c\u7ecf\u5e38\u51fa\u73b0\u6545\u969c\uff0c\u5e38\u5e38\u9700\u8981\u5728\u6df1\u591c\u8d77\u5e8a\u5904\u7406\u95ee\u9898\uff0c\u7761\u89c9\u65f6\u8981\u4f69\u6234\u624b\u73af\u6765\u5e94\u5bf9\u7d27\u6025\u54cd\u5e94\uff0c\u8fd9\u4e5f\u662f\u6211\u63a5\u7ba1\u8fd9\u4e2a\u56e2\u961f\u5728\u6280\u672f\u4e0a\u8fc7\u7684\u6700\u75db\u82e6\u7684\u51e0\u5e74\u3002\\n\\n![\u5206\u5e03\u5f0f\u4e8b\u52a1\u6f14\u8fdb](/img/blog/\u5206\u5e03\u5f0f\u4e8b\u52a1\u6f14\u8fdb.jpg)  \\n\\n\u968f\u540e\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u5e7f\u6cdb\u7684\u8ba8\u8bba\u548c\u7cfb\u7edf\u68b3\u7406\u3002\u6211\u4eec\u9996\u5148\u9700\u8981\u5b9a\u4e49\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u6211\u4eec\u662f\u8981\u50cfRAFT\u4e00\u6837\u5b9e\u73b0\u591a\u6570\u5171\u8bc6\u4e00\u81f4\u6027\uff0c\u8fd8\u662f\u8981\u50cfGoogle Spanner\u4e00\u6837\u89e3\u51b3\u6570\u636e\u5e93\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u8fd8\u662f\u5176\u4ed6\u65b9\u5f0f\uff1f\u4ece\u5e94\u7528\u8282\u70b9\u81ea\u4e0a\u800c\u4e0b\u7684\u5206\u5c42\u7ed3\u6784\u6765\u770b\uff0c\u4e3b\u8981\u5305\u62ec\u5f00\u53d1\u6846\u67b6\u3001\u670d\u52a1\u8c03\u7528\u6846\u67b6\u3001\u6570\u636e\u4e2d\u95f4\u4ef6\u3001\u6570\u636e\u5e93Driver\u548c\u6570\u636e\u5e93\u3002\u6211\u4eec\u9700\u8981\u51b3\u5b9a\u5728\u54ea\u4e00\u5c42\u89e3\u51b3\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898\u3002\u6211\u4eec\u6bd4\u8f83\u4e86\u89e3\u51b3\u4e0d\u540c\u5c42\u6b21\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898\u6240\u9762\u4e34\u7684\u4e00\u81f4\u6027\u8981\u6c42\u3001\u901a\u7528\u6027\u3001\u5b9e\u73b0\u590d\u6742\u5ea6\u548c\u4e1a\u52a1\u63a5\u5165\u6210\u672c\u3002\u6700\u540e\uff0c\u6211\u4eec\u6743\u8861\u5229\u5f0a\uff0c\u628a\u5b9e\u73b0\u590d\u6742\u5ea6\u7559\u7ed9\u6211\u4eec\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u4e00\u81f4\u6027\u7ec4\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u8f83\u9ad8\u7684\u4e00\u81f4\u6027\uff0c\u4f46\u53c8\u4e0d\u80fd\u9501\u5b9a\u5230\u5177\u4f53\u6570\u636e\u5e93\u7684\u5b9e\u73b0\u4e0a\uff0c\u786e\u4fdd\u573a\u666f\u7684\u901a\u7528\u6027\u548c\u4e1a\u52a1\u63a5\u5165\u6210\u672c\u8db3\u591f\u4f4e\u4ee5\u4fbf\u66f4\u5bb9\u6613\u5b9e\u73b0\u4e1a\u52a1\uff0c\u8fd9\u4e5f\u662fTXC\u6700\u521d\u91c7\u7528AT\u6a21\u5f0f\u7684\u539f\u56e0\u3002\\n\\n**\u5206\u5e03\u5f0f\u4e8b\u52a1\u5b83\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6846\u67b6\uff0c\u5b83\u662f\u4e00\u4e2a\u4f53\u7cfb\u3002**  \u6211\u4eec\u5728\u7406\u8bba\u4e0a\u5b9a\u4e49\u4e86\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u6982\u5ff5\u4e0a\u62bd\u8c61\u51fa\u4e86\u6a21\u5f0f\u3001\u89d2\u8272\u3001\u52a8\u4f5c\u548c\u9694\u79bb\u6027\u7b49\u3002\u4ece\u5de5\u7a0b\u5b9e\u8df5\u7684\u89d2\u5ea6\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u7f16\u7a0b\u6a21\u578b\uff0c\u5305\u62ec\u4f4e\u4fb5\u5165\u7684\u6ce8\u89e3\u3001\u7b80\u5355\u7684\u65b9\u6cd5\u6a21\u677f\u548c\u7075\u6d3b\u7684API \uff0c\u5b9a\u4e49\u4e86\u4e8b\u52a1\u7684\u57fa\u7840\u80fd\u529b\u548c\u589e\u5f3a\u80fd\u529b\uff08\u4f8b\u5982\u5982\u4f55\u4ee5\u4f4e\u6210\u672c\u652f\u6301\u5927\u91cf\u6d3b\u52a8\uff09\uff0c\u4ee5\u53ca\u8fd0\u7ef4\u3001\u5b89\u5168\u3001\u6027\u80fd\u3001\u53ef\u89c2\u6d4b\u6027\u548c\u9ad8\u53ef\u7528\u7b49\u65b9\u9762\u7684\u80fd\u529b\u3002\\n\\n![\u4e8b\u52a1\u903b\u8f91\u6a21\u578b](/img/blog/\u4e8b\u52a1\u903b\u8f91\u6a21\u578b.jpg) \\n\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u4e86\u54ea\u4e9b\u95ee\u9898\u5462\uff1f\u4e00\u4e2a\u7ecf\u5178\u4e14\u5177\u6709\u4f53\u611f\u7684\u4f8b\u5b50\u5c31\u662f\u8f6c\u8d26\u573a\u666f\u3002\u8f6c\u8d26\u8fc7\u7a0b\u5305\u62ec\u51cf\u53bb\u4f59\u989d\u548c\u589e\u52a0\u4f59\u989d\u4e24\u4e2a\u6b65\u9aa4\uff0c\u6211\u4eec\u5982\u4f55\u4fdd\u8bc1\u64cd\u4f5c\u7684\u539f\u5b50\u6027\uff1f\u5728\u6ca1\u6709\u4efb\u4f55\u5e72\u9884\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e24\u4e2a\u6b65\u9aa4\u53ef\u80fd\u4f1a\u9047\u5230\u5404\u79cd\u95ee\u9898\uff0c\u4f8b\u5982B\u8d26\u6237\u5df2\u9500\u6237\u6216\u51fa\u73b0\u670d\u52a1\u8c03\u7528\u8d85\u65f6\u7b49\u60c5\u51b5\u3002\\n\\n**\u8d85\u65f6\u95ee\u9898\u4e00\u76f4\u662f\u5206\u5e03\u5f0f\u5e94\u7528\u4e2d\u6bd4\u8f83\u96be\u89e3\u51b3\u7684\u95ee\u9898**\uff0c\u6211\u4eec\u65e0\u6cd5\u51c6\u786e\u77e5\u6653B\u670d\u52a1\u662f\u5426\u6267\u884c\u4ee5\u53ca\u5176\u6267\u884c\u987a\u5e8f\u3002\u4ece\u6570\u636e\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u610f\u5473\u7740B \u8d26\u6237\u7684\u94b1\u672a\u5fc5\u4f1a\u88ab\u6210\u529f\u52a0\u8d77\u6765\u3002\u5728\u670d\u52a1\u5316\u6539\u9020\u4e4b\u540e\uff0c\u6bcf\u4e2a\u8282\u70b9\u4ec5\u83b7\u77e5\u90e8\u5206\u4fe1\u606f\uff0c\u800c\u4e8b\u52a1\u672c\u8eab\u9700\u8981\u5168\u5c40\u534f\u8c03\u6240\u6709\u8282\u70b9\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u62e5\u6709\u4e0a\u5e1d\u89c6\u89d2\u3001\u80fd\u591f\u83b7\u53d6\u5168\u90e8\u4fe1\u606f\u7684\u4e2d\u5fc3\u5316\u89d2\u8272\uff0c\u8fd9\u4e2a\u89d2\u8272\u5c31\u662f**TC\uff08transaction coordinator\uff09**\uff0c\u5b83\u7528\u4e8e\u5168\u5c40\u534f\u8c03\u4e8b\u52a1\u7684\u72b6\u6001\u3002**TM\uff08Transaction Manager\uff09** \u5219\u662f\u9a71\u52a8\u4e8b\u52a1\u751f\u6210\u63d0\u8bae\u7684\u89d2\u8272\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u4e0a\u5e1d\u4e5f\u6709\u6253\u778c\u7761\u7684\u65f6\u5019\uff0c\u4ed6\u7684\u5224\u65ad\u4e5f\u5e76\u4e0d\u603b\u662f\u6b63\u786e\u7684\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a**RM\uff08resource manager\uff09** \u89d2\u8272\u4f5c\u4e3a\u7075\u9b42\u7684\u4ee3\u8868\u6765\u9a8c\u8bc1\u4e8b\u52a1\u7684\u771f\u5b9e\u6027\u3002\u8fd9\u5c31\u662fTXC \u6700\u57fa\u672c\u7684\u54f2\u5b66\u6a21\u578b\u3002\u6211\u4eec\u4ece\u65b9\u6cd5\u8bba\u4e0a\u9a8c\u8bc1\u4e86\u5b83\u7684\u6570\u636e\u4e00\u81f4\u6027\u662f\u975e\u5e38\u5b8c\u5907\u7684\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u7684\u8ba4\u77e5\u662f\u6709\u8fb9\u754c\u7684\u3002\u4e5f\u8bb8\u672a\u6765\u4f1a\u8bc1\u660e\u6211\u4eec\u662f\u706b\u9e21\u5de5\u7a0b\u5e08\uff0c\u4f46\u5728\u5f53\u524d\u60c5\u51b5\u4e0b\uff0c\u5b83\u7684\u6a21\u578b\u5df2\u7ecf\u8db3\u4ee5\u89e3\u51b3\u5927\u90e8\u5206\u73b0\u6709\u95ee\u9898\u3002\\n\\n![\u5206\u5e03\u5f0f\u4e8b\u52a1\u6027\u80fd](/img/blog/\u5206\u5e03\u5f0f\u4e8b\u52a1\u6027\u80fd.jpg) \\n**\u7ecf\u8fc7\u591a\u5e74\u7684\u67b6\u6784\u6f14\u8fdb\uff0c\u4ece\u4e8b\u52a1\u7684\u5355\u94fe\u8def\u8017\u65f6\u89d2\u5ea6\u6765\u770b\uff0cTXC\u5728\u4e8b\u52a1\u5f00\u59cb\u65f6\u7684\u5904\u7406\u5e73\u5747\u65f6\u95f4\u7ea6\u4e3a0.2\u6beb\u79d2\uff0c\u5206\u652f\u6ce8\u518c\u7684\u5e73\u5747\u65f6\u95f4\u7ea6\u4e3a0.4\u6beb\u79d2\uff0c\u6574\u4e2a\u4e8b\u52a1\u989d\u5916\u7684\u8017\u65f6\u5728\u6beb\u79d2\u7ea7\u522b\u4e4b\u5185\u3002\u8fd9\u4e5f\u662f\u6211\u4eec\u63a8\u7b97\u51fa\u7684\u6781\u9650\u7406\u8bba\u503c\u3002\u5728\u541e\u5410\u91cf\u65b9\u9762\uff0c\u5355\u8282\u70b9\u7684TPS\u8fbe\u52303\u4e07\u6b21/\u79d2\uff0c\u6807\u51c6\u96c6\u7fa4\u7684TPS\u63a5\u8fd110\u4e07\u6b21/\u79d2\u3002**\\n<br/>\\n#### Seata \u5f00\u6e90\\n\u4e3a\u4ec0\u4e48\u8981\u505a\u5f00\u6e90\uff1f\u8fd9\u662f\u5f88\u591a\u4eba\u95ee\u8fc7\u6211\u7684\u95ee\u9898\u30022017\u5e74\u6211\u4eec\u505a\u4e86\u5546\u4e1a\u5316\u7684 GTS\uff08Global Transaction Service \uff09\u4ea7\u54c1\u4ea7\u54c1\u5728\u963f\u91cc\u4e91\u4e0a\u552e\u5356\uff0c\u6709\u516c\u6709\u4e91\u548c\u4e13\u6709\u4e91\u4e24\u79cd\u5f62\u6001\u3002\u6b64\u65f6\u96c6\u56e2\u5185\u53d1\u5c55\u7684\u987a\u5229\uff0c\u4f46\u662f\u5728\u6211\u4eec\u5546\u4e1a\u5316\u7684\u8fc7\u7a0b\u4e2d\u5e76\u4e0d\u987a\u5229\uff0c\u6211\u4eec\u9047\u5230\u4e86\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\uff0c\u95ee\u9898\u603b\u7ed3\u8d77\u6765\u4e3b\u8981\u5305\u62ec\u4e24\u7c7b\uff1a**\u4e00\u662f\u5f00\u53d1\u8005\u5bf9\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u7406\u8bba\u76f8\u5f53\u532e\u4e4f\uff0c** \u5927\u591a\u6570\u4eba\u8fde\u672c\u5730\u4e8b\u52a1\u90fd\u6ca1\u641e\u660e\u767d\u662f\u600e\u4e48\u56de\u4e8b\u66f4\u4f55\u51b5\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002 **\u4e8c\u662f\u4ea7\u54c1\u6210\u719f\u5ea6\u4e0a\u5b58\u5728\u95ee\u9898\uff0c** \u7ecf\u5e38\u9047\u5230\u7a00\u5947\u53e4\u602a\u7684\u573a\u666f\u95ee\u9898\uff0c\u5bfc\u81f4\u4e86\u652f\u6301\u4ea4\u4ed8\u6210\u672c\u7684\u6025\u5267\u4e0a\u5347\uff0c\u7814\u53d1\u53d8\u6210\u4e86\u552e\u540e\u5ba2\u670d\u3002\\n\\n\u6211\u4eec\u53cd\u601d\u4e3a\u4ec0\u4e48\u9047\u5230\u5982\u6b64\u591a\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u4e3b\u8981\u7684\u95ee\u9898\u662f\u5728\u963f\u91cc\u96c6\u56e2\u5185\u90e8\u662f\u7edf\u4e00\u8bed\u8a00\u6808\u548c\u7edf\u4e00\u6280\u672f\u6808\u7684\uff0c\u6211\u4eec\u5bf9\u7279\u5b9a\u573a\u666f\u7684\u6253\u78e8\u662f\u975e\u5e38\u6210\u719f\u7684\uff0c\u670d\u52a1\u963f\u91cc\u4e00\u5bb6\u516c\u53f8\u548c\u670d\u52a1\u4e91\u4e0a\u6210\u5343\u4e0a\u4e07\u5bb6\u4f01\u4e1a\u6709\u672c\u8d28\u7684\u533a\uff0c\u8fd9\u4e5f\u542f\u793a\u6211\u4eec\u4ea7\u54c1\u7684\u573a\u666f\u751f\u6001\u505a\u7684\u4e0d\u591f\u597d\u3002\u5728GitHub 80%\u4ee5\u4e0a\u7684\u5f00\u6e90\u8f6f\u4ef6\u662f\u57fa\u7840\u8f6f\u4ef6\uff0c\u57fa\u7840\u8f6f\u4ef6\u9996\u8981\u89e3\u51b3\u7684\u662f\u573a\u666f\u901a\u7528\u6027\u95ee\u9898\uff0c\u56e0\u6b64\u5b83\u4e0d\u80fd\u88ab\u6709\u4e00\u5bb6\u4f01\u4e1aLock In\uff0c\u6bd4\u5982\u50cfLinux\uff0c\u5b83\u6709\u975e\u5e38\u591a\u7684\u793e\u533a\u5206\u53d1\u7248\u672c\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u8ba9\u6211\u4eec\u7684\u4ea7\u54c1\u53d8\u5f97\u66f4\u597d\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u5f00\u6e90\uff0c\u4e0e\u5f00\u53d1\u8005\u4eec\u5171\u5efa\uff0c\u666e\u53ca\u66f4\u591a\u7684\u4f01\u4e1a\u7528\u6237\u3002\\n\\n![\u963f\u91cc\u5f00\u6e90](/img/blog/\u963f\u91cc\u5f00\u6e90.jpg) \\n\u963f\u91cc\u7684\u5f00\u6e90\u7ecf\u5386\u4e86\u4e09\u4e2a\u4e3b\u8981\u9636\u6bb5\u3002**\u7b2c\u4e00\u4e2a\u9636\u6bb5\u662fDubbo\u6240\u5904\u7684\u9636\u6bb5\uff0c\u5f00\u53d1\u8005\u7528\u7231\u53d1\u7535\uff0c** Dubbo\u5f00\u6e90\u4e86\u670910\u51e0\u5e74\u7684\u65f6\u95f4\uff0c\u65f6\u95f4\u5145\u5206\u8bc1\u660e\u4e86Dubbo\u662f\u975e\u5e38\u4f18\u79c0\u7684\u5f00\u6e90\u8f6f\u4ef6\uff0c\u5b83\u7684\u5fae\u5185\u6838\u63d2\u4ef6\u5316\u7684\u6269\u5c55\u6027\u8bbe\u8ba1\u4e5f\u662f\u6211\u6700\u521d\u5f00\u6e90Seata \u7684\u91cd\u8981\u53c2\u8003\u3002\u505a\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u65f6\u5019\u6211\u4eec\u8981\u601d\u8003\u6269\u5c55\u6027\u548c\u6027\u80fd\u6743\u8861\u8d77\u6765\u54ea\u4e2a\u4f1a\u66f4\u91cd\u8981\u4e00\u4e9b\uff0c\u6211\u4eec\u5230\u5e95\u662f\u8981\u505a\u4e00\u4e2a\u4e09\u5e74\u7684\u8bbe\u8ba1\uff0c\u4e94\u5e74\u7684\u8bbe\u8ba1\u4ea6\u6216\u662f\u6ee1\u8db3\u4e1a\u52a1\u53d1\u5c55\u7684\u5341\u5e74\u8bbe\u8ba1\u3002\u6211\u4eec\u5728\u505a0-1\u670d\u52a1\u8c03\u7528\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u7684\u540c\u65f6\uff0c\u80fd\u5426\u9884\u6d4b\u52301-100\u89c4\u6a21\u5316\u540e\u7684\u6cbb\u7406\u95ee\u9898\u3002\\n\\n**\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u662f\u5f00\u6e90\u548c\u5546\u4e1a\u5316\u7684\u95ed\u73af\uff0c\u5546\u4e1a\u5316\u53cd\u54fa\u4e8e\u5f00\u6e90\u793e\u533a\uff0c\u4fc3\u8fdb\u4e86\u5f00\u6e90\u793e\u533a\u7684\u53d1\u5c55\u3002** \u6211\u8ba4\u4e3a\u4e91\u5382\u5546\u66f4\u5bb9\u6613\u505a\u597d\u5f00\u6e90\u7684\u539f\u56e0\u5982\u4e0b\uff1a\\n\\n- \u9996\u5148\uff0c\u4e91\u662f\u4e00\u4e2a\u89c4\u6a21\u5316\u7684\u7ecf\u6d4e\uff0c\u5fc5\u7136\u8981\u5efa\u7acb\u5728\u7a33\u5b9a\u6210\u719f\u7684\u5185\u6838\u57fa\u7840\u4e0a\uff0c\u5728\u4e0a\u9762\u53bb\u5305\u88c5\u5176\u4ea7\u54c1\u5316\u80fd\u529b\u5305\u62ec\u9ad8\u53ef\u7528\u3001\u514d\u8fd0\u7ef4\u548c\u5f39\u6027\u80fd\u529b\u3002\u4e0d\u7a33\u5b9a\u7684\u5185\u6838\u5fc5\u7136\u5bfc\u81f4\u8fc7\u9ad8\u7684\u4ea4\u4ed8\u652f\u6301\u6210\u672c\uff0c\u7814\u53d1\u56e2\u961f\u7684\u652f\u6301\u7b54\u7591\u7a7f\u900f\u8fc7\u9ad8\uff0c\u8fc7\u9ad8\u7684\u4ea4\u4ed8\u6210\u672c\u65e0\u6cd5\u5b9e\u73b0\u5927\u89c4\u6a21\u7684\u590d\u5236\uff0c\u7a7f\u900f\u7387\u8fc7\u9ad8\u65e0\u6cd5\u4f7f\u4ea7\u54c1\u5feb\u901f\u7684\u6f14\u8fdb\u8fed\u4ee3\u3002\\n- \u5176\u6b21\uff0c\u5546\u4e1a\u4ea7\u54c1\u662f\u66f4\u61c2\u4e1a\u52a1\u9700\u6c42\u7684\u3002\u6211\u4eec\u5185\u90e8\u56e2\u961f\u505a\u6280\u672f\u7684\u7ecf\u5e38\u662f\u7ad9\u5728\u7814\u53d1\u7684\u89c6\u89d2YY \u9700\u6c42\uff0c\u505a\u51fa\u6765\u7684\u4e1c\u897f\u6ca1\u6709\u4eba\u4f7f\u7528\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u5f62\u6210\u4ef7\u503c\u7684\u8f6c\u6362\u3002\u5546\u4e1a\u5316\u6536\u96c6\u5230\u7684\u90fd\u662f\u771f\u5b9e\u7684\u4e1a\u52a1\u9700\u6c42\uff0c\u56e0\u6b64\uff0c\u5b83\u7684\u5f00\u6e90\u5185\u6838\u4e5f\u5fc5\u987b\u4f1a\u671d\u7740\u8fd9\u4e2a\u65b9\u5411\u6f14\u8fdb\u3002\u5982\u679c\u4e0d\u671d\u7740\u8fd9\u4e2a\u65b9\u5411\u53bb\u6f14\u8fdb\u5fc5\u7136\u5bfc\u81f4\u4e24\u8fb9\u67b6\u6784\u4e0a\u7684\u5206\u88c2\uff0c\u589e\u52a0\u56e2\u961f\u7684\u7ef4\u62a4\u6210\u672c\u3002\\n- \u6700\u540e\uff0c\u5f00\u6e90\u548c\u5546\u4e1a\u5316\u95ed\u73af\uff0c\u80fd\u4fc3\u8fdb\u53cc\u65b9\u66f4\u597d\u7684\u53d1\u5c55\u3002\u5982\u679c\u5f00\u6e90\u5185\u6838\u7ecf\u5e38\u51fa\u73b0\u5404\u79cd\u95ee\u9898\uff0c\u4f60\u662f\u5426\u613f\u610f\u76f8\u4fe1\u7684\u5b83\u7684\u5546\u4e1a\u5316\u4ea7\u54c1\u662f\u8db3\u591f\u4f18\u79c0\u7684\u3002\\n\\n**\u7b2c\u4e09\u4e2a\u9636\u6bb5\u662f\u4f53\u7cfb\u5316\u548c\u6807\u51c6\u5316\u3002** \u9996\u5148\uff0c\u4f53\u7cfb\u5316\u662f\u5f00\u6e90\u89e3\u51b3\u65b9\u6848\u7684\u57fa\u7840\u3002\u963f\u91cc\u7684\u5f00\u6e90\u9879\u76ee\u5927\u591a\u662f\u57fa\u4e8e\u5185\u90e8\u7535\u5546\u573a\u666f\u7684\u5b9e\u8df5\u800c\u8bde\u751f\u7684\u3002\u4f8b\u5982Higress\uff0c\u5b83\u7528\u4e8e\u6253\u901a\u8682\u8681\u96c6\u56e2\u7684\u7f51\u5173\uff1bNacos\u627f\u8f7d\u7740\u670d\u52a1\u7684\u767e\u4e07\u5b9e\u4f8b\u548c\u5343\u4e07\u8fde\u63a5\uff1bSentinel \u63d0\u4f9b\u5927\u4fc3\u65f6\u7684\u964d\u7ea7\u548c\u9650\u6d41\u7b49\u9ad8\u53ef\u7528\u6027\u80fd\u529b\uff1b\u800cSeata\u8d1f\u8d23\u4fdd\u969c\u4ea4\u6613\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002\u8fd9\u5957\u4f53\u7cfb\u5316\u7684\u5f00\u6e90\u89e3\u51b3\u65b9\u6848\u662f\u57fa\u4e8e\u963f\u91cc\u7535\u5546\u751f\u6001\u7684\u6700\u4f73\u5b9e\u8df5\u800c\u8bbe\u8ba1\u7684\u3002\u5176\u6b21\uff0c\u6807\u51c6\u5316\u662f\u53e6\u4e00\u4e2a\u91cd\u8981\u7684\u7279\u70b9\u3002\u4ee5OpenSergo\u4e3a\u4f8b\uff0c\u5b83\u65e2\u662f\u4e00\u4e2a\u6807\u51c6\uff0c\u53c8\u662f\u4e00\u4e2a\u5b9e\u73b0\u3002\u5728\u8fc7\u53bb\u51e0\u5e74\u91cc\uff0c\u56fd\u5185\u5f00\u6e90\u9879\u76ee\u6570\u91cf\u5448\u7206\u53d1\u5f0f\u589e\u957f\u3002\u7136\u800c\uff0c\u5404\u4e2a\u5f00\u6e90\u4ea7\u54c1\u7684\u80fd\u529b\u5dee\u5f02\u5f88\u5927\uff0c\u5f7c\u6b64\u96c6\u6210\u65f6\u4f1a\u9047\u5230\u8bb8\u591a\u517c\u5bb9\u6027\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u50cfOpenSergo\u8fd9\u6837\u7684\u5f00\u6e90\u9879\u76ee\u80fd\u591f\u5b9a\u4e49\u4e00\u4e9b\u6807\u51c6\u5316\u7684\u80fd\u529b\u548c\u63a5\u53e3\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e9b\u5b9e\u73b0\uff0c\u8fd9\u5c06\u4e3a\u6574\u4e2a\u5f00\u6e90\u751f\u6001\u7cfb\u7edf\u7684\u53d1\u5c55\u63d0\u4f9b\u6781\u5927\u7684\u5e2e\u52a9\u3002\\n<br/>\\n\\n### Seata \u793e\u533a\u6700\u65b0\u8fdb\u5c55\\n#### Seata \u793e\u533a\u7b80\u4ecb\\n![\u793e\u533a\u7b80\u4ecb](/img/blog/\u793e\u533a\u7b80\u4ecb.jpg) \\n**\u76ee\u524d\uff0cSeata\u5df2\u7ecf\u5f00\u6e90\u4e864\u79cd\u4e8b\u52a1\u6a21\u5f0f\uff0c\u5305\u62ecAT\u3001TCC\u3001Saga\u548cXA\uff0c\u5e76\u5728\u79ef\u6781\u63a2\u7d22\u5176\u4ed6\u53ef\u884c\u7684\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u3002** Seata\u5df2\u7ecf\u4e0e10\u591a\u4e2a\u4e3b\u6d41\u7684RPC\u6846\u67b6\u548c\u5173\u7cfb\u6570\u636e\u5e93\u8fdb\u884c\u4e86\u96c6\u6210\uff0c\u540c\u65f6\u4e0e20 \u591a\u4e2a\u793e\u533a\u5b58\u5728\u96c6\u6210\u548c\u88ab\u96c6\u6210\u7684\u5173\u7cfb\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5728\u591a\u8bed\u8a00\u4f53\u7cfb\u4e0a\u63a2\u7d22\u9664Java\u4e4b\u5916\u7684\u8bed\u8a00\uff0c\u5982Golang\u3001PHP\u3001Python\u548cJS\u3002\\n\\nSeata\u5df2\u7ecf\u88ab\u51e0\u5343\u5bb6\u5ba2\u6237\u5e94\u7528\u5230\u4e1a\u52a1\u7cfb\u7edf\u4e2d\u3002Seata\u7684\u5e94\u7528\u5df2\u7ecf\u53d8\u5f97\u8d8a\u6765\u8d8a\u6210\u719f\uff0c\u5728\u91d1\u878d\u4e1a\u52a1\u573a\u666f\u4e2d\u4fe1\u94f6\u884c\u548c\u5149\u5927\u94f6\u884c\u4e0e\u793e\u533a\u505a\u4e86\u5f88\u597d\u7684\u5408\u4f5c\uff0c\u5e76\u6210\u529f\u5c06\u5176\u7eb3\u5165\u5230\u6838\u5fc3\u8d26\u52a1\u7cfb\u7edf\u4e2d\u3002\u5728\u91d1\u878d\u573a\u666f\u5bf9\u5fae\u670d\u52a1\u4f53\u7cfb\u7684\u843d\u5730\u662f\u975e\u5e38\u4e25\u82db\u7684\uff0c\u8fd9\u4e5f\u6807\u5fd7\u7740Seata\u7684\u5185\u6838\u6210\u719f\u5ea6\u8fc8\u4e0a\u4e86\u4e00\u4e2a\u65b0\u53f0\u9636\u3002\\n<br/>\\n#### Seata \u6269\u5c55\u751f\u6001\\n![\u6269\u5c55\u751f\u6001](/img/blog/\u6269\u5c55\u751f\u6001.jpg) \\n**Seata\u91c7\u7528\u4e86\u5fae\u5185\u6838\u548c\u63d2\u4ef6\u5316\u7684\u8bbe\u8ba1\uff0c\u5b83\u5728API\u3001\u6ce8\u518c\u914d\u7f6e\u4e2d\u5fc3\u3001\u5b58\u50a8\u6a21\u5f0f\u3001\u9501\u63a7\u5236\u3001SQL\u89e3\u6790\u5668\u3001\u8d1f\u8f7d\u5747\u8861\u3001\u4f20\u8f93\u3001\u534f\u8bae\u7f16\u89e3\u7801\u3001\u53ef\u89c2\u5bdf\u6027\u7b49\u65b9\u9762\u66b4\u9732\u4e86\u4e30\u5bcc\u7684\u6269\u5c55\u70b9\u3002** \u8fd9\u4f7f\u5f97\u4e1a\u52a1\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c\u7075\u6d3b\u7684\u6269\u5c55\u548c\u6280\u672f\u7ec4\u4ef6\u7684\u9009\u62e9\u3002\\n<br/>\\n\\n#### Seata \u5e94\u7528\u6848\u4f8b\\n![\u5e94\u7528\u6848\u4f8b](/img/blog/\u5e94\u7528\u6848\u4f8b.jpg) \\n**\u6848\u4f8b1\uff1a\u4e2d\u822a\u4fe1\u822a\u65c5\u7eb5\u6a2a\u9879\u76ee**  \\n\u4e2d\u822a\u4fe1\u822a\u65c5\u7eb5\u6a2a\u9879\u76ee\u5728Seata 0.2\u7248\u672c\u4e2d\u5f15\u5165Seata\u89e3\u51b3\u673a\u7968\u548c\u4f18\u60e0\u5238\u4e1a\u52a1\u7684\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u5f00\u53d1\u6548\u7387\u3001\u51cf\u5c11\u4e86\u6570\u636e\u4e0d\u4e00\u81f4\u9020\u6210\u7684\u8d44\u635f\u5e76\u63d0\u5347\u4e86\u7528\u6237\u4ea4\u4e92\u4f53\u9a8c\u3002\\n\\n**\u6848\u4f8b2\uff1a\u6ef4\u6ef4\u51fa\u884c\u4e8c\u8f6e\u8f66\u4e8b\u4e1a\u90e8**   \\n\u6ef4\u6ef4\u51fa\u884c\u4e8c\u8f6e\u8f66\u4e8b\u4e1a\u90e8\u5728Seata 0.6.1\u7248\u672c\u4e2d\u5f15\u5165Seata\uff0c\u89e3\u51b3\u4e86\u5c0f\u84dd\u5355\u8f66\u3001\u7535\u52a8\u8f66\u3001\u8d44\u4ea7\u7b49\u4e1a\u52a1\u6d41\u7a0b\u7684\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u4f18\u5316\u4e86\u7528\u6237\u4f7f\u7528\u4f53\u9a8c\u5e76\u51cf\u5c11\u4e86\u8d44\u4ea7\u7684\u635f\u5931\u3002\\n\\n**\u6848\u4f8b3\uff1a\u7f8e\u56e2\u57fa\u7840\u67b6\u6784**   \\n\u7f8e\u56e2\u57fa\u7840\u67b6\u6784\u56e2\u961f\u57fa\u4e8e\u5f00\u6e90\u7684Seata\u9879\u76ee\u5f00\u53d1\u4e86\u5185\u90e8\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848Swan\uff0c\u88ab\u7528\u4e8e\u89e3\u51b3\u7f8e\u56e2\u5185\u90e8\u5404\u4e1a\u52a1\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u3002\\n\\n**\u573a\u666f4\uff1a\u76d2\u9a6c\u5c0f\u9547**   \\n\u76d2\u9a6c\u5c0f\u9547\u5728\u6e38\u620f\u4e92\u52a8\u4e2d\u4f7f\u7528Seata\u63a7\u5236\u5077\u82b1\u7684\u6d41\u7a0b\uff0c\u5f00\u53d1\u5468\u671f\u5927\u5927\u7f29\u77ed\uff0c\u4ece20\u5929\u7f29\u77ed\u5230\u4e865\u5929\uff0c\u6709\u6548\u964d\u4f4e\u4e86\u5f00\u53d1\u6210\u672c\u3002\\n<br/>\\n\\n#### Seata \u4e8b\u52a1\u6a21\u5f0f\u7684\u6f14\u8fdb\\n![\u6a21\u5f0f\u6f14\u8fdb](/img/blog/\u6a21\u5f0f\u6f14\u8fdb.jpg)\\n<br/>\\n\\n#### Seata \u5f53\u524d\u8fdb\u5c55\\n- \u652f\u6301 Oracle\u548c Postgresql \u591a\u4e3b\u952e\u3002\\n- \u652f\u6301 Dubbo3\\n- \u652f\u6301 Spring Boot3\\n- \u652f\u6301 JDK 17\\n- \u652f\u6301 ARM64 \u955c\u50cf\\n- \u652f\u6301\u591a\u6ce8\u518c\u6a21\u578b\\n- \u6269\u5c55\u4e86\u591a\u79cdSQL\u8bed\u6cd5\\n- \u652f\u6301 GraalVM Native Image\\n- \u652f\u6301 Redis lua \u5b58\u50a8\u6a21\u5f0f\\n<br/>\\n\\n### Seata 2.x \u53d1\u5c55\u89c4\u5212\\n![\u53d1\u5c55\u89c4\u5212](/img/blog/\u53d1\u5c55\u89c4\u5212.jpg) \\n\\n\u4e3b\u8981\u5305\u62ec\u4e0b\u9762\u51e0\u4e2a\u65b9\u9762\uff1a\\n- **\u5b58\u50a8/\u534f\u8bae/\u7279\u6027**   \\n\u5b58\u50a8\u6a21\u5f0f\u4e0a\u63a2\u7d22\u5b58\u7b97\u4e0d\u5206\u79bb\u7684Raft\u96c6\u7fa4\u6a21\u5f0f\uff1b\u66f4\u597d\u7684\u4f53\u9a8c\uff0c\u7edf\u4e00\u5f53\u524d4\u79cd\u4e8b\u52a1\u6a21\u5f0f\u7684API\uff1b\u517c\u5bb9GTS\u534f\u8bae\uff1b\u652f\u6301Saga\u6ce8\u89e3\uff1b\u652f\u6301\u5206\u5e03\u5f0f\u9501\u7684\u63a7\u5236\uff1b\u652f\u6301\u4ee5\u6570\u636e\u89c6\u89d2\u7684\u6d1e\u5bdf\u548c\u6cbb\u7406\u3002\\n- **\u751f\u6001**   \\n\u878d\u5408\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u5e93\uff0c\u66f4\u591a\u7684\u670d\u52a1\u6846\u67b6\uff0c\u540c\u65f6\u63a2\u7d22\u56fd\u4ea7\u5316\u4fe1\u521b\u751f\u6001\u7684\u652f\u6301\uff1b\u652f\u6301MQ\u751f\u6001\uff1b\u8fdb\u4e00\u6b65\u5b8c\u5584APM\u7684\u652f\u6301\u3002\\n- **\u89e3\u51b3\u65b9\u6848**   \\n\u89e3\u51b3\u65b9\u6848\u4e0a\u9664\u4e86\u652f\u6301\u5fae\u670d\u52a1\u751f\u6001\u63a2\u7d22\u591a\u4e91\u65b9\u6848\uff1b\u66f4\u8d34\u8fd1\u4e91\u539f\u751f\u7684\u89e3\u51b3\u65b9\u6848\uff1b\u589e\u52a0\u5b89\u5168\u548c\u6d41\u91cf\u9632\u62a4\u80fd\u529b\uff1b\u5b9e\u73b0\u67b6\u6784\u4e0a\u6838\u5fc3\u7ec4\u4ef6\u7684\u81ea\u95ed\u73af\u6536\u655b\u3002\\n- **\u591a\u8bed\u8a00\u751f\u6001**   \\n\u591a\u8bed\u8a00\u751f\u6001\u4e2dJava\u6700\u6210\u719f\uff0c\u5176\u4ed6\u5df2\u652f\u6301\u7684\u7f16\u7a0b\u8bed\u8a00\u7ee7\u7eed\u5b8c\u5584\uff0c\u540c\u65f6\u63a2\u7d22\u4e0e\u8bed\u8a00\u65e0\u5173\u7684Transaction Mesh\u65b9\u6848\u3002\\n- **\u7814\u53d1\u6548\u80fd/\u4f53\u9a8c**    \\n\u63d0\u5347\u6d4b\u8bd5\u7684\u8986\u76d6\u7387\uff0c\u4f18\u5148\u4fdd\u8bc1\u8d28\u91cf\u3001\u517c\u5bb9\u6027\u548c\u7a33\u5b9a\u6027\uff1b\u91cd\u6784\u5b98\u7f51\u6587\u6863\u7ed3\u6784\uff0c\u63d0\u5347\u6587\u6863\u641c\u7d22\u7684\u547d\u4e2d\u7387\uff1b\u5728\u4f53\u9a8c\u4e0a\u7b80\u5316\u8fd0\u7ef4\u90e8\u7f72\uff0c\u5b9e\u73b0\u4e00\u952e\u5b89\u88c5\u548c\u914d\u7f6e\u5143\u6570\u636e\u7b80\u5316\uff1b\u63a7\u5236\u53f0\u652f\u6301\u4e8b\u52a1\u63a7\u5236\u548c\u5728\u7ebf\u5206\u6790\u80fd\u529b\u3002\\n  \\n\u4e00\u53e5\u8bdd\u603b\u7ed32.x \u7684\u89c4\u5212\uff1a**\u66f4\u5927\u7684\u573a\u666f\uff0c\u66f4\u5927\u7684\u751f\u6001\uff0c\u4ece\u53ef\u7528\u5230\u597d\u7528\u3002**\\n<br/>\\n\\n### Seata \u793e\u533a\u8054\u7cfb\u65b9\u5f0f\\n![\u8054\u7cfb\u65b9\u5f0f](/img/blog/\u8054\u7cfb\u65b9\u5f0f.jpg)"},{"id":"/seata-go-1.2.0","metadata":{"permalink":"/zh-cn/blog/seata-go-1.2.0","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-go-1.2.0.md","title":"\u751f\u4ea7\u73af\u5883\u53ef\u7528\u7684 seata-go 1.2.0 \u6765\u4e86\uff01\uff01\uff01","description":"\u751f\u4ea7\u73af\u5883\u53ef\u7528\u7684 seata-go 1.2.0 \u6765\u4e86\uff01\uff01\uff01","date":"2023-06-08T00:00:00.000Z","formattedDate":"2023\u5e746\u67088\u65e5","tags":[],"readingTime":2.22,"hasTruncateMarker":false,"authors":[{"name":"Seata\u793e\u533a"}],"frontMatter":{"title":"\u751f\u4ea7\u73af\u5883\u53ef\u7528\u7684 seata-go 1.2.0 \u6765\u4e86\uff01\uff01\uff01","author":"Seata\u793e\u533a","keywords":["seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001golang\u30011.2.0"],"description":"\u751f\u4ea7\u73af\u5883\u53ef\u7528\u7684 seata-go 1.2.0 \u6765\u4e86\uff01\uff01\uff01","date":"2023/06/08"},"prevItem":{"title":"Seata\uff1a\u8fde\u63a5\u6570\u636e\u4e0e\u5e94\u7528","permalink":"/zh-cn/blog/seata-connect-data-and-application"},"nextItem":{"title":"6\u5927\u8bfe\u9898\u73b0\u5df2\u5f00\u653e\u6311\u9009 | \u6b22\u8fce\u62a5\u540d Seata \u5f00\u6e90\u4e4b\u590f","permalink":"/zh-cn/blog/iscas2023"}},"content":"## \u751f\u4ea7\u73af\u5883\u53ef\u7528\u7684 seata-go 1.2.0 \u6765\u4e86\uff01\uff01\uff01\\n\\nSeata \u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u63d0\u4f9b\u9ad8\u6027\u80fd\u548c\u7b80\u5355\u6613\u7528\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u670d\u52a1\u3002\\n\\n### \u53d1\u5e03\u6982\u89c8\\nSeata-go 1.2.0 \u7248\u672c\u652f\u6301 XA \u6a21\u5f0f\u3002XA \u534f\u8bae\u662f\u7531 X/Open \u7ec4\u7ec7\u63d0\u51fa\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5904\u7406\u89c4\u8303\uff0c\u5176\u4f18\u70b9\u662f\u5bf9\u4e1a\u52a1\u4ee3\u7801\u65e0\u4fb5\u5165\u3002\u5f53\u524d Seata-go \u7684 XA \u6a21\u5f0f\u652f\u6301 MySQL \u6570\u636e\u5e93\u3002\u81f3\u6b64\uff0cseata-go \u5df2\u7ecf\u96c6\u9f50 AT\u3001TCC\u3001Saga \u548c XA \u56db\u79cd\u4e8b\u52a1\u6a21\u5f0f\uff0c\u5b8c\u6210\u4e86\u4e0e Seata Java \u7684\u529f\u80fd\u5bf9\u9f50\u3002 XA \u6a21\u5f0f\u7684\u4e3b\u8981\u529f\u80fd:\\n- \u652f\u6301\u4e86 XA \u6570\u636e\u6e90\u4ee3\u7406 \\n- \u652f\u6301\u4e86 XA \u4e8b\u52a1\u6a21\u5f0f  \\nXA \u76f8\u5173\u7684 samples \u53ef\u4ee5\u53c2\u8003\u793a\u4f8b\uff1ahttps://github.com/seata/seata-go-samples/tree/main/xa\\n\\n### feature\uff1a\\n\\n- [[#467](https://github.com/seata/seata-go/pull/467)] \u5b9e\u73b0 XA \u6a21\u5f0f\u652f\u6301 MySQL\\n- [[#534](https://github.com/seata/seata-go/pull/534)] \u652f\u6301 session \u7684\u8d1f\u8f7d\u5747\u8861\\n\\n### bugfix\uff1a\\n\\n- [[#540](https://github.com/seata/seata-go/pull/540)] \u4fee\u590d\u521d\u59cb\u5316 xa \u6a21\u5f0f\u7684 bug\\n- [[#545](https://github.com/seata/seata-go/pull/545)] \u4fee\u590d xa \u6a21\u5f0f\u83b7\u53d6 db \u7248\u672c\u53f7\u7684 bug\\n- [[#548](https://github.com/seata/seata-go/pull/548)] \u4fee\u590d\u542f\u52a8 xa \u4f1a\u5931\u8d25\u7684 bug\\n- [[#556](https://github.com/seata/seata-go/pull/556)] \u4fee\u590d xa \u6570\u636e\u6e90\u7684 bug\\n- [[#562](https://github.com/seata/seata-go/pull/562)] \u4fee\u590d\u63d0\u4ea4 xa \u5168\u5c40\u4e8b\u52a1\u7684 bug\\n- [[#564](https://github.com/seata/seata-go/pull/564)] \u4fee\u590d\u63d0\u4ea4 xa \u5206\u652f\u4e8b\u52a1\u7684 bug\\n- [[#566](https://github.com/seata/seata-go/pull/566)] \u4fee\u590d\u4f7f\u7528 xa \u6570\u636e\u6e90\u6267\u884c\u672c\u5730\u4e8b\u52a1\u7684 bug\\n\\n### optimize:\\n\\n- [[#523](https://github.com/seata/seata-go/pull/523)] \u4f18\u5316 CI \u6d41\u7a0b\\n- [[#525](https://github.com/seata/seata-go/pull/456)] \u5c06 jackson \u5e8f\u5217\u5316\u91cd\u547d\u540d\u4e3a json\\n- [[#532](https://github.com/seata/seata-go/pull/532)] \u79fb\u9664\u91cd\u590d\u7684\u4ee3\u7801\\n- [[#536](https://github.com/seata/seata-go/pull/536)] \u4f18\u5316 go import \u4ee3\u7801\u683c\u5f0f\\n- [[#554](https://github.com/seata/seata-go/pull/554)] \u4f18\u5316 xa \u6a21\u5f0f\u7684\u6027\u80fd\\n- [[#561](https://github.com/seata/seata-go/pull/561)] \u4f18\u5316 xa \u6a21\u5f0f\u7684\u65e5\u5fd7\u8f93\u51fa\\n\\n### test:\\n\\n- [[#535](https://github.com/seata/seata-go/pull/535)] \u6dfb\u52a0\u96c6\u6210\u6d4b\u8bd5\\n\\n### doc:\\n- [[#550](https://github.com/seata/seata-go/pull/550)] \u6dfb\u52a0 1.2.0 \u7248\u672c\u7684\u6539\u52a8\u65e5\u5fd7\\n\\n\\n### contributors:\\n\\nThanks to these contributors for their code commits. Please report an unintended omission.\\n\\n- [georgehao](https://github.com/georgehao)\\n- [luky116](https://github.com/luky116)\\n- [jasondeng1997](https://github.com/jasondeng1997)\\n- [106umao](https://github.com/106umao)\\n- [wang1309](https://github.com/wang1309)\\n- [iSuperCoder](https://github.com/iSuperCoder)\\n- [Charlie17Li](https://github.com/Charlie17Li)\\n- [Code-Fight](https://github.com/Code-Fight)\\n- [Kirhaku](https://github.com/Kirhaku)\\n- [Vaderkai](https://github.com/VaderKai)\\n\\n\u540c\u65f6\uff0c\u6211\u4eec\u6536\u5230\u4e86\u793e\u533a\u53cd\u9988\u7684\u5f88\u591a\u6709\u4ef7\u503c\u7684issue\u548c\u5efa\u8bae\uff0c\u975e\u5e38\u611f\u8c22\u5927\u5bb6\u3002\\n\\n\\n#### Link\\n\\n- http://github.com/seata/seata\\n- https://github.com/seata/seata-php\\n- https://github.com/seata/seata-js\\n- https://github.com/seata/seata-go   \\n  **Samples\uff1a**\\n- https://github.com/seata/seata-samples\\n- https://github.com/seata/seata-go-samples   \\n  **\u5b98\u7f51\uff1a**   \\n- https://seata.io/"},{"id":"/iscas2023","metadata":{"permalink":"/zh-cn/blog/iscas2023","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/iscas2023.md","title":"6\u5927\u8bfe\u9898\u73b0\u5df2\u5f00\u653e\u6311\u9009 | \u6b22\u8fce\u62a5\u540d Seata \u5f00\u6e90\u4e4b\u590f","description":"\u6b22\u8fce\u5927\u5bb6\u62a5\u540dSeata \u5f00\u6e90\u4e4b\u590f2023\u8bfe\u9898","date":"2023-05-12T00:00:00.000Z","formattedDate":"2023\u5e745\u670812\u65e5","tags":[],"readingTime":10.575,"hasTruncateMarker":false,"authors":[{"name":"Seata\u793e\u533a"}],"frontMatter":{"title":"6\u5927\u8bfe\u9898\u73b0\u5df2\u5f00\u653e\u6311\u9009 | \u6b22\u8fce\u62a5\u540d Seata \u5f00\u6e90\u4e4b\u590f","author":"Seata\u793e\u533a","date":"2023/05/12","keywords":["\u5f00\u6e90\u4e4b\u590f\u3001seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"]},"prevItem":{"title":"\u751f\u4ea7\u73af\u5883\u53ef\u7528\u7684 seata-go 1.2.0 \u6765\u4e86\uff01\uff01\uff01","permalink":"/zh-cn/blog/seata-go-1.2.0"},"nextItem":{"title":"Seata 1.6.0 \u91cd\u78c5\u53d1\u5e03\uff0c\u5927\u5e45\u63d0\u5347\u6027\u80fd","permalink":"/zh-cn/blog/seata-1.6.0"}},"content":"###  \u6b22\u8fce\u5927\u5bb6\u62a5\u540dSeata \u5f00\u6e90\u4e4b\u590f2023\u8bfe\u9898\\n\u5f00\u6e90\u4e4b\u590f 2023 \u5b66\u751f\u62a5\u540d\u671f\u4e3a **4 \u6708 29 \u65e5-6\u67084\u65e5**\uff0c\u6b22\u8fce\u62a5\u540dSeata 2023 \u8bfe\u9898\uff01\u5728\u8fd9\u91cc\uff0c\u60a8\u5c06\u6709\u673a\u4f1a\u6df1\u5165\u63a2\u8ba8\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u7406\u8bba\u548c\u5e94\u7528\uff0c\u5e76\u4e0e\u6765\u81ea\u4e0d\u540c\u80cc\u666f\u7684\u540c\u5b66\u4e00\u8d77\u5408\u4f5c\u5b8c\u6210\u5b9e\u8df5\u9879\u76ee\u3002\u6211\u4eec\u671f\u5f85\u7740\u60a8\u7684\u79ef\u6781\u53c2\u4e0e\u548c\u8d21\u732e\uff0c\u5171\u540c\u63a8\u52a8\u5206\u5e03\u5f0f\u4e8b\u52a1\u9886\u57df\u7684\u53d1\u5c55\u3002\\n\\n![summer2023-1](/img/blog/summer2023-1.jpg)\\n\\n### \u5f00\u6e90\u4e4b\u590f2023 \\n\u5f00\u6e90\u4e4b\u590f\u662f\u7531\u4e2d\u79d1\u9662\u8f6f\u4ef6\u6240\u201c\u5f00\u6e90\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u70b9\u4eae\u8ba1\u5212\u201d\u53d1\u8d77\u5e76\u957f\u671f\u652f\u6301\u7684\u4e00\u9879\u6691\u671f\u5f00\u6e90\u6d3b\u52a8\uff0c\u65e8\u5728\u9f13\u52b1\u5728\u6821\u5b66\u751f\u79ef\u6781\u53c2\u4e0e\u5f00\u6e90\u8f6f\u4ef6\u7684\u5f00\u53d1\u7ef4\u62a4\uff0c\u57f9\u517b\u548c\u53d1\u6398\u66f4\u591a\u4f18\u79c0\u7684\u5f00\u53d1\u8005\uff0c\u4fc3\u8fdb\u4f18\u79c0\u5f00\u6e90\u8f6f\u4ef6\u793e\u533a\u7684\u84ec\u52c3\u53d1\u5c55\uff0c\u52a9\u529b\u5f00\u6e90\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u5efa\u8bbe\u3002\\n\\n\u53c2\u4e0e\u5b66\u751f\u901a\u8fc7\u8fdc\u7a0b\u7ebf\u4e0a\u534f\u4f5c\u65b9\u5f0f\uff0c\u914d\u6709\u8d44\u6df1\u5bfc\u5e08\u6307\u5bfc\uff0c\u53c2\u4e0e\u5230\u5f00\u6e90\u793e\u533a\u5404\u7ec4\u7ec7\u9879\u76ee\u5f00\u53d1\u4e2d\u5e76\u6536\u83b7\u5956\u91d1\u3001\u793c\u54c1\u4e0e\u8bc1\u4e66\u3002**\u8fd9\u4e9b\u6536\u83b7\uff0c\u4e0d\u4ec5\u4ec5\u662f\u672a\u6765\u6bd5\u4e1a\u7b80\u5386\u4e0a\u6d53\u58a8\u91cd\u5f69\u7684\u4e00\u7b14\uff0c\u66f4\u662f\u8fc8\u5411\u9876\u5c16\u5f00\u53d1\u8005\u7684\u95ea\u4eae\u8d77\u70b9\uff0c\u53ef\u4ee5\u8bf4\u975e\u5e38\u503c\u5f97\u4e00\u8bd5\u3002**  \u6bcf\u4e2a\u9879\u76ee\u96be\u5ea6\u5206\u4e3a\u57fa\u7840\u548c\u8fdb\u9636\u4e24\u6863\uff0c\u5bf9\u5e94\u5b66\u751f\u7ed3\u9879\u5956\u91d1\u5206\u522b\u4e3a\u7a0e\u524d\u4eba\u6c11\u5e01 8000 \u5143\u548c\u7a0e\u524d\u4eba\u6c11\u5e01 12000 \u5143\u3002\\n\\n### Seata\u793e\u533a\u4ecb\u7ecd \\n**Seata** \u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0cGitHub\u83b7\u5f97\u8d85\u8fc723K+ Starts\u81f4\u529b\u4e8e\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u63d0\u4f9b\u9ad8\u6027\u80fd\u548c\u7b80\u5355\u6613\u7528\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u670d\u52a1\u3002\u5728 Seata \u5f00\u6e90\u4e4b\u524d\uff0cSeata \u5728\u963f\u91cc\u5185\u90e8\u4e00\u76f4\u626e\u6f14\u7740\u5206\u5e03\u5f0f\u6570\u636e\u4e00\u81f4\u6027\u7684\u4e2d\u95f4\u4ef6\u89d2\u8272\uff0c\u51e0\u4e4e\u6bcf\u7b14\u4ea4\u6613\u90fd\u8981\u4f7f\u7528Seata\uff0c\u5386\u7ecf\u53cc11\u6d2a\u8352\u6d41\u91cf\u7684\u6d17\u793c\uff0c\u5bf9\u4e1a\u52a1\u8fdb\u884c\u4e86\u6709\u529b\u7684\u6280\u672f\u652f\u6491\u3002\\n\\n### Seata\u793e\u533a\u5f00\u6e90\u4e4b\u590f2023\u9879\u76ee\u8bfe\u9898\u6c47\u603b  \\nSeata\u793e\u533a\u4e3a\u5f00\u6e90\u4e4b\u590f2023\u7ec4\u59d4\u4f1a\u63a8\u83506\u9879\u7cbe\u9009\u9879\u76ee\u8bfe\u9898\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee\u4ee5\u4e0b\u94fe\u63a5\u8fdb\u884c\u9009\u62a5\uff1a   \\nhttps://summer-ospp.ac.cn/org/orgdetail/064c15df-705c-483a-8fc8-02831370db14?lang=zh   \\n\u8bf7\u53ca\u65f6\u4e0e\u5404\u5bfc\u5e08\u6c9f\u901a\u5e76\u51c6\u5907\u9879\u76ee\u7533\u8bf7\u6750\u6599\uff0c\u5e76\u767b\u5f55\u5b98\u65b9\u6ce8\u518c\u7533\u62a5\uff08\u4ee5\u4e0b\u8bfe\u9898\u987a\u5e8f\u4e0d\u5206\u5148\u540e\uff09\uff1a\\n![seata2023-2](/img/blog/summer2023-2.png)\\n\\n#### \u9879\u76ee\u4e00: \u5b9e\u73b0\u7528\u4e8e\u670d\u52a1\u53d1\u73b0\u548c\u6ce8\u518c\u7684NamingServer\\n\\n**\u96be\u5ea6\uff1a** \u8fdb\u9636/Advanced\\n\\n**\u9879\u76ee\u793e\u533a\u5bfc\u5e08\uff1a** \u9648\u5065\u658c\\n\\n**\u5bfc\u5e08\u8054\u7cfb\u90ae\u7bb1\uff1a** 364176773@qq.com\\n\\n**\u9879\u76ee\u7b80\u8ff0\uff1a**   \\n\u76ee\u524dseata\u7684\u670d\u52a1\u66b4\u9732\u53ca\u53d1\u73b0\u4e3b\u8981\u4f9d\u8d56\u4e8e\u7b2c\u4e09\u65b9\u6ce8\u518c\u4e2d\u5fc3\uff0c\u968f\u7740\u9879\u76ee\u7684\u6f14\u8fdb\u53d1\u5c55\uff0c\u5e26\u6765\u4e86\u989d\u5916\u7684\u5b66\u4e60\u4f7f\u7528\u6210\u672c\uff0c\u800c\u4e1a\u5185\u4e3b\u6d41\u5177\u6709\u670d\u52a1\u7aef\u7684\u4e2d\u95f4\u4ef6\u5927\u591a\u90fd\u5f00\u59cb\u6f14\u8fdb\u81ea\u8eab\u7684\u670d\u52a1\u81ea\u95ed\u73af\u548c\u63a7\u5236\u53ca\u63d0\u4f9b\u4e8e\u670d\u52a1\u7aef\u66f4\u9ad8\u5951\u5408\u5ea6\u548c\u53ef\u9760\u6027\u7684\u7ec4\u4ef6\u6216\u529f\u80fd\u5982kafka \u7684KRaft\uff0crocketmq\u7684NameServer\uff0cclickhouse\u7684ClickHouse Keeper\u7b49.\u6545\u4e3a\u4e86\u89e3\u51b3\u5982\u4e0a\u95ee\u9898\u548c\u67b6\u6784\u6f14\u8fdb\u8981\u6c42,seata\u9700\u8981\u6784\u5efa\u81ea\u8eab\u7684nameserver\u6765\u4fdd\u8bc1\u66f4\u52a0\u7a33\u5b9a\u53ef\u9760\u3002\\n\\n**\u9879\u76ee\u94fe\u63a5\uff1a**\\nhttps://summer-ospp.ac.cn/org/prodetail/230640380?list=org&navpage=org\\n<br/>\\n<br/>\\n\\n#### \u9879\u76ee\u4e8c: \u5728seata-go\u4e2d\u5b9e\u73b0saga\u4e8b\u52a1\u6a21\u5f0f\\n\\n**\u96be\u5ea6\uff1a** \u8fdb\u9636/Advanced\\n\\n**\u9879\u76ee\u793e\u533a\u5bfc\u5e08\uff1a** \u5218\u6708\u8d22\\n\\n**\u5bfc\u5e08\u8054\u7cfb\u90ae\u7bb1\uff1a** luky116@apache.org\\n\\n**\u9879\u76ee\u7b80\u8ff0\uff1a**\\nSaga\u6a21\u5f0f\u662fSEATA\u63d0\u4f9b\u7684\u957f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u5728Saga\u6a21\u5f0f\u4e2d\uff0c\u4e1a\u52a1\u6d41\u7a0b\u4e2d\u6bcf\u4e2a\u53c2\u4e0e\u8005\u90fd\u63d0\u4ea4\u672c\u5730\u4e8b\u52a1\uff0c\u5f53\u51fa\u73b0\u67d0\u4e00\u4e2a\u53c2\u4e0e\u8005\u5931\u8d25\u5219\u8865\u507f\u524d\u9762\u5df2\u7ecf\u6210\u529f\u7684\u53c2\u4e0e\u8005\uff0c\u4e00\u9636\u6bb5\u6b63\u5411\u670d\u52a1\u548c\u4e8c\u9636\u6bb5\u8865\u507f\u670d\u52a1\u90fd\u7531\u4e1a\u52a1\u5f00\u53d1\u5b9e\u73b0\u3002Seata-go \u4e2d\u5f53\u524d\u6ca1\u6709\u652f\u6301saga\u6a21\u5f0f\uff0c\u5e0c\u671b\u540e\u9762\u53c2\u8003Java\u7248\u672c\u7684\u5b9e\u73b0\u80fd\u5c06\u8be5\u529f\u80fd\u652f\u6301\u4e0a\u3002\\n\\n**\u9879\u76ee\u94fe\u63a5\uff1a**\\nhttps://summer-ospp.ac.cn/org/prodetail/230640382?list=org&navpage=org\\n<br/>\\n<br/>\\n\\n#### \u9879\u76ee\u4e09: seata saga\u6a21\u5f0f\u4ea7\u54c1\u5316\u80fd\u529b\u63d0\u5347\\n**\u96be\u5ea6\uff1a** \u8fdb\u9636/Advanced\\n\\n**\u9879\u76ee\u793e\u533a\u5bfc\u5e08\uff1a** \u674e\u5b97\u6770\\n\\n**\u5bfc\u5e08\u8054\u7cfb\u90ae\u7bb1\uff1a** leezongjie@163.com\\n\\n**\u9879\u76ee\u7b80\u8ff0\uff1a**\\nsaga\u4f5c\u4e3a\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\uff0c\u5728\u957f\u4e8b\u52a1\u4e0a\u5e94\u7528\u5c24\u5176\u5e7f\u6cdb\uff0cseata\u4e5f\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u72b6\u6001\u673a\u5b9e\u73b0\u3002\u968f\u7740\u4e1a\u52a1\u7684\u4e0d\u65ad\u53d1\u5c55\u548c\u63a5\u5165\uff0c\u5bf9seata\u63d0\u51fa\u4e86\u66f4\u9ad8\u7684\u8981\u6c42\uff0c\u6211\u4eec\u9700\u8981\u652f\u6301\u6d41\u5f0fsaga \u7f16\u6392\uff0c\u5bf9\u5f53\u524d\u72b6\u6001\u673a\u7684\u5b9e\u73b0\u8fdb\u884c\u4f18\u5316\u548c\u6269\u5c55\uff0c\u8fdb\u4e00\u6b65\u670d\u52a1\u4e1a\u52a1\u3002\\n\\n**\u9879\u76ee\u94fe\u63a5\uff1a**\\nhttps://summer-ospp.ac.cn/org/prodetail/230640415?list=org&navpage=org\\n<br/>\\n<br/>\\n\\n#### \u9879\u76ee\u56db:  \u589e\u52a0\u63a7\u5236\u53f0\u4e8b\u52a1\u63a7\u5236\u80fd\u529b\\n**\u96be\u5ea6\uff1a** \u8fdb\u9636/Advanced\\n\\n**\u9879\u76ee\u793e\u533a\u5bfc\u5e08\uff1a** \u738b\u826f\\n\\n**\u5bfc\u5e08\u8054\u7cfb\u90ae\u7bb1\uff1a** 841369634@qq.com\\n\\n**\u9879\u76ee\u7b80\u8ff0\uff1a**\\n\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u5b58\u5728\u975e\u5e38\u591a\u7684\u5f02\u5e38\u60c5\u51b5\uff0c\u8fd9\u4e9b\u5f02\u5e38\u60c5\u51b5\u5f80\u5f80\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u65e0\u6cd5\u7ee7\u7eed\u8fd0\u884c\u3002\u800c\u8fd9\u4e9b\u5f02\u5e38\u5f80\u5f80\u9700\u8981\u4eba\u5de5\u4ecb\u5165\u6392\u67e5\u539f\u56e0\u5e76\u6392\u9664\u6545\u969c\uff0c\u624d\u80fd\u591f\u4f7f\u7cfb\u7edf\u7ee7\u7eed\u6b63\u5e38\u8fd0\u884c\u3002\u867d\u7136seata \u63d0\u4f9b\u4e86\u63a7\u5236\u53f0\u67e5\u8be2\u4e8b\u52a1\u6570\u636e\uff0c\u4f46\u8fd8\u672a\u63d0\u4f9b\u4efb\u4f55\u4e8b\u52a1\u63a7\u5236\u80fd\u529b\uff0c\u5e2e\u52a9\u6392\u9664\u6545\u969c\u3002\u6240\u4ee5\uff0c\u672c\u8bfe\u9898\u4e3b\u8981\u662f\u5728seata\u670d\u52a1\u7aef\u63a7\u5236\u53f0\u4e0a\uff0c\u6dfb\u52a0\u4e8b\u52a1\u63a7\u5236\u80fd\u529b\u3002\\n\\n**\u9879\u76ee\u94fe\u63a5\uff1a**\\nhttps://summer-ospp.ac.cn/org/prodetail/230640423?list=org&navpage=org\\n<br/>\\n<br/>\\n\\n#### \u9879\u76ee\u4e94:  \u63d0\u9ad8\u5355\u6d4b\u8986\u76d6\u7387\u548c\u5efa\u7acb\u96c6\u6210\u6d4b\u8bd5\\n**\u96be\u5ea6\uff1a** \u57fa\u7840/Basic\\n\\n**\u9879\u76ee\u793e\u533a\u5bfc\u5e08\uff1a** \u5f20\u5609\u4f1f\\n\\n**\u5bfc\u5e08\u8054\u7cfb\u90ae\u7bb1\uff1a** 349071347@qq.com\\n\\n**\u9879\u76ee\u7b80\u8ff0\uff1a**\\n\u4e3a\u4e86\u8fdb\u4e00\u6b65\u63d0\u9ad8\u9879\u76ee\u7684\u8d28\u91cf\u4ee5\u53ca\u7a33\u5b9a\u6027, \u9700\u8981\u8fdb\u4e00\u6b65\u63d0\u5347\u9879\u76ee\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\u4ee5\u53ca\u52a0\u5165\u96c6\u6210\u6d4b\u8bd5\u6765\u6a21\u62df\u751f\u4ea7\u4e2d\u4e0d\u540c\u7684\u573a\u666f. \u96c6\u6210\u6d4b\u8bd5\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u6a21\u62dfclient\u4e0eserver\u7684\u4ea4\u4e92\u8fc7\u7a0b, \u800c\u975e\u5355\u4e00\u7684\u5bf9\u67d0\u4e2a\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\u3002\\n\\n**\u9879\u76ee\u94fe\u63a5\uff1a**\\nhttps://summer-ospp.ac.cn/org/prodetail/230640424?list=org&navpage=org\\n<br/>\\n<br/>\\n\\n#### \u9879\u76ee\u516d: \u5b9e\u73b0Seata\u8fd0\u7ef4ctl\u5de5\u5177\\n**\u96be\u5ea6\uff1a** \u8fdb\u9636/Advanced\\n\\n**\u9879\u76ee\u793e\u533a\u5bfc\u5e08\uff1a** \u5b63\u654f\\n\\n**\u5bfc\u5e08\u8054\u7cfb\u90ae\u7bb1\uff1a**  jimin.jm@alibaba-inc.com\\n\\n**\u9879\u76ee\u7b80\u8ff0\uff1a** \u8fd0\u7ef4ctl\u547d\u4ee4\u5728Seata\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u5b83\u662fSeata\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7ba1\u7406\u548c\u64cd\u4f5cSeata\u7684\u5404\u79cd\u7ec4\u4ef6\u3002\u8fd0\u7ef4ctl\u547d\u4ee4\u53ef\u4ee5\u8ba9\u6211\u4eec\u5feb\u901f\u5730\u542f\u52a8\u3001\u505c\u6b62\u548c\u7ba1\u7406Seata\u670d\u52a1\uff0c\u5b9a\u4f4d\u548c\u89e3\u51b3\u95ee\u9898\u3002\u6b64\u5916\uff0c\u8fd0\u7ef4ctl \u547d\u4ee4\u8fd8\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u6307\u4ee4\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u65b9\u4fbf\u5730\u68c0\u67e5Seata\u7684\u5065\u5eb7\u72b6\u6001\u3001\u6a21\u62df\u4e8b\u52a1\u548c\u6253\u5370\u5bfc\u51fa\u914d\u7f6e\u4fe1\u606f\u7b49\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u6211\u4eec\u7684\u5de5\u4f5c\u6548\u7387\u548c\u8fd0\u7ef4\u4f53\u9a8c\u3002\\n\\n\u4ee5\u4e0b\u662f\u5bf9\u5b9e\u73b0\u5b9a\u5236ctl\u8fd0\u7ef4\u547d\u4ee4\u884c\u7684\u4e00\u4e9b\u5efa\u8bae\uff1a \\n- \u501f\u9274\u5176\u4ed6\u5f00\u6e90\u9879\u76ee\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u6bd4\u5982kubectl\uff0chelm\u7b49\uff0c\u5e76\u6839\u636eSeata\u7684\u7279\u70b9\u548c\u9700\u6c42\u8fdb\u884c\u5b9a\u5236\u3002\\n- \u5c06\u5e38\u7528\u7684\u8fd0\u7ef4\u64cd\u4f5c\u76f4\u63a5\u5c01\u88c5\u8fdb\u547d\u4ee4\u884c\uff0c\u51cf\u5c11\u7528\u6237\u7684\u624b\u52a8\u64cd\u4f5c\u3002\\n- \u8003\u8651\u4f7f\u7528\u53cb\u597d\u7684\u547d\u4ee4\u548c\u53c2\u6570\u540d\u79f0\uff0c\u5c06\u547d\u4ee4\u884c\u8bbe\u8ba1\u5f97\u6613\u4e8e\u7406\u89e3\u548c\u8bb0\u5fc6\u3002\\n- \u63d0\u4f9b\u8be6\u7ec6\u7684\u5e2e\u52a9\u6587\u6863\u548c\u793a\u4f8b\uff0c\u5e2e\u52a9\u7528\u6237\u5feb\u901f\u4e0a\u624b\u548c\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u5404\u79cd\u53c2\u6570\u548c\u9009\u9879\u3002\\n- \u8003\u8651\u547d\u4ee4\u884c\u7684\u8de8\u5e73\u53f0\u652f\u6301\uff0c\u4f8b\u5982\u652f\u6301Windows\u3001Linux\u548cMacOS\u7b49\u64cd\u4f5c\u7cfb\u7edf\u3002\\n\u4e00\u6b3e\u597d\u7684ctl\u547d\u4ee4\u884c\u5e94\u8be5\u662f\u6613\u7528\u3001\u7075\u6d3b\u3001\u53ef\u5b9a\u5236\u3001\u5065\u58ee\u548c\u6613\u7ef4\u62a4\u7684\u3002\\n\\n\u9879\u76ee\u94fe\u63a5\uff1ahttps://summer-ospp.ac.cn/org/prodetail/230640431?list=org&navpage=org\\n<br/>\\n<br/>\\n\\n###  \u5982\u4f55\u53c2\u4e0e\u5f00\u6e90\u4e4b\u590f2023\u5e76\u5feb\u901f\u9009\u5b9a\u9879\u76ee\uff1f  \\n**\u6b22\u8fce\u901a\u8fc7\u4e0a\u65b9\u8054\u7cfb\u65b9\u5f0f\uff0c\u4e0e\u5404\u5bfc\u5e08\u6c9f\u901a\u5e76\u51c6\u5907\u9879\u76ee\u7533\u8bf7\u6750\u6599\u3002**\\n\\n\u8bfe\u9898\u53c2\u4e0e\u671f\u95f4\uff0c\u5b66\u751f\u53ef\u4ee5\u5728\u4e16\u754c\u4efb\u4f55\u5730\u65b9\u7ebf\u4e0a\u5de5\u4f5c\uff0cSeata\u76f8\u5173\u9879\u76ee\u7ed3\u9879\u9700\u8981\u5728**9\u670830\u65e5**\u524d\u4ee5 PR \u7684\u5f62\u5f0f\u63d0\u4ea4\u5230Seata\u793e\u533a\u4ed3\u5e93\u4e2d\u5e76\u5b8c\u6210\u5408\u5e76\uff0c\u8bf7\u52a1\u5fc5\u5c3d\u65e9\u51c6\u5907\u3002\\n![seata2023-3](/img/blog/summer2023-3.png)\\n\\n**\u9700\u8981\u5728\u8bfe\u9898\u671f\u95f4\u7b2c\u4e00\u65f6\u95f4\u83b7\u53d6\u5bfc\u5e08\u53ca\u5176\u4ed6\u4fe1\u606f,\u53ef\u626b\u7801\u8fdb\u5165\u9489\u9489\u7fa4\u4ea4\u6d41** \u2014\u2014\u4e86\u89e3Seata\u793e\u533a\u5404\u9886\u57df\u9879\u76ee\u3001\u7ed3\u8bc6Seata\u793e\u533a\u5f00\u6e90\u5bfc\u5e08\uff0c\u4ee5\u52a9\u529b\u540e\u7eed\u7533\u8bf7\u3002\\n<br/>\\n<img src=\\"/img/blog/summer2023-4.jpg\\" height=\\"290\\" width=\\"250\\"/>\\n<br/>\\n\\n####  \u53c2\u8003\u8d44\u6599\uff1a\\n**Seata\u7f51\u7ad9 :**  https://seata.io/\\n\\n**Seata GitHub :** https://github.com/seata\\n\\n**\u5f00\u6e90\u4e4b\u590f\u5b98\u7f51\uff1a** https://summer-ospp.ac.cn/org/orgdetail/ab188e59-fab8-468f-bc89-bdc2bd8b5e64?lang=zh\\n\\n\u5982\u679c\u540c\u5b66\u4eec\u5bf9\u5fae\u670d\u52a1\u5176\u4ed6\u9886\u57df\u9879\u76ee\u611f\u5174\u8da3\uff0c\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u7533\u8bf7\uff0c\u4f8b\u5982\uff1a\\n\\n- \u5bf9\u4e8e**\u5fae\u670d\u52a1\u914d\u7f6e\u6ce8\u518c\u4e2d\u5fc3**\u6709\u5174\u8da3\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u586b\u62a5[Nacos \u5f00\u6e90\u4e4b\u590f](https://nacos.io/zh-cn/blog/iscas2023.html)\uff1b\\n- \u5bf9\u4e8e**\u5fae\u670d\u52a1\u6846\u67b6\u548cRPC\u6846\u67b6**\u6709\u5174\u8da3\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u586b\u62a5[Spring Cloud Alibaba \u5f00\u6e90\u4e4b\u590f](https://summer-ospp.ac.cn/org/orgdetail/41d68399-ed48-4d6d-9d4d-3ff4128dc132?lang=zh) \u548c [Dubbo \u5f00\u6e90\u4e4b\u590f](https://summer-ospp.ac.cn/org/orgdetail/a7f6e2ad-4acc-47f8-9471-4e54b9a166a6?lang=zh) \uff1b\\n- \u5bf9\u4e8e**\u4e91\u539f\u751f\u7f51\u5173**\u6709\u5174\u8da3\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u586b\u62a5[Higress \u5f00\u6e90\u4e4b\u590f](https://higress.io/zh-cn/blog/ospp-2023)\uff1b\\n- \u5bf9\u4e8e**\u5206\u5e03\u5f0f\u9ad8\u53ef\u7528\u9632\u62a4**\u6709\u5174\u8da3\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u586b\u62a5 [Sentinel \u5f00\u6e90\u4e4b\u590f](https://summer-ospp.ac. cn/org/orgdetail/5e879522-bd90-4a8b-bf8b-b11aea48626b?lang=zh) \uff1b\\n- \u5bf9\u4e8e**\u5fae\u670d\u52a1\u6cbb\u7406**\u6709\u5174\u8da3\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u586b\u62a5  [OpenSergo \u5f00\u6e90\u4e4b\u590f](https://summer-ospp.ac. cn/org/orgdetail/aaff4eec-11b1-4375-997d-5eea8f51762b?lang=zh)\u3002"},{"id":"/seata-1.6.0","metadata":{"permalink":"/zh-cn/blog/seata-1.6.0","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-1.6.0.md","title":"Seata 1.6.0 \u91cd\u78c5\u53d1\u5e03\uff0c\u5927\u5e45\u63d0\u5347\u6027\u80fd","description":"Seata 1.6.0 \u91cd\u78c5\u53d1\u5e03\uff0c\u5927\u5e45\u63d0\u5347\u6027\u80fd","date":"2022-12-17T00:00:00.000Z","formattedDate":"2022\u5e7412\u670817\u65e5","tags":[],"readingTime":6.575,"hasTruncateMarker":false,"authors":[{"name":"Seata\u793e\u533a"}],"frontMatter":{"title":"Seata 1.6.0 \u91cd\u78c5\u53d1\u5e03\uff0c\u5927\u5e45\u63d0\u5347\u6027\u80fd","author":"Seata\u793e\u533a","keywords":["seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u30011.6.0"],"description":"Seata 1.6.0 \u91cd\u78c5\u53d1\u5e03\uff0c\u5927\u5e45\u63d0\u5347\u6027\u80fd","date":"2022/12/17"},"prevItem":{"title":"6\u5927\u8bfe\u9898\u73b0\u5df2\u5f00\u653e\u6311\u9009 | \u6b22\u8fce\u62a5\u540d Seata \u5f00\u6e90\u4e4b\u590f","permalink":"/zh-cn/blog/iscas2023"},"nextItem":{"title":"Seata 1.5.2 \u91cd\u78c5\u53d1\u5e03\uff0c\u652f\u6301xid\u8d1f\u8f7d\u5747\u8861","permalink":"/zh-cn/blog/seata-1.5.2"}},"content":"### Seata 1.6.0 \u91cd\u78c5\u53d1\u5e03\uff0c\u5927\u5e45\u63d0\u5347\u6027\u80fd\\n\\nSeata \u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u63d0\u4f9b\u9ad8\u6027\u80fd\u548c\u7b80\u5355\u6613\u7528\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u670d\u52a1\u3002\\n\\n**seata-server \u4e0b\u8f7d\u94fe\u63a5\uff1a**\\n\\n[source](https://github.com/seata/seata/archive/v1.6.0.zip) |\\n[binary](https://github.com/seata/seata/releases/download/v1.6.0/seata-server-1.6.0.zip)\\n\\n\u6b64\u7248\u672c\u66f4\u65b0\u5982\u4e0b\uff1a\\n\\n### feature\uff1a\\n- [[#4863](https://github.com/seata/seata/pull/4863)] \u652f\u6301 oracle \u548c postgresql \u591a\u4e3b\u952e\\n- [[#4649](https://github.com/seata/seata/pull/4649)] seata-server\u652f\u6301\u591a\u6ce8\u518c\u4e2d\u5fc3\\n- [[#4779](https://github.com/seata/seata/pull/4779)] \u652f\u6301 Apache Dubbo3\\n- [[#4479](https://github.com/seata/seata/pull/4479)] TCC\u6ce8\u89e3\u652f\u6301\u6dfb\u52a0\u5728\u63a5\u53e3\u548c\u5b9e\u73b0\u7c7b\u4e0a\\n- [[#4877](https://github.com/seata/seata/pull/4877)] client sdk \u652f\u6301jdk17\\n- [[#4914](https://github.com/seata/seata/pull/4914)] \u652f\u6301 mysql \u7684update join\u8054\u8868\u66f4\u65b0\u8bed\u6cd5\\n- [[#4542](https://github.com/seata/seata/pull/4542)] \u652f\u6301 oracle timestamp \u7c7b\u578b\\n- [[#5111](https://github.com/seata/seata/pull/5111)] \u652f\u6301Nacos contextPath \u914d\u7f6e\\n- [[#4802](https://github.com/seata/seata/pull/4802)] dockerfile \u652f\u6301 arm64\\n\\n\\n### bugfix\uff1a\\n- [[#4780](https://github.com/seata/seata/pull/4780)] \u4fee\u590d\u8d85\u65f6\u56de\u6eda\u6210\u529f\u540e\u65e0\u6cd5\u53d1\u9001TimeoutRollbacked\u4e8b\u4ef6\\n- [[#4954](https://github.com/seata/seata/pull/4954)] \u4fee\u590doutput\u8868\u8fbe\u5f0f\u9519\u8bef\u65f6\uff0c\u4fdd\u5b58\u6267\u884c\u7ed3\u679c\u7a7a\u6307\u9488\u5f02\u5e38\\n- [[#4817](https://github.com/seata/seata/pull/4817)] \u4fee\u590d\u9ad8\u7248\u672cspringboot\u914d\u7f6e\u4e0d\u6807\u51c6\u7684\u95ee\u9898\\n- [[#4838](https://github.com/seata/seata/pull/4838)] \u4fee\u590d\u4f7f\u7528 Statement.executeBatch() \u65f6\u65e0\u6cd5\u751f\u6210undo log \u7684\u95ee\u9898\\n- [[#4533](https://github.com/seata/seata/pull/4533)] \u4fee\u590dhandleRetryRollbacking\u7684event\u91cd\u590d\u5bfc\u81f4\u7684\u6307\u6807\u6570\u636e\u4e0d\u51c6\u786e\\n- [[#4912](https://github.com/seata/seata/pull/4912)] \u4fee\u590dmysql InsertOnDuplicateUpdate \u5217\u540d\u5927\u5c0f\u5199\u4e0d\u4e00\u81f4\u65e0\u6cd5\u6b63\u786e\u5339\u914d\\n- [[#4543](https://github.com/seata/seata/pull/4543)] \u4fee\u590d\u5bf9 Oracle \u6570\u636e\u7c7b\u578bnclob\u7684\u652f\u6301\\n- [[#4915](https://github.com/seata/seata/pull/4915)] \u4fee\u590d\u83b7\u53d6\u4e0d\u5230ServerRecoveryProperties\u5c5e\u6027\u7684\u95ee\u9898\\n- [[#4919](https://github.com/seata/seata/pull/4919)] \u4fee\u590dXID\u7684port\u548caddress\u51fa\u73b0null:0\u7684\u60c5\u51b5\\n- [[#4928](https://github.com/seata/seata/pull/4928)] \u4fee\u590d rpcContext.getClientRMHolderMap NPE \u95ee\u9898\\n- [[#4953](https://github.com/seata/seata/pull/4953)] \u4fee\u590dInsertOnDuplicateUpdate\u53ef\u7ed5\u8fc7\u4fee\u6539\u4e3b\u952e\u7684\u95ee\u9898\\n- [[#4978](https://github.com/seata/seata/pull/4978)] \u4fee\u590d kryo \u652f\u6301\u5faa\u73af\u4f9d\u8d56\\n- [[#4985](https://github.com/seata/seata/pull/4985)] \u4fee\u590d undo_log id\u91cd\u590d\u7684\u95ee\u9898\\n- [[#4874](https://github.com/seata/seata/pull/4874)] \u4fee\u590dOpenJDK 11 \u542f\u52a8\u5931\u8d25\\n- [[#5018](https://github.com/seata/seata/pull/5018)] \u4fee\u590d\u542f\u52a8\u811a\u672c\u4e2d loader path \u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u5bfc\u81f4 server \u542f\u52a8\u5931\u8d25\u95ee\u9898\\n- [[#5004](https://github.com/seata/seata/pull/5004)] \u4fee\u590dmysql update join\u884c\u6570\u636e\u91cd\u590d\u7684\u95ee\u9898\\n- [[#5032](https://github.com/seata/seata/pull/5032)] \u4fee\u590dmysql InsertOnDuplicateUpdate\u4e2d\u6761\u4ef6\u53c2\u6570\u586b\u5145\u4f4d\u7f6e\u8ba1\u7b97\u9519\u8bef\u5bfc\u81f4\u7684\u955c\u50cf\u67e5\u8be2SQL\u8bed\u53e5\u5f02\u5e38\u95ee\u9898\\n- [[#5033](https://github.com/seata/seata/pull/5033)] \u4fee\u590dInsertOnDuplicateUpdate\u7684SQL\u8bed\u53e5\u4e2d\u65e0\u63d2\u5165\u5217\u5b57\u6bb5\u5bfc\u81f4\u7684\u7a7a\u6307\u9488\u95ee\u9898\\n- [[#5038](https://github.com/seata/seata/pull/5038)] \u4fee\u590dSagaAsyncThreadPoolProperties\u51b2\u7a81\u95ee\u9898\\n- [[#5050](https://github.com/seata/seata/pull/5050)] \u4fee\u590dSaga\u6a21\u5f0f\u4e0b\u5168\u5c40\u72b6\u6001\u672a\u6b63\u786e\u66f4\u6539\u6210Committed\u95ee\u9898\\n- [[#5052](https://github.com/seata/seata/pull/5052)] \u4fee\u590dupdate join\u6761\u4ef6\u4e2d\u5360\u4f4d\u7b26\u53c2\u6570\u95ee\u9898\\n- [[#5031](https://github.com/seata/seata/pull/5031)] \u4fee\u590dInsertOnDuplicateUpdate\u4e2d\u4e0d\u5e94\u8be5\u4f7f\u7528null\u503c\u7d22\u5f15\u4f5c\u4e3a\u67e5\u8be2\u6761\u4ef6\\n- [[#5075](https://github.com/seata/seata/pull/5075)] \u4fee\u590dInsertOnDuplicateUpdate\u65e0\u6cd5\u62e6\u622a\u65e0\u4e3b\u952e\u548c\u552f\u4e00\u7d22\u5f15\u7684SQL\\n- [[#5093](https://github.com/seata/seata/pull/5093)] \u4fee\u590dseata server\u91cd\u542f\u540eaccessKey\u4e22\u5931\u95ee\u9898\\n- [[#5092](https://github.com/seata/seata/pull/5092)] \u4fee\u590d\u5f53seata and jpa\u5171\u540c\u4f7f\u7528\u65f6, AutoConfiguration\u7684\u987a\u5e8f\u4e0d\u6b63\u786e\u7684\u95ee\u9898\\n- [[#5109](https://github.com/seata/seata/pull/5109)] \u4fee\u590d\u5f53RM\u4fa7\u6ca1\u6709\u52a0@GlobalTransactional\u62a5NPE\u7684\u95ee\u9898\\n- [[#5098](https://github.com/seata/seata/pull/5098)] Druid \u7981\u7528 oracle implicit cache\\n- [[#4860](https://github.com/seata/seata/pull/4860)] \u4fee\u590dmetrics tag\u8986\u76d6\u95ee\u9898\\n- [[#5028](https://github.com/seata/seata/pull/5028)] \u4fee\u590d insert on duplicate SQL\u4e2d null \u503c\u95ee\u9898\\n- [[#5078](https://github.com/seata/seata/pull/5078)] \u4fee\u590dSQL\u8bed\u53e5\u4e2d\u65e0\u4e3b\u952e\u548c\u552f\u4e00\u952e\u62e6\u622a\u95ee\u9898\\n- [[#5097](https://github.com/seata/seata/pull/5097)] \u4fee\u590d\u5f53Server\u91cd\u542f\u65f6 accessKey \u4e22\u5931\u95ee\u9898\\n- [[#5131](https://github.com/seata/seata/pull/5131)] \u4fee\u590dXAConn\u5904\u4e8eactive\u72b6\u6001\u65f6\u65e0\u6cd5\u56de\u6eda\u7684\u95ee\u9898\\n- [[#5134](https://github.com/seata/seata/pull/5134)] \u4fee\u590dhikariDataSource \u81ea\u52a8\u4ee3\u7406\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5931\u6548\u7684\u95ee\u9898\\n- [[#5163](https://github.com/seata/seata/pull/5163)] \u4fee\u590d\u9ad8\u7248\u672cJDK\u7f16\u8bd1\u5931\u8d25\u7684\u95ee\u9898\\n\\n### optimize\uff1a\\n- [[#4681](https://github.com/seata/seata/pull/4681)] \u4f18\u5316\u7ade\u4e89\u9501\u8fc7\u7a0b\\n- [[#4774](https://github.com/seata/seata/pull/4774)] \u4f18\u5316 seataio/seata-server \u955c\u50cf\u4e2d\u7684 mysql8 \u4f9d\u8d56\\n- [[#4750](https://github.com/seata/seata/pull/4750)] \u4f18\u5316AT\u5206\u652f\u91ca\u653e\u5168\u5c40\u9501\u4e0d\u4f7f\u7528xid\\n- [[#4790](https://github.com/seata/seata/pull/4790)] \u6dfb\u52a0\u81ea\u52a8\u53d1\u5e03 OSSRH github action\\n- [[#4765](https://github.com/seata/seata/pull/4765)] mysql8.0.29\u7248\u672c\u53ca\u4ee5\u4e0aXA\u6a21\u5f0f\u4e0d\u6301connection\u81f3\u4e8c\u9636\u6bb5\\n- [[#4797](https://github.com/seata/seata/pull/4797)] \u4f18\u5316\u6240\u6709github actions\u811a\u672c\\n- [[#4800](https://github.com/seata/seata/pull/4800)] \u6dfb\u52a0 NOTICE \u6587\u4ef6\\n- [[#4761](https://github.com/seata/seata/pull/4761)] \u4f7f\u7528 hget \u4ee3\u66ff RedisLocker \u4e2d\u7684 hmget\\n- [[#4414](https://github.com/seata/seata/pull/4414)] \u79fb\u9664log4j\u4f9d\u8d56\\n- [[#4836](https://github.com/seata/seata/pull/4836)] \u4f18\u5316 BaseTransactionalExecutor#buildLockKey(TableRecords rowsIncludingPK) \u65b9\u6cd5\u53ef\u8bfb\u6027\\n- [[#4865](https://github.com/seata/seata/pull/4865)] \u4fee\u590d Saga \u53ef\u89c6\u5316\u8bbe\u8ba1\u5668 GGEditor \u5b89\u5168\u6f0f\u6d1e\\n- [[#4590](https://github.com/seata/seata/pull/4590)] \u81ea\u52a8\u964d\u7ea7\u652f\u6301\u5f00\u5173\u652f\u6301\u52a8\u6001\u914d\u7f6e\\n- [[#4490](https://github.com/seata/seata/pull/4490)] tccfence \u8bb0\u5f55\u8868\u4f18\u5316\u6210\u6309\u7d22\u5f15\u5220\u9664\\n- [[#4911](https://github.com/seata/seata/pull/4911)] \u6dfb\u52a0 header \u548clicense \u68c0\u6d4b\\n- [[#4917](https://github.com/seata/seata/pull/4917)] \u5347\u7ea7 package-lock.json \u4fee\u590d\u6f0f\u6d1e\\n- [[#4924](https://github.com/seata/seata/pull/4924)] \u4f18\u5316 pom \u4f9d\u8d56\\n- [[#4932](https://github.com/seata/seata/pull/4932)] \u62bd\u53d6\u90e8\u5206\u914d\u7f6e\u7684\u9ed8\u8ba4\u503c\\n- [[#4925](https://github.com/seata/seata/pull/4925)] \u4f18\u5316 javadoc \u6ce8\u91ca\\n- [[#4921](https://github.com/seata/seata/pull/4921)] \u4fee\u590d\u63a7\u5236\u53f0\u6a21\u5757\u5b89\u5168\u6f0f\u6d1e\u548c\u5347\u7ea7 skywalking-eyes \u7248\u672c\\n- [[#4936](https://github.com/seata/seata/pull/4936)] \u4f18\u5316\u5b58\u50a8\u914d\u7f6e\u7684\u8bfb\u53d6\\n- [[#4946](https://github.com/seata/seata/pull/4946)] \u5c06\u83b7\u53d6\u9501\u65f6\u9047\u5230\u7684sql\u5f02\u5e38\u4f20\u9012\u7ed9\u5ba2\u6237\u7aef\\n- [[#4962](https://github.com/seata/seata/pull/4962)] \u4f18\u5316\u6784\u5efa\u914d\u7f6e\uff0c\u5e76\u4fee\u6b63docker\u955c\u50cf\u7684\u57fa\u7840\u955c\u50cf\\n- [[#4974](https://github.com/seata/seata/pull/4974)] \u53d6\u6d88redis\u6a21\u5f0f\u4e0b,\u67e5\u8be2globalStatus\u6570\u91cf\u7684\u9650\u5236\\n- [[#4981](https://github.com/seata/seata/pull/4981)] \u4f18\u5316\u5f53tcc fence\u8bb0\u5f55\u67e5\u4e0d\u5230\u65f6\u7684\u9519\u8bef\u63d0\u793a\\n- [[#4995](https://github.com/seata/seata/pull/4995)] \u4fee\u590dmysql InsertOnDuplicateUpdate\u540e\u7f6e\u955c\u50cf\u67e5\u8be2SQL\u4e2d\u91cd\u590d\u7684\u4e3b\u952e\u67e5\u8be2\u6761\u4ef6\\n- [[#5047](https://github.com/seata/seata/pull/5047)] \u79fb\u9664\u65e0\u7528\u4ee3\u7801\\n- [[#5051](https://github.com/seata/seata/pull/5051)] \u56de\u6eda\u65f6undolog\u4ea7\u751f\u810f\u5199\u9700\u8981\u629b\u51fa\u4e0d\u518d\u91cd\u8bd5(BranchRollbackFailed_Unretriable)\u7684\u5f02\u5e38\\n- [[#5075](https://github.com/seata/seata/pull/5075)] \u62e6\u622a\u6ca1\u6709\u4e3b\u952e\u53ca\u552f\u4e00\u7d22\u5f15\u503c\u7684insert on duplicate update\u8bed\u53e5\\n- [[#5104](https://github.com/seata/seata/pull/5104)] ConnectionProxy\u8131\u79bb\u5bf9druid\u7684\u4f9d\u8d56\\n- [[#5124](https://github.com/seata/seata/pull/5124)] \u652f\u6301oracle\u5220\u9664TCC fence\u8bb0\u5f55\u8868\\n- [[#4468](https://github.com/seata/seata/pull/4968)] \u652f\u6301kryo 5.3.0\\n- [[#4807](https://github.com/seata/seata/pull/4807)] \u4f18\u5316\u955c\u50cf\u548cOSS\u4ed3\u5e93\u53d1\u5e03\u6d41\u6c34\u7ebf\\n- [[#4445](https://github.com/seata/seata/pull/4445)] \u4f18\u5316\u4e8b\u52a1\u8d85\u65f6\u5224\u65ad\\n- [[#4958](https://github.com/seata/seata/pull/4958)] \u4f18\u5316\u8d85\u65f6\u4e8b\u52a1 triggerAfterCommit() \u7684\u6267\u884c\\n- [[#4582](https://github.com/seata/seata/pull/4582)] \u4f18\u5316redis\u5b58\u50a8\u6a21\u5f0f\u7684\u4e8b\u52a1\u6392\u5e8f\\n- [[#4963](https://github.com/seata/seata/pull/4963)] \u589e\u52a0 ARM64 \u6d41\u6c34\u7ebf CI \u6d4b\u8bd5\\n- [[#4434](https://github.com/seata/seata/pull/4434)] \u79fb\u9664 seata-server CMS GC \u53c2\u6570\\n\\n\\n### test\uff1a\\n- [[#4411](https://github.com/seata/seata/pull/4411)] \u6d4b\u8bd5Oracle\u6570\u636e\u5e93AT\u6a21\u5f0f\u4e0b\u7c7b\u578b\u652f\u6301\\n- [[#4794](https://github.com/seata/seata/pull/4794)] \u91cd\u6784\u4ee3\u7801\uff0c\u5c1d\u8bd5\u4fee\u590d\u5355\u5143\u6d4b\u8bd5 `DataSourceProxyTest.getResourceIdTest()`\\n- [[#5101](https://github.com/seata/seata/pull/5101)] \u4fee\u590dzk\u6ce8\u518c\u548c\u914d\u7f6e\u4e2d\u5fc3\u62a5ClassNotFoundException\u7684\u95ee\u9898 `DataSourceProxyTest.getResourceIdTest()`\\n\\n\\n\u975e\u5e38\u611f\u8c22\u4ee5\u4e0b contributors \u7684\u4ee3\u7801\u8d21\u732e\u3002\u82e5\u6709\u65e0\u610f\u9057\u6f0f\uff0c\u8bf7\u62a5\u544a\u3002\\n\\n\x3c!-- \u8bf7\u786e\u4fdd\u60a8\u7684 GitHub ID \u5728\u4ee5\u4e0b\u5217\u8868\u4e2d --\x3e\\n- [slievrly](https://github.com/slievrly)\\n- [renliangyu857](https://github.com/renliangyu857)\\n- [wangliang181230](https://github.com/wangliang181230)\\n- [a364176773](https://github.com/a364176773)\\n- [tuwenlin](https://github.com/tuwenlin)\\n- [conghuhu](https://github.com/conghuhu)\\n- [a1104321118](https://github.com/a1104321118)\\n- [duanqiaoyanyu](https://github.com/duanqiaoyanyu)\\n- [robynron](https://github.com/robynron)\\n- [lcmvs](https://github.com/lcmvs)\\n- [github-ganyu](https://github.com/github-ganyu)\\n- [1181954449](https://github.com/1181954449)\\n- [zw201913](https://github.com/zw201913)\\n- [wingchi-leung](https://github.com/wingchi-leung)\\n- [AlexStocks](https://github.com/AlexStocks)\\n- [liujunlin5168](https://github.com/liujunlin5168)\\n- [pengten](https://github.com/pengten)\\n- [liuqiufeng](https://github.com/liuqiufeng)\\n- [yujianfei1986](https://github.com/yujianfei1986)\\n- [Bughue](https://github.com/Bughue)\\n- [AlbumenJ](https://github.com/AlbumenJ)\\n- [doubleDimple](https://github.com/doubleDimple)\\n- [jsbxyyx](https://github.com/jsbxyyx)\\n- [tuwenlin](https://github.com/tuwenlin)\\n- [CrazyLionLi](https://github.com/JavaLionLi)\\n- [whxxxxx](https://github.com/whxxxxx)\\n- [neillee95](https://github.com/neillee95)\\n- [crazy-sheep](https://github.com/crazy-sheep)\\n- [zhangzq7](https://github.com/zhangzq7)\\n- [l81893521](https://github.com/l81893521)\\n- [zhuyoufeng](https://github.com/zhuyoufeng)\\n- [xingfudeshi](https://github.com/xingfudeshi)\\n- [odidev](https://github.com/odidev)\\n- [miaoxueyu](https://github.com/miaoxueyu)\\n\\n\u540c\u65f6\uff0c\u6211\u4eec\u6536\u5230\u4e86\u793e\u533a\u53cd\u9988\u7684\u5f88\u591a\u6709\u4ef7\u503c\u7684issue\u548c\u5efa\u8bae\uff0c\u975e\u5e38\u611f\u8c22\u5927\u5bb6\u3002\\n\\n\\n#### Link\\n\\n- **Seata:** https://github.com/seata/seata\\n- **Seata-Samples:** https://github.com/seata/seata-samples\\n- **Release:** https://github.com/seata/seata/releases\\n- **WebSite:** https://seata.io"},{"id":"/seata-1.5.2","metadata":{"permalink":"/zh-cn/blog/seata-1.5.2","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-1.5.2.md","title":"Seata 1.5.2 \u91cd\u78c5\u53d1\u5e03\uff0c\u652f\u6301xid\u8d1f\u8f7d\u5747\u8861","description":"Seata 1.5.2 \u91cd\u78c5\u53d1\u5e03\uff0c\u652f\u6301xid\u8d1f\u8f7d\u5747\u8861","date":"2022-07-12T00:00:00.000Z","formattedDate":"2022\u5e747\u670812\u65e5","tags":[],"readingTime":2.735,"hasTruncateMarker":false,"authors":[{"name":"Seata\u793e\u533a"}],"frontMatter":{"title":"Seata 1.5.2 \u91cd\u78c5\u53d1\u5e03\uff0c\u652f\u6301xid\u8d1f\u8f7d\u5747\u8861","author":"Seata\u793e\u533a","keywords":["seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u30011.5.2"],"description":"Seata 1.5.2 \u91cd\u78c5\u53d1\u5e03\uff0c\u652f\u6301xid\u8d1f\u8f7d\u5747\u8861","date":"2022/07/12"},"prevItem":{"title":"Seata 1.6.0 \u91cd\u78c5\u53d1\u5e03\uff0c\u5927\u5e45\u63d0\u5347\u6027\u80fd","permalink":"/zh-cn/blog/seata-1.6.0"},"nextItem":{"title":"\u963f\u91cc Seata \u65b0\u7248\u672c\u7ec8\u4e8e\u89e3\u51b3\u4e86 TCC \u6a21\u5f0f\u7684\u5e42\u7b49\u3001\u60ac\u6302\u548c\u7a7a\u56de\u6eda\u95ee\u9898","permalink":"/zh-cn/blog/seata-tcc-fence"}},"content":"### Seata 1.5.2 \u91cd\u78c5\u53d1\u5e03\uff0c\u652f\u6301xid\u8d1f\u8f7d\u5747\u8861\\n\\nSeata \u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u63d0\u4f9b\u9ad8\u6027\u80fd\u548c\u7b80\u5355\u6613\u7528\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u670d\u52a1\u3002\\n\\n**seata-server \u4e0b\u8f7d\u94fe\u63a5\uff1a**\\n\\n[source](https://github.com/seata/seata/archive/v1.5.2.zip) |\\n[binary](https://github.com/seata/seata/releases/download/v1.5.2/seata-server-1.5.2.zip)\\n\\n\u6b64\u7248\u672c\u66f4\u65b0\u5982\u4e0b\uff1a\\n\\n### feature\uff1a\\n- [[#4661](https://github.com/seata/seata/pull/4713)] \u652f\u6301\u6839\u636exid\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\\n- [[#4676](https://github.com/seata/seata/pull/4676)] \u652f\u6301Nacos\u4f5c\u4e3a\u6ce8\u518c\u4e2d\u5fc3\u65f6\uff0cserver\u901a\u8fc7\u6302\u8f7dSLB\u66b4\u9732\u670d\u52a1\\n- [[#4642](https://github.com/seata/seata/pull/4642)] \u652f\u6301client\u6279\u91cf\u8bf7\u6c42\u5e76\u884c\u5904\u7406\\n- [[#4567](https://github.com/seata/seata/pull/4567)] \u652f\u6301where\u6761\u4ef6\u4e2dfind_in_set\u51fd\u6570\\n\\n\\n### bugfix\uff1a\\n- [[#4515](https://github.com/seata/seata/pull/4515)] \u4fee\u590ddevelop\u5206\u652fSeataTCCFenceAutoConfiguration\u5728\u5ba2\u6237\u7aef\u672a\u4f7f\u7528DB\u65f6\uff0c\u542f\u52a8\u629b\u51faClassNotFoundException\u7684\u95ee\u9898\u3002\\n- [[#4661](https://github.com/seata/seata/pull/4661)] \u4fee\u590d\u63a7\u5236\u53f0\u4e2d\u4f7f\u7528PostgreSQL\u51fa\u73b0\u7684SQL\u5f02\u5e38\\n- [[#4667](https://github.com/seata/seata/pull/4682)] \u4fee\u590ddevelop\u5206\u652fRedisTransactionStoreManager\u8fed\u4ee3\u65f6\u66f4\u65b0map\u7684\u5f02\u5e38\\n- [[#4678](https://github.com/seata/seata/pull/4678)] \u4fee\u590d\u5c5e\u6027transport.enableRmClientBatchSendRequest\u6ca1\u6709\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\u7f13\u5b58\u7a7f\u900f\u7684\u95ee\u9898\\n- [[#4701](https://github.com/seata/seata/pull/4701)] \u4fee\u590d\u547d\u4ee4\u884c\u53c2\u6570\u4e22\u5931\u95ee\u9898\\n- [[#4607](https://github.com/seata/seata/pull/4607)] \u4fee\u590d\u8df3\u8fc7\u5168\u5c40\u9501\u6821\u9a8c\u7684\u7f3a\u9677\\n- [[#4696](https://github.com/seata/seata/pull/4696)] \u4fee\u590d oracle \u5b58\u50a8\u6a21\u5f0f\u65f6\u7684\u63d2\u5165\u95ee\u9898\\n- [[#4726](https://github.com/seata/seata/pull/4726)] \u4fee\u590d\u6279\u91cf\u53d1\u9001\u6d88\u606f\u65f6\u53ef\u80fd\u7684NPE\u95ee\u9898\\n- [[#4729](https://github.com/seata/seata/pull/4729)] \u4fee\u590dAspectTransactional.rollbackForClassName\u8bbe\u7f6e\u9519\u8bef\\n- [[#4653](https://github.com/seata/seata/pull/4653)] \u4fee\u590d INSERT_ON_DUPLICATE \u4e3b\u952e\u4e3a\u975e\u6570\u503c\u5f02\u5e38\\n\\n### optimize\uff1a\\n- [[#4650](https://github.com/seata/seata/pull/4650)] \u4fee\u590d\u5b89\u5168\u6f0f\u6d1e\\n- [[#4670](https://github.com/seata/seata/pull/4670)] \u4f18\u5316branchResultMessageExecutor\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u6570\\n- [[#4662](https://github.com/seata/seata/pull/4662)] \u4f18\u5316\u56de\u6eda\u4e8b\u52a1\u76d1\u63a7\u6307\u6807\\n- [[#4693](https://github.com/seata/seata/pull/4693)] \u4f18\u5316\u63a7\u5236\u53f0\u5bfc\u822a\u680f\\n- [[#4700](https://github.com/seata/seata/pull/4700)] \u4fee\u590d maven-compiler-plugin \u548c maven-resources-plugin \u6267\u884c\u5931\u8d25\\n- [[#4711](https://github.com/seata/seata/pull/4711)] \u5206\u79bb\u90e8\u7f72\u65f6 lib \u4f9d\u8d56\\n- [[#4720](https://github.com/seata/seata/pull/4720)] \u4f18\u5316pom\u63cf\u8ff0\\n- [[#4728](https://github.com/seata/seata/pull/4728)] \u5c06logback\u7248\u672c\u4f9d\u8d56\u5347\u7ea7\u81f31.2.9\\n- [[#4745](https://github.com/seata/seata/pull/4745)] \u53d1\u884c\u5305\u4e2d\u652f\u6301 mysql8 driver\\n- [[#4626](https://github.com/seata/seata/pull/4626)] \u4f7f\u7528 `easyj-maven-plugin` \u63d2\u4ef6\u4ee3\u66ff `flatten-maven-plugin`\u63d2\u4ef6\uff0c\u4ee5\u4fee\u590d`shade` \u63d2\u4ef6\u4e0e `flatten` \u63d2\u4ef6\u4e0d\u517c\u5bb9\u7684\u95ee\u9898\\n- [[#4629](https://github.com/seata/seata/pull/4629)] \u66f4\u65b0globalSession\u72b6\u6001\u65f6\u68c0\u67e5\u66f4\u6539\u524d\u540e\u7684\u7ea6\u675f\u5173\u7cfb\\n- [[#4662](https://github.com/seata/seata/pull/4662)] \u4f18\u5316 EnhancedServiceLoader \u53ef\u8bfb\u6027\\n\\n\\n### test\uff1a\\n- [[#4544](https://github.com/seata/seata/pull/4544)] \u4f18\u5316TransactionContextFilterTest\u4e2djackson\u5305\u4f9d\u8d56\u95ee\u9898\\n- [[#4731](https://github.com/seata/seata/pull/4731)] \u4fee\u590d AsyncWorkerTest \u548c LockManagerTest \u7684\u5355\u6d4b\u95ee\u9898\u3002\\n\\n\\n\u975e\u5e38\u611f\u8c22\u4ee5\u4e0b contributors \u7684\u4ee3\u7801\u8d21\u732e\u3002\u82e5\u6709\u65e0\u610f\u9057\u6f0f\uff0c\u8bf7\u62a5\u544a\u3002\\n\\n\x3c!-- \u8bf7\u786e\u4fdd\u60a8\u7684 GitHub ID \u5728\u4ee5\u4e0b\u5217\u8868\u4e2d --\x3e\\n- [slievrly](https://github.com/slievrly)\\n- [pengten](https://github.com/pengten)\\n- [YSF-A](https://github.com/YSF-A)\\n- [tuwenlin](https://github.com/tuwenlin)\\n- [2129zxl](https://github.com/2129zxl)\\n- [Ifdevil](https://github.com/Ifdevil)\\n- [wingchi-leung](https://github.com/wingchi-leung)\\n- [liurong](https://github.com/robynron)\\n- [opelok-z](https://github.com/opelok-z)\\n- [a364176773](https://github.com/a364176773)\\n- [Smery-lxm](https://github.com/Smery-lxm)\\n- [lvekee](https://github.com/lvekee)\\n- [doubleDimple](https://github.com/doubleDimple)\\n- [wangliang181230](https://github.com/wangliang181230)\\n- [Bughue](https://github.com/Bughue)\\n- [AYue-94](https://github.com/AYue-94)\\n- [lingxiao-wu](https://github.com/lingxiao-wu)\\n- [caohdgege](https://github.com/caohdgege)\\n\\n\u540c\u65f6\uff0c\u6211\u4eec\u6536\u5230\u4e86\u793e\u533a\u53cd\u9988\u7684\u5f88\u591a\u6709\u4ef7\u503c\u7684issue\u548c\u5efa\u8bae\uff0c\u975e\u5e38\u611f\u8c22\u5927\u5bb6\u3002\\n\\n#### Link\\n\\n- **Seata:** https://github.com/seata/seata\\n- **Seata-Samples:** https://github.com/seata/seata-samples\\n- **Release:** https://github.com/seata/seata/releases\\n- **WebSite:** https://seata.io"},{"id":"/seata-tcc-fence","metadata":{"permalink":"/zh-cn/blog/seata-tcc-fence","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-tcc-fence.md","title":"\u963f\u91cc Seata \u65b0\u7248\u672c\u7ec8\u4e8e\u89e3\u51b3\u4e86 TCC \u6a21\u5f0f\u7684\u5e42\u7b49\u3001\u60ac\u6302\u548c\u7a7a\u56de\u6eda\u95ee\u9898","description":"Seata \u5728 1.5.1 \u7248\u672c\u89e3\u51b3\u4e86 TCC \u6a21\u5f0f\u7684\u5e42\u7b49\u3001\u60ac\u6302\u548c\u7a7a\u56de\u6eda\u95ee\u9898\uff0c\u8fd9\u7bc7\u6587\u7ae0\u4e3b\u8981\u8bb2\u89e3 Seata \u662f\u600e\u4e48\u89e3\u51b3\u7684\u3002","date":"2022-06-25T00:00:00.000Z","formattedDate":"2022\u5e746\u670825\u65e5","tags":[],"readingTime":13.21,"hasTruncateMarker":false,"authors":[{"name":"\u6731\u664b\u541b"}],"frontMatter":{"title":"\u963f\u91cc Seata \u65b0\u7248\u672c\u7ec8\u4e8e\u89e3\u51b3\u4e86 TCC \u6a21\u5f0f\u7684\u5e42\u7b49\u3001\u60ac\u6302\u548c\u7a7a\u56de\u6eda\u95ee\u9898","author":"\u6731\u664b\u541b","keywords":["Seata\u3001TCC\u3001\u5e42\u7b49\u3001\u60ac\u6302\u3001\u7a7a\u56de\u6eda"],"description":"Seata \u5728 1.5.1 \u7248\u672c\u89e3\u51b3\u4e86 TCC \u6a21\u5f0f\u7684\u5e42\u7b49\u3001\u60ac\u6302\u548c\u7a7a\u56de\u6eda\u95ee\u9898\uff0c\u8fd9\u7bc7\u6587\u7ae0\u4e3b\u8981\u8bb2\u89e3 Seata \u662f\u600e\u4e48\u89e3\u51b3\u7684\u3002","date":"2022/06/25"},"prevItem":{"title":"Seata 1.5.2 \u91cd\u78c5\u53d1\u5e03\uff0c\u652f\u6301xid\u8d1f\u8f7d\u5747\u8861","permalink":"/zh-cn/blog/seata-1.5.2"},"nextItem":{"title":"\u6df1\u5ea6\u5256\u6790 Seata TCC \u6a21\u5f0f\uff08\u4e00\uff09","permalink":"/zh-cn/blog/seata-tcc"}},"content":"\u4eca\u5929\u6765\u804a\u4e00\u804a\u963f\u91cc\u5df4\u5df4 Seata \u65b0\u7248\u672c\uff081.5.1\uff09\u662f\u600e\u4e48\u89e3\u51b3 TCC \u6a21\u5f0f\u4e0b\u7684\u5e42\u7b49\u3001\u60ac\u6302\u548c\u7a7a\u56de\u6eda\u95ee\u9898\u7684\u3002\\n\\n## 1 TCC \u56de\u987e\\n\\nTCC \u6a21\u5f0f\u662f\u6700\u7ecf\u5178\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u5c06\u5206\u5e03\u5f0f\u4e8b\u52a1\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\u6765\u6267\u884c\uff0ctry \u9636\u6bb5\u5bf9\u6bcf\u4e2a\u5206\u652f\u4e8b\u52a1\u8fdb\u884c\u9884\u7559\u8d44\u6e90\uff0c\u5982\u679c\u6240\u6709\u5206\u652f\u4e8b\u52a1\u90fd\u9884\u7559\u8d44\u6e90\u6210\u529f\uff0c\u5219\u8fdb\u5165 commit \u9636\u6bb5\u63d0\u4ea4\u5168\u5c40\u4e8b\u52a1\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u8282\u70b9\u9884\u7559\u8d44\u6e90\u5931\u8d25\u5219\u8fdb\u5165 cancel \u9636\u6bb5\u56de\u6eda\u5168\u5c40\u4e8b\u52a1\u3002\\n\\n\u4ee5\u4f20\u7edf\u7684\u8ba2\u5355\u3001\u5e93\u5b58\u3001\u8d26\u6237\u670d\u52a1\u4e3a\u4f8b\uff0c\u5728 try \u9636\u6bb5\u5c1d\u8bd5\u9884\u7559\u8d44\u6e90\uff0c\u63d2\u5165\u8ba2\u5355\u3001\u6263\u51cf\u5e93\u5b58\u3001\u6263\u51cf\u91d1\u989d\uff0c\u8fd9\u4e09\u4e2a\u670d\u52a1\u90fd\u662f\u8981\u63d0\u4ea4\u672c\u5730\u4e8b\u52a1\u7684\uff0c\u8fd9\u91cc\u53ef\u4ee5\u628a\u8d44\u6e90\u8f6c\u5165\u4e2d\u95f4\u8868\u3002\u5728 commit \u9636\u6bb5\uff0c\u518d\u628a try \u9636\u6bb5\u9884\u7559\u7684\u8d44\u6e90\u8f6c\u5165\u6700\u7ec8\u8868\u3002\u800c\u5728 cancel \u9636\u6bb5\uff0c\u628a try \u9636\u6bb5\u9884\u7559\u7684\u8d44\u6e90\u8fdb\u884c\u91ca\u653e\uff0c\u6bd4\u5982\u628a\u8d26\u6237\u91d1\u989d\u8fd4\u56de\u7ed9\u5ba2\u6237\u7684\u8d26\u6237\u3002\\n\\n**\u6ce8\u610f\uff1atry \u9636\u6bb5\u5fc5\u987b\u662f\u8981\u63d0\u4ea4\u672c\u5730\u4e8b\u52a1\u7684\uff0c\u6bd4\u5982\u6263\u51cf\u8ba2\u5355\u91d1\u989d\uff0c\u5fc5\u987b\u628a\u94b1\u4ece\u5ba2\u6237\u8d26\u6237\u6263\u6389\uff0c\u5982\u679c\u4e0d\u6263\u6389\uff0c\u5728 commit \u9636\u6bb5\u5ba2\u6237\u8d26\u6237\u94b1\u4e0d\u591f\u4e86\uff0c\u5c31\u4f1a\u51fa\u95ee\u9898\u3002**\\n\\n### 1.1 try-commit\\n\\ntry \u9636\u6bb5\u9996\u5148\u8fdb\u884c\u9884\u7559\u8d44\u6e90\uff0c\u7136\u540e\u5728 commit \u9636\u6bb5\u6263\u9664\u8d44\u6e90\u3002\u5982\u4e0b\u56fe\uff1a\\n\\n![fence-try-commit](/img/blog/fence-try-commit.png)\\n\\n\\n### 1.2 try-cancel\\n\\ntry \u9636\u6bb5\u9996\u5148\u8fdb\u884c\u9884\u7559\u8d44\u6e90\uff0c\u9884\u7559\u8d44\u6e90\u65f6\u6263\u51cf\u5e93\u5b58\u5931\u8d25\u5bfc\u81f4\u5168\u5c40\u4e8b\u52a1\u56de\u6eda\uff0c\u5728 cancel \u9636\u6bb5\u91ca\u653e\u8d44\u6e90\u3002\u5982\u4e0b\u56fe\uff1a\\n\\n![fence-try-cancel](/img/blog/fence-try-cancel.png)\\n\\n\\n## 2 TCC \u4f18\u52bf\\n\\nTCC \u6a21\u5f0f\u6700\u5927\u7684\u4f18\u52bf\u662f\u6548\u7387\u9ad8\u3002TCC \u6a21\u5f0f\u5728 try \u9636\u6bb5\u7684\u9501\u5b9a\u8d44\u6e90\u5e76\u4e0d\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u9501\u5b9a\uff0c\u800c\u662f\u771f\u5b9e\u63d0\u4ea4\u4e86\u672c\u5730\u4e8b\u52a1\uff0c\u5c06\u8d44\u6e90\u9884\u7559\u5230\u4e2d\u95f4\u6001\uff0c\u5e76\u4e0d\u9700\u8981\u963b\u585e\u7b49\u5f85\uff0c\u56e0\u6b64\u6548\u7387\u6bd4\u5176\u4ed6\u6a21\u5f0f\u8981\u9ad8\u3002\\n\\n\u540c\u65f6 TCC \u6a21\u5f0f\u8fd8\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u4f18\u5316\uff1a\\n\\n### 2.1 \u5f02\u6b65\u63d0\u4ea4\\n\\ntry \u9636\u6bb5\u6210\u529f\u540e\uff0c\u4e0d\u7acb\u5373\u8fdb\u5165 confirm/cancel \u9636\u6bb5\uff0c\u800c\u662f\u8ba4\u4e3a\u5168\u5c40\u4e8b\u52a1\u5df2\u7ecf\u7ed3\u675f\u4e86\uff0c\u542f\u52a8\u5b9a\u65f6\u4efb\u52a1\u6765\u5f02\u6b65\u6267\u884c confirm/cancel\uff0c\u6263\u51cf\u6216\u91ca\u653e\u8d44\u6e90\uff0c\u8fd9\u6837\u4f1a\u6709\u5f88\u5927\u7684\u6027\u80fd\u63d0\u5347\u3002\\n\\n### 2.2 \u540c\u5e93\u6a21\u5f0f\\n\\nTCC \u6a21\u5f0f\u4e2d\u6709\u4e09\u4e2a\u89d2\u8272\uff1a\\n\\n- TM\uff1a\u7ba1\u7406\u5168\u5c40\u4e8b\u52a1\uff0c\u5305\u62ec\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\uff0c\u63d0\u4ea4/\u56de\u6eda\u5168\u5c40\u4e8b\u52a1\uff1b\\n- RM\uff1a\u7ba1\u7406\u5206\u652f\u4e8b\u52a1\uff1b\\n- TC: \u7ba1\u7406\u5168\u5c40\u4e8b\u52a1\u548c\u5206\u652f\u4e8b\u52a1\u7684\u72b6\u6001\u3002\\n\\n\u4e0b\u56fe\u6765\u81ea Seata \u5b98\u7f51\uff1a\\n\\n![fence-fiffrent-db](/img/blog/fence-fiffrent-db.png)\\n\\nTM \u5f00\u542f\u5168\u5c40\u4e8b\u52a1\u65f6\uff0cRM \u9700\u8981\u5411 TC \u53d1\u9001\u6ce8\u518c\u6d88\u606f\uff0cTC \u4fdd\u5b58\u5206\u652f\u4e8b\u52a1\u7684\u72b6\u6001\u3002TM \u8bf7\u6c42\u63d0\u4ea4\u6216\u56de\u6eda\u65f6\uff0cTC \u9700\u8981\u5411 RM \u53d1\u9001\u63d0\u4ea4\u6216\u56de\u6eda\u6d88\u606f\u3002\u8fd9\u6837\u5305\u542b\u4e24\u4e2a\u4e2a\u5206\u652f\u4e8b\u52a1\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\uff0cTC \u548c RM \u4e4b\u95f4\u6709\u56db\u6b21 RPC\u3002\\n\\n\u4f18\u5316\u540e\u7684\u6d41\u7a0b\u5982\u4e0b\u56fe\uff1a\\n\\n![fence-same-db](/img/blog/fence-same-db.png)\\n\\n\\nTC \u4fdd\u5b58\u5168\u5c40\u4e8b\u52a1\u7684\u72b6\u6001\u3002TM \u5f00\u542f\u5168\u5c40\u4e8b\u52a1\u65f6\uff0cRM \u4e0d\u518d\u9700\u8981\u5411 TC \u53d1\u9001\u6ce8\u518c\u6d88\u606f\uff0c\u800c\u662f\u628a\u5206\u652f\u4e8b\u52a1\u72b6\u6001\u4fdd\u5b58\u5728\u4e86\u672c\u5730\u3002TM \u5411 TC \u53d1\u9001\u63d0\u4ea4\u6216\u56de\u6eda\u6d88\u606f\u540e\uff0cRM \u5f02\u6b65\u7ebf\u7a0b\u9996\u5148\u67e5\u51fa\u672c\u5730\u4fdd\u5b58\u7684\u672a\u63d0\u4ea4\u5206\u652f\u4e8b\u52a1\uff0c\u7136\u540e\u5411 TC \u53d1\u9001\u6d88\u606f\u83b7\u53d6\uff08\u672c\u5730\u5206\u652f\u4e8b\u52a1\uff09\u6240\u5728\u7684\u5168\u5c40\u4e8b\u52a1\u72b6\u6001\uff0c\u4ee5\u51b3\u5b9a\u662f\u63d0\u4ea4\u8fd8\u662f\u56de\u6eda\u672c\u5730\u4e8b\u52a1\u3002\\n\\n\u8fd9\u6837\u4f18\u5316\u540e\uff0cRPC \u6b21\u6570\u51cf\u5c11\u4e86 50%\uff0c\u6027\u80fd\u5927\u5e45\u63d0\u5347\u3002\\n\\n## 3 RM \u4ee3\u7801\u793a\u4f8b\\n\\n\u4ee5\u5e93\u5b58\u670d\u52a1\u4e3a\u4f8b\uff0cRM \u5e93\u5b58\u670d\u52a1\u63a5\u53e3\u4ee3\u7801\u5982\u4e0b\uff1a\\n```Java\\n@LocalTCC\\npublic interface StorageService {\\n\\n    /**\\n     * \u6263\u51cf\u5e93\u5b58\\n     * @param xid \u5168\u5c40xid\\n     * @param productId \u4ea7\u54c1id\\n     * @param count \u6570\u91cf\\n     * @return\\n     */\\n    @TwoPhaseBusinessAction(name = \\"storageApi\\", commitMethod = \\"commit\\", rollbackMethod = \\"rollback\\", useTCCFence = true)\\n    boolean decrease(String xid, Long productId, Integer count);\\n\\n    /**\\n     * \u63d0\u4ea4\u4e8b\u52a1\\n     * @param actionContext\\n     * @return\\n     */\\n    boolean commit(BusinessActionContext actionContext);\\n\\n    /**\\n     * \u56de\u6eda\u4e8b\u52a1\\n     * @param actionContext\\n     * @return\\n     */\\n    boolean rollback(BusinessActionContext actionContext);\\n}\\n```\\n\\n\u901a\u8fc7 @LocalTCC \u8fd9\u4e2a\u6ce8\u89e3\uff0cRM \u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u5411 TC \u6ce8\u518c\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\u3002\u5728 try \u9636\u6bb5\u7684\u65b9\u6cd5\uff08decrease\u65b9\u6cd5\uff09\u4e0a\u6709\u4e00\u4e2a @TwoPhaseBusinessAction \u6ce8\u89e3\uff0c\u8fd9\u91cc\u5b9a\u4e49\u4e86\u5206\u652f\u4e8b\u52a1\u7684 resourceId\uff0ccommit \u65b9\u6cd5\u548c cancel \u65b9\u6cd5\uff0cuseTCCFence \u8fd9\u4e2a\u5c5e\u6027\u4e0b\u4e00\u8282\u518d\u8bb2\u3002\\n\\n## 4 TCC \u5b58\u5728\u95ee\u9898\\n\\nTCC \u6a21\u5f0f\u4e2d\u5b58\u5728\u7684\u4e09\u5927\u95ee\u9898\u662f\u5e42\u7b49\u3001\u60ac\u6302\u548c\u7a7a\u56de\u6eda\u3002\u5728 Seata1.5.1 \u7248\u672c\u4e2d\uff0c\u589e\u52a0\u4e86\u4e00\u5f20\u4e8b\u52a1\u63a7\u5236\u8868\uff0c\u8868\u540d\u662f tcc_fence_log \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u800c\u5728\u4e0a\u4e00\u8282 @TwoPhaseBusinessAction \u6ce8\u89e3\u4e2d\u63d0\u5230\u7684\u5c5e\u6027 useTCCFence \u5c31\u662f\u6765\u6307\u5b9a\u662f\u5426\u5f00\u542f\u8fd9\u4e2a\u673a\u5236\uff0c\u8fd9\u4e2a\u5c5e\u6027\u503c\u9ed8\u8ba4\u662f false\u3002\\n\\ntcc_fence_log \u5efa\u8868\u8bed\u53e5\u5982\u4e0b\uff08MySQL \u8bed\u6cd5\uff09\uff1a\\n```SQL\\nCREATE TABLE IF NOT EXISTS `tcc_fence_log`\\n(\\n    `xid`           VARCHAR(128)  NOT NULL COMMENT \'global id\',\\n    `branch_id`     BIGINT        NOT NULL COMMENT \'branch id\',\\n    `action_name`   VARCHAR(64)   NOT NULL COMMENT \'action name\',\\n    `status`        TINYINT       NOT NULL COMMENT \'status(tried:1;committed:2;rollbacked:3;suspended:4)\',\\n    `gmt_create`    DATETIME(3)   NOT NULL COMMENT \'create time\',\\n    `gmt_modified`  DATETIME(3)   NOT NULL COMMENT \'update time\',\\n    PRIMARY KEY (`xid`, `branch_id`),\\n    KEY `idx_gmt_modified` (`gmt_modified`),\\n    KEY `idx_status` (`status`)\\n) ENGINE = InnoDB\\nDEFAULT CHARSET = utf8mb4;\\n```\\n\\n### 4.1 \u5e42\u7b49\\n\\n\u5728 commit/cancel \u9636\u6bb5\uff0c\u56e0\u4e3a TC \u6ca1\u6709\u6536\u5230\u5206\u652f\u4e8b\u52a1\u7684\u54cd\u5e94\uff0c\u9700\u8981\u8fdb\u884c\u91cd\u8bd5\uff0c\u8fd9\u5c31\u8981\u5206\u652f\u4e8b\u52a1\u652f\u6301\u5e42\u7b49\u3002\\n\\n\u6211\u4eec\u770b\u4e00\u4e0b\u65b0\u7248\u672c\u662f\u600e\u4e48\u89e3\u51b3\u7684\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5728 TCCResourceManager \u7c7b\uff1a\\n```Java\\n@Override\\npublic BranchStatus branchCommit(BranchType branchType, String xid, long branchId, String resourceId,\\n\\t\\t\\t\\t\\t\\t\\t\\t String applicationData) throws TransactionException {\\n\\tTCCResource tccResource = (TCCResource)tccResourceCache.get(resourceId);\\n\\t//\u7701\u7565\u5224\u65ad\\n\\tObject targetTCCBean = tccResource.getTargetBean();\\n\\tMethod commitMethod = tccResource.getCommitMethod();\\n\\t//\u7701\u7565\u5224\u65ad\\n\\ttry {\\n\\t\\t//BusinessActionContext\\n\\t\\tBusinessActionContext businessActionContext = getBusinessActionContext(xid, branchId, resourceId,\\n\\t\\t\\tapplicationData);\\n\\t\\tObject[] args = this.getTwoPhaseCommitArgs(tccResource, businessActionContext);\\n\\t\\tObject ret;\\n\\t\\tboolean result;\\n\\t\\t//\u6ce8\u89e3 useTCCFence \u5c5e\u6027\u662f\u5426\u8bbe\u7f6e\u4e3a true\\n\\t\\tif (Boolean.TRUE.equals(businessActionContext.getActionContext(Constants.USE_TCC_FENCE))) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tresult = TCCFenceHandler.commitFence(commitMethod, targetTCCBean, xid, branchId, args);\\n\\t\\t\\t} catch (SkipCallbackWrapperException | UndeclaredThrowableException e) {\\n\\t\\t\\t\\tthrow e.getCause();\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\t//\u7701\u7565\u903b\u8f91\\n\\t\\t}\\n\\t\\tLOGGER.info(\\"TCC resource commit result : {}, xid: {}, branchId: {}, resourceId: {}\\", result, xid, branchId, resourceId);\\n\\t\\treturn result ? BranchStatus.PhaseTwo_Committed : BranchStatus.PhaseTwo_CommitFailed_Retryable;\\n\\t} catch (Throwable t) {\\n\\t\\t//\u7701\u7565\\n\\t\\treturn BranchStatus.PhaseTwo_CommitFailed_Retryable;\\n\\t}\\n}\\n```\\n\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\uff0c\u6267\u884c\u5206\u652f\u4e8b\u52a1\u63d0\u4ea4\u65b9\u6cd5\u65f6\uff0c\u9996\u5148\u5224\u65ad useTCCFence \u5c5e\u6027\u662f\u5426\u4e3a true\uff0c\u5982\u679c\u4e3a true\uff0c\u5219\u8d70 TCCFenceHandler \u7c7b\u4e2d\u7684 commitFence \u903b\u8f91\uff0c\u5426\u5219\u8d70\u666e\u901a\u63d0\u4ea4\u903b\u8f91\u3002\\n\\nTCCFenceHandler \u7c7b\u4e2d\u7684 commitFence \u65b9\u6cd5\u8c03\u7528\u4e86 TCCFenceHandler \u7c7b\u7684 commitFence \u65b9\u6cd5\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\n```Java\\npublic static boolean commitFence(Method commitMethod, Object targetTCCBean,\\n\\t\\t\\t\\t\\t\\t\\t\\t  String xid, Long branchId, Object[] args) {\\n\\treturn transactionTemplate.execute(status -> {\\n\\t\\ttry {\\n\\t\\t\\tConnection conn = DataSourceUtils.getConnection(dataSource);\\n\\t\\t\\tTCCFenceDO tccFenceDO = TCC_FENCE_DAO.queryTCCFenceDO(conn, xid, branchId);\\n\\t\\t\\tif (tccFenceDO == null) {\\n\\t\\t\\t\\tthrow new TCCFenceException(String.format(\\"TCC fence record not exists, commit fence method failed. xid= %s, branchId= %s\\", xid, branchId),\\n\\t\\t\\t\\t\\t\\tFrameworkErrorCode.RecordAlreadyExists);\\n\\t\\t\\t}\\n\\t\\t\\tif (TCCFenceConstant.STATUS_COMMITTED == tccFenceDO.getStatus()) {\\n\\t\\t\\t\\tLOGGER.info(\\"Branch transaction has already committed before. idempotency rejected. xid: {}, branchId: {}, status: {}\\", xid, branchId, tccFenceDO.getStatus());\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t\\tif (TCCFenceConstant.STATUS_ROLLBACKED == tccFenceDO.getStatus() || TCCFenceConstant.STATUS_SUSPENDED == tccFenceDO.getStatus()) {\\n\\t\\t\\t\\tif (LOGGER.isWarnEnabled()) {\\n\\t\\t\\t\\t\\tLOGGER.warn(\\"Branch transaction status is unexpected. xid: {}, branchId: {}, status: {}\\", xid, branchId, tccFenceDO.getStatus());\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t\\treturn updateStatusAndInvokeTargetMethod(conn, commitMethod, targetTCCBean, xid, branchId, TCCFenceConstant.STATUS_COMMITTED, status, args);\\n\\t\\t} catch (Throwable t) {\\n\\t\\t\\tstatus.setRollbackOnly();\\n\\t\\t\\tthrow new SkipCallbackWrapperException(t);\\n\\t\\t}\\n\\t});\\n}\\n```\\n\\n\u4ece\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u63d0\u4ea4\u4e8b\u52a1\u65f6\u9996\u5148\u4f1a\u5224\u65ad tcc_fence_log \u8868\u4e2d\u662f\u5426\u5df2\u7ecf\u6709\u8bb0\u5f55\uff0c\u5982\u679c\u6709\u8bb0\u5f55\uff0c\u5219\u5224\u65ad\u4e8b\u52a1\u6267\u884c\u72b6\u6001\u5e76\u8fd4\u56de\u3002\u8fd9\u6837\u5982\u679c\u5224\u65ad\u5230\u4e8b\u52a1\u7684\u72b6\u6001\u5df2\u7ecf\u662f STATUS_COMMITTED\uff0c\u5c31\u4e0d\u4f1a\u518d\u6b21\u63d0\u4ea4\uff0c\u4fdd\u8bc1\u4e86\u5e42\u7b49\u3002\u5982\u679c tcc_fence_log \u8868\u4e2d\u6ca1\u6709\u8bb0\u5f55\uff0c\u5219\u63d2\u5165\u4e00\u6761\u8bb0\u5f55\uff0c\u4f9b\u540e\u9762\u91cd\u8bd5\u65f6\u5224\u65ad\u3002\\n\\nRollback \u7684\u903b\u8f91\u8ddf commit \u7c7b\u4f3c\uff0c\u903b\u8f91\u5728\u7c7b TCCFenceHandler \u7684 rollbackFence \u65b9\u6cd5\u3002\\n\\n### 4.2 \u7a7a\u56de\u6eda\\n\\n\u5982\u4e0b\u56fe\uff0c\u8d26\u6237\u670d\u52a1\u662f\u4e24\u4e2a\u8282\u70b9\u7684\u96c6\u7fa4\uff0c\u5728 try \u9636\u6bb5\u8d26\u6237\u670d\u52a1 1 \u8fd9\u4e2a\u8282\u70b9\u53d1\u751f\u4e86\u6545\u969c\uff0ctry \u9636\u6bb5\u5728\u4e0d\u8003\u8651\u91cd\u8bd5\u7684\u60c5\u51b5\u4e0b\uff0c\u5168\u5c40\u4e8b\u52a1\u5fc5\u987b\u8981\u8d70\u5411\u7ed3\u675f\u72b6\u6001\uff0c\u8fd9\u6837\u5c31\u9700\u8981\u5728\u8d26\u6237\u670d\u52a1\u4e0a\u6267\u884c\u4e00\u6b21 cancel \u64cd\u4f5c\u3002\\n\\n![fence-empty-rollback](/img/blog/fence-empty-rollback.png)\\n\\n\\nSeata \u7684\u89e3\u51b3\u65b9\u6848\u662f\u5728 try \u9636\u6bb5 \u5f80 tcc_fence_log  \u8868\u63d2\u5165\u4e00\u6761\u8bb0\u5f55\uff0cstatus \u5b57\u6bb5\u503c\u662f STATUS_TRIED\uff0c\u5728 Rollback \u9636\u6bb5\u5224\u65ad\u8bb0\u5f55\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u4e0d\u6267\u884c\u56de\u6eda\u64cd\u4f5c\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\\n```Java\\n//TCCFenceHandler \u7c7b\\npublic static Object prepareFence(String xid, Long branchId, String actionName, Callback<Object> targetCallback) {\\n\\treturn transactionTemplate.execute(status -> {\\n\\t\\ttry {\\n\\t\\t\\tConnection conn = DataSourceUtils.getConnection(dataSource);\\n\\t\\t\\tboolean result = insertTCCFenceLog(conn, xid, branchId, actionName, TCCFenceConstant.STATUS_TRIED);\\n\\t\\t\\tLOGGER.info(\\"TCC fence prepare result: {}. xid: {}, branchId: {}\\", result, xid, branchId);\\n\\t\\t\\tif (result) {\\n\\t\\t\\t\\treturn targetCallback.execute();\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tthrow new TCCFenceException(String.format(\\"Insert tcc fence record error, prepare fence failed. xid= %s, branchId= %s\\", xid, branchId),\\n\\t\\t\\t\\t\\t\\tFrameworkErrorCode.InsertRecordError);\\n\\t\\t\\t}\\n\\t\\t} catch (TCCFenceException e) {\\n\\t\\t\\t//\u7701\u7565\\n\\t\\t} catch (Throwable t) {\\n\\t\\t\\t//\u7701\u7565\\n\\t\\t}\\n\\t});\\n}\\n```\\n\u5728 Rollback \u9636\u6bb5\u7684\u5904\u7406\u903b\u8f91\u5982\u4e0b:\\n```Java\\n//TCCFenceHandler \u7c7b\\npublic static boolean rollbackFence(Method rollbackMethod, Object targetTCCBean,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tString xid, Long branchId, Object[] args, String actionName) {\\n\\treturn transactionTemplate.execute(status -> {\\n\\t\\ttry {\\n\\t\\t\\tConnection conn = DataSourceUtils.getConnection(dataSource);\\n\\t\\t\\tTCCFenceDO tccFenceDO = TCC_FENCE_DAO.queryTCCFenceDO(conn, xid, branchId);\\n\\t\\t\\t// non_rollback\\n\\t\\t\\tif (tccFenceDO == null) {\\n\\t\\t\\t\\t//\u4e0d\u6267\u884c\u56de\u6eda\u903b\u8f91\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (TCCFenceConstant.STATUS_ROLLBACKED == tccFenceDO.getStatus() || TCCFenceConstant.STATUS_SUSPENDED == tccFenceDO.getStatus()) {\\n\\t\\t\\t\\t\\tLOGGER.info(\\"Branch transaction had already rollbacked before, idempotency rejected. xid: {}, branchId: {}, status: {}\\", xid, branchId, tccFenceDO.getStatus());\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (TCCFenceConstant.STATUS_COMMITTED == tccFenceDO.getStatus()) {\\n\\t\\t\\t\\t\\tif (LOGGER.isWarnEnabled()) {\\n\\t\\t\\t\\t\\t\\tLOGGER.warn(\\"Branch transaction status is unexpected. xid: {}, branchId: {}, status: {}\\", xid, branchId, tccFenceDO.getStatus());\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn updateStatusAndInvokeTargetMethod(conn, rollbackMethod, targetTCCBean, xid, branchId, TCCFenceConstant.STATUS_ROLLBACKED, status, args);\\n\\t\\t} catch (Throwable t) {\\n\\t\\t\\tstatus.setRollbackOnly();\\n\\t\\t\\tthrow new SkipCallbackWrapperException(t);\\n\\t\\t}\\n\\t});\\n}\\n```\\n\\nupdateStatusAndInvokeTargetMethod \u65b9\u6cd5\u6267\u884c\u7684 sql \u5982\u4e0b\uff1a\\n```sql\\nupdate tcc_fence_log set status = ?, gmt_modified = ?\\n    where xid = ? and  branch_id = ? and status = ? ;\\n```\\n\u53ef\u89c1\u5c31\u662f\u628a tcc_fence_log \u8868\u8bb0\u5f55\u7684  status  \u5b57\u6bb5\u503c\u4ece STATUS_TRIED \u6539\u4e3a STATUS_ROLLBACKED\uff0c\u5982\u679c\u66f4\u65b0\u6210\u529f\uff0c\u5c31\u6267\u884c\u56de\u6eda\u903b\u8f91\u3002\\n\\n### 4.3 \u60ac\u6302\\n\\n\u60ac\u6302\u662f\u6307\u56e0\u4e3a\u7f51\u7edc\u95ee\u9898\uff0cRM \u5f00\u59cb\u6ca1\u6709\u6536\u5230 try \u6307\u4ee4\uff0c\u4f46\u662f\u6267\u884c\u4e86 Rollback \u540e RM \u53c8\u6536\u5230\u4e86 try \u6307\u4ee4\u5e76\u4e14\u9884\u7559\u8d44\u6e90\u6210\u529f\uff0c\u8fd9\u65f6\u5168\u5c40\u4e8b\u52a1\u5df2\u7ecf\u7ed3\u675f\uff0c\u6700\u7ec8\u5bfc\u81f4\u9884\u7559\u7684\u8d44\u6e90\u4e0d\u80fd\u91ca\u653e\u3002\u5982\u4e0b\u56fe\uff1a\\n\\n\\n![fence-suspend](/img/blog/fence-suspend.png)\\n\\n\\nSeata \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u6267\u884c Rollback \u65b9\u6cd5\u65f6\u5148\u5224\u65ad tcc_fence_log \u662f\u5426\u5b58\u5728\u5f53\u524d xid \u7684\u8bb0\u5f55\uff0c\u5982\u679c\u6ca1\u6709\u5219\u5411 tcc_fence_log \u8868\u63d2\u5165\u4e00\u6761\u8bb0\u5f55\uff0c\u72b6\u6001\u662f STATUS_SUSPENDED\uff0c\u5e76\u4e14\u4e0d\u518d\u6267\u884c\u56de\u6eda\u64cd\u4f5c\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\\n```Java\\npublic static boolean rollbackFence(Method rollbackMethod, Object targetTCCBean,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tString xid, Long branchId, Object[] args, String actionName) {\\n\\treturn transactionTemplate.execute(status -> {\\n\\t\\ttry {\\n\\t\\t\\tConnection conn = DataSourceUtils.getConnection(dataSource);\\n\\t\\t\\tTCCFenceDO tccFenceDO = TCC_FENCE_DAO.queryTCCFenceDO(conn, xid, branchId);\\n\\t\\t\\t// non_rollback\\n\\t\\t\\tif (tccFenceDO == null) {\\n\\t\\t\\t    //\u63d2\u5165\u9632\u60ac\u6302\u8bb0\u5f55\\n\\t\\t\\t\\tboolean result = insertTCCFenceLog(conn, xid, branchId, actionName, TCCFenceConstant.STATUS_SUSPENDED);\\n\\t\\t\\t\\t//\u7701\u7565\u903b\u8f91\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t//\u7701\u7565\u903b\u8f91\\n\\t\\t\\t}\\n\\t\\t\\treturn updateStatusAndInvokeTargetMethod(conn, rollbackMethod, targetTCCBean, xid, branchId, TCCFenceConstant.STATUS_ROLLBACKED, status, args);\\n\\t\\t} catch (Throwable t) {\\n\\t\\t\\t//\u7701\u7565\u903b\u8f91\\n\\t\\t}\\n\\t});\\n}\\n```\\n\\n\u800c\u540e\u9762\u6267\u884c try \u9636\u6bb5\u65b9\u6cd5\u65f6\u9996\u5148\u4f1a\u5411 tcc_fence_log \u8868\u63d2\u5165\u4e00\u6761\u5f53\u524d xid \u7684\u8bb0\u5f55\uff0c\u8fd9\u6837\u5c31\u9020\u6210\u4e86\u4e3b\u952e\u51b2\u7a81\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\\n```Java\\n//TCCFenceHandler \u7c7b\\npublic static Object prepareFence(String xid, Long branchId, String actionName, Callback<Object> targetCallback) {\\n\\treturn transactionTemplate.execute(status -> {\\n\\t\\ttry {\\n\\t\\t\\tConnection conn = DataSourceUtils.getConnection(dataSource);\\n\\t\\t\\tboolean result = insertTCCFenceLog(conn, xid, branchId, actionName, TCCFenceConstant.STATUS_TRIED);\\n\\t\\t\\t//\u7701\u7565\u903b\u8f91\\n\\t\\t} catch (TCCFenceException e) {\\n\\t\\t\\tif (e.getErrcode() == FrameworkErrorCode.DuplicateKeyException) {\\n\\t\\t\\t\\tLOGGER.error(\\"Branch transaction has already rollbacked before,prepare fence failed. xid= {},branchId = {}\\", xid, branchId);\\n\\t\\t\\t\\taddToLogCleanQueue(xid, branchId);\\n\\t\\t\\t}\\n\\t\\t\\tstatus.setRollbackOnly();\\n\\t\\t\\tthrow new SkipCallbackWrapperException(e);\\n\\t\\t} catch (Throwable t) {\\n\\t\\t\\t//\u7701\u7565\\n\\t\\t}\\n\\t});\\n}\\n```\\n\\n**\u6ce8\u610f\uff1aqueryTCCFenceDO \u65b9\u6cd5 sql \u4e2d\u4f7f\u7528\u4e86 for update\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u62c5\u5fc3 Rollback \u65b9\u6cd5\u4e2d\u83b7\u53d6\u4e0d\u5230 tcc_fence_log \u8868\u8bb0\u5f55\u800c\u65e0\u6cd5\u5224\u65ad try \u9636\u6bb5\u672c\u5730\u4e8b\u52a1\u7684\u6267\u884c\u7ed3\u679c\u4e86\u3002**\\n\\n## 5 \u603b\u7ed3\\n\\nTCC \u6a21\u5f0f\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u4e8b\u52a1\u6a21\u5f0f\uff0c\u4f46\u662f\u5e42\u7b49\u3001\u60ac\u6302\u548c\u7a7a\u56de\u6eda\u4e00\u76f4\u662f TCC \u6a21\u5f0f\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\uff0cSeata \u6846\u67b6\u5728 1.5.1 \u7248\u672c\u5b8c\u7f8e\u89e3\u51b3\u4e86\u8fd9\u4e9b\u95ee\u9898\u3002\\n\\n\u5bf9 tcc_fence_log \u8868\u7684\u64cd\u4f5c\u4e5f\u9700\u8981\u8003\u8651\u4e8b\u52a1\u7684\u63a7\u5236\uff0cSeata \u4f7f\u7528\u4e86\u4ee3\u7406\u6570\u636e\u6e90\uff0c\u4f7f tcc_fence_log \u8868\u64cd\u4f5c\u548c RM \u4e1a\u52a1\u64cd\u4f5c\u5728\u540c\u4e00\u4e2a\u672c\u5730\u4e8b\u52a1\u4e2d\u6267\u884c\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u672c\u5730\u64cd\u4f5c\u548c\u5bf9 tcc_fence_log \u7684\u64cd\u4f5c\u540c\u65f6\u6210\u529f\u6216\u5931\u8d25\u3002"},{"id":"/seata-tcc","metadata":{"permalink":"/zh-cn/blog/seata-tcc","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-tcc.md","title":"\u6df1\u5ea6\u5256\u6790 Seata TCC \u6a21\u5f0f\uff08\u4e00\uff09","description":"Seata \u76ee\u524d\u652f\u6301 AT \u6a21\u5f0f\u3001XA \u6a21\u5f0f\u3001TCC \u6a21\u5f0f\u548c SAGA \u6a21\u5f0f\uff0c\u4e4b\u524d\u6587\u7ae0\u66f4\u591a\u8c08\u53ca\u7684\u662f\u975e\u4fb5\u5165\u5f0f\u7684 AT \u6a21\u5f0f\uff0c\u4eca\u5929\u5e26\u5927\u5bb6\u8ba4\u8bc6\u4e00\u4e0b\u540c\u6837\u662f\u4e8c\u9636\u6bb5\u63d0\u4ea4\u7684 TCC \u6a21\u5f0f\u3002","date":"2022-01-18T00:00:00.000Z","formattedDate":"2022\u5e741\u670818\u65e5","tags":[],"readingTime":14.805,"hasTruncateMarker":false,"authors":[{"name":"\u5f20\u4e58\u8f89"}],"frontMatter":{"title":"\u6df1\u5ea6\u5256\u6790 Seata TCC \u6a21\u5f0f\uff08\u4e00\uff09","author":"\u5f20\u4e58\u8f89","keywords":["Seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001TCC"],"description":"Seata \u76ee\u524d\u652f\u6301 AT \u6a21\u5f0f\u3001XA \u6a21\u5f0f\u3001TCC \u6a21\u5f0f\u548c SAGA \u6a21\u5f0f\uff0c\u4e4b\u524d\u6587\u7ae0\u66f4\u591a\u8c08\u53ca\u7684\u662f\u975e\u4fb5\u5165\u5f0f\u7684 AT \u6a21\u5f0f\uff0c\u4eca\u5929\u5e26\u5927\u5bb6\u8ba4\u8bc6\u4e00\u4e0b\u540c\u6837\u662f\u4e8c\u9636\u6bb5\u63d0\u4ea4\u7684 TCC \u6a21\u5f0f\u3002","date":"2022/01/18"},"prevItem":{"title":"\u963f\u91cc Seata \u65b0\u7248\u672c\u7ec8\u4e8e\u89e3\u51b3\u4e86 TCC \u6a21\u5f0f\u7684\u5e42\u7b49\u3001\u60ac\u6302\u548c\u7a7a\u56de\u6eda\u95ee\u9898","permalink":"/zh-cn/blog/seata-tcc-fence"},"nextItem":{"title":"\u8be6\u89e3 Seata AT \u6a21\u5f0f\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u4e0e\u5168\u5c40\u9501\u8bbe\u8ba1","permalink":"/zh-cn/blog/seata-at-lock"}},"content":"Seata \u76ee\u524d\u652f\u6301 AT \u6a21\u5f0f\u3001XA \u6a21\u5f0f\u3001TCC \u6a21\u5f0f\u548c SAGA \u6a21\u5f0f\uff0c\u4e4b\u524d\u6587\u7ae0\u66f4\u591a\u8c08\u53ca\u7684\u662f\u975e\u4fb5\u5165\u5f0f\u7684 AT \u6a21\u5f0f\uff0c\u4eca\u5929\u5e26\u5927\u5bb6\u8ba4\u8bc6\u4e00\u4e0b\u540c\u6837\u662f\u4e8c\u9636\u6bb5\u63d0\u4ea4\u7684 TCC \u6a21\u5f0f\u3002\\n\\n# \u4ec0\u4e48\u662f TCC\\n\\nTCC \u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u7684\u4e8c\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae\uff0c\u5b83\u7684\u5168\u79f0\u4e3a Try-Confirm-Cancel\uff0c\u5373\u8d44\u6e90\u9884\u7559\uff08Try\uff09\u3001\u786e\u8ba4\u64cd\u4f5c\uff08Confirm\uff09\u3001\u53d6\u6d88\u64cd\u4f5c\uff08Cancel\uff09\uff0c\u4ed6\u4eec\u7684\u5177\u4f53\u542b\u4e49\u5982\u4e0b\uff1a\\n\\n1. Try\uff1a\u5bf9\u4e1a\u52a1\u8d44\u6e90\u7684\u68c0\u67e5\u5e76\u9884\u7559\uff1b\\n2. Confirm\uff1a\u5bf9\u4e1a\u52a1\u5904\u7406\u8fdb\u884c\u63d0\u4ea4\uff0c\u5373 commit \u64cd\u4f5c\uff0c\u53ea\u8981 Try \u6210\u529f\uff0c\u90a3\u4e48\u8be5\u6b65\u9aa4\u4e00\u5b9a\u6210\u529f\uff1b\\n3. Cancel\uff1a\u5bf9\u4e1a\u52a1\u5904\u7406\u8fdb\u884c\u53d6\u6d88\uff0c\u5373\u56de\u6eda\u64cd\u4f5c\uff0c\u8be5\u6b65\u9aa4\u56de\u5bf9 Try \u9884\u7559\u7684\u8d44\u6e90\u8fdb\u884c\u91ca\u653e\u3002\\n\\nTCC \u662f\u4e00\u79cd\u4fb5\u5165\u5f0f\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u4e0a\u4e09\u4e2a\u64cd\u4f5c\u90fd\u9700\u8981\u4e1a\u52a1\u7cfb\u7edf\u81ea\u884c\u5b9e\u73b0\uff0c\u5bf9\u4e1a\u52a1\u7cfb\u7edf\u6709\u7740\u975e\u5e38\u5927\u7684\u5165\u4fb5\u6027\uff0c\u8bbe\u8ba1\u76f8\u5bf9\u590d\u6742\uff0c\u4f46\u4f18\u70b9\u662f TCC\\n\u5b8c\u5168\u4e0d\u4f9d\u8d56\u6570\u636e\u5e93\uff0c\u80fd\u591f\u5b9e\u73b0\u8de8\u6570\u636e\u5e93\u3001\u8de8\u5e94\u7528\u8d44\u6e90\u7ba1\u7406\uff0c\u5bf9\u8fd9\u4e9b\u4e0d\u540c\u6570\u636e\u8bbf\u95ee\u901a\u8fc7\u4fb5\u5165\u5f0f\u7684\u7f16\u7801\u65b9\u5f0f\u5b9e\u73b0\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c\uff0c\u66f4\u597d\u5730\u89e3\u51b3\u4e86\u5728\u5404\u79cd\u590d\u6742\u4e1a\u52a1\u573a\u666f\u4e0b\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u3002\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20220116160157.png)\\n\\n# Seata TCC \u6a21\u5f0f\\n\\nSeata TCC \u6a21\u5f0f\u8ddf\u901a\u7528\u578b TCC \u6a21\u5f0f\u539f\u7406\u4e00\u81f4\uff0c\u6211\u4eec\u5148\u6765\u4f7f\u7528 Seata TCC \u6a21\u5f0f\u5b9e\u73b0\u4e00\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\uff1a\\n\\n\u5047\u8bbe\u73b0\u6709\u4e00\u4e2a\u4e1a\u52a1\u9700\u8981\u540c\u65f6\u4f7f\u7528\u670d\u52a1 A \u548c\u670d\u52a1 B \u5b8c\u6210\u4e00\u4e2a\u4e8b\u52a1\u64cd\u4f5c\uff0c\u6211\u4eec\u5728\u670d\u52a1 A \u5b9a\u4e49\u8be5\u670d\u52a1\u7684\u4e00\u4e2a TCC \u63a5\u53e3\uff1a\\n\\n```java\\npublic interface TccActionOne {\\n    @TwoPhaseBusinessAction(name = \\"DubboTccActionOne\\", commitMethod = \\"commit\\", rollbackMethod = \\"rollback\\")\\n    public boolean prepare(BusinessActionContext actionContext, @BusinessActionContextParameter(paramName = \\"a\\") String a);\\n\\n    public boolean commit(BusinessActionContext actionContext);\\n\\n    public boolean rollback(BusinessActionContext actionContext);\\n}\\n```\\n\\n\u540c\u6837\uff0c\u5728\u670d\u52a1 B \u5b9a\u4e49\u8be5\u670d\u52a1\u7684\u4e00\u4e2a TCC \u63a5\u53e3\uff1a\\n\\n```java\\npublic interface TccActionTwo {\\n    @TwoPhaseBusinessAction(name = \\"DubboTccActionTwo\\", commitMethod = \\"commit\\", rollbackMethod = \\"rollback\\")\\n    public void prepare(BusinessActionContext actionContext, @BusinessActionContextParameter(paramName = \\"b\\") String b);\\n\\n    public void commit(BusinessActionContext actionContext);\\n\\n    public void rollback(BusinessActionContext actionContext);\\n}\\n```\\n\\n\u5728\u4e1a\u52a1\u6240\u5728\u7cfb\u7edf\u4e2d\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\u5e76\u6267\u884c\u670d\u52a1 A \u548c\u670d\u52a1 B \u7684 TCC \u9884\u7559\u8d44\u6e90\u65b9\u6cd5\uff1a\\n\\n```java\\n@GlobalTransactional\\npublic String doTransactionCommit(){\\n    //\u670d\u52a1A\u4e8b\u52a1\u53c2\u4e0e\u8005\\n    tccActionOne.prepare(null,\\"one\\");\\n    //\u670d\u52a1B\u4e8b\u52a1\u53c2\u4e0e\u8005\\n    tccActionTwo.prepare(null,\\"two\\");\\n}\\n```\\n\\n\u4ee5\u4e0a\u5c31\u662f\u4f7f\u7528 Seata TCC \u6a21\u5f0f\u5b9e\u73b0\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\u7684\u4f8b\u5b50\uff0c\u53ef\u4ee5\u770b\u51fa\uff0cTCC \u6a21\u5f0f\u540c\u6837\u4f7f\u7528 `@GlobalTransactional` \u6ce8\u89e3\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\uff0c\u800c\u670d\u52a1 A \u548c\u670d\u52a1 B \u7684 TCC \u63a5\u53e3\u4e3a\u4e8b\u52a1\u53c2\u4e0e\u8005\uff0cSeata \u4f1a\u628a\u4e00\u4e2a TCC\\n\u63a5\u53e3\u5f53\u6210\u4e00\u4e2a Resource\uff0c\u4e5f\u53eb TCC Resource\u3002\\n\\nTCC \u63a5\u53e3\u53ef\u4ee5\u662f RPC\uff0c\u4e5f\u53ef\u4ee5\u662f JVM \u5185\u90e8\u8c03\u7528\uff0c\u610f\u5473\u7740\u4e00\u4e2a TCC \u63a5\u53e3\uff0c\u4f1a\u6709\u53d1\u8d77\u65b9\u548c\u8c03\u7528\u65b9\u4e24\u4e2a\u8eab\u4efd\uff0c\u4ee5\u4e0a\u4f8b\u5b50\uff0cTCC \u63a5\u53e3\u5728\u670d\u52a1 A \u548c\u670d\u52a1 B \u4e2d\u662f\u53d1\u8d77\u65b9\uff0c\u5728\u4e1a\u52a1\u6240\u5728\u7cfb\u7edf\u4e2d\u662f\u8c03\u7528\u65b9\u3002\u5982\u679c\u8be5 TCC \u63a5\u53e3\u4e3a Dubbo\\nRPC\uff0c\u90a3\u4e48\u8c03\u7528\u65b9\u5c31\u662f\u4e00\u4e2a dubbo:reference\uff0c\u53d1\u8d77\u65b9\u5219\u662f\u4e00\u4e2a dubbo:service\u3002\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20220116161933.png)\\n\\nSeata \u542f\u52a8\u65f6\u4f1a\u5bf9 TCC \u63a5\u53e3\u8fdb\u884c\u626b\u63cf\u5e76\u89e3\u6790\uff0c\u5982\u679c TCC \u63a5\u53e3\u662f\u4e00\u4e2a\u53d1\u5e03\u65b9\uff0c\u5219\u5728 Seata \u542f\u52a8\u65f6\u4f1a\u5411 TC \u6ce8\u518c TCC Resource\uff0c\u6bcf\u4e2a TCC Resource \u90fd\u6709\u4e00\u4e2a\u8d44\u6e90 ID\uff1b\u5982\u679c TCC\\n\u63a5\u53e3\u65f6\u4e00\u4e2a\u8c03\u7528\u65b9\uff0cSeata \u4ee3\u7406\u8c03\u7528\u65b9\uff0c\u4e0e AT \u6a21\u5f0f\u4e00\u6837\uff0c\u4ee3\u7406\u4f1a\u62e6\u622a TCC \u63a5\u53e3\u7684\u8c03\u7528\uff0c\u5373\u6bcf\u6b21\u8c03\u7528 Try \u65b9\u6cd5\uff0c\u4f1a\u5411 TC \u6ce8\u518c\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\uff0c\u63a5\u7740\u624d\u6267\u884c\u539f\u6765\u7684 RPC \u8c03\u7528\u3002\\n\\n\u5f53\u5168\u5c40\u4e8b\u52a1\u51b3\u8bae\u63d0\u4ea4/\u56de\u6eda\u65f6\uff0cTC \u4f1a\u901a\u8fc7\u5206\u652f\u6ce8\u518c\u7684\u7684\u8d44\u6e90 ID \u56de\u8c03\u5230\u5bf9\u5e94\u53c2\u4e0e\u8005\u670d\u52a1\u4e2d\u6267\u884c TCC Resource \u7684 Confirm/Cancel \u65b9\u6cd5\u3002\\n\\n# Seata \u5982\u4f55\u5b9e\u73b0 TCC \u6a21\u5f0f\\n\\n\u4ece\u4e0a\u9762\u7684 Seata TCC \u6a21\u578b\u53ef\u4ee5\u770b\u51fa\uff0cTCC \u6a21\u5f0f\u5728 Seata \u4e2d\u4e5f\u662f\u9075\u5faa TC\u3001TM\u3001RM \u4e09\u79cd\u89d2\u8272\u6a21\u578b\u7684\uff0c\u5982\u4f55\u5728\u8fd9\u4e09\u79cd\u89d2\u8272\u6a21\u578b\u4e2d\u5b9e\u73b0 TCC \u6a21\u5f0f\u5462\uff1f\u6211\u5c06\u5176\u4e3b\u8981\u5b9e\u73b0\u5f52\u7eb3\u4e3a\u8d44\u6e90\u89e3\u6790\u3001\u8d44\u6e90\u7ba1\u7406\u3001\u4e8b\u52a1\u5904\u7406\u3002\\n\\n## \u8d44\u6e90\u89e3\u6790\\n\\n\u8d44\u6e90\u89e3\u6790\u5373\u662f\u628a TCC \u63a5\u53e3\u8fdb\u884c\u89e3\u6790\u5e76\u6ce8\u518c\uff0c\u524d\u9762\u8bf4\u8fc7\uff0cTCC \u63a5\u53e3\u53ef\u4ee5\u662f RPC\uff0c\u4e5f\u53ef\u4ee5\u662f JVM \u5185\u90e8\u8c03\u7528\uff0c\u5728 Seata TCC \u6a21\u5757\u6709\u4e2d\u4e00\u4e2a remoting\\n\u6a21\u5757\uff0c\u8be5\u6a21\u5757\u4e13\u95e8\u7528\u4e8e\u89e3\u6790\u5177\u6709 `TwoPhaseBusinessAction` \u6ce8\u89e3\u7684 TCC \u63a5\u53e3\u8d44\u6e90\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20220116175059.png)\\n\\n`RemotingParser` \u63a5\u53e3\u4e3b\u8981\u6709 `isRemoting`\u3001`isReference`\u3001`isService`\u3001`getServiceDesc` \u7b49\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u7684\u5b9e\u73b0\u4e3a `DefaultRemotingParser`\uff0c\u5176\u4f59\u5404\u81ea\u7684\\nRPC \u534f\u8bae\u89e3\u6790\u7c7b\u90fd\u5728 `DefaultRemotingParser` \u4e2d\u6267\u884c\uff0cSeata \u76ee\u524d\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5bf9 Dubbo\u3001HSF\u3001SofaRpc\u3001LocalTCC \u7684 RPC \u534f\u8bae\u7684\u89e3\u6790\uff0c\u540c\u65f6\u5177\u5907 SPI \u53ef\u6269\u5c55\u6027\uff0c\u672a\u6765\u6b22\u8fce\u5927\u5bb6\u4e3a\\nSeata \u63d0\u4f9b\u66f4\u591a\u7684 RPC \u534f\u8bae\u89e3\u6790\u7c7b\u3002\\n\\n\u5728 Seata \u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4e2a `GlobalTransactionScanner ` \u6ce8\u89e3\u8fdb\u884c\u626b\u63cf\uff0c\u4f1a\u6267\u884c\u4ee5\u4e0b\u65b9\u6cd5\uff1a\\n\\n`io.seata.spring.util.TCCBeanParserUtils#isTccAutoProxy`\\n\\n\u8be5\u65b9\u6cd5\u76ee\u7684\u662f\u5224\u65ad bean \u662f\u5426\u5df2\u88ab TCC \u4ee3\u7406\uff0c\u5728\u8fc7\u7a0b\u4e2d\u4f1a\u5148\u5224\u65ad bean \u662f\u5426\u662f\u4e00\u4e2a Remoting bean\uff0c\u5982\u679c\u662f\u5219\u8c03\u7528 `getServiceDesc` \u65b9\u6cd5\u5bf9 remoting bean\\n\u8fdb\u884c\u89e3\u6790\uff0c\u540c\u65f6\u5224\u65ad\u5982\u679c\u662f\u4e00\u4e2a\u53d1\u8d77\u65b9\uff0c\u5219\u5bf9\u5176\u8fdb\u884c\u8d44\u6e90\u6ce8\u518c\uff1a\\n\\nio.seata.rm.tcc.remoting.parser.DefaultRemotingParser#parserRemotingServiceInfo\\n\\n```java\\npublic RemotingDesc parserRemotingServiceInfo(Object bean,String beanName,RemotingParser remotingParser){\\n    RemotingDesc remotingBeanDesc=remotingParser.getServiceDesc(bean,beanName);\\n    if(remotingBeanDesc==null){\\n    return null;\\n    }\\n    remotingServiceMap.put(beanName,remotingBeanDesc);\\n\\n    Class<?> interfaceClass=remotingBeanDesc.getInterfaceClass();\\n    Method[]methods=interfaceClass.getMethods();\\n    if(remotingParser.isService(bean,beanName)){\\n    try{\\n    //service bean, registry resource\\n    Object targetBean=remotingBeanDesc.getTargetBean();\\n    for(Method m:methods){\\n    TwoPhaseBusinessAction twoPhaseBusinessAction=m.getAnnotation(TwoPhaseBusinessAction.class);\\n    if(twoPhaseBusinessAction!=null){\\n    TCCResource tccResource=new TCCResource();\\n    tccResource.setActionName(twoPhaseBusinessAction.name());\\n    tccResource.setTargetBean(targetBean);\\n    tccResource.setPrepareMethod(m);\\n    tccResource.setCommitMethodName(twoPhaseBusinessAction.commitMethod());\\n    tccResource.setCommitMethod(interfaceClass.getMethod(twoPhaseBusinessAction.commitMethod(),\\n    twoPhaseBusinessAction.commitArgsClasses()));\\n    tccResource.setRollbackMethodName(twoPhaseBusinessAction.rollbackMethod());\\n    tccResource.setRollbackMethod(interfaceClass.getMethod(twoPhaseBusinessAction.rollbackMethod(),\\n    twoPhaseBusinessAction.rollbackArgsClasses()));\\n    // set argsClasses\\n    tccResource.setCommitArgsClasses(twoPhaseBusinessAction.commitArgsClasses());\\n    tccResource.setRollbackArgsClasses(twoPhaseBusinessAction.rollbackArgsClasses());\\n    // set phase two method\'s keys\\n    tccResource.setPhaseTwoCommitKeys(this.getTwoPhaseArgs(tccResource.getCommitMethod(),\\n    twoPhaseBusinessAction.commitArgsClasses()));\\n    tccResource.setPhaseTwoRollbackKeys(this.getTwoPhaseArgs(tccResource.getRollbackMethod(),\\n    twoPhaseBusinessAction.rollbackArgsClasses()));\\n    //registry tcc resource\\n    DefaultResourceManager.get().registerResource(tccResource);\\n    }\\n    }\\n    }catch(Throwable t){\\n    throw new FrameworkException(t,\\"parser remoting service error\\");\\n    }\\n    }\\n    if(remotingParser.isReference(bean,beanName)){\\n    //reference bean, TCC proxy\\n    remotingBeanDesc.setReference(true);\\n    }\\n    return remotingBeanDesc;\\n    }\\n```\\n\\n\u4ee5\u4e0a\u65b9\u6cd5\uff0c\u5148\u8c03\u7528\u89e3\u6790\u7c7b `getServiceDesc` \u65b9\u6cd5\u5bf9 remoting bean \u8fdb\u884c\u89e3\u6790\uff0c\u5e76\u5c06\u89e3\u6790\u540e\u7684 `remotingBeanDesc` \u653e\u5165 \u672c\u5730\u7f13\u5b58 `remotingServiceMap`\\n\u4e2d\uff0c\u540c\u65f6\u8c03\u7528\u89e3\u6790\u7c7b `isService` \u65b9\u6cd5\u5224\u65ad\u662f\u5426\u4e3a\u53d1\u8d77\u65b9\uff0c\u5982\u679c\u662f\u53d1\u8d77\u65b9\uff0c\u5219\u89e3\u6790 `TwoPhaseBusinessAction` \u6ce8\u89e3\u5185\u5bb9\u751f\u6210\u4e00\u4e2a `TCCResource`\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u8d44\u6e90\u6ce8\u518c\u3002\\n\\n## \u8d44\u6e90\u7ba1\u7406\\n\\n**1\u3001\u8d44\u6e90\u6ce8\u518c**\\n\\nSeata TCC \u6a21\u5f0f\u7684\u8d44\u6e90\u53eb `TCCResource`\uff0c\u5176\u8d44\u6e90\u7ba1\u7406\u5668\u53eb `TCCResourceManager`\uff0c\u524d\u9762\u8bb2\u8fc7\uff0c\u5f53\u89e3\u6790\u5b8c TCC \u63a5\u53e3 RPC \u8d44\u6e90\u540e\uff0c\u5982\u679c\u662f\u53d1\u8d77\u65b9\uff0c\u5219\u4f1a\u5bf9\u5176\u8fdb\u884c\u8d44\u6e90\u6ce8\u518c\uff1a\\n\\nio.seata.rm.tcc.TCCResourceManager#registerResource\\n\\n```java\\npublic void registerResource(Resource resource){\\n    TCCResource tccResource=(TCCResource)resource;\\n    tccResourceCache.put(tccResource.getResourceId(),tccResource);\\n    super.registerResource(tccResource);\\n    }\\n```\\n\\n`TCCResource` \u5305\u542b\u4e86 TCC \u63a5\u53e3\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u540c\u65f6\u4f1a\u5728\u672c\u5730\u8fdb\u884c\u7f13\u5b58\u3002\u7ee7\u7eed\u8c03\u7528\u7236\u7c7b `registerResource` \u65b9\u6cd5\uff08\u5c01\u88c5\u4e86\u901a\u4fe1\u65b9\u6cd5\uff09\u5411 TC \u6ce8\u518c\uff0cTCC \u8d44\u6e90\u7684 resourceId \u662f\\nactionName\uff0cactionName \u5c31\u662f `@TwoParseBusinessAction` \u6ce8\u89e3\u4e2d\u7684 name\u3002\\n\\n**2\u3001\u8d44\u6e90\u63d0\u4ea4/\u56de\u6eda**\\n\\nio.seata.rm.tcc.TCCResourceManager#branchCommit\\n\\n```java\\npublic BranchStatus branchCommit(BranchType branchType,String xid,long branchId,String resourceId,\\n    String applicationData)throws TransactionException{\\n    TCCResource tccResource=(TCCResource)tccResourceCache.get(resourceId);\\n    if(tccResource==null){\\n    throw new ShouldNeverHappenException(String.format(\\"TCC resource is not exist, resourceId: %s\\",resourceId));\\n    }\\n    Object targetTCCBean=tccResource.getTargetBean();\\n    Method commitMethod=tccResource.getCommitMethod();\\n    if(targetTCCBean==null||commitMethod==null){\\n    throw new ShouldNeverHappenException(String.format(\\"TCC resource is not available, resourceId: %s\\",resourceId));\\n    }\\n    try{\\n    //BusinessActionContext\\n    BusinessActionContext businessActionContext=getBusinessActionContext(xid,branchId,resourceId,\\n    applicationData);\\n    // ... ... \\n    ret=commitMethod.invoke(targetTCCBean,args);\\n    // ... ... \\n    return result?BranchStatus.PhaseTwo_Committed:BranchStatus.PhaseTwo_CommitFailed_Retryable;\\n    }catch(Throwable t){\\n    String msg=String.format(\\"commit TCC resource error, resourceId: %s, xid: %s.\\",resourceId,xid);\\n    LOGGER.error(msg,t);\\n    return BranchStatus.PhaseTwo_CommitFailed_Retryable;\\n    }\\n    }\\n```\\n\\n\u5f53 TM \u51b3\u8bae\u4e8c\u9636\u6bb5\u63d0\u4ea4\uff0cTC \u4f1a\u901a\u8fc7\u5206\u652f\u6ce8\u518c\u7684\u7684\u8d44\u6e90 ID \u56de\u8c03\u5230\u5bf9\u5e94\u53c2\u4e0e\u8005\uff08\u5373 TCC \u63a5\u53e3\u53d1\u8d77\u65b9\uff09\u670d\u52a1\u4e2d\u6267\u884c TCC Resource \u7684 Confirm/Cancel \u65b9\u6cd5\u3002\\n\\n\u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\u4f1a\u6839\u636e resourceId \u5728\u672c\u5730\u7f13\u5b58\u627e\u5230\u5bf9\u5e94\u7684 `TCCResource`\uff0c\u540c\u65f6\u6839\u636e xid\u3001branchId\u3001resourceId\u3001applicationData \u627e\u5230\u5bf9\u5e94\u7684 `BusinessActionContext`\\n\u4e0a\u4e0b\u6587\uff0c\u6267\u884c\u7684\u53c2\u6570\u5c31\u5728\u4e0a\u4e0b\u6587\u4e2d\u3002\u6700\u540e\uff0c\u6267\u884c `TCCResource` \u4e2d\u83b7\u53d6 `commit` \u7684\u65b9\u6cd5\u8fdb\u884c\u4e8c\u9636\u6bb5\u63d0\u4ea4\u3002\\n\\n\u4e8c\u9636\u6bb5\u56de\u6eda\u540c\u7406\u7c7b\u4f3c\u3002\\n\\n## \u4e8b\u52a1\u5904\u7406\\n\\n\u524d\u9762\u8bb2\u8fc7\uff0c\u5982\u679c TCC \u63a5\u53e3\u65f6\u4e00\u4e2a\u8c03\u7528\u65b9\uff0c\u5219\u4f1a\u4f7f\u7528 Seata TCC \u4ee3\u7406\u5bf9\u8c03\u7528\u65b9\u8fdb\u884c\u62e6\u622a\u5904\u7406\uff0c\u5e76\u5728\u5904\u7406\u8c03\u7528\u771f\u6b63\u7684 RPC \u65b9\u6cd5\u524d\u5bf9\u5206\u652f\u8fdb\u884c\u6ce8\u518c\u3002\\n\\n\u6267\u884c\u65b9\u6cd5`io.seata.spring.util.TCCBeanParserUtils#isTccAutoProxy`\u9664\u4e86\u5bf9 TCC \u63a5\u53e3\u8d44\u6e90\u8fdb\u884c\u89e3\u6790\uff0c\u8fd8\u4f1a\u5224\u65ad TCC \u63a5\u53e3\u662f\u5426\u4e3a\u8c03\u7528\u65b9\uff0c\u5982\u679c\u662f\u8c03\u7528\u65b9\u5219\u8fd4\u56de true\uff1a\\n\\nio.seata.spring.annotation.GlobalTransactionScanner#wrapIfNecessary\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20220116192544.png)\\n\\n\u5982\u56fe\uff0c\u5f53 `GlobalTransactionalScanner` \u626b\u63cf\u5230 TCC \u63a5\u53e3\u8c03\u7528\u65b9\uff08Reference\uff09\u65f6\uff0c\u4f1a\u4f7f `TccActionInterceptor` \u5bf9\u5176\u8fdb\u884c\u4ee3\u7406\u62e6\u622a\u5904\u7406\uff0c`TccActionInterceptor`\\n\u5b9e\u73b0 `MethodInterceptor`\u3002\\n\\n\u5728 `TccActionInterceptor` \u4e2d\u8fd8\u4f1a\u8c03\u7528 `ActionInterceptorHandler` \u7c7b\u578b\u6267\u884c\u62e6\u622a\u5904\u7406\u903b\u8f91\uff0c\u4e8b\u52a1\u76f8\u5173\u5904\u7406\u5c31\u5728 `ActionInterceptorHandler#proceed` \u65b9\u6cd5\u4e2d\uff1a\\n\\n```java\\npublic Object proceed(Method method,Object[]arguments,String xid,TwoPhaseBusinessAction businessAction,\\n    Callback<Object> targetCallback)throws Throwable{\\n    //Get action context from arguments, or create a new one and then reset to arguments\\n    BusinessActionContext actionContext=getOrCreateActionContextAndResetToArguments(method.getParameterTypes(),arguments);\\n    //Creating Branch Record\\n    String branchId=doTccActionLogStore(method,arguments,businessAction,actionContext);\\n    // ... ... \\n    try{\\n    // ... ...\\n    return targetCallback.execute();\\n    }finally{\\n    try{\\n    //to report business action context finally if the actionContext.getUpdated() is true\\n    BusinessActionContextUtil.reportContext(actionContext);\\n    }finally{\\n    // ... ... \\n    }\\n    }\\n    }\\n```\\n\\n\u4ee5\u4e0a\uff0c\u5728\u6267\u884c TCC \u63a5\u53e3\u4e00\u9636\u6bb5\u4e4b\u524d\uff0c\u4f1a\u8c03\u7528 `doTccActionLogStore` \u65b9\u6cd5\u5206\u652f\u6ce8\u518c\uff0c\u540c\u65f6\u8fd8\u4f1a\u5c06 TCC \u76f8\u5173\u4fe1\u606f\u6bd4\u5982\u53c2\u6570\u653e\u7f6e\u5728\u4e0a\u4e0b\u6587\uff0c\u4e0a\u9762\u8bb2\u7684\u8d44\u6e90\u63d0\u4ea4/\u56de\u6eda\u5c31\u4f1a\u7528\u5230\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u3002\\n\\n# \u5982\u4f55\u63a7\u5236\u5f02\u5e38\\n\\n\u5728 TCC \u6a21\u578b\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd8\u53ef\u80fd\u4f1a\u51fa\u73b0\u5404\u79cd\u5f02\u5e38\uff0c\u5176\u4e2d\u6700\u4e3a\u5e38\u89c1\u7684\u6709\u7a7a\u56de\u6eda\u3001\u5e42\u7b49\u3001\u60ac\u6302\u7b49\u3002\u4e0b\u9762\u6211\u8bb2\u4e0b Seata \u662f\u5982\u4f55\u5904\u7406\u8fd9\u4e09\u79cd\u5f02\u5e38\u7684\u3002\\n\\n## \u5982\u4f55\u5904\u7406\u7a7a\u56de\u6eda\\n\\n\u4ec0\u4e48\u662f\u7a7a\u56de\u6eda\uff1f\\n\\n\u7a7a\u56de\u6eda\u6307\u7684\u662f\u5728\u4e00\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\uff0c\u5728\u6ca1\u6709\u8c03\u7528\u53c2\u4e0e\u65b9\u7684 Try \u65b9\u6cd5\u7684\u60c5\u51b5\u4e0b\uff0cTM \u9a71\u52a8\u4e8c\u9636\u6bb5\u56de\u6eda\u8c03\u7528\u4e86\u53c2\u4e0e\u65b9\u7684 Cancel \u65b9\u6cd5\u3002\\n\\n\u90a3\u4e48\u7a7a\u56de\u6eda\u662f\u5982\u4f55\u4ea7\u751f\u7684\u5462\uff1f\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20220116201900.png)\\n\\n\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5168\u5c40\u4e8b\u52a1\u5f00\u542f\u540e\uff0c\u53c2\u4e0e\u8005 A \u5206\u652f\u6ce8\u518c\u5b8c\u6210\u4e4b\u540e\u4f1a\u6267\u884c\u53c2\u4e0e\u8005\u4e00\u9636\u6bb5 RPC \u65b9\u6cd5\uff0c\u5982\u679c\u6b64\u65f6\u53c2\u4e0e\u8005 A \u6240\u5728\u7684\u673a\u5668\u53d1\u751f\u5b95\u673a\uff0c\u7f51\u7edc\u5f02\u5e38\uff0c\u90fd\u4f1a\u9020\u6210 RPC \u8c03\u7528\u5931\u8d25\uff0c\u5373\u53c2\u4e0e\u8005 A \u4e00\u9636\u6bb5\u65b9\u6cd5\u672a\u6210\u529f\u6267\u884c\uff0c\u4f46\u662f\u6b64\u65f6\u5168\u5c40\u4e8b\u52a1\u5df2\u7ecf\u5f00\u542f\uff0cSeata\\n\u5fc5\u987b\u8981\u63a8\u8fdb\u5230\u7ec8\u6001\uff0c\u5728\u5168\u5c40\u4e8b\u52a1\u56de\u6eda\u65f6\u4f1a\u8c03\u7528\u53c2\u4e0e\u8005 A \u7684 Cancel \u65b9\u6cd5\uff0c\u4ece\u800c\u9020\u6210\u7a7a\u56de\u6eda\u3002\\n\\n\u8981\u60f3\u9632\u6b62\u7a7a\u56de\u6eda\uff0c\u90a3\u4e48\u5fc5\u987b\u5728 Cancel \u65b9\u6cd5\u4e2d\u8bc6\u522b\u8fd9\u662f\u4e00\u4e2a\u7a7a\u56de\u6eda\uff0cSeata \u662f\u5982\u4f55\u505a\u7684\u5462\uff1f\\n\\nSeata \u7684\u505a\u6cd5\u662f\u65b0\u589e\u4e00\u4e2a TCC \u4e8b\u52a1\u63a7\u5236\u8868\uff0c\u5305\u542b\u4e8b\u52a1\u7684 XID \u548c BranchID \u4fe1\u606f\uff0c\u5728 Try \u65b9\u6cd5\u6267\u884c\u65f6\u63d2\u5165\u4e00\u6761\u8bb0\u5f55\uff0c\u8868\u793a\u4e00\u9636\u6bb5\u6267\u884c\u4e86\uff0c\u6267\u884c Cancel \u65b9\u6cd5\u65f6\u8bfb\u53d6\u8fd9\u6761\u8bb0\u5f55\uff0c\u5982\u679c\u8bb0\u5f55\u4e0d\u5b58\u5728\uff0c\u8bf4\u660e Try \u65b9\u6cd5\u6ca1\u6709\u6267\u884c\u3002\\n\\n## \u5982\u4f55\u5904\u7406\u5e42\u7b49\\n\\n\u5e42\u7b49\u95ee\u9898\u6307\u7684\u662f TC \u91cd\u590d\u8fdb\u884c\u4e8c\u9636\u6bb5\u63d0\u4ea4\uff0c\u56e0\u6b64 Confirm/Cancel \u63a5\u53e3\u9700\u8981\u652f\u6301\u5e42\u7b49\u5904\u7406\uff0c\u5373\u4e0d\u4f1a\u4ea7\u751f\u8d44\u6e90\u91cd\u590d\u63d0\u4ea4\u6216\u8005\u91cd\u590d\u91ca\u653e\u3002\\n\\n\u90a3\u4e48\u5e42\u7b49\u95ee\u9898\u662f\u5982\u4f55\u4ea7\u751f\u7684\u5462\uff1f\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20220116203816.png)\\n\\n\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u53c2\u4e0e\u8005 A \u6267\u884c\u5b8c\u4e8c\u9636\u6bb5\u4e4b\u540e\uff0c\u7531\u4e8e\u7f51\u7edc\u6296\u52a8\u6216\u8005\u5b95\u673a\u95ee\u9898\uff0c\u4f1a\u9020\u6210 TC \u6536\u4e0d\u5230\u53c2\u4e0e\u8005 A \u6267\u884c\u4e8c\u9636\u6bb5\u7684\u8fd4\u56de\u7ed3\u679c\uff0cTC \u4f1a\u91cd\u590d\u53d1\u8d77\u8c03\u7528\uff0c\u76f4\u5230\u4e8c\u9636\u6bb5\u6267\u884c\u7ed3\u679c\u6210\u529f\u3002\\n\\nSeata \u662f\u5982\u4f55\u5904\u7406\u5e42\u7b49\u95ee\u9898\u7684\u5462\uff1f\\n\\n\u540c\u6837\u7684\u4e5f\u662f\u5728 TCC \u4e8b\u52a1\u63a7\u5236\u8868\u4e2d\u589e\u52a0\u4e00\u4e2a\u8bb0\u5f55\u72b6\u6001\u7684\u5b57\u6bb5 status\uff0c\u8be5\u5b57\u6bb5\u6709 3 \u4e2a\u503c\uff0c\u5206\u522b\u4e3a\uff1a\\n\\n1. tried\uff1a1\\n2. committed\uff1a2\\n3. rollbacked\uff1a3\\n\\n\u4e8c\u9636\u6bb5 Confirm/Cancel \u65b9\u6cd5\u6267\u884c\u540e\uff0c\u5c06\u72b6\u6001\u6539\u4e3a committed \u6216 rollbacked \u72b6\u6001\u3002\u5f53\u91cd\u590d\u8c03\u7528\u4e8c\u9636\u6bb5 Confirm/Cancel \u65b9\u6cd5\u65f6\uff0c\u5224\u65ad\u4e8b\u52a1\u72b6\u6001\u5373\u53ef\u89e3\u51b3\u5e42\u7b49\u95ee\u9898\u3002\\n\\n## \u5982\u4f55\u5904\u7406\u60ac\u6302\\n\\n\u60ac\u6302\u6307\u7684\u662f\u4e8c\u9636\u6bb5 Cancel \u65b9\u6cd5\u6bd4 \u4e00\u9636\u6bb5 Try \u65b9\u6cd5\u4f18\u5148\u6267\u884c\uff0c\u7531\u4e8e\u5141\u8bb8\u7a7a\u56de\u6eda\u7684\u539f\u56e0\uff0c\u5728\u6267\u884c\u5b8c\u4e8c\u9636\u6bb5 Cancel \u65b9\u6cd5\u4e4b\u540e\u76f4\u63a5\u7a7a\u56de\u6eda\u8fd4\u56de\u6210\u529f\uff0c\u6b64\u65f6\u5168\u5c40\u4e8b\u52a1\u5df2\u7ed3\u675f\uff0c\u4f46\u662f\u7531\u4e8e Try \u65b9\u6cd5\u968f\u540e\u6267\u884c\uff0c\u8fd9\u5c31\u4f1a\u9020\u6210\u4e00\u9636\u6bb5 Try\\n\u65b9\u6cd5\u9884\u7559\u7684\u8d44\u6e90\u6c38\u8fdc\u65e0\u6cd5\u63d0\u4ea4\u548c\u91ca\u653e\u4e86\u3002\\n\\n\u90a3\u4e48\u60ac\u6302\u662f\u5982\u4f55\u4ea7\u751f\u7684\u5462\uff1f\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20220116205241.png)\\n\\n\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5728\u6267\u884c\u53c2\u4e0e\u8005 A \u7684\u4e00\u9636\u6bb5 Try \u65b9\u6cd5\u65f6\uff0c\u51fa\u73b0\u7f51\u8def\u62e5\u5835\uff0c\u7531\u4e8e Seata \u5168\u5c40\u4e8b\u52a1\u6709\u8d85\u65f6\u9650\u5236\uff0c\u6267\u884c Try \u65b9\u6cd5\u8d85\u65f6\u540e\uff0cTM \u51b3\u8bae\u5168\u5c40\u56de\u6eda\uff0c\u56de\u6eda\u5b8c\u6210\u540e\u5982\u679c\u6b64\u65f6 RPC \u8bf7\u6c42\u624d\u5230\u8fbe\u53c2\u4e0e\u8005 A\uff0c\u6267\u884c Try\\n\u65b9\u6cd5\u8fdb\u884c\u8d44\u6e90\u9884\u7559\uff0c\u4ece\u800c\u9020\u6210\u60ac\u6302\u3002\\n\\nSeata \u662f\u600e\u4e48\u5904\u7406\u60ac\u6302\u7684\u5462\uff1f\\n\\n\u5728 TCC \u4e8b\u52a1\u63a7\u5236\u8868\u8bb0\u5f55\u72b6\u6001\u7684\u5b57\u6bb5 status \u4e2d\u589e\u52a0\u4e00\u4e2a\u72b6\u6001\uff1a\\n\\n1. suspended\uff1a4\\n\\n\u5f53\u6267\u884c\u4e8c\u9636\u6bb5 Cancel \u65b9\u6cd5\u65f6\uff0c\u5982\u679c\u53d1\u73b0 TCC \u4e8b\u52a1\u63a7\u5236\u8868\u6ca1\u6709\u76f8\u5173\u8bb0\u5f55\uff0c\u8bf4\u660e\u4e8c\u9636\u6bb5 Cancel \u65b9\u6cd5\u4f18\u5148\u4e00\u9636\u6bb5 Try \u65b9\u6cd5\u6267\u884c\uff0c\u56e0\u6b64\u63d2\u5165\u4e00\u6761 status=4 \u72b6\u6001\u7684\u8bb0\u5f55\uff0c\u5f53\u4e00\u9636\u6bb5 Try \u65b9\u6cd5\u540e\u9762\u6267\u884c\u65f6\uff0c\u5224\u65ad status=4 \uff0c\u5219\u8bf4\u660e\u6709\u4e8c\u9636\u6bb5 Cancel \u5df2\u6267\u884c\uff0c\u5e76\u8fd4\u56de false \u4ee5\u963b\u6b62\u4e00\u9636\u6bb5 Try \u65b9\u6cd5\u6267\u884c\u6210\u529f\u3002\\n\\n# \u4f5c\u8005\u7b80\u4ecb\\n\\n\u5f20\u4e58\u8f89\uff0c\u76ee\u524d\u5c31\u804c\u4e8e\u8682\u8681\u96c6\u56e2\uff0c\u70ed\u7231\u5206\u4eab\u6280\u672f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u300c\u540e\u7aef\u8fdb\u9636\u300d\u4f5c\u8005\uff0c\u6280\u672f\u535a\u5ba2\uff08[https://objcoding.com/](https://objcoding.com/)\uff09\u535a\u4e3b\uff0cSeata Committer\uff0cGitHub\\nID\uff1aobjcoding\u3002"},{"id":"/seata-at-lock","metadata":{"permalink":"/zh-cn/blog/seata-at-lock","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-at-lock.md","title":"\u8be6\u89e3 Seata AT \u6a21\u5f0f\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u4e0e\u5168\u5c40\u9501\u8bbe\u8ba1","description":"Seata AT \u6a21\u5f0f\u7684\u4e8b\u52a1\u9694\u79bb\u662f\u5efa\u7acb\u5728\u652f\u4e8b\u52a1\u7684\u672c\u5730\u9694\u79bb\u7ea7\u522b\u57fa\u7840\u4e4b\u4e0a\u7684\uff0c\u5728\u6570\u636e\u5e93\u672c\u5730\u9694\u79bb\u7ea7\u522b\u8bfb\u5df2\u63d0\u4ea4\u6216\u4ee5\u4e0a\u7684\u524d\u63d0\u4e0b\uff0cSeata \u8bbe\u8ba1\u4e86\u7531\u4e8b\u52a1\u534f\u8c03\u5668\u7ef4\u62a4\u7684\u5168\u5c40\u5199\u6392\u4ed6\u9501\uff0c\u6765\u4fdd\u8bc1\u4e8b\u52a1\u95f4\u7684\u5199\u9694\u79bb\uff0c\u540c\u65f6\uff0c\u5c06\u5168\u5c40\u4e8b\u52a1\u9ed8\u8ba4\u5b9a\u4e49\u5728\u8bfb\u672a\u63d0\u4ea4\u7684\u9694\u79bb\u7ea7\u522b\u4e0a\u3002","date":"2022-01-12T00:00:00.000Z","formattedDate":"2022\u5e741\u670812\u65e5","tags":[],"readingTime":9.82,"hasTruncateMarker":false,"authors":[{"name":"\u5f20\u4e58\u8f89"}],"frontMatter":{"title":"\u8be6\u89e3 Seata AT \u6a21\u5f0f\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u4e0e\u5168\u5c40\u9501\u8bbe\u8ba1","author":"\u5f20\u4e58\u8f89","keywords":["Seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001AT\u6a21\u5f0f\u3001Transaction\u3001GlobalLock"],"description":"Seata AT \u6a21\u5f0f\u7684\u4e8b\u52a1\u9694\u79bb\u662f\u5efa\u7acb\u5728\u652f\u4e8b\u52a1\u7684\u672c\u5730\u9694\u79bb\u7ea7\u522b\u57fa\u7840\u4e4b\u4e0a\u7684\uff0c\u5728\u6570\u636e\u5e93\u672c\u5730\u9694\u79bb\u7ea7\u522b\u8bfb\u5df2\u63d0\u4ea4\u6216\u4ee5\u4e0a\u7684\u524d\u63d0\u4e0b\uff0cSeata \u8bbe\u8ba1\u4e86\u7531\u4e8b\u52a1\u534f\u8c03\u5668\u7ef4\u62a4\u7684\u5168\u5c40\u5199\u6392\u4ed6\u9501\uff0c\u6765\u4fdd\u8bc1\u4e8b\u52a1\u95f4\u7684\u5199\u9694\u79bb\uff0c\u540c\u65f6\uff0c\u5c06\u5168\u5c40\u4e8b\u52a1\u9ed8\u8ba4\u5b9a\u4e49\u5728\u8bfb\u672a\u63d0\u4ea4\u7684\u9694\u79bb\u7ea7\u522b\u4e0a\u3002","date":"2022/01/12"},"prevItem":{"title":"\u6df1\u5ea6\u5256\u6790 Seata TCC \u6a21\u5f0f\uff08\u4e00\uff09","permalink":"/zh-cn/blog/seata-tcc"},"nextItem":{"title":"Welcome","permalink":"/zh-cn/blog/welcome"}},"content":"Seata AT \u6a21\u5f0f\u662f\u4e00\u79cd\u975e\u4fb5\u5165\u5f0f\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0cSeata \u5728\u5185\u90e8\u505a\u4e86\u5bf9\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u4ee3\u7406\u5c42\uff0c\u6211\u4eec\u4f7f\u7528 Seata AT \u6a21\u5f0f\u65f6\uff0c\u5b9e\u9645\u4e0a\u7528\u7684\u662f Seata \u81ea\u5e26\u7684\u6570\u636e\u6e90\u4ee3\u7406 DataSourceProxy\uff0cSeata \u5728\u8fd9\u5c42\u4ee3\u7406\u4e2d\u52a0\u5165\u4e86\u5f88\u591a\u903b\u8f91\uff0c\u6bd4\u5982\u63d2\u5165\u56de\u6eda undo_log \u65e5\u5fd7\uff0c\u68c0\u67e5\u5168\u5c40\u9501\u7b49\u3002\\n\\n\u4e3a\u4ec0\u4e48\u8981\u68c0\u67e5\u5168\u5c40\u9501\u5462\uff0c\u8fd9\u662f\u7531\u4e8e Seata AT \u6a21\u5f0f\u7684\u4e8b\u52a1\u9694\u79bb\u662f\u5efa\u7acb\u5728\u652f\u4e8b\u52a1\u7684\u672c\u5730\u9694\u79bb\u7ea7\u522b\u57fa\u7840\u4e4b\u4e0a\u7684\uff0c\u5728\u6570\u636e\u5e93\u672c\u5730\u9694\u79bb\u7ea7\u522b\u8bfb\u5df2\u63d0\u4ea4\u6216\u4ee5\u4e0a\u7684\u524d\u63d0\u4e0b\uff0cSeata \u8bbe\u8ba1\u4e86\u7531\u4e8b\u52a1\u534f\u8c03\u5668\u7ef4\u62a4\u7684\u5168\u5c40\u5199\u6392\u4ed6\u9501\uff0c\u6765\u4fdd\u8bc1\u4e8b\u52a1\u95f4\u7684\u5199\u9694\u79bb\uff0c\u540c\u65f6\uff0c\u5c06\u5168\u5c40\u4e8b\u52a1\u9ed8\u8ba4\u5b9a\u4e49\u5728\u8bfb\u672a\u63d0\u4ea4\u7684\u9694\u79bb\u7ea7\u522b\u4e0a\u3002\\n\\n# Seata \u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u89e3\u8bfb\\n\\n\u5728\u8bb2 Seata \u4e8b\u52a1\u9694\u79bb\u7ea7\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u56de\u987e\u4e00\u4e0b\u6570\u636e\u5e93\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b\uff0c\u76ee\u524d\u6570\u636e\u5e93\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b\u4e00\u5171\u6709 4 \u79cd\uff0c\u7531\u4f4e\u5230\u9ad8\u5206\u522b\u4e3a\uff1a\\n\\n1. Read uncommitted\uff1a\u8bfb\u672a\u63d0\u4ea4\\n2. Read committed\uff1a\u8bfb\u5df2\u63d0\u4ea4\\n3. Repeatable read\uff1a\u53ef\u91cd\u590d\u8bfb\\n4. Serializable\uff1a\u5e8f\u5217\u5316\\n\\n\u6570\u636e\u5e93\u4e00\u822c\u9ed8\u8ba4\u7684\u9694\u79bb\u7ea7\u522b\u4e3a\u8bfb\u5df2\u63d0\u4ea4\uff0c\u6bd4\u5982 Oracle\uff0c\u4e5f\u6709\u4e00\u4e9b\u6570\u636e\u7684\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b\u4e3a\u53ef\u91cd\u590d\u8bfb\uff0c\u6bd4\u5982 Mysql\uff0c\u4e00\u822c\u800c\u8a00\uff0c\u6570\u636e\u5e93\u7684\u8bfb\u5df2\u63d0\u4ea4\u80fd\u591f\u6ee1\u8db3\u4e1a\u52a1\u7edd\u5927\u90e8\u5206\u573a\u666f\u4e86\u3002\\n\\n\u6211\u4eec\u77e5\u9053 Seata \u7684\u4e8b\u52a1\u662f\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\uff0c\u5b83\u5305\u542b\u4e86\u82e5\u5e72\u4e2a\u5206\u652f\u672c\u5730\u4e8b\u52a1\uff0c\u5728\u5168\u5c40\u4e8b\u52a1\u6267\u884c\u8fc7\u7a0b\u4e2d\uff08\u5168\u5c40\u4e8b\u52a1\u8fd8\u6ca1\u6267\u884c\u5b8c\uff09\uff0c\u67d0\u4e2a\u672c\u5730\u4e8b\u52a1\u63d0\u4ea4\u4e86\uff0c\u5982\u679c Seata \u6ca1\u6709\u91c7\u53d6\u4efb\u52a1\u63aa\u65bd\uff0c\u5219\u4f1a\u5bfc\u81f4\u5df2\u63d0\u4ea4\u7684\u672c\u5730\u4e8b\u52a1\u88ab\u8bfb\u53d6\uff0c\u9020\u6210\u810f\u8bfb\uff0c\u5982\u679c\u6570\u636e\u5728\u5168\u5c40\u4e8b\u52a1\u63d0\u4ea4\u524d\u5df2\u63d0\u4ea4\u7684\u672c\u5730\u4e8b\u52a1\u88ab\u4fee\u6539\uff0c\u5219\u4f1a\u9020\u6210\u810f\u5199\u3002\\n\\n\u7531\u6b64\u53ef\u4ee5\u770b\u51fa\uff0c\u4f20\u7edf\u610f\u4e49\u7684\u810f\u8bfb\u662f\u8bfb\u5230\u4e86\u672a\u63d0\u4ea4\u7684\u6570\u636e\uff0cSeata \u810f\u8bfb\u662f\u8bfb\u5230\u4e86\u5168\u5c40\u4e8b\u52a1\u4e0b\u672a\u63d0\u4ea4\u7684\u6570\u636e\uff0c\u5168\u5c40\u4e8b\u52a1\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u672c\u5730\u4e8b\u52a1\uff0c\u67d0\u4e2a\u672c\u5730\u4e8b\u52a1\u63d0\u4ea4\u4e86\u4e0d\u4ee3\u8868\u5168\u5c40\u4e8b\u52a1\u63d0\u4ea4\u4e86\u3002\\n\\n\u5728\u7edd\u5927\u90e8\u5206\u5e94\u7528\u5728\u8bfb\u5df2\u63d0\u4ea4\u7684\u9694\u79bb\u7ea7\u522b\u4e0b\u5de5\u4f5c\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u800c\u5b9e\u9645\u4e0a\uff0c\u8fd9\u5f53\u4e2d\u53c8\u6709\u7edd\u5927\u591a\u6570\u7684\u5e94\u7528\u573a\u666f\uff0c\u5b9e\u9645\u4e0a\u5de5\u4f5c\u5728\u8bfb\u672a\u63d0\u4ea4\u7684\u9694\u79bb\u7ea7\u522b\u4e0b\u540c\u6837\u6ca1\u6709\u95ee\u9898\u3002\\n\\n\u5728\u6781\u7aef\u573a\u666f\u4e0b\uff0c\u5e94\u7528\u5982\u679c\u9700\u8981\u8fbe\u5230\u5168\u5c40\u7684\u8bfb\u5df2\u63d0\u4ea4\uff0cSeata \u4e5f\u63d0\u4f9b\u4e86\u5168\u5c40\u9501\u673a\u5236\u5b9e\u73b0\u5168\u5c40\u4e8b\u52a1\u8bfb\u5df2\u63d0\u4ea4\u3002\u4f46\u662f\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSeata \u7684\u5168\u5c40\u4e8b\u52a1\u662f\u5de5\u4f5c\u5728\u8bfb\u672a\u63d0\u4ea4\u9694\u79bb\u7ea7\u522b\u7684\uff0c\u4fdd\u8bc1\u7edd\u5927\u591a\u6570\u573a\u666f\u7684\u9ad8\u6548\u6027\u3002\\n\\n# \u5168\u5c40\u9501\u5b9e\u73b0\\n\\nAT \u6a21\u5f0f\u4e0b\uff0c\u4f1a\u4f7f\u7528 Seata \u5185\u90e8\u6570\u636e\u6e90\u4ee3\u7406 DataSourceProxy\uff0c\u5168\u5c40\u9501\u7684\u5b9e\u73b0\u5c31\u662f\u9690\u85cf\u5728\u8fd9\u4e2a\u4ee3\u7406\u4e2d\u3002\u6211\u4eec\u5206\u522b\u5728\u6267\u884c\u3001\u63d0\u4ea4\u7684\u8fc7\u7a0b\u90fd\u505a\u4e86\u4ec0\u4e48\u3002\\n\\n## 1\u3001\u6267\u884c\u8fc7\u7a0b\\n\\n\u6267\u884c\u8fc7\u7a0b\u5728 StatementProxy \u7c7b\uff0c\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6267\u884c SQL \u662f `select for update`\uff0c\u5219\u4f1a\u4f7f\u7528 SelectForUpdateExecutor \u7c7b\uff0c\u5982\u679c\u6267\u884c\u65b9\u6cd5\u4e2d\u5e26\u6709 `@GlobalTransactional` or `@GlobalLock`\u6ce8\u89e3\uff0c\u5219\u4f1a\u68c0\u67e5\u662f\u5426\u6709\u5168\u5c40\u9501\uff0c\u5982\u679c\u5f53\u524d\u5b58\u5728\u5168\u5c40\u9501\uff0c\u5219\u4f1a\u56de\u6eda\u672c\u5730\u4e8b\u52a1\uff0c\u901a\u8fc7 while \u5faa\u73af\u4e0d\u65ad\u5730\u91cd\u65b0\u7ade\u4e89\u83b7\u53d6\u672c\u5730\u9501\u548c\u5168\u5c40\u9501\u3002\\n\\nio.seata.rm.datasource.exec.SelectForUpdateExecutor#doExecute\\n\\n```java\\npublic T doExecute(Object... args) throws Throwable {\\n    Connection conn = statementProxy.getConnection();\\n    // ... ...\\n    try {\\n        // ... ...\\n        while (true) {\\n            try {\\n                // ... ...\\n                if (RootContext.inGlobalTransaction() || RootContext.requireGlobalLock()) {\\n                    // Do the same thing under either @GlobalTransactional or @GlobalLock, \\n                    // that only check the global lock  here.\\n                    statementProxy.getConnectionProxy().checkLock(lockKeys);\\n                } else {\\n                    throw new RuntimeException(\\"Unknown situation!\\");\\n                }\\n                break;\\n            } catch (LockConflictException lce) {\\n                if (sp != null) {\\n                    conn.rollback(sp);\\n                } else {\\n                    conn.rollback();\\n                }\\n                // trigger retry\\n                lockRetryController.sleep(lce);\\n            }\\n        }\\n    } finally {\\n        // ...\\n    }\\n```\\n\\n## 2\u3001\u63d0\u4ea4\u8fc7\u7a0b\\n\\n\u63d0\u4ea4\u8fc7\u7a0b\u5728 ConnectionProxy#doCommit\u65b9\u6cd5\u4e2d\u3002\\n\\n1\uff09\u5982\u679c\u6267\u884c\u65b9\u6cd5\u4e2d\u5e26\u6709`@GlobalTransactional`\u6ce8\u89e3\uff0c\u5219\u4f1a\u5728\u6ce8\u518c\u5206\u652f\u65f6\u5019\u83b7\u53d6\u5168\u5c40\u9501\uff1a\\n\\n- \u8bf7\u6c42 TC \u6ce8\u518c\u5206\u652f\\n\\nio.seata.rm.datasource.ConnectionProxy#register\\n\\n```java\\nprivate void register() throws TransactionException {\\n    if (!context.hasUndoLog() || !context.hasLockKey()) {\\n        return;\\n    }\\n    Long branchId = DefaultResourceManager.get().branchRegister(BranchType.AT, getDataSourceProxy().getResourceId(),\\n                                                                null, context.getXid(), null, context.buildLockKeys());\\n    context.setBranchId(branchId);\\n}\\n```\\n\\n- TC \u6ce8\u518c\u5206\u652f\u7684\u65f6\u5019\uff0c\u83b7\u53d6\u5168\u5c40\u9501\\n\\nio.seata.server.transaction.at.ATCore#branchSessionLock\\n\\n```java\\nprotected void branchSessionLock(GlobalSession globalSession, BranchSession branchSession) throws TransactionException {\\n    if (!branchSession.lock()) {\\n        throw new BranchTransactionException(LockKeyConflict, String\\n                                             .format(\\"Global lock acquire failed xid = %s branchId = %s\\", globalSession.getXid(),\\n                                                     branchSession.getBranchId()));\\n    }\\n}\\n```\\n\\n2\uff09\u5982\u679c\u6267\u884c\u65b9\u6cd5\u4e2d\u5e26\u6709`@GlobalLock`\u6ce8\u89e3\uff0c\u5728\u63d0\u4ea4\u524d\u4f1a\u67e5\u8be2\u5168\u5c40\u9501\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\u5219\u629b\u5f02\u5e38\uff1a\\n\\nio.seata.rm.datasource.ConnectionProxy#processLocalCommitWithGlobalLocks\\n\\n```java\\nprivate void processLocalCommitWithGlobalLocks() throws SQLException {\\n    checkLock(context.buildLockKeys());\\n    try {\\n        targetConnection.commit();\\n    } catch (Throwable ex) {\\n        throw new SQLException(ex);\\n    }\\n    context.reset();\\n}\\n```\\n\\n## GlobalLock \u6ce8\u89e3\u8bf4\u660e\\n\\n\u4ece\u6267\u884c\u8fc7\u7a0b\u548c\u63d0\u4ea4\u8fc7\u7a0b\u53ef\u4ee5\u770b\u51fa\uff0c\u65e2\u7136\u5f00\u542f\u5168\u5c40\u4e8b\u52a1 `@GlobalTransactional`\u6ce8\u89e3\u53ef\u4ee5\u5728\u4e8b\u52a1\u63d0\u4ea4\u524d\uff0c\u67e5\u8be2\u5168\u5c40\u9501\u662f\u5426\u5b58\u5728\uff0c\u90a3\u4e3a\u4ec0\u4e48 Seata \u8fd8\u8981\u8bbe\u8ba1\u591a\u5904\u4e00\u4e2a `@GlobalLock`\u6ce8\u89e3\u5462\uff1f\\n\\n\u56e0\u4e3a\u5e76\u4e0d\u662f\u6240\u6709\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u90fd\u9700\u8981\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\uff0c\u800c\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\u662f\u4e00\u4e2a\u6bd4\u8f83\u91cd\u7684\u64cd\u4f5c\uff0c\u9700\u8981\u5411 TC \u53d1\u8d77\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\u7b49 RPC \u8fc7\u7a0b\uff0c\u800c`@GlobalLock`\u6ce8\u89e3\u53ea\u4f1a\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u67e5\u8be2\u5168\u5c40\u9501\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u4f1a\u53bb\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\uff0c\u56e0\u6b64\u5728\u4e0d\u9700\u8981\u5168\u5c40\u4e8b\u52a1\uff0c\u800c\u53c8\u9700\u8981\u68c0\u67e5\u5168\u5c40\u9501\u907f\u514d\u810f\u8bfb\u810f\u5199\u65f6\uff0c\u4f7f\u7528`@GlobalLock`\u6ce8\u89e3\u662f\u4e00\u4e2a\u66f4\u52a0\u8f7b\u91cf\u7684\u64cd\u4f5c\u3002\\n\\n\\n\\n# \u5982\u4f55\u9632\u6b62\u810f\u5199\\n\\n\u5148\u6765\u770b\u4e00\u4e0b\u4f7f\u7528 Seata AT \u6a21\u5f0f\u662f\u600e\u4e48\u4ea7\u751f\u810f\u5199\u7684\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20211226164628.png)\\n\\n*\u6ce8\uff1a\u5206\u652f\u4e8b\u52a1\u6267\u884c\u8fc7\u7a0b\u7701\u7565\u5176\u5b83\u8fc7\u7a0b\u3002*\\n\\n\u4e1a\u52a1\u4e00\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\uff0c\u5176\u4e2d\u5305\u542b\u5206\u652f\u4e8b\u52a1A\uff08\u4fee\u6539 A\uff09\u548c\u5206\u652f\u4e8b\u52a1 B\uff08\u4fee\u6539 B\uff09\uff0c\u4e1a\u52a1\u4e8c\u4fee\u6539 A\uff0c\u5176\u4e2d\u4e1a\u52a1\u4e00\u6267\u884c\u5206\u652f\u4e8b\u52a1 A \u5148\u83b7\u53d6\u672c\u5730\u9501\uff0c\u4e1a\u52a1\u4e8c\u5219\u7b49\u5f85\u4e1a\u52a1\u4e00\u6267\u884c\u5b8c\u5206\u652f\u4e8b\u52a1 A \u4e4b\u540e\uff0c\u83b7\u5f97\u672c\u5730\u9501\u4fee\u6539 A \u5e76\u5165\u5e93\uff0c\u4e1a\u52a1\u4e00\u5728\u6267\u884c\u5206\u652f\u4e8b\u52a1\u65f6\u53d1\u751f\u5f02\u5e38\u4e86\uff0c\u7531\u4e8e\u5206\u652f\u4e8b\u52a1 A \u7684\u6570\u636e\u88ab\u4e1a\u52a1\u4e8c\u4fee\u6539\uff0c\u5bfc\u81f4\u4e1a\u52a1\u4e00\u7684\u5168\u5c40\u4e8b\u52a1\u65e0\u6cd5\u56de\u6eda\u3002\\n\\n\u5982\u4f55\u9632\u6b62\u810f\u5199\uff1f\\n\\n1\u3001\u4e1a\u52a1\u4e8c\u6267\u884c\u65f6\u52a0 `@GlobalTransactional`\u6ce8\u89e3\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20211226210337.png)\\n\\n*\u6ce8\uff1a\u5206\u652f\u4e8b\u52a1\u6267\u884c\u8fc7\u7a0b\u7701\u7565\u5176\u5b83\u8fc7\u7a0b\u3002*\\n\\n\u4e1a\u52a1\u4e8c\u5728\u6267\u884c\u5168\u5c40\u4e8b\u52a1\u8fc7\u7a0b\u4e2d\uff0c\u5206\u652f\u4e8b\u52a1 A \u63d0\u4ea4\u524d\u6ce8\u518c\u5206\u652f\u4e8b\u52a1\u83b7\u53d6\u5168\u5c40\u9501\u65f6\uff0c\u53d1\u73b0\u4e1a\u52a1\u4e1a\u52a1\u4e00\u5168\u5c40\u9501\u8fd8\u6ca1\u6267\u884c\u5b8c\uff0c\u56e0\u6b64\u4e1a\u52a1\u4e8c\u63d0\u4ea4\u4e0d\u4e86\uff0c\u629b\u5f02\u5e38\u56de\u6eda\uff0c\u6240\u4ee5\u4e0d\u4f1a\u53d1\u751f\u810f\u5199\u3002\\n\\n2\u3001\u4e1a\u52a1\u4e8c\u6267\u884c\u65f6\u52a0  `@GlobalLock`\u6ce8\u89e3\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20211226210502.png)\\n\\n*\u6ce8\uff1a\u5206\u652f\u4e8b\u52a1\u6267\u884c\u8fc7\u7a0b\u7701\u7565\u5176\u5b83\u8fc7\u7a0b\u3002*\\n\\n\u4e0e `@GlobalTransactional`\u6ce8\u89e3\u6548\u679c\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u9700\u8981\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\uff0c\u53ea\u5728\u672c\u5730\u4e8b\u52a1\u63d0\u4ea4\u524d\uff0c\u68c0\u67e5\u5168\u5c40\u9501\u662f\u5426\u5b58\u5728\u3002\\n\\n2\u3001\u4e1a\u52a1\u4e8c\u6267\u884c\u65f6\u52a0  `@GlobalLock` \u6ce8\u89e3 +  `select for update`\u8bed\u53e5\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20211226172358.png)\\n\\n\u5982\u679c\u52a0\u4e86`select for update`\u8bed\u53e5\uff0c\u5219\u4f1a\u5728 update \u524d\u68c0\u67e5\u5168\u5c40\u9501\u662f\u5426\u5b58\u5728\uff0c\u53ea\u6709\u5f53\u5168\u5c40\u9501\u91ca\u653e\u4e4b\u540e\uff0c\u4e1a\u52a1\u4e8c\u624d\u80fd\u5f00\u59cb\u6267\u884c updateA \u64cd\u4f5c\u3002\\n\\n\u5982\u679c\u5355\u5355\u662f transactional\uff0c\u90a3\u4e48\u5c31\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u810f\u5199\uff0c\u6839\u672c\u539f\u56e0\u662f\u6ca1\u6709 Globallock \u6ce8\u89e3\u65f6\uff0c\u4e0d\u4f1a\u68c0\u67e5\u5168\u5c40\u9501\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u53e6\u5916\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\u56de\u6eda\u65f6\uff0c\u53d1\u73b0\u67d0\u4e2a\u5206\u652f\u4e8b\u52a1\u88ab\u810f\u5199\u4e86\u3002\u6240\u4ee5\u52a0 select for update \u4e5f\u6709\u4e2a\u597d\u5904\uff0c\u5c31\u662f\u53ef\u4ee5\u91cd\u8bd5\u3002\\n\\n# \u5982\u4f55\u9632\u6b62\u810f\u8bfb\\n\\nSeata AT \u6a21\u5f0f\u7684\u810f\u8bfb\u662f\u6307\u5728\u5168\u5c40\u4e8b\u52a1\u672a\u63d0\u4ea4\u524d\uff0c\u88ab\u5176\u5b83\u4e1a\u52a1\u8bfb\u5230\u5df2\u63d0\u4ea4\u7684\u5206\u652f\u4e8b\u52a1\u7684\u6570\u636e\uff0c\u672c\u8d28\u4e0a\u662fSeata\u9ed8\u8ba4\u7684\u5168\u5c40\u4e8b\u52a1\u662f\u8bfb\u672a\u63d0\u4ea4\u3002\\n\\n\u90a3\u4e48\u600e\u4e48\u907f\u514d\u810f\u8bfb\u73b0\u8c61\u5462\uff1f\\n\\n\u4e1a\u52a1\u4e8c\u67e5\u8be2 A \u65f6\u52a0  `@GlobalLock` \u6ce8\u89e3 +  `select for update`\u8bed\u53e5\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20211226210633.png)\\n\\n\u52a0`select for update`\u8bed\u53e5\u4f1a\u5728\u6267\u884c SQL \u524d\u68c0\u67e5\u5168\u5c40\u9501\u662f\u5426\u5b58\u5728\uff0c\u53ea\u6709\u5f53\u5168\u5c40\u9501\u5b8c\u6210\u4e4b\u540e\uff0c\u624d\u80fd\u7ee7\u7eed\u6267\u884c SQL\uff0c\u8fd9\u6837\u5c31\u9632\u6b62\u4e86\u810f\u8bfb\u3002\\n\\n\\n# \u4f5c\u8005\u7b80\u4ecb\uff1a\\n\\n\u5f20\u4e58\u8f89\uff0c\u76ee\u524d\u5c31\u804c\u4e8e\u8682\u8681\u96c6\u56e2\uff0c\u70ed\u7231\u5206\u4eab\u6280\u672f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u300c\u540e\u7aef\u8fdb\u9636\u300d\u4f5c\u8005\uff0c\u6280\u672f\u535a\u5ba2\uff08[https://objcoding.com/](https://objcoding.com/)\uff09\u535a\u4e3b\uff0cSeata Contributor\uff0cGitHub ID\uff1aobjcoding\u3002"},{"id":"welcome","metadata":{"permalink":"/zh-cn/blog/welcome","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","formattedDate":"2021\u5e748\u670826\u65e5","tags":[{"label":"facebook","permalink":"/zh-cn/blog/tags/facebook"},{"label":"hello","permalink":"/zh-cn/blog/tags/hello"},{"label":"docusaurus","permalink":"/zh-cn/blog/tags/docusaurus"}],"readingTime":0.405,"hasTruncateMarker":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["slorber","yangshun"],"tags":["facebook","hello","docusaurus"]},"prevItem":{"title":"\u8be6\u89e3 Seata AT \u6a21\u5f0f\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u4e0e\u5168\u5c40\u9501\u8bbe\u8ba1","permalink":"/zh-cn/blog/seata-at-lock"},"nextItem":{"title":"\u5173\u4e8e\u65b0\u7248\u96ea\u82b1\u7b97\u6cd5\u7684\u7b54\u7591","permalink":"/zh-cn/blog/seata-snowflake-explain"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"/seata-snowflake-explain","metadata":{"permalink":"/zh-cn/blog/seata-snowflake-explain","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-snowflake-explain.md","title":"\u5173\u4e8e\u65b0\u7248\u96ea\u82b1\u7b97\u6cd5\u7684\u7b54\u7591","description":"\u5728\u4e0a\u4e00\u7bc7\u5173\u4e8e\u65b0\u7248\u96ea\u82b1\u7b97\u6cd5\u7684\u89e3\u6790\u4e2d\uff0c\u6211\u4eec\u63d0\u5230\u65b0\u7248\u7b97\u6cd5\u6240\u505a\u51fa\u76842\u70b9\u6539\u53d8\uff1a","date":"2021-06-21T00:00:00.000Z","formattedDate":"2021\u5e746\u670821\u65e5","tags":[],"readingTime":10.435,"hasTruncateMarker":false,"authors":[{"name":"selfishlover"}],"frontMatter":{"title":"\u5173\u4e8e\u65b0\u7248\u96ea\u82b1\u7b97\u6cd5\u7684\u7b54\u7591","author":"selfishlover","keywords":["Seata","snowflake","UUID","page split"],"date":"2021/06/21"},"prevItem":{"title":"Welcome","permalink":"/zh-cn/blog/welcome"},"nextItem":{"title":"Seata\u57fa\u4e8e\u6539\u826f\u7248\u96ea\u82b1\u7b97\u6cd5\u7684\u5206\u5e03\u5f0fUUID\u751f\u6210\u5668\u5206\u6790","permalink":"/zh-cn/blog/seata-analysis-UUID-generator"}},"content":"\u5728\u4e0a\u4e00\u7bc7\u5173\u4e8e\u65b0\u7248\u96ea\u82b1\u7b97\u6cd5\u7684\u89e3\u6790\u4e2d\uff0c\u6211\u4eec\u63d0\u5230\u65b0\u7248\u7b97\u6cd5\u6240\u505a\u51fa\u76842\u70b9\u6539\u53d8\uff1a\\n1. \u65f6\u95f4\u6233\u4e0d\u518d\u65f6\u523b\u8ffd\u968f\u7cfb\u7edf\u65f6\u949f\u3002\\n2. \u8282\u70b9ID\u548c\u65f6\u95f4\u6233\u4e92\u6362\u4f4d\u7f6e\u3002\u7531\u539f\u7248\u7684\uff1a\\n![\u539f\u7248\u4f4d\u5206\u914d\u7b56\u7565](/img/blog/seata/uuid/before.png)\\n\u6539\u6210\uff1a\\n![\u6539\u8fdb\u7248\u4f4d\u5206\u914d\u7b56\u7565](/img/blog/seata/uuid/after.png)\\n\\n\u6709\u7ec6\u5fc3\u7684\u540c\u5b66\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u65b0\u7248\u7b97\u6cd5\u5728\u5355\u8282\u70b9\u5185\u90e8\u786e\u5b9e\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u4f46\u662f\u5728\u591a\u5b9e\u4f8b\u90e8\u7f72\u65f6\uff0c\u5b83\u5c31\u4e0d\u518d\u662f\u5168\u5c40\u5355\u8c03\u9012\u589e\u4e86\u554a\uff01\u56e0\u4e3a\u663e\u800c\u6613\u89c1\uff0c\u8282\u70b9ID\u6392\u5728\u9ad8\u4f4d\uff0c\u90a3\u4e48\u8282\u70b9ID\u5927\u7684\uff0c\u751f\u6210\u7684ID\u4e00\u5b9a\u5927\u4e8e\u8282\u70b9ID\u5c0f\u7684\uff0c\u4e0d\u7ba1\u65f6\u95f4\u4e0a\u8c01\u5148\u8c01\u540e\u3002\u800c\u539f\u7248\u7b97\u6cd5\uff0c\u65f6\u95f4\u6233\u5728\u9ad8\u4f4d\uff0c\u5e76\u4e14\u59cb\u7ec8\u8ffd\u968f\u7cfb\u7edf\u65f6\u949f\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u65e9\u751f\u6210\u7684ID\u5c0f\u4e8e\u665a\u751f\u6210\u7684ID\uff0c\u53ea\u6709\u5f532\u4e2a\u8282\u70b9\u6070\u597d\u5728\u540c\u4e00\u65f6\u95f4\u6233\u751f\u6210ID\u65f6\uff0c2\u4e2aID\u7684\u5927\u5c0f\u624d\u7531\u8282\u70b9ID\u51b3\u5b9a\u3002\u8fd9\u6837\u770b\u6765\uff0c\u65b0\u7248\u7b97\u6cd5\u662f\u4e0d\u662f\u9519\u7684\uff1f\\n\\n\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\uff01\u80fd\u63d0\u51fa\u8fd9\u4e2a\u95ee\u9898\u7684\u540c\u5b66\uff0c\u8bf4\u660e\u5df2\u7ecf\u6df1\u5165\u601d\u8003\u4e86\u6807\u51c6\u7248\u96ea\u82b1\u7b97\u6cd5\u548c\u65b0\u7248\u96ea\u82b1\u7b97\u6cd5\u7684\u672c\u8d28\u533a\u522b\uff0c\u8fd9\u70b9\u503c\u5f97\u9f13\u52b1\uff01\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5148\u8bf4\u7ed3\u8bba\uff1a\u65b0\u7248\u7b97\u6cd5\u7684\u786e\u4e0d\u5177\u5907\u5168\u5c40\u7684\u5355\u8c03\u9012\u589e\u6027\uff0c\u4f46\u8fd9\u4e0d\u5f71\u54cd\u6211\u4eec\u7684\u521d\u8877(\u51cf\u5c11\u6570\u636e\u5e93\u7684\u9875\u5206\u88c2)\u3002\u8fd9\u4e2a\u7ed3\u8bba\u770b\u8d77\u6765\u6709\u70b9\u8fdd\u53cd\u76f4\u89c9\uff0c\u4f46\u53ef\u4ee5\u88ab\u8bc1\u660e\u3002\\n\\n\u5728\u8bc1\u660e\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u7b80\u5355\u56de\u987e\u4e00\u4e0b\u6570\u636e\u5e93\u5173\u4e8e\u9875\u5206\u88c2\u7684\u77e5\u8bc6\u3002\u4ee5\u7ecf\u5178\u7684mysql innodb\u4e3a\u4f8b\uff0cinnodb\u4f7f\u7528B+\u6811\u7d22\u5f15\uff0c\u5176\u4e2d\uff0c\u4e3b\u952e\u7d22\u5f15\u7684\u53f6\u5b50\u8282\u70b9\u8fd8\u4fdd\u5b58\u4e86\u6570\u636e\u884c\u7684\u5b8c\u6574\u8bb0\u5f55\uff0c\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u4ee5\u53cc\u5411\u94fe\u8868\u7684\u5f62\u5f0f\u4e32\u8054\u8d77\u6765\u3002\u53f6\u5b50\u8282\u70b9\u7684\u7269\u7406\u5b58\u50a8\u5f62\u5f0f\u4e3a\u6570\u636e\u9875\uff0c\u4e00\u4e2a\u6570\u636e\u9875\u5185\u6700\u591a\u53ef\u4ee5\u5b58\u50a8N\u6761\u884c\u8bb0\u5f55(N\u4e0e\u884c\u7684\u5927\u5c0f\u6210\u53cd\u6bd4)\u3002\u5982\u56fe\u6240\u793a\uff1a\\n![\u6570\u636e\u9875](/img/blog/seata/uuid/page1.png)  \\nB+\u6811\u7684\u7279\u6027\u8981\u6c42\uff0c\u5de6\u8fb9\u7684\u8282\u70b9\u5e94\u5c0f\u4e8e\u53f3\u8fb9\u7684\u8282\u70b9\u3002\u5982\u679c\u6b64\u65f6\u8981\u63d2\u5165\u4e00\u6761ID\u4e3a25\u7684\u8bb0\u5f55\uff0c\u4f1a\u600e\u6837\u5462(\u5047\u8bbe\u6bcf\u4e2a\u6570\u636e\u9875\u53ea\u591f\u5b58\u653e4\u6761\u8bb0\u5f55)\uff1f\u7b54\u6848\u662f\u4f1a\u5f15\u8d77\u9875\u5206\u88c2\uff0c\u5982\u56fe\uff1a\\n![\u9875\u5206\u88c2](/img/blog/seata/uuid/page2.png)  \\n\u9875\u5206\u88c2\u662fIO\u4e0d\u53cb\u597d\u7684\uff0c\u9700\u8981\u65b0\u5efa\u6570\u636e\u9875\uff0c\u62f7\u8d1d\u8f6c\u79fb\u65e7\u6570\u636e\u9875\u7684\u90e8\u5206\u8bb0\u5f55\u7b49\uff0c\u6211\u4eec\u5e94\u5c3d\u91cf\u907f\u514d\u3002\\n\\n\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3b\u952eID\u6700\u597d\u662f\u987a\u5e8f\u9012\u589e\u7684(\u4f8b\u5982\u628a\u4e3b\u952e\u8bbe\u7f6e\u4e3aauto_increment)\uff0c\u8fd9\u6837\u5c31\u53ea\u4f1a\u5728\u5f53\u524d\u6570\u636e\u9875\u653e\u6ee1\u4e86\u7684\u65f6\u5019\uff0c\u624d\u9700\u8981\u65b0\u5efa\u4e0b\u4e00\u9875\uff0c\u53cc\u5411\u94fe\u8868\u6c38\u8fdc\u662f\u987a\u5e8f\u5c3e\u90e8\u589e\u957f\u7684\uff0c\u4e0d\u4f1a\u6709\u4e2d\u95f4\u7684\u8282\u70b9\u53d1\u751f\u5206\u88c2\u7684\u60c5\u51b5\u3002\\n\\n\u6700\u7cdf\u7cd5\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3b\u952eID\u662f\u968f\u673a\u65e0\u5e8f\u751f\u6210\u7684(\u4f8b\u5982java\u4e2d\u4e00\u4e2aUUID\u5b57\u7b26\u4e32)\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u65b0\u63d2\u5165\u7684\u8bb0\u5f55\u4f1a\u968f\u673a\u5206\u914d\u5230\u4efb\u4f55\u4e00\u4e2a\u6570\u636e\u9875\uff0c\u5982\u679c\u8be5\u9875\u5df2\u6ee1\uff0c\u5c31\u4f1a\u89e6\u53d1\u9875\u5206\u88c2\u3002\\n\\n\u5982\u679c\u4e3b\u952eID\u7531\u6807\u51c6\u7248\u96ea\u82b1\u7b97\u6cd5\u751f\u6210\uff0c\u6700\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u6bcf\u4e2a\u65f6\u95f4\u6233\u5185\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u5728\u751f\u6210ID\uff0c\u8fd9\u65f6\u5019\u7b97\u6cd5\u7684\u6548\u679c\u7b49\u540c\u4e8e\u7406\u60f3\u60c5\u51b5\u7684\u987a\u5e8f\u9012\u589e\uff0c\u5373\u8ddfauto_increment\u65e0\u5dee\u3002\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u6bcf\u4e2a\u65f6\u95f4\u6233\u5185\u6240\u6709\u8282\u70b9\u90fd\u5728\u751f\u6210ID\uff0c\u8fd9\u65f6\u5019\u7b97\u6cd5\u7684\u6548\u679c\u63a5\u8fd1\u4e8e\u65e0\u5e8f(\u4f46\u4ecd\u6bd4UUID\u7684\u5b8c\u5168\u65e0\u5e8f\u8981\u597d\u5f97\u591a\uff0c\u56e0\u4e3aworkerId\u53ea\u670910\u4f4d\u51b3\u5b9a\u4e86\u6700\u591a\u53ea\u67091024\u4e2a\u8282\u70b9)\u3002\u5b9e\u9645\u751f\u4ea7\u4e2d\uff0c\u7b97\u6cd5\u7684\u6548\u679c\u53d6\u51b3\u4e8e\u4e1a\u52a1\u6d41\u91cf\uff0c\u5e76\u53d1\u5ea6\u8d8a\u4f4e\uff0c\u7b97\u6cd5\u8d8a\u63a5\u8fd1\u7406\u60f3\u60c5\u51b5\u3002\\n\\n\u90a3\u4e48\uff0c\u6362\u6210\u65b0\u7248\u7b97\u6cd5\u53c8\u4f1a\u5982\u4f55\u5462\uff1f  \\n\u65b0\u7248\u7b97\u6cd5\u4ece\u5168\u5c40\u89d2\u5ea6\u6765\u770b\uff0cID\u662f\u65e0\u5e8f\u7684\uff0c\u4f46\u5bf9\u4e8e\u6bcf\u4e00\u4e2aworkerId\uff0c\u5b83\u751f\u6210\u7684ID\u90fd\u662f\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\uff0c\u53c8\u56e0\u4e3aworkerId\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5\u6700\u591a\u53ef\u5212\u5206\u51fa1024\u4e2a\u5b50\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5b50\u5e8f\u5217\u90fd\u662f\u5355\u8c03\u9012\u589e\u7684\u3002  \\n\u5bf9\u4e8e\u6570\u636e\u5e93\u800c\u8a00\uff0c\u4e5f\u8bb8\u5b83\u521d\u671f\u63a5\u6536\u7684ID\u90fd\u662f\u65e0\u5e8f\u7684\uff0c\u6765\u81ea\u5404\u4e2a\u5b50\u5e8f\u5217\u7684ID\u90fd\u6df7\u5728\u4e00\u8d77\uff0c\u5c31\u50cf\u8fd9\u6837\uff1a\\n![\u521d\u671f](/img/blog/seata/uuid/page3.png)  \\n\u5982\u679c\u8fd9\u65f6\u5019\u6765\u4e86\u4e2aworker1-seq2\uff0c\u663e\u7136\u4f1a\u9020\u6210\u9875\u5206\u88c2\uff1a\\n![\u9996\u6b21\u5206\u88c2](/img/blog/seata/uuid/page4.png)  \\n\u4f46\u5206\u88c2\u4e4b\u540e\uff0c\u6709\u8da3\u7684\u4e8b\u60c5\u53d1\u751f\u4e86\uff0c\u5bf9\u4e8eworker1\u800c\u8a00\uff0c\u540e\u7eed\u7684seq3\uff0cseq4\u4e0d\u4f1a\u518d\u9020\u6210\u9875\u5206\u88c2(\u56e0\u4e3a\u8fd8\u88c5\u5f97\u4e0b)\uff0cseq5\u4e5f\u53ea\u9700\u8981\u50cf\u987a\u5e8f\u589e\u957f\u90a3\u6837\u65b0\u5efa\u9875\u8fdb\u884c\u94fe\u63a5(\u533a\u522b\u662f\u8fd9\u4e2a\u65b0\u9875\u4e0d\u662f\u5728\u53cc\u5411\u94fe\u8868\u7684\u5c3e\u90e8)\u3002\u6ce8\u610f\uff0cworker1\u7684\u540e\u7eedID\uff0c\u4e0d\u4f1a\u6392\u5230worker2\u53ca\u4e4b\u540e\u7684\u4efb\u610f\u8282\u70b9(\u56e0\u800c\u4e0d\u4f1a\u9020\u6210\u540e\u8fb9\u8282\u70b9\u7684\u9875\u5206\u88c2)\uff0c\u56e0\u4e3a\u5b83\u4eec\u603b\u6bd4worker2\u7684ID\u5c0f\uff1b\u4e5f\u4e0d\u4f1a\u6392\u5230worker1\u5f53\u524d\u8282\u70b9\u7684\u524d\u8fb9(\u56e0\u800c\u4e0d\u4f1a\u9020\u6210\u524d\u8fb9\u8282\u70b9\u7684\u9875\u5206\u88c2)\uff0c\u56e0\u4e3aworker1\u7684\u5b50\u5e8f\u5217\u603b\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u79f0worker1\u8fd9\u6837\u7684\u5b50\u5e8f\u5217\u8fbe\u5230\u4e86\u7a33\u6001\uff0c\u610f\u4e3a\u8fd9\u6761\u5b50\u5e8f\u5217\u5df2\u7ecf\\"\u7a33\u5b9a\\"\u4e86\uff0c\u5b83\u7684\u540e\u7eed\u589e\u957f\u53ea\u4f1a\u51fa\u73b0\u5728\u5b50\u5e8f\u5217\u7684\u5c3e\u90e8\uff0c\u800c\u4e0d\u4f1a\u9020\u6210\u5176\u5b83\u8282\u70b9\u7684\u9875\u5206\u88c2\u3002\\n\\n\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u53ef\u4ee5\u63a8\u5e7f\u5230\u5404\u4e2a\u5b50\u5e8f\u5217\u4e0a\u3002\u65e0\u8bba\u524d\u671f\u6570\u636e\u5e93\u63a5\u6536\u5230\u7684ID\u6709\u591a\u4e71\uff0c\u7ecf\u8fc7\u6709\u9650\u6b21\u7684\u9875\u5206\u88c2\u540e\uff0c\u53cc\u5411\u94fe\u8868\u603b\u80fd\u8fbe\u5230\u8fd9\u6837\u4e00\u4e2a\u7a33\u5b9a\u7684\u7ec8\u6001\uff1a\\n![\u7ec8\u6001](/img/blog/seata/uuid/page5.png)  \\n\u5230\u8fbe\u7ec8\u6001\u540e\uff0c\u540e\u7eed\u7684ID\u53ea\u4f1a\u5728\u8be5ID\u6240\u5c5e\u7684\u5b50\u5e8f\u5217\u4e0a\u8fdb\u884c\u987a\u5e8f\u589e\u957f\uff0c\u800c\u4e0d\u4f1a\u9020\u6210\u9875\u5206\u88c2\u3002\u8be5\u72b6\u6001\u4e0b\u7684\u987a\u5e8f\u589e\u957f\u4e0eauto_increment\u7684\u987a\u5e8f\u589e\u957f\u7684\u533a\u522b\u662f\uff0c\u524d\u8005\u67091024\u4e2a\u589e\u957f\u4f4d\u70b9(\u5404\u4e2a\u5b50\u5e8f\u5217\u7684\u5c3e\u90e8)\uff0c\u540e\u8005\u53ea\u6709\u5c3e\u90e8\u4e00\u4e2a\u3002\\n\\n\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u56de\u7b54\u5f00\u5934\u6240\u63d0\u51fa\u7684\u95ee\u9898\u4e86\uff1a\u65b0\u7b97\u6cd5\u4ece\u5168\u5c40\u6765\u770b\u7684\u786e\u4e0d\u662f\u5168\u5c40\u9012\u589e\u7684\uff0c\u4f46\u8be5\u7b97\u6cd5\u662f**\u6536\u655b**\u7684\uff0c\u8fbe\u5230\u7a33\u6001\u540e\uff0c\u65b0\u7b97\u6cd5\u540c\u6837\u80fd\u8fbe\u6210\u50cf\u5168\u5c40\u987a\u5e8f\u9012\u589e\u4e00\u6837\u7684\u6548\u679c\u3002\\n\\n***\\n## \u6269\u5c55\u601d\u8003\\n\\n\u4ee5\u4e0a\u53ea\u63d0\u5230\u4e86\u5e8f\u5217\u4e0d\u505c\u589e\u957f\u7684\u60c5\u51b5\uff0c\u800c\u5b9e\u8df5\u751f\u4ea7\u4e2d\uff0c\u4e0d\u5149\u6709\u65b0\u6570\u636e\u7684\u63d2\u5165\uff0c\u4e5f\u6709\u65e7\u6570\u636e\u7684\u5220\u9664\u3002\u800c\u6570\u636e\u7684\u5220\u9664\u6709\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9875\u5408\u5e76(innodb\u82e5\u53d1\u73b0\u76f8\u90bb2\u4e2a\u6570\u636e\u9875\u7684\u7a7a\u95f4\u5229\u7528\u7387\u90fd\u4e0d\u523050%\uff0c\u5c31\u4f1a\u628a\u5b83\u4fe9\u5408\u5e76)\uff0c\u8fd9\u5bf9\u65b0\u7b97\u6cd5\u7684\u5f71\u54cd\u5982\u4f55\u5462\uff1f\\n\\n\u7ecf\u8fc7\u4e0a\u9762\u7684\u6d41\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u65b0\u7b97\u6cd5\u7684\u672c\u8d28\u662f\u5229\u7528\u524d\u671f\u7684\u9875\u5206\u88c2\uff0c\u628a\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u9010\u6e10\u5206\u79bb\u5f00\u6765\uff0c\u8ba9\u7b97\u6cd5\u4e0d\u65ad\u6536\u655b\u5230\u7a33\u6001\u3002\u800c\u9875\u5408\u5e76\u5219\u6070\u597d\u76f8\u53cd\uff0c\u5b83\u6709\u53ef\u80fd\u4f1a\u628a\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u53c8\u5408\u5e76\u56de\u540c\u4e00\u4e2a\u6570\u636e\u9875\u91cc\uff0c\u59a8\u788d\u7b97\u6cd5\u7684\u6536\u655b\u3002\u5c24\u5176\u662f\u5728\u6536\u655b\u7684\u524d\u671f\uff0c\u9891\u7e41\u7684\u9875\u5408\u5e76\u751a\u81f3\u53ef\u4ee5\u8ba9\u7b97\u6cd5\u6c38\u8fdc\u65e0\u6cd5\u6536\u655b(\u4f60\u521a\u5206\u79bb\u51fa\u6765\u6211\u5c31\u53c8\u628a\u5b83\u4eec\u5408\u5e76\u56de\u53bb\uff0c\u4e00\u591c\u56de\u5230\u89e3\u653e\u524d~)\uff01\u4f46\u5728\u6536\u655b\u4e4b\u540e\uff0c\u53ea\u6709\u5728\u5404\u4e2a\u5b50\u5e8f\u5217\u7684\u5c3e\u8282\u70b9\u8fdb\u884c\u7684\u9875\u5408\u5e76\uff0c\u624d\u6709\u53ef\u80fd\u7834\u574f\u7a33\u6001(\u4e00\u4e2a\u5b50\u5e8f\u5217\u7684\u5c3e\u8282\u70b9\u548c\u4e0b\u4e00\u4e2a\u5b50\u5e8f\u5217\u7684\u5934\u8282\u70b9\u8fdb\u884c\u5408\u5e76)\u3002\u800c\u5728\u5b50\u5e8f\u5217\u5176\u4f59\u8282\u70b9\u4e0a\u7684\u9875\u5408\u5e76\uff0c\u4e0d\u5f71\u54cd\u7a33\u6001\uff0c\u56e0\u4e3a\u5b50\u5e8f\u5217\u4ecd\u7136\u662f\u6709\u5e8f\u7684\uff0c\u53ea\u4e0d\u8fc7\u957f\u5ea6\u53d8\u77ed\u4e86\u800c\u5df2\u3002\\n\\n\u4ee5seata\u7684\u670d\u52a1\u7aef\u4e3a\u4f8b\uff0c\u670d\u52a1\u7aef\u90a33\u5f20\u8868\u7684\u6570\u636e\u7684\u751f\u547d\u5468\u671f\u90fd\u662f\u6bd4\u8f83\u77ed\u7684\uff0c\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\u7ed3\u675f\u4e4b\u540e\uff0c\u5b83\u4eec\u5c31\u4f1a\u88ab\u6e05\u9664\u4e86\uff0c\u8fd9\u5bf9\u4e8e\u65b0\u7b97\u6cd5\u662f\u4e0d\u53cb\u597d\u7684\uff0c\u6ca1\u6709\u7ed9\u65f6\u95f4\u5b83\u8fdb\u884c\u6536\u655b\u3002\u4e0d\u8fc7\u5df2\u7ecf\u6709\u5ef6\u8fdf\u5220\u9664\u7684PR\u5728review\u4e2d\uff0c\u642d\u914d\u8fd9\u4e2aPR\uff0c\u6548\u679c\u4f1a\u597d\u5f88\u591a\u3002\u6bd4\u5982\u5b9a\u671f\u6bcf\u5468\u6e05\u7406\u4e00\u6b21\uff0c\u524d\u671f\u5c31\u6709\u8db3\u591f\u7684\u65f6\u95f4\u7ed9\u7b97\u6cd5\u8fdb\u884c\u6536\u655b\uff0c\u5176\u4f59\u7684\u5927\u90e8\u5206\u65f6\u95f4\uff0c\u6570\u636e\u5e93\u5c31\u80fd\u4ece\u4e2d\u53d7\u76ca\u4e86\u3002\u5230\u671f\u6e05\u7406\u65f6\uff0c\u6700\u574f\u7684\u7ed3\u679c\u4e5f\u4e0d\u8fc7\u662f\u8868\u88ab\u6e05\u7a7a\uff0c\u7b97\u6cd5\u4ece\u5934\u518d\u6765\u3002\\n\\n\u5982\u679c\u60a8\u5e0c\u671b\u628a\u65b0\u7b97\u6cd5\u5e94\u7528\u5230\u4e1a\u52a1\u7cfb\u7edf\u5f53\u4e2d\uff0c\u8bf7\u52a1\u5fc5\u786e\u4fdd\u7b97\u6cd5\u6709\u65f6\u95f4\u8fdb\u884c\u6536\u655b\u3002\u6bd4\u5982\u7528\u6237\u8868\u4e4b\u7c7b\u7684\uff0c\u6570\u636e\u672c\u5c31\u6253\u7b97\u957f\u671f\u4fdd\u5b58\u7684\uff0c\u7b97\u6cd5\u53ef\u4ee5\u81ea\u7136\u6536\u655b\u3002\u6216\u8005\u4e5f\u505a\u4e86\u5ef6\u8fdf\u5220\u9664\u7684\u673a\u5236\uff0c\u7ed9\u7b97\u6cd5\u8db3\u591f\u7684\u65f6\u95f4\u8fdb\u884c\u6536\u655b\u3002\\n\\n\u5982\u679c\u60a8\u6709\u66f4\u597d\u7684\u610f\u89c1\u548c\u5efa\u8bae\uff0c\u4e5f\u6b22\u8fce\u8ddfseata\u793e\u533a\u8054\u7cfb\uff01"},{"id":"/seata-analysis-UUID-generator","metadata":{"permalink":"/zh-cn/blog/seata-analysis-UUID-generator","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-analysis-UUID-generator.md","title":"Seata\u57fa\u4e8e\u6539\u826f\u7248\u96ea\u82b1\u7b97\u6cd5\u7684\u5206\u5e03\u5f0fUUID\u751f\u6210\u5668\u5206\u6790","description":"Seata\u5185\u7f6e\u4e86\u4e00\u4e2a\u5206\u5e03\u5f0fUUID\u751f\u6210\u5668\uff0c\u7528\u4e8e\u8f85\u52a9\u751f\u6210\u5168\u5c40\u4e8b\u52a1ID\u548c\u5206\u652f\u4e8b\u52a1ID\u3002\u6211\u4eec\u5e0c\u671b\u8be5\u751f\u6210\u5668\u5177\u6709\u5982\u4e0b\u7279\u70b9\uff1a","date":"2021-05-08T00:00:00.000Z","formattedDate":"2021\u5e745\u67088\u65e5","tags":[],"readingTime":8.405,"hasTruncateMarker":false,"authors":[{"name":"selfishlover"}],"frontMatter":{"title":"Seata\u57fa\u4e8e\u6539\u826f\u7248\u96ea\u82b1\u7b97\u6cd5\u7684\u5206\u5e03\u5f0fUUID\u751f\u6210\u5668\u5206\u6790","author":"selfishlover","keywords":["Seata","snowflake","UUID"],"date":"2021/05/08"},"prevItem":{"title":"\u5173\u4e8e\u65b0\u7248\u96ea\u82b1\u7b97\u6cd5\u7684\u7b54\u7591","permalink":"/zh-cn/blog/seata-snowflake-explain"},"nextItem":{"title":"Seata\u65b0\u7279\u6027\u652f\u6301 -- undo_log\u538b\u7f29","permalink":"/zh-cn/blog/seata-feature-undo-log-compress"}},"content":"Seata\u5185\u7f6e\u4e86\u4e00\u4e2a\u5206\u5e03\u5f0fUUID\u751f\u6210\u5668\uff0c\u7528\u4e8e\u8f85\u52a9\u751f\u6210\u5168\u5c40\u4e8b\u52a1ID\u548c\u5206\u652f\u4e8b\u52a1ID\u3002\u6211\u4eec\u5e0c\u671b\u8be5\u751f\u6210\u5668\u5177\u6709\u5982\u4e0b\u7279\u70b9\uff1a\\n- \u9ad8\u6027\u80fd\\n- \u5168\u5c40\u552f\u4e00\\n- \u8d8b\u52bf\u9012\u589e\\n\\n\u9ad8\u6027\u80fd\u4e0d\u5fc5\u591a\u8a00\u3002\u5168\u5c40\u552f\u4e00\u5f88\u91cd\u8981\uff0c\u5426\u5219\u4e0d\u540c\u7684\u5168\u5c40\u4e8b\u52a1/\u5206\u652f\u4e8b\u52a1\u4f1a\u6df7\u6dc6\u5728\u4e00\u8d77\u3002\\n\u6b64\u5916\uff0c\u8d8b\u52bf\u9012\u589e\u5bf9\u4e8e\u4f7f\u7528\u6570\u636e\u5e93\u4f5c\u4e3aTC\u96c6\u7fa4\u7684\u5b58\u50a8\u5de5\u5177\u7684\u7528\u6237\u800c\u8a00\uff0c\u80fd\u964d\u4f4e\u6570\u636e\u9875\u5206\u88c2\u7684\u9891\u7387\uff0c\u4ece\u800c\u51cf\u5c11\u6570\u636e\u5e93\u7684IO\u538b\u529b\\n(branch_table\u8868\u4ee5\u5206\u652f\u4e8b\u52a1ID\u4f5c\u4e3a\u4e3b\u952e)\u3002\\n\\n\u5728\u8001\u7248Seata(1.4\u4ee5\u524d)\uff0c\u8be5\u751f\u6210\u5668\u7684\u5b9e\u73b0\u57fa\u4e8e\u6807\u51c6\u7248\u7684\u96ea\u82b1\u7b97\u6cd5\u3002\u6807\u51c6\u7248\u96ea\u82b1\u7b97\u6cd5\u7f51\u4e0a\u5df2\u7ecf\u6709\u5f88\u591a\u89e3\u8bfb\u6587\u7ae0\u4e86\uff0c\u6b64\u5904\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\\n\u5c1a\u672a\u4e86\u89e3\u7684\u540c\u5b66\u53ef\u4ee5\u5148\u770b\u770b\u7f51\u4e0a\u7684\u76f8\u5173\u8d44\u6599\uff0c\u518d\u6765\u770b\u6b64\u6587\u7ae0\u3002\\n\u6b64\u5904\u6211\u4eec\u8c08\u8c08\u6807\u51c6\u7248\u96ea\u82b1\u7b97\u6cd5\u7684\u51e0\u4e2a\u7f3a\u70b9\uff1a\\n1. \u65f6\u949f\u654f\u611f\u3002\u56e0\u4e3aID\u751f\u6210\u603b\u662f\u548c\u5f53\u524d\u64cd\u4f5c\u7cfb\u7edf\u7684\u65f6\u95f4\u6233\u7ed1\u5b9a\u7684(\u5229\u7528\u4e86\u65f6\u95f4\u7684\u5355\u8c03\u9012\u589e\u6027)\uff0c\u56e0\u6b64\u82e5\u64cd\u4f5c\u7cfb\u7edf\u7684\u65f6\u949f\u51fa\u73b0\u56de\u62e8\uff0c\\n   \u751f\u6210\u7684ID\u5c31\u4f1a\u91cd\u590d(\u4e00\u822c\u800c\u8a00\u4e0d\u4f1a\u4eba\u4e3a\u5730\u53bb\u56de\u62e8\u65f6\u949f\uff0c\u4f46\u670d\u52a1\u5668\u4f1a\u6709\u5076\u53d1\u7684\\"\u65f6\u949f\u6f02\u79fb\\"\u73b0\u8c61)\u3002\\n   \u5bf9\u4e8e\u6b64\u95ee\u9898\uff0cSeata\u7684\u89e3\u51b3\u7b56\u7565\u662f\u8bb0\u5f55\u4e0a\u4e00\u6b21\u7684\u65f6\u95f4\u6233\uff0c\u82e5\u53d1\u73b0\u5f53\u524d\u65f6\u95f4\u6233\u5c0f\u4e8e\u8bb0\u5f55\u503c(\u610f\u5473\u7740\u51fa\u73b0\u4e86\u65f6\u949f\u56de\u62e8)\uff0c\u5219\u62d2\u7edd\u670d\u52a1\uff0c\\n   \u7b49\u5f85\u65f6\u95f4\u6233\u8ffd\u4e0a\u8bb0\u5f55\u503c\u3002 \u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u8fd9\u6bb5\u65f6\u95f4\u5185\u8be5TC\u5c06\u5904\u4e8e\u4e0d\u53ef\u7528\u72b6\u6001\u3002\\n2. \u7a81\u53d1\u6027\u80fd\u6709\u4e0a\u9650\u3002\u6807\u51c6\u7248\u96ea\u82b1\u7b97\u6cd5\u5ba3\u79f0\u7684QPS\u5f88\u5927\uff0c\u7ea6400w/s\uff0c\u4f46\u4e25\u683c\u6765\u8bf4\u8fd9\u7b97\u800d\u4e86\u4e2a\u6587\u5b57\u6e38\u620f~\\n   \u56e0\u4e3a\u7b97\u6cd5\u7684\u65f6\u95f4\u6233\u5355\u4f4d\u662f\u6beb\u79d2\uff0c\u800c\u5206\u914d\u7ed9\u5e8f\u5217\u53f7\u7684\u4f4d\u957f\u5ea6\u4e3a12\uff0c\u5373\u6bcf\u6beb\u79d24096\u4e2a\u5e8f\u5217\u7a7a\u95f4\u3002\\n   \u6240\u4ee5\u66f4\u51c6\u786e\u7684\u63cf\u8ff0\u5e94\u8be5\u662f4096/ms\u3002400w/s\u4e0e4096/ms\u7684\u533a\u522b\u5728\u4e8e\u524d\u8005\u4e0d\u8981\u6c42\u6bcf\u4e00\u6beb\u79d2\u7684\u5e76\u53d1\u90fd\u5fc5\u987b\u4f4e\u4e8e4096\\n   (\u4e5f\u8bb8\u6709\u4e9b\u6beb\u79d2\u4f1a\u9ad8\u4e8e4096\uff0c\u6709\u4e9b\u5219\u4f4e\u4e8e)\u3002Seata\u4ea6\u9075\u5faa\u6b64\u9650\u5236\uff0c\u82e5\u5f53\u524d\u65f6\u95f4\u6233\u7684\u5e8f\u5217\u7a7a\u95f4\u5df2\u8017\u5c3d\uff0c\u4f1a\u81ea\u65cb\u7b49\u5f85\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6233\u3002\\n\\n\u5728\u8f83\u65b0\u7684\u7248\u672c\u4e0a(1.4\u4e4b\u540e)\uff0c\u8be5\u751f\u6210\u5668\u9488\u5bf9\u539f\u7b97\u6cd5\u8fdb\u884c\u4e86\u4e00\u5b9a\u7684\u4f18\u5316\u6539\u826f\uff0c\u5f88\u597d\u5730\u89e3\u51b3\u4e86\u4e0a\u8ff0\u76842\u4e2a\u95ee\u9898\u3002\\n\u6539\u8fdb\u7684\u6838\u5fc3\u601d\u60f3\u662f\u89e3\u9664\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u65f6\u95f4\u6233\u7684\u65f6\u523b\u7ed1\u5b9a\uff0c\u751f\u6210\u5668\u53ea\u5728\u521d\u59cb\u5316\u65f6\u83b7\u53d6\u4e86\u7cfb\u7edf\u5f53\u524d\u7684\u65f6\u95f4\u6233\uff0c\u4f5c\u4e3a\u521d\u59cb\u65f6\u95f4\u6233\uff0c\\n\u4f46\u4e4b\u540e\u5c31\u4e0d\u518d\u4e0e\u7cfb\u7edf\u65f6\u95f4\u6233\u4fdd\u6301\u540c\u6b65\u4e86\u3002\u5b83\u4e4b\u540e\u7684\u9012\u589e\uff0c\u53ea\u7531\u5e8f\u5217\u53f7\u7684\u9012\u589e\u6765\u9a71\u52a8\u3002\u6bd4\u5982\u5e8f\u5217\u53f7\u5f53\u524d\u503c\u662f4095\uff0c\u4e0b\u4e00\u4e2a\u8bf7\u6c42\u8fdb\u6765\uff0c\\n\u5e8f\u5217\u53f7+1\u6ea2\u51fa12\u4f4d\u7a7a\u95f4\uff0c\u5e8f\u5217\u53f7\u91cd\u65b0\u5f52\u96f6\uff0c\u800c\u6ea2\u51fa\u7684\u8fdb\u4f4d\u5219\u52a0\u5230\u65f6\u95f4\u6233\u4e0a\uff0c\u4ece\u800c\u8ba9\u65f6\u95f4\u6233+1\u3002\\n\u81f3\u6b64\uff0c\u65f6\u95f4\u6233\u548c\u5e8f\u5217\u53f7\u5b9e\u9645\u53ef\u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\u4e86\u3002\u5b9e\u9645\u4e0a\u6211\u4eec\u4e5f\u662f\u8fd9\u6837\u505a\u7684\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8fd9\u79cd\u6ea2\u51fa\u8fdb\u4f4d\uff0c\u6211\u4eec\u8c03\u6574\u4e8664\u4f4dID\u7684\u4f4d\u5206\u914d\u7b56\u7565\uff0c\\n\u7531\u539f\u7248\u7684\uff1a\\n![\u539f\u7248\u4f4d\u5206\u914d\u7b56\u7565](/img/blog/seata/uuid/before.png)\\n\\n\u6539\u6210(\u5373\u65f6\u95f4\u6233\u548c\u8282\u70b9ID\u6362\u4e2a\u4f4d\u7f6e)\uff1a\\n![\u6539\u8fdb\u7248\u4f4d\u5206\u914d\u7b56\u7565](/img/blog/seata/uuid/after.png)\\n\\n\u8fd9\u6837\u65f6\u95f4\u6233\u548c\u5e8f\u5217\u53f7\u5728\u5185\u5b58\u4e0a\u662f\u8fde\u5728\u4e00\u5757\u7684\uff0c\u5728\u5b9e\u73b0\u4e0a\u5c31\u5f88\u5bb9\u6613\u7528\u4e00\u4e2a`AtomicLong`\u6765\u540c\u65f6\u4fdd\u5b58\u5b83\u4fe9\uff1a\\n```\\n/**\\n * timestamp and sequence mix in one Long\\n * highest 11 bit: not used\\n * middle  41 bit: timestamp\\n * lowest  12 bit: sequence\\n */\\nprivate AtomicLong timestampAndSequence;\\n```\\n\u6700\u9ad811\u4f4d\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u65f6\u5c31\u786e\u5b9a\u597d\uff0c\u4e4b\u540e\u4e0d\u518d\u53d8\u5316\uff1a\\n```\\n/**\\n * business meaning: machine ID (0 ~ 1023)\\n * actual layout in memory:\\n * highest 1 bit: 0\\n * middle 10 bit: workerId\\n * lowest 53 bit: all 0\\n */\\nprivate long workerId;\\n```\\n\u90a3\u4e48\u5728\u751f\u4ea7ID\u65f6\u5c31\u5f88\u7b80\u5355\u4e86\uff1a\\n```\\npublic long nextId() {\\n   // \u83b7\u5f97\u9012\u589e\u540e\u7684\u65f6\u95f4\u6233\u548c\u5e8f\u5217\u53f7\\n   long next = timestampAndSequence.incrementAndGet();\\n   // \u622a\u53d6\u4f4e53\u4f4d\\n   long timestampWithSequence = next & timestampAndSequenceMask;\\n   // \u8ddf\u5148\u524d\u4fdd\u5b58\u597d\u7684\u9ad811\u4f4d\u8fdb\u884c\u4e00\u4e2a\u6216\u7684\u4f4d\u8fd0\u7b97\\n   return workerId | timestampWithSequence;\\n}\\n```\\n\\n\u81f3\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\\n1. \u751f\u6210\u5668\u4e0d\u518d\u67094096/ms\u7684\u7a81\u53d1\u6027\u80fd\u9650\u5236\u4e86\u3002\u5018\u82e5\u67d0\u4e2a\u65f6\u95f4\u6233\u7684\u5e8f\u5217\u53f7\u7a7a\u95f4\u8017\u5c3d\uff0c\u5b83\u4f1a\u76f4\u63a5\u63a8\u8fdb\u5230\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\\n   \\"\u501f\u7528\\"\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u5e8f\u5217\u53f7\u7a7a\u95f4(\u4e0d\u5fc5\u62c5\u5fc3\u8fd9\u79cd\\"\u8d85\u524d\u6d88\u8d39\\"\u4f1a\u9020\u6210\u4e25\u91cd\u540e\u679c\uff0c\u4e0b\u9762\u4f1a\u9610\u8ff0\u7406\u7531)\u3002\\n2. \u751f\u6210\u5668\u5f31\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u65f6\u949f\u3002\u5728\u8fd0\u884c\u671f\u95f4\uff0c\u751f\u6210\u5668\u4e0d\u53d7\u65f6\u949f\u56de\u62e8\u7684\u5f71\u54cd(\u65e0\u8bba\u662f\u4eba\u4e3a\u56de\u62e8\u8fd8\u662f\u673a\u5668\u7684\u65f6\u949f\u6f02\u79fb)\uff0c\\n   \u56e0\u4e3a\u751f\u6210\u5668\u4ec5\u5728\u542f\u52a8\u65f6\u83b7\u53d6\u4e86\u4e00\u904d\u7cfb\u7edf\u65f6\u949f\uff0c\u4e4b\u540e\u4e24\u8005\u4e0d\u518d\u4fdd\u6301\u540c\u6b65\u3002\\n   \u552f\u4e00\u53ef\u80fd\u4ea7\u751f\u91cd\u590dID\u7684\u53ea\u6709\u5728\u91cd\u542f\u65f6\u7684\u5927\u5e45\u5ea6\u65f6\u949f\u56de\u62e8(\u4eba\u4e3a\u523b\u610f\u56de\u62e8\u6216\u8005\u4fee\u6539\u64cd\u4f5c\u7cfb\u7edf\u65f6\u533a\uff0c\u5982\u5317\u4eac\u65f6\u95f4\u6539\u4e3a\u4f26\u6566\u65f6\u95f4~\\n   \u673a\u5668\u65f6\u949f\u6f02\u79fb\u57fa\u672c\u662f\u6beb\u79d2\u7ea7\u7684\uff0c\u4e0d\u4f1a\u6709\u8fd9\u4e48\u5927\u7684\u5e45\u5ea6)\u3002\\n3. \u6301\u7eed\u4e0d\u65ad\u7684\\"\u8d85\u524d\u6d88\u8d39\\"\u4f1a\u4e0d\u4f1a\u4f7f\u5f97\u751f\u6210\u5668\u5185\u7684\u65f6\u95f4\u6233\u5927\u5927\u8d85\u524d\u4e8e\u7cfb\u7edf\u7684\u65f6\u95f4\u6233\uff0c \u4ece\u800c\u5728\u91cd\u542f\u65f6\u9020\u6210ID\u91cd\u590d\uff1f\\n   \u7406\u8bba\u4e0a\u5982\u6b64\uff0c\u4f46\u5b9e\u9645\u51e0\u4e4e\u4e0d\u53ef\u80fd\u3002\u8981\u8fbe\u5230\u8fd9\u79cd\u6548\u679c\uff0c\u610f\u5473\u8be5\u751f\u6210\u5668\u63a5\u6536\u7684QPS\u5f97\u6301\u7eed\u7a33\u5b9a\u5728400w/s\u4e4b\u4e0a~\\n   \u8bf4\u5b9e\u8bdd\uff0cTC\u4e5f\u625b\u4e0d\u4f4f\u8fd9\u4e48\u9ad8\u7684\u6d41\u91cf\uff0c\u6240\u4ee5\u8bf4\u5462\uff0c\u5929\u584c\u4e0b\u6765\u6709\u4e2a\u5b50\u9ad8\u7684\u5148\u625b\u7740\uff0c\u74f6\u9888\u4e00\u5b9a\u4e0d\u5728\u751f\u6210\u5668\u8fd9\u91cc\u3002\\n\\n\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u8c03\u6574\u4e86\u4e0b\u8282\u70b9ID\u7684\u751f\u6210\u7b56\u7565\u3002\u539f\u7248\u5728\u7528\u6237\u672a\u624b\u52a8\u6307\u5b9a\u8282\u70b9ID\u65f6\uff0c\u4f1a\u622a\u53d6\u672c\u5730IPv4\u5730\u5740\u7684\u4f4e10\u4f4d\u4f5c\u4e3a\u8282\u70b9ID\u3002\\n\u5728\u5b9e\u8df5\u751f\u4ea7\u4e2d\uff0c\u53d1\u73b0\u6709\u96f6\u6563\u7684\u8282\u70b9ID\u91cd\u590d\u7684\u73b0\u8c61(\u591a\u4e3a\u91c7\u7528k8s\u90e8\u7f72\u7684\u7528\u6237)\u3002\u4f8b\u5982\u8fd9\u6837\u7684IP\u5c31\u4f1a\u91cd\u590d\uff1a\\n- 192.168.4.10\\n- 192.168.8.10\\n\\n\u5373\u53ea\u8981IP\u7684\u7b2c4\u4e2a\u5b57\u8282\u548c\u7b2c3\u4e2a\u5b57\u8282\u7684\u4f4e2\u4f4d\u4e00\u6837\u5c31\u4f1a\u91cd\u590d\u3002\\n\u65b0\u7248\u7684\u7b56\u7565\u6539\u4e3a\u4f18\u5148\u4ece\u672c\u673a\u7f51\u5361\u7684MAC\u5730\u5740\u622a\u53d6\u4f4e10\u4f4d\uff0c\u82e5\u672c\u673a\u672a\u914d\u7f6e\u6709\u6548\u7684\u7f51\u5361\uff0c\u5219\u5728[0, 1023]\u4e2d\u968f\u673a\u6311\u4e00\u4e2a\u4f5c\u4e3a\u8282\u70b9ID\u3002\\n\u8fd9\u6837\u8c03\u6574\u540e\u4f3c\u4e4e\u6ca1\u6709\u65b0\u7248\u7684\u7528\u6237\u518d\u62a5\u540c\u6837\u7684\u95ee\u9898\u4e86(\u5f53\u7136\uff0c\u6709\u5f85\u65f6\u95f4\u7684\u68c0\u9a8c\uff0c\u4e0d\u7ba1\u600e\u6837\uff0c\u4e0d\u4f1a\u6bd4IP\u622a\u53d6\u7b56\u7565\u66f4\u7cdf\u7cd5)\u3002\\n\\n\u4ee5\u4e0a\u5c31\u662f\u5bf9Seata\u7684\u5206\u5e03\u5f0fUUID\u751f\u6210\u5668\u7684\u7b80\u6790\uff0c\u5982\u679c\u60a8\u559c\u6b22\u8fd9\u4e2a\u751f\u6210\u5668\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u60a8\u7684\u9879\u76ee\u91cc\u4f7f\u7528\u5b83\uff0c\\n\u5b83\u7684\u7c7b\u58f0\u660e\u662f`public`\u7684\uff0c\u5b8c\u6574\u7c7b\u540d\u4e3a\uff1a\\n`io.seata.common.util.IdWorker`\\n\\n\u5f53\u7136\uff0c\u5982\u679c\u60a8\u6709\u66f4\u597d\u7684\u70b9\u5b50\uff0c\u4e5f\u6b22\u8fce\u8ddfSeata\u793e\u533a\u8ba8\u8bba\u3002"},{"id":"/seata-feature-undo-log-compress","metadata":{"permalink":"/zh-cn/blog/seata-feature-undo-log-compress","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-feature-undo-log-compress.md","title":"Seata\u65b0\u7279\u6027\u652f\u6301 -- undo_log\u538b\u7f29","description":"\u73b0\u72b6 & \u75db\u70b9","date":"2021-05-07T00:00:00.000Z","formattedDate":"2021\u5e745\u67087\u65e5","tags":[],"readingTime":5.78,"hasTruncateMarker":false,"authors":[{"name":"chd"}],"frontMatter":{"title":"Seata\u65b0\u7279\u6027\u652f\u6301 -- undo_log\u538b\u7f29","author":"chd","keywords":["Seata","undo_log","compress"],"date":"2021/05/07"},"prevItem":{"title":"Seata\u57fa\u4e8e\u6539\u826f\u7248\u96ea\u82b1\u7b97\u6cd5\u7684\u5206\u5e03\u5f0fUUID\u751f\u6210\u5668\u5206\u6790","permalink":"/zh-cn/blog/seata-analysis-UUID-generator"},"nextItem":{"title":"ConcurrentHashMap\u5bfc\u81f4\u7684Seata\u6b7b\u9501\u95ee\u9898","permalink":"/zh-cn/blog/seata-dsproxy-deadlock"}},"content":"### \u73b0\u72b6 & \u75db\u70b9\\n\\n\u5bf9\u4e8eSeata\u800c\u8a00\uff0c\u662f\u901a\u8fc7\u8bb0\u5f55DML\u64cd\u4f5c\u7684\u524d\u540e\u7684\u6570\u636e\u7528\u4e8e\u8fdb\u884c\u540e\u7eed\u53ef\u80fd\u7684\u56de\u6eda\u64cd\u4f5c\u7684\uff0c\u5e76\u4e14\u628a\u8fd9\u4e9b\u6570\u636e\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u7684\u4e00\u4e2ablob\u7684\u5b57\u6bb5\u91cc\u9762\u3002\u5bf9\u4e8e\u6279\u91cf\u63d2\u5165\uff0c\u66f4\u65b0\uff0c\u5220\u9664\u7b49\u64cd\u4f5c\uff0c\u5176\u5f71\u54cd\u7684\u884c\u6570\u53ef\u80fd\u4f1a\u6bd4\u8f83\u591a\uff0c\u62fc\u63a5\u6210\u4e00\u4e2a\u5927\u7684\u5b57\u6bb5\u63d2\u5165\u5230\u6570\u636e\u5e93\uff0c\u53ef\u80fd\u4f1a\u5e26\u6765\u4ee5\u4e0b\u95ee\u9898\uff1a\\n\\n1. \u8d85\u51fa\u6570\u636e\u5e93\u5355\u6b21\u64cd\u4f5c\u7684\u6700\u5927\u5199\u5165\u9650\u5236(\u6bd4\u5982MySQL\u7684max_allowed_package\u53c2\u6570)\uff1b\\n2. \u8f83\u5927\u7684\u6570\u636e\u91cf\u5e26\u6765\u7684\u7f51\u7edcIO\u548c\u6570\u636e\u5e93\u78c1\u76d8IO\u5f00\u9500\u6bd4\u8f83\u5927\u3002\\n\\n\\n\\n### \u5934\u8111\u98ce\u66b4\\n\\n\u5bf9\u4e8e\u7b2c1\u70b9\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u8c03\u5927max_allowed_package\u53c2\u6570\u7684\u9650\u5236\uff0c\u4ece\u800c\u907f\u514d\u51fa\u73b0query is too large\u7684\u95ee\u9898\uff1b\u5bf9\u4e8e\u7b2c2\u70b9\uff0c\u53ef\u4ee5\u901a\u8fc7\u63d0\u9ad8\u5e26\u5bbd\u548c\u9009\u7528\u9ad8\u6027\u80fd\u7684SSD\u4f5c\u4e3a\u6570\u636e\u5e93\u7684\u5b58\u50a8\u4ecb\u8d28\u3002\\n\\n\u4ee5\u4e0a\u90fd\u662f\u901a\u8fc7\u5916\u90e8\u65b9\u6848\u6216\u8005\u52a0\u94b1\u65b9\u6848\u53bb\u89e3\u51b3\u7684\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u6846\u67b6\u5c42\u9762\u89e3\u51b3\u65b9\u6848\u4ee5\u89e3\u51b3\u4e0a\u9762\u7684\u75db\u70b9\uff1f\\n\\n\u6b64\u65f6\u7ed3\u5408\u5230\u4ee5\u4e0a\u7684\u75db\u70b9\u51fa\u73b0\u7684\u6839\u6e90\uff0c\u5728\u4e8e\u751f\u6210\u7684\u6570\u636e\u5b57\u6bb5\u8fc7\u5927\u3002\u4e3a\u6b64\uff0c\u5982\u679c\u53ef\u4ee5\u628a\u5bf9\u5e94\u7684\u6570\u636e\u8fdb\u884c\u4e1a\u52a1\u65b9\u538b\u7f29\u4e4b\u540e\uff0c\u518d\u8fdb\u884c\u6570\u636e\u4f20\u8f93\u4ee5\u53ca\u843d\u5e93\uff0c\u7406\u8bba\u4e0a\u4e5f\u53ef\u4ee5\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\u3002\\n\\n\\n\\n### \u53ef\u884c\u6027\u5206\u6790\\n\\n\u7ed3\u5408\u4ee5\u4e0a\u5934\u8111\u98ce\u66b4\u7684\u5185\u5bb9\uff0c\u8003\u8651\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u5f53\u9700\u8981\u8fdb\u884c\u5927\u6279\u91cf\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u5927\u591a\u4f1a\u9009\u5728\u8f83\u5c11\u7528\u6237\u64cd\u4f5c\uff0c\u5e76\u53d1\u76f8\u5bf9\u8f83\u4f4e\u7684\u65f6\u95f4\u70b9\u6267\u884c\uff0c\u6b64\u65f6CPU\uff0c\u5185\u5b58\u7b49\u8d44\u6e90\u53ef\u4ee5\u76f8\u5bf9\u5360\u7528\u591a\u4e00\u70b9\u4ee5\u5feb\u901f\u5b8c\u6210\u5bf9\u5e94\u7684\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u901a\u8fc7\u6d88\u8017CPU\u8d44\u6e90\u548c\u5185\u5b58\u8d44\u6e90\uff0c\u6765\u5bf9\u5bf9\u5e94\u7684\u56de\u6eda\u7684\u6570\u636e\u8fdb\u884c\u538b\u7f29\uff0c\u4ece\u800c\u7f29\u5c0f\u6570\u636e\u4f20\u8f93\u548c\u5b58\u50a8\u7684\u5927\u5c0f\u3002\\n\\n\u6b64\u65f6\uff0c\u8fd8\u9700\u8981\u8bc1\u660e\u4ee5\u4e0b\u4e24\u4ef6\u4e8b\uff1a\\n\\n1. \u7ecf\u8fc7\u538b\u7f29\u4e4b\u540e\uff0c\u53ef\u4ee5\u51cf\u5c11\u7f51\u7edcIO\u548c\u6570\u636e\u5e93\u78c1\u76d8IO\u7684\u538b\u529b\uff0c\u8fd9\u91cc\u53ef\u4ee5\u91c7\u7528\u6570\u636e\u538b\u7f29+\u843d\u5e93\u5b8c\u6210\u7684\u603b\u65f6\u95f4\u4f5c\u4e3a\u4fa7\u9762\u53c2\u8003\u6307\u6807\u3002\\n2. \u7ecf\u8fc7\u538b\u7f29\u4e4b\u540e\uff0c\u6570\u636e\u5927\u5c0f\u8ddf\u539f\u6765\u6bd4\u8f83\u7684\u538b\u7f29\u6548\u7387\u6709\u591a\u9ad8\uff0c\u8fd9\u91cc\u4f7f\u7528\u538b\u7f29\u524d\u540e\u7684\u6570\u636e\u5927\u5c0f\u6765\u4f5c\u4e3a\u6307\u6807\u3002\\n\\n\u538b\u7f29\u7f51\u7edc\u7528\u65f6\u6307\u6807\u6d4b\u8bd5\uff1a\\n\\n![image](https://user-images.githubusercontent.com/22959373/95567752-f55ddf80-0a55-11eb-8092-1f1d99855bdd.png)\\n\\n\u538b\u7f29\u6bd4\u6d4b\u8bd5\uff1a\\n\\n![image](https://user-images.githubusercontent.com/22959373/95567834-0ad30980-0a56-11eb-9d7e-48b74babbea4.png)\\n\\n\u901a\u8fc7\u4ee5\u4e0a\u7684\u6d4b\u8bd5\u7ed3\u679c\uff0c\u53ef\u4ee5\u660e\u663e\u7684\u770b\u51fa\uff0c\u4f7f\u7528gzip\u6216zip\u8fdb\u884c\u538b\u7f29\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8f83\u5927\u7a0b\u5ea6\u7684\u51cf\u5c11\u6570\u636e\u5e93\u7684\u538b\u529b\u548c\u7f51\u7edc\u4f20\u8f93\u7684\u538b\u529b\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u8f83\u5927\u5e45\u5ea6\u7684\u51cf\u5c11\u4fdd\u5b58\u7684\u6570\u636e\u7684\u5927\u5c0f\u3002\\n\\n\\n\\n### \u5b9e\u73b0\\n\\n#### \u5b9e\u73b0\u601d\u8def\\n\\n![\u538b\u7f29](https://user-images.githubusercontent.com/22959373/116281711-8f039900-a7bc-11eb-91f8-82afdbb9f932.png)\\n\\n#### \u90e8\u5206\u4ee3\u7801\\n\\nproperties\u914d\u7f6e\uff1a\\n\\n```properties\\n# \u662f\u5426\u5f00\u542fundo_log\u538b\u7f29\uff0c\u9ed8\u8ba4\u4e3atrue\\nseata.client.undo.compress.enable=true\\n# \u538b\u7f29\u5668\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3azip\uff0c\u4e00\u822c\u5efa\u8bae\u90fd\u662fzip\\nseata.client.undo.compress.type=zip\\n# \u542f\u52a8\u538b\u7f29\u7684\u9608\u503c\uff0c\u9ed8\u8ba4\u4e3a64k\\nseata.client.undo.compress.threshold=64k\\n```\\n\\n\u5224\u65ad\u662f\u5426\u5f00\u542f\u4e86undo_log\u538b\u7f29\u529f\u80fd\u4ee5\u53ca\u662f\u5426\u8fbe\u5230\u538b\u7f29\u7684\u9608\u503c\uff1a\\n\\n```java\\nprotected boolean needCompress(byte[] undoLogContent) {\\n    // 1. \u5224\u65ad\u662f\u5426\u5f00\u542f\u4e86undo_log\u538b\u7f29\u529f\u80fd(1.4.2\u9ed8\u8ba4\u5f00\u542f)\\n    // 2. \u5224\u65ad\u662f\u5426\u8fbe\u5230\u4e86\u538b\u7f29\u7684\u9608\u503c(\u9ed8\u8ba464k)\\n    // \u5982\u679c\u90fd\u6ee1\u8db3\u8fd4\u56de\u9700\u8981\u5bf9\u5bf9\u5e94\u7684undoLogContent\u8fdb\u884c\u538b\u7f29\\n    return ROLLBACK_INFO_COMPRESS_ENABLE \\n        && undoLogContent.length > ROLLBACK_INFO_COMPRESS_THRESHOLD;\\n}\\n```\\n\\n\u786e\u5b9a\u9700\u8981\u538b\u7f29\u540e\uff0c\u5bf9undo_log\u8fdb\u884c\u538b\u7f29\uff1a\\n\\n```java\\n// \u5982\u679c\u9700\u8981\u538b\u7f29\uff0c\u5bf9undo_log\u8fdb\u884c\u538b\u7f29\\nif (needCompress(undoLogContent)) {\\n    // \u83b7\u53d6\u538b\u7f29\u7c7b\u578b\uff0c\u9ed8\u8ba4zip\\n    compressorType = ROLLBACK_INFO_COMPRESS_TYPE;\\n    // \u83b7\u53d6\u5bf9\u5e94\u7684\u538b\u7f29\u5668\uff0c\u5e76\u4e14\u8fdb\u884c\u538b\u7f29\\n    undoLogContent = CompressorFactory.getCompressor(compressorType.getCode()).compress(undoLogContent);\\n}\\n// else \u4e0d\u9700\u8981\u538b\u7f29\u5c31\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u64cd\u4f5c\\n```\\n\\n\u5c06\u538b\u7f29\u7c7b\u578b\u540c\u6b65\u4fdd\u5b58\u5230\u6570\u636e\u5e93\uff0c\u4f9b\u56de\u6eda\u65f6\u4f7f\u7528\uff1a\\n\\n```java\\nprotected String buildContext(String serializer, CompressorType compressorType) {\\n    Map<String, String> map = new HashMap<>();\\n    map.put(UndoLogConstants.SERIALIZER_KEY, serializer);\\n    // \u4fdd\u5b58\u538b\u7f29\u7c7b\u578b\u5230\u6570\u636e\u5e93\\n    map.put(UndoLogConstants.COMPRESSOR_TYPE_KEY, compressorType.name());\\n    return CollectionUtils.encodeMap(map);\\n}\\n```\\n\\n\u56de\u6eda\u65f6\u89e3\u538b\u7f29\u5bf9\u5e94\u7684\u4fe1\u606f\uff1a\\n\\n```java\\nprotected byte[] getRollbackInfo(ResultSet rs) throws SQLException  {\\n    // \u83b7\u53d6\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u7684\u56de\u6eda\u4fe1\u606f\u7684\u5b57\u8282\u6570\u7ec4\\n    byte[] rollbackInfo = rs.getBytes(ClientTableColumnsName.UNDO_LOG_ROLLBACK_INFO);\\n    // \u83b7\u53d6\u538b\u7f29\u7c7b\u578b\\n    // getOrDefault\u4f7f\u7528\u9ed8\u8ba4\u503cCompressorType.NONE\u6765\u517c\u5bb91.4.2\u4e4b\u524d\u7684\u7248\u672c\u76f4\u63a5\u5347\u7ea71.4.2+\\n    String rollbackInfoContext = rs.getString(ClientTableColumnsName.UNDO_LOG_CONTEXT);\\n    Map<String, String> context = CollectionUtils.decodeMap(rollbackInfoContext);\\n    CompressorType compressorType = CompressorType.getByName(context.getOrDefault(UndoLogConstants.COMPRESSOR_TYPE_KEY,\\n    CompressorType.NONE.name()));\\n    // \u83b7\u53d6\u5bf9\u5e94\u7684\u538b\u7f29\u5668\uff0c\u5e76\u4e14\u89e3\u538b\u7f29\\n    return CompressorFactory.getCompressor(compressorType.getCode())\\n        .decompress(rollbackInfo);\\n}\\n```\\n\\n\\n\\n### \u7ed3\u8bed\\n\\n\u901a\u8fc7\u5bf9undo_log\u7684\u538b\u7f29\uff0c\u5728\u6846\u67b6\u5c42\u9762\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8Seata\u5728\u5904\u7406\u6570\u636e\u91cf\u8f83\u5927\u7684\u65f6\u5019\u7684\u6027\u80fd\u3002\u540c\u65f6\uff0c\u4e5f\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u5f00\u5173\u548c\u76f8\u5bf9\u5408\u7406\u7684\u9ed8\u8ba4\u503c\uff0c\u65e2\u65b9\u4fbf\u7528\u6237\u8fdb\u884c\u5f00\u7bb1\u5373\u7528\uff0c\u4e5f\u65b9\u4fbf\u7528\u6237\u6839\u636e\u5b9e\u9645\u9700\u6c42\u8fdb\u884c\u4e00\u5b9a\u7684\u8c03\u6574\uff0c\u4f7f\u5f97\u5bf9\u5e94\u7684\u529f\u80fd\u66f4\u9002\u5408\u5b9e\u9645\u4f7f\u7528\u573a\u666f\u3002"},{"id":"/seata-dsproxy-deadlock","metadata":{"permalink":"/zh-cn/blog/seata-dsproxy-deadlock","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-dsproxy-deadlock.md","title":"ConcurrentHashMap\u5bfc\u81f4\u7684Seata\u6b7b\u9501\u95ee\u9898","description":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u7ebf\u4e0a\u95ee\u9898\uff0c\u56e0ConcurrentHashMap\u7684Bug\u800c\u5bfc\u81f4\u7684Seata\u52a8\u6001\u6570\u636e\u6e90\u4ee3\u7406\u6b7b\u9501","date":"2021-03-13T00:00:00.000Z","formattedDate":"2021\u5e743\u670813\u65e5","tags":[],"readingTime":15.61,"hasTruncateMarker":false,"authors":[{"name":"\u7f57\u5c0f\u52c7"}],"frontMatter":{"title":"ConcurrentHashMap\u5bfc\u81f4\u7684Seata\u6b7b\u9501\u95ee\u9898","keywords":["Seata\u3001\u52a8\u6001\u6570\u636e\u6e90\u3001DataSource\u3001ConcurrentHashMap\u3001computeIfAbsent"],"description":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u7ebf\u4e0a\u95ee\u9898\uff0c\u56e0ConcurrentHashMap\u7684Bug\u800c\u5bfc\u81f4\u7684Seata\u52a8\u6001\u6570\u636e\u6e90\u4ee3\u7406\u6b7b\u9501","author":"\u7f57\u5c0f\u52c7","date":"2021/03/13"},"prevItem":{"title":"Seata\u65b0\u7279\u6027\u652f\u6301 -- undo_log\u538b\u7f29","permalink":"/zh-cn/blog/seata-feature-undo-log-compress"},"nextItem":{"title":"Seata\u5e94\u7528\u4fa7\u542f\u52a8\u8fc7\u7a0b\u5256\u6790\u2014\u2014\u6ce8\u518c\u4e2d\u5fc3\u4e0e\u914d\u7f6e\u4e2d\u5fc3\u6a21\u5757","permalink":"/zh-cn/blog/seata-client-start-analysis-02"}},"content":"1. seata\u7248\u672c\uff1a1.4.0\uff0c\u4f461.4\u4ee5\u4e0b\u7684\u6240\u6709\u7248\u672c\u4e5f\u90fd\u6709\u8fd9\u4e2a\u95ee\u9898\\n2. \u95ee\u9898\u63cf\u8ff0\uff1a\u5728\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\u4e2d\uff0c\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\u4e0a\u7684\u7eaf\u67e5\u8be2\u64cd\u4f5c\u7a81\u7136\u5361\u4f4f\u4e86\uff0c\u6ca1\u6709\u4efb\u4f55\u53cd\u9988(\u65e5\u5fd7/\u5f02\u5e38)\uff0c\u76f4\u5230\u6d88\u8d39\u7aefRPC\u8d85\u65f6\\n\\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/03a7f737b56e45b4b74e662033ec74f6~tplv-k3u1fbpfcp-watermark.image)\\n\\n# \u95ee\u9898\u6392\u67e5\\n1. \u6574\u4e2a\u6d41\u7a0b\u5728\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\u4e2d\uff0c\u6d88\u8d39\u8005\u548c\u63d0\u4f9b\u8005\u53ef\u4ee5\u770b\u6210\u662f\u5168\u5c40\u4e8b\u52a1\u4e2d\u7684\u4e24\u4e2a\u5206\u652f\u4e8b\u52a1\uff0c\u6d88\u8d39\u8005 --\x3e \u63d0\u4f9b\u8005\\n2. \u6d88\u8d39\u8005\u5148\u6267\u884c\u672c\u5730\u7684\u4e00\u4e9b\u903b\u8f91\uff0c\u7136\u540e\u5411\u63d0\u4f9b\u8005\u53d1\u9001RPC\u8bf7\u6c42\uff0c\u786e\u5b9a\u6d88\u8d39\u8005\u53d1\u51fa\u4e86\u8bf7\u6c42\u5df2\u7ecf\u5e76\u4e14\u63d0\u4f9b\u8005\u63a5\u5230\u4e86\u8bf7\u6c42\\n3. \u63d0\u4f9b\u8005\u5148\u6253\u5370\u4e00\u6761\u65e5\u5fd7\uff0c\u7136\u540e\u6267\u884c\u4e00\u6761\u7eaf\u67e5\u8be2SQL\uff0c\u5982\u679cSQL\u6b63\u5e38\u6267\u884c\u4f1a\u6253\u5370\u65e5\u5fd7\uff0c\u4f46\u76ee\u524d\u7684\u73b0\u8c61\u662f\u53ea\u6253\u5370\u4e86\u6267\u884cSQL\u524d\u7684\u90a3\u6761\u65e5\u5fd7\uff0c\u800c\u6ca1\u6709\u6253\u5370\u4efb\u4f55SQL\u76f8\u5173\u7684\u65e5\u5fd7\u3002\u627eDBA\u67e5SQL\u65e5\u5fd7\uff0c\u53d1\u73b0\u8be5SQL\u6ca1\u6709\u6267\u884c\\n4. \u786e\u5b9a\u4e86\u8be5\u64cd\u4f5c\u53ea\u662f\u5168\u5c40\u4e8b\u52a1\u4e0b\u7684\u4e00\u4e2a\u7eaf\u67e5\u8be2\u64cd\u4f5c\uff0c\u5728\u8be5\u64cd\u4f5c\u4e4b\u524d\uff0c\u5168\u5c40\u4e8b\u52a1\u4e2d\u7684\u6574\u4f53\u6d41\u7a0b\u5b8c\u5168\u6b63\u5e38\\n5. \u5176\u5b9e\u5230\u8fd9\u91cc\u73b0\u8c61\u5df2\u7ecf\u5f88\u660e\u663e\u4e86\uff0c\u4e0d\u8fc7\u5f53\u65f6\u60f3\u6cd5\u6ca1\u8f6c\u53d8\u8fc7\u6765\uff0c\u4e00\u76f4\u5173\u6ce8\u90a3\u6761\u67e5\u8be2SQL\uff0c\u603b\u5728\u60f3\u5c31\u7b97\u67e5\u8be2\u8d85\u65f6\u7b49\u539f\u56e0\u4e5f\u5e94\u8be5\u629b\u51fa\u5f02\u5e38\u554a\uff0c\u4e0d\u5e94\u8be5\u4ec0\u4e48\u90fd\u6ca1\u6709\u3002DBA\u90fd\u627e\u4e0d\u5230\u67e5\u8be2\u8bb0\u5f55\uff0c\u90a3\u662f\u4e0d\u662f\u8bf4\u660eSQL\u53ef\u80fd\u6839\u672c\u5c31\u6ca1\u6267\u884c\u554a\uff0c\u800c\u662f\u5728\u6267\u884cSQL\u524d\u5c31\u51fa\u95ee\u9898\u4e86\uff0c\u6bd4\u5982\u4ee3\u7406\uff1f\\n6. \u501f\u52a9arthas\u7684watch\u547d\u4ee4\uff0c\u4e00\u76f4\u6ca1\u6709\u4e1c\u897f\u8f93\u51fa\u3002\u7b2c\u4e00\u6761\u65e5\u5fd7\u7684\u8f93\u51fa\u4ee3\u8868\u8fd9\u4e2a\u65b9\u6cd5\u4e00\u5b9a\u6267\u884c\u4e86\uff0c\u8fdf\u8fdf\u6ca1\u6709\u7ed3\u679c\u8f93\u51fa\u8bf4\u660e\u5f53\u524d\u8bf7\u6c42\u5361\u4f4f\u4e86\uff0c\u4e3a\u4ec0\u4e48\u5361\u4f4f\u4e86\u5462\uff1f\\n7. \u501f\u52a9arthas\u7684thread\u547d\u4ee4 `thread -b` \u3001`thread -n`\uff0c\u5c31\u662f\u8981\u627e\u51fa\u5f53\u524d\u6700\u5fd9\u7684\u7ebf\u7a0b\u3002\u8fd9\u4e2a\u6548\u679c\u5f88\u597d\uff0c\u6709\u4e00\u4e2a\u7ebf\u7a0bCPU\u4f7f\u7528\u7387`92%`,\u5e76\u4e14\u56e0\u4e3a\u8be5\u7ebf\u7a0b\u5bfc\u81f4\u5176\u5b8320\u591a\u4e2aDubbo\u7ebf\u7a0b`BLOCKED`\u4e86\u3002\u5806\u6808\u4fe1\u606f\u5982\u4e0b\\n8. \u5206\u6790\u5806\u6808\u4fe1\u606f\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5f88\u660e\u663e\u7684\u53d1\u73b0\u548cseata\u76f8\u5173\u7684\u63a5\u53e3\u4e86\uff0c\u4f30\u8ba1\u548cseata\u7684\u6570\u636e\u6e90\u4ee3\u7406\u6709\u5173\uff1b\u540c\u65f6\u53d1\u73b0CPU\u5360\u7528\u6700\u9ad8\u7684\u90a3\u4e2a\u7ebf\u7a0b\u5361\u5728\u4e86`ConcurrentHashMap#computeIfAbsent`\u65b9\u6cd5\u4e2d\u3002\u96be\u9053`ConcurrentHashMap#computeIfAbsent`\u65b9\u6cd5\u6709bug\uff1f\\n9. \u5230\u8fd9\u91cc\uff0c\u95ee\u9898\u7684\u5177\u4f53\u539f\u56e0\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\uff0c\u4f46\u5e94\u8be5\u548cseata\u7684\u6570\u636e\u6e90\u4ee3\u7406\u6709\u70b9\u5173\u7cfb\uff0c\u5177\u4f53\u539f\u56e0\u6211\u4eec\u9700\u8981\u5206\u6790\u4e1a\u52a1\u4ee3\u7801\u548cseata\u4ee3\u7801\\n\\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/faac0be0982e45a7a43b335e8f8b44bf~tplv-k3u1fbpfcp-watermark.image)\\n\\n# \u95ee\u9898\u5206\u6790\\n\\n### ConcurrentHashMap#computeIfAbsent\\n\u8fd9\u4e2a\u65b9\u6cd5\u786e\u5b9e\u6709\u53ef\u80fd\u51fa\u95ee\u9898\uff1a\u5982\u679c\u4e24\u4e2akey\u7684hascode\u76f8\u540c\uff0c\u5e76\u4e14\u5728\u5bf9\u5e94\u7684mappingFunction\u4e2d\u53c8\u8fdb\u884c\u4e86computeIfAbsent\u64cd\u4f5c\uff0c\u5219\u4f1a\u5bfc\u81f4\u6b7b\u5faa\u73af\uff0c\u5177\u4f53\u5206\u6790\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff1ahttps://juejin.cn/post/6844904191077384200\\n\\n### Seata\u6570\u636e\u6e90\u81ea\u52a8\u4ee3\u7406\\n\u76f8\u5173\u5185\u5bb9\u4e4b\u524d\u6709\u5206\u6790\u8fc7\uff0c\u6211\u4eec\u91cd\u70b9\u6765\u770b\u770b\u4ee5\u4e0b\u51e0\u4e2a\u6838\u5fc3\u7684\u7c7b\uff1a\\n1. SeataDataSourceBeanPostProcessor\\n2. SeataAutoDataSourceProxyAdvice\\n3. DataSourceProxyHolder\\n\\n##### SeataDataSourceBeanPostProcessor\\n`SeataDataSourceBeanPostProcessor`\u662f`BeanPostProcessor`\u5b9e\u73b0\u7c7b\uff0c\u5728`postProcessAfterInitialization`\u65b9\u6cd5(\u5373Bean\u521d\u59cb\u5316\u4e4b\u540e)\u4e2d\uff0c\u4f1a\u4e3a\u4e1a\u52a1\u65b9\u914d\u7f6e\u7684\u6570\u636e\u6e90\u521b\u5efa\u5bf9\u5e94\u7684`seata\u4ee3\u7406\u6570\u636e\u6e90`\\n\\n```java\\npublic class SeataDataSourceBeanPostProcessor implements BeanPostProcessor {\\n    @Override\\n    public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {\\n        if (bean instanceof DataSource) {\\n            //When not in the excludes, put and init proxy.\\n            if (!excludes.contains(bean.getClass().getName())) {\\n                //Only put and init proxy, not return proxy.\\n                DataSourceProxyHolder.get().putDataSource((DataSource) bean, dataSourceProxyMode);\\n            }\\n            //If is SeataDataSourceProxy, return the original data source.\\n            if (bean instanceof SeataDataSourceProxy) {\\n                LOGGER.info(\\"Unwrap the bean of the data source,\\" +\\n                    \\" and return the original data source to replace the data source proxy.\\");\\n                return ((SeataDataSourceProxy) bean).getTargetDataSource();\\n            }\\n        }\\n        return bean;\\n    }\\n}\\n```\\n\\n##### SeataAutoDataSourceProxyAdvice\\n`SeataAutoDataSourceProxyAdvice`\u662f\u4e00\u4e2aMethodInterceptor\uff0cseata\u4e2d\u7684`SeataAutoDataSourceProxyCreator`\u4f1a\u9488\u5bf9`DataSource\u7c7b\u578b\u7684Bean`\u521b\u5efa\u52a8\u6001\u4ee3\u7406\u5bf9\u8c61\uff0c\u4ee3\u7406\u903b\u8f91\u5c31\u662f`SeataAutoDataSourceProxyAdvice#invoke`\u903b\u8f91\u3002\u5373\uff1a\u6267\u884c`\u6570\u636e\u6e90AOP\u4ee3\u7406\u5bf9\u8c61`\u7684\u76f8\u5173\u65b9\u6cd5\u65f6\u5019\uff0c\u4f1a\u7ecf\u8fc7\u5176`invoke`\u65b9\u6cd5\uff0c\u5728`invoke`\u65b9\u6cd5\u4e2d\u518d\u6839\u636e\u5f53\u539f\u751f\u6570\u636e\u6e90\uff0c\u627e\u5230\u5bf9\u5e94\u7684`seata\u4ee3\u7406\u6570\u636e\u6e90`\uff0c\u6700\u7ec8\u8fbe\u5230\u6267\u884c`seata\u4ee3\u7406\u6570\u636e\u6e90`\u903b\u8f91\u7684\u76ee\u7684\\n```java\\npublic class SeataAutoDataSourceProxyAdvice implements MethodInterceptor, IntroductionInfo {\\n    ......\\n    @Override\\n    public Object invoke(MethodInvocation invocation) throws Throwable {\\n        if (!RootContext.requireGlobalLock() && dataSourceProxyMode != RootContext.getBranchType()) {\\n            return invocation.proceed();\\n        }\\n        Method method = invocation.getMethod();\\n        Object[] args = invocation.getArguments();\\n        Method m = BeanUtils.findDeclaredMethod(dataSourceProxyClazz, method.getName(), method.getParameterTypes());\\n        if (m != null) {\\n            SeataDataSourceProxy dataSourceProxy = DataSourceProxyHolder.get().putDataSource((DataSource) invocation.getThis(), dataSourceProxyMode);\\n            return m.invoke(dataSourceProxy, args);\\n        } else {\\n            return invocation.proceed();\\n        }\\n    }\\n}\\n```\\n\\n##### DataSourceProxyHolder\\n\u6d41\u7a0b\u4e0a\u6211\u4eec\u5df2\u7ecf\u6e05\u695a\u4e86\uff0c\u73b0\u5728\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u7ef4\u62a4`\u539f\u751f\u6570\u636e\u6e90`\u548c`seata\u4ee3\u7406\u6570\u636e\u6e90`\u4e4b\u95f4\u7684\u5173\u7cfb\uff1f\u901a\u8fc7`DataSourceProxyHolder`\u7ef4\u62a4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5355\u4f8b\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u4e2d\u901a\u8fc7\u4e00\u4e2aConcurrentHashMap\u7ef4\u62a4\u4e24\u8005\u7684\u5173\u7cfb\uff1a`\u539f\u751f\u6570\u636e\u6e90`\u4e3akey --\x3e `seata\u4ee3\u7406\u6570\u636e\u6e90` \u4e3avalue\\n\\n```java\\npublic class DataSourceProxyHolder {\\n      public SeataDataSourceProxy putDataSource(DataSource dataSource, BranchType dataSourceProxyMode) {\\n        DataSource originalDataSource = dataSource;\\n        ......\\n        return CollectionUtils.computeIfAbsent(this.dataSourceProxyMap, originalDataSource,\\n                BranchType.XA == dataSourceProxyMode ? DataSourceProxyXA::new : DataSourceProxy::new);\\n    }\\n}\\n\\n\\n// CollectionUtils.java\\npublic static <K, V> V computeIfAbsent(Map<K, V> map, K key, Function<? super K, ? extends V> mappingFunction) {\\n    V value = map.get(key);\\n    if (value != null) {\\n        return value;\\n    }\\n    return map.computeIfAbsent(key, mappingFunction);\\n}\\n```\\n\\n### \u5ba2\u6237\u7aef\u6570\u636e\u6e90\u914d\u7f6e\\n1. \u914d\u7f6e\u4e86\u4e24\u4e2a\u6570\u636e\u6e90\uff1a`DynamicDataSource`\u3001`P6DataSource`\\n2. `P6DataSource`\u53ef\u4ee5\u770b\u6210\u662f\u5bf9`DynamicDataSource`\u7684\u4e00\u5c42\u5305\u88c5\\n3. \u6211\u4eec\u6682\u65f6\u4e0d\u53bb\u7ba1\u8fd9\u4e2a\u914d\u7f6e\u5408\u4e0d\u5408\u7406\uff0c\u73b0\u5728\u53ea\u662f\u5355\u7eaf\u7684\u57fa\u4e8e\u8fd9\u4e2a\u6570\u636e\u6e90\u914d\u7f6e\u5206\u6790\u95ee\u9898\\n\\n```java\\n@Qualifier(\\"dsMaster\\")\\n@Bean(\\"dsMaster\\")\\nDynamicDataSource dsMaster() {\\n    return new DynamicDataSource(masterDsRoute);\\n}\\n\\n@Primary\\n@Qualifier(\\"p6DataSource\\")\\n@Bean(\\"p6DataSource\\")\\nP6DataSource p6DataSource(@Qualifier(\\"dsMaster\\") DataSource dataSource) {\\n    P6DataSource p6DataSource =  new P6DataSource(dsMaster());\\n    return p6DataSource;\\n}\\n```\\n\\n### \u5206\u6790\u8fc7\u7a0b\\n\\n`\u5047\u8bbe\u73b0\u5728\u5927\u5bb6\u90fd\u5df2\u7ecf\u77e5\u9053\u4e86 ConcurrentHashMap#computeIfAbsent \u53ef\u80fd\u4f1a\u4ea7\u751f\u7684\u95ee\u9898`\uff0c\u5df2\u77e5\u73b0\u5728\u4ea7\u751f\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u7ed3\u5408\u5806\u6808\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5927\u6982\u54ea\u91cc\u4ea7\u751f\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\\n\\n1\u3001`ConcurrentHashMap#computeIfAbsent`\u4f1a\u4ea7\u751f\u8fd9\u4e2a\u95ee\u9898\u7684\u524d\u63d0\u6761\u4ef6\u662f\uff1a`\u4e24\u4e2akey\u7684hashcode\u76f8\u540c`\uff1b`mappingFunction\u4e2d\u5bf9\u5e94\u4e86\u4e00\u4e2aput\u64cd\u4f5c`\u3002\u7ed3\u5408\u6211\u4eecseata\u7684\u4f7f\u7528\u573a\u666f\uff0cmappingFunction\u5bf9\u5e94\u7684\u662f`DataSourceProxy::new`\uff0c\u8bf4\u660e\u5728DataSourceProxy\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u53ef\u80fd\u4f1a\u89e6\u53d1put\u64cd\u4f5c\\n\\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/00d8e13f71644c63b3bbb58c93b30e0c~tplv-k3u1fbpfcp-watermark.image)\\n```java\\n\u6267\u884cAOP\u4ee3\u7406\u6570\u636e\u6e90\u76f8\u5173\u65b9\u6cd5 =>\\n\u8fdb\u5165SeataAutoDataSourceProxyAdvice\u5207\u9762\u903b\u8f91 => \\n\u6267\u884cDataSourceProxyHolder#putDataSource\u65b9\u6cd5 => \\n\u6267\u884cDataSourceProxy::new => \\nAOP\u4ee3\u7406\u6570\u636e\u6e90\u7684getConnection\u65b9\u6cd5 => \\n\u539f\u751f\u6570\u636e\u6e90\u7684getConnection\u65b9\u6cd5  => \\n\u8fdb\u5165SeataAutoDataSourceProxyAdvice\u5207\u9762\u903b\u8f91 => \\n\u6267\u884cDataSourceProxyHolder#putDataSource\u65b9\u6cd5 => \\n\u6267\u884cDataSourceProxy::new  => \\nDuridDataSource\u7684getConnection\u65b9\u6cd5\\n```\\n\\n2\u3001\u6b65\u9aa41\u4e2d\u8bf4\u7684`AOP\u4ee3\u7406\u6570\u636e\u6e90`\u548c`\u539f\u751f\u6570\u636e\u6e90`\u5206\u522b\u662f\u4ec0\u4e48\uff1f\u770b\u4e0b\u9762\u8fd9\u5f20\u56fe\\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3579631f58df4d17bfcd6f28ccc3fd79~tplv-k3u1fbpfcp-watermark.image)\\n\\n3\u3001\u4e0a\u9762\u8fd8\u8bf4\u5230\u4e86\u4ea7\u751f\u8fd9\u4e2a\u95ee\u9898\u8fd8\u6709\u4e00\u4e2a\u6761\u4ef6`\u4e24\u4e2akey\u7684hashcode\u76f8\u540c`\uff0c\u4f46\u6211\u770b\u8fd9\u4e24\u4e2a\u6570\u636e\u6e90\u5bf9\u8c61\u90fd\u6ca1\u6709\u91cd\u5199`hashcode`\u65b9\u6cd5\uff0c\u6240\u4ee5\u6309\u7406\u6765\u8bf4\uff0c\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u7684hashcode\u4e00\u5b9a\u662f\u4e0d\u540c\u7684\u3002\u540e\u9762\u53c8\u518d\u770b\u4e86\u4e00\u904dConcurrentHashMap\u8fd9\u4e2a\u95ee\u9898\uff0c\u611f\u89c9`\u4e24\u4e2akey\u7684hashcode\u76f8\u540c`\u8fd9\u4e2a\u8bf4\u6cd5\u662f\u4e0d\u5bf9\u7684\uff0c`\u4e24\u4e2akey\u4f1a\u4ea7\u751fhash\u51b2\u7a81`\u66f4\u5408\u7406\u4e00\u4e9b\uff0c\u8fd9\u6837\u5c31\u80fd\u89e3\u91ca\u4e24\u4e2ahashcode\u4e0d\u540c\u7684\u5bf9\u8c61\u4e3a\u5565\u4f1a\u9047\u4e0a\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\u4e3a\u4e86\u8bc1\u660e\u8fd9\u4e2a\uff0c\u4e0b\u9762\u6211\u7ed9\u4e86\u4e00\u4e2a\u4f8b\u5b50\\n```java\\npublic class Test {\\n    public static void main(String[] args) {\\n        ConcurrentHashMap map = new ConcurrentHashMap(8);\\n        Num n1 = new Num(3);\\n        Num n2 = new Num(19);\\n        Num n3 = new Num(20);\\n    \\n//      map.computeIfAbsent(n1, k1 -> map.computeIfAbsent(n3, k2 -> 200));      //  \u8fd9\u884c\u4ee3\u7801\u4e0d\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u6b7b\u5faa\u73af\\n        map.computeIfAbsent(n1, k1 -> map.computeIfAbsent(n2, k2 -> 200));      // \u8fd9\u884c\u4ee3\u7801\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u6b7b\u5faa\u73af\\n    }\\n\\n    static class Num{\\n        private int i;\\n        public Num(int i){\\n            this.i = i;\\n        }\\n\\n        @Override\\n        public int hashCode() {\\n            return i;\\n        }\\n    }\\n}\\n```\\n1. \u4e3a\u4e86\u65b9\u4fbf\u91cd\u73b0\u95ee\u9898\uff0c\u6211\u4eec\u91cd\u5199\u4e86`Num#hashCode`\u65b9\u6cd5\uff0c\u4fdd\u8bc1\u6784\u9020\u51fd\u6570\u5165\u53c2\u5c31\u662fhashcode\u7684\u503c\\n2. \u521b\u5efa\u4e00\u4e2aConcurrentHashMap\u5bf9\u8c61\uff0cinitialCapacity\u4e3a8\uff0csizeCtl\u8ba1\u7b97\u51fa\u6765\u7684\u503c\u4e3a16\uff0c\u5373\u8be5map\u4e2d\u6570\u7ec4\u957f\u5ea6\u9ed8\u8ba4\u4e3a16\\n3. \u521b\u5efa\u5bf9\u8c61`n1`\uff0c\u5165\u53c2\u4e3a3\uff0c\u5373hashcode\u4e3a3\uff0c\u8ba1\u7b97\u5f97\u51fa\u5176\u5bf9\u5e94\u7684\u6570\u7ec4\u4e0b\u6807\u4e3a3\\n4. \u521b\u5efa\u5bf9\u8c61`n2`\uff0c\u5165\u53c2\u4e3a19\uff0c\u5373hashcode\u4e3a19\uff0c\u8ba1\u7b97\u5f97\u51fa\u5176\u5bf9\u5e94\u7684\u6570\u7ec4\u4e0b\u6807\u4e3a3\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a`n1\u548cn2\u4ea7\u751f\u4e86hash\u51b2\u7a81`\\n5. \u521b\u5efa\u5bf9\u8c61`n3`\uff0c\u5165\u53c2\u4e3a20\uff0c\u5373hashcode\u4e3a20\uff0c\u8ba1\u7b97\u5f97\u51fa\u5176\u5bf9\u5e94\u7684\u6570\u7ec4\u4e0b\u6807\u4e3a4\\n6. \u6267\u884c`map.computeIfAbsent(n1, k1 -> map.computeIfAbsent(n3, k2 -> 200))`\uff0c\u7a0b\u5e8f\u6b63\u5e38\u9000\u51fa\uff1a`\u56e0\u4e3an1\u548cn3\u6ca1\u6709hash\u51b2\u7a81\uff0c\u6240\u4ee5\u6b63\u5e38\u7ed3\u675f`\\n7. \u6267\u884c`map.computeIfAbsent(n1, k1 -> map.computeIfAbsent(n2, k2 -> 200))`\uff0c\u7a0b\u5e8f\u6b63\u5e38\u9000\u51fa\uff1a`\u56e0\u4e3an1\u548cn2\u4ea7\u751f\u4e86hash\u51b2\u7a81\uff0c\u6240\u4ee5\u9677\u5165\u6b7b\u5faa\u73af`\\n\\n\\n4\u3001\u5728\u5bf9\u8c61\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c`SeataDataSourceBeanPostProcessor`\u4e0d\u662f\u5df2\u7ecf\u5c06\u5bf9\u8c61\u5bf9\u5e94\u7684\u6570\u636e\u6e90\u4ee3\u7406\u521d\u59cb\u5316\u597d\u4e86\u5417\uff1f\u4e3a\u4ec0\u4e48\u5728`SeataAutoDataSourceProxyAdvice`\u4e2d\u8fd8\u662f\u4f1a\u521b\u5efa\u5bf9\u5e94\u7684\u6570\u636e\u6e90\u4ee3\u7406\u5462\uff1f\\n1. \u9996\u5148\uff0c`SeataDataSourceBeanPostProcessor`\u6267\u884c\u65f6\u671f\u662f\u665a\u4e8eAOP\u4ee3\u7406\u5bf9\u8c61\u521b\u5efa\u7684\uff0c\u6240\u4ee5\u5728\u6267\u884c`SeataDataSourceBeanPostProcessor`\u76f8\u5173\u65b9\u6cd5\u7684\u65f6\u5019\uff0c`SeataAutoDataSourceProxyAdvice`\u5176\u5b9e\u5e94\u751f\u6548\u4e86\\n2. `SeataDataSourceBeanPostProcessor`\u4e2d\u5411map\u4e2d\u6dfb\u52a0\u5143\u7d20\u65f6\uff0ckey\u4e3a`AOP\u4ee3\u7406\u6570\u636e\u6e90`\uff1b`SeataAutoDataSourceProxyAdvice`\u4e2d\u7684`invocation.getThis()`\u4e2d\u62ff\u5230\u7684\u662f`\u539f\u751f\u6570\u636e\u6e90`\uff0c\u6240\u4ee5key\u4e0d\u76f8\u540c\\n\\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/747b664a0b6c4f58843947576dd0856e~tplv-k3u1fbpfcp-watermark.image)\\n\\n5\u3001\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c`SeataAutoDataSourceProxyAdvic#invoke`\u65b9\u6cd5\u4e2d\u5e76\u6ca1\u6709\u8fc7\u6ee4`toString\u3001hashCode`\u7b49\u65b9\u6cd5\uff0ccglib\u521b\u5efa\u7684\u4ee3\u7406\u5bf9\u8c61\u9ed8\u8ba4\u4f1a\u91cd\u5199\u8fd9\u51e0\u4e2a\u65b9\u6cd5\uff0c\u5982\u679c\u5728\u5411map\u4e2dput\u5143\u7d20\u7684\u65f6\u5019\u89e6\u53d1\u4e86\u4ee3\u7406\u5bf9\u8c61\u7684\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u6b64\u65f6\u53c8\u4f1a\u91cd\u65b0\u8fdb\u5165`SeataAutoDataSourceProxyAdvic#invoke`\u5207\u9762\uff0c\u76f4\u5230\u7ebf\u7a0b\u5806\u6808\u76ca\u5904\\n\\n\\n\\n# \u95ee\u9898\u603b\u7ed3\\n1. \u5728\u4e24\u4e2akey\u4f1a\u4ea7\u751fhash\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u4f1a\u89e6\u53d1`ConcurrentHashMap#computeIfAbsent`BUG\uff0c\u8be5BUG\u7684\u8868\u73b0\u5c31\u662f\u8ba9\u5f53\u524d\u7ebf\u7a0b\u9677\u5165\u6b7b\u5faa\u73af\\n2. \u4e1a\u52a1\u53cd\u9988\uff0c\u8be5\u95ee\u9898\u662f\u5076\u73b0\u7684\uff0c\u5076\u73b0\u7684\u539f\u56e0\u6709\u4e24\u79cd\uff1a\u9996\u5148\uff0c\u8be5\u5e94\u7528\u662f\u591a\u8282\u70b9\u90e8\u7f72\uff0c\u4f46\u7ebf\u4e0a\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u89e6\u53d1\u4e86\u8be5BUG(hashcode\u51b2\u7a81)\uff0c\u6240\u4ee5\u53ea\u6709\u5f53\u8bf7\u6c42\u6253\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u624d\u6709\u53ef\u80fd\u4f1a\u89e6\u53d1\u8be5BUG\uff1b\u5176\u6b21\uff0c\u56e0\u4e3a\u6bcf\u6b21\u91cd\u542f\u5bf9\u8c61\u5730\u5740(hashcode)\u90fd\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u5e76\u4e0d\u662f\u6bcf\u6b21\u5e94\u7528\u91cd\u542f\u4e4b\u540e\u90fd\u4f1a\u89e6\u53d1\uff0c\u4f46\u5982\u679c\u4e00\u65e6\u89e6\u53d1\uff0c\u8be5\u8282\u70b9\u5c31\u4f1a\u4e00\u76f4\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002\u6709\u4e00\u4e2a\u7ebf\u7a0b\u4e00\u76f4\u5728\u6b7b\u5faa\u73af\uff0c\u5e76\u5c06\u5176\u5b83\u5c1d\u8bd5\u4ecemap\u4e2d\u83b7\u53d6\u4ee3\u7406\u6570\u636e\u6e90\u7684\u7ebf\u7a0b\u963b\u585e\u4e86\uff0c\u8fd9\u79cd\u73b0\u8c61\u5728\u4e1a\u52a1\u4e0a\u7684\u53cd\u9988\u5c31\u662f\u8bf7\u6c42\u5361\u4f4f\u4e86\u3002\u5982\u679c\u8fde\u7eed\u8bf7\u6c42\u90fd\u662f\u8fd9\u6837\uff0c\u6b64\u65f6\u4e1a\u52a1\u65b9\u53ef\u80fd\u4f1a\u91cd\u542f\u670d\u52a1\uff0c\u7136\u540e`\u56e0\u4e3a\u91cd\u542f\u540ehash\u51b2\u7a81\u4e0d\u4e00\u5b9a\u5b58\u5728\uff0c\u53ef\u80fd\u91cd\u542f\u540e\u4e1a\u52a1\u8868\u73b0\u5c31\u6b63\u5e38\u4e86\uff0c\u4f46\u4e5f\u6709\u53ef\u80fd\u5728\u4e0b\u6b21\u91cd\u542f\u7684\u65f6\u5019\u53c8\u4f1a\u89e6\u53d1\u4e86\u8fd9\u4e2aBUG`\\n3. \u5f53\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u4ece\u6574\u4e2a\u95ee\u9898\u4e0a\u6765\u770b\uff0c\u786e\u5b9e\u5c31\u662f\u6b7b\u9501\u4e86\uff0c\u56e0\u4e3a\u90a3\u4e2a\u6b7b\u5faa\u73af\u7684\u7ebf\u7a0b\u5360\u8005\u9501\u4e00\u76f4\u4e0d\u91ca\u653e\uff0c\u5bfc\u81f4\u5176\u5b83\u64cd\u4f5c\u8be5map\u7684\u7ebf\u7a0b\u88abBLOCK\u4e86\\n4. \u672c\u8d28\u4e0a\u8fd8\u662f\u56e0\u4e3a`ConcurrentHashMap#computeIfAbsent\u65b9\u6cd5\u53ef\u80fd\u4f1a\u89e6\u53d1BUG`\uff0c\u800cseata\u7684\u4f7f\u7528\u573a\u666f\u521a\u597d\u5c31\u89e6\u53d1\u4e86\u8be5BUG\\n5. \u4e0b\u9762\u8fd9\u4e2ademo\u5176\u5b9e\u5c31\u5b8c\u6574\u7684\u6a21\u62df\u4e86\u7ebf\u4e0a\u51fa\u95ee\u9898\u65f6\u7684\u573a\u666f\uff0c\u5982\u4e0b\uff1a\\n\\n```java\\npublic class Test {\\n    public static void main(String[] args) {\\n\\n        ConcurrentHashMap map = new ConcurrentHashMap(8);\\n\\n        Num n1 = new Num(3);\\n        Num n2 = new Num(19);\\n\\n        for(int i = 0; i< 20; i++){\\n            new Thread(()-> {\\n                try {\\n                    Thread.sleep(1000);\\n                } catch (InterruptedException e) {\\n                    e.printStackTrace();\\n                }\\n\\n                map.computeIfAbsent(n1, k-> 200);\\n            }).start();\\n        }\\n        map.computeIfAbsent(n1, k1 -> map.computeIfAbsent(n2, k2 -> 200));\\n    }\\n\\n\\n    static class Num{\\n        private int i;\\n\\n        public Num(int i){\\n            this.i = i;\\n        }\\n        @Override\\n        public int hashCode() {\\n            return i;\\n        }\\n    }\\n}\\n```\\n\\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d6134c6498fa49c4a68b2745ba0895e3~tplv-k3u1fbpfcp-watermark.image)\\n\\n\\n### \u89e3\u51b3\u95ee\u9898\\n\u53ef\u4ee5\u4ece\u4e24\u65b9\u9762\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\\n1. \u4e1a\u52a1\u65b9\u6539\u52a8\uff1aP6DataSource \u548c DynamicDataSource \u6ca1\u5fc5\u8981\u90fd\u88ab\u4ee3\u7406\uff0c\u76f4\u63a5\u4ee3\u7406P6DataSource\u5c31\u53ef\u4ee5\u4e86\uff0cDynamicDataSource\u6ca1\u6709\u5fc5\u8981\u58f0\u660e\u6210\u4e00\u4e2aBean\uff1b\u6216\u8005\u901a\u8fc7excluds\u5c5e\u6027\u6392\u9664P6DataSource\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u5b58\u5728\u91cd\u590d\u4ee3\u7406\u95ee\u9898\\n2. Seata\u5b8c\u5584\uff1a\u5b8c\u5584\u6570\u636e\u6e90\u4ee3\u7406\u76f8\u5173\u903b\u8f91\\n\\n##### \u4e1a\u52a1\u65b9\u6539\u52a8\\n1\u3001\u6570\u636e\u6e90\u76f8\u5173\u7684\u914d\u7f6e\u6539\u6210\u5982\u4e0b\u5373\u53ef\uff1a\\n```java\\n@Primary\\n@Qualifier(\\"p6DataSource\\")\\n@Bean(\\"p6DataSource\\")\\nP6DataSource p6DataSource(@Qualifier(\\"dsMaster\\") DataSource dataSource) {\\n    P6DataSource p6DataSource =  new P6DataSource(new TuYaDynamicDataSource(masterDsRoute));\\n    logger.warn(\\"dsMaster={}, hashcode={}\\",p6DataSource, p6DataSource.hashCode());\\n    return p6DataSource;\\n}\\n```\\n\\n2\u3001\u6216\u8005\u4e0d\u6539\u53d8\u76ee\u524d\u7684\u6570\u636e\u6e90\u914d\u7f6e\uff0c\u6dfb\u52a0excluds\u5c5e\u6027\\n```java\\n@EnableAutoDataSourceProxy(excludes={\\"P6DataSource\\"})\\n```\\n\\n##### Seata\u5b8c\u5584\\n\\n1\u3001`ConcurrentHashMap#computeIfAbsent`\u65b9\u6cd5\u6539\u6210\u53cc\u91cd\u68c0\u67e5\uff0c\u5982\u4e0b\uff1a\\n```java\\nSeataDataSourceProxy dsProxy = dataSourceProxyMap.get(originalDataSource);\\nif (dsProxy == null) {\\n    synchronized (dataSourceProxyMap) {\\n        dsProxy = dataSourceProxyMap.get(originalDataSource);\\n        if (dsProxy == null) {\\n            dsProxy = createDsProxyByMode(dataSourceProxyMode, originalDataSource);\\n            dataSourceProxyMap.put(originalDataSource, dsProxy);\\n        }\\n    }\\n}\\nreturn dsProxy;\\n```\\n\\n\u4e4b\u524d\u6211\u60f3\u76f4\u63a5\u6539`CollectionUtils#computeIfAbsent`\u65b9\u6cd5\uff0c\u7fa4\u91cc\u5927\u4f6c\u53cd\u9988\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u6e90\u591a\u6b21\u521b\u5efa\uff0c\u786e\u5b9e\u6709\u8fd9\u4e2a\u95ee\u9898\uff1a\u5982\u4e0b\\n```java\\npublic static <K, V> V computeIfAbsent(Map<K, V> map, K key, Function<? super K, ? extends V> mappingFunction) {\\n    V value = map.get(key);\\n    if (value != null) {\\n        return value;\\n    }\\n    value = mappingFunction.apply(key);\\n    return map.computeIfAbsent(key, value);\\n}\\n```\\n\\n2\u3001SeataAutoDataSourceProxyAdvice\u5207\u9762\u903b\u8f91\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u8fc7\u6ee4\\n```java\\nMethod m = BeanUtils.findDeclaredMethod(dataSourceProxyClazz, method.getName(), method.getParameterTypes());\\nif (m != null && DataSource.class.isAssignableFrom(method.getDeclaringClass())) {\\n    SeataDataSourceProxy dataSourceProxy = DataSourceProxyHolder.get().putDataSource((DataSource) invocation.getThis(), dataSourceProxyMode);\\n    return m.invoke(dataSourceProxy, args);\\n} else {\\n    return invocation.proceed();\\n}\\n```\\n\\n### \u9057\u7559\u95ee\u9898\\n\u5728`SeataDataSourceBeanPostProcessor`\u548c`SeataAutoDataSourceProxyAdvice`\u5bf9\u5e94\u65b9\u6cd5\u4e2d\uff0c\u5411map\u4e2d\u521d\u59cb\u5316`seata\u6570\u636e\u6e90\u4ee3\u7406`\u65f6\u5bf9\u5e94\u7684key\u6839\u672c\u5c31\u4e0d\u540c\uff0c`SeataDataSourceBeanPostProcessor`\u4e2d\u5bf9\u5e94\u7684key\u662f`AOP\u4ee3\u7406\u6570\u636e\u6e90`\uff1b`SeataAutoDataSourceProxyAdvice`\u4e2d\u5bf9\u5e94\u7684key\u662f\u539f\u751f\u5bf9\u8c61\uff0c\u6b64\u65f6\u5c31\u9020\u6210\u4e86\u4e0d\u5fc5\u8981\u7684`seata\u6570\u636e\u6e90\u4ee3\u7406`\u5bf9\u8c61\u7684\u521b\u5efa\u3002\\n\\n\u9488\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff0c\u5927\u5bb6\u6709\u4ec0\u4e48\u597d\u7684\u5efa\u8bae\uff1f\u80fd\u4e0d\u80fd\u4e3a`SeataDataSourceBeanPostProcessor`\u6307\u5b9a\u4e00\u4e2aorder\uff0c\u8ba9\u5176\u5728\u521b\u5efaAOP\u4ee3\u7406\u5bf9\u8c61\u4e4b\u524d\u751f\u6548\\n\\n\\n# \u539f\u6587\u94fe\u63a5\\n\\nhttps://juejin.cn/post/6939041336964153352/"},{"id":"/seata-client-start-analysis-02","metadata":{"permalink":"/zh-cn/blog/seata-client-start-analysis-02","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-client-start-analysis-02.md","title":"Seata\u5e94\u7528\u4fa7\u542f\u52a8\u8fc7\u7a0b\u5256\u6790\u2014\u2014\u6ce8\u518c\u4e2d\u5fc3\u4e0e\u914d\u7f6e\u4e2d\u5fc3\u6a21\u5757","description":"\u201c\u521a\u4e0a\u624bSeata\uff0c\u5bf9\u5176\u5404\u4e2a\u6a21\u5757\u4e86\u89e3\u8fd8\u4e0d\u591f\u6df1\u5165\uff1f","date":"2021-03-04T01:35:01.000Z","formattedDate":"2021\u5e743\u67084\u65e5","tags":[{"label":"Seata","permalink":"/zh-cn/blog/tags/seata"}],"readingTime":18.175,"hasTruncateMarker":false,"authors":[{"name":"booogu"}],"frontMatter":{"layout":"post","comments":true,"title":"Seata\u5e94\u7528\u4fa7\u542f\u52a8\u8fc7\u7a0b\u5256\u6790\u2014\u2014\u6ce8\u518c\u4e2d\u5fc3\u4e0e\u914d\u7f6e\u4e2d\u5fc3\u6a21\u5757","date":"2021-03-04T01:35:01.000Z","author":"booogu","catalog":true,"tags":["Seata"]},"prevItem":{"title":"ConcurrentHashMap\u5bfc\u81f4\u7684Seata\u6b7b\u9501\u95ee\u9898","permalink":"/zh-cn/blog/seata-dsproxy-deadlock"},"nextItem":{"title":"Seata\u5e94\u7528\u4fa7\u542f\u52a8\u8fc7\u7a0b\u5256\u6790\u2014\u2014RM & TM\u5982\u4f55\u4e0eTC\u5efa\u7acb\u8fde\u63a5","permalink":"/zh-cn/blog/seata-client-start-analysis-01"}},"content":"> \u201c\u521a\u4e0a\u624bSeata\uff0c\u5bf9\u5176\u5404\u4e2a\u6a21\u5757\u4e86\u89e3\u8fd8\u4e0d\u591f\u6df1\u5165\uff1f<br />\\n\u60f3\u6df1\u5165\u7814\u7a76Seata\u6e90\u7801\uff0c\u5374\u8fd8\u672a\u4ed8\u8bf8\u5b9e\u8df5\uff1f<br />\\n\u60f3\u63a2\u7a76\u4e0b\u5728\u96c6\u6210Seata\u540e\uff0c\u81ea\u5df1\u7684\u5e94\u7528\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\u201c\u5077\u5077\u201d\u5e72\u4e86\u4e9b\u5565\uff1f<br />\\n\u60f3\u5b66\u4e60Seata\u4f5c\u4e3a\u4e00\u6b3e\u4f18\u79c0\u5f00\u6e90\u6846\u67b6\u8574\u542b\u7684\u8bbe\u8ba1\u7406\u5ff5\u548c\u6700\u4f73\u5b9e\u8df5\uff1f<br />\\n\u5982\u679c\u4f60\u6709\u4e0a\u8ff0\u4efb\u4f55\u60f3\u6cd5\u4e4b\u4e00\uff0c\u90a3\u4e48\u4eca\u5929\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5c31\u662f\u4e3a\u4f60\u91cf\u8eab\u6253\u9020\u7684~\\n\\n## \u524d\u8a00\\n\u5728Seata\u7684\u5e94\u7528\u4fa7\uff08RM\u3001TM\uff09\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u9996\u5148\u8981\u505a\u7684\u5c31\u662f\u4e0e\u534f\u8c03\u5668\u4fa7\uff08TC\uff09\u5efa\u7acb\u901a\u4fe1\uff0c\u8fd9\u662fSeata\u80fd\u591f\u5b8c\u6210\u5206\u5e03\u5f0f\u4e8b\u52a1\u534f\u8c03\u7684\u524d\u63d0\uff0c\u90a3\u4e48Seata\u5728\u5b8c\u6210\u5e94\u7528\u4fa7\u521d\u59cb\u5316\u4ee5\u53ca\u4e0eTC\u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u662f**\u5982\u4f55\u627e\u5230TC\u4e8b\u52a1\u534f\u8c03\u5668\u7684\u96c6\u7fa4\u548c\u5730\u5740**\u7684\uff1f\u53c8\u662f**\u5982\u4f55\u4ece\u914d\u7f6e\u6a21\u5757\u4e2d\u83b7\u53d6\u5404\u79cd\u914d\u7f6e\u4fe1\u606f**\u7684\u5462\uff1f\u8fd9\u6b63\u662f\u672c\u6587\u8981\u63a2\u7a76\u7684\u91cd\u70b9\u3002\\n\\n## \u7ed9\u4e2a\u9650\u5b9a\\nSeata\u4f5c\u4e3a\u4e00\u6b3e\u4e2d\u95f4\u4ef6\u7ea7\u7684\u5e95\u5c42\u7ec4\u4ef6\uff0c\u662f\u5f88\u8c28\u614e\u5f15\u5165\u7b2c\u4e09\u65b9\u6846\u67b6\u5177\u4f53\u5b9e\u73b0\u7684\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3\u4e0bSeata\u7684SPI\u673a\u5236\uff0c\u770b\u770bSeata\u662f\u5982\u4f55\u901a\u8fc7\u5927\u91cf\u6269\u5c55\u70b9\uff08Extension\uff09\uff0c\u6765\u5c06\u4f9d\u8d56\u7ec4\u4ef6\u7684\u5177\u4f53\u5b9e\u73b0\u5012\u7f6e\u51fa\u53bb\uff0c\u8f6c\u800c\u4f9d\u8d56\u62bd\u8c61\u63a5\u53e3\u7684\uff0c\u540c\u65f6\uff0cSeata\u4e3a\u4e86\u66f4\u597d\u5730\u878d\u5165\u5fae\u670d\u52a1\u3001\u4e91\u539f\u751f\u7b49\u6d41\u884c\u67b6\u6784\u6240\u884d\u751f\u51fa\u6765\u7684\u751f\u6001\u4e2d\uff0c\u4e5f\u57fa\u4e8eSPI\u673a\u5236\u5bf9\u591a\u6b3e\u4e3b\u6d41\u7684\u5fae\u670d\u52a1\u6846\u67b6\u3001\u6ce8\u518c\u4e2d\u5fc3\u3001\u914d\u7f6e\u4e2d\u5fc3\u4ee5\u53caJava\u5f00\u53d1\u6846\u67b6\u754c\u201c\u625b\u628a\u5b50\u201d\u2014\u2014SpringBoot\u7b49\u505a\u4e86\u4e3b\u52a8\u96c6\u6210\uff0c\u5728\u4fdd\u8bc1\u5fae\u5185\u6838\u67b6\u6784\u3001\u677e\u8026\u5408\u3001\u53ef\u6269\u5c55\u7684\u540c\u65f6\uff0c\u53c8\u53ef\u4ee5\u5f88\u597d\u5730\u4e0e\u5404\u7c7b\u7ec4\u4ef6\u201c\u6253\u6210\u4e00\u7247\u201d\uff0c\u4f7f\u5f97\u91c7\u7528\u4e86\u5404\u79cd\u6280\u672f\u6808\u7684\u73af\u5883\u90fd\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u5f15\u5165Seata\u3002\\n\\n\u672c\u6587\u4e3a\u4e86\u8d34\u8fd1\u5927\u5bb6**\u521a\u5f15\u5165Seata\u8bd5\u7528\u65f6**\u7684\u573a\u666f\uff0c\u5728\u4ee5\u4e0b\u4ecb\u7ecd\u4e2d\uff0c\u9009\u62e9**\u5e94\u7528\u4fa7**\u7684\u9650\u5b9a\u6761\u4ef6\u5982\u4e0b\uff1a\u4f7f\u7528**File\uff08\u6587\u4ef6\uff09\u4f5c\u4e3a\u914d\u7f6e\u4e2d\u5fc3\u4e0e\u6ce8\u518c\u4e2d\u5fc3**\uff0c\u5e76\u57fa\u4e8e**SpringBoot**\u542f\u52a8\u3002\\n\\n\u6709\u4e86\u8fd9\u4e2a\u9650\u5b9a\u6761\u4ef6\uff0c\u63a5\u4e0b\u6765\u5c31\u8ba9\u6211\u4eec\u6df1\u5165Seata\u6e90\u7801\uff0c\u4e00\u63a2\u7a76\u7adf\u5427\u3002\\n\\n## \u591a\u6a21\u5757\u4ea4\u66ff\u534f\u4f5c\u7684RM/TM\u521d\u59cb\u5316\u8fc7\u7a0b\\n\u5728[ Seata\u5ba2\u6237\u7aef\u542f\u52a8\u8fc7\u7a0b\u5256\u6790\uff08\u4e00\uff09](http://booogu.top/2021/02/28/seata-client-start-analysis-01/)\u4e2d\uff0c\u6211\u4eec\u5206\u6790\u4e86Seata\u5e94\u7528\u4fa7TM\u4e0eRM\u7684\u521d\u59cb\u5316\u3001\u4ee5\u53ca\u5e94\u7528\u4fa7\u5982\u4f55\u521b\u5efaNetty Channel\u5e76\u5411TC Server\u53d1\u9001\u6ce8\u518c\u8bf7\u6c42\u7684\u8fc7\u7a0b\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5728RM\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\uff0cSeata\u7684\u5176\u4ed6\u591a\u4e2a\u6a21\u5757\uff08\u6ce8\u518c\u4e2d\u5fc3\u3001\u914d\u7f6e\u4e2d\u5fc3\u3001\u8d1f\u8f7d\u5747\u8861\uff09\u4e5f\u90fd\u7eb7\u7eb7\u767b\u573a\uff0c\u76f8\u4e92\u534f\u4f5c\uff0c\u5171\u540c\u5b8c\u6210\u4e86\u8fde\u63a5TC Server\u7684\u8fc7\u7a0b\u3002\\n\\n\u5f53\u6267\u884cClient\u91cd\u8fdeTC Server\u7684\u65b9\u6cd5\uff1aNettyClientChannelManager.Channreconnect()\u65f6\uff0c\u9996\u5148\u9700\u8981\u6839\u636e\u5f53\u524d\u7684**\u4e8b\u52a1\u5206\u7ec4**\u83b7\u53d6\u53ef\u7528\u7684TC Server\u5730\u5740\u5217\u8868\uff1a\\n```js\\n    /**\\n     * NettyClientChannelManager.reconnect()\\n     * Reconnect to remote server of current transaction service group.\\n     *\\n     * @param transactionServiceGroup transaction service group\\n     */\\n    void reconnect(String transactionServiceGroup) {\\n        List<String> availList = null;\\n        try {\\n            //\u4ece\u6ce8\u518c\u4e2d\u5fc3\u4e2d\u83b7\u53d6\u53ef\u7528\u7684TC Server\u5730\u5740\\n            availList = getAvailServerList(transactionServiceGroup);\\n        } catch (Exception e) {\\n            LOGGER.error(\\"Failed to get available servers: {}\\", e.getMessage(), e);\\n            return;\\n        }\\n        //\u4ee5\u4e0b\u4ee3\u7801\u7565\\n    }\\n```\\n\\n\u5173\u4e8e\u4e8b\u52a1\u5206\u7ec4\u7684\u8be6\u7ec6\u6982\u5ff5\u4ecb\u7ecd\uff0c\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863[\u4e8b\u52a1\u5206\u7ec4\u4ecb\u7ecd](https://seata.io/zh-cn/docs/user/txgroup/transaction-group.html)\u3002\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b:\\n- \u6bcf\u4e2aSeata\u5e94\u7528\u4fa7\u7684RM\u3001TM\uff0c\u90fd\u5177\u6709\u4e00\u4e2a**\u4e8b\u52a1\u5206\u7ec4**\u540d\\n- \u6bcf\u4e2aSeata\u534f\u8c03\u5668\u4fa7\u7684TC\uff0c\u90fd\u5177\u6709\u4e00\u4e2a**\u96c6\u7fa4\u540d**\u548c**\u5730\u5740**\\n\u5e94\u7528\u4fa7\u8fde\u63a5\u534f\u8c03\u5668\u4fa7\u65f6\uff0c\u7ecf\u5386\u5982\u4e0b\u4e24\u6b65\uff1a\\n- \u901a\u8fc7\u4e8b\u52a1\u5206\u7ec4\u7684\u540d\u79f0\uff0c\u4ece\u914d\u7f6e\u4e2d\u83b7\u53d6\u5230\u8be5\u5e94\u7528\u4fa7\u5bf9\u5e94\u7684TC\u96c6\u7fa4\u540d\\n- \u901a\u8fc7\u96c6\u7fa4\u540d\u79f0\uff0c\u53ef\u4ee5\u4ece\u6ce8\u518c\u4e2d\u5fc3\u4e2d\u83b7\u53d6TC\u96c6\u7fa4\u7684\u5730\u5740\u5217\u8868\\n\u4ee5\u4e0a\u6982\u5ff5\u3001\u5173\u7cfb\u4e0e\u8fc7\u7a0b\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n![Seata\u4e8b\u52a1\u5206\u7ec4\u4e0e\u5efa\u7acb\u8fde\u63a5\u7684\u5173\u7cfb](http://booogu.top/img/in-post/TXGroup_Group_Relation.jpg)\\n\\n### \u4ece**\u6ce8\u518c\u4e2d\u5fc3**\u83b7\u53d6TC Server\u96c6\u7fa4\u5730\u5740\\n\u4e86\u89e3RM/TC\u8fde\u63a5TC\u65f6\u6d89\u53ca\u7684\u4e3b\u8981\u6982\u5ff5\u4e0e\u6b65\u9aa4\u540e\uff0c\u6211\u4eec\u7ee7\u7eed\u63a2\u7a76getAvailServerList\u65b9\u6cd5\uff1a\\n```js\\n    private List<String> getAvailServerList(String transactionServiceGroup) throws Exception {\\n        //\u2460 \u4f7f\u7528\u6ce8\u518c\u4e2d\u5fc3\u5de5\u5382\uff0c\u83b7\u53d6\u6ce8\u518c\u4e2d\u5fc3\u5b9e\u4f8b\\n        //\u2461 \u8c03\u7528\u6ce8\u518c\u4e2d\u5fc3\u7684\u67e5\u627e\u65b9\u6cd5lookUp()\uff0c\u6839\u636e\u4e8b\u52a1\u5206\u7ec4\u540d\u79f0\u83b7\u53d6TC\u96c6\u7fa4\u4e2d\u53ef\u7528Server\u7684\u5730\u5740\u5217\u8868\\n        List<InetSocketAddress> availInetSocketAddressList = RegistryFactory.getInstance().lookup(transactionServiceGroup);\\n        if (CollectionUtils.isEmpty(availInetSocketAddressList)) {\\n            return Collections.emptyList();\\n        }\\n\\n        return availInetSocketAddressList.stream()\\n                                         .map(NetUtil::toStringAddress)\\n                                         .collect(Collectors.toList());\\n    }\\n```\\n#### \u7528\u54ea\u4e2a\u6ce8\u518c\u4e2d\u5fc3\uff1f**Seata\u5143\u914d\u7f6e\u6587\u4ef6**\u7ed9\u51fa\u7b54\u6848\\n\u4e0a\u9762\u5df2\u63d0\u5230\uff0cSeata\u652f\u6301\u591a\u79cd\u6ce8\u518c\u4e2d\u5fc3\u7684\u5b9e\u73b0\uff0c\u90a3\u4e48\uff0cSeata\u9996\u5148\u9700\u8981\u4ece\u4e00\u4e2a\u5730\u65b9\u5148\u83b7\u53d6\u5230\u201c\u6ce8\u518c\u4e2d\u5fc3\u7684\u7c7b\u578b\u201d\u8fd9\u4e2a\u4fe1\u606f\u3002\\n\\n\u4ece\u54ea\u91cc\u83b7\u53d6\u5462\uff1fSeata\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u201c\u914d\u7f6e\u6587\u4ef6\u201d\u7528\u4e8e\u5b58\u653e\u5176\u6846\u67b6\u5185\u6240\u7528\u7ec4\u4ef6\u7684\u4e00\u4e9b\u57fa\u672c\u4fe1\u606f\uff0c\u6211\u66f4\u613f\u610f\u79f0\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e3a **\u300e\u5143\u914d\u7f6e\u6587\u4ef6\u300f**\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u5305\u542b\u7684\u4fe1\u606f\uff0c\u5176\u5b9e\u662f\u201c\u914d\u7f6e\u7684\u914d\u7f6e\u201d\uff0c\u4e5f\u5373\u201c\u5143\u201d\u7684\u6982\u5ff5\uff0c\u5927\u5bb6\u53ef\u4ee5\u5bf9\u6bd4\u6570\u636e\u5e93\u8868\u4e2d\u7684\u4fe1\u606f\uff0c\u548c\u6570\u636e\u5e93\u8868\u672c\u8eab\u7ed3\u6784\u7684\u4fe1\u606f\uff08\u8868\u6570\u636e\u548c\u8868\u5143\u6570\u636e\uff09\u6765\u7406\u89e3\u3002\\n\\n\u6211\u4eec\u53ef\u4ee5\u628a\u6ce8\u518c\u4e2d\u5fc3\u3001\u914d\u7f6e\u4e2d\u5fc3\u4e2d\u7684\u4fe1\u606f\uff0c\u90fd\u770b\u505a\u662f**\u914d\u7f6e\u4fe1\u606f\u672c\u8eab**\uff0c\u800c\u8fd9\u4e9b**\u914d\u7f6e\u4fe1\u606f\u7684\u914d\u7f6e**\u662f\u4ec0\u4e48\uff1f\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5c31\u5305\u542b\u5728Seata\u7684\u5143\u914d\u7f6e\u6587\u4ef6\u4e2d\u3002\u5b9e\u9645\u4e0a\uff0c\u300e\u5143\u914d\u7f6e\u6587\u4ef6\u300f\u4e2d\u53ea\u5305\u542b**\u4e24\u7c7b\u4fe1\u606f**\uff1a\\n- \u4e00\u662f\u6ce8\u518c\u4e2d\u5fc3\u7684\u7c7b\u578b\uff1aregistry.type\uff0c\u4ee5\u53ca\u8be5\u7c7b\u578b\u6ce8\u518c\u4e2d\u5fc3\u7684\u4e00\u4e9b\u57fa\u672c\u4fe1\u606f\uff0c\u6bd4\u5982\u5f53\u6ce8\u518c\u4e2d\u5fc3\u7c7b\u578b\u4e3a\u6587\u4ef6\u65f6\uff0c\u5143\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b58\u653e\u4e86\u6587\u4ef6\u7684\u540d\u5b57\u4fe1\u606f\uff1b\u5f53\u6ce8\u518c\u4e2d\u5fc3\u7c7b\u578b\u662fNacos\u65f6\uff0c\u5143\u914d\u7f6e\u6587\u4ef6\u4e2d\u5219\u5b58\u653e\u7740Nacos\u7684\u5730\u5740\u3001\u547d\u540d\u7a7a\u95f4\u3001\u96c6\u7fa4\u540d\u7b49\u4fe1\u606f\\n- \u4e8c\u662f\u914d\u7f6e\u4e2d\u5fc3\u7684\u7c7b\u578b\uff1aconfig.type\uff0c\u4ee5\u53ca\u8be5\u7c7b\u578b\u914d\u7f6e\u4e2d\u5fc3\u7684\u4e00\u4e9b\u57fa\u672c\u4fe1\u606f\uff0c\u6bd4\u5982\u5f53\u914d\u7f6e\u4e2d\u5fc3\u4e3a\u6587\u4ef6\u65f6\uff0c\u5143\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b58\u653e\u4e86\u6587\u4ef6\u7684\u540d\u5b57\u4fe1\u606f\uff1b\u5f53\u6ce8\u518c\u4e2d\u5fc3\u7c7b\u578b\u4e3aConsul\u65f6\uff0c\u5143\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b58\u653e\u4e86Consul\u7684\u5730\u5740\u4fe1\u606f\\n\\nSeata\u7684\u5143\u914d\u7f6e\u6587\u4ef6\u652f\u6301Yaml\u3001Properties\u7b49\u591a\u79cd\u683c\u5f0f\uff0c\u800c\u4e14\u53ef\u4ee5\u96c6\u6210\u5230SpringBoot\u7684application.yaml\u6587\u4ef6\u4e2d\uff08\u4f7f\u7528seata-spring-boot-starter\u5373\u53ef\uff09\uff0c\u65b9\u4fbf\u4e0eSpringBoot\u96c6\u6210\u3002\\n\\nSeata\u4e2d\u81ea\u5e26\u7684\u9ed8\u8ba4\u5143\u914d\u7f6e\u6587\u4ef6\u662fregistry.conf\uff0c\u5f53\u6211\u4eec\u91c7\u7528\u6587\u4ef6\u4f5c\u4e3a\u6ce8\u518c\u4e0e\u914d\u7f6e\u4e2d\u5fc3\u65f6\uff0cregistry.conf\u4e2d\u7684\u5185\u5bb9\u8bbe\u7f6e\u5982\u4e0b\uff1a\\n```js\\nregistry {\\n  # file \u3001nacos \u3001eureka\u3001redis\u3001zk\u3001consul\u3001etcd3\u3001sofa\\n  type = \\"file\\"\\n  file {\\n    name = \\"file.conf\\"\\n  }\\n}\\n\\nconfig {\\n  # file\u3001nacos \u3001apollo\u3001zk\u3001consul\u3001etcd3\\n  type = \\"file\\"\\n  file {\\n    name = \\"file.conf\\"\\n  }\\n}\\n```\\n\u5728\u5982\u4e0b\u6e90\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0cSeata\u4f7f\u7528\u7684\u6ce8\u518c\u4e2d\u5fc3\u7684\u7c7b\u578b\uff0c\u662f\u4eceConfigurationFactory.CURRENT_FILE_INSTANCE\u4e2d\u83b7\u53d6\u7684\uff0c\u800c\u8fd9\u4e2aCURRENT_FILE_INSTANCE\uff0c\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\uff0cSeata**\u5143\u914d\u7f6e\u6587\u4ef6\u7684\u5b9e\u4f8b**\\n```js\\n    //\u5728getInstance()\u4e2d\uff0c\u8c03\u7528buildRegistryService\uff0c\u6784\u5efa\u5177\u4f53\u7684\u6ce8\u518c\u4e2d\u5fc3\u5b9e\u4f8b\\n    public static RegistryService getInstance() {\\n        if (instance == null) {\\n            synchronized (RegistryFactory.class) {\\n                if (instance == null) {\\n                    instance = buildRegistryService();\\n                }\\n            }\\n        }\\n        return instance;\\n    }\\n\\n    private static RegistryService buildRegistryService() {\\n        RegistryType registryType;\\n        //\u83b7\u53d6\u6ce8\u518c\u4e2d\u5fc3\u7c7b\u578b\\n        String registryTypeName = ConfigurationFactory.CURRENT_FILE_INSTANCE.getConfig(\\n            ConfigurationKeys.FILE_ROOT_REGISTRY + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR\\n                + ConfigurationKeys.FILE_ROOT_TYPE);\\n        try {\\n            registryType = RegistryType.getType(registryTypeName);\\n        } catch (Exception exx) {\\n            throw new NotSupportYetException(\\"not support registry type: \\" + registryTypeName);\\n        }\\n        if (RegistryType.File == registryType) {\\n            return FileRegistryServiceImpl.getInstance();\\n        } else {\\n            //\u6839\u636e\u6ce8\u518c\u4e2d\u5fc3\u7c7b\u578b\uff0c\u4f7f\u7528SPI\u7684\u65b9\u5f0f\u52a0\u8f7d\u6ce8\u518c\u4e2d\u5fc3\u7684\u5b9e\u4f8b\\n            return EnhancedServiceLoader.load(RegistryProvider.class, Objects.requireNonNull(registryType).name()).provide();\\n        }\\n    }\\n```\\n\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5143\u914d\u7f6e\u6587\u4ef6\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u5f53\u9996\u6b21\u83b7\u53d6\u9759\u6001\u5b57\u6bb5CURRENT_FILE_INSTANCE\u65f6\uff0c\u89e6\u53d1ConfigurationFactory\u7c7b\u7684\u521d\u59cb\u5316\uff1a\\n```js\\n    //ConfigurationFactory\u7c7b\u7684\u9759\u6001\u5757\\n    static {\\n        load();\\n    }\\n\\n     /**\\n     * load()\u65b9\u6cd5\u4e2d\uff0c\u52a0\u8f7dSeata\u7684\u5143\u914d\u7f6e\u6587\u4ef6\\n     */   \\n    private static void load() {\\n        //\u5143\u914d\u7f6e\u6587\u4ef6\u7684\u540d\u79f0\uff0c\u652f\u6301\u901a\u8fc7\u7cfb\u7edf\u53d8\u91cf\u3001\u73af\u5883\u53d8\u91cf\u6269\u5c55\\n        String seataConfigName = System.getProperty(SYSTEM_PROPERTY_SEATA_CONFIG_NAME);\\n        if (seataConfigName == null) {\\n            seataConfigName = System.getenv(ENV_SEATA_CONFIG_NAME);\\n        }\\n        if (seataConfigName == null) {\\n            seataConfigName = REGISTRY_CONF_DEFAULT;\\n        }\\n        String envValue = System.getProperty(ENV_PROPERTY_KEY);\\n        if (envValue == null) {\\n            envValue = System.getenv(ENV_SYSTEM_KEY);\\n        }\\n        //\u6839\u636e\u5143\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\uff0c\u521b\u5efa\u4e00\u4e2a\u5b9e\u73b0\u4e86Configuration\u63a5\u53e3\u7684\u6587\u4ef6\u914d\u7f6e\u5b9e\u4f8b\\n        Configuration configuration = (envValue == null) ? new FileConfiguration(seataConfigName,\\n                false) : new FileConfiguration(seataConfigName + \\"-\\" + envValue, false);\\n        Configuration extConfiguration = null;\\n        //\u901a\u8fc7SPI\u52a0\u8f7d\uff0c\u6765\u5224\u65ad\u662f\u5426\u5b58\u5728\u6269\u5c55\u914d\u7f6e\u63d0\u4f9b\u8005\\n        //\u5f53\u5e94\u7528\u4fa7\u4f7f\u7528seata-spring-boot-starer\u65f6\uff0c\u5c06\u901a\u8fc7SpringBootConfigurationProvider\u4f5c\u4e3a\u6269\u5c55\u914d\u7f6e\u63d0\u4f9b\u8005\uff0c\u8fd9\u65f6\u5f53\u83b7\u53d6\u5143\u914d\u7f6e\u9879\u65f6\uff0c\u5c06\u4e0d\u518d\u4ecefile.conf\uff08\u9ed8\u8ba4\uff09\u4e2d\u83b7\u53d6\uff0c\u800c\u662f\u4eceapplication.properties/application.yaml\u4e2d\u83b7\u53d6\\n        try {\\n            //\u901a\u8fc7ExtConfigurationProvider\u7684provide\u65b9\u6cd5\uff0c\u5c06\u539f\u6709\u7684Configuration\u5b9e\u4f8b\u66ff\u6362\u4e3a\u6269\u5c55\u914d\u7f6e\u7684\u5b9e\u4f8b\\n            extConfiguration = EnhancedServiceLoader.load(ExtConfigurationProvider.class).provide(configuration);\\n            if (LOGGER.isInfoEnabled()) {\\n                LOGGER.info(\\"load Configuration:{}\\", extConfiguration == null ? configuration.getClass().getSimpleName()\\n                        : extConfiguration.getClass().getSimpleName());\\n            }\\n        } catch (EnhancedServiceNotFoundException ignore) {\\n\\n        } catch (Exception e) {\\n            LOGGER.error(\\"failed to load extConfiguration:{}\\", e.getMessage(), e);\\n        }\\n        //\u5b58\u5728\u6269\u5c55\u914d\u7f6e\uff0c\u5219\u8fd4\u56de\u6269\u5c55\u914d\u7f6e\u5b9e\u4f8b\uff0c\u5426\u5219\u8fd4\u56de\u6587\u4ef6\u914d\u7f6e\u5b9e\u4f8b\\n        CURRENT_FILE_INSTANCE = extConfiguration == null ? configuration : extConfiguration;\\n    }\\n```\\nload()\u65b9\u6cd5\u7684\u8c03\u7528\u5e8f\u5217\u56fe\u5982\u4e0b\uff1a\\n![Seata\u5143\u914d\u7f6e\u6587\u4ef6\u7684\u52a0\u8f7d\u8fc7\u7a0b](http://booogu.top/img/in-post/seata_config_initialization.png)\\n\\n\u4e0a\u9762\u7684\u5e8f\u5217\u56fe\u4e2d\uff0c\u5927\u5bb6\u53ef\u4ee5\u5173\u6ce8\u4ee5\u4e0b\u51e0\u70b9\uff1a\\n- Seata\u5143\u914d\u7f6e\u6587\u4ef6**\u540d\u79f0\u652f\u6301\u6269\u5c55**\\n- Seata\u5143\u914d\u7f6e\u6587\u4ef6\u540e\u7f00**\u652f\u63013\u79cd\u540e\u7f00**\uff0c\u5206\u522b\u4e3ayaml/properties/conf\uff0c\u5728\u521b\u5efa\u5143\u914d\u7f6e\u6587\u4ef6\u5b9e\u4f8b\u65f6\uff0c\u4f1a\u4f9d\u6b21\u5c1d\u8bd5\u5339\u914d\\n- Seata\u4e2d**\u914d\u7f6e\u80fd\u529b\u76f8\u5173\u7684\u9876\u7ea7\u63a5\u53e3\u4e3aConfiguration**\uff0c\u5404\u79cd\u914d\u7f6e\u4e2d\u5fc3\u5747\u9700\u5b9e\u73b0\u6b64\u63a5\u53e3\uff0cSeata\u7684\u5143\u914d\u7f6e\u6587\u4ef6\u5c31\u662f\u4f7f\u7528FileConfiguration\uff08\u6587\u4ef6\u7c7b\u578b\u7684\u914d\u7f6e\u4e2d\u5fc3\uff09\u5b9e\u73b0\u4e86\u6b64\u63a5\u53e3\\n\\n```js\\n/**\\n * Seata\u914d\u7f6e\u80fd\u529b\u63a5\u53e3\\n * package\uff1aio.seata.config\\n */\\n\\npublic interface Configuration {\\n    /**\\n     * Gets short.\\n     *\\n     * @param dataId       the data id\\n     * @param defaultValue the default value\\n     * @param timeoutMills the timeout mills\\n     * @return the short\\n     */\\n    short getShort(String dataId, int defaultValue, long timeoutMills);\\n\\n    //\u4ee5\u4e0b\u5185\u5bb9\u7565\uff0c\u4e3b\u8981\u80fd\u529b\u4e3a\u914d\u7f6e\u7684\u589e\u5220\u6539\u67e5\\n}\\n```\\n- Seata\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3aExtConfigurationProvider\u7684\u6269\u5c55\u70b9\uff0c\u5f00\u653e\u4e86\u5bf9\u914d\u7f6e\u5177\u4f53\u5b9e\u73b0\u7684\u6269\u5c55\u80fd\u529b\uff0c\u5b83\u5177\u6709\u4e00\u4e2aprovide()\u65b9\u6cd5\uff0c\u63a5\u6536\u539f\u6709\u7684Configuration\uff0c\u8fd4\u56de\u4e00\u4e2a\u5168\u65b0\u7684Configuration\uff0c\u6b64\u63a5\u53e3\u65b9\u6cd5\u7684\u5f62\u5f0f\u51b3\u5b9a\u4e86\uff0c\u4e00\u822c\u53ef\u4ee5\u91c7\u7528\u9759\u6001\u4ee3\u7406\u3001\u52a8\u6001\u4ee3\u7406\u3001\u88c5\u9970\u5668\u7b49\u8bbe\u8ba1\u6a21\u5f0f\u6765\u5b9e\u73b0\u6b64\u65b9\u6cd5\uff0c\u5b9e\u73b0\u5bf9\u539f\u6709Configuration\u7684\u589e\u5f3a\\n```js\\n/**\\n * Seata\u6269\u5c55\u914d\u7f6e\u63d0\u4f9b\u8005\u63a5\u53e3\\n * package\uff1aio.seata.config\\n */\\npublic interface ExtConfigurationProvider {\\n    /**\\n     * provide a AbstractConfiguration implementation instance\\n     * @param originalConfiguration\\n     * @return configuration\\n     */\\n    Configuration provide(Configuration originalConfiguration);\\n}\\n```\\n- \u5f53\u5e94\u7528\u4fa7\u57fa\u4e8eseata-seata-spring-boot-starter\u542f\u52a8\u65f6\uff0c\u5c06**\u91c7\u7528\u300eSpringBootConfigurationProvider\u300f\u4f5c\u4e3a\u6269\u5c55\u914d\u7f6e\u63d0\u4f9b\u8005**\uff0c\u5728\u5176provide\u65b9\u6cd5\u4e2d\uff0c\u4f7f\u7528\u52a8\u6001\u5b57\u8282\u7801\u751f\u6210\uff08CGLIB\uff09\u7684\u65b9\u5f0f\u4e3a\u300eFileConfiguration\u300f\u5b9e\u4f8b\u521b\u5efa\u4e86\u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\u7c7b\uff0c\u62e6\u622a\u4e86\u6240\u6709\u4ee5\\"get\\"\u5f00\u5934\u7684\u65b9\u6cd5\uff0c\u6765\u4eceapplication.properties/application.yaml\u4e2d\u83b7\u53d6\u5143\u914d\u7f6e\u9879\u3002\\n\\n\u5173\u4e8eSpringBootConfigurationProvider\u7c7b\uff0c\u672c\u6587\u53ea\u8bf4\u660e\u4e0b\u5b9e\u73b0\u601d\u8def\uff0c\u4e0d\u518d\u5c55\u5f00\u5206\u6790\u6e90\u7801\uff0c\u8fd9\u4e5f\u4ec5\u662fExtConfigurationProvider\u63a5\u53e3\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4eceConfiguration\u53ef\u6269\u5c55\u3001\u53ef\u66ff\u6362\u7684\u89d2\u5ea6\u6765\u770b\uff0cSeata\u6b63\u662f\u901a\u8fc7ExtConfigurationProvider\u8fd9\u6837\u4e00\u4e2a\u6269\u5c55\u70b9\uff0c\u4e3a\u591a\u79cd\u914d\u7f6e\u7684\u5b9e\u73b0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e7f\u9614\u7684\u821e\u53f0\uff0c\u5141\u8bb8\u914d\u7f6e\u7684\u591a\u79cd\u5b9e\u73b0\u4e0e\u63a5\u5165\u65b9\u6848\u3002\\n\\n\u7ecf\u5386\u8fc7\u4e0a\u8ff0\u52a0\u8f7d\u6d41\u7a0b\u540e\uff0c\u5982\u679c\u6211\u4eec**\u6ca1\u6709\u6269\u5c55\u914d\u7f6e\u63d0\u4f9b\u8005**\uff0c\u6211\u4eec\u5c06\u4eceSeata\u5143\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u5230\u6ce8\u518c\u4e2d\u5fc3\u7684\u7c7b\u578b\u4e3afile\uff0c\u540c\u65f6\u521b\u5efa\u4e86\u4e00\u4e2a\u6587\u4ef6\u6ce8\u518c\u4e2d\u5fc3\u5b9e\u4f8b\uff1aFileRegistryServiceImpl\\n#### \u4ece\u6ce8\u518c\u4e2d\u5fc3\u83b7\u53d6TC Server\u5730\u5740\\n\u83b7\u53d6\u6ce8\u518c\u4e2d\u5fc3\u7684\u5b9e\u4f8b\u540e\uff0c\u9700\u8981\u6267\u884clookup()\u65b9\u6cd5\uff08RegistryFactory.getInstance().**lookup(transactionServiceGroup)**\uff09\uff0cFileRegistryServiceImpl.lookup()\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a\\n```js\\n    /**\\n     * \u6839\u636e\u4e8b\u52a1\u5206\u7ec4\u540d\u79f0\uff0c\u83b7\u53d6TC Server\u53ef\u7528\u5730\u5740\u5217\u8868\\n     * package\uff1aio.seata.discovery.registry\\n     * class\uff1aFileRegistryServiceImpl\\n     */\\n    @Override\\n    public List<InetSocketAddress> lookup(String key) throws Exception {\\n        //\u83b7\u53d6TC Server\u96c6\u7fa4\u540d\u79f0\\n        String clusterName = getServiceGroup(key);\\n        if (clusterName == null) {\\n            return null;\\n        }\\n        //\u4ece\u914d\u7f6e\u4e2d\u5fc3\u4e2d\u83b7\u53d6TC\u96c6\u7fa4\u4e2d\u6240\u6709\u53ef\u7528\u7684Server\u5730\u5740\\n        String endpointStr = CONFIG.getConfig(\\n            PREFIX_SERVICE_ROOT + CONFIG_SPLIT_CHAR + clusterName + POSTFIX_GROUPLIST);\\n        if (StringUtils.isNullOrEmpty(endpointStr)) {\\n            throw new IllegalArgumentException(clusterName + POSTFIX_GROUPLIST + \\" is required\\");\\n        }\\n        //\u5c06\u5730\u5740\u5c01\u88c5\u4e3aInetSocketAddress\u5e76\u8fd4\u56de\\n        String[] endpoints = endpointStr.split(ENDPOINT_SPLIT_CHAR);\\n        List<InetSocketAddress> inetSocketAddresses = new ArrayList<>();\\n        for (String endpoint : endpoints) {\\n            String[] ipAndPort = endpoint.split(IP_PORT_SPLIT_CHAR);\\n            if (ipAndPort.length != 2) {\\n                throw new IllegalArgumentException(\\"endpoint format should like ip:port\\");\\n            }\\n            inetSocketAddresses.add(new InetSocketAddress(ipAndPort[0], Integer.parseInt(ipAndPort[1])));\\n        }\\n        return inetSocketAddresses;\\n    }\\n\\n    /**\\n     * \u6ce8\u518c\u4e2d\u5fc3\u63a5\u53e3\u4e2d\u7684default\u65b9\u6cd5\\n     * package\uff1aio.seata.discovery.registry\\n     * class\uff1aRegistryService\\n     */\\n    default String  getServiceGroup(String key) {\\n        key = PREFIX_SERVICE_ROOT + CONFIG_SPLIT_CHAR + PREFIX_SERVICE_MAPPING + key;\\n        //\u5728\u914d\u7f6e\u7f13\u5b58\u4e2d\uff0c\u6dfb\u52a0\u4e8b\u52a1\u5206\u7ec4\u540d\u79f0\u53d8\u5316\u76d1\u542c\u4e8b\u4ef6\\n        if (!SERVICE_GROUP_NAME.contains(key)) {\\n            ConfigurationCache.addConfigListener(key);\\n            SERVICE_GROUP_NAME.add(key);\\n        }\\n        //\u4ece\u914d\u7f6e\u4e2d\u5fc3\u4e2d\u83b7\u53d6\u4e8b\u52a1\u5206\u7ec4\u5bf9\u5e94\u7684TC\u96c6\u7fa4\u540d\u79f0\\n        return ConfigurationFactory.getInstance().getConfig(key);\\n    }\\n```\\n\u53ef\u4ee5\u770b\u5230\uff0c\u4ee3\u7801\u903b\u8f91\u4e0e\u7b2c\u4e00\u8282\u4e2d\u56fe**Seata\u4e8b\u52a1\u5206\u7ec4\u4e0e\u5efa\u7acb\u8fde\u63a5\u7684\u5173\u7cfb**\u4e2d\u7684\u6d41\u7a0b\u76f8\u7b26\u5408\uff0c\\n\u8fd9\u65f6\uff0c\u6ce8\u518c\u4e2d\u5fc3\u5c06\u9700\u8981**\u914d\u7f6e\u4e2d\u5fc3\u7684\u534f\u52a9**\uff0c\u6765\u83b7\u53d6\u4e8b\u52a1\u5206\u7ec4\u5bf9\u5e94\u7684\u96c6\u7fa4\u540d\u79f0\u3001\u5e76\u67e5\u627e\u96c6\u7fa4\u4e2d\u53ef\u7528\u7684\u670d\u52a1\u5730\u5740\u3002\\n\\n### \u4ece**\u914d\u7f6e\u4e2d\u5fc3**\u83b7\u53d6TC\u96c6\u7fa4\u540d\u79f0\\n#### \u914d\u7f6e\u4e2d\u5fc3\u7684\u521d\u59cb\u5316\\n\u914d\u7f6e\u4e2d\u5fc3\u7684\u521d\u59cb\u5316\uff08\u5728ConfigurationFactory.buildConfiguration()\uff09\uff0c\u4e0e\u6ce8\u518c\u4e2d\u5fc3\u7684\u521d\u59cb\u5316\u6d41\u7a0b\u7c7b\u4f3c\uff0c\u90fd\u662f\u5148\u4ece**\u5143\u914d\u7f6e\u6587\u4ef6**\u4e2d\u83b7\u53d6\u914d\u7f6e\u4e2d\u5fc3\u7684\u7c7b\u578b\u7b49\u4fe1\u606f\uff0c\u7136\u540e\u521d\u59cb\u5316\u4e00\u4e2a\u5177\u4f53\u7684\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u4f8b\uff0c\u6709\u4e86\u4e4b\u524d\u7684\u5206\u6790\u57fa\u7840\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\\n\\n#### \u83b7\u53d6\u914d\u7f6e\u9879\u7684\u503c\\n\u4e0a\u65b9\u4ee3\u7801\u6bb5\u7684\u4e24\u4e2a\u65b9\u6cd5\uff1a*FileRegistryServiceImpl.lookup()*\u4ee5\u53ca*RegistryService.getServiceGroup()*\u4e2d\uff0c\u90fd\u4ece\u914d\u7f6e\u4e2d\u5fc3\u4e2d\u83b7\u53d6\u7684\u914d\u7f6e\u9879\u7684\u503c\uff1a\\n- lookup()\u9700\u8981\u7531\u5177\u4f53\u7684\u6ce8\u518c\u4e2d\u5fc3\u5b9e\u73b0\uff0c\u4f7f\u7528\u6587\u4ef6\u4f5c\u4e3a\u6ce8\u518c\u4e2d\u5fc3\uff0c\u5176\u5b9e\u662f\u4e00\u79cd\u76f4\u8fdeTC Server\u7684\u60c5\u51b5\uff0c\u5176\u7279\u6b8a\u70b9\u5728\u4e8e**TC Server\u7684\u5730\u5740\u662f\u5199\u6b7b\u5728\u914d\u7f6e\u4e2d\u7684**\u7684\uff08\u6b63\u5e38\u5e94\u5b58\u4e8e\u6ce8\u518c\u4e2d\u5fc3\u4e2d\uff09\uff0c\u56e0\u6b64FileRegistryServiceImpl.lookup()\u65b9\u6cd5\uff0c\u662f\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\u83b7\u53d6\u7684TC\u96c6\u7fa4\u4e2dServer\u7684\u5730\u5740\u4fe1\u606f\\n- getServiceGroup()\u662fRegistryServer\u63a5\u53e3\u4e2d\u7684default\u65b9\u6cd5\uff0c\u5373\u6240\u6709\u6ce8\u518c\u4e2d\u5fc3\u7684\u516c\u5171\u5b9e\u73b0\uff0cSeata\u4e2d\u4efb\u4f55\u4e00\u79cd\u6ce8\u518c\u4e2d\u5fc3\uff0c\u90fd\u9700\u8981\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\u6765\u6839\u636e\u4e8b\u52a1\u5206\u7ec4\u540d\u79f0\u6765\u83b7\u53d6TC\u96c6\u7fa4\u540d\u79f0\\n\\n### \u8d1f\u8f7d\u5747\u8861\\n\u7ecf\u8fc7\u4e0a\u8ff0\u73af\u8282\u914d\u7f6e\u4e2d\u5fc3\u3001\u6ce8\u518c\u4e2d\u5fc3\u7684\u534f\u4f5c\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u83b7\u53d6\u5230\u4e86\u5f53\u524d\u5e94\u7528\u4fa7\u6240\u6709\u53ef\u7528\u7684TC Server\u5730\u5740\uff0c\u90a3\u4e48\u5728\u53d1\u9001\u771f\u6b63\u7684\u8bf7\u6c42\u4e4b\u524d\uff0c\u8fd8\u9700\u8981\u901a\u8fc7\u7279\u5b9a\u7684\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\uff0c\u9009\u62e9\u4e00\u4e2aTC Server\u5730\u5740\uff0c\u8fd9\u90e8\u5206\u6e90\u7801\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u4e0d\u5e26\u7740\u5927\u5bb6\u5206\u6790\u4e86\u3002\\n\\n> \u5173\u4e8e\u8d1f\u8f7d\u5747\u8861\u7684\u6e90\u7801\uff0c\u5927\u5bb6\u53ef\u4ee5\u9605\u8bfbAbstractNettyRemotingClient.doSelect()\uff0c\u56e0\u672c\u6587\u5206\u6790\u7684\u4ee3\u7801\u662fRMClient/TMClient\u7684\u91cd\u8fde\u65b9\u6cd5\uff0c\u6b64\u65b9\u6cd5\u4e2d\uff0c\u6240\u6709\u83b7\u53d6\u5230\u7684Server\u5730\u5740\uff0c\u90fd\u4f1a\u901a\u8fc7\u904d\u5386\u4f9d\u6b21\u8fde\u63a5\uff08\u91cd\u8fde\uff09\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e0d\u9700\u8981\u518d\u505a\u8d1f\u8f7d\u5747\u8861\u3002\\n\\n\u4ee5\u4e0a\u5c31\u662fSeata\u5e94\u7528\u4fa7\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u6ce8\u518c\u4e2d\u5fc3\u4e0e\u914d\u7f6e\u4e2d\u5fc3\u8fd9\u4e24\u4e2a\u5173\u952e\u6a21\u5757\u4e4b\u95f4\u7684\u534f\u4f5c\u5173\u7cfb\u4e0e\u5de5\u4f5c\u6d41\u7a0b\uff0c\u6b22\u8fce\u5171\u540c\u63a2\u8ba8\u3001\u5b66\u4e60\uff01\\n\\n> \u540e\u8bb0\uff1a\u672c\u6587\u53ca\u5176\u4e0a\u7bc7[ Seata\u5ba2\u6237\u7aef\u542f\u52a8\u8fc7\u7a0b\u5256\u6790\uff08\u4e00\uff09](http://booogu.top/2021/02/28/seata-client-start-analysis-01/)\uff0c\u662f\u672c\u4eba\u64b0\u5199\u7684\u9996\u6279\u6280\u672f\u535a\u5ba2\uff0c\u5c06\u4e0a\u624bSeata\u65f6\uff0c\u4e2a\u4eba\u8ba4\u4e3aSeata\u4e2d\u8f83\u4e3a\u590d\u6742\u3001\u9700\u8981\u7814\u7a76\u548c\u5f04\u901a\u7684\u90e8\u5206\u6e90\u7801\u8fdb\u884c\u4e86\u5206\u6790\u548c\u8bb0\u5f55\u3002\\n\u5728\u6b64\u6b22\u8fce\u5404\u4f4d\u8bfb\u8005\u63d0\u51fa\u5404\u79cd\u6539\u8fdb\u5efa\u8bae\uff0c\u8c22\u8c22\uff01"},{"id":"/seata-client-start-analysis-01","metadata":{"permalink":"/zh-cn/blog/seata-client-start-analysis-01","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-client-start-analysis-01.md","title":"Seata\u5e94\u7528\u4fa7\u542f\u52a8\u8fc7\u7a0b\u5256\u6790\u2014\u2014RM & TM\u5982\u4f55\u4e0eTC\u5efa\u7acb\u8fde\u63a5","description":"\u201c\u521a\u4e0a\u624bSeata\uff0c\u5bf9\u5176\u5404\u4e2a\u6a21\u5757\u4e86\u89e3\u8fd8\u4e0d\u591f\u6df1\u5165\uff1f","date":"2021-02-28T21:08:00.000Z","formattedDate":"2021\u5e742\u670828\u65e5","tags":[{"label":"Seata","permalink":"/zh-cn/blog/tags/seata"}],"readingTime":11.15,"hasTruncateMarker":false,"authors":[{"name":"booogu"}],"frontMatter":{"layout":"post","comments":true,"title":"Seata\u5e94\u7528\u4fa7\u542f\u52a8\u8fc7\u7a0b\u5256\u6790\u2014\u2014RM & TM\u5982\u4f55\u4e0eTC\u5efa\u7acb\u8fde\u63a5","date":"2021-02-28T21:08:00.000Z","author":"booogu","catalog":true,"tags":["Seata"]},"prevItem":{"title":"Seata\u5e94\u7528\u4fa7\u542f\u52a8\u8fc7\u7a0b\u5256\u6790\u2014\u2014\u6ce8\u518c\u4e2d\u5fc3\u4e0e\u914d\u7f6e\u4e2d\u5fc3\u6a21\u5757","permalink":"/zh-cn/blog/seata-client-start-analysis-02"},"nextItem":{"title":"Spring Cloud\u96c6\u6210Seata\u5206\u5e03\u5f0f\u4e8b\u52a1-TCC\u6a21\u5f0f","permalink":"/zh-cn/blog/integrate-seata-tcc-mode-with-spring-cloud"}},"content":"> \u201c\u521a\u4e0a\u624bSeata\uff0c\u5bf9\u5176\u5404\u4e2a\u6a21\u5757\u4e86\u89e3\u8fd8\u4e0d\u591f\u6df1\u5165\uff1f <br />\\n\u60f3\u6df1\u5165\u7814\u7a76Seata\u6e90\u7801\uff0c\u5374\u8fd8\u672a\u4ed8\u8bf8\u5b9e\u8df5\uff1f<br />\\n\u60f3\u63a2\u7a76\u4e0b\u5728\u96c6\u6210Seata\u540e\uff0c\u81ea\u5df1\u7684\u5e94\u7528\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\u201c\u5077\u5077\u201d\u5e72\u4e86\u4e9b\u5565\uff1f<br />\\n\u60f3\u5b66\u4e60Seata\u4f5c\u4e3a\u4e00\u6b3e\u4f18\u79c0\u5f00\u6e90\u6846\u67b6\u8574\u542b\u7684\u8bbe\u8ba1\u7406\u5ff5\u548c\u6700\u4f73\u5b9e\u8df5\uff1f<br />\\n\u5982\u679c\u4f60\u6709\u4e0a\u8ff0\u4efb\u4f55\u60f3\u6cd5\u4e4b\u4e00\uff0c\u90a3\u4e48\u4eca\u5929\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5c31\u662f\u4e3a\u4f60\u91cf\u8eab\u6253\u9020\u7684~\\n\\n## \u524d\u8a00\\n\u770b\u8fc7\u5b98\u7f51README\u7684\u7b2c\u4e00\u5f20\u56fe\u7247\u7684\u540c\u5b66\u90fd\u5e94\u8be5\u6e05\u695a\uff0cSeata\u534f\u8c03\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u539f\u7406\u4fbf\u5728\u4e8e\u901a\u8fc7\u5176**\u534f\u8c03\u5668\u4fa7**\u7684TC\uff0c\u6765\u4e0e**\u5e94\u7528\u4fa7**\u7684TM\u3001RM\u8fdb\u884c\u5404\u79cd\u901a\u4fe1\u4e0e\u4ea4\u4e92\uff0c\u6765\u4fdd\u8bc1\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\uff0c\u591a\u4e2a\u4e8b\u52a1\u53c2\u4e0e\u8005\u7684\u6570\u636e\u4e00\u81f4\u6027\u3002\u90a3\u4e48Seata\u7684\u534f\u8c03\u5668\u4fa7\u4e0e\u5e94\u7528\u4fa7\u4e4b\u95f4\uff0c\u662f\u5982\u4f55\u5efa\u7acb\u8fde\u63a5\u5e76\u8fdb\u884c\u901a\u4fe1\u7684\u5462\uff1f\\n\\n\u6ca1\u9519\uff0c\u7b54\u6848\u5c31\u662fNetty\uff0cNetty\u4f5c\u4e3a\u4e00\u6b3e\u9ad8\u6027\u80fd\u7684RPC\u901a\u4fe1\u6846\u67b6\uff0c\u4fdd\u8bc1\u4e86TC\u4e0eRM\u4e4b\u95f4\u7684\u9ad8\u6548\u901a\u4fe1\uff0c\u5173\u4e8eNetty\u7684\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u672c\u6587\u4e0d\u518d\u5c55\u5f00\uff0c\u4eca\u5929\u6211\u4eec\u63a2\u7a76\u7684\u91cd\u70b9\uff0c\u5728\u4e8e**\u5e94\u7528\u4fa7\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u5982\u4f55\u901a\u8fc7\u4e00\u7cfb\u5217Seata\u5173\u952e\u6a21\u5757\u4e4b\u95f4\u7684\u534f\u4f5c\uff08\u5982RPC\u3001Config/Registry Center\u7b49\uff09\uff0c\u6765\u5efa\u7acb\u4e0e\u534f\u8c03\u5668\u4fa7\u4e4b\u95f4\u7684\u901a\u4fe1**\\n\\n## \u4eceGlobalTransactionScanner\u8bf4\u8d77\\n\u6211\u4eec\u77e5\u9053Seata\u63d0\u4f9b\u4e86\u591a\u4e2a\u5f00\u53d1\u671f\u6ce8\u89e3\uff0c\u6bd4\u5982\u7528\u4e8e\u5f00\u542f\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684@GlobalTransactional\u3001\u7528\u4e8e\u58f0\u660eTCC\u4e24\u9636\u6bb5\u670d\u52a1\u7684@TwoPhraseBusinessAction\u7b49\uff0c\u5b83\u4eec\u90fd\u662f\u57fa\u4e8eSpring AOP\u673a\u5236\uff0c\u5bf9\u4f7f\u7528\u4e86\u6ce8\u89e3\u7684Bean\u65b9\u6cd5\u5206\u914d\u5bf9\u5e94\u7684\u62e6\u622a\u5668\u8fdb\u884c\u589e\u5f3a\uff0c\u6765\u5b8c\u6210\u5bf9\u5e94\u7684\u5904\u7406\u903b\u8f91\u3002\u800cGlobalTransactionScanner\u8fd9\u4e2aSpring Bean\uff0c\u5c31\u627f\u8f7d\u7740\u4e3a\u5404\u4e2a\u6ce8\u89e3\u5206\u914d\u5bf9\u5e94\u7684\u62e6\u622a\u5668\u7684\u804c\u8d23\uff0c\u4ece\u5176Scanner\u7684\u547d\u540d\uff0c\u6211\u4eec\u4e5f\u4e0d\u96be\u63a8\u65ad\u51fa\uff0c\u5b83\u662f\u4e3a\u4e86\u5728Spring\u5e94\u7528\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e0e\u5168\u5c40\u4e8b\u52a1\uff08GlobalTransactionScanner\uff09\u76f8\u5173\u7684Bean\u8fdb\u884c\u626b\u63cf\u3001\u5904\u7406\u7684\u3002\\n\\n\u9664\u6b64\u4e4b\u5916\uff0c\u5e94\u7528\u4fa7RPC\u5ba2\u6237\u7aef\uff08TMClient\u3001RMClient\uff09\u521d\u59cb\u5316\u3001\u4e0eTC\u5efa\u7acb\u8fde\u63a5\u7684\u6d41\u7a0b\uff0c\u4e5f\u662f\u5728GlobalTransactionScanner#afterPropertiesSet()\u4e2d\u53d1\u8d77\u7684\uff1a\\n\\n````js\\n    /**\\n     * package\uff1aio.seata.spring.annotation\\n     * class\uff1aGlobalTransactionScanner\\n     */\\n    @Override\\n    public void afterPropertiesSet() {\\n        if (disableGlobalTransaction) {\\n            if (LOGGER.isInfoEnabled()) {\\n                LOGGER.info(\\"Global transaction is disabled.\\");\\n            }\\n            return;\\n        }\\n        //\u5728Bean\u5c5e\u6027\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u6267\u884cTM\u3001RM\u7684\u521d\u59cb\u5316\\n        initClient();\\n\\n    }\\n````\\n\\n## RM & TM \u7684\u521d\u59cb\u5316\u4e0e\u8fde\u63a5\u8fc7\u7a0b\\n\u8fd9\u91cc\uff0c\u6211\u4eec\u4ee5RMClient.init()\u4e3a\u4f8b\u8bf4\u660e\uff0cTMClient\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\u4ea6\u540c\u7406\u3002\\n### \u7c7b\u5173\u7cfb\u7684\u8bbe\u8ba1\\n\u67e5\u770bRMClient#init()\u7684\u6e90\u7801\uff0c\u6211\u4eec\u53d1\u73b0\uff0cRMClient\u5148**\u6784\u9020**\u4e86\u4e00\u4e2aRmNettyRemotingClient\uff0c\u7136\u540e\u6267\u884c\u5176**\u521d\u59cb\u5316**init()\u65b9\u6cd5\u3002\u800cRmNettyRemotingClient\u7684**\u6784\u9020\u5668**\u548c**\u521d\u59cb\u5316**\u65b9\u6cd5\uff0c\u90fd\u4f1a\u9010\u5c42\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u5668\u4e0e\u521d\u59cb\u5316\u65b9\u6cd5\\n\\n```js\\n    /**\\n     * RMClient\u7684\u521d\u59cb\u5316\u903b\u8f91\\n     * package\uff1aio.seata.rm\\n     * class\uff1aRMClient\\n     */\\n    public static void init(String applicationId, String transactionServiceGroup) {\\n        //\u2460 \u9996\u5148\u4eceRmNettyRemotingClient\u7c7b\u5f00\u59cb\uff0c\u4f9d\u6b21\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u5668        \\n        RmNettyRemotingClient rmNettyRemotingClient = RmNettyRemotingClient.getInstance(applicationId, transactionServiceGroup);\\n        rmNettyRemotingClient.setResourceManager(DefaultResourceManager.get());\\n        rmNettyRemotingClient.setTransactionMessageHandler(DefaultRMHandler.get());\\n        //\u2461 \u7136\u540e\u4eceRmNettyRemotingClient\u7c7b\u5f00\u59cb\uff0c\u4f9d\u6b21\u8c03\u7528\u7236\u7c7b\u7684init()\\n        rmNettyRemotingClient.init();\\n    }\\n```\\n\u4e0a\u8ff0RMClient\u7cfb\u5217\u5404\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\u4ee5\u53ca\u8c03\u7528\u6784\u9020\u5668\u548cinit()\u521d\u59cb\u5316\u65b9\u6cd5\u7684\u8fc7\u7a0b\u5982\u4e0b\u56fe\u793a\u610f\uff1a\\n![RMClient.init\u7b80\u5316\u7248\u6d41\u7a0b\u4e0e\u4e3b\u8981\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb](http://booogu.top/img/in-post/rmclient_relation.jpg)\\n\\n\\n\u90a3\u4e48\u4e3a\u4f55\u8981\u5c06RMClient\u8bbe\u8ba1\u6210\u8fd9\u6837\u8f83\u4e3a\u590d\u6742\u7684\u7ee7\u627f\u5173\u7cfb\u5462\uff1f\u5176\u5b9e\u662f\u4e3a\u4e86\u5c06\u5404\u5c42\u7684\u804c\u8d23\u3001\u8fb9\u754c\u5212\u5206\u6e05\u695a\uff0c\u4f7f\u5f97\u5404\u5c42\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u7279\u5b9a\u903b\u8f91\u5904\u7406\uff0c\u5b9e\u73b0\u66f4\u597d\u7684\u6269\u5c55\u6027\uff0c\u8fd9\u90e8\u5206\u7684\u8be6\u7ec6\u8bbe\u8ba1\u601d\u8def\uff0c\u53ef\u53c2\u8003Seata RPC\u6a21\u5757\u91cd\u6784PR\u7684\u64cd\u5200\u8005\u4e58\u8f89\u5144\u7684\u6587\u7ae0[Seata-RPC\u91cd\u6784\u4e4b\u8def](https://mp.weixin.qq.com/s/PCSZ4a8cgmyZNhbUrO-BZQ)\uff09\\n\\n### \u521d\u59cb\u5316\u7684\u5b8c\u6574\u6d41\u7a0b\\n\u5404\u7c7b\u7684\u6784\u9020\u5668\u4e0e\u521d\u59cb\u5316\u65b9\u6cd5\u4e2d\u7684\u4e3b\u8981\u903b\u8f91\uff0c\u5927\u5bb6\u53ef\u4ee5\u501f\u52a9\u4e0b\u9762\u8fd9\u4e2a\u80fd\u8868\u610f\u7684\u5e8f\u5217\u56fe\u6765\u68b3\u7406\u4e0b\uff0c\u6b64\u56fe\u5927\u5bb6\u4e5f\u53ef\u5148\u8df3\u8fc7\u4e0d\u770b\uff0c\u5728\u4e0b\u9762\u6211\u4eec\u5206\u6790\u8fc7\u51e0\u4e2a\u91cd\u70b9\u7c7b\u540e\uff0c\u518d\u56de\u5934\u6765\u770b\u8fd9\u4e9b\u7c7b\u662f\u4f55\u65f6\u767b\u573a\u3001\u5982\u4f55\u4ea4\u4e92\u7684\u534f\u4f5c\u7684\u3002\\n![RMClient\u7684\u521d\u59cb\u5316\u6d41\u7a0b](http://booogu.top/img/in-post/rmclient_initialization.png)\\n\\n### \u6293\u4f4f\u6838\u5fc3\u2014\u2014Channel\u7684\u521b\u5efa\\n\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\uff0c\u5e94\u7528\u4fa7\u4e0e\u534f\u8c03\u5668\u4fa7\u7684\u901a\u4fe1\u662f\u501f\u52a9Netty\u7684Channel\uff08\u7f51\u7edc\u901a\u9053\uff09\u6765\u5b8c\u6210\u7684\uff0c\u56e0\u6b64**\u901a\u4fe1\u8fc7\u7a0b\u7684\u5173\u952e\u5728\u4e8eChannel\u7684\u521b\u5efa**\uff0c\u5728Seata\u4e2d\uff0c\u901a\u8fc7\u6c60\u5316\u7684\u65b9\u5f0f\uff08\u501f\u52a9\u4e86common-pool\u4e2d\u7684\u5bf9\u8c61\u6c60\uff09\u65b9\u5f0f\u6765\u521b\u5efa\u3001\u7ba1\u7406Channel\u3002\\n\\n\u8fd9\u91cc\u6211\u4eec\u6709\u5fc5\u8981\u7b80\u8981\u4ecb\u7ecd\u4e0b\u5bf9\u8c61\u6c60\u7684\u7b80\u5355\u6982\u5ff5\u53ca\u5176\u5728Seata\u4e2d\u7684\u5b9e\u73b0\uff1a\\n\u6d89\u53ca\u5230\u7684common-pool\u4e2d\u7684\u4e3b\u8981\u7c7b\uff1a\\n* **GenericKeydObjectPool<K, V>**\uff1aKV\u6cdb\u578b\u5bf9\u8c61\u6c60\uff0c\u63d0\u4f9b\u5bf9\u6240\u6709\u5bf9\u8c61\u7684\u5b58\u53d6\u7ba1\u7406\uff0c\u800c\u5bf9\u8c61\u7684\u521b\u5efa\u7531\u5176\u5185\u90e8\u7684\u5de5\u5382\u7c7b\u6765\u5b8c\u6210\\n* **KeyedPoolableObjectFactory<K, V>**\uff1aKV\u6cdb\u578b\u5bf9\u8c61\u5de5\u5382\uff0c\u8d1f\u8d23\u6c60\u5316\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u88ab\u5bf9\u8c61\u6c60\u6301\u6709\\n\\n\u6d89\u53ca\u5230\u7684Seata\u4e2d\u5bf9\u8c61\u6c60\u5b9e\u73b0\u76f8\u5173\u7684\u4e3b\u8981\u7c7b\uff1a\\n* \u9996\u5148\uff0c\u88ab\u6c60\u5316\u7ba1\u7406\u7684\u5bf9\u8c61\u5c31\u662f**Channel**\uff0c\u5bf9\u5e94common-pool\u4e2d\u7684\u6cdb\u578bV\\n* **NettyPoolKey**\uff1aChannel\u5bf9\u5e94\u7684Key\uff0c\u5bf9\u5e94common-pool\u4e2d\u7684\u6cdb\u578bK\uff0cNettyPoolKey\u4e3b\u8981\u5305\u542b\u4e24\u4e2a\u4fe1\u606f\uff1a\\n    - *address*:\u521b\u5efaChannel\u65f6\uff0c\u5bf9\u5e94\u7684TC Server\u5730\u5740\\n    - *message*:\u521b\u5efaChannel\u65f6\uff0c\u5411TC Server\u53d1\u9001\u7684RPC\u6d88\u606f\u4f53\\n* **GenericKeydObjectPool<NettyPoolKey,Channel>**\uff1aChannel\u5bf9\u8c61\u6c60\\n* **NettyPoolableFactory**\uff1a\u521b\u5efaChannel\u7684\u5de5\u5382\u7c7b\\n\\n\\n\u8ba4\u8bc6\u4e86\u4e0a\u8ff0\u5bf9\u8c61\u6c60\u76f8\u5173\u7684\u4e3b\u8981\u7c7b\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u6765\u770b\u770bSeata\u4e2d\u6d89\u53caChannel\u7ba1\u7406\u4ee5\u53ca\u4e0eRPC\u76f8\u5173\u7684\u51e0\u4e2a\u4e3b\u8981\u7c7b\uff1a\\n\\n* NettyClientChannelManager\uff1a\\n  - \u6301\u6709Channel\u5bf9\u8c61\u6c60\\n  - \u4e0eChannel\u5bf9\u8c61\u6c60\u4ea4\u4e92\uff0c\u5bf9\u5e94\u7528\u4fa7Channel\u8fdb\u884c\u7ba1\u7406\uff08\u83b7\u53d6\u3001\u91ca\u653e\u3001\u9500\u6bc1\u3001\u7f13\u5b58\u7b49\uff09\\n* RpcClientBootstrap\uff1aRPC\u5ba2\u6237\u7aef\u6838\u5fc3\u5f15\u5bfc\u7c7b\uff0c\u6301\u6709Netty\u6846\u67b6\u7684Bootstrap\u5bf9\u8c61\uff0c\u5177\u5907\u542f\u505c\u80fd\u529b\uff1b\u5177\u6709\u6839\u636e\u8fde\u63a5\u5730\u5740\u6765\u83b7\u53d6\u65b0Channel\u7684\u80fd\u529b\uff0c\u4f9bChannel\u5de5\u5382\u7c7b\u8c03\u7528\\n* AbstractNettyRemotingClient\uff1a\\n  - \u521d\u59cb\u5316\u5e76\u6301\u6709RpcClientBootstrap\\n  - \u5e94\u7528\u4fa7Netty\u5ba2\u6237\u7aef\u7684\u9876\u5c42\u62bd\u8c61\uff0c\u62bd\u8c61\u4e86\u5e94\u7528\u4fa7RM/TM\u53d6\u5f97\u5404\u81eaChannel\u5bf9\u5e94\u7684NettyPoolKey\u7684\u80fd\u529b\uff0c\u4f9bNettyClientChannelManager\u8c03\u7528\\n  - \u521d\u59cb\u5316NettyPoolableFactory\\n\\n\u4e86\u89e3\u4e0a\u8ff0\u6982\u5ff5\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u628aSeata\u4e2d\u521b\u5efaChannel\u7684\u8fc7\u7a0b\u7b80\u5316\u5982\u4e0b\uff1a\\n![\u521b\u5efaChannel\u5bf9\u8c61\u8fc7\u7a0b](http://booogu.top/img/in-post/create_channel.jpg)\\n\\n\u770b\u5230\u8fd9\u91cc\uff0c\u5927\u5bb6\u53ef\u4ee5\u56de\u8fc7\u5934\u518d\u770b\u770b\u4e0a\u9762\u7684**RMClient\u7684\u521d\u59cb\u5316\u5e8f\u5217\u56fe**\uff0c\u5e94\u8be5\u4f1a\u5bf9\u56fe\u4e2d\u5404\u7c7b\u7684\u804c\u8d23\u3001\u5173\u7cfb\uff0c\u4ee5\u53ca\u6574\u4e2a\u521d\u59cb\u5316\u8fc7\u7a0b\u7684\u610f\u56fe\u6709\u4e00\u4e2a\u6bd4\u8f83\u6e05\u6670\u7684\u7406\u89e3\u4e86\u3002\\n\\n### \u5efa\u7acb\u8fde\u63a5\u7684\u65f6\u673a\u4e0e\u6d41\u7a0b\\n\u90a3\u4e48\uff0cRMClient\u662f\u4f55\u65f6\u4e0eServer\u5efa\u7acb\u8fde\u63a5\u7684\u5462\uff1f\\n\\n\u5728RMClient\u521d\u59cb\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5927\u5bb6\u4f1a\u53d1\u73b0\uff0c\u5f88\u591ainit()\u65b9\u6cd5\u90fd\u8bbe\u5b9a\u4e86\u4e00\u4e9b\u5b9a\u65f6\u4efb\u52a1\uff0c\u800cSeata\u5e94\u7528\u4fa7\u4e0e\u534f\u8c03\u5668\u7684\u91cd\u8fde\uff08\u8fde\u63a5\uff09\u673a\u5236\uff0c\u5c31\u662f\u901a\u8fc7\u5b9a\u65f6\u4efb\u52a1\u6765\u5b9e\u73b0\u7684\uff1a\\n\\n```js\\n    /**\\n     * package\uff1aio.seata.core.rpcn.netty\\n     * class\uff1aAbstractNettyRemotingClient\\n     */\\n    public void init() {\\n        //\u8bbe\u7f6e\u5b9a\u65f6\u5668\uff0c\u5b9a\u65f6\u91cd\u8fdeTC Server\\n        timerExecutor.scheduleAtFixedRate(new Runnable() {\\n            @Override\\n            public void run() {\\n                clientChannelManager.reconnect(getTransactionServiceGroup());\\n            }\\n        }, SCHEDULE_DELAY_MILLS, SCHEDULE_INTERVAL_MILLS, TimeUnit.MILLISECONDS);\\n        if (NettyClientConfig.isEnableClientBatchSendRequest()) {\\n            mergeSendExecutorService = new ThreadPoolExecutor(MAX_MERGE_SEND_THREAD,\\n                MAX_MERGE_SEND_THREAD,\\n                KEEP_ALIVE_TIME, TimeUnit.MILLISECONDS,\\n                new LinkedBlockingQueue<>(),\\n                new NamedThreadFactory(getThreadPrefix(), MAX_MERGE_SEND_THREAD));\\n            mergeSendExecutorService.submit(new MergedSendRunnable());\\n        }\\n        super.init();\\n        clientBootstrap.start();\\n    }\\n```\\n\\n\\n\u6211\u4eec\u901a\u8fc7\u8ddf\u8e2a\u4e00\u6b21reconnect\u7684\u6267\u884c\uff0c\u770b\u770b\u4e0a\u9762\u63a2\u7a76\u7684\u51e0\u4e2a\u7c7b\u4e4b\u95f4\u662f\u5982\u4f55\u534f\u4f5c\uff0c\u5b8c\u6210RMClient\u4e0eTC\u7684\u8fde\u63a5\u7684\uff08\u5b9e\u9645\u4e0a\u9996\u6b21\u8fde\u63a5\u53ef\u80fd\u53d1\u751f\u5728registerResource\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f46\u6d41\u7a0b\u4e00\u81f4\uff09\\n![RMClient\u4e0eTC Server\u8fde\u63a5\u8fc7\u7a0b](http://booogu.top/img/in-post/rmclient_connect_tcserver.png)\\n\\n\u8fd9\u4e2a\u56fe\u4e2d\uff0c\u5927\u5bb6\u53ef\u4ee5\u91cd\u70b9\u5173\u6ce8\u8fd9\u51e0\u4e2a\u70b9\uff1a\\n* NettyClientChannelManager\u6267\u884c\u5177\u4f53AbstractNettyRemotingClient\u4e2d\uff0c\u83b7\u53d6NettyPoolKey\u7684\u56de\u8c03\u51fd\u6570\uff08getPoolKeyFunction()\uff09\uff1a\u5e94\u7528\u4fa7\u7684\u4e0d\u540cClient\uff08RMClient\u4e0eTMClient\uff09\uff0c\u5728\u521b\u5efaChannel\u65f6\u4f7f\u7528\u7684Key\u4e0d\u540c\uff0c\u4f7f**\u4e24\u8005\u5728\u91cd\u8fdeTC Server\u65f6\uff0c\u53d1\u9001\u7684\u6ce8\u518c\u6d88\u606f\u4e0d\u540c**\uff0c\u8fd9\u4e5f\u662f\u7531\u4e24\u8005\u5728Seata\u4e2d\u626e\u6f14\u7684\u89d2\u8272\u4e0d\u540c\u800c\u51b3\u5b9a\u7684\uff1a\\n  - TMClient\uff1a\u626e\u6f14\u4e8b\u52a1\u7ba1\u7406\u5668\u89d2\u8272\uff0c\u521b\u5efaChannel\u65f6\uff0c\u4ec5\u5411TC\u53d1\u9001TM\u6ce8\u518c\u8bf7\u6c42\uff08RegisterTMRequest\uff09\u5373\u53ef\\n  - RMClient\uff1a\u626e\u6f14\u8d44\u6e90\u7ba1\u7406\u5668\u89d2\u8272\uff0c\u9700\u8981\u7ba1\u7406\u5e94\u7528\u4fa7\u6240\u6709\u7684\u4e8b\u52a1\u8d44\u6e90\uff0c\u56e0\u6b64\u5728\u521b\u5efaChannel\u65f6\uff0c\u9700\u8981\u5728\u53d1\u9001RM\u6ce8\u518c\u8bf7\u6c42\uff08RegesterRMRequest\uff09\u524d\uff0c\u83b7\u53d6\u5e94\u7528\u4fa7\u6240\u6709\u4e8b\u52a1\u8d44\u6e90\uff08Resource\uff09\u4fe1\u606f\uff0c\u6ce8\u518c\u81f3TC Server\\n* \u5728Channel\u5bf9\u8c61\u5de5\u5382NettyPoolableFactory\u7684makeObject\uff08\u5236\u9020Channel\uff09\u65b9\u6cd5\u4e2d\uff0c\u4f7f\u7528NettyPoolKey\u4e2d\u7684\u4e24\u9879\u4fe1\u606f\uff0c\u5b8c\u6210\u4e86\u4e24\u9879\u4efb\u52a1\uff1a\\n    - \u4f7f\u7528NettyPoolKey\u7684address\u521b\u5efa\u65b0\u7684Channel\\n    - \u4f7f\u7528NettyPoolKey\u7684message\u4ee5\u53ca\u65b0\u7684Channel\u5411TC Server\u53d1\u9001\u6ce8\u518c\u8bf7\u6c42\uff0c\u8fd9\u5c31\u662fClient\u5411TC Server\u7684\u8fde\u63a5\uff08\u9996\u6b21\u6267\u884c\uff09\u6216\u91cd\u8fde\uff08\u975e\u9996\u6b21\uff0c\u7531\u5b9a\u65f6\u4efb\u52a1\u9a71\u52a8\u6267\u884c\uff09\u8bf7\u6c42\\n\\n\u4ee5\u4e0a\u5185\u5bb9\uff0c\u5c31\u662f\u5173\u4e8eSeata\u5e94\u7528\u4fa7\u7684\u521d\u59cb\u5316\u53ca\u5176\u4e0eTC Server\u534f\u8c03\u5668\u4fa7\u5efa\u7acb\u8fde\u63a5\u7684\u5168\u8fc7\u7a0b\u5206\u6790\u3002\\n\\n\u66f4\u6df1\u5c42\u6b21\u7684\u7ec6\u8282\uff0c\u5efa\u8bae\u5927\u5bb6\u518d\u6839\u636e\u672c\u6587\u68b3\u7406\u7684\u8109\u7edc\u548c\u63d0\u5230\u7684\u51e0\u4e2a\u91cd\u70b9\uff0c\u7ec6\u81f4\u5730\u9605\u8bfb\u4e0b\u6e90\u7801\uff0c\u76f8\u4fe1\u5b9a\u4f1a\u6709\u66f4\u6df1\u5c42\u6b21\u7684\u7406\u89e3\u548c\u5168\u65b0\u7684\u6536\u83b7\uff01\\n\\n> \u540e\u8bb0\uff1a\u8003\u8651\u5230\u7bc7\u5e45\u4ee5\u53ca\u4fdd\u6301\u4e00\u7bc7\u6e90\u7801\u5206\u6790\u6587\u7ae0\u8f83\u4e3a\u5408\u9002\u7684\u4fe1\u606f\u91cf\uff0c\u672c\u6587\u524d\u8a00\u4e2d\u6240\u8bf4\u7684**\u914d\u7f6e\u3001\u6ce8\u518c\u7b49\u6a21\u5757\u534f\u4f5c\u914d\u5408**\u5e76\u6ca1\u6709\u5728\u6587\u7ae0\u4e2d\u5c55\u5f00\u548c\u4f53\u73b0\u3002<br />\\n\u5728\u4e0b\u7bc7\u6e90\u7801\u5256\u6790\u4e2d\uff0c\u6211\u4f1a\u4ee5**\u914d\u7f6e\u4e2d\u5fc3**\u548c**\u6ce8\u518c\u4e2d\u5fc3**\u4e3a\u91cd\u70b9\uff0c\u4e3a\u5927\u5bb6\u5206\u6790\uff0c\u5728RMClient/TM Client\u4e0eTC Server\u5efa\u7acb\u8fde\u63a5\u4e4b\u524d\uff0cSeata\u5e94\u7528\u4fa7\u662f**\u5982\u4f55\u901a\u8fc7\u670d\u52a1\u53d1\u73b0**\u627e\u5230TC Server\u3001\u5982\u4f55**\u4ece\u914d\u7f6e\u6a21\u5757\u83b7\u53d6\u5404\u79cd\u4fe1\u606f**\u7684\u3002"},{"id":"/integrate-seata-tcc-mode-with-spring-cloud","metadata":{"permalink":"/zh-cn/blog/integrate-seata-tcc-mode-with-spring-cloud","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/integrate-seata-tcc-mode-with-spring-cloud.md","title":"Spring Cloud\u96c6\u6210Seata\u5206\u5e03\u5f0f\u4e8b\u52a1-TCC\u6a21\u5f0f","description":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecdSpring Cloud\u96c6\u6210Seata\u5206\u5e03\u5f0f\u4e8b\u52a1TCC\u6a21\u5f0f","date":"2021-01-23T00:00:00.000Z","formattedDate":"2021\u5e741\u670823\u65e5","tags":[],"readingTime":7.31,"hasTruncateMarker":false,"authors":[{"name":"\u5f13\u884c\uff08\u8c2d\u5fd7\u575a\uff09"}],"frontMatter":{"title":"Spring Cloud\u96c6\u6210Seata\u5206\u5e03\u5f0f\u4e8b\u52a1-TCC\u6a21\u5f0f","keywords":["TCC","Seata","Spring Cloud","\u5206\u5e03\u5f0f","\u4e8b\u52a1"],"description":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecdSpring Cloud\u96c6\u6210Seata\u5206\u5e03\u5f0f\u4e8b\u52a1TCC\u6a21\u5f0f","author":"\u5f13\u884c\uff08\u8c2d\u5fd7\u575a\uff09","date":"2021-01-23T00:00:00.000Z"},"prevItem":{"title":"Seata\u5e94\u7528\u4fa7\u542f\u52a8\u8fc7\u7a0b\u5256\u6790\u2014\u2014RM & TM\u5982\u4f55\u4e0eTC\u5efa\u7acb\u8fde\u63a5","permalink":"/zh-cn/blog/seata-client-start-analysis-01"},"nextItem":{"title":"Seata\u914d\u7f6e\u7ba1\u7406\u539f\u7406\u89e3\u6790","permalink":"/zh-cn/blog/seata-config-manager"}},"content":"\u672c\u6587\u5c06\u4ecb\u7ecd\u57fa\u4e8eSpring Cloud + feign \u5982\u4f55\u96c6\u6210 Seata(1.4.0)\u7684TCC\u6a21\u5f0f\u3002\u5b9e\u9645\u4e0a\uff0cSeata\u7684AT\u6a21\u5f0f\u57fa\u672c\u4e0a\u80fd\u6ee1\u8db3\u6211\u4eec\u4f7f\u7528\u5206\u5e03\u5f0f\u4e8b\u52a180%\u7684\u9700\u6c42\uff0c\u4f46\u6d89\u53ca\u4e0d\u652f\u6301\u4e8b\u52a1\u7684\u6570\u636e\u5e93\u4e0e\u4e2d\u95f4\u4ef6\uff08\u5982redis\uff09\u7b49\u7684\u64cd\u4f5c\uff0c\u6216AT\u6a21\u5f0f\u6682\u672a\u652f\u6301\u7684\u6570\u636e\u5e93\uff08\u76ee\u524dAT\u652f\u6301Mysql\u3001Oracle\u4e0ePostgreSQL\uff09\u3001\u8de8\u516c\u53f8\u670d\u52a1\u7684\u8c03\u7528\u3001\u8de8\u8bed\u8a00\u7684\u5e94\u7528\u8c03\u7528\u6216\u6709\u624b\u52a8\u63a7\u5236\u6574\u4e2a\u4e8c\u9636\u6bb5\u63d0\u4ea4\u8fc7\u7a0b\u7684\u9700\u6c42\uff0c\u5219\u9700\u8981\u7ed3\u5408TCC\u6a21\u5f0f\u3002\u4e0d\u4ec5\u5982\u6b64\uff0cTCC\u6a21\u5f0f\u8fd8\u652f\u6301\u4e0eAT\u6a21\u5f0f\u6df7\u5408\u4f7f\u7528\u3002\\n\\n\u672c\u6587\u4f5c\u8005\uff1a\u5f13\u884c\uff08\u8c2d\u5fd7\u575a\uff09\\n\\n# \u4e00\u3001TCC\u6a21\u5f0f\u7684\u6982\u5ff5\\n\\n\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u5168\u5c40\u4e8b\u52a1\uff0c\u6574\u4f53\u662f\u4e24\u9636\u6bb5\u63d0\u4ea4**Try-[Comfirm/Cancel]** \u7684\u6a21\u578b\u3002\u5728Seata\u4e2d\uff0cAT\u6a21\u5f0f\u4e0eTCC\u6a21\u5f0f\u4e8b\u5b9e\u4e0a\u90fd\u662f\u4e24\u9636\u6bb5\u63d0\u4ea4\u7684\u5177\u4f53\u5b9e\u73b0\u3002\u4ed6\u4eec\u7684\u533a\u522b\u5728\u4e8e\uff1a\\n\\nAT \u6a21\u5f0f\u57fa\u4e8e**\u652f\u6301\u672c\u5730 ACID \u4e8b\u52a1** \u7684 **\u5173\u7cfb\u578b\u6570\u636e\u5e93**\uff08\u76ee\u524d\u652f\u6301Mysql\u3001Oracle\u4e0ePostgreSQL\uff09\uff1a\\n\\n\u4e00\u9636\u6bb5 prepare \u884c\u4e3a\uff1a\u5728\u672c\u5730\u4e8b\u52a1\u4e2d\uff0c\u4e00\u5e76\u63d0\u4ea4\u4e1a\u52a1\u6570\u636e\u66f4\u65b0\u548c\u76f8\u5e94\u56de\u6eda\u65e5\u5fd7\u8bb0\u5f55\u3002\\n\u4e8c\u9636\u6bb5 commit \u884c\u4e3a\uff1a\u9a6c\u4e0a\u6210\u529f\u7ed3\u675f\uff0c**\u81ea\u52a8**\u5f02\u6b65\u6279\u91cf\u6e05\u7406\u56de\u6eda\u65e5\u5fd7\u3002\\n\u4e8c\u9636\u6bb5 rollback \u884c\u4e3a\uff1a\u901a\u8fc7\u56de\u6eda\u65e5\u5fd7\uff0c**\u81ea\u52a8**\u751f\u6210\u8865\u507f\u64cd\u4f5c\uff0c\u5b8c\u6210\u6570\u636e\u56de\u6eda\u3002\\n\\n\u76f8\u5e94\u7684\uff0cTCC \u6a21\u5f0f\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u5e95\u5c42\u6570\u636e\u8d44\u6e90\u7684\u4e8b\u52a1\u652f\u6301\uff1a\\n\\n\u4e00\u9636\u6bb5 prepare \u884c\u4e3a\uff1a\u8c03\u7528 \u81ea\u5b9a\u4e49 \u7684 prepare \u903b\u8f91\u3002\\n\u4e8c\u9636\u6bb5 commit \u884c\u4e3a\uff1a\u8c03\u7528 **\u81ea\u5b9a\u4e49**\u7684 commit \u903b\u8f91\u3002\\n\u4e8c\u9636\u6bb5 rollback \u884c\u4e3a\uff1a\u8c03\u7528 **\u81ea\u5b9a\u4e49**\u7684 rollback \u903b\u8f91\u3002\\n\\n\u6240\u8c13 TCC \u6a21\u5f0f\uff0c\u662f\u6307\u652f\u6301\u628a **\u81ea\u5b9a\u4e49** \u7684\u5206\u652f\u4e8b\u52a1\u7eb3\u5165\u5230\u5168\u5c40\u4e8b\u52a1\u7684\u7ba1\u7406\u4e2d\u3002\\n\\n\u7b80\u5355\u70b9\u6982\u62ec\uff0cSEATA\u7684TCC\u6a21\u5f0f\u5c31\u662f**\u624b\u5de5\u7684AT\u6a21\u5f0f**\uff0c\u5b83\u5141\u8bb8\u4f60\u81ea\u5b9a\u4e49\u4e24\u9636\u6bb5\u7684\u5904\u7406\u903b\u8f91\u800c\u4e0d\u4f9d\u8d56AT\u6a21\u5f0f\u7684undo_log\u3002\\n\\n# \u4e8c\u3001\u524d\u63d0\u51c6\u5907\\n\\n- \u6ce8\u518c\u4e2d\u5fc3 [nacos](https://nacos.io/zh-cn/ \\"nacos\\") \\n- [seata\u670d\u52a1\u7aef(TC\uff09](http://seata.io/zh-cn/docs/ops/deploy-guide-beginner.html \\"seata\u670d\u52a1\u7aef(TC\uff09\\")\\n\\n\\n# \u4e09\u3001TM\u4e0eTCC-RM\u7684\u642d\u5efa\\n\\n\u672c\u7ae0\u7740\u91cd\u8bb2\u57fa\u4e8eSpring Cloud + Feign\u7684TCC\u7684\u5b9e\u73b0\uff0c\u9879\u76ee\u7684\u642d\u5efa\u76f4\u63a5\u770b\u6e90\u7801(\u672c\u5de5\u7a0b\u63d0\u4f9b\u4e86AT\u6a21\u5f0f\u4e0eTCC\u6a21\u5f0f\u7684DEMO)\\n\\n[DEMO\u5de5\u7a0b\u6e90\u7801](https://github.com/tanzzj/springcloud-seata-feign \\"\u670d\u52a1\u7aef\u642d\u5efa\u6587\u6863\\")\\n\\n## 3.1 seata\u670d\u52a1\u7aef\u7684\u642d\u5efa\\n\\n[\u670d\u52a1\u7aef\u642d\u5efa\u6587\u6863](http://seata.io/zh-cn/docs/ops/deploy-guide-beginner.html \\"\u670d\u52a1\u7aef\u642d\u5efa\u6587\u6863\\")\\n\\n## 3.2 TM\u7684\u642d\u5efa\\n\\n[service-tm](https://github.com/tanzzj/springcloud-seata-feign/tree/master/service-tm)\\n\\n## 3.3 RM-TCC\u7684\u642d\u5efa\\n\\n### 3.3.1 \u5b9a\u4e49TCC\u63a5\u53e3\\n\\n\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662f SpringCloud + Feign\uff0cFeign\u7684\u8c03\u7528\u57fa\u4e8ehttp\uff0c\u56e0\u6b64\u6b64\u5904\u6211\u4eec\u4f7f\u7528`@LocalTCC`\u4fbf\u53ef\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c`@LocalTCC`\u4e00\u5b9a\u9700\u8981\u6ce8\u89e3\u5728\u63a5\u53e3\u4e0a\uff0c\u6b64\u63a5\u53e3\u53ef\u4ee5\u662f\u5bfb\u5e38\u7684\u4e1a\u52a1\u63a5\u53e3\uff0c\u53ea\u8981\u5b9e\u73b0\u4e86TCC\u7684\u4e24\u9636\u6bb5\u63d0\u4ea4\u5bf9\u5e94\u65b9\u6cd5\u4fbf\u53ef\uff0cTCC\u76f8\u5173\u6ce8\u89e3\u5982\u4e0b\uff1a\\n\\n-  `@LocalTCC` \u9002\u7528\u4e8eSpringCloud+Feign\u6a21\u5f0f\u4e0b\u7684TCC\\n-  `@TwoPhaseBusinessAction` \u6ce8\u89e3try\u65b9\u6cd5\uff0c\u5176\u4e2dname\u4e3a\u5f53\u524dtcc\u65b9\u6cd5\u7684bean\u540d\u79f0\uff0c\u5199\u65b9\u6cd5\u540d\u4fbf\u53ef\uff08\u5168\u5c40\u552f\u4e00\uff09\uff0ccommitMethod\u6307\u5411\u63d0\u4ea4\u65b9\u6cd5\uff0crollbackMethod\u6307\u5411\u4e8b\u52a1\u56de\u6eda\u65b9\u6cd5\u3002\u6307\u5b9a\u597d\u4e09\u4e2a\u65b9\u6cd5\u4e4b\u540e\uff0cseata\u4f1a\u6839\u636e\u5168\u5c40\u4e8b\u52a1\u7684\u6210\u529f\u6216\u5931\u8d25\uff0c\u53bb\u5e2e\u6211\u4eec\u81ea\u52a8\u8c03\u7528\u63d0\u4ea4\u65b9\u6cd5\u6216\u8005\u56de\u6eda\u65b9\u6cd5\u3002\\n-  `@BusinessActionContextParameter` \u6ce8\u89e3\u53ef\u4ee5\u5c06\u53c2\u6570\u4f20\u9012\u5230\u4e8c\u9636\u6bb5\uff08commitMethod/rollbackMethod\uff09\u7684\u65b9\u6cd5\u3002\\n-  `BusinessActionContext` \u4fbf\u662f\u6307TCC\u4e8b\u52a1\u4e0a\u4e0b\u6587\\n\\n\u5b9e\u4f8b\u5982\u4e0b\uff1a\\n\\n```java\\n/**\\n * \u8fd9\u91cc\u5b9a\u4e49tcc\u7684\u63a5\u53e3\\n * \u4e00\u5b9a\u8981\u5b9a\u4e49\u5728\u63a5\u53e3\u4e0a\\n * \u6211\u4eec\u4f7f\u7528springCloud\u7684\u8fdc\u7a0b\u8c03\u7528\\n * \u90a3\u4e48\u8fd9\u91cc\u4f7f\u7528LocalTCC\u4fbf\u53ef\\n *\\n * @author tanzj\\n */\\n@LocalTCC\\npublic interface TccService {\\n \\n    /**\\n     * \u5b9a\u4e49\u4e24\u9636\u6bb5\u63d0\u4ea4\\n     * name = \u8be5tcc\u7684bean\u540d\u79f0,\u5168\u5c40\u552f\u4e00\\n     * commitMethod = commit \u4e3a\u4e8c\u9636\u6bb5\u786e\u8ba4\u65b9\u6cd5\\n     * rollbackMethod = rollback \u4e3a\u4e8c\u9636\u6bb5\u53d6\u6d88\u65b9\u6cd5\\n     * BusinessActionContextParameter\u6ce8\u89e3 \u4f20\u9012\u53c2\u6570\u5230\u4e8c\u9636\u6bb5\u4e2d\\n     *\\n     * @param params  -\u5165\u53c2\\n     * @return String\\n     */\\n    @TwoPhaseBusinessAction(name = \\"insert\\", commitMethod = \\"commitTcc\\", rollbackMethod = \\"cancel\\")\\n    String insert(\\n            @BusinessActionContextParameter(paramName = \\"params\\") Map<String, String> params\\n    );\\n \\n    /**\\n     * \u786e\u8ba4\u65b9\u6cd5\u3001\u53ef\u4ee5\u53e6\u547d\u540d\uff0c\u4f46\u8981\u4fdd\u8bc1\u4e0ecommitMethod\u4e00\u81f4\\n     * context\u53ef\u4ee5\u4f20\u9012try\u65b9\u6cd5\u7684\u53c2\u6570\\n     *\\n     * @param context \u4e0a\u4e0b\u6587\\n     * @return boolean\\n     */\\n    boolean commitTcc(BusinessActionContext context);\\n \\n    /**\\n     * \u4e8c\u9636\u6bb5\u53d6\u6d88\u65b9\u6cd5\\n     *\\n     * @param context \u4e0a\u4e0b\u6587\\n     * @return boolean\\n     */\\n    boolean cancel(BusinessActionContext context);\\n}\\n```\\n\\n### 3.3.2 TCC\u63a5\u53e3\u7684\u4e1a\u52a1\u5b9e\u73b0\\n\\n\u4e3a\u4e86\u4fdd\u8bc1\u4ee3\u7801\u7684\u7b80\u6d01\uff0c\u6b64\u5904\u5c06\u8def\u7531\u5c42\u4e0e\u4e1a\u52a1\u5c42\u7ed3\u5408\u8bb2\u89e3\uff0c\u5b9e\u9645\u9879\u76ee\u5219\u4e0d\u7136\u3002\\n\\n- \u5728try\u65b9\u6cd5\u4e2d\u4f7f\u7528`@Transational`\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7spring\u4e8b\u52a1\u56de\u6eda\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u64cd\u4f5c\uff0c\u800c\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7b49\u4e2d\u95f4\u4ef6\u7684\u56de\u6eda\u64cd\u4f5c\u53ef\u4ee5\u4ea4\u7ed9rollbackMethod\u65b9\u6cd5\u5904\u7406\u3002\\n- \u4f7f\u7528context.getActionContext(\\"params\\")\u4fbf\u53ef\u4ee5\u5f97\u5230\u4e00\u9636\u6bb5try\u4e2d\u5b9a\u4e49\u7684\u53c2\u6570\uff0c\u5728\u4e8c\u9636\u6bb5\u5bf9\u6b64\u53c2\u6570\u8fdb\u884c\u4e1a\u52a1\u56de\u6eda\u64cd\u4f5c\u3002\\n- **\u6ce8\u610f1\uff1a**\u6b64\u5904\u4ea6\u4e0d\u53ef\u4ee5\u6355\u83b7\u5f02\u5e38\uff08\u540c\u7406\u5207\u9762\u5904\u7406\u5f02\u5e38\uff09\uff0c\u5426\u5219TCC\u5c06\u8bc6\u522b\u8be5\u64cd\u4f5c\u4e3a\u6210\u529f\uff0c\u4e8c\u9636\u6bb5\u76f4\u63a5\u6267\u884ccommitMethod\u3002\\n- **\u6ce8\u610f2\uff1a**TCC\u6a21\u5f0f\u8981**\u5f00\u53d1\u8005\u81ea\u884c**\u4fdd\u8bc1\u5e42\u7b49\u548c\u4e8b\u52a1\u9632\u60ac\u6302\\n\\n```java\\n@Slf4j\\n@RestController\\npublic class TccServiceImpl implements  TccService {\\n \\n    @Autowired\\n    TccDAO tccDAO;\\n \\n    /**\\n     * tcc\u670d\u52a1t\uff08try\uff09\u65b9\u6cd5\\n     * \u6839\u636e\u5b9e\u9645\u4e1a\u52a1\u573a\u666f\u9009\u62e9\u5b9e\u9645\u4e1a\u52a1\u6267\u884c\u903b\u8f91\u6216\u8005\u8d44\u6e90\u9884\u7559\u903b\u8f91\\n     *\\n     * @param params - name\\n     * @return String\\n     */\\n    @Override\\n    @PostMapping(\\"/tcc-insert\\")\\n    @Transactional(rollbackFor = Exception.class, propagation = Propagation.REQUIRED)\\n    public String insert(@RequestBody Map<String, String> params) {\\n        log.info(\\"xid = \\" + RootContext.getXID());\\n        //todo \u5b9e\u9645\u7684\u64cd\u4f5c\uff0c\u6216\u64cd\u4f5cMQ\u3001redis\u7b49\\n        tccDAO.insert(params);\\n        //\u653e\u5f00\u4ee5\u4e0b\u6ce8\u89e3\u629b\u51fa\u5f02\u5e38\\n        //throw new RuntimeException(\\"\u670d\u52a1tcc\u6d4b\u8bd5\u56de\u6eda\\");\\n        return \\"success\\";\\n    }\\n \\n    /**\\n     * tcc\u670d\u52a1 confirm\u65b9\u6cd5\\n     * \u82e5\u4e00\u9636\u6bb5\u91c7\u7528\u8d44\u6e90\u9884\u7559\uff0c\u5728\u4e8c\u9636\u6bb5\u786e\u8ba4\u65f6\u8981\u63d0\u4ea4\u9884\u7559\u7684\u8d44\u6e90\\n     *\\n     * @param context \u4e0a\u4e0b\u6587\\n     * @return boolean\\n     */\\n    @Override\\n    public boolean commitTcc(BusinessActionContext context) {\\n        log.info(\\"xid = \\" + context.getXid() + \\"\u63d0\u4ea4\u6210\u529f\\");\\n        //todo \u82e5\u4e00\u9636\u6bb5\u8d44\u6e90\u9884\u7559\uff0c\u8fd9\u91cc\u5219\u8981\u63d0\u4ea4\u8d44\u6e90\\n        return true;\\n    }\\n \\n    /**\\n     * tcc \u670d\u52a1 cancel\u65b9\u6cd5\\n     *\\n     * @param context \u4e0a\u4e0b\u6587\\n     * @return boolean\\n     */\\n    @Override\\n    public boolean cancel(BusinessActionContext context) {\\n        //todo \u8fd9\u91cc\u5199\u4e2d\u95f4\u4ef6\u3001\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u56de\u6eda\u64cd\u4f5c\\n        System.out.println(\\"please manually rollback this data:\\" + context.getActionContext(\\"params\\"));\\n        return true;\\n    }\\n}\\n```\\n\\n### 3.3.3 \u5728TM\u4e2d\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\uff0c\u8c03\u7528RM-TCC\u63a5\u53e3\\n\\n\u5de5\u7a0b\u6e90\u7801\u89c13.2\\n\\n---\\n\u81f3\u6b64\uff0cSpring Cloud\u6574\u5408TCC\u6a21\u5f0f\u5b8c\u6210"},{"id":"/seata-config-manager","metadata":{"permalink":"/zh-cn/blog/seata-config-manager","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-config-manager.md","title":"Seata\u914d\u7f6e\u7ba1\u7406\u539f\u7406\u89e3\u6790","description":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecdSeata\u914d\u7f6e\u7ba1\u7406\u7684\u6838\u5fc3\u5b9e\u73b0\u4ee5\u53ca\u548cSpring\u914d\u7f6e\u7684\u4ea4\u4e92\u8fc7\u7a0b","date":"2021-01-10T00:00:00.000Z","formattedDate":"2021\u5e741\u670810\u65e5","tags":[],"readingTime":12.41,"hasTruncateMarker":false,"authors":[{"name":"\u7f57\u5c0f\u52c7"}],"frontMatter":{"title":"Seata\u914d\u7f6e\u7ba1\u7406\u539f\u7406\u89e3\u6790","keywords":["Seata\u3001\u914d\u7f6e\u4e2d\u5fc3\u3001\u914d\u7f6e\u7ba1\u7406\u3001Spring\u914d\u7f6e"],"description":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecdSeata\u914d\u7f6e\u7ba1\u7406\u7684\u6838\u5fc3\u5b9e\u73b0\u4ee5\u53ca\u548cSpring\u914d\u7f6e\u7684\u4ea4\u4e92\u8fc7\u7a0b","author":"\u7f57\u5c0f\u52c7","date":"2021/01/10"},"prevItem":{"title":"Spring Cloud\u96c6\u6210Seata\u5206\u5e03\u5f0f\u4e8b\u52a1-TCC\u6a21\u5f0f","permalink":"/zh-cn/blog/integrate-seata-tcc-mode-with-spring-cloud"},"nextItem":{"title":"seata-golang \u901a\u4fe1\u6a21\u578b\u8be6\u89e3","permalink":"/zh-cn/blog/seata-golang-communication-mode"}},"content":"\u8bf4\u5230Seata\u4e2d\u7684\u914d\u7f6e\u7ba1\u7406\uff0c\u5927\u5bb6\u53ef\u80fd\u4f1a\u60f3\u5230Seata\u4e2d\u9002\u914d\u7684\u5404\u79cd\u914d\u7f6e\u4e2d\u5fc3\uff0c\u5176\u5b9e\u4eca\u5929\u8981\u8bf4\u7684\u4e0d\u662f\u8fd9\u4e2a\uff0c\u867d\u7136\u4e5f\u4f1a\u7b80\u5355\u5206\u6790Seata\u548c\u5404\u914d\u7f6e\u4e2d\u5fc3\u7684\u9002\u914d\u8fc7\u7a0b\uff0c\u4f46\u4e3b\u8981\u8fd8\u662f\u8bb2\u89e3Seata\u914d\u7f6e\u7ba1\u7406\u7684\u6838\u5fc3\u5b9e\u73b0\\n\\n# Server\u542f\u52a8\u6d41\u7a0b\\n\u5728\u8bb2\u914d\u7f6e\u4e2d\u5fc3\u4e4b\u524d\uff0c\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bServer\u7aef\u7684\u542f\u52a8\u6d41\u7a0b\uff0c\u56e0\u4e3a\u8fd9\u4e00\u5757\u5c31\u6d89\u53ca\u5230\u914d\u7f6e\u7ba1\u7406\u7684\u521d\u59cb\u5316\uff0c\u6838\u5fc3\u6d41\u7a0b\u5982\u4e0b\uff1a\\n1. \u7a0b\u5e8f\u5165\u53e3\u5728`Server#main`\u65b9\u6cd5\u4e2d\\n2. \u83b7\u53d6port\u7684\u51e0\u79cd\u5f62\u5f0f\uff1a\u4ece\u5bb9\u5668\u4e2d\u83b7\u53d6\uff1b\u4ece\u547d\u4ee4\u884c\u83b7\u53d6\uff1b\u9ed8\u8ba4\u7aef\u53e3\\n3. \u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\uff1ahost\u3001port\u3001storeMode\u7b49\u53c2\u6570\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u80fd\u6d89\u53ca\u5230\u914d\u7f6e\u7ba1\u7406\u7684\u521d\u59cb\u5316\\n4. Metric\u76f8\u5173\uff1a\u65e0\u5173\u7d27\u8981\uff0c\u8df3\u8fc7\\n5. NettyServer\u521d\u59cb\u5316\\n6. \u6838\u5fc3\u63a7\u5236\u5668\u521d\u59cb\u5316\uff1aServer\u7aef\u7684\u6838\u5fc3\uff0c\u8fd8\u5305\u62ec\u51e0\u4e2a\u5b9a\u65f6\u4efb\u52a1\\n7. NettyServer\u542f\u52a8\\n\\n\\n\u4ee3\u7801\u5982\u4e0b\uff0c\u5220\u9664\u4e86\u975e\u6838\u5fc3\u4ee3\u7801\\n```java\\npublic static void main(String[] args) throws IOException {\\n    // \u83b7\u53d6port\u7684\u51e0\u79cd\u5f62\u5f0f\uff1a\u4ece\u5bb9\u5668\u4e2d\u83b7\u53d6\uff1b\u4ece\u547d\u4ee4\u884c\u83b7\u53d6\uff1b\u9ed8\u8ba4\u7aef\u53e3, use to logback.xml\\n    int port = PortHelper.getPort(args);\\n    System.setProperty(ConfigurationKeys.SERVER_PORT, Integer.toString(port));\\n\\n    // \u89e3\u6790\u542f\u52a8\u53c2\u6570\uff0c\u5206\u5bb9\u5668\u548c\u975e\u5bb9\u5668\u4e24\u79cd\u60c5\u51b5\\n    ParameterParser parameterParser = new ParameterParser(args);\\n\\n    // Metric\u76f8\u5173\\n    MetricsManager.get().init();\\n\\n    // NettyServer\u521d\u59cb\u5316\\n    NettyRemotingServer nettyRemotingServer = new NettyRemotingServer(workingThreads);\\n\\n    // \u6838\u5fc3\u63a7\u5236\u5668\u521d\u59cb\u5316\\n    DefaultCoordinator coordinator = new DefaultCoordinator(nettyRemotingServer);\\n    coordinator.init();\\n    \\n    // NettyServer\u542f\u52a8\\n    nettyRemotingServer.init();\\n}\\n```\\n\\n\u4e3a\u793e\u4e48\u8bf4`\u6b65\u9aa43`\u4e2d\u80af\u80fd\u6d89\u53ca\u5230\u914d\u7f6e\u7ba1\u7406\u7684\u521d\u59cb\u5316\u5462\uff1f\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\\n```java\\nif (StringUtils.isBlank(storeMode)) {\\n    storeMode = ConfigurationFactory.getInstance().getConfig(ConfigurationKeys.STORE_MODE,\\n        SERVER_DEFAULT_STORE_MODE);\\n}\\n```\\n\u5982\u679c\u5728\u542f\u52a8\u53c2\u6570\u4e2d\u6ca1\u6709\u7279\u522b\u6307\u5b9a`storeMode`\uff0c\u5c31\u4f1a\u901a\u8fc7`ConfigurationFactory`\u76f8\u5173API\u53bb\u83b7\u53d6\u8be5\u914d\u7f6e\uff0c\u5728`ConfigurationFactory.getInstance()`\u8fd9\u884c\u4ee3\u7801\u4e2d\uff0c\u6d89\u53ca\u5230\u4e24\u90e8\u5206\u5185\u5bb9\uff1a`ConfigurationFactory`\u9759\u6001\u4ee3\u7801\u521d\u59cb\u5316\u548c`Configuration`\u521d\u59cb\u5316\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u91cd\u70b9\u5206\u6790\u8fd9\u90e8\u5206\u5185\u5bb9\\n\\n# \u914d\u7f6e\u7ba1\u7406\u521d\u59cb\u5316\\n\\n## ConfigurationFactory\u521d\u59cb\u5316\\n\u6211\u4eec\u77e5\u9053\u5728Seata\u4e2d\u6709\u4e24\u4e2a\u5173\u952e\u914d\u7f6e\u6587\u4ef6\uff1a\u4e00\u4e2a\u662f`registry.conf`\uff0c\u8fd9\u662f\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\uff0c\u5fc5\u987b\u8981\u6709\uff1b\u53e6\u4e00\u4e2a\u662f`file.conf`\uff0c\u53ea\u6709\u5728\u914d\u7f6e\u4e2d\u5fc3\u662f`File`\u7684\u60c5\u51b5\u4e0b\u624d\u9700\u8981\u7528\u5230\u3002`ConfigurationFactory`\u9759\u6001\u4ee3\u7801\u5757\u4e2d\uff0c\u5176\u5b9e\u4e3b\u8981\u5c31\u662f\u52a0\u8f7d`registry.conf`\u6587\u4ef6\uff0c\u5927\u6982\u5982\u4e0b\uff1a\\n\\n1\u3001\u5728\u6ca1\u6709\u624b\u52a8\u914d\u7f6e\u7684\u60c5\u51b5\uff0c\u9ed8\u8ba4\u8bfb\u53d6`registry.conf`\u6587\u4ef6\uff0c\u5c01\u88c5\u6210\u4e00\u4e2a`FileConfiguration`\u5bf9\u8c61\uff0c\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\\n```java\\nConfiguration configuration = new FileConfiguration(seataConfigName,false);\\nFileConfigFactory.load(\\"registry.conf\\", \\"registry\\");\\nFileConfig fileConfig = EnhancedServiceLoader.load(FileConfig.class, \\"CONF\\", argsType, args);\\n```\\n\\n2\u3001\u914d\u7f6e\u589e\u5f3a\uff1a\u7c7b\u4f3c\u4ee3\u7406\u6a21\u5f0f\uff0c\u83b7\u53d6\u914d\u7f6e\u65f6\uff0c\u5728\u4ee3\u7406\u5bf9\u8c61\u91cc\u9762\u505a\u4e00\u4e9b\u5176\u4ed6\u5904\u7406\uff0c\u4e0b\u9762\u8be6\u7ec6\u4ecb\u7ecd\\n```java\\nConfiguration extConfiguration = EnhancedServiceLoader.load(ExtConfigurationProvider.class).provide(configuration);\\n```\\n\\n3\u3001\u5c06\u6b65\u9aa42\u4e2d\u7684\u4ee3\u7406\u5bf9\u8c61\u8d4b\u503c\u7ed9`CURRENT_FILE_INSTANCE`\u5f15\u7528\uff0c\u5728\u5f88\u591a\u5730\u65b9\u90fd\u76f4\u63a5\u7528\u5230\u4e86`CURRENT_FILE_INSTANCE`\u8fd9\u4e2a\u9759\u6001\u5f15\u7528\\n```java\\nCURRENT_FILE_INSTANCE = extConfiguration == null ? configuration : extConfiguration;\\n```\\n\\n\u53ef\u4ee5\u7b80\u5355\u7684\u8ba4\u4e3a\uff1a`CURRENT_FILE_INSTANCE`\u5bf9\u5e94\u7684\u5c31\u662f`registry.conf`\u91cc\u9762\u7684\u5185\u5bb9\u3002\u6211\u8ba4\u4e3a`registry.conf`\u8fd9\u4e2a\u6587\u4ef6\u540d\u53d6\u7684\u4e0d\u592a\u597d\uff0c\u6b67\u4e49\u592a\u5927\uff0c\u53eb\u505a`bootstrap.conf`\u662f\u4e0d\u662f\u66f4\u597d\u4e00\u4e9b\uff1f\\n\\n\\n## Configuration\u521d\u59cb\u5316\\n`Configuration`\u5176\u5b9e\u5c31\u662f\u5bf9\u5e94\u914d\u7f6e\u4e2d\u5fc3\uff0cSeata\u76ee\u524d\u652f\u6301\u7684\u914d\u7f6e\u4e2d\u5fc3\u5f88\u591a\uff0c\u51e0\u4e4e\u4e3b\u6d41\u7684\u914d\u7f6e\u4e2d\u5fc3\u90fd\u652f\u6301\uff0c\u5982\uff1aapollo\u3001consul\u3001etcd\u3001nacos\u3001zk\u3001springCloud\u3001\u672c\u5730\u6587\u4ef6\u3002\u5f53\u4f7f\u7528\u672c\u5730\u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\u4e2d\u5fc3\u7684\u65f6\u5019\uff0c\u6d89\u53ca\u5230`file.conf`\u7684\u52a0\u8f7d\uff0c\u5f53\u7136\u8fd9\u662f\u9ed8\u8ba4\u7684\u540d\u5b57\uff0c\u53ef\u4ee5\u81ea\u5df1\u914d\u7f6e\u3002\u5230\u8fd9\u91cc\uff0c\u5927\u5bb6\u4e5f\u57fa\u672c\u4e0a\u77e5\u9053\u4e86`registry.conf`\u548c`file.conf`\u7684\u5173\u7cfb\u4e86\u3002\\n\\n`Configuration`\u4f5c\u4e3a\u5355\u4f8b\u653e\u5728`ConfigurationFactory`\u4e2d\uff0c\u6240\u4ee5`Configuration`\u7684\u521d\u59cb\u5316\u903b\u8f91\u4e5f\u662f\u5728`ConfigurationFactory`\u4e2d\uff0c\u5927\u6982\u6d41\u7a0b\u5982\u4e0b\uff1a\\n1\u3001\u5148\u4ece`registry.conf`\u6587\u4ef6\u4e2d\u8bfb\u53d6`config.type`\u5c5e\u6027\uff0c\u9ed8\u8ba4\u5c31\u662f`file`\\n```java\\nconfigTypeName = CURRENT_FILE_INSTANCE.getConfig(ConfigurationKeys.FILE_ROOT_CONFIG + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR+ ConfigurationKeys.FILE_ROOT_TYPE);\\n```\\n2\u3001\u57fa\u4e8e`config.type`\u5c5e\u6027\u503c\u52a0\u8f7d\u914d\u7f6e\u4e2d\u5fc3\uff0c\u6bd4\u5982\u9ed8\u8ba4\u662f:`file`\uff0c\u5219\u5148\u4ece`registry.conf`\u6587\u4ef6\u4e2d\u8bfb\u53d6`config.file.name`\u8bfb\u53d6\u672c\u5730\u6587\u4ef6\u914d\u7f6e\u4e2d\u5fc3\u5bf9\u5e94\u7684\u6587\u4ef6\u540d\uff0c\u7136\u540e\u57fa\u4e8e\u8be5\u6587\u4ef6\u540d\u521b\u5efa`FileConfiguration`\u5bf9\u8c61\uff0c\u8fd9\u6837\u5c31\u5c06`file.conf`\u4e2d\u7684\u914d\u7f6e\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u4e86\u3002\u540c\u7406\uff0c\u5982\u679c\u914d\u7f6e\u7684\u662f\u5176\u4ed6\u914d\u7f6e\u4e2d\u5fc3\uff0c\u5219\u4f1a\u901a\u8fc7SPI\u521d\u59cb\u5316\u5176\u4ed6\u914d\u7f6e\u4e2d\u5fc3\u3002\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u8fd9\u9636\u6bb5\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u5fc3\u662f\u672c\u5730\u6587\u4ef6\uff0c\u5219\u4f1a\u4e3a\u5176\u521b\u5efa\u4ee3\u7406\u5bf9\u8c61\uff1b\u5982\u679c\u4e0d\u662f\u672c\u5730\u6587\u4ef6\uff0c\u5219\u901a\u8fc7SPI\u52a0\u8f7d\u5bf9\u5e94\u7684\u914d\u7f6e\u4e2d\u5fc3\\n```java\\nif (ConfigType.File == configType) {\\n    String pathDataId = String.join(\\"config.file.name\\");\\n    String name = CURRENT_FILE_INSTANCE.getConfig(pathDataId);\\n    configuration = new FileConfiguration(name);\\n    try {\\n        // \u914d\u7f6e\u589e\u5f3a \u4ee3\u7406\\n        extConfiguration = EnhancedServiceLoader.load(ExtConfigurationProvider.class).provide(configuration);\\n    } catch (Exception e) {\\n        LOGGER.error(\\"failed to load extConfiguration:{}\\", e.getMessage(), e);\\n    }\\n} else {\\n    configuration = EnhancedServiceLoader\\n            .load(ConfigurationProvider.class, Objects.requireNonNull(configType).name()).provide();\\n}\\n```\\n\\n3\u3001\u57fa\u4e8e\u6b65\u9aa42\u521b\u5efa\u7684`Configuration`\u5bf9\u8c61\uff0c\u4e3a\u5176\u518d\u521b\u5efa\u4e00\u5c42\u4ee3\u7406\uff0c\u8fd9\u4e2a\u4ee3\u7406\u5bf9\u8c61\u6709\u4e24\u4e2a\u4f5c\u7528\uff1a\u4e00\u4e2a\u662f\u672c\u5730\u7f13\u5b58\uff0c\u4e0d\u9700\u8981\u6bcf\u6b21\u83b7\u53d6\u914d\u7f6e\u7684\u65f6\u5019\u90fd\u4ece\u914d\u7f6e\u4e2d\u83b7\u53d6\uff1b\u53e6\u4e00\u4e2a\u662f\u76d1\u542c\uff0c\u5f53\u914d\u7f6e\u53d1\u751f\u53d8\u66f4\u4f1a\u66f4\u65b0\u5b83\u7ef4\u62a4\u7684\u7f13\u5b58\u3002\u5982\u4e0b\uff1a\\n```java\\nif (null != extConfiguration) {\\n    configurationCache = ConfigurationCache.getInstance().proxy(extConfiguration);\\n} else {\\n    configurationCache = ConfigurationCache.getInstance().proxy(configuration);\\n}\\n```\\n\\n\u5230\u8fd9\u91cc\uff0c\u914d\u7f6e\u7ba1\u7406\u7684\u521d\u59cb\u5316\u5c31\u5b8c\u6210\u4e86\u3002**Seata\u901a\u8fc7\u5148\u5148\u52a0\u8f7d`registry.conf`\u6587\u4ef6\u83b7\u53d6\u5bf9\u5e94\u7684\u914d\u7f6e\u4e2d\u5fc3\u4fe1\u606f\u3001\u6ce8\u518c\u4e2d\u5fc3\uff0c\u7136\u540e\u518d\u6839\u636e\u83b7\u53d6\u5230\u7684\u7684\u5bf9\u5e94\u4fe1\u606f\u521d\u59cb\u5316\u914d\u7f6e\u4e2d\u5fc3\u3002\u5728\u4f7f\u7528\u672c\u5730\u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\u4e2d\u5fc3\u7684\u60c5\u51b5\u4e0b\uff0c\u9ed8\u8ba4\u662f\u52a0\u8f7d`file.conf`\u6587\u4ef6\u3002\u7136\u540e\u518d\u4e3a\u5bf9\u5e94\u7684\u914d\u7f6e\u4e2d\u5fc3\u521b\u5efa\u5bf9\u5e94\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u4f7f\u5176\u652f\u6301\u672c\u5730\u7f13\u5b58\u548c\u914d\u7f6e\u76d1\u542c**\\n\\n\u6574\u7406\u6d41\u7a0b\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\uff0c\u5728\u8fd9\u91cc\u6211\u8981\u629b\u51fa\u51e0\u4e2a\u95ee\u9898\uff1a\\n1. \u4ec0\u4e48\u662f\u914d\u7f6e\u589e\u5f3a\uff1fSeata\u4e2d\u7684\u914d\u7f6e\u589e\u5f3a\u662f\u600e\u4e48\u505a\u7684\uff1f\\n2. \u5982\u679c\u4f7f\u7528\u672c\u5730\u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\u4e2d\u5fc3\uff0c\u5c31\u5fc5\u987b\u8981\u5c06\u914d\u7f6e\u5b9a\u4e49\u5728`file.conf`\u6587\u4ef6\u4e2d\u3002\u5982\u679c\u662fSpring\u5e94\u7528\uff0c\u80fd\u4e0d\u80fd\u76f4\u63a5\u5c06\u5bf9\u5e94\u7684\u914d\u7f6e\u9879\u5b9a\u4e49\u5728`application.yaml`\u4e2d\uff1f\\n3. \u5728\u4e0a\u9762\u8bf4\u7684\u6b65\u9aa42\u4e2d\uff0c\u4e3a\u4ec0\u4e48\u5728\u4f7f\u7528\u672c\u5730\u6587\u4ef6\u914d\u7f6e\u4e2d\u5fc3\u7684\u60c5\u51b5\u4e0b\uff0c\u8981\u5148\u4e3a`Configuration`\u521b\u5efa\u5bf9\u5e94\u914d\u7f6e\u589e\u5f3a\u4ee3\u7406\u5bf9\u8c61\uff0c\u800c\u5176\u4ed6\u914d\u7f6e\u4e2d\u5fc3\u4e0d\u7528\uff1f\\n\\n\u8fd93\u4e2a\u95ee\u9898\u90fd\u662f\u7d27\u5bc6\u8054\u7cfb\u7684\uff0c\u90fd\u548cSeata\u7684\u914d\u7f6e\u589e\u52a0\u76f8\u5173\u3002\u4e0b\u9762\u8be6\u7ec6\u4ecb\u7ecd\\n\\n# \u914d\u7f6e\u7ba1\u7406\u589e\u5f3a\\n\u914d\u7f6e\u589e\u5f3a\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4e3a\u5176\u521b\u5efa\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u5728\u6267\u884c\u76ee\u6807\u72ec\u5bf9\u8c61\u7684\u76ee\u6807\u65b9\u6cd5\u65f6\u5019\uff0c\u6267\u884c\u4ee3\u7406\u903b\u8f91\uff0c\u4ece\u914d\u7f6e\u4e2d\u5fc3\u7684\u89d2\u5ea6\u6765\u8bb2\uff0c\u5c31\u662f\u5728\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\u83b7\u53d6\u5bf9\u5e94\u914d\u7f6e\u7684\u65f6\u5019\uff0c\u6267\u884c\u4ee3\u7406\u903b\u8f91\u3002\\n\\n1. \u901a\u8fc7`ConfigurationFactory.CURRENT_FILE_INSTANCE.getgetConfig(key)`\u83b7\u53d6\u914d\u7f6e\\n2. \u52a0\u8f7d`registry.conf`\u6587\u4ef6\u521b\u5efaFileConfiguration\u5bf9\u8c61`configuration`\\n3. \u57fa\u4e8e`SpringBootConfigurationProvider`\u4e3a`configuration`\u521b\u5efa\u4ee3\u7406\u5bf9\u8c61`configurationProxy`\\n4. \u4ece`configurationProxy`\u4e2d\u83b7\u53d6\u914d\u7f6e\u4e2d\u5fc3\u7684\u8fde\u63a5\u4fe1\u606f`file zk nacos \u7b49`\\n5. \u57fa\u4e8e\u8fde\u63a5\u4fe1\u606f\u521b\u5efa\u914d\u4e2d\u5fc3Configuration\u5bf9\u8c61`configuration2`\\n6. \u57fa\u4e8e`SpringBootConfigurationProvider`\u4e3a`configuration2`\u521b\u5efa\u4ee3\u7406\u5bf9\u8c61`configurationProxy2`\\n7. \u6267\u884c`configurationProxy2`\u7684\u4ee3\u7406\u903b\u8f91\\n8. \u57fa\u4e8ekey\u627e\u5230\u5bf9\u5e94\u7684SpringBean\\n9. \u6267\u884cSpringBean\u7684getXxx\u65b9\u6cd5\\n\\n![](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0cb93fec40df40ba9e8ab9db06cc9b93~tplv-k3u1fbpfcp-watermark.image)\\n\\n## \u914d\u7f6e\u589e\u5f3a\u5b9e\u73b0\\n\u4e0a\u9762\u4e5f\u7b80\u5355\u63d0\u5230\u8fc7\u914d\u7f6e\u589e\u5f3a\uff0c\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a\\n```java\\nEnhancedServiceLoader.load(ExtConfigurationProvider.class).provide(configuration);\\n```\\n1. \u9996\u5148\u901a\u8fc7SPI\u673a\u83b7\u53d6\u4e00\u4e2a`ExtConfigurationProvider`\u5bf9\u8c61\uff0c\u5728Seata\u4e2d\u9ed8\u8ba4\u53ea\u6709\u4e00\u4e2a\u5b9e\u73b0\uff1a`SpringBootConfigurationProvider`\\n2. \u901a\u8fc7`ExtConfigurationProvider#provider`\u65b9\u6cd5\u4e3a`Configuration`\u521b\u5efa\u4ee3\u7406\u5bf9\u8c61\\n\\n\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b:\\n```java\\npublic Configuration provide(Configuration originalConfiguration) {\\n    return (Configuration) Enhancer.create(originalConfiguration.getClass(), new MethodInterceptor() {\\n        @Override\\n        public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy)\\n            throws Throwable {\\n            if (method.getName().startsWith(\\"get\\") && args.length > 0) {\\n                Object result = null;\\n                String rawDataId = (String) args[0];\\n                if (args.length == 1) {\\n                    result = get(convertDataId(rawDataId));\\n                } else if (args.length == 2) {\\n                    result = get(convertDataId(rawDataId), args[1]);\\n                } else if (args.length == 3) {\\n                    result = get(convertDataId(rawDataId), args[1], (Long) args[2]);\\n                }\\n                if (result != null) {\\n                    //If the return type is String,need to convert the object to string\\n                    if (method.getReturnType().equals(String.class)) {\\n                        return String.valueOf(result);\\n                    }\\n                    return result;\\n                }\\n            }\\n\\n            return method.invoke(originalConfiguration, args);\\n        }\\n    });\\n}\\n\\nprivate Object get(String dataId) throws IllegalAccessException, InstantiationException {\\n    String propertyPrefix = getPropertyPrefix(dataId);\\n    String propertySuffix = getPropertySuffix(dataId);\\n    ApplicationContext applicationContext = (ApplicationContext) ObjectHolder.INSTANCE.getObject(OBJECT_KEY_SPRING_APPLICATION_CONTEXT);\\n    Class<?> propertyClass = PROPERTY_BEAN_MAP.get(propertyPrefix);\\n    Object valueObject = null;\\n    if (propertyClass != null) {\\n        try {\\n            Object propertyBean = applicationContext.getBean(propertyClass);\\n            valueObject = getFieldValue(propertyBean, propertySuffix, dataId);\\n        } catch (NoSuchBeanDefinitionException ignore) {\\n\\n        }\\n    } else {\\n        throw new ShouldNeverHappenException(\\"PropertyClass for prefix: [\\" + propertyPrefix + \\"] should not be null.\\");\\n    }\\n    if (valueObject == null) {\\n        valueObject = getFieldValue(propertyClass.newInstance(), propertySuffix, dataId);\\n    }\\n\\n    return valueObject;\\n}\\n```\\n1\u3001\u5982\u679c\u65b9\u6cd5\u662f\u4ee5`get`\u5f00\u5934\uff0c\u5e76\u4e14\u53c2\u6570\u4e2a\u6570\u4e3a1/2/3\uff0c\u5219\u6267\u884c\u5176\u4ed6\u7684\u83b7\u53d6\u914d\u7f6e\u7684\u903b\u8f91\uff0c\u5426\u5219\u6267\u884c\u539f\u751f`Configuration`\u5bf9\u8c61\u7684\u903b\u8f91\\n2\u3001\u6211\u4eec\u6ca1\u5fc5\u8981\u7ea0\u7ed3\u4e3a\u5565\u662f\u8fd9\u6837\u7684\u89c4\u5219\uff0c\u8fd9\u5c31\u662fSeata\u7684\u4e00\u4e2a\u7ea6\u5b9a\\n3\u3001`\u5176\u4ed6\u83b7\u53d6\u914d\u7f6e\u7684\u903b\u8f91`\uff0c\u5c31\u662f\u6307\u901a\u8fc7Spring\u7684\u65b9\u5f0f\u83b7\u53d6\u5bf9\u5e94\u914d\u7f6e\u503c\\n\\n\u5230\u8fd9\u91cc\u5df2\u7ecf\u6e05\u695a\u4e86\u914d\u7f6e\u589e\u5f3a\u7684\u539f\u7406\uff0c\u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u731c\u6d4b\u5f97\u51fa\u552f\u4e00\u7684`ExtConfigurationProvider`\u5b9e\u73b0`SpringBootConfigurationProvider`\uff0c\u80af\u5b9a\u662f\u548cSpring\u76f8\u5173\\n\\n\\n## \u914d\u7f6e\u589e\u5f3a\u4e0eSpring\\n\u5728\u4ecb\u7ecd\u8fd9\u5757\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bSeata\u7684\u4f7f\u7528\u65b9\u5f0f\uff1a\\n1. \u975eStarter\u65b9\u5f0f\uff1a\u5f15\u5165\u4f9d\u8d56 `seata-all`, \u7136\u540e\u624b\u52a8\u914d\u7f6e\u51e0\u4e2a\u6838\u5fc3\u7684Bean\\n2. Starter\u65b9\u5f0f\uff1a \u5f15\u5165\u4f9d\u8d56`seata-spring-boot-starter`\uff0c\u5168\u81ea\u52a8\u51c6\u914d\uff0c\u4e0d\u9700\u8981\u81ea\u52a8\u6ce8\u5165\u6838\u5fc3Bean\\n\\n`SpringBootConfigurationProvider`\u5c31\u5728`seata-spring-boot-starter`\u6a21\u5757\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6211\u4eec\u901a\u8fc7\u5f15\u5165`seata-all`\u7684\u65b9\u5f0f\u6765\u4f7f\u7528Seata\u65f6\uff0c\u914d\u7f6e\u589e\u5f3a\u5176\u5b9e\u6ca1\u6709\u4ec0\u4e48\u4f5c\u7528\uff0c\u56e0\u4e3a\u6b64\u65f6\u6839\u672c\u627e\u4e0d\u5230`ExtConfigurationProvider`\u5b9e\u73b0\u7c7b\uff0c\u81ea\u7136\u5c31\u4e0d\u4f1a\u589e\u5f3a\u3002\\n\\n\u90a3`seata-spring-boot-starter`\u662f\u5982\u4f55\u5c06\u8fd9\u4e9b\u4e1c\u897f\u4e32\u8054\u8d77\u6765\u7684\uff1f\\n\\n1\u3001\u9996\u5148\uff0c\u5728`seata-spring-boot-starter`\u6a21\u5757\u7684`resources/META-INF/services`\u76ee\u5f55\u4e0b\uff0c\u5b58\u5728\u4e00\u4e2a`spring.factories`\u6587\u4ef6\uff0c\u5185\u5bb9\u5206\u5982\u4e0b\\n```\\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\\\\nio.seata.spring.boot.autoconfigure.SeataAutoConfiguration,\\\\\\n\\n# \u6682\u65f6\u4e0d\u7ba1\\nio.seata.spring.boot.autoconfigure.HttpAutoConfiguration\\n```\\n\\n2\u3001\u5728`SeataAutoConfiguration`\u6587\u4ef6\u4e2d\uff0c\u4f1a\u521b\u5efa\u4ee5\u4e0bBean\uff1a GlobalTransactionScanner \u3001SeataDataSourceBeanPostProcessor\u3001SeataAutoDataSourceProxyCreator\u3001SpringApplicationContextProvider\u3002\u524d3\u4e2a\u548c\u6211\u4eec\u672c\u6587\u8981\u8bb2\u7684\u5185\u5bb9\u4e0d\u76f8\u5173\uff0c\u4e3b\u8981\u5173\u6ce8`SpringApplicationContextProvider`\uff0c\u6838\u5fc3\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u5c06`ApplicationContext`\u4fdd\u5b58\u4e0b\u6765\uff1a\\n```java\\npublic class SpringApplicationContextProvider implements ApplicationContextAware {\\n    @Override\\n    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\\n        ObjectHolder.INSTANCE.setObject(OBJECT_KEY_SPRING_APPLICATION_CONTEXT, applicationContext);\\n    }\\n}\\n```\\n3\u3001\u7136\u540e\uff0c\u5728`SeataAutoConfiguration`\u6587\u4ef6\u4e2d\uff0c\u8fd8\u4f1a\u5c06\u4e00\u4e9b`xxxProperties.Class`\u548c\u5bf9\u5e94\u7684Key\u524d\u7f00\u7f13\u5b58\u5230`PROPERTY_BEAN_MAP`\u4e2d\u3002``xxxProperties`\u5c31\u7b80\u5355\u7406\u89e3\u6210`application.yaml`\u4e2d\u7684\u5404\u79cd\u914d\u7f6e\u9879\uff1a\\n```java\\nstatic {\\n    PROPERTY_BEAN_MAP.put(SEATA_PREFIX, SeataProperties.class);\\n    PROPERTY_BEAN_MAP.put(CLIENT_RM_PREFIX, RmProperties.class);\\n    PROPERTY_BEAN_MAP.put(SHUTDOWN_PREFIX, ShutdownProperties.class);\\n    ...\u7701\u7565...\\n}\\n```\\n\\n\u81f3\u6b64\uff0c\u6574\u4e2a\u6d41\u7a0b\u5176\u5b9e\u5df2\u7ecf\u5f88\u6e05\u6670\uff0c\u5728\u6709`SpringBootConfigurationProvider`\u914d\u7f6e\u589e\u5f3a\u7684\u65f6\u5019\uff0c\u6211\u4eec\u83b7\u53d6\u4e00\u4e2a\u914d\u7f6e\u9879\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a\\n1. \u5148\u6839\u636e`p\u914d\u7f6e\u9879Key`\u83b7\u53d6\u5bf9\u5e94\u7684`xxxProperties`\u5bf9\u8c61\\n2. \u901a\u8fc7`ObjectHolder`\u4e2d\u7684`ApplicationContext`\u83b7\u53d6\u5bf9\u5e94`xxxProperties`\u7684SpringBean\\n3. \u57fa\u4e8e`xxxProperties`\u7684SpringBean\u83b7\u53d6\u5bf9\u5e94\u914d\u7f6e\u7684\u503c\\n4. \u81f3\u6b64\uff0c\u901a\u8fc7\u914d\u7f6e\u589e\u5f3a\uff0c\u6211\u4eec\u6210\u529f\u7684\u83b7\u53d6\u5230`application.yaml`\u4e2d\u7684\u503c"},{"id":"/seata-golang-communication-mode","metadata":{"permalink":"/zh-cn/blog/seata-golang-communication-mode","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-golang-communication-mode.md","title":"seata-golang \u901a\u4fe1\u6a21\u578b\u8be6\u89e3","description":"\u672c\u6587\u8be6\u7ec6\u8bb2\u8ff0 seata-golang \u5e95\u5c42 rpc \u901a\u4fe1\u7684\u5b9e\u73b0\u539f\u7406","date":"2021-01-04T00:00:00.000Z","formattedDate":"2021\u5e741\u67084\u65e5","tags":[],"readingTime":18.72,"hasTruncateMarker":false,"authors":[{"name":"\u5218\u6653\u654f"}],"frontMatter":{"title":"seata-golang \u901a\u4fe1\u6a21\u578b\u8be6\u89e3","keywords":["seata","seata-golang","seata-go","getty","\u5206\u5e03\u5f0f\u4e8b\u52a1"],"description":"\u672c\u6587\u8be6\u7ec6\u8bb2\u8ff0 seata-golang \u5e95\u5c42 rpc \u901a\u4fe1\u7684\u5b9e\u73b0\u539f\u7406","author":"\u5218\u6653\u654f","date":"2021/01/04"},"prevItem":{"title":"Seata\u914d\u7f6e\u7ba1\u7406\u539f\u7406\u89e3\u6790","permalink":"/zh-cn/blog/seata-config-manager"},"nextItem":{"title":"Seata\u6570\u636e\u6e90\u4ee3\u7406\u89e3\u6790","permalink":"/zh-cn/blog/seata-datasource-proxy"}},"content":"\u4f5c\u8005 | \u5218\u6653\u654f \u4e8e\u96e8\\n\\n## \u4e00\u3001\u7b80\u4ecb\\n\\n\\nJava \u7684\u4e16\u754c\u91cc\uff0c\u5927\u5bb6\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u4e2a\u9ad8\u6027\u80fd\u7f51\u7edc\u901a\u4fe1\u6846\u67b6 netty\uff0c\u5f88\u591a RPC \u6846\u67b6\u90fd\u662f\u57fa\u4e8e netty \u6765\u5b9e\u73b0\u7684\u3002\u5728 golang \u7684\u4e16\u754c\u91cc\uff0c[getty](https://github.com/AlexStocks/getty) \u4e5f\u662f\u4e00\u4e2a\u7c7b\u4f3c netty \u7684\u9ad8\u6027\u80fd\u7f51\u7edc\u901a\u4fe1\u5e93\u3002getty \u6700\u521d\u7531 dubbogo \u9879\u76ee\u8d1f\u8d23\u4eba\u4e8e\u96e8\u5f00\u53d1\uff0c\u4f5c\u4e3a\u5e95\u5c42\u901a\u4fe1\u5e93\u5728 [dubbo-go](https://github.com/apache/dubbo-go) \u4e2d\u4f7f\u7528\u3002\u968f\u7740 dubbo-go \u6350\u732e\u7ed9 apache \u57fa\u91d1\u4f1a\uff0c\u5728\u793e\u533a\u5c0f\u4f19\u4f34\u7684\u5171\u540c\u52aa\u529b\u4e0b\uff0cgetty \u4e5f\u6700\u7ec8\u8fdb\u5165\u5230 apache \u8fd9\u4e2a\u5927\u5bb6\u5ead\uff0c\u5e76\u6539\u540d [dubbo-getty](https://github.com/apache/dubbo-getty) \u3002\\n\\n\\n18 \u5e74\u7684\u65f6\u5019\uff0c\u6211\u5728\u516c\u53f8\u91cc\u5b9e\u8df5\u5fae\u670d\u52a1\uff0c\u5f53\u65f6\u9047\u5230\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u3002\u540c\u5e74\uff0c\u963f\u91cc\u5728\u793e\u533a\u5f00\u6e90\u4ed6\u4eec\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u4e5f\u5f88\u5feb\u5173\u6ce8\u5230\u8fd9\u4e2a\u9879\u76ee\uff0c\u8d77\u521d\u8fd8\u53eb fescar\uff0c\u540e\u6765\u66f4\u540d seata\u3002\u7531\u4e8e\u6211\u5bf9\u5f00\u6e90\u6280\u672f\u5f88\u611f\u5174\u8da3\uff0c\u52a0\u4e86\u5f88\u591a\u793e\u533a\u7fa4\uff0c\u5f53\u65f6\u4e5f\u5f88\u5173\u6ce8 dubbo-go \u8fd9\u4e2a\u9879\u76ee\uff0c\u5728\u91cc\u9762\u9ed8\u9ed8\u6f5c\u6c34\u3002\u968f\u7740\u5bf9 seata \u7684\u4e86\u89e3\uff0c\u9010\u6e10\u840c\u751f\u4e86\u505a\u4e00\u4e2a go \u7248\u672c\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u6846\u67b6\u7684\u60f3\u6cd5\u3002\\n\\n\\n\u8981\u505a\u4e00\u4e2a golang \u7248\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u6846\u67b6\uff0c\u9996\u8981\u7684\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5b9e\u73b0 RPC \u901a\u4fe1\u3002dubbo-go \u5c31\u662f\u5f88\u597d\u7684\u4e00\u4e2a\u4f8b\u5b50\u6446\u5728\u773c\u524d\uff0c\u9042\u5f00\u59cb\u7814\u7a76 dubbo-go \u7684\u5e95\u5c42 getty\u3002\\n\\n\\n## \u4e8c\u3001\u5982\u4f55\u57fa\u4e8e getty \u5b9e\u73b0 RPC \u901a\u4fe1\\n\\n\\ngetty \u6846\u67b6\u7684\u6574\u4f53\u6a21\u578b\u56fe\u5982\u4e0b\uff1a\\n\\n\\n![image.png]( https://img.alicdn.com/imgextra/i1/O1CN011TIcL01jY4JaweOfV_!!6000000004559-2-tps-954-853.png)\\n\\n\\n\u4e0b\u9762\u7ed3\u5408\u76f8\u5173\u4ee3\u7801\uff0c\u8be6\u8ff0 seata-golang \u7684 RPC \u901a\u4fe1\u8fc7\u7a0b\u3002\\n\\n\\n### 1. \u5efa\u7acb\u8fde\u63a5\\n\\n\\n\u5b9e\u73b0 RPC \u901a\u4fe1\uff0c\u9996\u5148\u8981\u5efa\u7acb\u7f51\u7edc\u8fde\u63a5\u5427\uff0c\u6211\u4eec\u4ece [client.go](https://github.com/apache/dubbo-getty/blob/master/client.go) \u5f00\u59cb\u770b\u8d77\u3002\\n\\n\\n```go\\nfunc (c *client) connect() {\\n\\tvar (\\n\\t\\terr error\\n\\t\\tss  Session\\n\\t)\\n\\n\\tfor {\\n        // \u5efa\u7acb\u4e00\u4e2a session \u8fde\u63a5\\n\\t\\tss = c.dial()\\n\\t\\tif ss == nil {\\n\\t\\t\\t// client has been closed\\n\\t\\t\\tbreak\\n\\t\\t}\\n\\t\\terr = c.newSession(ss)\\n\\t\\tif err == nil {\\n            // \u6536\u53d1\u62a5\u6587\\n\\t\\t\\tss.(*session).run()\\n\\t\\t\\t// \u6b64\u5904\u7701\u7565\u90e8\u5206\u4ee3\u7801\\n      \\n\\t\\t\\tbreak\\n\\t\\t}\\n\\t\\t// don\'t distinguish between tcp connection and websocket connection. Because\\n\\t\\t// gorilla/websocket/conn.go:(Conn)Close also invoke net.Conn.Close()\\n\\t\\tss.Conn().Close()\\n\\t}\\n}\\n```\\n\\n\\n`connect()` \u65b9\u6cd5\u901a\u8fc7 `dial()` \u65b9\u6cd5\u5f97\u5230\u4e86\u4e00\u4e2a session \u8fde\u63a5\uff0c\u8fdb\u5165 dial() \u65b9\u6cd5\uff1a\\n\\n\\n```\\nfunc (c *client) dial() Session {\\n\\tswitch c.endPointType {\\n\\tcase TCP_CLIENT:\\n\\t\\treturn c.dialTCP()\\n\\tcase UDP_CLIENT:\\n\\t\\treturn c.dialUDP()\\n\\tcase WS_CLIENT:\\n\\t\\treturn c.dialWS()\\n\\tcase WSS_CLIENT:\\n\\t\\treturn c.dialWSS()\\n\\t}\\n\\n\\treturn nil\\n}\\n```\\n\\n\\n\u6211\u4eec\u5173\u6ce8\u7684\u662f TCP \u8fde\u63a5\uff0c\u6240\u4ee5\u7ee7\u7eed\u8fdb\u5165 `c.dialTCP()` \u65b9\u6cd5\uff1a\\n\\n\\n```go\\nfunc (c *client) dialTCP() Session {\\n\\tvar (\\n\\t\\terr  error\\n\\t\\tconn net.Conn\\n\\t)\\n\\n\\tfor {\\n\\t\\tif c.IsClosed() {\\n\\t\\t\\treturn nil\\n\\t\\t}\\n\\t\\tif c.sslEnabled {\\n\\t\\t\\tif sslConfig, err := c.tlsConfigBuilder.BuildTlsConfig(); err == nil && sslConfig != nil {\\n\\t\\t\\t\\td := &net.Dialer{Timeout: connectTimeout}\\n\\t\\t\\t\\t// \u5efa\u7acb\u52a0\u5bc6\u8fde\u63a5\\n\\t\\t\\t\\tconn, err = tls.DialWithDialer(d, \\"tcp\\", c.addr, sslConfig)\\n\\t\\t\\t}\\n\\t\\t} else {\\n            // \u5efa\u7acb tcp \u8fde\u63a5\\n\\t\\t\\tconn, err = net.DialTimeout(\\"tcp\\", c.addr, connectTimeout)\\n\\t\\t}\\n\\t\\tif err == nil && gxnet.IsSameAddr(conn.RemoteAddr(), conn.LocalAddr()) {\\n\\t\\t\\tconn.Close()\\n\\t\\t\\terr = errSelfConnect\\n\\t\\t}\\n\\t\\tif err == nil {\\n            // \u8fd4\u56de\u4e00\u4e2a TCPSession\\n\\t\\t\\treturn newTCPSession(conn, c)\\n\\t\\t}\\n\\n\\t\\tlog.Infof(\\"net.DialTimeout(addr:%s, timeout:%v) = error:%+v\\", c.addr, connectTimeout, perrors.WithStack(err))\\n\\t\\t<-wheel.After(connectInterval)\\n\\t}\\n}\\n```\\n\\n\\n\u81f3\u6b64\uff0c\u6211\u4eec\u77e5\u9053\u4e86 getty \u5982\u4f55\u5efa\u7acb TCP \u8fde\u63a5\uff0c\u5e76\u8fd4\u56de TCPSession\u3002\\n\\n\\n### 2. \u6536\u53d1\u62a5\u6587\\n\\n\\n\u90a3\u5b83\u662f\u600e\u4e48\u6536\u53d1\u62a5\u6587\u7684\u5462\uff0c\u6211\u4eec\u56de\u5230 connection \u65b9\u6cd5\u63a5\u7740\u5f80\u4e0b\u770b\uff0c\u6709\u8fd9\u6837\u4e00\u884c `ss.(*session).run()`\uff0c\u5728\u8fd9\u884c\u4ee3\u7801\u4e4b\u540e\u4ee3\u7801\u90fd\u662f\u5f88\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u731c\u6d4b\u8fd9\u884c\u4ee3\u7801\u8fd0\u884c\u7684\u903b\u8f91\u91cc\u9762\u4e00\u5b9a\u5305\u542b\u6536\u53d1\u62a5\u6587\u7684\u903b\u8f91\uff0c\u63a5\u7740\u8fdb\u5165 `run()` \u65b9\u6cd5\uff1a\\n\\n\\n```go\\nfunc (s *session) run() {\\n\\t// \u7701\u7565\u90e8\u5206\u4ee3\u7801\\n  \\n\\tgo s.handleLoop()\\n\\tgo s.handlePackage()\\n}\\n```\\n\\n\\n\u8fd9\u91cc\u8d77\u4e86\u4e24\u4e2a goroutine\uff0c`handleLoop` \u548c `handlePackage`\uff0c\u770b\u5b57\u9762\u610f\u601d\u7b26\u5408\u6211\u4eec\u7684\u731c\u60f3\uff0c\u8fdb\u5165 `handleLoop()` \u65b9\u6cd5\uff1a\\n\\n\\n```go\\nfunc (s *session) handleLoop() {\\n    // \u7701\u7565\u90e8\u5206\u4ee3\u7801\\n  \\n\\tfor {\\n\\t\\t// A select blocks until one of its cases is ready to run.\\n\\t\\t// It choose one at random if multiple are ready. Otherwise it choose default branch if none is ready.\\n\\t\\tselect {\\n\\t\\t// \u7701\u7565\u90e8\u5206\u4ee3\u7801\\n      \\n\\t\\tcase outPkg, ok = <-s.wQ:\\n\\t\\t\\t// \u7701\u7565\u90e8\u5206\u4ee3\u7801\\n\\n\\t\\t\\tiovec = iovec[:0]\\n\\t\\t\\tfor idx := 0; idx < maxIovecNum; idx++ {\\n        // \u901a\u8fc7 s.writer \u5c06 interface{} \u7c7b\u578b\u7684 outPkg \u7f16\u7801\u6210\u4e8c\u8fdb\u5236\u7684\u6bd4\u7279\\n\\t\\t\\t\\tpkgBytes, err = s.writer.Write(s, outPkg)\\n\\t\\t\\t\\t// \u7701\u7565\u90e8\u5206\u4ee3\u7801\\n        \\n\\t\\t\\t\\tiovec = append(iovec, pkgBytes)\\n\\n                //\u7701\u7565\u90e8\u5206\u4ee3\u7801\\n\\t\\t\\t}\\n            // \u5c06\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u6bd4\u7279\u53d1\u9001\u51fa\u53bb\\n\\t\\t\\terr = s.WriteBytesArray(iovec[:]...)\\n\\t\\t\\tif err != nil {\\n\\t\\t\\t\\tlog.Errorf(\\"%s, [session.handleLoop]s.WriteBytesArray(iovec len:%d) = error:%+v\\",\\n\\t\\t\\t\\t\\ts.sessionToken(), len(iovec), perrors.WithStack(err))\\n\\t\\t\\t\\ts.stop()\\n\\t\\t\\t\\t// break LOOP\\n\\t\\t\\t\\tflag = false\\n\\t\\t\\t}\\n\\n\\t\\tcase <-wheel.After(s.period):\\n\\t\\t\\tif flag {\\n\\t\\t\\t\\tif wsFlag {\\n\\t\\t\\t\\t\\terr := wsConn.writePing()\\n\\t\\t\\t\\t\\tif err != nil {\\n\\t\\t\\t\\t\\t\\tlog.Warnf(\\"wsConn.writePing() = error:%+v\\", perrors.WithStack(err))\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n                // \u5b9a\u65f6\u6267\u884c\u7684\u903b\u8f91\uff0c\u5fc3\u8df3\u7b49\\n\\t\\t\\t\\ts.listener.OnCron(s)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n```\\n\\n\\n\u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c`handleLoop()` \u65b9\u6cd5\u5904\u7406\u7684\u662f\u53d1\u9001\u62a5\u6587\u7684\u903b\u8f91\uff0cRPC \u9700\u8981\u53d1\u9001\u7684\u6d88\u606f\u9996\u5148\u7531 `s.writer` \u7f16\u7801\u6210\u4e8c\u8fdb\u5236\u6bd4\u7279\uff0c\u7136\u540e\u901a\u8fc7\u5efa\u7acb\u7684 TCP \u8fde\u63a5\u53d1\u9001\u51fa\u53bb\u3002\u8fd9\u4e2a `s.writer` \u5bf9\u5e94\u7684 Writer \u63a5\u53e3\u662f RPC \u6846\u67b6\u5fc5\u987b\u8981\u5b9e\u73b0\u7684\u4e00\u4e2a\u63a5\u53e3\u3002\\n\\n\\n\u7ee7\u7eed\u770b `handlePackage()` \u65b9\u6cd5\uff1a\\n\\n\\n```go\\nfunc (s *session) handlePackage() {\\n    // \u7701\u7565\u90e8\u5206\u4ee3\u7801\\n\\n\\tif _, ok := s.Connection.(*gettyTCPConn); ok {\\n\\t\\tif s.reader == nil {\\n\\t\\t\\terrStr := fmt.Sprintf(\\"session{name:%s, conn:%#v, reader:%#v}\\", s.name, s.Connection, s.reader)\\n\\t\\t\\tlog.Error(errStr)\\n\\t\\t\\tpanic(errStr)\\n\\t\\t}\\n\\n\\t\\terr = s.handleTCPPackage()\\n\\t} else if _, ok := s.Connection.(*gettyWSConn); ok {\\n\\t\\terr = s.handleWSPackage()\\n\\t} else if _, ok := s.Connection.(*gettyUDPConn); ok {\\n\\t\\terr = s.handleUDPPackage()\\n\\t} else {\\n\\t\\tpanic(fmt.Sprintf(\\"unknown type session{%#v}\\", s))\\n\\t}\\n}\\n```\\n\\n\\n\u8fdb\u5165 `handleTCPPackage()` \u65b9\u6cd5\uff1a\\n\\n\\n```go\\nfunc (s *session) handleTCPPackage() error {\\n    // \u7701\u7565\u90e8\u5206\u4ee3\u7801\\n\\n\\tconn = s.Connection.(*gettyTCPConn)\\n\\tfor {\\n\\t\\t// \u7701\u7565\u90e8\u5206\u4ee3\u7801\\n\\n\\t\\tbufLen = 0\\n\\t\\tfor {\\n\\t\\t\\t// for clause for the network timeout condition check\\n\\t\\t\\t// s.conn.SetReadTimeout(time.Now().Add(s.rTimeout))\\n            // \u4ece TCP \u8fde\u63a5\u4e2d\u6536\u5230\u62a5\u6587\\n\\t\\t\\tbufLen, err = conn.recv(buf)\\n\\t\\t\\t// \u7701\u7565\u90e8\u5206\u4ee3\u7801\\n      \\n\\t\\t\\tbreak\\n\\t\\t}\\n\\t\\t// \u7701\u7565\u90e8\u5206\u4ee3\u7801\\n    \\n        // \u5c06\u6536\u5230\u7684\u62a5\u6587\u4e8c\u8fdb\u5236\u6bd4\u7279\u5199\u5165 pkgBuf\\n\\t\\tpktBuf.Write(buf[:bufLen])\\n\\t\\tfor {\\n\\t\\t\\tif pktBuf.Len() <= 0 {\\n\\t\\t\\t\\tbreak\\n\\t\\t\\t}\\n            // \u901a\u8fc7 s.reader \u5c06\u6536\u5230\u7684\u62a5\u6587\u89e3\u7801\u6210 RPC \u6d88\u606f\\n\\t\\t\\tpkg, pkgLen, err = s.reader.Read(s, pktBuf.Bytes())\\n\\t\\t\\t// \u7701\u7565\u90e8\u5206\u4ee3\u7801\\n\\n      s.UpdateActive()\\n            // \u5c06\u6536\u5230\u7684\u6d88\u606f\u653e\u5165 TaskQueue \u4f9b RPC \u6d88\u8d39\u7aef\u6d88\u8d39\\n\\t\\t\\ts.addTask(pkg)\\n\\t\\t\\tpktBuf.Next(pkgLen)\\n\\t\\t\\t// continue to handle case 5\\n\\t\\t}\\n\\t\\tif exit {\\n\\t\\t\\tbreak\\n\\t\\t}\\n\\t}\\n\\n\\treturn perrors.WithStack(err)\\n}\\n```\\n\\n\\n\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u903b\u8f91\u6211\u4eec\u5206\u6790\u51fa\uff0cRPC \u6d88\u8d39\u7aef\u9700\u8981\u5c06\u4ece TCP \u8fde\u63a5\u6536\u5230\u7684\u4e8c\u8fdb\u5236\u6bd4\u7279\u62a5\u6587\u89e3\u7801\u6210 RPC \u80fd\u6d88\u8d39\u7684\u6d88\u606f\uff0c\u8fd9\u4e2a\u5de5\u4f5c\u7531 s.reader \u5b9e\u73b0\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u6784\u5efa RPC \u901a\u4fe1\u5c42\u4e5f\u9700\u8981\u5b9e\u73b0 s.reader \u5bf9\u5e94\u7684 Reader \u63a5\u53e3\u3002\\n\\n\\n### 3. \u5e95\u5c42\u5904\u7406\u7f51\u7edc\u62a5\u6587\u7684\u903b\u8f91\u5982\u4f55\u4e0e\u4e1a\u52a1\u903b\u8f91\u89e3\u8026\\n\\n\\n\u6211\u4eec\u90fd\u77e5\u9053\uff0cnetty \u901a\u8fc7 boss \u7ebf\u7a0b\u548c worker \u7ebf\u7a0b\u5b9e\u73b0\u4e86\u5e95\u5c42\u7f51\u7edc\u903b\u8f91\u548c\u4e1a\u52a1\u903b\u8f91\u7684\u89e3\u8026\u3002\u90a3\u4e48\uff0cgetty \u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462\uff1f\\n\\n\\n\u5728 `handlePackage()` \u65b9\u6cd5\u6700\u540e\uff0c\u6211\u4eec\u770b\u5230\uff0c\u6536\u5230\u7684\u6d88\u606f\u88ab\u653e\u5165\u4e86 `s.addTask(pkg)` \u8fd9\u4e2a\u65b9\u6cd5\uff0c\u63a5\u7740\u5f80\u4e0b\u5206\u6790\uff1a\\n\\n\\n```go\\nfunc (s *session) addTask(pkg interface{}) {\\n\\tf := func() {\\n\\t\\ts.listener.OnMessage(s, pkg)\\n\\t\\ts.incReadPkgNum()\\n\\t}\\n\\tif taskPool := s.EndPoint().GetTaskPool(); taskPool != nil {\\n\\t\\ttaskPool.AddTaskAlways(f)\\n\\t\\treturn\\n\\t}\\n\\tf()\\n}\\n```\\n\\n\\n`pkg` \u53c2\u6570\u4f20\u9012\u5230\u4e86\u4e00\u4e2a\u533f\u540d\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u6700\u7ec8\u653e\u5165\u4e86 `taskPool`\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5f88\u5173\u952e\uff0c\u5728\u6211\u540e\u6765\u5199 seata-golang \u4ee3\u7801\u7684\u65f6\u5019\uff0c\u5c31\u9047\u5230\u4e86\u4e00\u4e2a\u5751\uff0c\u8fd9\u4e2a\u5751\u540e\u9762\u5206\u6790\u3002\\n\\n\\n\u63a5\u7740\u6211\u4eec\u770b\u4e00\u4e0b [taskPool](https://github.com/dubbogo/gost/blob/master/sync/task_pool.go) \u7684\u5b9a\u4e49\uff1a\\n\\n\\n```go\\n// NewTaskPoolSimple build a simple task pool\\nfunc NewTaskPoolSimple(size int) GenericTaskPool {\\n\\tif size < 1 {\\n\\t\\tsize = runtime.NumCPU() * 100\\n\\t}\\n\\treturn &taskPoolSimple{\\n\\t\\twork: make(chan task),\\n\\t\\tsem:  make(chan struct{}, size),\\n\\t\\tdone: make(chan struct{}),\\n\\t}\\n}\\n```\\n\\n\\n\u6784\u5efa\u4e86\u4e00\u4e2a\u7f13\u51b2\u5927\u5c0f\u4e3a size \uff08\u9ed8\u8ba4\u4e3a \xa0`runtime.NumCPU() * 100`\uff09 \u7684 channel `sem`\u3002\u518d\u770b\u65b9\u6cd5 `AddTaskAlways(t task)`\uff1a\\n\\n\\n```go\\nfunc (p *taskPoolSimple) AddTaskAlways(t task) {\\n\\tselect {\\n\\tcase <-p.done:\\n\\t\\treturn\\n\\tdefault:\\n\\t}\\n\\n\\tselect {\\n\\tcase p.work <- t:\\n\\t\\treturn\\n\\tdefault:\\n\\t}\\n\\tselect {\\n\\tcase p.work <- t:\\n\\tcase p.sem <- struct{}{}:\\n\\t\\tp.wg.Add(1)\\n\\t\\tgo p.worker(t)\\n\\tdefault:\\n\\t\\tgoSafely(t)\\n\\t}\\n}\\n```\\n\\n\\n\u52a0\u5165\u7684\u4efb\u52a1\uff0c\u4f1a\u5148\u7531 len(p.sem) \u4e2a goroutine \u53bb\u6d88\u8d39\uff0c\u5982\u679c\u6ca1\u6709 goroutine \u7a7a\u95f2\uff0c\u5219\u4f1a\u542f\u52a8\u4e00\u4e2a\u4e34\u65f6\u7684 goroutine \u53bb\u8fd0\u884c t()\u3002\u76f8\u5f53\u4e8e\u6709 \xa0len(p.sem) \u4e2a goroutine \u7ec4\u6210\u4e86 goroutine pool\uff0cpool \u4e2d\u7684 goroutine \u53bb\u5904\u7406\u4e1a\u52a1\u903b\u8f91\uff0c\u800c\u4e0d\u662f\u7531\u5904\u7406\u7f51\u7edc\u62a5\u6587\u7684 goroutine \u53bb\u8fd0\u884c\u4e1a\u52a1\u903b\u8f91\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u89e3\u8026\u3002\u5199 seata-golang \u65f6\u9047\u5230\u7684\u4e00\u4e2a\u5751\uff0c\u5c31\u662f\u5fd8\u8bb0\u8bbe\u7f6e taskPool \u9020\u6210\u4e86\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u548c\u5904\u7406\u5e95\u5c42\u7f51\u7edc\u62a5\u6587\u903b\u8f91\u7684 goroutine \u662f\u540c\u4e00\u4e2a\uff0c\u6211\u5728\u4e1a\u52a1\u903b\u8f91\u4e2d\u963b\u585e\u7b49\u5f85\u4e00\u4e2a\u4efb\u52a1\u5b8c\u6210\u65f6\uff0c\u963b\u585e\u4e86\u6574\u4e2a goroutine\uff0c\u4f7f\u5f97\u963b\u585e\u671f\u95f4\u6536\u4e0d\u5230\u4efb\u4f55\u62a5\u6587\u3002\\n\\n\\n### 4. \u5177\u4f53\u5b9e\u73b0\\n\\n\\n\u4e0b\u9762\u7684\u4ee3\u7801\u89c1 [getty.go](https://github.com/apache/dubbo-getty/blob/master/getty.go)\uff1a\\n\\n\\n```go\\n// Reader is used to unmarshal a complete pkg from buffer\\ntype Reader interface {\\n\\tRead(Session, []byte) (interface{}, int, error)\\n}\\n\\n// Writer is used to marshal pkg and write to session\\ntype Writer interface {\\n\\t// if @Session is udpGettySession, the second parameter is UDPContext.\\n\\tWrite(Session, interface{}) ([]byte, error)\\n}\\n\\n// ReadWriter interface use for handle application packages\\ntype ReadWriter interface {\\n\\tReader\\n\\tWriter\\n}\\n```\\n\\n\\n```go\\n// EventListener is used to process pkg that received from remote session\\ntype EventListener interface {\\n\\t// invoked when session opened\\n\\t// If the return error is not nil, @Session will be closed.\\n\\tOnOpen(Session) error\\n\\n\\t// invoked when session closed.\\n\\tOnClose(Session)\\n\\n\\t// invoked when got error.\\n\\tOnError(Session, error)\\n\\n\\t// invoked periodically, its period can be set by (Session)SetCronPeriod\\n\\tOnCron(Session)\\n\\n\\t// invoked when getty received a package. Pls attention that do not handle long time\\n\\t// logic processing in this func. You\'d better set the package\'s maximum length.\\n\\t// If the message\'s length is greater than it, u should should return err in\\n\\t// Reader{Read} and getty will close this connection soon.\\n\\t//\\n\\t// If ur logic processing in this func will take a long time, u should start a goroutine\\n\\t// pool(like working thread pool in cpp) to handle the processing asynchronously. Or u\\n\\t// can do the logic processing in other asynchronous way.\\n\\t// !!!In short, ur OnMessage callback func should return asap.\\n\\t//\\n\\t// If this is a udp event listener, the second parameter type is UDPContext.\\n\\tOnMessage(Session, interface{})\\n}\\n```\\n\\n\\n\u901a\u8fc7\u5bf9\u6574\u4e2a getty \u4ee3\u7801\u7684\u5206\u6790\uff0c\u6211\u4eec\u53ea\u8981\u5b9e\u73b0 \xa0`ReadWriter` \u6765\u5bf9 RPC \xa0\u6d88\u606f\u7f16\u89e3\u7801\uff0c\u518d\u5b9e\u73b0 `EventListener` \u6765\u5904\u7406 RPC \u6d88\u606f\u7684\u5bf9\u5e94\u7684\u5177\u4f53\u903b\u8f91\uff0c\u5c06 `ReadWriter` \u5b9e\u73b0\u548c `EventLister` \u5b9e\u73b0\u6ce8\u5165\u5230 RPC \u7684 Client \u548c Server \u7aef\uff0c\u5219\u53ef\u5b9e\u73b0 RPC \u901a\u4fe1\u3002\\n\\n\\n#### 4.1 \u7f16\u89e3\u7801\u534f\u8bae\u5b9e\u73b0\\n\\n\\n\u4e0b\u9762\u662f seata \u534f\u8bae\u7684\u5b9a\u4e49\uff1a\\n![image-20201205214556457.png](https://cdn.nlark.com/yuque/0/2020/png/737378/1607180799872-5f96afb6-680d-4e69-8c95-b8fd1ac4c3a7.png#align=left&display=inline&height=209&margin=%5Bobject%20Object%5D&name=image-20201205214556457.png&originHeight=209&originWidth=690&size=18407&status=done&style=none&width=690)\\n\\n\\n\u5728 ReadWriter \u63a5\u53e3\u7684\u5b9e\u73b0 [`RpcPackageHandler`](https://github.com/opentrx/seata-golang) \u4e2d\uff0c\u8c03\u7528 Codec \u65b9\u6cd5\u5bf9\u6d88\u606f\u4f53\u6309\u7167\u4e0a\u9762\u7684\u683c\u5f0f\u7f16\u89e3\u7801\uff1a\\n\\n\\n```go\\n// \u6d88\u606f\u7f16\u7801\u4e3a\u4e8c\u8fdb\u5236\u6bd4\u7279\\nfunc MessageEncoder(codecType byte, in interface{}) []byte {\\n\\tswitch codecType {\\n\\tcase SEATA:\\n\\t\\treturn SeataEncoder(in)\\n\\tdefault:\\n\\t\\tlog.Errorf(\\"not support codecType, %s\\", codecType)\\n\\t\\treturn nil\\n\\t}\\n}\\n\\n// \u4e8c\u8fdb\u5236\u6bd4\u7279\u89e3\u7801\u4e3a\u6d88\u606f\u4f53\\nfunc MessageDecoder(codecType byte, in []byte) (interface{}, int) {\\n\\tswitch codecType {\\n\\tcase SEATA:\\n\\t\\treturn SeataDecoder(in)\\n\\tdefault:\\n\\t\\tlog.Errorf(\\"not support codecType, %s\\", codecType)\\n\\t\\treturn nil, 0\\n\\t}\\n}\\n```\\n\\n\\n#### 4.2 Client \u7aef\u5b9e\u73b0\\n\\n\\n\u518d\u6765\u770b client \u7aef `EventListener` \u7684\u5b9e\u73b0 [`RpcRemotingClient`](https://github.com/opentrx/seata-golang/blob/dev/pkg/client/rpc_remoting_client.go)\uff1a\\n\\n\\n```go\\nfunc (client *RpcRemoteClient) OnOpen(session getty.Session) error {\\n\\tgo func() \\n\\t\\trequest := protocal.RegisterTMRequest{AbstractIdentifyRequest: protocal.AbstractIdentifyRequest{\\n\\t\\t\\tApplicationId:           client.conf.ApplicationId,\\n\\t\\t\\tTransactionServiceGroup: client.conf.TransactionServiceGroup,\\n\\t\\t}}\\n    // \u5efa\u7acb\u8fde\u63a5\u540e\u5411 Transaction Coordinator \u53d1\u8d77\u6ce8\u518c TransactionManager \u7684\u8bf7\u6c42\\n\\t\\t_, err := client.sendAsyncRequestWithResponse(session, request, RPC_REQUEST_TIMEOUT)\\n\\t\\tif err == nil {\\n      // \u5c06\u4e0e Transaction Coordinator \u5efa\u7acb\u7684\u8fde\u63a5\u4fdd\u5b58\u5728\u8fde\u63a5\u6c60\u4f9b\u540e\u7eed\u4f7f\u7528\\n\\t\\t\\tclientSessionManager.RegisterGettySession(session)\\n\\t\\t\\tclient.GettySessionOnOpenChannel <- session.RemoteAddr()\\n\\t\\t}\\n\\t}()\\n\\n\\treturn nil\\n}\\n\\n// OnError ...\\nfunc (client *RpcRemoteClient) OnError(session getty.Session, err error) {\\n\\tclientSessionManager.ReleaseGettySession(session)\\n}\\n\\n// OnClose ...\\nfunc (client *RpcRemoteClient) OnClose(session getty.Session) {\\n\\tclientSessionManager.ReleaseGettySession(session)\\n}\\n\\n// OnMessage ...\\nfunc (client *RpcRemoteClient) OnMessage(session getty.Session, pkg interface{}) {\\n\\tlog.Info(\\"received message:{%v}\\", pkg)\\n\\trpcMessage, ok := pkg.(protocal.RpcMessage)\\n\\tif ok {\\n\\t\\theartBeat, isHeartBeat := rpcMessage.Body.(protocal.HeartBeatMessage)\\n\\t\\tif isHeartBeat && heartBeat == protocal.HeartBeatMessagePong {\\n\\t\\t\\tlog.Debugf(\\"received PONG from %s\\", session.RemoteAddr())\\n\\t\\t}\\n\\t}\\n\\n\\tif rpcMessage.MessageType == protocal.MSGTYPE_RESQUEST ||\\n\\t\\trpcMessage.MessageType == protocal.MSGTYPE_RESQUEST_ONEWAY {\\n\\t\\tlog.Debugf(\\"msgId:%s, body:%v\\", rpcMessage.Id, rpcMessage.Body)\\n      \\n\\t\\t// \u5904\u7406\u4e8b\u52a1\u6d88\u606f\uff0c\u63d0\u4ea4 or \u56de\u6eda\\n\\t\\tclient.onMessage(rpcMessage, session.RemoteAddr())\\n\\t} else {\\n\\t\\tresp, loaded := client.futures.Load(rpcMessage.Id)\\n\\t\\tif loaded {\\n\\t\\t\\tresponse := resp.(*getty2.MessageFuture)\\n\\t\\t\\tresponse.Response = rpcMessage.Body\\n\\t\\t\\tresponse.Done <- true\\n\\t\\t\\tclient.futures.Delete(rpcMessage.Id)\\n\\t\\t}\\n\\t}\\n}\\n\\n// OnCron ...\\nfunc (client *RpcRemoteClient) OnCron(session getty.Session) {\\n  // \u53d1\u9001\u5fc3\u8df3\\n\\tclient.defaultSendRequest(session, protocal.HeartBeatMessagePing)\\n}\\n```\\n\\n\\n`clientSessionManager.RegisterGettySession(session)` \u7684\u903b\u8f91 4.4 \u5c0f\u8282\u5206\u6790\u3002\\n\\n\\n#### 4.3 Server \u7aef Transaction Coordinator \u5b9e\u73b0\\n\\n\\n\u4ee3\u7801\u89c1 [`DefaultCoordinator`](https://github.com/opentrx/seata-golang/blob/dev/tc/server/default_coordinator_event_listener.go)\uff1a\\n\\n\\n```go\\nfunc (coordinator *DefaultCoordinator) OnOpen(session getty.Session) error {\\n\\tlog.Infof(\\"got getty_session:%s\\", session.Stat())\\n\\treturn nil\\n}\\n\\nfunc (coordinator *DefaultCoordinator) OnError(session getty.Session, err error) {\\n\\t// \u91ca\u653e TCP \u8fde\u63a5\\n  SessionManager.ReleaseGettySession(session)\\n\\tsession.Close()\\n\\tlog.Errorf(\\"getty_session{%s} got error{%v}, will be closed.\\", session.Stat(), err)\\n}\\n\\nfunc (coordinator *DefaultCoordinator) OnClose(session getty.Session) {\\n\\tlog.Info(\\"getty_session{%s} is closing......\\", session.Stat())\\n}\\n\\nfunc (coordinator *DefaultCoordinator) OnMessage(session getty.Session, pkg interface{}) {\\n\\tlog.Debugf(\\"received message:{%v}\\", pkg)\\n\\trpcMessage, ok := pkg.(protocal.RpcMessage)\\n\\tif ok {\\n\\t\\t_, isRegTM := rpcMessage.Body.(protocal.RegisterTMRequest)\\n\\t\\tif isRegTM {\\n      // \u5c06 TransactionManager \u4fe1\u606f\u548c TCP \u8fde\u63a5\u5efa\u7acb\u6620\u5c04\u5173\u7cfb\\n\\t\\t\\tcoordinator.OnRegTmMessage(rpcMessage, session)\\n\\t\\t\\treturn\\n\\t\\t}\\n\\n\\t\\theartBeat, isHeartBeat := rpcMessage.Body.(protocal.HeartBeatMessage)\\n\\t\\tif isHeartBeat && heartBeat == protocal.HeartBeatMessagePing {\\n\\t\\t\\tcoordinator.OnCheckMessage(rpcMessage, session)\\n\\t\\t\\treturn\\n\\t\\t}\\n\\n\\t\\tif rpcMessage.MessageType == protocal.MSGTYPE_RESQUEST ||\\n\\t\\t\\trpcMessage.MessageType == protocal.MSGTYPE_RESQUEST_ONEWAY {\\n\\t\\t\\tlog.Debugf(\\"msgId:%s, body:%v\\", rpcMessage.Id, rpcMessage.Body)\\n\\t\\t\\t_, isRegRM := rpcMessage.Body.(protocal.RegisterRMRequest)\\n\\t\\t\\tif isRegRM {\\n        // \u5c06 ResourceManager \u4fe1\u606f\u548c TCP \u8fde\u63a5\u5efa\u7acb\u6620\u5c04\u5173\u7cfb\\n\\t\\t\\t\\tcoordinator.OnRegRmMessage(rpcMessage, session)\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif SessionManager.IsRegistered(session) {\\n\\t\\t\\t\\t\\tdefer func() {\\n\\t\\t\\t\\t\\t\\tif err := recover(); err != nil {\\n\\t\\t\\t\\t\\t\\t\\tlog.Errorf(\\"Catch Exception while do RPC, request: %v,err: %w\\", rpcMessage, err)\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}()\\n          // \u5904\u7406\u4e8b\u52a1\u6d88\u606f\uff0c\u5168\u5c40\u4e8b\u52a1\u6ce8\u518c\u3001\u5206\u652f\u4e8b\u52a1\u6ce8\u518c\u3001\u5206\u652f\u4e8b\u52a1\u63d0\u4ea4\u3001\u5168\u5c40\u4e8b\u52a1\u56de\u6eda\u7b49\\n\\t\\t\\t\\t\\tcoordinator.OnTrxMessage(rpcMessage, session)\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tsession.Close()\\n\\t\\t\\t\\t\\tlog.Infof(\\"close a unhandled connection! [%v]\\", session)\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tresp, loaded := coordinator.futures.Load(rpcMessage.Id)\\n\\t\\t\\tif loaded {\\n\\t\\t\\t\\tresponse := resp.(*getty2.MessageFuture)\\n\\t\\t\\t\\tresponse.Response = rpcMessage.Body\\n\\t\\t\\t\\tresponse.Done <- true\\n\\t\\t\\t\\tcoordinator.futures.Delete(rpcMessage.Id)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\nfunc (coordinator *DefaultCoordinator) OnCron(session getty.Session) {\\n\\n}\\n```\\n\\n\\n`coordinator.OnRegTmMessage(rpcMessage, session)` \u6ce8\u518c Transaction Manager\uff0c`coordinator.OnRegRmMessage(rpcMessage, session)` \u6ce8\u518c Resource Manager\u3002\u5177\u4f53\u903b\u8f91\u5206\u6790\u89c1 4.4 \u5c0f\u8282\u3002\\n\u6d88\u606f\u8fdb\u5165 `coordinator.OnTrxMessage(rpcMessage, session)` \u65b9\u6cd5\uff0c\u5c06\u6309\u7167\u6d88\u606f\u7684\u7c7b\u578b\u7801\u8def\u7531\u5230\u5177\u4f53\u7684\u903b\u8f91\u5f53\u4e2d\uff1a\\n\\n\\n```go\\n\\tswitch msg.GetTypeCode() {\\n\\tcase protocal.TypeGlobalBegin:\\n\\t\\treq := msg.(protocal.GlobalBeginRequest)\\n\\t\\tresp := coordinator.doGlobalBegin(req, ctx)\\n\\t\\treturn resp\\n\\tcase protocal.TypeGlobalStatus:\\n\\t\\treq := msg.(protocal.GlobalStatusRequest)\\n\\t\\tresp := coordinator.doGlobalStatus(req, ctx)\\n\\t\\treturn resp\\n\\tcase protocal.TypeGlobalReport:\\n\\t\\treq := msg.(protocal.GlobalReportRequest)\\n\\t\\tresp := coordinator.doGlobalReport(req, ctx)\\n\\t\\treturn resp\\n\\tcase protocal.TypeGlobalCommit:\\n\\t\\treq := msg.(protocal.GlobalCommitRequest)\\n\\t\\tresp := coordinator.doGlobalCommit(req, ctx)\\n\\t\\treturn resp\\n\\tcase protocal.TypeGlobalRollback:\\n\\t\\treq := msg.(protocal.GlobalRollbackRequest)\\n\\t\\tresp := coordinator.doGlobalRollback(req, ctx)\\n\\t\\treturn resp\\n\\tcase protocal.TypeBranchRegister:\\n\\t\\treq := msg.(protocal.BranchRegisterRequest)\\n\\t\\tresp := coordinator.doBranchRegister(req, ctx)\\n\\t\\treturn resp\\n\\tcase protocal.TypeBranchStatusReport:\\n\\t\\treq := msg.(protocal.BranchReportRequest)\\n\\t\\tresp := coordinator.doBranchReport(req, ctx)\\n\\t\\treturn resp\\n\\tdefault:\\n\\t\\treturn nil\\n\\t}\\n```\\n\\n\\n#### 4.4 session manager \u5206\u6790\\nClient \u7aef\u540c Transaction Coordinator \u5efa\u7acb\u8fde\u63a5\u8d77\u8fde\u63a5\u540e\uff0c\u901a\u8fc7 `clientSessionManager.RegisterGettySession(session)` \u5c06\u8fde\u63a5\u4fdd\u5b58\u5728 `serverSessions = sync.Map{}` \u8fd9\u4e2a map \u4e2d\u3002map \u7684 key \u4e3a\u4ece session \u4e2d\u83b7\u53d6\u7684 RemoteAddress \u5373 Transaction Coordinator \u7684\u5730\u5740\uff0cvalue \u4e3a session\u3002\u8fd9\u6837\uff0cClient \u7aef\u5c31\u53ef\u4ee5\u901a\u8fc7 map \u4e2d\u7684\u4e00\u4e2a session \u6765\u5411 Transaction Coordinator \u6ce8\u518c Transaction Manager \u548c Resource Manager \u4e86\u3002\u5177\u4f53\u4ee3\u7801\u89c1 [`getty_client_session_manager.go`\u3002](https://github.com/opentrx/seata-golang/blob/dev/pkg/client/getty_client_session_manager.go)\\nTransaction Manager \u548c Resource Manager \u6ce8\u518c\u5230 Transaction Coordinator \u540e\uff0c\u4e00\u4e2a\u8fde\u63a5\u65e2\u6709\u53ef\u80fd\u7528\u6765\u53d1\u9001 TM \u6d88\u606f\u4e5f\u6709\u53ef\u80fd\u7528\u6765\u53d1\u9001 RM \u6d88\u606f\u3002\u6211\u4eec\u901a\u8fc7 RpcContext \u6765\u6807\u8bc6\u4e00\u4e2a\u8fde\u63a5\u4fe1\u606f\uff1a\\n```go\\ntype RpcContext struct {\\n\\tVersion                 string\\n\\tTransactionServiceGroup string\\n\\tClientRole              meta.TransactionRole\\n\\tApplicationId           string\\n\\tClientId                string\\n\\tResourceSets            *model.Set\\n\\tSession                 getty.Session\\n}\\n```\\n\u5f53\u6536\u5230\u4e8b\u52a1\u6d88\u606f\u65f6\uff0c\u6211\u4eec\u9700\u8981\u6784\u9020\u8fd9\u6837\u4e00\u4e2a RpcContext \u4f9b\u540e\u7eed\u4e8b\u52a1\u5904\u7406\u903b\u8f91\u4f7f\u7528\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4f1a\u6784\u9020\u4e0b\u5217 map \u6765\u7f13\u5b58\u6620\u5c04\u5173\u7cfb\uff1a\\n```go\\nvar (\\n\\t// session -> transactionRole\\n\\t// TM will register before RM, if a session is not the TM registered,\\n\\t// it will be the RM registered\\n\\tsession_transactionroles = sync.Map{}\\n\\n\\t// session -> applicationId\\n\\tidentified_sessions = sync.Map{}\\n\\n\\t// applicationId -> ip -> port -> session\\n\\tclient_sessions = sync.Map{}\\n\\n\\t// applicationId -> resourceIds\\n\\tclient_resources = sync.Map{}\\n)\\n```\\n\u8fd9\u6837\uff0cTransaction Manager \u548c Resource Manager \u5206\u522b\u901a\u8fc7 `coordinator.OnRegTmMessage(rpcMessage, session)` \u548c `coordinator.OnRegRmMessage(rpcMessage, session)` \u6ce8\u518c\u5230 Transaction Coordinator \u65f6\uff0c\u4f1a\u5728\u4e0a\u8ff0 client_sessions map \u4e2d\u7f13\u5b58 applicationId\u3001ip\u3001port \u4e0e session \u7684\u5173\u7cfb\uff0c\u5728 client_resources map \u4e2d\u7f13\u5b58 applicationId \u4e0e resourceIds\uff08\u4e00\u4e2a\u5e94\u7528\u53ef\u80fd\u5b58\u5728\u591a\u4e2a Resource Manager\uff09 \u7684\u5173\u7cfb\u3002\u5728\u9700\u8981\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u8ff0\u6620\u5c04\u5173\u7cfb\u6784\u9020\u4e00\u4e2a RpcContext\u3002\u8fd9\u90e8\u5206\u7684\u5b9e\u73b0\u548c java \u7248 seata \u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\u3002\u5177\u4f53\u4ee3\u7801\u89c1 [`getty_session_manager.go`\u3002](https://github.com/opentrx/seata-golang/blob/dev/tc/server/getty_session_manager.go)\\n\u81f3\u6b64\uff0c\u6211\u4eec\u5c31\u5206\u6790\u5b8c\u4e86 [seata-golang](https://github.com/opentrx/seata-golang) \u6574\u4e2a RPC \u901a\u4fe1\u6a21\u578b\u7684\u673a\u5236\u3002\\n\\n## \u4e09\u3001seata-golang \u7684\u672a\u6765\\n\\n[seata-golang](https://github.com/opentrx/seata-golang) \xa0\u4ece\u4eca\u5e74 4 \u6708\u4efd\u5f00\u59cb\u5f00\u53d1\uff0c\u5230 8 \u6708\u4efd\u57fa\u672c\u5b9e\u73b0\u548c java \u7248 [seata 1.2](https://github.com/seata/seata) \u534f\u8bae\u7684\u4e92\u901a\uff0c\u5bf9 mysql \u6570\u636e\u5e93\u5b9e\u73b0\u4e86 AT \u6a21\u5f0f\uff08\u81ea\u52a8\u534f\u8c03\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u63d0\u4ea4\u56de\u6eda\uff09\uff0c\u5b9e\u73b0\u4e86 TCC \u6a21\u5f0f\uff0cTC \u7aef\u4f7f\u7528 mysql \u5b58\u50a8\u6570\u636e\uff0c\u4f7f TC \u53d8\u6210\u4e00\u4e2a\u65e0\u72b6\u6001\u5e94\u7528\u652f\u6301\u9ad8\u53ef\u7528\u90e8\u7f72\u3002\u4e0b\u56fe\u5c55\u793a\u4e86 AT \u6a21\u5f0f\u7684\u539f\u7406\uff1a![image20201205-232516.png]( https://img.alicdn.com/imgextra/i3/O1CN01alqsQS1G2oQecFYIs_!!6000000000565-2-tps-1025-573.png)\\n\\n\\n\u540e\u7eed\uff0c\u8fd8\u6709\u8bb8\u591a\u5de5\u4f5c\u53ef\u4ee5\u505a\uff0c\u6bd4\u5982\uff1a\u5bf9\u6ce8\u518c\u4e2d\u5fc3\u7684\u652f\u6301\u3001\u5bf9\u914d\u7f6e\u4e2d\u5fc3\u7684\u652f\u6301\u3001\u548c java \u7248 seata 1.4 \u7684\u534f\u8bae\u4e92\u901a\u3001\u5176\u4ed6\u6570\u636e\u5e93\u7684\u652f\u6301\u3001raft transaction coordinator \u7684\u5b9e\u73b0\u7b49\uff0c\u5e0c\u671b\u5bf9\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u611f\u5174\u8da3\u7684\u5f00\u53d1\u8005\u53ef\u4ee5\u52a0\u5165\u8fdb\u6765\u4e00\u8d77\u6765\u6253\u9020\u4e00\u4e2a\u5b8c\u5584\u7684 golang \u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u6846\u67b6\u3002\\n\\n\u5982\u679c\u4f60\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u6b22\u8fce\u9489\u9489\u626b\u7801\u52a0\u5165\u4ea4\u6d41\u7fa4\u3010\u9489\u9489\u7fa4\u53f7 33069364\u3011\uff1a\\n<img src=\\"https://img.alicdn.com/imgextra/i2/O1CN01IjOVG425erjuzqcOi_!!6000000007552-2-tps-600-621.png\\" width=\\"200px\\" />\\n\\n### **\u4f5c\u8005\u7b80\u4ecb**\\n\\n\u5218\u6653\u654f (GitHubID dk-lockdown)\uff0c\u76ee\u524d\u5c31\u804c\u4e8e h3c \u6210\u90fd\u5206\u516c\u53f8\uff0c\u64c5\u957f\u4f7f\u7528 Java/Go \u8bed\u8a00\uff0c\u5728\u4e91\u539f\u751f\u548c\u5fae\u670d\u52a1\u76f8\u5173\u6280\u672f\u65b9\u5411\u5747\u6709\u6d89\u730e\uff0c\u76ee\u524d\u4e13\u653b\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002\\n\u4e8e\u96e8(github @AlexStocks)\uff0cdubbo-go \u9879\u76ee\u548c\u793e\u533a\u8d1f\u8d23\u4eba\uff0c\u4e00\u4e2a\u6709\u5341\u591a\u5e74\u670d\u52a1\u7aef\u57fa\u7840\u67b6\u6784\u7814\u53d1\u4e00\u7ebf\u5de5\u4f5c\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\uff0c\u9646\u7eed\u53c2\u4e0e\u6539\u8fdb\u8fc7 Muduo/Pika/Dubbo/Sentinel-go \u7b49\u77e5\u540d\u9879\u76ee\uff0c\u76ee\u524d\u5728\u8682\u8681\u91d1\u670d\u53ef\u4fe1\u539f\u751f\u90e8\u4ece\u4e8b\u5bb9\u5668\u7f16\u6392\u548c service mesh \u5de5\u4f5c\u3002\\n\\n#### \u53c2\u8003\u8d44\u6599\\n\\n\\nseata \u5b98\u65b9\uff1a[https://seata.io](https://seata.io)\\n\\n\\njava \u7248 seata\uff1a[https://github.com/seata/seata](https://github.com/seata/seata)\\n\\n\\nseata-golang \u9879\u76ee\u5730\u5740\uff1a[https://github.com/opentrx/seata-golang](https://github.com/transaction-wg/seata-golang)\\n\\n\\nseata-golang go \u591c\u8bfb b\u7ad9\u5206\u4eab\uff1a[https://www.bilibili.com/video/BV1oz411e72T](https://www.bilibili.com/video/BV1oz411e72T)"},{"id":"/seata-datasource-proxy","metadata":{"permalink":"/zh-cn/blog/seata-datasource-proxy","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-datasource-proxy.md","title":"Seata\u6570\u636e\u6e90\u4ee3\u7406\u89e3\u6790","description":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecdSeata\u6570\u636e\u6e90\u4ee3\u7406\u5b9e\u73b0\u539f\u7406\u53ca\u4f7f\u7528\u65f6\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u95ee\u9898","date":"2020-10-16T00:00:00.000Z","formattedDate":"2020\u5e7410\u670816\u65e5","tags":[],"readingTime":36.27,"hasTruncateMarker":false,"authors":[{"name":"\u7f57\u5c0f\u52c7"}],"frontMatter":{"title":"Seata\u6570\u636e\u6e90\u4ee3\u7406\u89e3\u6790","keywords":["Seata\u3001\u6570\u636e\u6e90\u3001\u6570\u636e\u6e90\u4ee3\u7406\u3001\u591a\u6570\u636e\u6e90"],"description":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecdSeata\u6570\u636e\u6e90\u4ee3\u7406\u5b9e\u73b0\u539f\u7406\u53ca\u4f7f\u7528\u65f6\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u95ee\u9898","author":"\u7f57\u5c0f\u52c7","date":"2020/10/16"},"prevItem":{"title":"seata-golang \u901a\u4fe1\u6a21\u578b\u8be6\u89e3","permalink":"/zh-cn/blog/seata-golang-communication-mode"},"nextItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801-Client\u7aef\u542f\u52a8\u6d41\u7a0b","permalink":"/zh-cn/blog/seata-sourcecode-client-bootstrap"}},"content":"\u5728Seata1.3.0\u7248\u672c\u4e2d\uff0c\u6570\u636e\u6e90\u81ea\u52a8\u4ee3\u7406\u548c\u624b\u52a8\u4ee3\u7406\u4e00\u5b9a\u4e0d\u80fd\u6df7\u5408\u4f7f\u7528\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u591a\u5c42\u4ee3\u7406\uff0c\u4ece\u800c\u5bfc\u81f4\u4ee5\u4e0b\u95ee\u9898\uff1a\\n1. \u5355\u6570\u636e\u6e90\u60c5\u51b5\u4e0b\uff1a\u5bfc\u81f4\u5206\u652f\u4e8b\u52a1\u63d0\u4ea4\u65f6\uff0cundo_log\u672c\u8eab\u4e5f\u88ab\u4ee3\u7406\uff0c\u5373`\u4e3a undo_log \u751f\u6210\u4e86 undo_log\uff0c \u5047\u8bbe\u4e3aundo_log2`\uff0c\u6b64\u65f6undo_log\u5c06\u88ab\u5f53\u4f5c\u5206\u652f\u4e8b\u52a1\u6765\u5904\u7406\uff1b\u5206\u652f\u4e8b\u52a1\u56de\u6eda\u65f6\uff0c\u56e0\u4e3a`undo_log2`\u751f\u6210\u7684\u6709\u95ee\u9898\uff0c\u5728`undo_log\u5bf9\u5e94\u7684\u4e8b\u52a1\u5206\u652f`\u56de\u6eda\u65f6\u4f1a\u5c06`\u4e1a\u52a1\u8868\u5173\u8054\u7684undo_log`\u4e5f\u4e00\u8d77\u5220\u9664\uff0c\u4ece\u800c\u5bfc\u81f4`\u4e1a\u52a1\u8868\u5bf9\u5e94\u7684\u4e8b\u52a1\u5206\u652f`\u56de\u6eda\u65f6\u53d1\u73b0undo_log\u4e0d\u5b58\u5728\uff0c\u4ece\u800c\u53c8\u591a\u751f\u6210\u4e00\u6761\u72b6\u6001\u4e3a1\u7684undo_log\u3002\u8fd9\u65f6\u5019\u6574\u4f53\u903b\u8f91\u5df2\u7ecf\u4e71\u4e86\uff0c\u5f88\u4e25\u91cd\u7684\u95ee\u9898\\n2. \u591a\u6570\u636e\u6e90\u548c`\u903b\u8f91\u6570\u636e\u6e90\u88ab\u4ee3\u7406`\u60c5\u51b5\u4e0b\uff1a\u9664\u4e86\u5355\u6570\u636e\u6e90\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u8fd8\u53ef\u80fd\u4f1a\u9020\u6210\u6b7b\u9501\u95ee\u9898\u3002\u6b7b\u9501\u7684\u539f\u56e0\u5c31\u662f\u9488\u5bf9undo_log\u7684\u64cd\u4f5c\uff0c\u672c\u8be5\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u6267\u884c\u7684`select for update` \u548c `delete` \u64cd\u4f5c\uff0c\u88ab\u5206\u6563\u5728\u591a\u4e2a\u4e8b\u52a1\u4e2d\u6267\u884c\uff0c\u5bfc\u81f4\u4e00\u4e2a\u4e8b\u52a1\u5728\u6267\u884c\u5b8c`select for update`\u540e\u4e00\u76f4\u4e0d\u63d0\u4ea4\uff0c\u4e00\u4e2a\u4e8b\u52a1\u5728\u6267\u884c`delete`\u65f6\u4e00\u76f4\u7b49\u5f85\u9501\uff0c\u76f4\u5230\u8d85\u65f6\\n\\n\\n## \u4ee3\u7406\u63cf\u8ff0\\n\u5373\u5bf9DataSource\u4ee3\u7406\u4e00\u5c42\uff0c\u91cd\u5199\u4e00\u4e9b\u65b9\u6cd5\u3002\u6bd4\u5982`getConnection`\u65b9\u6cd5\uff0c\u8fd9\u65f6\u4e0d\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a`Connection`\uff0c\u800c\u662f\u8fd4\u56de`ConnectionProxy`\uff0c\u5176\u5b83\u7684\u4ee5\u6b64\u7c7b\u63a8\\n```java\\n// DataSourceProxy\\n\\npublic DataSourceProxy(DataSource targetDataSource) {\\n    this(targetDataSource, DEFAULT_RESOURCE_GROUP_ID);\\n}\\n\\nprivate void init(DataSource dataSource, String resourceGroupId) {\\n    DefaultResourceManager.get().registerResource(this);\\n}\\n\\npublic Connection getPlainConnection() throws SQLException {\\n    return targetDataSource.getConnection();\\n}\\n\\n@Override\\npublic ConnectionProxy getConnection() throws SQLException {\\n    Connection targetConnection = targetDataSource.getConnection();\\n    return new ConnectionProxy(this, targetConnection);\\n}\\n```\\n\\n## \u624b\u52a8\u4ee3\u7406\\n\u5373\u624b\u52a8\u6ce8\u5165\u4e00\u4e2a`DataSourceProxy`\uff0c\u5982\u4e0b\\n```\\n@Bean\\npublic DataSource druidDataSource() {\\n    return new DruidDataSource()\\n}\\n\\n@Primary\\n@Bean(\\"dataSource\\")\\npublic DataSourceProxy dataSource(DataSource druidDataSource) {\\n    return new DataSourceProxy(druidDataSource);\\n}\\n```\\n\\n## \u81ea\u52a8\u4ee3\u7406\\n\u9488\u5bf9`DataSource`\u521b\u5efa\u4e00\u4e2a\u4ee3\u7406\u7c7b\uff0c\u5728\u4ee3\u7406\u7c7b\u91cc\u9762\u57fa\u4e8e`DataSource`\u83b7\u53d6`DataSourceProxy(\u5982\u679c\u6ca1\u6709\u5c31\u521b\u5efa)`\uff0c\u7136\u540e\u8c03\u7528`DataSourceProxy`\u7684\u76f8\u5173\u65b9\u6cd5\u3002\u6838\u5fc3\u903b\u8f91\u5728`SeataAutoDataSourceProxyCreator`\u4e2d\\n```java\\npublic class SeataAutoDataSourceProxyCreator extends AbstractAutoProxyCreator {\\n    private static final Logger LOGGER = LoggerFactory.getLogger(SeataAutoDataSourceProxyCreator.class);\\n    private final String[] excludes;\\n    private final Advisor advisor = new DefaultIntroductionAdvisor(new SeataAutoDataSourceProxyAdvice());\\n\\n    public SeataAutoDataSourceProxyCreator(boolean useJdkProxy, String[] excludes) {\\n        this.excludes = excludes;\\n        setProxyTargetClass(!useJdkProxy);\\n    }\\n\\n    @Override\\n    protected Object[] getAdvicesAndAdvisorsForBean(Class<?> beanClass, String beanName, TargetSource customTargetSource) throws BeansException {\\n        if (LOGGER.isInfoEnabled()) {\\n            LOGGER.info(\\"Auto proxy of [{}]\\", beanName);\\n        }\\n        return new Object[]{advisor};\\n    }\\n\\n    @Override\\n    protected boolean shouldSkip(Class<?> beanClass, String beanName) {\\n        return SeataProxy.class.isAssignableFrom(beanClass) ||\\n                DataSourceProxy.class.isAssignableFrom(beanClass) ||\\n                !DataSource.class.isAssignableFrom(beanClass) ||\\n                Arrays.asList(excludes).contains(beanClass.getName());\\n    }\\n}\\n\\npublic class SeataAutoDataSourceProxyAdvice implements MethodInterceptor, IntroductionInfo {\\n    @Override\\n    public Object invoke(MethodInvocation invocation) throws Throwable {\\n        DataSourceProxy dataSourceProxy = DataSourceProxyHolder.get().putDataSource((DataSource) invocation.getThis());\\n        Method method = invocation.getMethod();\\n        Object[] args = invocation.getArguments();\\n        Method m = BeanUtils.findDeclaredMethod(DataSourceProxy.class, method.getName(), method.getParameterTypes());\\n        if (m != null) {\\n            return m.invoke(dataSourceProxy, args);\\n        } else {\\n            return invocation.proceed();\\n        }\\n    }\\n\\n    @Override\\n    public Class<?>[] getInterfaces() {\\n        return new Class[]{SeataProxy.class};\\n    }\\n}\\n```\\n\\n\\n## \u6570\u636e\u6e90\u591a\u5c42\u4ee3\u7406\\n```\\n@Bean\\n@DependsOn(\\"strangeAdapter\\")\\npublic DataSource druidDataSource(StrangeAdapter strangeAdapter) {\\n    doxx\\n    return new DruidDataSource()\\n}\\n\\n@Primary\\n@Bean(\\"dataSource\\")\\npublic DataSourceProxy dataSource(DataSource druidDataSource) {\\n    return new DataSourceProxy(druidDataSource);\\n}\\n```\\n1. \u9996\u5148\u6211\u4eec\u5728\u914d\u7f6e\u7c7b\u91cc\u9762\u6ce8\u5165\u4e86\u4e24\u4e2a`DataSource`\uff0c\u5206\u522b\u4e3a\uff1a `DruidDataSource`\u548c`DataSourceProxy`\uff0c \u5176\u4e2d`DruidDataSource \u4f5c\u4e3a DataSourceProxy \u7684 targetDataSource \u5c5e\u6027`\uff0c\u5e76\u4e14`DataSourceProxy`\u4e3a\u4f7f\u7528\u4e86`@Primary`\u6ce8\u89e3\u58f0\u660e\\n2. \u5e94\u7528\u9ed8\u8ba4\u5f00\u542f\u4e86\u6570\u636e\u6e90\u81ea\u52a8\u4ee3\u7406\uff0c\u6240\u4ee5\u5728\u8c03\u7528`DruidDataSource`\u76f8\u5173\u65b9\u6cd5\u65f6\uff0c\u53c8\u4f1a\u4e3a\u4e3a`DruidDataSource`\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684\u6570\u636e\u6e90\u4ee3\u7406`DataSourceProxy2`\\n3. \u5f53\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u60f3\u83b7\u53d6\u4e00\u4e2aConnection\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\\n   1. \u5148\u83b7\u53d6\u4e00\u4e2a`DataSource`\uff0c\u56e0\u4e3a`DataSourceProxy`\u4e3a`Primary`\uff0c\u6240\u4ee5\u6b64\u65f6\u62ff\u5230\u7684\u662f`DataSourceProxy`\\n   2. \u57fa\u4e8e`DataSource`\u83b7\u53d6\u4e00\u4e2a`Connection`\uff0c\u5373\u901a\u8fc7`DataSourceProxy`\u83b7\u53d6`Connection`\u3002\u6b64\u65f6\u4f1a\u5148\u8c03\u7528`targetDataSource \u5373 DruidDataSource \u7684 getConnection \u65b9\u6cd5`\uff0c\u4f46\u56e0\u4e3a\u5207\u9762\u4f1a\u5bf9`DruidDataSource`\u8fdb\u884c\u62e6\u622a\uff0c\u6839\u636e\u6b65\u9aa42\u7684\u62e6\u622a\u903b\u8f91\u53ef\u4ee5\u77e5\u9053\uff0c\u6b64\u65f6\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a`DataSourceProxy2`\uff0c\u7136\u540e\u8c03\u7528`DataSourceProxy2#getConnection`\uff0c\u7136\u540e\u518d\u8c03\u7528`DruidDataSource#getConnection`\u3002\u6700\u7ec8\u5f62\u6210\u4e86\u53cc\u5c42\u4ee3\u7406\uff0c \u8fd4\u56de\u7684`Connection`\u4e5f\u662f\u4e00\u4e2a\u53cc\u5c42\u7684`ConnectionProxy`\\n\\n![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9ac0b91bd8fc4c48aa68afd5c58a42d5~tplv-k3u1fbpfcp-watermark.image)\\n\\n\u4e0a\u9762\u5176\u5b9e\u662f\u6539\u9020\u4e4b\u540e\u7684\u4ee3\u7406\u903b\u8f91\uff0cSeata\u9ed8\u8ba4\u7684\u81ea\u52a8\u4ee3\u7406\u4f1a\u5bf9`DataSourceProxy`\u518d\u6b21\u8fdb\u884c\u4ee3\u7406\uff0c\u540e\u679c\u5c31\u662f\u4ee3\u7406\u591a\u4e86\u4e00\u5c42\u6b64\u65f6\u5bf9\u5e94\u7684\u56fe\u5982\u4e0b\\n\\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/837aa0462d994e9a8614707c6a50b5ae~tplv-k3u1fbpfcp-watermark.image)\\n\\n\u6570\u636e\u6e90\u591a\u5c42\u4ee3\u7406\u4f1a\u5bfc\u81f4\u7684\u4e24\u4e2a\u95ee\u9898\u5728\u6587\u7ae0\u5f00\u5934\u5904\u5df2\u7ecf\u603b\u7ed3\u4e86\uff0c\u4e0b\u9762\u4f1a\u6709\u6848\u4f8b\u4ecb\u7ecd\u3002\\n\\n\\n\\n# \u5206\u652f\u4e8b\u52a1\u63d0\u4ea4\\n\u901a\u8fc7`ConnectionProxy`\u4e2d\u6267\u884c\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u4ee5update\u64cd\u4f5c\u6d89\u53ca\u5230\u7684\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\u63d0\u4ea4\u4e3a\u4f8b\uff1a\\n1. \u6267\u884c`ConnectionProxy#prepareStatement`\uff0c \u8fd4\u56de\u4e00\u4e2a`PreparedStatementProxy`\\n2. \u6267\u884c`PreparedStatementProxy#executeUpdate`\uff0c`PreparedStatementProxy#executeUpdate`\u5927\u6982\u4f1a\u5e2e\u505a\u4e24\u4ef6\u4e8b\u60c5: \u6267\u884c\u4e1a\u52a1SQL\u548c\u63d0\u4ea4undo_log\\n\\n## \u63d0\u4ea4\u4e1a\u52a1SQL\\n```java\\n// ExecuteTemplate#execute\\nif (sqlRecognizers.size() == 1) {\\n    SQLRecognizer sqlRecognizer = sqlRecognizers.get(0);\\n    switch (sqlRecognizer.getSQLType()) {\\n        case INSERT:\\n            executor = EnhancedServiceLoader.load(InsertExecutor.class, dbType,\\n                    new Class[]{StatementProxy.class, StatementCallback.class, SQLRecognizer.class},\\n                    new Object[]{statementProxy, statementCallback, sqlRecognizer});\\n            break;\\n        case UPDATE:\\n            executor = new UpdateExecutor<>(statementProxy, statementCallback, sqlRecognizer);\\n            break;\\n        case DELETE:\\n            executor = new DeleteExecutor<>(statementProxy, statementCallback, sqlRecognizer);\\n            break;\\n        case SELECT_FOR_UPDATE:\\n            executor = new SelectForUpdateExecutor<>(statementProxy, statementCallback, sqlRecognizer);\\n            break;\\n        default:\\n            executor = new PlainExecutor<>(statementProxy, statementCallback);\\n            break;\\n    }\\n} else {\\n    executor = new MultiExecutor<>(statementProxy, statementCallback, sqlRecognizers);\\n}\\n```\\n\\n\u4e3b\u8981\u6d41\u7a0b\u5c31\u662f\uff1a \u5148\u6267\u884c\u4e1a\u52a1SQL\uff0c\u7136\u540e\u6267\u884cConnectionProxy\u7684commit\u65b9\u6cd5\uff0c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u4f1a\u5148\u5e2e\u6211\u4eec\u6267\u884c\u5bf9\u5e94\u7684 undo_log SQL\uff0c\u7136\u540e\u63d0\u4ea4\u4e8b\u52a1\\n```\\nPreparedStatementProxy#executeUpdate => \\nExecuteTemplate#execute => \\nBaseTransactionalExecutor#execute =>\\nAbstractDMLBaseExecutor#doExecute =>\\nAbstractDMLBaseExecutor#executeAutoCommitTrue => \\nAbstractDMLBaseExecutor#executeAutoCommitFalse => \u5728\u8fd9\u4e00\u6b65\u64cd\u4e2d\uff0c\u4f1a\u89e6\u53d1statementCallback#execute\u65b9\u6cd5\uff0c\u5373\u8c03\u7528\u8c03\u7528\u539f\u751fPreparedStatement#executeUpdate\u65b9\u6cd5\\nConnectionProxy#commit\\nConnectionProxy#processGlobalTransactionCommit\\n```\\n\\n## UNDO_LOG\u63d2\u5165\\n```java\\n// ConnectionProxy#processGlobalTransactionCommit\\nprivate void processGlobalTransactionCommit() throws SQLException {\\n    try {\\n        // \u6ce8\u518c\u5206\u652f\u4e8b\u52a1\uff0c\u7b80\u5355\u7406\u89e3\u5411server\u53d1\u4e00\u4e2a\u8bf7\u6c42\uff0c\u7136\u540eserver\u5728branch_table\u8868\u91cc\u63d2\u5165\u4e00\u6761\u8bb0\u5f55\uff0c\u4e0d\u5173\u6ce8\\n        register();\\n    } catch (TransactionException e) {\\n        // \u5982\u679c\u6ca1\u6709for update \u7684sql,\u4f1a\u76f4\u63a5\u5728commit\u4e4b\u524d\u505a\u6ce8\u518c,\u6b64\u65f6\u4e0d\u6b62\u63d2\u5165\u4e00\u6761branch\u8bb0\u5f55,\u800c\u4f1a\u9644\u5e26\u9501\u4fe1\u606f\u8fdb\u884c\u7ade\u4e89,\u4e0b\u65b9\u7684\u5f02\u5e38\u4e00\u822c\u5c31\u662f\u5728\u6ce8\u518c\u65f6\u6ca1\u62ff\u5230\u9501\u629b\u51fa,\u4e00\u822c\u5c31\u662f\u7eafupdate\u8bed\u53e5\u7684\u5e76\u53d1\u4e0b\u4f1a\u89e6\u53d1\u7ade\u4e89\u9501\u5931\u8d25\u7684\u5f02\u5e38 @FUNKYE\\n        recognizeLockKeyConflictException(e, context.buildLockKeys());\\n    }\\n    try {\\n        // undo_log\u5904\u7406\uff0c\u671f\u671b\u7528 targetConnection \u5904\u7406           @1\\n        UndoLogManagerFactory.getUndoLogManager(this.getDbType()).flushUndoLogs(this);\\n\\n        // \u63d0\u4ea4\u672c\u5730\u4e8b\u52a1\uff0c\u671f\u671b\u7528 targetConnection \u5904\u7406             @2\\n        targetConnection.commit();\\n    } catch (Throwable ex) {\\n        LOGGER.error(\\"process connectionProxy commit error: {}\\", ex.getMessage(), ex);\\n        report(false);\\n        throw new SQLException(ex);\\n    }\\n    if (IS_REPORT_SUCCESS_ENABLE) {\\n        report(true);\\n    }\\n    context.reset();\\n}\\n```\\n1. undo_log\u5904\u7406@1\uff0c\u89e3\u6790\u5f53\u524d\u4e8b\u52a1\u5206\u652f\u6d89\u53ca\u5230\u7684`undo_log`\uff0c\u7136\u540e\u4f7f\u7528`TargetConnection`\uff0c \u5199\u5230\u6570\u636e\u5e93\\n```java\\npublic void flushUndoLogs(ConnectionProxy cp) throws SQLException {\\n    ConnectionContext connectionContext = cp.getContext();\\n    if (!connectionContext.hasUndoLog()) {\\n        return;\\n    }\\n\\n    String xid = connectionContext.getXid();\\n    long branchId = connectionContext.getBranchId();\\n\\n    BranchUndoLog branchUndoLog = new BranchUndoLog();\\n    branchUndoLog.setXid(xid);\\n    branchUndoLog.setBranchId(branchId);\\n    branchUndoLog.setSqlUndoLogs(connectionContext.getUndoItems());\\n\\n    UndoLogParser parser = UndoLogParserFactory.getInstance();\\n    byte[] undoLogContent = parser.encode(branchUndoLog);\\n\\n    if (LOGGER.isDebugEnabled()) {\\n        LOGGER.debug(\\"Flushing UNDO LOG: {}\\", new String(undoLogContent, Constants.DEFAULT_CHARSET));\\n    }\\n\\n    insertUndoLogWithNormal(xid, branchId, buildContext(parser.getName()), undoLogContent,cp.getTargetConnection());\\n}\\n```\\n2. \u63d0\u4ea4\u672c\u5730\u4e8b\u52a1@2\uff0c\u5373\u901a\u8fc7`TargetConnection`\u63d0\u4ea4\u4e8b\u52a1\u3002\u5373 `\u52a1SQL\u6267\u884c`\u3001`undo_log\u5199\u5165`\u3001`\u5373\u4e8b\u52a1\u63d0\u4ea4` \u7528\u7684\u90fd\u662f\u540c\u4e00\u4e2a`TargetConnection`\\n\\n>lcn\u7684\u5185\u7f6e\u6570\u636e\u5e93\u65b9\u6848,lcn\u662f\u5c06undolog\u5199\u5230\u4ed6\u5185\u5d4c\u7684h2(\u5fd8\u4e86\u662f\u4e0d\u662f\u8fd9\u4e2a\u6765\u7740\u4e86)\u6570\u636e\u5e93\u4e0a,\u6b64\u65f6\u4f1a\u53d8\u62102\u4e2a\u672c\u5730\u4e8b\u52a1,\u4e00\u4e2a\u662fh2\u7684undolog\u63d2\u5165\u4e8b\u52a1,\u4e00\u4e2a\u662f\u4e1a\u52a1\u6570\u636e\u5e93\u7684\u4e8b\u52a1,\u5982\u679c\u5728h2\u63d2\u5165\u540e,\u4e1a\u52a1\u6570\u636e\u5e93\u5f02\u5e38,lcn\u7684\u65b9\u6848\u5c31\u4f1a\u51fa\u73b0\u6570\u636e\u5197\u4f59,\u56de\u6eda\u6570\u636e\u7684\u65f6\u5019\u4e5f\u662f\u4e00\u6837,\u5220\u9664undolog\u8ddf\u56de\u6eda\u4e1a\u52a1\u6570\u636e\u4e0d\u662f\u4e00\u4e2a\u672c\u5730\u4e8b\u52a1.\\n\u4f46\u662flcn\u8fd9\u6837\u7684\u597d\u5904\u5c31\u662f\u5165\u4fb5\u5c0f,\u4e0d\u9700\u8981\u53e6\u5916\u6dfb\u52a0undolog\u8868\u3002 \u611f\u8c22@FUNKYE\u5927\u4f6c\u7ed9\u7684\u5efa\u8bae\uff0c\u5bf9lcn\u4e0d\u592a\u4e86\u89e3\uff0c\u6709\u673a\u4f1a\u597d\u597d\u7814\u7a76\u4e00\u4e0b\\n\\n\\n# \u5206\u652f\u4e8b\u52a1\u56de\u6eda\\n1. Server\u7aef\u5411Client\u7aef\u53d1\u9001\u56de\u6eda\u8bf7\u6c42\\n2. Client\u7aef\u63a5\u6536\u5230Server\u53d1\u8fc7\u6765\u7684\u8bf7\u6c42\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u5904\u7406\uff0c\u6700\u7ec8\u4f1a\u5230`DataSourceManager#branchRollback`\u65b9\u6cd5\\n3. \u5148\u6839\u636eresourceId\u4ece`DataSourceManager.dataSourceCache`\u4e2d\u83b7\u53d6\u5bf9\u5e94\u7684`DataSourceProxy`\uff0c\u6b64\u65f6\u4e3a`masterSlaveProxy`(\u56de\u6eda\u9636\u6bb5\u6211\u4eec\u5c31\u4e0d\u8003\u4ee3\u7406\u6570\u636e\u6e90\u95ee\u9898\uff0c\u7b80\u5355\u76f4\u63a5\u4e00\u4e9b\uff0c\u53cd\u6b63\u6700\u7ec8\u62ff\u5230\u7684\u90fd\u662f`TragetConnection`)\\n4. \u6839\u636eServer\u7aef\u53d1\u8fc7\u6765\u7684xid\u548cbranchId\u67e5\u627e\u5bf9\u5e94\u7684undo_log\u5e76\u89e3\u6790\u5176`rollback_info`\u5c5e\u6027\uff0c\u6bcf\u6761undo_log\u53ef\u80fd\u4f1a\u89e3\u6790\u51fa\u591a\u6761`SQLUndoLog`,\u6bcf\u4e2a`SQLUndoLog`\u53ef\u4ee5\u7406\u89e3\u6210\u662f\u4e00\u4e2a\u64cd\u4f5c\u3002\u6bd4\u5982\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\u5148\u66f4\u65b0A\u8868\uff0c\u518d\u66f4\u65b0B\u8868\uff0c\u8fd9\u65f6\u5019\u9488\u5bf9\u8be5\u5206\u652f\u4e8b\u52a1\u751f\u6210\u7684undo_log\u5c31\u5305\u542b\u4e24\u4e2a`SQLUndoLog`\uff1a\u7b2c\u4e00\u4e2a`SQLUndoLog`\u5bf9\u5e94\u7684\u662f\u66f4\u65b0A\u8868\u7684\u524d\u540e\u5feb\u7167\uff1b\u7b2c\u4e8c\u4e2a`SQLUndoLog`\u5bf9\u5e94\u7684\u662f\u66f4\u65b0B\u8868\u7684\u524d\u540e\u5feb\u7167\\n5. \u9488\u5bf9\u6bcf\u6761`SQLUndoLog`\u6267\u884c\u5bf9\u5e94\u7684\u56de\u6eda\u64cd\u4f5c\uff0c\u6bd4\u5982\u4e00\u4e2a`SQLUndoLog`\u5bf9\u5e94\u7684\u64cd\u4f5c\u662f`INSERT`\uff0c\u5219\u5176\u5bf9\u5e94\u7684\u56de\u6eda\u64cd\u4f5c\u5c31\u662f`DELETE`\\n6. \u6839\u636exid\u548cbranchId\u5220\u9664\u8be5undo_log\\n\\n\\n```java\\n// AbstractUndoLogManager#undo   \u5220\u9664\u4e86\u90e8\u5206\u975e\u5173\u952e\u4ee3\u7801\\n\\npublic void undo(DataSourceProxy dataSourceProxy, String xid, long branchId) throws TransactionException {\\n    Connection conn = null;\\n    ResultSet rs = null;\\n    PreparedStatement selectPST = null;\\n    boolean originalAutoCommit = true;\\n\\n    for (; ; ) {\\n        try {\\n            // \u83b7\u53d6\u539f\u751f\u6570\u636e\u6e90\u7684Connection, \u56de\u6eda\u9636\u6bb5\u6211\u4eec\u4e0d\u7ba1\u4ee3\u7406\u6570\u636e\u6e90\u95ee\u9898\uff0c\u6700\u7ec8\u62ff\u5230\u7684\u90fd\u662f TargetConnection\\n            conn = dataSourceProxy.getPlainConnection();\\n\\n            // \u5c06\u56de\u6eda\u64cd\u4f5c\u653e\u5728\u4e00\u4e2a\u672c\u5730\u4e8b\u52a1\u4e2d\uff0c\u624b\u52a8\u63d0\u4ea4\uff0c\u786e\u4fdd\u6700\u7ec8\u4e1a\u52a1SQL\u64cd\u4f5c\u548cundo_log\u5220\u9664\u64cd\u4f5c\u4e00\u8d77\u63d0\u4ea4\\n            if (originalAutoCommit = conn.getAutoCommit()) {\\n                conn.setAutoCommit(false);\\n            }\\n\\n            // \u6839\u636exid \u548c branchId \u67e5\u8be2 undo_log\uff0c\u6ce8\u610f\u6b64\u65f6\u7684SQL\u8bed\u53e5  SELECT * FROM undo_log WHERE branch_id = ? AND xid = ? FOR UPDATE\\n            selectPST = conn.prepareStatement(SELECT_UNDO_LOG_SQL);\\n            selectPST.setLong(1, branchId);\\n            selectPST.setString(2, xid);\\n            rs = selectPST.executeQuery();\\n\\n            boolean exists = false;\\n            while (rs.next()) {\\n                exists = true;\\n                // status == 1 undo_log\u4e0d\u5904\u7406\uff0c\u548c\u9632\u60ac\u6302\u76f8\u5173\\n                if (!canUndo(state)) {\\n                    return;\\n                }\\n\\n                // \u89e3\u6790undo_log\\n                byte[] rollbackInfo = getRollbackInfo(rs);\\n                BranchUndoLog branchUndoLog = UndoLogParserFactory.getInstance(serializer).decode(rollbackInfo);\\n                try {\\n                    setCurrentSerializer(parser.getName());\\n                    List<SQLUndoLog> sqlUndoLogs = branchUndoLog.getSqlUndoLogs();\\n                    if (sqlUndoLogs.size() > 1) {\\n                        Collections.reverse(sqlUndoLogs);\\n                    }\\n                    for (SQLUndoLog sqlUndoLog : sqlUndoLogs) {\\n                        AbstractUndoExecutor undoExecutor = UndoExecutorFactory.getUndoExecutor(dataSourceProxy.getDbType(), sqlUndoLog);\\n                        // \u6267\u884c\u5bf9\u5e94\u7684\u56de\u6eda\u64cd\u4f5c\\n                        undoExecutor.executeOn(conn);\\n                    }\\n                } \\n            }\\n\\n            // \\n            if (exists) {\\n                LOGGER.error(\\"\\\\n delete from undo_log where xid={} AND branchId={} \\\\n\\", xid, branchId);\\n                deleteUndoLog(xid, branchId, conn);\\n                conn.commit();\\n            // \u548c\u9632\u60ac\u6302\u76f8\u5173 \u5982\u679c\u6839\u636e xid\u548cbranchId \u6ca1\u6709\u67e5\u5230undo_log\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5206\u652f\u4e8b\u52a1\u6709\u5f02\u5e38\uff1a\u4f8b\u5982\u4e1a\u52a1\u5904\u7406\u8d85\u65f6\uff0c\u5bfc\u81f4\u5168\u5c40\u4e8b\u52a1\u56de\u6eda\uff0c\u4f46\u8fd9\u65f6\u5019\u4e1a\u52a1undo_log\u5e76\u6ca1\u6709\u63d2\u5165\\n            } else {\\n                LOGGER.error(\\"\\\\n insert into undo_log xid={},branchId={} \\\\n\\", xid, branchId);\\n                insertUndoLogWithGlobalFinished(xid, branchId, UndoLogParserFactory.getInstance(), conn);\\n                conn.commit();\\n            }\\n            return;\\n        } catch (Throwable e) {\\n            throw new BranchTransactionException(BranchRollbackFailed_Retriable, String\\n                .format(\\"Branch session rollback failed and try again later xid = %s branchId = %s %s\\", xid,branchId, e.getMessage()), e);\\n        }\\n    }\\n}\\n```\\n\u6709\u4ee5\u4e0b\u51e0\u4e2a\u6ce8\u610f\u70b9\uff1a\\n1. \u56de\u6eda\u65f6\u4e0d\u8003\u8651\u6570\u636e\u6e90\u4ee3\u7406\u95ee\u9898\uff0c\u6700\u7ec8\u90fd\u662f\u4f7f\u7528`TargetConnection`\\n2. \u8bbe\u7f6eatuoCommit\u4e3afalse\uff0c\u5373\u9700\u8981\u624b\u52a8\u63d0\u4ea4\u4e8b\u52a1\\n3. \u6839\u636exid\u548cbranchId\u67e5\u8be2undo_log\u65f6\u52a0\u4e86`for update`\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u4e8b\u52a1\u4f1a\u6301\u6709\u8fd9\u6761undo_log\u7684\u9501\u76f4\u5230\u6240\u6709\u56de\u6eda\u64cd\u4f5c\u90fd\u5b8c\u6210\uff0c\u56e0\u4e3a\u5b8c\u6210\u4e4b\u540e\u624d\u4f1a\\n\\n\\n# \u591a\u5c42\u4ee3\u7406\u95ee\u9898\\n\u6570\u636e\u6e90\u591a\u5c42\u4ee3\u7406\u4f1a\u5bfc\u81f4\u7684\u51e0\u4e2a\u95ee\u9898\u5728\u6587\u7ae0\u5f00\u5934\u7684\u65f6\u5019\u5df2\u7ecf\u63d0\u5230\u8fc7\u4e86\uff0c\u91cd\u70b9\u5206\u6790\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u4f1a\u9020\u6210\u4ee5\u4e0a\u95ee\u9898\uff1a\\n\\n\\n## \u5bf9\u5206\u652f\u4e8b\u52a1\u63d0\u4ea4\u7684\u5f71\u54cd\\n\u5148\u5206\u6790\u4e00\u4e0b\uff0c\u5982\u679c\u4f7f\u7528\u53cc\u5c42\u4ee3\u7406\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u6211\u4eec\u4ece\u4e24\u4e2a\u65b9\u9762\u6765\u5206\u6790\uff1a`\u4e1a\u52a1SQL`\u548c`undo_log`\\n1. \u4e1a\u52a1SQL\\n```\\nPreparedStatementProxy1.executeUpdate => \\nstatementCallback#executeUpdate(PreparedStatementProxy2#executeUpdate) => \\nPreparedStatement#executeUpdate\\n```\\n\u597d\u50cf\u6ca1\u5565\u5f71\u54cd\uff0c\u5c31\u662f\u591a\u7ed5\u4e86\u4e00\u5708\uff0c\u6700\u7ec8\u8fd8\u662f\u901a\u8fc7`PreparedStatement`\u6267\u884c\\n\\n\\n2. undo_log\\n```\\nConnectionProxy1#getTargetConnection -> \\nConnectionProxy2#prepareStatement -> \\nPreparedStatementProxy2#executeUpdate -> \\nPreparedStatement#executeUpdate(\u539f\u751f\u7684undo_log\u5199\u5165\uff0c\u5728\u6b64\u4e4b\u524d\u4f1a\u5bf9\u4e3a\u8be5 undo_log \u751f\u6210 undo_log2(\u5373 undo_log \u7684 undo_log)) ->\\nConnectionProxy2#commit -> \\nConnectionProxy2#processGlobalTransactionCommit(\u5199\u5165undo_log2) ->\\nConnectionProxy2#getTargetConnection ->\\nTargetConnection#prepareStatement ->\\nPreparedStatement#executeUpdate\\n```\\n\\n\\n## \u5bf9\u5206\u652f\u4e8b\u52a1\u56de\u6eda\u7684\u5f71\u54cd\\n>\u5728\u4e8b\u52a1\u56de\u6eda\u4e4b\u540e\uff0c\u4e3a\u4f55undo_log\u6ca1\u6709\u88ab\u5220\u9664\u5462\uff1f\\n\\n\u5176\u5b9e\u5e76\u4e0d\u662f\u6ca1\u6709\u88ab\u5220\u9664\u3002\u524d\u9762\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u53cc\u5c42\u4ee3\u7406\u4f1a\u5bfc\u81f4`undo_log`\u88ab\u5f53\u4f5c\u5206\u652f\u4e8b\u52a1\u6765\u5904\u7406\uff0c\u6240\u4ee5\u4e5f\u4f1a\u4e3a\u8be5 `undo_log`\u751f\u6210\u4e00\u4e2aundo_log(\u5047\u8bbe\u4e3a`undo_log2`),\u800c`undo_log2`\u751f\u6210\u7684\u6709\u95ee\u9898(\u5176\u5b9e\u4e5f\u6ca1\u95ee\u9898\uff0c\u5c31\u5e94\u8be5\u8fd9\u6837\u751f\u6210)\uff0c\u4ece\u800c\u5bfc\u81f4\u56de\u6eda\u65f6\u4f1a\u5c06`\u4e1a\u52a1\u8868\u5173\u8054\u7684undo_log`\u4e5f\u4e00\u8d77\u5220\u9664\uff0c\u6700\u7ec8\u5bfc\u81f4`\u4e1a\u52a1\u8868\u5bf9\u5e94\u7684\u4e8b\u52a1\u5206\u652f`\u56de\u6eda\u65f6\u53d1\u73b0undo_log\u4e0d\u5b58\u5728\uff0c\u4ece\u800c\u53c8\u591a\u751f\u6210\u4e00\u6761\u72b6\u6001\u4e3a\u4e3a1\u7684undo_log\\n\\n**\u56de\u6eda\u4e4b\u524d**\\n```\\n// undo_log\\n84\\t59734070967644161\\t172.16.120.59:23004:59734061438185472 serializer=jackson 1.1KB  0\\n85\\t59734075254222849\\t172.16.120.59:23004:59734061438185472 serializer=jackson 4.0KB  0\\n\\n// branch_table\\n59734070967644161\\t172.16.120.59:23004:59734061438185472\\t\\tjdbc:mysql://172.16.248.10:3306/tuya_middleware\\n59734075254222849\\t172.16.120.59:23004:59734061438185472\\t\\tjdbc:mysql://172.16.248.10:3306/tuya_middleware\\n\\n// lock_table\\njdbc:mysql://xx^^^seata_storage^^^1 59734070967644161\\tjdbc:mysql://172.16.248.10:3306/tuya_middleware\\tseata_storage\\t  1\\njdbc:mysql://xx^^^undo_log^^^84\\t    59734075254222849\\tjdbc:mysql://172.16.248.10:3306/tuya_middleware\\tundo_log\\t      84\\n```\\n\\n**\u56de\u6eda\u4e4b\u540e**\\n```\\n// \u751f\u6210\u4e86\u4e00\u6761\u72b6\u6001\u4e3a1\u7684undo_log\uff0c\u5bf9\u5e94\u7684\u65e5\u5fd7\u4e3a: undo_log added with GlobalFinished\\n86\\t59734070967644161\\t172.16.120.59:23004:59734061438185472 serializer=jackson 1.0Byte  1\\n```\\n\\n\\n### \u95ee\u9898\u5206\u6790\\n1. \u6839\u636exid\u548cbranchId\u627e\u5230\u5bf9\u5e94\u7684undo_log\u65e5\u5fd7\\n2. \u5bf9undo_log\u8fdb\u884c\u89e3\u6790\uff0c\u4e3b\u8981\u5c31\u662f\u89e3\u6790\u5b83\u7684`rollback_info`\u5b57\u6bb5\uff0c`rollback_info`\u89e3\u6790\u51fa\u6765\u5c31\u662f\u4e00\u4e2a`SQLUndoLog\u96c6\u5408`\uff0c\u6bcf\u6761`SQLUndoLog`\u5bf9\u5e94\u7740\u4e00\u4e2a\u64cd\u4f5c\uff0c\u91cc\u9762\u5305\u542b\u4e86\u8be5\u64cd\u4f5c\u7684\u524d\u540e\u7684\u5feb\u7167\uff0c\u7136\u540e\u6267\u884c\u5bf9\u5e94\u7684\u56de\u6eda\\n3. \u6839\u636exid\u548cbranchId\u5220\u9664undo_log\u65e5\u5fd7\\n\\n\u56e0\u4e3a\u53cc\u5c42\u4ee3\u7406\u95ee\u9898\uff0c\u5bfc\u81f4\u4e00\u6761undo_log\u53d8\u6210\u4e86\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\uff0c\u6240\u4ee5\u53d1\u751f\u56de\u6eda\u65f6\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u5bf9undo_log\u5206\u652f\u4e8b\u52a1\u8fdb\u884c\u56de\u6eda\uff1a\\n1\u3001\u9996\u5148\u6839\u636exid\u548cbranchId\u627e\u5230\u5bf9\u5e94\u7684`undo_log`\u5e76\u89e3\u6790\u5176`rollback_info`\u5c5e\u6027\uff0c\u8fd9\u91cc\u89e3\u6790\u51fa\u6765\u7684rollback_info\u5305\u542b\u4e86\u4e24\u6761`SQLUndoLog`\u3002\u4e3a\u4ec0\u4e48\u6709\u4e24\u6761\uff1f\\n>\u4ed4\u7ec6\u60f3\u60f3\u4e5f\u53ef\u4ee5\u53ef\u4ee5\u7406\u89e3\uff0c\u7b2c\u4e00\u5c42\u4ee3\u7406\u9488\u5bf9`seata_storage`\u7684\u64cd\u4f5c\uff0c\u653e\u5230\u7f13\u5b58\u4e2d\uff0c\u672c\u6765\u6267\u884c\u5b8c\u4e4b\u540e\u662f\u9700\u8981\u6e05\u6389\u7684\uff0c\u4f46\u56e0\u4e3a\u8fd9\u91cc\u662f\u53cc\u5c42\u4ee3\u7406\uff0c\u6240\u4ee5\u8fd9\u65f6\u5019\u8fd9\u4e2a\u6d41\u7a0b\u5e76\u6ca1\u6709\u7ed3\u675f\u3002\u8f6e\u5230\u7b2c\u4e8c\u5c42\u4ee3\u7406\u5bf9`undo_log`\u64cd\u4f5c\u65f6\uff0c\u5c06\u8be5\u64cd\u4f5c\u653e\u5230\u7f13\u5b58\u4e2d\uff0c\u6b64\u65f6\u7f13\u5b58\u4e2d\u6709\u4e24\u4e2a\u64cd\u4f5c\uff0c\u5206\u522b\u4e3a`seata_storage\u7684UPDATE` \u548c `undo_log\u7684INSERT`\u3002\u6240\u4ee5\u8fd9\u4e5f\u5c31\u5f88\u597d\u7406\u89e3\u4e3a\u4ec0\u4e48\u9488\u5bf9`undo_log\u64cd\u4f5c`\u7684\u90a3\u6761undo_log\u683c\u5916\u5927(4KB)\uff0c\u56e0\u4e3a\u5b83\u7684`rollback_info`\u5305\u542b\u4e86\u4e24\u4e2a\u64cd\u4f5c\u3002\\n\\n\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7b2c\u4e00\u6761`SQLUndoLog`\u5bf9\u5e94\u7684after\u5feb\u7167\uff0c\u91cc\u9762\u7684branchId=`59734070967644161` pk=`84`\uff0c \u5373 `seata_storage\u5206\u652f\u5bf9\u5e94\u7684branchId`  \u548c `seata_storage\u5bf9\u5e94\u7684undo_log PK`\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cundo_log\u56de\u6eda\u65f6\u5019 \u628a`seata_storage\u5bf9\u5e94\u7684undo_log`\u5220\u6389\u4e86\u3002\\n\u90a3undo_log\u672c\u8eab\u5bf9\u5e94\u7684undo_log \u5982\u4f55\u5220\u9664\u5462\uff1f\u5728\u63a5\u4e0b\u6765\u7684\u903b\u8f91\u4e2d\u4f1a\u6839\u636exid\u548cbranchId\u5220\u9664\\n\\n2\u3001\u89e3\u6790\u7b2c\u4e00\u6761`SQLUndoLog`\uff0c\u6b64\u65f6\u5bf9\u5e94\u7684\u662f`undo_log\u7684INSERT`\u64cd\u4f5c\uff0c\u6240\u4ee5\u5176\u5bf9\u5e94\u7684\u56de\u6eda\u64cd\u4f5c\u662f`DELETE`\u3002\u56e0\u4e3a`undo_log`\u6b64\u65f6\u88ab\u5f53\u4f5c\u4e86\u4e1a\u52a1\u8868\u3002\u6240\u4ee5\u8fd9\u4e00\u6b65\u4f1a\u5c06`59734075254222849`\u5bf9\u5e94\u7684undo_log\u5220\u9664\uff0c**\u4f46\u8fd9\u4e2a\u5176\u5b9e\u662f\u4e1a\u52a1\u8868\u5bf9\u5e94\u7684\u5bf9\u5e94\u7684`undo_log`**\\n\\n3\u3001\u89e3\u6790\u7b2c\u4e8c\u6761`SQLUndoLog`\uff0c\u6b64\u65f6\u5bf9\u5e94\u7684\u662f`seata_storage\u7684UPDATE`\u64cd\u4f5c\uff0c\u8fd9\u65f6\u4f1a\u901a\u8fc7\u5feb\u7167\u5c06`seata_storage`\u5bf9\u5e94\u7684\u8bb0\u5f55\u6062\u590d\\n\\n4\u3001\u6839\u636exid\u548cbranchId\u5220\u9664undo_log\u65e5\u5fd7\uff0c\u8fd9\u91cc\u5220\u9664\u7684\u662f`undo_log \u7684 undo_log , \u5373 undo_log2`\u3002\u6240\u4ee5\uff0c\u6267\u884c\u5230\u8fd9\u91cc\uff0c\u4e24\u6761undo_log\u5c31\u5df2\u7ecf\u88ab\u5220\u9664\u4e86\\n\\n5\u3001\u63a5\u4e0b\u6765\u56de\u6eda`seata_storage`\uff0c\u56e0\u4e3a\u8fd9\u65f6\u5019\u5b83\u5bf9\u5e94\u7684undo_log\u5df2\u7ecf\u5728\u6b65\u9aa42\u5220\u6389\u4e86\uff0c\u6240\u4ee5\u6b64\u65f6\u67e5\u4e0d\u5230undo_log\uff0c\u7136\u540e\u91cd\u65b0\u751f\u6210\u4e00\u6761`status == 1 \u7684 undo_log`\\n\\n\\n# \u6848\u4f8b\u5206\u6790\\n\\n## \u80cc\u666f\\n1\u3001\u914d\u7f6e\u4e86\u4e09\u4e2a\u6570\u636e\u6e90: \u4e24\u4e2a\u7269\u7406\u6570\u636e\u6e90\u3001\u4e00\u4e2a\u903b\u8f91\u6570\u636e\u6e90\uff0c\u4f46\u662f\u4e24\u4e2a\u7269\u7406\u6570\u636e\u6e90\u5bf9\u5e94\u7684\u8fde\u63a5\u5730\u5740\u662f\u4e00\u6837\u7684\u3002\u8fd9\u6837\u505a\u6709\u610f\u601d\u5417\uff1f\\n```\\n@Bean(\\"dsMaster\\")\\nDynamicDataSource dsMaster() {\\n    return new DynamicDataSource(masterDsRoute);\\n}\\n\\n@Bean(\\"dsSlave\\")\\nDynamicDataSource dsSlave() {\\n    return new DynamicDataSource(slaveDsRoute);\\n}\\n\\n@Primary\\n@Bean(\\"masterSlave\\")\\nDataSource masterSlave(@Qualifier(\\"dsMaster\\") DataSource dataSourceMaster,\\n                        @Qualifier(\\"dsSlave\\") DataSource dataSourceSlave) throws SQLException {\\n    Map<String, DataSource> dataSourceMap = new HashMap<>(2);\\n    //\u4e3b\u5e93\\n    dataSourceMap.put(\\"dsMaster\\", dataSourceMaster);\\n    //\u4ece\u5e93\\n    dataSourceMap.put(\\"dsSlave\\", dataSourceSlave);\\n    // \u914d\u7f6e\u8bfb\u5199\u5206\u79bb\u89c4\u5219\\n    MasterSlaveRuleConfiguration masterSlaveRuleConfig = new MasterSlaveRuleConfiguration(\\n            \\"masterSlave\\", \\"dsMaster\\", Lists.newArrayList(\\"dsSlave\\")\\n    );\\n    Properties shardingProperties = new Properties();\\n    shardingProperties.setProperty(\\"sql.show\\", \\"true\\");\\n    shardingProperties.setProperty(\\"sql.simple\\", \\"true\\");\\n    // \u83b7\u53d6\u6570\u636e\u6e90\u5bf9\u8c61\\n    DataSource dataSource = MasterSlaveDataSourceFactory.createDataSource(dataSourceMap, masterSlaveRuleConfig, shardingProperties);\\n    log.info(\\"datasource initialized!\\");\\n    return dataSource;\u02da\\n}\\n```\\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d3e05c8fc0294a8caf4d0883a4676750~tplv-k3u1fbpfcp-watermark.image)\\n\\n2\u3001\u5f00\u542fseata\u7684\u6570\u636e\u6e90\u52a8\u6001\u4ee3\u7406\uff0c\u6839\u636eseata\u7684\u6570\u636e\u6e90\u4ee3\u7406\u903b\u8f91\u53ef\u4ee5\u77e5\u9053\uff0c\u6700\u7ec8\u4f1a\u751f\u6210\u4e09\u4e2a\u4ee3\u7406\u6570\u636e\u6e90\uff0c\u539f\u751f\u6570\u636e\u6e90\u548c\u4ee3\u7406\u6570\u636e\u6e90\u7684\u5173\u7cfb\u7f13\u5b58\u5728`DataSourceProxyHolder.dataSourceProxyMap`\u4e2d\uff0c\u5047\u5982\u539f\u751f\u6570\u636e\u6e90\u548c\u4ee3\u7406\u6570\u636e\u6e90\u5bf9\u5e94\u7684\u5173\u7cfb\u5982\u4e0b\uff1a\\n```\\ndsMaster(DynamicDataSource)           =>       dsMasterProxy(DataSourceProxy)\\ndsSlave(DynamicDataSource)           =>       dsSlaveProxy(DataSourceProxy)\\nmasterSlave(MasterSlaveDataSource)       =>       masterSlaveProxy(DataSourceProxy)\\n```\\n\u6240\u4ee5\uff0c\u6700\u7ec8\u5728IOC\u5bb9\u5668\u4e2d\u5b58\u5728\u7684\u6570\u636e\u6e90\u662f\u8fd9\u4e09\u4e2a\uff1a dsMasterProxy \u3001 dsSlaveProxy \u3001 masterSlaveProxy \u3002\u6839\u636e@Primary\u7684\u7279\u6027\u53ef\u4ee5\u77e5\u9053\uff0c\u5f53\u6211\u4eec\u4ece\u5bb9\u5668\u4e2d\u83b7\u53d6\u4e00\u4e2aDataSource\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u8fd4\u56de\u7684\u5c31\u662f\u4ee3\u7406\u6570\u636e\u6e90 masterSlaveProxy\\n\\n\\n>\u5bf9shardingjdbc\u6ca1\u6709\u5177\u4f53\u7684\u7814\u7a76\u8fc7\uff0c\u53ea\u662f\u6839\u636edebug\u65f6\u770b\u5230\u7684\u4ee3\u7801\u731c\u6d4b\u5b83\u7684\u5de5\u4f5c\u673a\u5236\uff0c\u53c8\u4e0d\u5bf9\u7684\u5730\u65b9\uff0c\u8fd8\u8bf7\u5927\u4f6c\u6307\u51fa\u6765\\n\\n`masterSlaveProxy`\u53ef\u4ee5\u770b\u6210\u662f`\u88ab DataSourceProxy \u5305\u88c5\u540e\u7684 MasterSlaveDataSource`\u3002\u6211\u4eec\u53ef\u4ee5\u5927\u80c6\u7684\u731c\u6d4b`MasterSlaveDataSource`\u5e76\u4e0d\u662f\u4e00\u4e2a\u7269\u7406\u6570\u636e\u6e90\uff0c\u800c\u662f\u4e00\u4e2a\u903b\u8f91\u6570\u636e\u6e90\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u8ba4\u4e3a\u91cc\u9762\u5305\u542b\u4e86\u8def\u7531\u7684\u903b\u8f91\u3002\u5f53\u6211\u4eec\u83b7\u53d6\u4e00\u4e2a\u8fde\u63a5\u65f6\uff0c\u4f1a\u901a\u8fc7\u91cc\u9762\u7684\u8def\u7531\u89c4\u5219\u9009\u62e9\u5230\u5177\u4f53\u7684\u7269\u7406\u6570\u636e\u6e90\uff0c\u7136\u540e\u901a\u8fc7\u8be5\u7269\u7406\u6570\u636e\u6e90\u83b7\u53d6\u4e00\u4e2a\u771f\u5b9e\u7684\u8fde\u63a5\u3002\\n\u8def\u7531\u89c4\u5219\u5e94\u8be5\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\uff0c\u6839\u636edebug\u65f6\u89c2\u5bdf\u5230\u7684\u73b0\u8c61\uff0c\u9ed8\u8ba4\u7684\u8def\u7531\u89c4\u5219\u5e94\u8be5\u662f\uff1a\\n  1. \u9488\u5bf9select \u8bfb\u64cd\u4f5c\uff0c\u4f1a\u8def\u7531\u5230\u4ece\u5e93\uff0c\u5373\u6211\u4eec\u7684 dsSlave\\n  2. \u9488\u5bf9update \u5199\u64cd\u4f5c\uff0c\u4f1a\u8def\u7531\u5230\u4e3b\u5e93\uff0c\u5373\u6211\u4eec\u7684 dsMaster\\n\\n3\u3001\u6bcf\u4e2aDataSourceProxy\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u4f1a\u89e3\u6790\u8be5\u771f\u5b9eDataSource\u7684\u8fde\u63a5\u5730\u5740\uff0c\u7136\u540e\u5c06\u8be5`\u8fde\u63a5\u5730\u5740\u548cDataSourceProxy\u672c\u8eab`\u7ef4\u62a4`DataSourceManager.dataSourceCache`\u4e2d\u3002`DataSourceManager.dataSourceCache`\u6709\u4e00\u4e2a\u4f5c\u7528\u662f\u7528\u4e8e\u56de\u6eda\uff1a\u56de\u6eda\u65f6\u6839\u636e\u8fde\u63a5\u5730\u5740\u627e\u5230\u5bf9\u5e94\u7684`DataSourceProxy`,\u7136\u540e\u57fa\u4e8e\u8be5`DataSourceProxy`\u505a\u56de\u6eda\u64cd\u4f5c\u3002\\n\u4f46\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e09\u4e2a\u6570\u636e\u6e90\u89e3\u6790\u51fa\u6765\u7684\u8fde\u63a5\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u5c31\u662fkey\u91cd\u590d\u4e86\uff0c\u6240\u4ee5\u5728`DataSourceManager.dataSourceCache`\u4e2d\u4e2d\uff0c\u5f53\u8fde\u63a5\u5730\u76f8\u540c\u65f6\uff0c\u540e\u6ce8\u518c\u7684\u6570\u636e\u6e90\u4f1a\u8986\u76d6\u5df2\u5b58\u5728\u7684\u3002\u5373\uff1a `DataSourceManager.dataSourceCache`\u6700\u7ec8\u5b58\u5728\u7684\u662f`masterSlaveProxy`,\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u7ec8\u4f1a\u901a\u8fc7`masterSlaveProxy`\u8fdb\u884c\u56de\u6eda\uff0c\u8fd9\u70b9\u5f88\u91cd\u8981\u3002\\n\\n4\u3001\u6d89\u53ca\u5230\u7684\u8868\uff1a\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u671f\u5f85\u7684\u5c31\u4e00\u4e2a\u4e1a\u52a1\u8868`seata_account`\uff0c\u4f46\u56e0\u4e3a\u91cd\u590d\u4ee3\u7406\u95ee\u9898\uff0c\u5bfc\u81f4seata\u5c06undo_log\u4e5f\u5f53\u6210\u4e86\u4e00\u4e2a\u4e1a\u52a1\u8868\\n  1. seata_account\\n  2. undo_log\\n\\n\u597d\u4e86\uff0c\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u80cc\u666f\uff0c\u63a5\u4e0b\u6765\u8fdb\u5165Seata\u73af\u8282\\n\\n\\n## \u9700\u6c42\\n\u6211\u4eec\u7684\u9700\u6c42\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5728\u5206\u652f\u4e8b\u52a1\u91cc\u9762\u6267\u884c\u4e00\u6761\u7b80\u5355\u7684update\u64cd\u4f5c\uff0c\u66f4\u65b0`seata_account`\u7684count\u503c\u3002\u5728\u66f4\u65b0\u5b8c\u4e4b\u540e\uff0c\u624b\u52a8\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u89e6\u53d1\u5168\u5c40\u4e8b\u52a1\u7684\u56de\u6eda\u3002\\n\u4e3a\u4e86\u66f4\u4fbf\u4e8e\u6392\u67e5\u95ee\u9898\uff0c\u51cf\u5c11\u5e72\u6270\uff0c\u6211\u4eec\u5168\u5c40\u4e8b\u52a1\u4e2d\u5c31\u4f7f\u7528\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\uff0c\u6ca1\u6709\u5176\u5b83\u5206\u652f\u4e8b\u52a1\u4e86\u3002SQL\u5982\u4e0b:\\n```\\nupdate seata_account set count = count - 1 where id = 100;\\n```\\n\\n## \u95ee\u9898\u73b0\u8c61\\n\\nClient\uff1a\u5728\u63a7\u5236\u53f0\u65e5\u5fd7\u4e2d\uff0c\u4e0d\u65ad\u91cd\u590d\u6253\u5370\u4ee5\u4e0b\u65e5\u5fd7\\n1. \u4ee5\u4e0a\u65e5\u5fd7\u6253\u5370\u7684\u95f4\u9694\u4e3a20s\uff0c\u800c\u6211\u67e5\u770b\u4e86\u6570\u636e\u5e93\u7684`innodb_lock_wait_timeout`\u5c5e\u6027\u503c\uff0c\u521a\u597d\u5c31\u662f20\uff0c\u8bf4\u660e\u6bcf\u6b21\u56de\u6eda\u8bf7\u6c42\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u90fd\u56e0\u4e3a\u83b7\u53d6\u9501\u8d85\u65f6(20)\u800c\u56de\u6eda\u5931\u8d25\\n2. \u4e3a\u4ec0\u4e48\u4f1a\u6ca1\u8fc720s\u6253\u5370\u4e00\u6b21\uff1f\u56e0\u4e3aServer\u7aef\u4f1a\u6709\u5b9a\u65f6\u5904\u7406\u56de\u6eda\u8bf7\u6c42\\n\\n```\\n// \u5206\u652f\u4e8b\u52a1\u5f00\u59cb\u56de\u6eda\\nBranch rollback start: 172.16.120.59:23004:59991911632711680 59991915571163137 jdbc:mysql://172.16.248.10:3306/tuya_middleware\\n\\n// undo_log\u4e8b\u52a1\u5206\u652f \u539f\u59cb\u64cd\u4f5c\u5bf9\u5e94\u662f insert, \u6240\u4ee5\u5176\u56de\u6eda\u4e3a delete\\nundoSQL undoSQL=DELETE FROM undo_log WHERE id = ?  \uff0c PK=[[id,139]] \\n// \u56e0\u4e3a\u7b2c\u4e00\u5c42\u4ee3\u7406\u5bf9\u5e94\u7684\u64cd\u4f5c\u4e5f\u5728\u4e0a\u4e0b\u6587\u4e2d\uff0cundo_log\u5206\u652f\u4e8b\u52a1 \u63d0\u4ea4\u65f6\u5019\uff0c \u5bf9\u5e94\u7684undo_log\u5305\u542b\u4e24\u4e2a\u64cd\u4f5c\\nundoSQL undoSQL=UPDATE seata_account SET money = ? WHERE id = ?  \uff0c PK=[[id,1]] \\n\\n// \u8be5\u5206\u652f\u4e8b\u52a1\u56de\u6eda\u5b8c\u6210\u4e4b\u540e\uff0c\u518d\u5220\u9664\u8be5\u5206\u652f\u4e8b\u52a1\u7684\u5bf9\u5e94\u7684 undo_log\\ndelete from undo_log where xid=172.16.120.59:23004:59991911632711680 AND branchId=59991915571163137 \\n\\n// \u629b\u51fa\u5f02\u5e38\uff0c\u63d0\u793a\u56de\u6eda\u5931\u8d25\uff0c\u5931\u8d25\u539f\u56e0\u662f`Lock wait timeout exceeded`\uff0c \u5728\u6839\u636exid\u548cbranchId\u5220\u9664undo_log\u65f6\u5931\u8d25\uff0c\u5931\u8d25\u539f\u56e0\u662f\u83b7\u53d6\u9501\u8d85\u65f6\uff0c\u8bf4\u660e\u6b64\u65f6\u6709\u53e6\u4e00\u4e2a\u64cd\u4f5c\u6301\u6709\u8be5\u8bb0\u5f55\u7684\u9501\u6ca1\u6709\u91ca\u653e\\nbranchRollback failed. branchType:[AT], xid:[172.16.120.59:23004:59991911632711680], branchId:[59991915571163137], resourceId:[jdbc:mysql://172.16.248.10:3306/tuya_middleware], applicationData:[null]. reason:[Branch session rollback failed and try again later xid = 172.16.120.59:23004:59991911632711680 branchId = 59991915571163137 Lock wait timeout exceeded; try restarting transaction]\\n```\\n\\nServer\uff1a\u6bcf20s\u6253\u5370\u4ee5\u4e0b\u65e5\u5fd7\uff0c\u8bf4\u660eserver\u5728\u4e0d\u65ad\u7684\u91cd\u8bd5\u53d1\u9001\u56de\u6eda\u8bf7\u6c42\\n```\\nRollback branch transaction fail and will retry, xid = 172.16.120.59:23004:59991911632711680 branchId = 59991915571163137\\n```\\n\\n\u5728\u8be5\u8fc7\u7a0b\u4e2d\uff0c\u6d89\u53ca\u5230\u7684SQL\u5927\u6982\u5982\u4e0b\uff1a\\n```sql\\n1. SELECT * FROM undo_log WHERE branch_id = ? AND xid = ? FOR UPDATE\\t\\t\\t\\t\\t\\t\\tslaveDS\\n2. SELECT * FROM undo_log WHERE  (id ) in (  (?)  )\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        slaveDS\\n3. DELETE FROM undo_log WHERE id = ?  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              masterDS\\n4. SELECT * FROM seata_account WHERE  (id ) in (  (?)  )\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t      masterDS\\n5. UPDATE seata_account SET money = ? WHERE id = ?  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        masterDS\\n6. DELETE FROM undo_log WHERE branch_id = ? AND xid = ?\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t      masterDS\\n```\\n\\n\\n\u6b64\u65f6\u67e5\u770b\u6570\u636e\u5e93\u7684 \u4e8b\u52a1\u60c5\u51b5\u3001\u9501\u60c5\u51b5 \u3001\u9501\u7b49\u5f85\u5173\u7cfb \\n1\u3001\u67e5\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4e8b\u52a1\\n```sql\\nSELECT * FROM information_schema.INNODB_TRX;\\n```\\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1d9852b91a9949f781e1f90bffe95fbf~tplv-k3u1fbpfcp-watermark.image)\\n\\n2\u3001\u67e5\u5f53\u524d\u9501\u60c5\u51b5\\n```sql\\nSELECT * FROM information_schema.INNODB_LOCKs;\\n```\\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1a29748a3af34e7c90e3aa7cb78564bc~tplv-k3u1fbpfcp-watermark.image)\\n\\n3\u3001\u67e5\u5f53\u524d\u9501\u7b49\u5f85\u5173\u7cfb\\n```sql\\nSELECT * FROM information_schema.INNODB_LOCK_waits;\\n\\nSELECT\\n\\tblock_trx.trx_mysql_thread_id AS \u5df2\u7ecf\u6301\u6709\u9501\u7684sessionID,\\n\\trequest_trx.trx_mysql_thread_id AS \u6b63\u5728\u7533\u8bf7\u9501\u7684sessionID,\\n\\tblock_trx.trx_query AS \u5df2\u7ecf\u6301\u6709\u9501\u7684SQL\u8bed\u53e5,\\n\\trequest_trx.trx_query AS \u6b63\u5728\u7533\u8bf7\u9501\u7684SQL\u8bed\u53e5,\\n\\twaits.blocking_trx_id AS \u5df2\u7ecf\u6301\u6709\u9501\u7684\u4e8b\u52a1ID,\\n\\twaits.requesting_trx_id AS \u6b63\u5728\u7533\u8bf7\u9501\u7684\u4e8b\u52a1ID,\\n\\twaits.requested_lock_id AS \u9501\u5bf9\u8c61\u7684ID,\\n\\tlocks.lock_table AS lock_table, \\t\\t\\t\\t\\t-- \u9501\u5bf9\u8c61\u6240\u9501\u5b9a\u7684\u8868\\n\\tlocks.lock_type AS lock_type, \\t\\t\\t\\t\\t\\t-- \u9501\u7c7b\u578b\\n\\tlocks.lock_mode AS lock_mode \\t\\t\\t\\t\\t\\t\\t-- \u9501\u6a21\u5f0f\\nFROM\\n\\tinformation_schema.innodb_lock_waits AS waits\\n\\tINNER JOIN information_schema.innodb_trx AS block_trx ON waits.blocking_trx_id = block_trx.trx_id\\n\\tINNER JOIN information_schema.innodb_trx AS request_trx ON waits.requesting_trx_id = request_trx.trx_id\\n\\tINNER JOIN information_schema.innodb_locks AS locks ON waits.requested_lock_id = locks.lock_id;\\n```\\n![](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4ca5b50cab534a69a49c3e470518e3b6~tplv-k3u1fbpfcp-watermark.image)\\n\\n\\n\\n1. \u6d89\u53ca\u5230\u5230\u8bb0\u5f55\u4e3a `branch_id = 59991915571163137 AND xid = 172.16.120.59:23004:59991911632711680`\\n2. \u4e8b\u52a1ID`1539483284`\u6301\u6709\u8be5\u8bb0\u5f55\u7684\u9501\uff0c\u4f46\u662f\u5b83\u5bf9\u5e94\u7684SQL\u4e3a\u7a7a\uff0c\u90a3\u5e94\u8be5\u662f\u5728\u7b49\u5f85commit\\n3. \u4e8b\u52a1ID`1539483286`\u5728\u5c1d\u8bd5\u83b7\u53d6\u8be5\u8bb0\u5f55\u7684\u9501\uff0c\u4f46\u4ece\u65e5\u5fd7\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b83\u4e00\u76f4\u9501\u7b49\u5f85\u8d85\u65f6\\n\\n\u5927\u6982\u53ef\u4ee5\u731c\u6d4b\u662f `select for update` \u548c `delete from undo ...` \u53d1\u751f\u4e86\u51b2\u7a81\u3002\u6839\u636e\u4ee3\u7801\u4e2d\u7684\u903b\u8f91\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u5e94\u8be5\u662f\u653e\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u63d0\u4ea4\u4e86\uff0c\u4e3a\u4ec0\u4e48\u88ab\u5206\u5f00\u5230\u4e24\u4e2a\u4e8b\u52a1\u4e86\uff1f\\n\\n\\n## \u95ee\u9898\u5206\u6790\\n\u7ed3\u5408\u4e0a\u9762\u7684\u4ecb\u7ecd\u7684\u56de\u6eda\u6d41\u7a0b\u770b\u770b\u6211\u4eec\u8fd9\u4e2a\u4f8b\u5b50\u5728\u56de\u6eda\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\\n1. \u5148\u83b7\u53d6\u6570\u636e\u6e90\uff0c\u6b64\u65f6dataSourceProxy.getPlainConnection()\u83b7\u53d6\u5230\u7684\u662f`MasterSlaveDataSource`\u6570\u636e\u6e90\\n2. \u5728`select for update`\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u901a\u8fc7`MasterSlaveDataSource`\u83b7\u53d6\u4e00\u4e2a`Connection`\uff0c\u524d\u9762\u8bf4\u5230\u8fc7`MasterSlaveDataSource`\u662f\u4e00\u4e2a\u903b\u8f91\u6570\u636e\u6e90\uff0c\u91cc\u9762\u6709\u8def\u7531\u903b\u8f91\uff0c\u6839\u636e\u4e0a\u9762\u4ecb\u7ecd\u7684\uff0c\u8fd9\u65f6\u5019\u62ff\u5230\u7684\u662f`dsSlave`\u7684`Connection`\\n3. \u5728\u6267\u884c`delete from undo ...`\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u8fd9\u65f6\u5019\u62ff\u5230\u7684\u662f`dsMaster`\u7684`Connection`\\n4. \u867d\u7136`dsSlave`\u548c`dsMaster`\u5bf9\u5e94\u7684\u662f\u76f8\u540c\u7684\u5730\u5740\uff0c\u4f46\u6b64\u65f6\u83b7\u53d6\u5230\u7684\u80af\u5b9a\u662f\u4e0d\u540c\u7684\u8fde\u63a5\uff0c\u6240\u4ee5\u6b64\u65f6\u4e24\u4e2a\u64cd\u4f5c\u80af\u5b9a\u662f\u5206\u5e03\u5728\u4e24\u4e2a\u4e8b\u52a1\u4e2d\\n5. \u6267\u884c`select for update`\u7684\u4e8b\u52a1\uff0c\u4f1a\u4e00\u76f4\u7b49\u5f85\u76f4\u5230\u5220\u9664undo_log\u5b8c\u6210\u624d\u4f1a\u63d0\u4ea4\\n6. \u6267\u884c`delete from undo ...`\u7684\u4e8b\u52a1\uff0c\u4f1a\u4e00\u76f4\u7b49\u5f85`select for update`\u7684\u4e8b\u52a1\u91ca\u653e\u9501\\n7. \u5178\u578b\u7684\u6b7b\u9501\u95ee\u9898\\n\\n## \u9a8c\u8bc1\u731c\u60f3\\n\u6211\u5c1d\u8bd5\u7528\u4e86\u4e24\u4e2a\u65b9\u6cd5\u9a8c\u8bc1\u8fd9\u4e2a\u95ee\u9898\uff1a\\n1. \u4fee\u6539Seata\u4ee3\u7801\uff0c\u5c06`select for update`\u6539\u6210`select`\uff0c\u6b64\u65f6\u5728\u67e5\u8be2undo_log\u5c31\u4e0d\u9700\u8981\u6301\u6709\u8be5\u8bb0\u5f55\u7684\u9501\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u9020\u6210\u6b7b\u9501\\n\\n\\n2. \u4fee\u6539\u6570\u636e\u6e90\u4ee3\u7406\u903b\u8f91\uff0c\u8fd9\u624d\u662f\u95ee\u9898\u7684\u5173\u952e\uff0c\u8be5\u95ee\u9898\u4e3b\u8981\u539f\u56e0\u4e0d\u662f`select for update`\u3002\u5728\u6b64\u4e4b\u524d\u591a\u5c42\u4ee3\u7406\u95ee\u9898\u5df2\u7ecf\u4ea7\u751f\uff0c\u7136\u540e\u624d\u4f1a\u9020\u6210\u6b7b\u9501\u95ee\u9898\u3002\u4ece\u5934\u5230\u5c3e\u6211\u4eec\u5c31\u4e0d\u5e94\u8be5\u5bf9`masterSlave`\u6570\u636e\u6e90\u8fdb\u884c\u4ee3\u7406\u3002\u5b83\u53ea\u662f\u4e00\u4e2a\u903b\u8f91\u6570\u636e\u6e90\uff0c\u4e3a\u4ec0\u4e48\u8981\u5bf9\u5b83\u8fdb\u884c\u4ee3\u7406\u5462\uff1f\u5982\u679c\u4ee3\u7406`masterSlave`\uff0c\u5c31\u4e0d\u4f1a\u9020\u6210\u591a\u5c42\u4ee3\u7406\u95ee\u9898\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u9020\u6210\u5220\u9664undo_log\u65f6\u7684\u6b7b\u9501\u95ee\u9898\\n\\n\\n## \u6700\u7ec8\u5b9e\u73b0\\n`masterSlave`\u4e5f\u662f\u4e00\u4e2a`DataSource`\u7c7b\u578b\uff0c\u8be5\u5982\u4f55\u4ec5\u4ec5\u5bf9`dsMaster` \u548c `dsSlave` \u4ee3\u7406\u800c\u4e0d\u5bf9`masterSlave`\u4ee3\u7406\u5462\uff1f\u89c2\u5bdf`SeataAutoDataSourceProxyCreator#shouldSkip`\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7EnableAutoDataSourceProxy\u6ce8\u89e3\u7684`excludes`\u5c5e\u6027\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\\n```\\n@Override\\nprotected boolean shouldSkip(Class<?> beanClass, String beanName) {\\n    return SeataProxy.class.isAssignableFrom(beanClass) ||\\n            DataSourceProxy.class.isAssignableFrom(beanClass) ||\\n            !DataSource.class.isAssignableFrom(beanClass) ||\\n            Arrays.asList(excludes).contains(beanClass.getName());\\n}\\n```\\n\u5373: \u5c06\u6570\u636e\u6e90\u81ea\u52a8\u4ee3\u7406\u5173\u95ed\uff0c\u7136\u540e\u5728\u542f\u52a8\u7c7b\u52a0\u4e0a\u8fd9\u4e2a\u6ce8\u89e3\\n````\\n@EnableAutoDataSourceProxy(excludes = {\\"org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource\\"})\\n````\\n\\n\\n# \u81ea\u52a8\u4ee3\u7406\u5728\u65b0\u7248\u672c\u4e2d\u7684\u4f18\u5316\\n\u56e0\u4e3a`Seata 1.4.0`\u8fd8\u6ca1\u6709\u6b63\u5f0f\u53d1\u5e03\uff0c\u6211\u76ee\u524d\u770b\u7684\u662f`1.4.0-SNAPSHOT`\u7248\u672c\u7684\u4ee3\u7801\uff0c\u5373\u5f53\u524d\u65f6\u95f4`ddevelop`\u5206\u652f\u6700\u65b0\u7684\u4ee3\u7801\\n\\n## \u4ee3\u7801\u6539\u52a8\\n\u4e3b\u8981\u6539\u52a8\u5982\u4e0b\uff0c\u4e00\u4e9b\u5c0f\u7684\u7ec6\u8282\u5c31\u4e0d\u8fc7\u591a\u8bf4\u660e\u4e86\uff1a\\n1. `DataSourceProxyHolder`\u8c03\u6574\\n2. `DataSourceProxy`\u8c03\u6574\\n3. `SeataDataSourceBeanPostProcessor`\u65b0\u589e\\n\\n### DataSourceProxyHolder\\n\u5728\u8fd9\u4e2a\u7c7b\u6539\u52a8\u4e2d\uff0c\u6700\u4e3b\u8981\u662f\u5176`putDataSource`\u65b9\u6cd5\u7684\u6539\u52a8\\n```java\\npublic SeataDataSourceProxy putDataSource(DataSource dataSource, BranchType dataSourceProxyMode) {\\n    DataSource originalDataSource;\\n    if (dataSource instanceof SeataDataSourceProxy) {\\n        SeataDataSourceProxy dataSourceProxy = (SeataDataSourceProxy) dataSource;\\n        // \u5982\u679c\u662f\u4ee3\u7406\u6570\u636e\u6e90\uff0c\u5e76\u4e14\u548c\u5f53\u524d\u5e94\u7528\u914d\u7f6e\u7684\u6570\u636e\u6e90\u4ee3\u7406\u6a21\u5f0f(AT/XA)\u4e00\u6837, \u5219\u76f4\u63a5\u8fd4\u56de\\n        if (dataSourceProxyMode == dataSourceProxy.getBranchType()) {\\n            return (SeataDataSourceProxy)dataSource;\\n        }\\n\\n        // \u5982\u679c\u662f\u4ee3\u7406\u6570\u636e\u6e90\uff0c\u548c\u5f53\u524d\u5e94\u7528\u914d\u7f6e\u7684\u6570\u636e\u6e90\u4ee3\u7406\u6a21\u5f0f(AT/XA)\u4e0d\u4e00\u6837\uff0c\u5219\u9700\u8981\u83b7\u53d6\u5176TargetDataSource,\u7136\u540e\u4e3a\u5176\u521b\u5efa\u4e00\u4e2a\u4ee3\u7406\u6570\u636e\u6e90\\n        originalDataSource = dataSourceProxy.getTargetDataSource();\\n    } else {\\n        originalDataSource = dataSource;\\n    }\\n\\n    // \u5982\u679c\u6709\u5fc5\u8981\uff0c\u57fa\u4e8e TargetDataSource \u521b\u5efa \u4ee3\u7406\u6570\u636e\u6e90\\n    return this.dataSourceProxyMap.computeIfAbsent(originalDataSource,\\n            BranchType.XA == dataSourceProxyMode ? DataSourceProxyXA::new : DataSourceProxy::new);\\n}\\n```\\n`DataSourceProxyHolder#putDataSource`\u65b9\u6cd5\u4e3b\u8981\u5728\u4e24\u4e2a\u5730\u65b9\u88ab\u7528\u5230\uff1a\u4e00\u4e2a\u662f\u5728`SeataAutoDataSourceProxyAdvice`\u5207\u9762\u4e2d\uff1b\u4e00\u4e2a\u662f\u5728`SeataDataSourceBeanPostProcessor`\u4e2d\u3002\\n\u8fd9\u6bb5\u5224\u65ad\u4e3a\u6211\u4eec\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f\u6570\u636e\u6e90\u591a\u5c42\u4ee3\u7406\u95ee\u9898\u3002\u5728\u5f00\u542f\u4e86\u6570\u636e\u6e90\u81ea\u52a8\u4ee3\u7406\u7684\u524d\u63d0\u4e0b\uff0c\u601d\u8003\u4ee5\u4e0b\u573a\u666f\uff1a\\n1. \u5982\u679c\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u624b\u52a8\u6ce8\u5165\u4e86\u4e00\u4e2a`DataSourceProxy`\uff0c\u8fd9\u65f6\u5019\u5728\u5207\u9762\u8c03\u7528`DataSourceProxyHolder#putDataSource`\u65b9\u6cd5\u65f6\u4f1a\u76f4\u63a5\u8fd4\u56de\u8be5`DataSourceProxy`\u672c\u8eab\uff0c\u800c\u4e0d\u4f1a\u4e3a\u5176\u518d\u521b\u5efa\u4e00\u4e2a`DataSourceProxy`\\n2. \u5982\u679c\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u624b\u52a8\u6ce8\u5165\u4e86\u4e00\u4e2a`DruidSource`\uff0c\u8fd9\u65f6\u5019\u5728\u5207\u9762\u8c03\u7528`DataSourceProxyHolder#putDataSource`\u65b9\u6cd5\u65f6\u4f1a\u4e3a\u5176\u518d\u521b\u5efa\u4e00\u4e2a`DataSourceProxy`\u5e76\u8fd4\u56de\\n\\n\u8fd9\u6837\u770b\u597d\u50cf\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u6709\u6ca1\u6709\u53ef\u80fd\u4f1a\u6709\u5176\u5b83\u7684\u95ee\u9898\u5462\uff1f\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\\n```java\\n@Bean\\npublic DataSourceProxy dsA(){\\n    return new DataSourceProxy(druidA)\\n}\\n\\n@Bean\\npublic DataSourceProxy dsB(DataSourceProxy dsA){\\n    return new DataSourceProxy(dsA)\\n}\\n```\\n1. \u8fd9\u6837\u5199\u80af\u5b9a\u662f\u4e0d\u5bf9\uff0c\u4f46\u5982\u679c\u4ed6\u5c31\u8981\u8fd9\u6837\u5199\u4f60\u4e5f\u6ca1\u529e\u6cd5\\n2. `dsA`\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46`dsB`\u8fd8\u662f\u4f1a\u4ea7\u751f\u53cc\u5c42\u4ee3\u7406\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6b64\u65f6`dsB \u7684 TargetDataSource`\u662f`dsA`\\n3. \u8fd9\u5c31\u6d89\u53ca\u5230`DataSourceProxy`\u7684\u6539\u52a8\\n\\n### DataSourceProxy\\n```java\\npublic DataSourceProxy(DataSource targetDataSource, String resourceGroupId) {\\n    // \u4e0b\u9762\u8fd9\u4e2a\u5224\u65ad\uff0c\u4fdd\u8bc1\u4e86\u5728\u6211\u4eec\u4f20\u5165\u4e00\u4e2aDataSourceProxy\u7684\u65f6\u5019\uff0c\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u53cc\u5c42\u4ee3\u7406\u95ee\u9898\\n    if (targetDataSource instanceof SeataDataSourceProxy) {\\n        LOGGER.info(\\"Unwrap the target data source, because the type is: {}\\", targetDataSource.getClass().getName());\\n        targetDataSource = ((SeataDataSourceProxy) targetDataSource).getTargetDataSource();\\n    }\\n    this.targetDataSource = targetDataSource;\\n    init(targetDataSource, resourceGroupId);\\n}\\n```\\n\\n### SeataDataSourceBeanPostProcessor\\n```java\\npublic class SeataDataSourceBeanPostProcessor implements BeanPostProcessor {\\n    private static final Logger LOGGER = LoggerFactory.getLogger(SeataDataSourceBeanPostProcessor.class);\\n\\n    ......\\n\\n    @Override\\n    public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {\\n        if (bean instanceof DataSource) {\\n            //When not in the excludes, put and init proxy.\\n            if (!excludes.contains(bean.getClass().getName())) {\\n                //Only put and init proxy, not return proxy.\\n                DataSourceProxyHolder.get().putDataSource((DataSource) bean, dataSourceProxyMode);\\n            }\\n\\n            //If is SeataDataSourceProxy, return the original data source.\\n            if (bean instanceof SeataDataSourceProxy) {\\n                LOGGER.info(\\"Unwrap the bean of the data source,\\" +\\n                    \\" and return the original data source to replace the data source proxy.\\");\\n                return ((SeataDataSourceProxy) bean).getTargetDataSource();\\n            }\\n        }\\n        return bean;\\n    }\\n}\\n```\\n1. `SeataDataSourceBeanPostProcessor`\u5b9e\u73b0\u4e86`BeanPostProcessor`\u63a5\u53e3\uff0c\u5728\u4e00\u4e2abean\u521d\u59cb\u5316\u540e\uff0c\u4f1a\u6267\u884c`BeanPostProcessor#postProcessAfterInitialization`\u65b9\u6cd5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728`postProcessAfterInitialization`\u65b9\u6cd5\u4e2d\uff0c\u8fd9\u65f6\u5019\u7684bean\u5df2\u7ecf\u662f\u53ef\u7528\u72b6\u6001\u4e86\\n2. \u4e3a\u4ec0\u4e48\u8981\u63d0\u4f9b\u8fd9\u4e48\u4e00\u4e2a\u7c7b\u5462\uff1f\u4ece\u5b83\u7684\u4ee3\u7801\u4e0a\u6765\u770b\uff0c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u518dbean\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u4e3a\u6570\u636e\u6e90\u521d\u59cb\u5316\u5bf9\u5e94\u7684`DataSourceProxy`\uff0c\u4f46\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u5462\uff1f\\n>\u56e0\u4e3a\u6709\u4e9b\u6570\u636e\u6e90\u5728\u5e94\u7528\u542f\u52a8\u4e4b\u540e\uff0c\u53ef\u80fd\u5e76\u4e0d\u4f1a\u521d\u59cb\u5316(\u5373\u4e0d\u4f1a\u8c03\u7528\u6570\u636e\u6e90\u7684\u76f8\u5173\u65b9\u6cd5)\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b`SeataDataSourceBeanPostProcessor`\u7c7b\uff0c\u90a3\u4e48\u5c31\u53ea\u6709\u5728`SeataAutoDataSourceProxyAdvice`\u5207\u9762\u4e2d\u624d\u4f1a\u89e6\u53d1`DataSourceProxyHolder#putDataSource`\u65b9\u6cd5\u3002\u5047\u5982\u6709\u4e00\u4e2a\u5ba2\u6237\u7aef\u5728\u56de\u6eda\u7684\u65f6\u5019\u5b95\u673a\u4e86\uff0c\u5728\u91cd\u542f\u4e4b\u540e\uff0cServer\u7aef\u901a\u8fc7\u5b9a\u65f6\u4efb\u52a1\u5411\u5176\u6d3e\u53d1\u56de\u6eda\u8bf7\u6c42\uff0c\u8fd9\u65f6\u5019\u5ba2\u6237\u7aef\u9700\u8981\u5148\u6839\u636e`rsourceId`(\u8fde\u63a5\u5730\u5740)\u627e\u5230\u5bf9\u5e94\u7684`DatasourceProxy`\u3002\u4f46\u5982\u679c\u5728\u6b64\u4e4b\u524d\u5ba2\u6237\u7aef\u8fd8\u6ca1\u6709\u4e3b\u52a8\u89e6\u53d1\u6570\u636e\u6e90\u7684\u76f8\u5173\u65b9\u6cd5\uff0c\u5c31\u4e0d\u4f1a\u8fdb\u5165`SeataAutoDataSourceProxyAdvice`\u5207\u9762\u903b\u8f91\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u4e3a\u8be5\u6570\u636e\u6e90\u521d\u59cb\u5316\u5bf9\u5e94\u7684`DataSourceProxy`\uff0c\u4ece\u800c\u5bfc\u81f4\u56de\u6eda\u5931\u8d25\\n\\n## \u591a\u5c42\u4ee3\u7406\u603b\u7ed3\\n\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u5927\u6982\u5df2\u7ecf\u77e5\u9053\u4e86seata\u5728\u907f\u514d\u591a\u5c42\u4ee3\u7406\u4e0a\u7684\u4e00\u4e9b\u4f18\u5316\uff0c\u4f46\u5176\u5b9e\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u9700\u8981\u6ce8\u610f\uff1a**\u903b\u8f91\u6570\u636e\u6e90\u7684\u4ee3\u7406**\\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6910095aadab436eaffe03a752e44240~tplv-k3u1fbpfcp-watermark.image)\\n\\n\u8fd9\u65f6\u5019\u7684\u8c03\u7528\u5173\u7cfb\u4e3a\uff1a `masterSlaveProxy ->\u3000masterSlave ->  masterproxy/slaveProxy ->  master/slave`\\n\\n\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7`excludes`\u5c5e\u6027\u6392\u9664\u903b\u8f91\u6570\u636e\u6e90\uff0c\u4ece\u800c\u4e0d\u4e3a\u5176\u521b\u5efa\u6570\u636e\u6e90\u4ee3\u7406\u3002\\n\\n\\n\u603b\u7ed3\u4e00\u4e0b\uff1a\\n1. \u5728\u4e3a`\u6570\u636e\u6e90`\u521d\u59cb\u5316\u5bf9\u5e94\u7684`DataSourceProxy`\u65f6\uff0c\u5224\u65ad\u662f\u5426\u6709\u5fc5\u8981\u4e3a\u5176\u521b\u5efa\u5bf9\u5e94\u7684`DataSourceProxy`\uff0c\u5982\u679c\u672c\u8eab\u5c31\u662f`DataSourceProxy`\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\\n2. \u9488\u5bf9\u4e00\u4e9b`\u6570\u636e\u6e90`\u624b\u52a8\u6ce8\u5165\u7684\u60c5\u51b5\uff0c\u4e3a\u4e86\u907f\u514d\u4e00\u4e9b\u4eba\u4e3a\u8bef\u64cd\u4f5c\u7684\u5bfc\u81f4\u7684\u591a\u5c42\u4ee3\u7406\u95ee\u9898\uff0c\u5728`DataSourceProxy`\u6784\u9020\u51fd\u6570\u4e2d\u6dfb\u52a0\u4e86\u5224\u65ad\uff0c`\u5982\u679c\u5165\u53c2TragetDatasource\u672c\u8eab\u5c31\u662f\u4e00\u4e2aDataSourceProxy\uff0c \u5219\u83b7\u53d6\u5176target\u5c5e\u6027\u4f5c\u4e3a\u65b0DataSourceProxy\u7684tragetDatasource`\\n3. \u9488\u5bf9\u4e00\u4e9b\u5176\u5b83\u60c5\u51b5\uff0c\u6bd4\u5982**\u903b\u8f91\u6570\u636e\u6e90\u4ee3\u7406\u95ee\u9898**\uff0c\u901a\u8fc7`excludes`\u5c5e\u6027\u6dfb\u52a0\u6392\u9664\u9879\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4e3a\u903b\u8f91\u6570\u636e\u6e90\u521b\u5efa`DataSourceProxy`\\n\\n\\n# \u5168\u5c40\u4e8b\u52a1\u548c\u672c\u5730\u4e8b\u52a1\u4f7f\u7528\u5efa\u8bae\\n\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5728\u4e00\u4e2a\u65b9\u6cd5\u91cc\u6d89\u53ca\u5230\u591a\u4e2aDB\u64cd\u4f5c\uff0c\u6bd4\u5982\u6d89\u53ca\u52303\u6761update\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u4e0d\u9700\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4f7f\u7528spring\u4e2d\u7684`@Transactional`\u6ce8\u89e3\uff1f\u9488\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5206\u522b\u4ece\u4e24\u4e2a\u89d2\u5ea6\u8003\u8651\uff1a\u4e0d\u4f7f\u7528`@Transactional`\u6ce8\u89e3 \u548c \u4f7f\u7528`@Transactional`\u6ce8\u89e3\\n\\n\\n## \u4e0d\u4f7f\u7528`@Transactional`\u6ce8\u89e3\\n1. \u5728\u63d0\u4ea4\u9636\u6bb5\uff0c\u56e0\u4e3a\u8be5\u5206\u652f\u4e8b\u52a1\u67093\u6761update\u64cd\u4f5c\uff0c\u6bcf\u6b21\u6267\u884cupdate\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u901a\u8fc7\u6570\u636e\u4ee3\u7406\u5411TC\u6ce8\u518c\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\uff0c\u5e76\u4e3a\u5176\u751f\u6210\u5bf9\u5e94\u7684undo_log\uff0c\u6700\u7ec83\u4e2aupdate\u64cd\u4f5c\u88ab\u5f53\u4f5c3\u4e2a\u5206\u652f\u4e8b\u52a1\u6765\u5904\u7406\\n2. \u5728\u56de\u6eda\u9636\u6bb5\uff0c\u9700\u8981\u56de\u6eda3\u4e2a\u5206\u652f\u4e8b\u52a1\\n3. \u6570\u636e\u7684\u4e00\u81f4\u6027\u901a\u8fc7seata\u5168\u5c40\u4e8b\u52a1\u6765\u4fdd\u8bc1\\n\\n## \u4f7f\u7528`@Transactional`\u6ce8\u89e3\\n1. \u5728\u63d0\u4ea4\u9636\u6bb5\uff0c3\u4e2aupdate\u64cd\u4f5c\u88ab\u5f53\u4f5c\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\u6765\u63d0\u4ea4\uff0c\u6240\u4ee5\u6700\u7ec8\u53ea\u4f1a\u6ce8\u518c\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\\n2. \u5728\u56de\u6eda\u9636\u6bb5\uff0c\u9700\u8981\u56de\u6eda1\u4e2a\u5206\u652f\u4e8b\u52a1\\n3. \u6570\u636e\u7684\u4e00\u81f4\u6027\uff1a\u8fd93\u4e2aupdate\u7684\u64cd\u4f5c\u901a\u8fc7\u672c\u5730\u4e8b\u52a1\u7684\u4e00\u81f4\u6027\u4fdd\u8bc1\uff1b\u5168\u5c40\u4e00\u81f4\u6027\u7531seata\u5168\u5c40\u4e8b\u52a1\u6765\u4fdd\u8bc1\u3002\u6b64\u65f63\u4e2aupdate\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\u800c\u5df2\\n\\n## \u7ed3\u8bba\\n\u901a\u8fc7\u4e0a\u9762\u7684\u5bf9\u6bd4\uff0c\u7b54\u6848\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u5408\u7406\u7684\u4f7f\u7528\u672c\u5730\u4e8b\u52a1\uff0c\u53ef\u4ee5\u5927\u5927\u7684\u63d0\u5347\u5168\u5c40\u4e8b\u52a1\u7684\u5904\u7406\u901f\u5ea6\u3002\u4e0a\u9762\u4ec5\u4ec5\u662f3\u4e2aDB\u64cd\u4f5c\uff0c\u5982\u679c\u4e00\u4e2a\u65b9\u6cd5\u91cc\u9762\u6d89\u53ca\u5230\u7684DB\u64cd\u4f5c\u66f4\u591a\u5462\uff0c\u8fd9\u65f6\u5019\u4e24\u79cd\u65b9\u5f0f\u7684\u5dee\u522b\u662f\u4e0d\u662f\u66f4\u5927\u5462\uff1f\\n\\n\\n\\n\u6700\u540e\uff0c\u611f\u8c22@FUNKYE\u5927\u4f6c\u4e3a\u6211\u89e3\u7b54\u4e86\u5f88\u591a\u95ee\u9898\u5e76\u63d0\u4f9b\u4e86\u5b9d\u8d35\u5efa\u8bae\uff01"},{"id":"/seata-sourcecode-client-bootstrap","metadata":{"permalink":"/zh-cn/blog/seata-sourcecode-client-bootstrap","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-sourcecode-client-bootstrap.md","title":"\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801-Client\u7aef\u542f\u52a8\u6d41\u7a0b","description":"\u3010\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801\u89e3\u8bfb\u4e8c\u3011Client\u7aef\u542f\u52a8\u6d41\u7a0b","date":"2020-08-25T00:00:00.000Z","formattedDate":"2020\u5e748\u670825\u65e5","tags":[],"readingTime":11.405,"hasTruncateMarker":false,"authors":[{"name":"\u6768\u6653\u5175|\u4e2d\u539f\u94f6\u884c"}],"frontMatter":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801-Client\u7aef\u542f\u52a8\u6d41\u7a0b","author":"\u6768\u6653\u5175|\u4e2d\u539f\u94f6\u884c","date":"2020/08/25","keywords":["fescar\u3001seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"]},"prevItem":{"title":"Seata\u6570\u636e\u6e90\u4ee3\u7406\u89e3\u6790","permalink":"/zh-cn/blog/seata-datasource-proxy"},"nextItem":{"title":"Mac\u4e0b\u7684Seata Demo\u73af\u5883\u642d\u5efa\uff08AT\u6a21\u5f0f\uff09","permalink":"/zh-cn/blog/seata-at-demo-in-mac"}},"content":"## \u3010\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801\u89e3\u8bfb\u4e8c\u3011Client\u7aef\u542f\u52a8\u6d41\u7a0b\\n\\n\u672c\u6587\u4ece\u6e90\u7801\u7684\u89d2\u5ea6\u5206\u6790\u4e00\u4e0bAT\u6a21\u5f0f\u4e0bClient\u7aef\u542f\u52a8\u6d41\u7a0b\uff0c\u6240\u8c13\u7684Client\u7aef\uff0c\u5373\u4e1a\u52a1\u5e94\u7528\u65b9\u3002\u5206\u5e03\u5f0f\u4e8b\u52a1\u5206\u4e3a\u4e09\u4e2a\u6a21\u5757\uff1aTC\u3001TM\u3001RM\u3002\u5176\u4e2dTC\u4f4d\u4e8eseata-server\u7aef\uff0c\u800cTM\u3001RM\u901a\u8fc7SDK\u7684\u65b9\u5f0f\u8fd0\u884c\u5728client\u7aef\u3002\\n\\n\u4e0b\u56fe\u5c55\u793a\u4e86Seata\u5b98\u65b9Demo\u7684\u4e00\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u573a\u666f\uff0c\u5206\u4e3a\u5982\u4e0b\u51e0\u4e2a\u5fae\u670d\u52a1\uff0c\u5171\u540c\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4e0b\u8ba2\u5355\u3001\u6263\u5e93\u5b58\u3001\u6263\u4f59\u989d\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002\\n* **BusinessService\uff1a** \u4e1a\u52a1\u670d\u52a1\uff0c\u4e0b\u5355\u670d\u52a1\u7684\u5165\u53e3\\n* **StorageService\uff1a** \u5e93\u5b58\u5fae\u670d\u52a1\uff0c\u7528\u4e8e\u6263\u51cf\u5546\u54c1\u5e93\u5b58\\n* **OrderService\uff1a** \u8ba2\u5355\u5fae\u670d\u52a1\uff0c\u521b\u5efa\u8ba2\u5355\\n* **AccountService\uff1a** \u8d26\u6237\u5fae\u670d\u52a1\uff0c\u6263\u51cf\u7528\u6237\u8d26\u6237\u7684\u4f59\u989d\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200820184156758.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTE0NTg0OA==,size_16,color_FFFFFF,t_70#pic_center)\\n\\n\u4ece\u4e0a\u56fe\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u5728AT\u6a21\u5f0f\u4e0bSeata Client\u7aef\u4e3b\u8981\u901a\u8fc7\u5982\u4e0b\u4e09\u4e2a\u6a21\u5757\u6765\u5b9e\u73b0\u5206\u5e03\u5f0f\u4e8b\u52a1\uff1a\\n* **GlobalTransactionScanner\uff1a**  GlobalTransactionScanner\u8d1f\u8d23\u521d\u59cbTM\u3001RM\u6a21\u5757\uff0c\u5e76\u4e3a\u6dfb\u52a0\u5206\u5e03\u5f0f\u4e8b\u52a1\u6ce8\u89e3\u7684\u65b9\u6cd5\u6dfb\u52a0\u62e6\u622a\u5668\uff0c\u62e6\u622a\u5668\u8d1f\u8d23\u5168\u5c40\u4e8b\u52a1\u7684\u5f00\u542f\u3001\u63d0\u4ea4\u6216\u56de\u6eda\\n* **DatasourceProxy\uff1a** DatasourceProxy\u4e3aDataSource\u6dfb\u52a0\u62e6\u622a\uff0c\u62e6\u622a\u5668\u4f1a\u62e6\u622a\u6240\u6709SQL\u6267\u884c\uff0c\u5e76\u4f5c\u4e3aRM\u4e8b\u52a1\u53c2\u4e0e\u65b9\u7684\u89d2\u8272\u53c2\u4e0e\u5206\u5e03\u5f0f\u4e8b\u52a1\u6267\u884c\u3002\\n*  **Rpc Interceptor\uff1a** \u5728\u4e0a\u4e00\u7bc7[\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801\u89e3\u8bfb\u4e00](https://blog.csdn.net/weixin_45145848/article/details/106930538)\u4e2d\u6709\u63d0\u5230\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u51e0\u4e2a\u6838\u5fc3\u8981\u70b9\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u8de8\u670d\u52a1\u5b9e\u4f8b\u4f20\u64ad\u3002Rpc Interceptor\u7684\u804c\u8d23\u5c31\u662f\u8d1f\u8d23\u5728\u591a\u4e2a\u5fae\u670d\u52a1\u4e4b\u95f4\u4f20\u64ad\u4e8b\u52a1\u3002\\n\\n## seata-spring-boot-starter\\n\u5f15\u7528seata\u5206\u5e03\u5f0f\u4e8b\u52a1SDK\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4f9d\u8d56seata-all\u6216\u8005seata-spring-boot-starter\uff0c\u63a8\u8350\u4f7f\u7528seata-spring-boot-starter\uff0c\u56e0\u4e3a\u8be5starter\u5df2\u7ecf\u81ea\u52a8\u6ce8\u5165\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u4e09\u4e2a\u6a21\u5757\uff0c\u7528\u6237\u53ea\u8981\u6dfb\u52a0\u76f8\u5e94\u7684\u914d\u7f6e\uff0c\u5728\u4e1a\u52a1\u4ee3\u7801\u6dfb\u52a0\u5168\u5c40\u5206\u5e03\u5f0f\u4e8b\u52a1\u6ce8\u89e3\u5373\u53ef\u3002\u4e0b\u9762\u4eceseata-spring-boot-starter\u9879\u76ee\u4e2d\u7684\u4ee3\u7801\u5165\u624b\uff1a\\n\\n\u5982\u4e0b\u56fe\u6240\u793a\u662fseata-spring-boot-starter\u7684\u9879\u76ee\u7ed3\u6784\uff1a\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200810204518853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTE0NTg0OA==,size_16,color_FFFFFF,t_70)\\n\u4e3b\u8981\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u6a21\u5757\uff1a\\n* **properties\uff1a** properties\u76ee\u5f55\u4e0b\u90fd\u662fSpringboot \u9002\u914dseata\u7684\u76f8\u5173\u914d\u7f6e\u7c7b\uff0c\u5373\u53ef\u4ee5\u901a\u8fc7SpringBoot\u7684\u914d\u7f6e\u65b9\u5f0f\u6765Seata\u7684\u76f8\u5173\u53c2\u6570\\n* **provider\uff1a** provider\u76ee\u5f55\u4e0b\u7684\u7c7b\u8d1f\u8d23\u628aSpringboot\u3001SpringCloud\u7684\u914d\u7f6e\u9002\u914d\u5230Seata\u914d\u7f6e\u4e2d\\n* **resources\uff1a** resources\u76ee\u5f55\u4e0b\u4e3b\u8981\u6709\u4e24\u4e2a\u6587\u4ef6\uff0cspring.factories\u7528\u4e8e\u6ce8\u518cSpringboot\u7684\u81ea\u52a8\u88c5\u914d\u7c7b\uff0cExtConfigurationProvider\u7528\u4e8e\u6ce8\u518cSpringbootConfigurationProvider\u7c7b\uff0c\u8be5Provider\u7c7b\u8d1f\u8d23\u628aSpringBoot\u7684\u76f8\u5173\u914d\u7f6e\u7c7b\u9002\u914d\u5230Seata\u4e2d\u3002\\n\\n\u5bf9\u4e8espringboot-starter\u9879\u76ee\uff0c\u6211\u4eec\u5148\u67e5\u770bresources/META-INF/spring.factories\u6587\u4ef6\uff1a\\n```properties\\n# Auto Configure\\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\nio.seata.spring.boot.autoconfigure.SeataAutoConfiguration\\n```\\n\u53ef\u4ee5\u770b\u5230\u5728spring.factories\u4e2d\u914d\u7f6e\u4e86\u81ea\u52a8\u88c5\u914d\u7c7b\uff1aSeataAutoConfiguration\uff0c\u5728\u8be5\u88c5\u914d\u7c7b\u4e2d\u4e3b\u8981\u6ce8\u5165\u4e86GlobalTransactionScanner\u548cseataAutoDataSourceProxyCreator\u4e24\u4e2a\u5b9e\u4f8b\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\\n```java\\n@ComponentScan(basePackages = \\"io.seata.spring.boot.autoconfigure.properties\\")\\n@ConditionalOnProperty(prefix = StarterConstants.SEATA_PREFIX, name = \\"enabled\\",\\n        havingValue = \\"true\\",\\n        matchIfMissing = true)\\n@Configuration\\n@EnableConfigurationProperties({SeataProperties.class})\\npublic class SeataAutoConfiguration {\\n\\n  ...\\n  \\n  // GlobalTransactionScanner\u8d1f\u8d23\u4e3a\u6dfb\u52a0GlobalTransaction\u6ce8\u89e3\u7684\u65b9\u6cd5\u6dfb\u52a0\u62e6\u622a\u5668\uff0c\\n  // \u5e76\u4e14\u8d1f\u8d23\u521d\u59cb\u5316RM\u3001TM\\n  @Bean\\n  @DependsOn({BEAN_NAME_SPRING_APPLICATION_CONTEXT_PROVIDER, BEAN_NAME_FAILURE_HANDLER})\\n  @ConditionalOnMissingBean(GlobalTransactionScanner.class)\\n  public GlobalTransactionScanner globalTransactionScanner(SeataProperties seataProperties,\\n                                                           FailureHandler failureHandler) {\\n    if (LOGGER.isInfoEnabled()) {\\n      LOGGER.info(\\"Automatically configure Seata\\");\\n    }\\n    return new GlobalTransactionScanner(seataProperties.getApplicationId(),\\n            seataProperties.getTxServiceGroup(),\\n            failureHandler);\\n  }\\n  \\n  // SeataAutoDataSourceProxyCreator\u8d1f\u8d23\u4e3aSpring\u4e2d\u7684\u6240\u6709DataSource\u751f\u6210\u4ee3\u7406\u5bf9\u8c61\uff0c\\n  // \u4ece\u800c\u5b9e\u73b0\u62e6\u622a\u6240\u6709SQL\u7684\u6267\u884c\\n  @Bean(BEAN_NAME_SEATA_AUTO_DATA_SOURCE_PROXY_CREATOR)\\n  @ConditionalOnProperty(prefix = StarterConstants.SEATA_PREFIX, name = {\\n          \\"enableAutoDataSourceProxy\\", \\"enable-auto\\" +\\n          \\"-data-source-proxy\\"}, havingValue = \\"true\\", matchIfMissing = true)\\n  @ConditionalOnMissingBean(SeataAutoDataSourceProxyCreator.class)\\n  public SeataAutoDataSourceProxyCreator seataAutoDataSourceProxyCreator(SeataProperties seataProperties) {\\n    return new SeataAutoDataSourceProxyCreator(seataProperties.isUseJdkProxy(),\\n            seataProperties.getExcludesForAutoProxying());\\n  }\\n}\\n```\\n\\n### GlobalTransactionScanner\\nGlobalTransactionScanner\u7ee7\u627f\u4e8eAutoProxyCreator\uff0cAutoProxyCreator\u662fSpring\u4e2d\u5b9e\u73b0AOP\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u62e6\u622aSpring\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\uff0c\u5224\u65ad\u662f\u5426\u9700\u8981\u8fdb\u884c\u4ee3\u7406\u3002\u4e0b\u9762\u5217\u51fa\u4e86GlobalTransactionScanner\u4e2d\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u5b57\u6bb5\u548c\u62e6\u622a\u4ee3\u7406\u7684\u6838\u5fc3\u65b9\u6cd5\uff1a\\n```java\\npublic class GlobalTransactionScanner extends AbstractAutoProxyCreator\\n        implements InitializingBean, ApplicationContextAware,\\n        DisposableBean {\\n  ...\\n  // interceptor\u5b57\u6bb5\u662f\u5bf9\u5e94\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u7684\u62e6\u622a\u5668\uff0c\\n  // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u6709\u6548\u671f\u662f\u4e00\u4e2a\u88ab\u4ee3\u7406\u5bf9\u8c61\\n  private MethodInterceptor interceptor;\\n  \\n  // globalTransactionalInterceptor\u662f\u901a\u7528\u7684Interceptor\uff0c\\n  // \u975eTCC\u4e8b\u52a1\u65b9\u5f0f\u7684\u90fd\u4f7f\u7528\u8be5Interceptor\\n  private MethodInterceptor globalTransactionalInterceptor;\\n  \\n  // PROXYED_SET\u5b58\u50a8\u5df2\u7ecf\u4ee3\u7406\u8fc7\u7684\u5b9e\u4f8b\uff0c\u9632\u6b62\u91cd\u590d\u5904\u7406\\n  private static final Set<String> PROXYED_SET = new HashSet<>();\\n  \\n  // applicationId\u662f\u4e00\u4e2a\u670d\u52a1\u7684\u552f\u4e00\u6807\u8bc6\uff0c\\n  // \u5bf9\u5e94springcloud\u9879\u76ee\u4e2d\u7684spring.application.name\\n  private final String applicationId;\\n  // \u4e8b\u52a1\u7684\u5206\u7ec4\u6807\u8bc6\uff0c\u53c2\u8003\u6587\u7ae0wiki\uff1ahttp://seata.io/zh-cn/docs/user/txgroup/transaction-group.html\\n  private final String txServiceGroup;\\n  \\n  ...\\n\\n  // \u5224\u65ad\u662f\u5426\u9700\u8981\u4ee3\u7406\u76ee\u6807\u5bf9\u8c61\uff0c\u5982\u679c\u9700\u8981\u4ee3\u7406\uff0c\u5219\u751f\u6210\u62e6\u622a\u5668\u8d4b\u503c\u5230\u7c7b\u53d8\u91cfinterceptor\u4e2d\\n  @Override\\n  protected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey) {\\n  \\t// \u5224\u65ad\u662f\u5426\u7981\u7528\u5206\u5e03\u5f0f\u4e8b\u52a1\\n    if (disableGlobalTransaction) {\\n      return bean;\\n    }\\n    try {\\n      synchronized (PROXYED_SET) {\\n        if (PROXYED_SET.contains(beanName)) {\\n          return bean;\\n        }\\n        \\n        // \u6bcf\u6b21\u5904\u7406\u4e00\u4e2a\u88ab\u4ee3\u7406\u5bf9\u8c61\u65f6\u5148\u628ainterceptor\u7f6e\u4e3anull\uff0c\u6240\u4ee5interceptor\u7684\\n        // \u751f\u547d\u5468\u671f\u662f\u4e00\u4e2a\u88ab\u4ee3\u7406\u5bf9\u8c61\uff0c\u7531\u4e8e\u662f\u5728\u53e6\u5916\u4e00\u4e2a\u65b9\u6cd5getAdvicesAndAdvisorsForBean\\n        // \u4e2d\u4f7f\u7528interceptor\uff0c\u6240\u4ee5\u8be5interceptor\u8981\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u7c7b\u53d8\u91cf\\n        interceptor = null;\\n        \\n        // \u5224\u65ad\u662f\u5426\u662fTCC\u4e8b\u52a1\u6a21\u5f0f\uff0c\u5224\u65ad\u7684\u4e3b\u8981\u4f9d\u636e\u662f\u65b9\u6cd5\u4e0a\u662f\u5426\u6709TwoPhaseBusinessAction\u6ce8\u89e3\\n        if (TCCBeanParserUtils.isTccAutoProxy(bean, beanName,\\n                applicationContext)) {\\n          // \u521b\u5efa\u4e00\u4e2aTCC\u4e8b\u52a1\u7684\u62e6\u622a\u5668\\n          interceptor =\\n                  new TccActionInterceptor(TCCBeanParserUtils.getRemotingDesc(beanName));\\n        } else {\\n          // \u83b7\u53d6\u5f85\u5904\u7406\u5bf9\u8c61\u7684class\u7c7b\u578b\\n          Class<?> serviceInterface = SpringProxyUtils.findTargetClass(bean);\\n          // \u83b7\u53d6\u5f85\u5904\u7406\u5bf9\u8c61\u7ee7\u627f\u7684\u6240\u6709\u63a5\u53e3\\n          Class<?>[] interfacesIfJdk = SpringProxyUtils.findInterfaces(bean);\\n          \\n          // \u5982\u679c\u5f85\u5904\u7406\u5bf9\u8c61\u7684class\u6216\u8005\u7ee7\u627f\u7684\u63a5\u53e3\u4e0a\u6709GlobalTransactional\u6ce8\u89e3\uff0c\\n          // \u6216\u8005\u5f85\u5904\u7406\u5bf9\u8c61\u7684class\u7684\u4efb\u4e00\u4e2a\u65b9\u6cd5\u4e0a\u6709GlobalTransactional\u6216\u8005\\n          // GlobalLock\u6ce8\u89e3\u5219\u8fd4\u56detrue\uff0c\u5373\u9700\u8981\u88ab\u4ee3\u7406\\n          if (!existsAnnotation(new Class[]{serviceInterface})\\n                  && !existsAnnotation(interfacesIfJdk)) {\\n            return bean;\\n          }\\n          \\n          // \u5982\u679cinterceptor\u4e3anull\uff0c\u5373\u4e0d\u662fTCC\u6a21\u5f0f\uff0c\\n          // \u5219\u4f7f\u7528globalTransactionalInterceptor\u4f5c\u4e3a\u62e6\u622a\u5668\\n          if (interceptor == null) {\\n            // globalTransactionalInterceptor\u53ea\u4f1a\u88ab\u521b\u5efa\u4e00\u6b21\\n            if (globalTransactionalInterceptor == null) {\\n              globalTransactionalInterceptor =\\n                      new GlobalTransactionalInterceptor(failureHandlerHook);\\n              ConfigurationCache.addConfigListener(\\n                      ConfigurationKeys.DISABLE_GLOBAL_TRANSACTION,\\n                      (ConfigurationChangeListener) globalTransactionalInterceptor);\\n            }\\n            interceptor = globalTransactionalInterceptor;\\n          }\\n        }\\n\\n        if (!AopUtils.isAopProxy(bean)) {\\n          // \u5982\u679cbean\u672c\u8eab\u4e0d\u662fProxy\u5bf9\u8c61\uff0c\u5219\u76f4\u63a5\u8c03\u7528\u7236\u7c7b\u7684wrapIfNecessary\u751f\u6210\u4ee3\u7406\u5bf9\u8c61\u5373\u53ef\\n          // \u5728\u7236\u7c7b\u4e2d\u4f1a\u8c03\u7528getAdvicesAndAdvisorsForBean\u83b7\u53d6\u5230\u4e0a\u9762\u5b9a\u4e49\u7684interceptor\\n          bean = super.wrapIfNecessary(bean, beanName, cacheKey);\\n        } else {\\n          // \u5982\u679c\u8be5bean\u5df2\u7ecf\u662f\u4ee3\u7406\u5bf9\u8c61\u4e86\uff0c\u5219\u76f4\u63a5\u5728\u4ee3\u7406\u5bf9\u8c61\u7684\u62e6\u622a\u8c03\u7528\u94feAdvisedSupport\\n          // \u4e0a\u76f4\u63a5\u6dfb\u52a0\u65b0\u7684interceptor\u5373\u53ef\u3002\\n          AdvisedSupport advised = SpringProxyUtils.getAdvisedSupport(bean);\\n          Advisor[] advisor = buildAdvisors(beanName,\\n                  getAdvicesAndAdvisorsForBean(null, null, null));\\n          for (Advisor avr : advisor) {\\n            advised.addAdvisor(0, avr);\\n          }\\n        }         \\n        // \u6807\u8bc6\u8be5beanName\u5df2\u7ecf\u5904\u7406\u8fc7\u4e86\\n        PROXYED_SET.add(beanName);\\n        return bean;\\n      }\\n    } catch (Exception exx) {\\n      throw new RuntimeException(exx);\\n    }\\n  }\\n  \\n  // \u8fd4\u56dewrapIfNecessary\u65b9\u6cd5\u4e2d\u8ba1\u7b97\u51fa\u7684interceptor\u5bf9\u8c61\\n  @Override\\n  protected Object[] getAdvicesAndAdvisorsForBean(Class beanClass, String beanName,\\n                                                  TargetSource customTargetSource)\\n          throws BeansException {\\n    return new Object[]{interceptor};\\n  }\\n}\\n```\\n\\n\u4e0a\u9762\u4ecb\u7ecd\u4e86GlobalTransactionScanner\u662f\u5982\u4f55\u901a\u8fc7\u6ce8\u89e3\u62e6\u622a\u5168\u5c40\u4e8b\u52a1\u7684\uff0c\u5177\u4f53\u62e6\u622a\u5668\u5b9e\u73b0\u4e3aTccActionInterceptor\u548cGlobalTransactionalInterceptor\uff0c\u5bf9\u4e8eAT\u6a21\u5f0f\u6765\u8bf4\u6211\u4eec\u4e3b\u8981\u5173\u5fc3GlobalTransactionalInterceptor\uff0c\u5728\u540e\u7eed\u7684\u6587\u7ae0\u4e2d\u4f1a\u4ecb\u7ecdGlobalTransactionalInterceptor\u7684\u5177\u4f53\u5b9e\u73b0\u3002\\n\\n\u53e6\u5916GloabalTransactionScanner\u8fd8\u8d1f\u8d23TM\u3001RM\u7684\u521d\u59cb\u5316\u5de5\u4f5c\uff0c\u662f\u5728initClient\u65b9\u6cd5\u4e2d\u5b9e\u73b0\u7684\uff1a\\n```java\\nprivate void initClient() {\\n    ...\\n    \\n    //\u521d\u59cb\u5316TM\\n    TMClient.init(applicationId, txServiceGroup);\\n    ...\\n    \\n    //\u521d\u59cb\u5316RM\\n    RMClient.init(applicationId, txServiceGroup);\\n\\t...\\n\\t\\n    // \u6ce8\u518cSpring shutdown\u7684\u56de\u8c03\uff0c\u7528\u6765\u91ca\u653e\u8d44\u6e90\\n    registerSpringShutdownHook();\\n\\n }\\n```\\n\\nTMClient\u3001RMClient\u90fd\u662fSeata\u57fa\u4e8eNetty\u5b9e\u73b0\u7684Rpc\u6846\u67b6\u7684\u5ba2\u6237\u7aef\u7c7b\uff0c\u53ea\u662f\u4e1a\u52a1\u903b\u8f91\u4e0d\u540c\uff0c\u7531\u4e8eTMClient\u76f8\u5bf9\u6765\u8bf4\u66f4\u7b80\u5355\u4e00\u4e9b\uff0c\u6211\u4eec\u4ee5RMClient\u4e3a\u4f8b\u770b\u4e00\u4e0b\u6e90\u7801\uff1a\\n```java\\npublic class RMClient {\\n  // RMClient\u7684init\u662f\u4e00\u4e2astatic\u65b9\u6cd5\uff0c\u521b\u5efa\u4e86\u4e00\u4e2aRmNettyRemotingClient\u5b9e\u4f8b\uff0c\u5e76\u8c03\u7528init\u65b9\u6cd5\\n  public static void init(String applicationId, String transactionServiceGroup) {\\n    RmNettyRemotingClient rmNettyRemotingClient =\\n            RmNettyRemotingClient.getInstance(applicationId, transactionServiceGroup);\\n    rmNettyRemotingClient.setResourceManager(DefaultResourceManager.get());\\n    rmNettyRemotingClient.setTransactionMessageHandler(DefaultRMHandler.get());\\n    rmNettyRemotingClient.init();\\n  }\\n}\\n```\\n\\nRmNettyRemotingClient\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a\\n```java\\n@Sharable\\npublic final class RmNettyRemotingClient extends AbstractNettyRemotingClient {\\n  // ResourceManager\u8d1f\u8d23\u5904\u7406\u4e8b\u52a1\u53c2\u4e0e\u65b9\uff0c\u652f\u6301AT\u3001TCC\u3001Saga\u4e09\u79cd\u6a21\u5f0f\\n  private ResourceManager resourceManager;\\n  // RmNettyRemotingClient\u5355\u4f8b\\n  private static volatile RmNettyRemotingClient instance;\\n  private final AtomicBoolean initialized = new AtomicBoolean(false);\\n  // \u5fae\u670d\u52a1\u7684\u552f\u4e00\u6807\u8bc6\\n  private String applicationId;\\n  // \u5206\u5e03\u5f0f\u4e8b\u52a1\u5206\u7ec4\u540d\u79f0\\n  private String transactionServiceGroup;\\n  \\n  // RMClient\u4e2dinit\u65b9\u6cd5\u4f1a\u8c03\u7528\u8be5init\u65b9\u6cd5\\n  public void init() {\\n    // \u6ce8\u518cSeata\u81ea\u5b9a\u4e49Rpc\u7684Processor\\n    registerProcessor();\\n    if (initialized.compareAndSet(false, true)) {\\n      // \u8c03\u7528\u7236\u7c7b\u7684init\u65b9\u6cd5\uff0c\u5728\u7236\u7c7b\u4e2d\u8d1f\u8d23Netty\u7684\u521d\u59cb\u5316\uff0c\u4e0eSeata-Server\u5efa\u7acb\u8fde\u63a5\\n      super.init();\\n    }\\n  }\\n  \\n  // \u6ce8\u518cSeata\u81ea\u5b9a\u4e49Rpc\u7684Processor\\n  private void registerProcessor() {\\n    // 1.\u6ce8\u518cSeata-Server\u53d1\u8d77branchCommit\u7684\u5904\u7406Processor\\n    RmBranchCommitProcessor rmBranchCommitProcessor =\\n            new RmBranchCommitProcessor(getTransactionMessageHandler(), this);\\n    super.registerProcessor(MessageType.TYPE_BRANCH_COMMIT, rmBranchCommitProcessor,\\n            messageExecutor);\\n            \\n    // 2.\u6ce8\u518cSeata-Server\u53d1\u8d77branchRollback\u7684\u5904\u7406Processor\\n    RmBranchRollbackProcessor rmBranchRollbackProcessor =\\n            new RmBranchRollbackProcessor(getTransactionMessageHandler(), this);\\n    super.registerProcessor(MessageType.TYPE_BRANCH_ROLLBACK, rmBranchRollbackProcessor\\n            , messageExecutor);\\n            \\n    // 3.\u6ce8\u518cSeata-Server\u53d1\u8d77\u5220\u9664undoLog\u7684\u5904\u7406Processor\\n    RmUndoLogProcessor rmUndoLogProcessor =\\n            new RmUndoLogProcessor(getTransactionMessageHandler());\\n    super.registerProcessor(MessageType.TYPE_RM_DELETE_UNDOLOG, rmUndoLogProcessor,\\n            messageExecutor);\\n            \\n    // 4.\u6ce8\u518cSeata-Server\u8fd4\u56deResponse\u7684\u5904\u7406Processor\uff0cClientOnResponseProcessor\\n    // \u7528\u4e8e\u5904\u7406\u7531Client\u4e3b\u52a8\u53d1\u8d77Request\uff0cSeata-Server\u8fd4\u56de\u7684Response\u3002\\n    // ClientOnResponseProcessor\u8d1f\u8d23\u628aClient\u53d1\u9001\u7684Request\u548cSeata-Server\\n    // \u8fd4\u56de\u7684Response\u5bf9\u5e94\u8d77\u6765\uff0c\u4ece\u800c\u5b9e\u73b0Rpc\\n    ClientOnResponseProcessor onResponseProcessor =\\n            new ClientOnResponseProcessor(mergeMsgMap, super.getFutures(),\\n                    getTransactionMessageHandler());\\n    super.registerProcessor(MessageType.TYPE_SEATA_MERGE_RESULT, onResponseProcessor,\\n            null);\\n    super.registerProcessor(MessageType.TYPE_BRANCH_REGISTER_RESULT,\\n            onResponseProcessor, null);\\n    super.registerProcessor(MessageType.TYPE_BRANCH_STATUS_REPORT_RESULT,\\n            onResponseProcessor, null);\\n    super.registerProcessor(MessageType.TYPE_GLOBAL_LOCK_QUERY_RESULT,\\n            onResponseProcessor, null);\\n    super.registerProcessor(MessageType.TYPE_REG_RM_RESULT, onResponseProcessor, null);\\n    \\n    // 5. \u5904\u7406Seata-Server\u8fd4\u56de\u7684Pong\u6d88\u606f\\n    ClientHeartbeatProcessor clientHeartbeatProcessor = new ClientHeartbeatProcessor();\\n    super.registerProcessor(MessageType.TYPE_HEARTBEAT_MSG, clientHeartbeatProcessor,\\n            null);\\n  }\\n}\\n```\\n\\n\u4e0a\u9762\u7684\u903b\u8f91\u770b\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u76f8\u5173\u7c7b\u4e5f\u6bd4\u8f83\u591a\uff0c\u5982\uff1a\u5404\u79cdProcessor\u3001\u5404\u79cdMessageType\u3001TransactionMessageHandler\u3001ResourceManager\u3002\u5176\u5b9e\u672c\u8d28\u4e0a\u5c31\u662fRpc\u8c03\u7528\uff0c\u5206\u4e3aRm\u4e3b\u52a8\u8c03\u7528\u548cSeata\u4e3b\u52a8\u8c03\u7528\u3002\\n* **Rm\u4e3b\u52a8\u8c03\u7528\u65b9\u6cd5\uff1a** \u5982\uff1a\u6ce8\u518c\u5206\u652f\u3001\u6c47\u62a5\u5206\u652f\u72b6\u6001\u3001\u7533\u8bf7\u5168\u5c40\u9501\u7b49\u3002Rm\u4e3b\u52a8\u8c03\u7528\u7684\u65b9\u6cd5\u90fd\u9700\u8981\u5728ClientOnResponseProcessor\u4e2d\u5904\u7406Seata-Server\u8fd4\u56de\u7684Response\\n* **Seata-Server\u4e3b\u52a8\u8c03\u7528\u65b9\u6cd5\uff1a** \u5982\uff1a\u63d0\u4ea4\u5206\u652f\u4e8b\u52a1\u3001\u56de\u6eda\u5206\u652f\u4e8b\u52a1\u3001\u5220\u9664undolog\u65e5\u5fd7\u3002Seata-Server\u4e3b\u52a8\u8c03\u7528\u7684\u65b9\u6cd5\uff0cClient\u7aef\u5206\u522b\u5bf9\u5e94\u4e0d\u540c\u7684Processor\u6765\u5904\u7406\uff0c\u5e76\u4e14\u5904\u7406\u7ed3\u675f\u540e\u8981\u8fd4\u56de\u7ed9Seata-Server\u5904\u7406\u7ed3\u679cResponse\u3002\u800c\u4e8b\u52a1\u63d0\u4ea4\u3001\u56de\u6eda\u7684\u6838\u5fc3\u5b9e\u73b0\u903b\u8f91\u90fd\u5728TransactionMessageHandler\u3001ResourceManager\u4e2d\u3002\\n\\n\u5173\u4e8eTransactionMessageHandler\u3001ResourceManager\u7684\u5177\u4f53\u5b9e\u73b0\u4e5f\u4f1a\u5728\u540e\u7eed\u7684\u7ae0\u8282\u4e2d\u8be6\u7ec6\u63cf\u8ff0\u3002\\n\\n\u4e0b\u4e00\u7bc7\u4f1a\u4ecb\u7ecd\u4e00\u4e0bSeataAutoDataSourceProxyCreator\u3001Rpc Interceptor\u662f\u5982\u4f55\u521d\u59cb\u5316\u4ee5\u53ca\u62e6\u622a\u7684\u3002"},{"id":"/seata-at-demo-in-mac","metadata":{"permalink":"/zh-cn/blog/seata-at-demo-in-mac","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-at-demo-in-mac.md","title":"Mac\u4e0b\u7684Seata Demo\u73af\u5883\u642d\u5efa\uff08AT\u6a21\u5f0f\uff09","description":"\u524d\u8a00","date":"2020-07-20T00:00:00.000Z","formattedDate":"2020\u5e747\u670820\u65e5","tags":[],"readingTime":8.785,"hasTruncateMarker":false,"authors":[{"name":"portman xu"}],"frontMatter":{"title":"Mac\u4e0b\u7684Seata Demo\u73af\u5883\u642d\u5efa\uff08AT\u6a21\u5f0f\uff09","author":"portman xu","date":"2020/07/20","keywords":["seata","\u5206\u5e03\u5f0f\u4e8b\u52a1","demo","mac","at"]},"prevItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801-Client\u7aef\u542f\u52a8\u6d41\u7a0b","permalink":"/zh-cn/blog/seata-sourcecode-client-bootstrap"},"nextItem":{"title":"Seata RPC \u6a21\u5757\u7684\u91cd\u6784\u4e4b\u8def","permalink":"/zh-cn/blog/seata-rpc-refactor"}},"content":"## \u524d\u8a00\\n\\n\u6700\u8fd1\u56e0\u4e3a\u5de5\u4f5c\u9700\u8981\uff0c\u7814\u7a76\u5b66\u4e60\u4e86Seata\u5206\u5e03\u5f0f\u4e8b\u52a1\u6846\u67b6\uff0c\u672c\u6587\u628a\u81ea\u5df1\u5b66\u4e60\u7684\u77e5\u8bc6\u8bb0\u5f55\u4e00\u4e0b\\n\\n## Seata\u603b\u89c8\\n\\n### cloc\u4ee3\u7801\u7edf\u8ba1\\n\\n\u5148\u770b\u4e00\u4e0bseata\u9879\u76eecloc\u4ee3\u7801\u7edf\u8ba1\uff08\u622a\u6b62\u52302020-07-20\uff09\\n\\n![cloc-seata](https://github.com/iportman/p/blob/master/blog/seata-at-demo-in-mac/cloc-seata.png?raw=true)\\n\\nJava\u4ee3\u7801\u884c\u6570\u5927\u7ea6\u662f 97K\\n\\n### \u4ee3\u7801\u8d28\u91cf\\n\\n\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u738750%\\n\\n![cloc-seata](https://github.com/iportman/p/blob/master/blog/seata-at-demo-in-mac/coverage.png?raw=true)\\n\\n### Demo\u4ee3\u7801\\n\\n\u672c\u6587\u8bb2\u7684Demo\u4ee3\u7801\u662fseata-samples\u9879\u76ee\u4e0b\u7684seata-samples-dubbo\u6a21\u5757\uff0c\u5730\u5740\u5982\u4e0b\uff1a\\n\\nhttps://github.com/seata/seata-samples/tree/master/dubbo\\n\\n## \u89e3\u51b3\u7684\u6838\u5fc3\u95ee\u9898\\n\\nAT\u6a21\u5f0f\u7684Demo\u4f8b\u5b50\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5178\u578b\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u573a\u666f\uff1a\\n\\n- \u5728\u4e00\u4e2a\u91c7\u8d2d\u4ea4\u6613\u4e2d\uff0c\u9700\u8981\uff1a\\n  \\n1. \u6263\u51cf\u5546\u54c1\u5e93\u5b58\\n2. \u6263\u51cf\u7528\u6237\u8d26\u53f7\u4f59\u989d\\n3. \u751f\u6210\u91c7\u8d2d\u8ba2\u5355\\n\\n- \u5f88\u660e\u663e\uff0c\u4ee5\u4e0a3\u4e2a\u6b65\u9aa4\u5fc5\u987b\uff1a\u8981\u4e48\u5168\u90e8\u6210\u529f\uff0c\u8981\u4e48\u5168\u90e8\u5931\u8d25\uff0c\u5426\u5219\u7cfb\u7edf\u7684\u6570\u636e\u4f1a\u9519\u4e71\\n- \u800c\u73b0\u5728\u6d41\u884c\u7684\u5fae\u670d\u52a1\u67b6\u6784\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u5e93\u5b58\uff0c\u8d26\u53f7\u4f59\u989d\uff0c\u8ba2\u5355\u662f3\u4e2a\u72ec\u7acb\u7684\u7cfb\u7edf\\n- \u6bcf\u4e2a\u5fae\u670d\u52a1\u6709\u81ea\u5df1\u7684\u6570\u636e\u5e93\uff0c\u76f8\u4e92\u72ec\u7acb\\n\\n\u8fd9\u91cc\u5c31\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u573a\u666f\u3002\\n\\n![\u8bbe\u8ba1\u56fe](http://seata.io/img/architecture.png)\\n\\n## \u89e3\u51b3\u65b9\u6848\\n\\nAT\u6a21\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u601d\u8def\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u4e00\u53e5\u8bdd\u6982\u62ec\u5c31\u662f\uff1a\\n\\n\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u8fc7\u7a0b\u4e2d\uff0c\u8bb0\u5f55\u5f85\u4fee\u6539\u7684\u6570\u636e\u4fee\u6539\u524d\u548c\u4fee\u6539\u540e\u7684\u503c\u5230undo_log\u8868\uff0c\u4e07\u4e00\u4ea4\u6613\u4e2d\u51fa\u73b0\u5f02\u5e38\uff0c\u901a\u8fc7\u8fd9\u4e2a\u91cc\u7684\u6570\u636e\u505a\u56de\u6eda\\n\\n\u5f53\u7136\uff0c\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u8d77\u6765\uff0c\u6211\u76f8\u4fe1\u5f88\u591a\u7ec6\u8282\u8fdc\u6ca1\u8fd9\u4e48\u7b80\u5355\u3002\\n\\n## Demo\u4ee3\u7801\u7ed3\u6784\\n\\n\u4ecegithub\u4e0aclone\u6700\u65b0\u7684\u4ee3\u7801\\n\\n```sh\\ngit clone git@github.com:seata/seata-samples.git\\n```\\n\\n\u9605\u8bfbDemo\u4ee3\u7801\u7ed3\u6784\\n\\n```sh\\n$ cd seata-samples/dubbo/\\n$ tree -C  -I \'target\' .\\n.\\n\u251c\u2500\u2500 README.md\\n\u251c\u2500\u2500 pom.xml\\n\u251c\u2500\u2500 seata-samples-dubbo.iml\\n\u2514\u2500\u2500 src\\n    \u2514\u2500\u2500 main\\n        \u251c\u2500\u2500 java\\n        \u2502   \u2514\u2500\u2500 io\\n        \u2502       \u2514\u2500\u2500 seata\\n        \u2502           \u2514\u2500\u2500 samples\\n        \u2502               \u2514\u2500\u2500 dubbo\\n        \u2502                   \u251c\u2500\u2500 ApplicationKeeper.java\\n        \u2502                   \u251c\u2500\u2500 Order.java\\n        \u2502                   \u251c\u2500\u2500 service\\n        \u2502                   \u2502   \u251c\u2500\u2500 AccountService.java\\n        \u2502                   \u2502   \u251c\u2500\u2500 BusinessService.java\\n        \u2502                   \u2502   \u251c\u2500\u2500 OrderService.java\\n        \u2502                   \u2502   \u251c\u2500\u2500 StorageService.java\\n        \u2502                   \u2502   \u2514\u2500\u2500 impl\\n        \u2502                   \u2502       \u251c\u2500\u2500 AccountServiceImpl.java\\n        \u2502                   \u2502       \u251c\u2500\u2500 BusinessServiceImpl.java\\n        \u2502                   \u2502       \u251c\u2500\u2500 OrderServiceImpl.java\\n        \u2502                   \u2502       \u2514\u2500\u2500 StorageServiceImpl.java\\n        \u2502                   \u2514\u2500\u2500 starter\\n        \u2502                       \u251c\u2500\u2500 DubboAccountServiceStarter.java\\n        \u2502                       \u251c\u2500\u2500 DubboBusinessTester.java\\n        \u2502                       \u251c\u2500\u2500 DubboOrderServiceStarter.java\\n        \u2502                       \u2514\u2500\u2500 DubboStorageServiceStarter.java\\n        \u2514\u2500\u2500 resources\\n            \u251c\u2500\u2500 file.conf\\n            \u251c\u2500\u2500 jdbc.properties\\n            \u251c\u2500\u2500 log4j.properties\\n            \u251c\u2500\u2500 registry.conf\\n            \u251c\u2500\u2500 spring\\n            \u2502   \u251c\u2500\u2500 dubbo-account-service.xml\\n            \u2502   \u251c\u2500\u2500 dubbo-business.xml\\n            \u2502   \u251c\u2500\u2500 dubbo-order-service.xml\\n            \u2502   \u2514\u2500\u2500 dubbo-storage-service.xml\\n            \u2514\u2500\u2500 sql\\n                \u251c\u2500\u2500 dubbo_biz.sql\\n                \u2514\u2500\u2500 undo_log.sql\\n\\n13 directories, 27 files\\n```\\n\\n- \u5728io.seata.samples.dubbo.starter\u5305\u4e0b\u76844\u4e2a\\\\*Starter\u7c7b\uff0c\u5206\u522b\u6a21\u62df\u4e0a\u9762\u6240\u8ff0\u76844\u4e2a\u5fae\u670d\u52a1\\n  - Account\\n  - Business\\n  - Order\\n  - Storage\\n\\n- 4\u4e2a\u670d\u52a1\u90fd\u662f\u6807\u51c6\u7684dubbo\u670d\u52a1\uff0c\u914d\u7f6e\u6587\u4ef6\u5728seata-samples/dubbo/src/main/resources/spring\u76ee\u5f55\u4e0b\\n- \u8fd0\u884cdemo\u9700\u8981\u628a\u8fd94\u4e2a\u670d\u52a1\u90fd\u542f\u52a8\u8d77\u6765\uff0cBusiness\u6700\u540e\u542f\u52a8\\n- \u4e3b\u8981\u7684\u903b\u8f91\u5728io.seata.samples.dubbo.service\uff0c4\u4e2a\u5b9e\u73b0\u7c7b\u5206\u522b\u5bf9\u5e944\u4e2a\u5fae\u670d\u52a1\u7684\u4e1a\u52a1\u903b\u8f91\\n- \u6570\u636e\u5e93\u4fe1\u606f\u7684\u914d\u7f6e\u6587\u4ef6\uff1asrc/main/resources/jdbc.properties\\n\\n### \u65f6\u5e8f\u56fe\\n\\n![cloc-seata](https://github.com/iportman/p/blob/master/blog/seata-at-demo-in-mac/timing-diagram.png?raw=true)\\n\\nOk, \u8d76\u7d27\u52a8\u624b, Make It Happen!\\n\\n## \u8fd0\u884cDemo\\n\\n### MySQL\\n\\n### \u5efa\u8868\\n\\n\u6267\u884cseata-samples/dubbo/src/main/resources/sql\u7684\u811a\u672cdubbo_biz.sql\u548cundo_log.sql\\n\\n```sh\\nmysql> show tables;\\n+-----------------+\\n| Tables_in_seata |\\n+-----------------+\\n| account_tbl     |\\n| order_tbl       |\\n| storage_tbl     |\\n| undo_log        |\\n+-----------------+\\n4 rows in set (0.01 sec)\\n```\\n\\n\u6267\u884c\u5b8c\u4e4b\u540e\uff0c\u6570\u636e\u5e93\u91cc\u5e94\u8be5\u67094\u4e2a\u8868\\n\\n\u4fee\u6539seata-samples/dubbo/src/main/resources/jdbc.properties\u6587\u4ef6\\n\\n\u6839\u636e\u4f60MySQL\u8fd0\u884c\u7684\u73af\u5883\u4fee\u6539\u53d8\u91cf\u7684\u503c\\n\\n```properties\\njdbc.account.url=jdbc:mysql://localhost:3306/seata\\njdbc.account.username=your_username\\njdbc.account.password=your_password\\njdbc.account.driver=com.mysql.jdbc.Driver\\n# storage db config\\njdbc.storage.url=jdbc:mysql://localhost:3306/seata\\njdbc.storage.username=your_username\\njdbc.storage.password=your_password\\njdbc.storage.driver=com.mysql.jdbc.Driver\\n# order db config\\njdbc.order.url=jdbc:mysql://localhost:3306/seata\\njdbc.order.username=your_username\\njdbc.order.password=your_password\\njdbc.order.driver=com.mysql.jdbc.Driver\\n```\\n\\n### ZooKeeper\\n\\n\u542f\u52a8ZooKeeper\uff0c\u6211\u7684\u672c\u5730\u7684Mac\u662f\u4f7f\u7528Homebrew\u5b89\u88c5\u542f\u52a8\u7684\\n\\n```sh\\n$ brew services start zookeeper \\n==> Successfully started `zookeeper` (label: homebrew.m\\n\\n$ brew services list           \\nName              Status  User    Plist\\ndocker-machine    stopped         \\nelasticsearch     stopped         \\nkafka             stopped         \\nkibana            stopped         \\nmysql             started portman /Users/portman/Librar\\ny/LaunchAgents/homebrew.mxcl.mysql.plist\\nnginx             stopped         \\npostgresql        stopped         \\nredis             stopped         \\nzookeeper         started portman /Users/portman/Librar\\ny/LaunchAgents/homebrew.mxcl.zookeeper.plist\\n```\\n\\n### \u542f\u52a8TC\u4e8b\u52a1\u534f\u8c03\u5668\\n\\n\u5728\u8fd9\u4e2a[\u94fe\u63a5](https://github.com/seata/seata/releases)\u91cc\u9875\u9762\u4e2d\uff0c\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u7684seata-server\u7a0b\u5e8f\uff0c\u6211\u672c\u5730\u4e0b\u8f7d\u7684\u662f1.2.0\u7248\u672c\\n\\n1. \u8fdb\u5165\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u5e76\u89e3\u538b\u6587\u4ef6\\n2. \u8fdb\u5165seata\u76ee\u5f55\\n3. \u6267\u884c\u542f\u52a8\u811a\u672c\\n\\n```sh\\n$ tar -zxvf seata-server-1.2.0.tar.gz\\n$ cd seata\\n$ bin/seata-server.sh\\n```\\n\\n\u89c2\u5bdf\u542f\u52a8\u65e5\u5fd7\u662f\u5426\u6709\u62a5\u9519\u4fe1\u606f\uff0c\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u5e76\u770b\u5230\u4e86\u4ee5\u4e0b\u7684Server started\u7684\u4fe1\u606f\uff0c\u8bf4\u660e\u542f\u52a8\u6210\u529f\u4e86\u3002\\n\\n```sh\\n2020-07-23 13:45:13.810 INFO [main]io.seata.core.rpc.netty.RpcServerBootstrap.start:155 -Server started ...\\n```\\n\\n### IDE\u4e2d\u542f\u52a8\u6a21\u62df\u7684\u5fae\u670d\u52a1\\n\\n1. \u9996\u5148\u8981\u628aseata-samples\u9879\u76ee\u5bfc\u5165\u5230\u672c\u5730IDE\u4e2d\uff0c\u8fd9\u91cc\u6211\u7528\u7684\u662fIntelliJ IDEA\\n2. \u5237\u65b0Maven\u7684\u5de5\u7a0b\u4f9d\u8d56\\n3. \u5148\u542f\u52a8Account\uff0cOrder\uff0cStorage\u8fd9\u4e2a3\u4e2a\u670d\u52a1\uff0c\u7136\u540eBusiness\u624d\u80fd\u53bb\u8c03\u7528\uff0c\u5bf9\u5e94\u7684\u542f\u52a8\u7c7b\u5206\u522b\u662f\uff1a\\n\\n```java\\nio.seata.samples.dubbo.starter.DubboStorageServiceStarter\\nio.seata.samples.dubbo.starter.DubboOrderServiceStarter\\nio.seata.samples.dubbo.starter.DubboStorageServiceStarter\\n```\\n\\n\u6bcf\u4e2a\u670d\u52a1\u542f\u52a8\u5b8c\u4e4b\u540e\uff0c\u770b\u5230\u8fd9\u53e5\u63d0\u793a\u4fe1\u606f\uff0c\u8bf4\u660e\u670d\u52a1\u542f\u52a8\u6210\u529f\u4e86\\n\\n```sh\\nApplication is keep running ...\\n```\\n\\n![cloc-seata](https://github.com/iportman/p/blob/master/blog/seata-at-demo-in-mac/service-boot.png?raw=true)\\n\\n\u542f\u52a8\u6210\u529f\u540e\uff0caccount_tbl\uff0cstorage_tbl\u8868\u4f1a\u6709\u4e24\u6761\u521d\u59cb\u5316\u7684\u6570\u636e\uff0c\u5206\u522b\u662f\u8d26\u6237\u4f59\u989d\u548c\u5546\u54c1\u5e93\u5b58\\n\\n```sh\\nmysql> SELECT * FROM account_tbl; SELECT * FROM storage_tbl;\\n+----+---------+-------+\\n| id | user_id | money |\\n+----+---------+-------+\\n|  1 | U100001 |   999 |\\n+----+---------+-------+\\n1 row in set (0.00 sec)\\n\\n+----+----------------+-------+\\n| id | commodity_code | count |\\n+----+----------------+-------+\\n|  1 | C00321         |   100 |\\n+----+----------------+-------+\\n1 row in set (0.00 sec)\\n```\\n\\n### \u4f7f\u7528Business\u9a8c\u8bc1\u6548\u679c\\n\\n#### \u6b63\u5e38\u60c5\u51b5\\n\\n\u8fd8\u662f\u5728IDE\u4e2d\u6267\u884cDubboBusinessTester\u7c7b\u7684\u4e3b\u51fd\u6570\uff0c\u7a0b\u5e8f\u8dd1\u5b8c\u4f1a\u81ea\u52a8\u9000\u51fa\\n\\n\u5728\u7a0b\u5e8f\u4e00\u5207\u6b63\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u5fae\u670d\u52a1\u7684\u4e8b\u7269\u90fd\u5e94\u8be5\u662f\u63d0\u4ea4\u4e86\u7684\uff0c\u6570\u636e\u4fdd\u6301\u4e00\u81f4\\n\\n\u6211\u4eec\u6765\u770b\u4e00\u4e0bMySQL\u4e2d\u6570\u636e\u7684\u53d8\u5316\\n\\n```sh\\nmysql> SELECT * FROM account_tbl; SELECT * FROM order_tbl; SELECT * FROM storage_tbl;\\n+----+---------+-------+\\n| id | user_id | money |\\n+----+---------+-------+\\n|  1 | U100001 |   599 |\\n+----+---------+-------+\\n1 row in set (0.00 sec)\\n\\n+----+---------+----------------+-------+-------+\\n| id | user_id | commodity_code | count | money |\\n+----+---------+----------------+-------+-------+\\n|  1 | U100001 | C00321         |     2 |   400 |\\n+----+---------+----------------+-------+-------+\\n1 row in set (0.00 sec)\\n\\n+----+----------------+-------+\\n| id | commodity_code | count |\\n+----+----------------+-------+\\n|  1 | C00321         |    98 |\\n+----+----------------+-------+\\n1 row in set (0.00 sec)\\n```\\n\\n\u4ece3\u4e2a\u8868\u7684\u6570\u636e\u53ef\u4ee5\u770b\u5230\uff1a\u8d26\u6237\u4f59\u989d\u6263\u51cf\u4e86400\u5757\uff1b\u8ba2\u5355\u8868\u589e\u52a0\u4e861\u6761\u8bb0\u5f55\uff1b\u5546\u54c1\u5e93\u5b58\u6263\u51cf\u4e862\u4e2a\\n\\n\u8fd9\u4e2a\u7ed3\u679c\u662f\u7a0b\u5e8f\u7684\u903b\u8f91\u662f\u4e00\u81f4\u7684\uff0c\u8bf4\u660e\u4e8b\u52a1\u6ca1\u6709\u95ee\u9898\\n\\n#### \u5f02\u5e38\u60c5\u51b5\\n\\n\u5176\u5b9e\u5373\u4f7f\u4e0d\u52a0\u5165\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u63a7\u5236\uff0c\u4e00\u5207\u90fd\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e8b\u52a1\u672c\u8eab\u5c31\u4e0d\u4f1a\u6709\u95ee\u9898\u7684\\n\\n\u6240\u4ee5\u6211\u4eec\u6765\u91cd\u70b9\u5173\u6ce8\uff0c\u5f53\u7a0b\u5e8f\u51fa\u73b0\u5f02\u5e38\u65f6\u7684\u60c5\u51b5\\n\\n\u73b0\u5728\u6211\u628aBusinessServiceImpl\u7684\u629b\u5f02\u5e38\u7684\u4ee3\u7801\u6ce8\u91ca\u653e\u5f00\uff0c\u7136\u540e\u518d\u6267\u884c\u4e00\u6b21DubboBusinessTester\uff0c\u6765\u770b\u770b\u6709\u4ec0\u4e48\u60c5\u51b5\u53d1\u751f\\n\\n```java\\n\\t\\t@Override\\n    @GlobalTransactional(timeoutMills = 300000, name = \\"dubbo-demo-tx\\")\\n    public void purchase(String userId, String commodityCode, int orderCount) {\\n        LOGGER.info(\\"purchase begin ... xid: \\" + RootContext.getXID());\\n        storageService.deduct(commodityCode, orderCount);\\n        orderService.create(userId, commodityCode, orderCount);\\n      \\n        //\u653e\u5f00\u8fd9\u53e5\u629b\u5f02\u5e38\u7684\u6ce8\u91ca\uff0c\u6a21\u62df\u7a0b\u5e8f\u51fa\u73b0\u5f02\u5e38\\n        throw new RuntimeException(\\"portman\'s foooooobar error.\\");\\n\\n    }\\n```\\n\\n\u63a5\u7740\uff0c\u6211\u518d\u4e00\u6b21\u6267\u884cDubboBusinessTester\uff0c\u6267\u884c\u8fc7\u7a0b\u4e2d\u5728\u63a7\u5236\u53f0\u53ef\u4ee5\u770b\u5230\u5f02\u5e38\u62a5\u9519\u4fe1\u606f\\n\\n```java\\nException in thread \\"main\\" java.lang.RuntimeException: portman\'s foooooobar error.\\n```\\n\\n\u73b0\u5728\u6211\u4eec\u518d\u770b\u4e00\u4e0bMySQL\u91cc\u7684\u6570\u636e\u53d8\u5316\uff0c\u53d1\u73b0\u6570\u636e\u6ca1\u6709\u4efb\u4f55\u53d8\u5316\uff0c\u8bf4\u660e\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u63a7\u5236\u5df2\u7ecf\u8d77\u4f5c\u7528\u4e86\\n\\n## \u5f85\u601d\u8003\u95ee\u9898\\n\\n\u4e0a\u9762\u7684\u6b65\u9aa4\u53ea\u662f\u6f14\u793a\u4e86seata\u6700\u7b80\u5355\u7684demo\u7a0b\u5e8f\uff0c\u66f4\u591a\u66f4\u590d\u6742\u7684\u60c5\u51b5\u540e\u7eed\u5927\u5bb6\u53ef\u4ee5\u4e00\u8d77\u8ba8\u8bba\u548c\u9a8c\u8bc1\\n\\n\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u8fd8\u6709\u4e00\u4e9b\u95ee\u9898\u548c\u7591\u60d1\uff0c\u540e\u7eed\u8fdb\u4e00\u6b65\u5b66\u4e60\\n\\n- \u5168\u5c40\u9501\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\u7a0b\u5ea6\\n- undo_log\u65e5\u5fd7\u53ef\u4ee5\u56de\u6eda\u5230\u539f\u6765\u72b6\u6001\uff0c\u4f46\u662f\u5982\u679c\u6570\u636e\u72b6\u6001\u5df2\u7ecf\u53d1\u751f\u53d8\u5316\u5982\u4f55\u5904\u7406\uff08\u6bd4\u5982\u589e\u52a0\u7684\u7528\u6237\u79ef\u5206\u5df2\u7ecf\u88ab\u522b\u7684\u672c\u5730\u4e8b\u52a1\u82b1\u6389\u4e86\uff09\\n\\n## \u53c2\u8003\u6587\u732e\\n\\n- [Seata \u662f\u4ec0\u4e48?](http://seata.io/zh-cn/docs/overview/what-is-seata.html)\\n- [\u5feb\u901f\u5f00\u59cb](http://seata.io/zh-cn/docs/user/quickstart.html)\\n\\n## \u4f5c\u8005\u4fe1\u606f\\n\\n\u8bb8\u6653\u52a0\uff0c\u91d1\u8776\u8f6f\u4ef6\u67b6\u6784\u5e08\\n\\n[Github](https://github.com/iportman)"},{"id":"/seata-rpc-refactor","metadata":{"permalink":"/zh-cn/blog/seata-rpc-refactor","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-rpc-refactor.md","title":"Seata RPC \u6a21\u5757\u7684\u91cd\u6784\u4e4b\u8def","description":"RPC \u6a21\u5757\u662f\u6211\u6700\u521d\u7814\u7a76 Seata \u6e90\u7801\u5f00\u59cb\u7684\u5730\u65b9\uff0c\u56e0\u6b64\u6211\u5bf9 Seata \u7684 RPC \u6a21\u5757\u6709\u8fc7\u4e00\u4e9b\u6df1\u523b\u7814\u7a76\uff0c\u5728\u6211\u7814\u7a76\u4e86\u4e00\u756a\u540e\uff0c\u53d1\u73b0 RPC \u6a21\u5757\u4e2d\u7684\u4ee3\u7801\u9700\u8981\u8fdb\u884c\u4f18\u5316\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u4f18\u96c5\uff0c\u4ea4\u4e92\u903b\u8f91\u66f4\u52a0\u6e05\u6670\u6613\u61c2\uff0c\u672c\u7740 \u201c\u8ba9\u5929\u4e0b\u6ca1\u6709\u96be\u61c2\u7684","date":"2020-07-13T00:00:00.000Z","formattedDate":"2020\u5e747\u670813\u65e5","tags":[],"readingTime":11.35,"hasTruncateMarker":false,"authors":[{"name":"\u5f20\u4e58\u8f89"}],"frontMatter":{"title":"Seata RPC \u6a21\u5757\u7684\u91cd\u6784\u4e4b\u8def","author":"\u5f20\u4e58\u8f89","keywords":["Seata\u3001RPC\u6a21\u5757\u3001\u91cd\u6784"],"date":"2020/07/13"},"prevItem":{"title":"Mac\u4e0b\u7684Seata Demo\u73af\u5883\u642d\u5efa\uff08AT\u6a21\u5f0f\uff09","permalink":"/zh-cn/blog/seata-at-demo-in-mac"},"nextItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801-Server\u7aef\u542f\u52a8\u6d41\u7a0b","permalink":"/zh-cn/blog/seata-sourcecode-server-bootstrap"}},"content":"RPC \u6a21\u5757\u662f\u6211\u6700\u521d\u7814\u7a76 Seata \u6e90\u7801\u5f00\u59cb\u7684\u5730\u65b9\uff0c\u56e0\u6b64\u6211\u5bf9 Seata \u7684 RPC \u6a21\u5757\u6709\u8fc7\u4e00\u4e9b\u6df1\u523b\u7814\u7a76\uff0c\u5728\u6211\u7814\u7a76\u4e86\u4e00\u756a\u540e\uff0c\u53d1\u73b0 RPC \u6a21\u5757\u4e2d\u7684\u4ee3\u7801\u9700\u8981\u8fdb\u884c\u4f18\u5316\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u4f18\u96c5\uff0c\u4ea4\u4e92\u903b\u8f91\u66f4\u52a0\u6e05\u6670\u6613\u61c2\uff0c\u672c\u7740 \u201c**\u8ba9\u5929\u4e0b\u6ca1\u6709\u96be\u61c2\u7684\\nRPC \u901a\u4fe1\u4ee3\u7801**\u201d \u7684\u521d\u8877\uff0c\u6211\u5f00\u59cb\u4e86 RPC \u6a21\u5757\u7684\u91cd\u6784\u4e4b\u8def\u3002\\n\\n\u8fd9\u91cc\u5efa\u8bae\u60f3\u8981\u6df1\u5165\u4e86\u89e3 Seata \u4ea4\u4e92\u7ec6\u8282\u7684\uff0c\u4e0d\u59a8\u4ece RPC \u6a21\u5757\u7684\u6e90\u7801\u5165\u624b\uff0cRPC \u6a21\u5757\u76f8\u5f53\u4e8e Seata \u7684\u4e2d\u67a2\uff0cSeata \u6240\u6709\u7684\u4ea4\u4e92\u903b\u8f91\u5728 RPC \u6a21\u5757\u4e2d\u8868\u73b0\u5f97\u6dcb\u6f13\u5c3d\u81f4\u3002\\n\\n\u8fd9\u6b21 RPC \u6a21\u5757\u7684\u91cd\u6784\u5c06\u4f1a\u4f7f\u5f97 Seata \u7684\u4e2d\u67a2\u53d8\u5f97\u66f4\u52a0\u5065\u58ee\u548c\u6613\u4e8e\u89e3\u8bfb\u3002\\n\\n# \u91cd\u6784\u7ee7\u627f\u5173\u7cfb\\n\\n\u5728 Seata \u7684\u65e7\u7248\u672c\u4e2d\uff0cRPC \u6a21\u5757\u7684\u6574\u4f53\u7ed3\u6784\u6709\u70b9\u6df7\u4e71\uff0c\u5c24\u5176\u662f\u5728\u5404\u4e2a\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb\u4e0a\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\uff1a\\n\\n1. \u76f4\u63a5\u5728 Remoting \u7c7b\u7ee7\u627f Netty Handler\uff0c\u4f7f\u5f97 Remoting \u7c7b\u4e0e Netty Handler \u5904\u7406\u903b\u8f91\u8026\u5408\u5728\u4e00\u8d77\uff1b\\n2. \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684 Reomting \u7c7b\u7ee7\u627f\u5173\u7cfb\u4e0d\u7edf\u4e00\uff1b\\n3. RemotingClient \u88ab RpcClientBootstrap \u5b9e\u73b0\uff0c\u800c RemotingServer \u5374\u88ab RpcServer \u5b9e\u73b0\uff0c\u6ca1\u6709\u4e00\u4e2a\u72ec\u7acb\u7684 ServerBootstrap\uff0c\u8fd9\u4e2a\u770b\u8d77\u6765\u5173\u7cfb\u975e\u5e38\u6df7\u4e71\uff1b\\n4. \u6709\u4e9b\u63a5\u53e3\u6ca1\u5fc5\u8981\u62bd\u53d6\u51fa\u6765\uff0c\u6bd4\u5982 ClientMessageSender\u3001ClientMessageListener\u3001ServerMessageSender \u7b49\u63a5\u53e3\uff0c\u56e0\u8fd9\u4e9b\u63a5\u53e3\u4f1a\u589e\u52a0\u6574\u4f53\u7ed3\u6784\u7ee7\u627f\u5173\u7cfb\u7684\u590d\u6742\u6027\u3002\\n\\n\u9488\u5bf9\u4e0a\u9762\u53d1\u73b0\u7684\u95ee\u9898\uff0c\u5728\u91cd\u6784\u8fc7\u7a0b\u4e2d\u6211\u5927\u81f4\u505a\u4e86\u5982\u4e0b\u4e8b\u60c5\uff1a\\n\\n1. \u5c06 Netty Handler \u62bd\u8c61\u6210\u4e00\u4e2a\u5185\u90e8\u7c7b\u653e\u5728 Remoting \u7c7b\u4e2d\uff1b\\n2. \u5c06 RemotingClient \u4e3a\u5ba2\u6237\u7aef\u9876\u7ea7\u63a5\u53e3\uff0c\u5b9a\u4e49\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u4ea4\u4e92\u7684\u57fa\u672c\u65b9\u6cd5\uff0c\u62bd\u8c61\u4e00\u5c42 AbstractNettyRemotingClient\uff0c\u4e0b\u9762\u5206\u522b\u6709\\n   RmNettyRemotingClient\u3001TmNettyRemotingClient\uff1b\u5c06 RemotingServer \u4e3a\u670d\u52a1\u7aef\u9876\u7ea7\u63a5\u53e3\uff0c\u5b9a\u4e49\u670d\u52a1\u7aef\u4e0e\u5ba2\u6237\u7aef\u4ea4\u4e92\u7684\u57fa\u672c\u65b9\u6cd5\uff0c\u5b9e\u73b0\u7c7b NettyRemotingServer\uff1b\\n3. \u540c\u65f6\u5c06 ClientMessageSender\u3001ClientMessageListener\u3001ServerMessageSender \u7b49\u63a5\u53e3\u65b9\u6cd5\u5f52\u5165\u5230 RemotingClient\u3001RemotingServer \u4e2d\uff0c\u7531 Reomting\\n   \u7c7b\u5b9e\u73b0 RemotingClient\u3001RemotingServer\uff0c\u7edf\u4e00 Remoting \u7c7b\u7ee7\u627f\u5173\u7cfb\uff1b\\n4. \u65b0\u5efa RemotingBootstrap \u63a5\u53e3\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u5206\u522b\u5b9e\u73b0 NettyClientBootstrap\u3001NettyServerBootstrap\uff0c\u5c06\u5f15\u5bfc\u7c7b\u903b\u8f91\u4ece Reomting \u7c7b\u62bd\u79bb\u51fa\u6765\u3002\\n\\n\u5728\u6700\u65b0\u7684 RPC \u6a21\u5757\u4e2d\u7684\u7ee7\u627f\u5173\u7cfb\u7b80\u5355\u6e05\u6670\uff0c\u7528\u5982\u4e0b\u7c7b\u5173\u7cfb\u56fe\u8868\u793a\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20200711111637.png)\\n\\n1. AbstractNettyRemoting\uff1aRemoting \u7c7b\u7684\u6700\u9876\u5c42\u62bd\u8c61\uff0c\u5305\u542b\u4e86\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u516c\u7528\u7684\u6210\u5458\u53d8\u91cf\u4e0e\u516c\u7528\u65b9\u6cd5\uff0c\u62e5\u6709\u901a\u7528\u7684\u8bf7\u6c42\u65b9\u6cd5\uff08\u6587\u7ae0\u540e\u9762\u4f1a\u8bb2\u5230\uff09\uff0cProcessor \u5904\u7406\u5668\u8c03\u7528\u903b\u8f91\uff08\u6587\u7ae0\u540e\u9762\u4f1a\u8bb2\u5230\uff09\uff1b\\n2. RemotingClient\uff1a\u5ba2\u6237\u7aef\u6700\u9876\u7ea7\u63a5\u53e3\uff0c\u5b9a\u4e49\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u4ea4\u4e92\u7684\u57fa\u672c\u65b9\u6cd5\uff1b\\n3. RemotingServer\uff1a\u670d\u52a1\u7aef\u6700\u9876\u7ea7\u63a5\u53e3\uff0c\u5b9a\u4e49\u670d\u52a1\u7aef\u4e0e\u5ba2\u6237\u7aef\u4ea4\u4e92\u7684\u57fa\u672c\u65b9\u6cd5\uff1b\\n4. AbstractNettyRemotingClient\uff1a\u5ba2\u6237\u7aef\u62bd\u8c61\u7c7b\uff0c\u7ee7\u627f AbstractNettyRemoting \u7c7b\u5e76\u5b9e\u73b0\u4e86 RemotingClient \u63a5\u53e3\uff1b\\n5. NettyRemotingServer\uff1a\u670d\u52a1\u7aef\u5b9e\u73b0\u7c7b\uff0c\u7ee7\u627f AbstractNettyRemoting \u7c7b\u5e76\u5b9e\u73b0\u4e86 RemotingServer \u63a5\u53e3\uff1b\\n6. RmNettyRemotingClient\uff1aRm \u5ba2\u6237\u7aef\u5b9e\u73b0\u7c7b\uff0c\u7ee7\u627f AbstractNettyRemotingClient \u7c7b\uff1b\\n7. TmNettyRemotingClient\uff1aTm \u5ba2\u6237\u7aef\u5b9e\u73b0\u7c7b\uff0c\u7ee7\u627f AbstractNettyRemotingClient \u7c7b\u3002\\n\\n\u540c\u65f6\u5c06\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u5f15\u5bfc\u7c7b\u903b\u8f91\u62bd\u8c61\u51fa\u6765\uff0c\u5982\u4e0b\u7c7b\u5173\u7cfb\u56fe\u8868\u793a\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20200510225359.png)\\n\\n1. RemotingBootstrap\uff1a\u5f15\u5bfc\u7c7b\u63a5\u53e3\uff0c\u6709 start \u548c stop \u4e24\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff1b\\n2. NettyClientBootstrap\uff1a\u5ba2\u6237\u7aef\u5f15\u5bfc\u5b9e\u73b0\u7c7b\uff1b\\n3. NettyServerBootstrap\uff1a\u670d\u52a1\u7aef\u5f15\u5bfc\u5b9e\u73b0\u7c7b\u3002\\n\\n# \u89e3\u8026\u5904\u7406\u903b\u8f91\\n\\n\u89e3\u8026\u5904\u7406\u903b\u8f91\u5373\u662f\u5c06 RPC \u4ea4\u4e92\u7684\u5904\u7406\u903b\u8f91\u4ece Netty Handler \u4e2d\u62bd\u79bb\u51fa\u6765\uff0c\u5e76\u5c06\u5904\u7406\u903b\u8f91\u62bd\u8c61\u6210\u4e00\u4e2a\u4e2a Processor\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\u5462\uff1f\u6211\u5927\u81f4\u8bb2\u4e0b\u73b0\u5728\u5b58\u5728\u7684\u4e00\u4e9b\u95ee\u9898\uff1a\\n\\n1. Netty Handler \u4e0e \u5904\u7406\u903b\u8f91\u662f\u7cc5\u5408\u5728\u4e00\u8d77\u7684\uff0c\u7531\u4e8e\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u90fd\u5171\u7528\u4e86\u4e00\u5957\u5904\u7406\u903b\u8f91\uff0c\u56e0\u6b64\u4e3a\u4e86\u517c\u5bb9\u66f4\u591a\u7684\u4ea4\u4e92\uff0c\u5728\u5904\u7406\u903b\u8f91\u4e2d\u4f60\u53ef\u4ee5\u770b\u5230\u975e\u5e38\u591a\u96be\u4ee5\u7406\u89e3\u7684\u5224\u65ad\u903b\u8f91\uff1b\\n2. \u5728 Seata \u7684\u4ea4\u4e92\u4e2d\u6709\u4e9b\u8bf7\u6c42\u662f\u5f02\u6b65\u5904\u7406\u7684\uff0c\u4e5f\u6709\u4e00\u4e9b\u8bf7\u6c42\u662f\u540c\u6b65\u5904\u7406\u7684\uff0c\u4f46\u662f\u5728\u65e7\u7684\u5904\u7406\u4ee3\u7801\u903b\u8f91\u4e2d\u5bf9\u540c\u6b65\u5f02\u6b65\u5904\u7406\u7684\u8868\u8fbe\u975e\u5e38\u9690\u6666\uff0c\u800c\u4e14\u96be\u4ee5\u770b\u660e\u767d\uff1b\\n3. \u65e0\u6cd5\u4ece\u4ee3\u7801\u903b\u8f91\u5f53\u4e2d\u6e05\u6670\u5730\u8868\u8fbe\u51fa\u8bf7\u6c42\u6d88\u606f\u7c7b\u578b\u4e0e\u5bf9\u5e94\u7684\u5904\u7406\u903b\u8f91\u5173\u7cfb\uff1b\\n4. \u5728 Seata \u540e\u9762\u7684\u66f4\u65b0\u8fed\u4ee3\u4e2d\uff0c\u5982\u679c\u4e0d\u5c06\u5904\u7406\u5904\u7406\u903b\u8f91\u62bd\u79bb\u51fa\u6765\uff0c\u8fd9\u90e8\u5206\u4ee3\u7801\u60f3\u8981\u589e\u52a0\u65b0\u7684\u4ea4\u4e92\u903b\u8f91\uff0c\u5c06\u4f1a\u975e\u5e38\u56f0\u96be\u3002\\n\\n\u5728\u5c06\u5904\u7406\u903b\u8f91\u4ece Netty Handler \u8fdb\u884c\u62bd\u79bb\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u68b3\u7406\u4e00\u4e0b Seata \u73b0\u6709\u7684\u4ea4\u4e92\u903b\u8f91\uff1a\\n\\n- RM \u5ba2\u6237\u7aef\u8bf7\u6c42\u670d\u52a1\u7aef\u7684\u4ea4\u4e92\u903b\u8f91\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/Xnip2020-05-12_21-41-45.png)\\n\\n- TM \u5ba2\u6237\u7aef\u8bf7\u6c42\u670d\u52a1\u7aef\u7684\u4ea4\u4e92\u903b\u8f91\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/Xnip2020-05-12_21-44-04.png)\\n\\n- \u670d\u52a1\u7aef\u8bf7\u6c42 RM \u5ba2\u6237\u7aef\u7684\u4ea4\u4e92\u903b\u8f91\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20200513000620.png)\\n\\n\u4ece\u4ee5\u4e0a\u7684\u4ea4\u4e92\u56fe\u4e2d\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u5230\u4e86 Seata \u7684\u4ea4\u4e92\u903b\u8f91\u3002\\n\\n\u5ba2\u6237\u7aef\u603b\u5171\u63a5\u6536\u670d\u52a1\u7aef\u7684\u6d88\u606f\uff1a\\n\\n1\uff09\u670d\u52a1\u7aef\u8bf7\u6c42\u6d88\u606f\\n\\n1. BranchCommitRequest\u3001BranchRollbackRequest\u3001UndoLogDeleteRequest\\n\\n2\uff09\u670d\u52a1\u7aef\u54cd\u5e94\u6d88\u606f\\n\\n1. RegisterRMResponse\u3001BranchRegisterResponse\u3001BranchReportResponse\u3001GlobalLockQueryResponse\\n2.\\nRegisterTMResponse\u3001GlobalBeginResponse\u3001GlobalCommitResponse\u3001GlobalRollbackResponse\u3001GlobalStatusResponse\u3001GlobalReportResponse\\n3. HeartbeatMessage(PONG)\\n\\n\u670d\u52a1\u7aef\u603b\u5171\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u6d88\u606f\uff1a\\n\\n1\uff09\u5ba2\u6237\u7aef\u8bf7\u6c42\u6d88\u606f\uff1a\\n\\n1. RegisterRMRequest\u3001BranchRegisterRequest\u3001BranchReportRequest\u3001GlobalLockQueryRequest\\n2.\\nRegisterTMRequest\u3001GlobalBeginRequest\u3001GlobalCommitRequest\u3001GlobalRollbackRequest\u3001GlobalStatusRequest\u3001GlobalReportRequest\\n3. HeartbeatMessage(PING)\\n\\n2\uff09\u5ba2\u6237\u7aef\u54cd\u5e94\u6d88\u606f\uff1a\\n\\n1. BranchCommitResponse\u3001BranchRollbackResponse\\n\\n\u57fa\u4e8e\u4ee5\u4e0a\u7684\u4ea4\u4e92\u903b\u8f91\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5904\u7406\u6d88\u606f\u7684\u903b\u8f91\u62bd\u8c61\u6210\u82e5\u5e72\u4e2a Processor\uff0c\u4e00\u4e2a Processor \u53ef\u4ee5\u5904\u7406\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6d88\u606f\u7c7b\u578b\u7684\u6d88\u606f\uff0c\u53ea\u9700\u5728 Seata \u542f\u52a8\u65f6\u6ce8\u518c\u5c06\u6d88\u606f\u7c7b\u578b\u6ce8\u518c\u5230 ProcessorTable\\n\u4e2d\u5373\u53ef\uff0c\u5f62\u6210\u4e00\u4e2a\u6620\u5c04\u5173\u7cfb\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6839\u636e\u6d88\u606f\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684 Processor \u5bf9\u6d88\u606f\u8fdb\u884c\u5904\u7406\uff0c\u7528\u5982\u4e0b\u56fe\u8868\u793a\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/Xnip2020-05-12_22-09-17.png)\\n\\n\u5728\u62bd\u8c61 Remoting \u7c7b\u4e2d\u5b9a\u4e00\u4e2a processMessage \u65b9\u6cd5\uff0c\u65b9\u6cd5\u903b\u8f91\u662f\u6839\u636e\u6d88\u606f\u7c7b\u578b\u4ece ProcessorTable \u4e2d\u62ff\u5230\u6d88\u606f\u7c7b\u578b\u5bf9\u5e94\u7684 Processor\u3002\\n\\n\u8fd9\u6837\u5c31\u6210\u529f\u5c06\u5904\u7406\u903b\u8f91\u4ece Netty Handler \u4e2d\u5f7b\u5e95\u62bd\u79bb\u51fa\u6765\u4e86\uff0cHandler#channelRead \u65b9\u6cd5\u53ea\u9700\u8981\u8c03\u7528 processMessage \u65b9\u6cd5\u5373\u53ef\uff0c\u4e14\u8fd8\u53ef\u4ee5\u7075\u6d3b\u6839\u636e\u6d88\u606f\u7c7b\u578b\u52a8\u6001\u6ce8\u518c Processor \u5230\\nProcessorTable \u4e2d\uff0c\u5904\u7406\u903b\u8f91\u7684\u53ef\u6269\u5c55\u6027\u5f97\u5230\u4e86\u6781\u5927\u7684\u63d0\u5347\u3002\\n\\n\u4ee5\u4e0b\u662f Processor \u7684\u8c03\u7528\u6d41\u7a0b\uff1a\\n\\n1\uff09\u5ba2\u6237\u7aef\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20200510234047.png)\\n\\n1. RmBranchCommitProcessor\uff1a\u5904\u7406\u670d\u52a1\u7aef\u5168\u5c40\u63d0\u4ea4\u8bf7\u6c42\uff1b\\n2. RmBranchRollbackProcessor\uff1a\u5904\u7406\u670d\u52a1\u7aef\u5168\u5c40\u56de\u6eda\u8bf7\u6c42\uff1b\\n3. RmUndoLogProcessor\uff1a\u5904\u7406\u670d\u52a1\u7aef undo log \u5220\u9664\u8bf7\u6c42\uff1b\\n4. ClientOnResponseProcessor\uff1a\u5ba2\u6237\u7aef\u5904\u7406\u670d\u52a1\u7aef\u54cd\u5e94\u8bf7\u6c42\uff0c\u5982\uff1aBranchRegisterResponse\u3001GlobalBeginResponse\u3001GlobalCommitResponse \u7b49\uff1b\\n5. ClientHeartbeatProcessor\uff1a\u5904\u7406\u670d\u52a1\u7aef\u5fc3\u8df3\u54cd\u5e94\u3002\\n\\n2\uff09\u670d\u52a1\u7aef\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20200510234016.png)\\n\\n1. RegRmProcessor\uff1a\u5904\u7406 RM \u5ba2\u6237\u7aef\u6ce8\u518c\u8bf7\u6c42\uff1b\\n2. RegTmProcessor\uff1a\u5904\u7406 TM \u5ba2\u6237\u7aef\u6ce8\u518c\u8bf7\u6c42\uff1b\\n3. ServerOnRequestProcessor\uff1a\u5904\u7406\u5ba2\u6237\u7aef\u76f8\u5173\u8bf7\u6c42\uff0c\u5982\uff1aBranchRegisterRequest\u3001GlobalBeginRequest\u3001GlobalLockQueryRequest \u7b49\uff1b\\n4. ServerOnResponseProcessor\uff1a\u5904\u7406\u5ba2\u6237\u7aef\u76f8\u5173\u54cd\u5e94\uff0c\u5982\uff1aBranchCommitResponse\u3001BranchRollbackResponse \u7b49\uff1b\\n5. ServerHeartbeatProcessor\uff1a\u5904\u7406\u5ba2\u6237\u7aef\u5fc3\u8df3\u54cd\u5e94\u3002\\n\\n\u4e0b\u9762\u6211\u4ee5 TM \u53d1\u8d77\u5168\u5c40\u4e8b\u52a1\u63d0\u4ea4\u8bf7\u6c42\u4e3a\u4f8b\u5b50\uff0c\u8ba9\u5927\u5bb6\u611f\u53d7\u4e0b Processor \u5728\u6574\u4e2a\u4ea4\u4e92\u4e2d\u6240\u5904\u7684\u4f4d\u7f6e\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20200514191842.png)\\n\\n# \u91cd\u6784\u8bf7\u6c42\u65b9\u6cd5\\n\\n\u5728 Seata \u7684\u65e7\u7248\u672c\u5f53\u4e2d\uff0cRPC \u7684\u8bf7\u6c42\u65b9\u6cd5\u4e5f\u662f\u6b20\u7f3a\u4f18\u96c5\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\uff1a\\n\\n1. \u8bf7\u6c42\u65b9\u6cd5\u8fc7\u4e8e\u6742\u4e71\u65e0\u7ae0\uff0c\u6ca1\u6709\u5c42\u6b21\u611f\uff1b\\n2. sendAsyncRequest \u65b9\u6cd5\u8026\u5408\u7684\u4ee3\u7801\u592a\u591a\uff0c\u903b\u8f91\u8fc7\u4e8e\u6df7\u4e71\uff0c\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u90fd\u5171\u7528\u4e86\u4e00\u5957\u8bf7\u6c42\u903b\u8f91\uff0c\u65b9\u6cd5\u4e2d\u51b3\u5b9a\u662f\u5426\u6279\u91cf\u53d1\u9001\u662f\u6839\u636e\u53c2\u6570 address \u662f\u5426\u4e3a null \u51b3\u5b9a\uff0c\u51b3\u5b9a\u662f\u5426\u540c\u6b65\u8bf7\u6c42\u662f\u6839\u636e timeout \u662f\u5426\u5927\u4e8e 0\\n   \u51b3\u5b9a\uff0c\u663e\u5f97\u6781\u4e3a\u4e0d\u5408\u7406\uff0c\u4e14\u6279\u91cf\u8bf7\u6c42\u53ea\u6709\u5ba2\u6237\u7aef\u6709\u7528\u5230\uff0c\u670d\u52a1\u7aef\u5e76\u6ca1\u6709\u6279\u91cf\u8bf7\u6c42\uff0c\u5171\u7528\u4e00\u5957\u8bf7\u6c42\u903b\u8f91\u8fd8\u4f1a\u5bfc\u81f4\u670d\u52a1\u7aef\u5f02\u6b65\u8bf7\u6c42\u4e5f\u4f1a\u521b\u5efa MessageFuture \u653e\u5165 futures \u4e2d\uff1b\\n3. \u8bf7\u6c42\u65b9\u6cd5\u540d\u79f0\u98ce\u683c\u4e0d\u7edf\u4e00\uff0c\u6bd4\u5982\u5ba2\u6237\u7aef sendMsgWithResponse\uff0c\u670d\u52a1\u7aef\u5374\u53eb sendSyncRequest\uff1b\\n\\n\u9488\u5bf9\u4ee5\u4e0a\u65e7\u7248\u672c RPC \u8bf7\u6c42\u65b9\u6cd5\u7684\u5404\u79cd\u7f3a\u70b9\uff0c\u6211\u4f5c\u4e86\u4ee5\u4e0b\u6539\u52a8\uff1a\\n\\n1. \u5c06\u8bf7\u6c42\u65b9\u6cd5\u7edf\u4e00\u653e\u5165 RemotingClient\u3001RemotingServer \u63a5\u53e3\u5f53\u4e2d\uff0c\u5e76\u4f5c\u4e3a\u9876\u7ea7\u63a5\u53e3\uff1b\\n2. \u5206\u79bb\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u8bf7\u6c42\u903b\u8f91\uff0c\u5c06\u6279\u91cf\u8bf7\u6c42\u903b\u8f91\u5355\u72ec\u62bd\u5230\u5ba2\u6237\u7aef\u76f8\u5173\u8bf7\u6c42\u65b9\u6cd5\u4e2d\uff0c\u4f7f\u5f97\u662f\u5426\u6279\u91cf\u53d1\u9001\u4e0d\u518d\u6839\u636e\u53c2\u6570 address \u662f\u5426\u4e3a null \u51b3\u5b9a\uff1b\\n3. \u7531\u4e8e Seata\\n   \u81ea\u8eab\u7684\u903b\u8f91\u7279\u70b9\uff0c\u5ba2\u6237\u7aef\u670d\u52a1\u7aef\u8bf7\u6c42\u65b9\u6cd5\u7684\u53c2\u6570\u65e0\u6cd5\u7edf\u4e00\uff0c\u53ef\u901a\u8fc7\u62bd\u53d6\u901a\u7528\u7684\u540c\u6b65/\u5f02\u6b65\u8bf7\u6c42\u65b9\u6cd5\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u6839\u636e\u81ea\u8eab\u8bf7\u6c42\u903b\u8f91\u7279\u70b9\u5b9e\u73b0\u81ea\u8eab\u7684\u540c\u6b65/\u5f02\u6b65\u8bf7\u6c42\u903b\u8f91\uff0c\u6700\u540e\u518d\u8c03\u7528\u901a\u7528\u7684\u540c\u6b65/\u5f02\u6b65\u8bf7\u6c42\u65b9\u6cd5\uff0c\u4f7f\u5f97\u540c\u6b65/\u5f02\u6b65\u8bf7\u6c42\u90fd\u6709\u660e\u786e\u7684\u65b9\u6cd5\uff0c\u4e0d\u518d\u6839\u636e\\n   timeout \u662f\u5426\u5927\u4e8e 0 \u51b3\u5b9a\uff1b\\n4. \u7edf\u4e00\u8bf7\u6c42\u540d\u79f0\u98ce\u683c\u3002\\n\\n\u6700\u7ec8\uff0cSeata RPC \u7684\u8bf7\u6c42\u65b9\u6cd5\u7ec8\u4e8e\u770b\u8d77\u6765\u66f4\u52a0\u4f18\u96c5\u4e14\u6709\u5c42\u6b21\u611f\u4e86\u3002\\n\\n\u540c\u6b65\u8bf7\u6c42\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20200513103838.png)\\n\\n\u5f02\u6b65\u8bf7\u6c42\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20200513103904.png)\\n\\n# \u5176\u5b83\\n\\n1. \u7c7b\u76ee\u5f55\u8c03\u6574\uff1aRPC \u6a21\u5757\u76ee\u5f55\u4e2d\u8fd8\u6709\u4e00\u4e2a netty \u76ee\u5f55\uff0c\u4e5f\u53ef\u4ee5\u4ece\u76ee\u5f55\u7ed3\u6784\u4e2d\u53d1\u73b0 Seata \u7684\u521d\u8877\u662f\u517c\u5bb9\u591a\u4e2a RPC \u6846\u67b6\uff0c\u76ee\u524d\u53ea\u5b9e\u73b0\u4e86 netty\uff0c\u4f46\u53d1\u73b0 netty \u6a21\u5757\u4e2d\u6709\u4e9b\u7c7b\u5e76\u4e0d \u201dnetty\u201c\uff0c\u4e14 RPC\\n   \u8ddf\u76ee\u5f55\u7684\u7c7b\u4e5f\u5e76\u4e0d\u901a\u7528\uff0c\u56e0\u6b64\u9700\u8981\u5c06\u76f8\u5173\u7c7b\u7684\u4f4d\u7f6e\u8fdb\u884c\u8c03\u6574\uff1b\\n2. \u67d0\u4e9b\u7c7b\u91cd\u65b0\u547d\u540d\uff0c\u6bd4\u5982 netty \u76f8\u5173\u7c7b\u5305\u542b \u300cnetty\u300d\uff1b\\n\\n\u6700\u7ec8 RPC \u6a21\u5757\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20200711213204.png)\\n\\n# \u4f5c\u8005\u7b80\u4ecb\\n\\n\u5f20\u4e58\u8f89\uff0c\u76ee\u524d\u5c31\u804c\u4e8e\u8682\u8681\u96c6\u56e2\uff0c\u70ed\u7231\u5206\u4eab\u6280\u672f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u300c\u540e\u7aef\u8fdb\u9636\u300d\u4f5c\u8005\uff0c\u6280\u672f\u535a\u5ba2\uff08[https://objcoding.com/](https://objcoding.com/)\uff09\u535a\u4e3b\uff0cSeata Contributor\uff0cGitHub\\nID\uff1aobjcoding\u3002"},{"id":"/seata-sourcecode-server-bootstrap","metadata":{"permalink":"/zh-cn/blog/seata-sourcecode-server-bootstrap","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-sourcecode-server-bootstrap.md","title":"\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801-Server\u7aef\u542f\u52a8\u6d41\u7a0b","description":"\u3010\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801\u89e3\u8bfb\u4e00\u3011Server\u7aef\u542f\u52a8\u6d41\u7a0b","date":"2020-07-02T00:00:00.000Z","formattedDate":"2020\u5e747\u67082\u65e5","tags":[],"readingTime":18.62,"hasTruncateMarker":false,"authors":[{"name":"\u6768\u6653\u5175|\u4e2d\u539f\u94f6\u884c"}],"frontMatter":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801-Server\u7aef\u542f\u52a8\u6d41\u7a0b","author":"\u6768\u6653\u5175|\u4e2d\u539f\u94f6\u884c","date":"2020/07/02","keywords":["fescar\u3001seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"]},"prevItem":{"title":"Seata RPC \u6a21\u5757\u7684\u91cd\u6784\u4e4b\u8def","permalink":"/zh-cn/blog/seata-rpc-refactor"},"nextItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u5982\u4f55\u5b9e\u73b0\uff1f\u6df1\u5165\u89e3\u8bfb Seata \u7684 XA \u6a21\u5f0f","permalink":"/zh-cn/blog/seata-xa-introduce"}},"content":"## \u3010\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801\u89e3\u8bfb\u4e00\u3011Server\u7aef\u542f\u52a8\u6d41\u7a0b\\n\\n### \u5b9e\u73b0\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u6838\u5fc3\u8981\u70b9\uff1a\\n1. \u4e8b\u52a1\u7684\u6301\u4e45\u5316\uff0c\u4e8b\u52a1\u6240\u5904\u7684\u5404\u79cd\u72b6\u6001\u4e8b\u52a1\u53c2\u4e0e\u65b9\u7684\u5404\u79cd\u72b6\u6001\u90fd\u9700\u8981\u6301\u4e45\u5316\uff0c\u5f53\u5b9e\u4f8b\u5b95\u673a\u65f6\u624d\u80fd\u57fa\u4e8e\u6301\u4e45\u5316\u7684\u6570\u636e\u5bf9\u4e8b\u52a1\u56de\u6eda\u6216\u63d0\u4ea4\uff0c\u5b9e\u73b0\u6700\u7ec8\u4e00\u81f4\u6027\\n2. \u5b9a\u65f6\u5bf9\u8d85\u65f6\u672a\u5b8c\u6210\u4e8b\u52a1\u7684\u5904\u7406\uff08\u7ee7\u7eed\u5c1d\u8bd5\u63d0\u4ea4\u6216\u56de\u6eda\uff09\uff0c\u5373\u901a\u8fc7\u91cd\u8bd5\u673a\u5236\u5b9e\u73b0\u4e8b\u52a1\u7684\u6700\u7ec8\u4e00\u81f4\u6027\\n3. \u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u8de8\u670d\u52a1\u5b9e\u4f8b\u4f20\u64ad\uff0c\u5f53\u5206\u5e03\u5f0f\u4e8b\u52a1\u8de8\u591a\u4e2a\u5b9e\u4f8b\u65f6\u9700\u8981\u5b9e\u73b0\u4e8b\u52a1\u7684\u4f20\u64ad\uff0c\u4e00\u822c\u9700\u8981\u9002\u914d\u4e0d\u540c\u7684rpc\u6846\u67b6\\n4. \u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b\uff1a\u5927\u591a\u6570\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e3a\u4e86\u6027\u80fd\uff0c\u9ed8\u8ba4\u7684\u9694\u79bb\u7ea7\u522b\u662f\u8bfb\u672a\u63d0\u4ea4\\n5. \u5e42\u7b49\u6027\uff1a\u5bf9\u4e8eXA\u6216\u8005seata\u7684AT\u8fd9\u6837\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u6765\u8bf4\uff0c\u90fd\u5df2\u7ecf\u9ed8\u8ba4\u5b9e\u73b0\u4e86\u5e42\u7b49\u6027\uff0c\u800cTCC\u3001Saga\u8fd9\u79cd\u63a5\u53e3\u7ea7\u522b\u5b9e\u73b0\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u90fd\u8fd8\u9700\u8981\u4e1a\u52a1\u5f00\u53d1\u8005\u81ea\u5df1\u5b9e\u73b0\u5e42\u7b49\u6027\u3002\\n\\n\u672c\u7247\u6587\u7ae0\u4e3b\u8981\u4eceseata-server\u7684\u542f\u52a8\u6d41\u7a0b\u7684\u89d2\u5ea6\u4ecb\u7ecd\u4e00\u4e0bseata-server\u7684\u6e90\u7801\uff0c\u542f\u52a8\u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200726213919467.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTE0NTg0OA==,size_16,color_FFFFFF,t_70)\\n\\n\\n#### 1. \u542f\u52a8\u7c7bServer\\nseata-server\u7684\u5165\u53e3\u7c7b\u5728Server\u7c7b\u4e2d\uff0c\u6e90\u7801\u5982\u4e0b\uff1a\\n```java\\npublic static void main(String[] args) throws IOException {\\n    // \u4ece\u73af\u5883\u53d8\u91cf\u6216\u8fd0\u884c\u65f6\u53c2\u6570\u4e2d\u83b7\u53d6\u76d1\u542c\u7aef\u53e3\uff0c\u9ed8\u8ba4\u7aef\u53e38091\\n    int port = PortHelper.getPort(args);\\n    \\n    // \u628a\u76d1\u542c\u7aef\u53e3\u8bbe\u7f6e\u5230SystemProperty\u4e2d\uff0cLogback\u7684LoggerContextListener\u5b9e\u73b0\u7c7b\\n    // SystemPropertyLoggerContextListener\u4f1a\u628aPort\u5199\u5165\u5230Logback\u7684Context\u4e2d\uff0c\\n    // \u5728logback.xml\u6587\u4ef6\u4e2d\u4f1a\u4f7f\u7528Port\u53d8\u91cf\u6765\u6784\u5efa\u65e5\u5fd7\u6587\u4ef6\u540d\u79f0\u3002\\n    System.setProperty(ConfigurationKeys.SERVER_PORT, Integer.toString(port));\\n\\n    // \u521b\u5efaLogger\\n    final Logger logger = LoggerFactory.getLogger(Server.class);\\n    if (ContainerHelper.isRunningInContainer()) {\\n        logger.info(\\"The server is running in container.\\");\\n    }\\n\\n    // \u89e3\u6790\u542f\u52a8\u4ee5\u53ca\u914d\u7f6e\u6587\u4ef6\u7684\u5404\u79cd\u914d\u7f6e\u53c2\u6570\\n    ParameterParser parameterParser = new ParameterParser(args);\\n\\n    // metrics\u76f8\u5173\uff0c\u8fd9\u91cc\u662f\u4f7f\u7528SPI\u673a\u5236\u83b7\u53d6Registry\u5b9e\u4f8b\u5bf9\u8c61\\n    MetricsManager.get().init();\\n    \\n\\t// \u628a\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bfb\u53d6\u5230\u7684storeMode\u5199\u5165SystemProperty\u4e2d\uff0c\u65b9\u4fbf\u5176\u4ed6\u7c7b\u4f7f\u7528\u3002\\n    System.setProperty(ConfigurationKeys.STORE_MODE, parameterParser.getStoreMode());\\n    \\n\\t// \u521b\u5efaNettyRemotingServer\u5b9e\u4f8b\uff0cNettyRemotingServer\u662f\u4e00\u4e2a\u57fa\u4e8eNetty\u5b9e\u73b0\u7684Rpc\u6846\u67b6\uff0c\\n\\t// \u6b64\u65f6\u5e76\u6ca1\u6709\u521d\u59cb\u5316\uff0cNettyRemotingServer\u8d1f\u8d23\u4e0e\u5ba2\u6237\u7aefSDK\u4e2d\u7684TM\u3001RM\u8fdb\u884c\u7f51\u7edc\u901a\u4fe1\u3002\\n     nettyRemotingServer = new NettyRemotingServer(WORKING_THREADS);\\n    \\n    // \u8bbe\u7f6e\u76d1\u542c\u7aef\u53e3\\n    nettyRemotingServer.setListenPort(parameterParser.getPort());\\n    \\n\\t// UUIDGenerator\u521d\u59cb\u5316\uff0cUUIDGenerator\u57fa\u4e8e\u96ea\u82b1\u7b97\u6cd5\u5b9e\u73b0\uff0c\\n\\t// \u7528\u4e8e\u751f\u6210\u5168\u5c40\u4e8b\u52a1\u3001\u5206\u652f\u4e8b\u52a1\u7684id\u3002\\n\\t// \u591a\u4e2aServer\u5b9e\u4f8b\u914d\u7f6e\u4e0d\u540c\u7684ServerNode\uff0c\u4fdd\u8bc1id\u7684\u552f\u4e00\u6027\\n    UUIDGenerator.init(parameterParser.getServerNode());\\n    \\n\\t// SessionHodler\u8d1f\u8d23\u4e8b\u52a1\u65e5\u5fd7\uff08\u72b6\u6001\uff09\u7684\u6301\u4e45\u5316\u5b58\u50a8\uff0c\\n\\t// \u5f53\u524d\u652f\u6301file\u3001db\u3001redis\u4e09\u79cd\u5b58\u50a8\u6a21\u5f0f\uff0c\u96c6\u7fa4\u90e8\u7f72\u6a21\u5f0f\u8981\u4f7f\u7528db\u6216redis\u6a21\u5f0f\\n    SessionHolder.init(parameterParser.getStoreMode());\\n    \\n  \\t// \u521b\u5efa\u521d\u59cb\u5316DefaultCoordinator\u5b9e\u4f8b\uff0cDefaultCoordinator\u662fTC\u7684\u6838\u5fc3\u4e8b\u52a1\u903b\u8f91\u5904\u7406\u7c7b\uff0c\\n  \\t// \u5e95\u5c42\u5305\u542b\u4e86AT\u3001TCC\u3001SAGA\u7b49\u4e0d\u540c\u4e8b\u52a1\u7c7b\u578b\u7684\u903b\u8f91\u5904\u7406\u3002\\n    DefaultCoordinator coordinator = new DefaultCoordinator(nettyRemotingServer);\\n    coordinator.init();\\n    nettyRemotingServer.setHandler(coordinator);\\n    // register ShutdownHook\\n    ShutdownHook.getInstance().addDisposable(coordinator);\\n    ShutdownHook.getInstance().addDisposable(nettyRemotingServer);\\n\\n    // 127.0.0.1 and 0.0.0.0 are not valid here.\\n    if (NetUtil.isValidIp(parameterParser.getHost(), false)) {\\n        XID.setIpAddress(parameterParser.getHost());\\n    } else {\\n        XID.setIpAddress(NetUtil.getLocalIp());\\n    }\\n    XID.setPort(nettyRemotingServer.getListenPort());\\n\\n    try {\\n        // \u521d\u59cb\u5316Netty\uff0c\u5f00\u59cb\u76d1\u542c\u7aef\u53e3\u5e76\u963b\u585e\u5728\u8fd9\u91cc\uff0c\u7b49\u5f85\u7a0b\u5e8f\u5173\u95ed\\n        nettyRemotingServer.init();\\n    } catch (Throwable e) {\\n        logger.error(\\"nettyServer init error:{}\\", e.getMessage(), e);\\n        System.exit(-1);\\n    }\\n\\n    System.exit(0);\\n}\\n```\\n\\n#### 2. \u89e3\u6790\u914d\u7f6e\\n\u53c2\u6570\u89e3\u6790\u7684\u5b9e\u73b0\u4ee3\u7801\u5728ParameterParser\u7c7b\u4e2d\uff0cinit\u65b9\u6cd5\u6e90\u7801\u5982\u4e0b\uff1a\\n```java \\nprivate void init(String[] args) {\\n   try {\\n   \\t   // \u5224\u65ad\u662f\u5426\u8fd0\u884c\u5728\u5bb9\u5668\u4e2d\uff0c\u5982\u679c\u8fd0\u884c\u5728\u5bb9\u5668\u4e2d\u5219\u914d\u7f6e\u4ece\u73af\u5883\u53d8\u91cf\u4e2d\u83b7\u53d6\\n       if (ContainerHelper.isRunningInContainer()) {\\n           this.seataEnv = ContainerHelper.getEnv();\\n           this.host = ContainerHelper.getHost();\\n           this.port = ContainerHelper.getPort();\\n           this.serverNode = ContainerHelper.getServerNode();\\n           this.storeMode = ContainerHelper.getStoreMode();\\n       } else {\\n           // \u57fa\u4e8eJCommander\u83b7\u53d6\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u65f6\u914d\u7f6e\u7684\u53c2\u6570\uff0c\\n           // JCommander\u901a\u8fc7\u6ce8\u89e3\u3001\u53cd\u5c04\u7684\u65b9\u5f0f\u628a\u53c2\u6570\u8d4b\u503c\u5230\u5f53\u524d\u7c7b\u7684\u5b57\u6bb5\u4e0a\u3002\\n           JCommander jCommander = JCommander.newBuilder().addObject(this).build();\\n           jCommander.parse(args);\\n           if (help) {\\n               jCommander.setProgramName(PROGRAM_NAME);\\n               jCommander.usage();\\n               System.exit(0);\\n           }\\n       }\\n       // serverNode\u7528\u4e8e\u96ea\u82b1\u7b97\u4e2d\u7684\u5b9e\u4f8b\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u9700\u8981\u4fdd\u8bc1\u552f\u4e00\u3002\\n       // \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u57fa\u4e8e\u5f53\u524d\u670d\u52a1\u5668\u7684I\u968f\u673a\u751f\u6210\u4e00\u4e2a\\n       if (this.serverNode == null) {\\n           this.serverNode = IdWorker.initWorkerId();\\n       }\\n       if (StringUtils.isNotBlank(seataEnv)) {\\n           System.setProperty(ENV_PROPERTY_KEY, seataEnv);\\n       }\\n       if (StringUtils.isBlank(storeMode)) {\\n           // \u8fd9\u91cc\u7275\u626f\u5230\u4e00\u4e2a\u91cd\u8981\u7684Configuration\u7c7b\uff0cParameterParser\u53ea\u8d1f\u8d23\u83b7\u53d6ip\u3001port\u3001storeMode\u7b49\u6838\u5fc3\u53c2\u6570\uff0c\\n           // \u5176\u4ed6\u7684\u53c2\u6570\u90fd\u662f\u4eceConfiguration\u4e2d\u83b7\u53d6\u7684\u3002\u8fd9\u91cc\u5982\u679c\u6ca1\u6709\u542f\u52a8\u53c2\u6570\u6ca1\u6709\u6307\u5b9astoreMode\uff0c\\n           // \u5c31\u4eceConfiguration\u7c7b\u4e2d\u83b7\u53d6\u3002\\n           storeMode = ConfigurationFactory.getInstance().getConfig(ConfigurationKeys.STORE_MODE,\\n               SERVER_DEFAULT_STORE_MODE);\\n       }\\n   } catch (ParameterException e) {\\n       printError(e);\\n   }\\n\\n}\\n```\\n\\n\u5728ParameterParser\u7684init\u65b9\u6cd5\u4e2d\u7b2c\u4e00\u6b21\u8c03\u7528\u4e86ConfigurationFactory.getInstance()\uff0c\u521d\u59cb\u5316\u4e86\u4e00\u4e2a\u5355\u4f8b\u7684Configuration\u5bf9\u8c61\uff0cConfiguration\u8d1f\u8d23\u521d\u59cb\u5316\u6240\u6709\u7684\u5176\u4ed6\u914d\u7f6e\u53c2\u6570\u4fe1\u606f\u3002\u4eceSeata Server\u7aef\u7684\u6e90\u7801\u4e2d\u6211\u4eec\u80fd\u770b\u5230\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6file.conf\u3001registry.conf\u3002\u90a3\u4e48\u8fd9\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff0c\u4e24\u4e2a\u6587\u4ef6\u90fd\u662f\u5fc5\u987b\u7684\u5417\uff1f\u6211\u4eec\u7ee7\u7eed\u770b\u4ee3\u7801\u3002\\n\\nConfigurationFactory.getInstance\u65b9\u6cd5\u5176\u5b9e\u5c31\u662f\u83b7\u53d6\u4e00\u4e2a\u5355\u4f8b\u5bf9\u8c61\uff0c\u6838\u5fc3\u5728buildConfiguration\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u8fc7\u5728buidlConfiguration\u65b9\u6cd5\u524d\uff0cConfigurationFactory\u7c7b\u6709\u4e00\u6bb5static\u4ee3\u7801\u5757\u4f1a\u5148\u6267\u884c\u3002\\n```java\\n// \u83b7\u53d6Configuration\u7684\u5355\u4f8b\u5bf9\u8c61\\npublic static Configuration getInstance() {\\n    if (instance == null) {\\n        synchronized (Configuration.class) {\\n            if (instance == null) {\\n                instance = buildConfiguration();\\n            }\\n        }\\n    }\\n    return instance;\\n}\\n\\n// ConfigurationFactory\u7684static\u4ee3\u7801\u5757\\nstatic {\\n    // \u83b7\u53d6\u914d\u7f6e\u6587\u4ef6\u7684\u540d\u79f0\uff0c\u9ed8\u8ba4\u4e3aregistry.conf\\n    String seataConfigName = System.getProperty(SYSTEM_PROPERTY_SEATA_CONFIG_NAME);\\n    if (seataConfigName == null) {\\n        seataConfigName = System.getenv(ENV_SEATA_CONFIG_NAME);\\n    }\\n    if (seataConfigName == null) {\\n        seataConfigName = REGISTRY_CONF_PREFIX;\\n    }\\n    String envValue = System.getProperty(ENV_PROPERTY_KEY);\\n    if (envValue == null) {\\n        envValue = System.getenv(ENV_SYSTEM_KEY);\\n    }\\n    \\n    // \u8bfb\u53d6registry.conf\u6587\u4ef6\u7684\u914d\u7f6e\uff0c\u6784\u5efa\u57fa\u7840\u7684Configuration\u5bf9\u8c61\\n    Configuration configuration = (envValue == null) ? new FileConfiguration(seataConfigName + REGISTRY_CONF_SUFFIX,\\n        false) : new FileConfiguration(seataConfigName + \\"-\\" + envValue + REGISTRY_CONF_SUFFIX, false);\\n    Configuration extConfiguration = null;\\n    try {\\n        // ExtConfigurationProvider\u5f53\u524d\u53ea\u6709\u4e00\u4e2aSpringBootConfigurationProvider\u5b9e\u73b0\u7c7b\\n        // \u7528\u4e8e\u652f\u6301\u5ba2\u6237\u7aefSDK SpringBoot\u7684\u914d\u7f6e\u6587\u4ef6\u65b9\u5f0f\uff0c\u5bf9\u4e8eServer\u7aef\u6765\u8bf4\u8fd9\u6bb5\u903b\u8f91\u53ef\u4ee5\u5ffd\u7565\u3002\\n        extConfiguration = EnhancedServiceLoader.load(ExtConfigurationProvider.class).provide(configuration);\\n        if (LOGGER.isInfoEnabled()) {\\n            LOGGER.info(\\"load Configuration:{}\\", extConfiguration == null ? configuration.getClass().getSimpleName()\\n                : extConfiguration.getClass().getSimpleName());\\n        }\\n    } catch (EnhancedServiceNotFoundException ignore) {\\n\\n    } catch (Exception e) {\\n        LOGGER.error(\\"failed to load extConfiguration:{}\\", e.getMessage(), e);\\n    }\\n    CURRENT_FILE_INSTANCE = extConfiguration == null ? configuration : extConfiguration;\\n}\\n```\\n\\nConfigurationFactory\u4e2d\u7684static\u4ee3\u7801\u5757\u662f\u4eceregistry.conf\u4e2d\u8bfb\u53d6\u914d\u7f6e\u4fe1\u606f\u3002registry.conf\u4e2d\u4e3b\u6709\u4e24\u4e2a\u914d\u7f6e\u4fe1\u606f\uff0c**\u6ce8\u518c\u4e2d\u5fc3**\u548c**\u914d\u7f6e\u6e90**\uff0c**\u914d\u7f6e\u6e90**\u7528\u6765\u6307\u5b9a\u5176\u4ed6\u66f4\u8be6\u7ec6\u7684\u914d\u7f6e\u9879\u662ffile.conf\u6216\u8005\u662fapollo\u7b49\u5176\u4ed6\u914d\u7f6e\u6e90\u3002\u6240\u4ee5registry.conf\u914d\u7f6e\u6587\u4ef6\u65f6\u5fc5\u987b\u7684\uff0cregistry.conf\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u5176\u4ed6\u8be6\u7ec6\u914d\u7f6e\u7684\u914d\u7f6e\u6e90\uff0c\u5f53\u524d\u914d\u7f6e\u6e90\u652f\u6301file\u3001zk\u3001apollo\u3001nacos\u3001etcd3\u7b49\u3002\u6240\u4ee5file.conf\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u53ea\u6709\u5f53\u8bbe\u7f6e\u914d\u7f6e\u6e90\u4e3afile\u7c7b\u578b\u65f6\u624d\u4f1a\u8bfb\u53d6file.conf\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\u3002\\n\\n\u63a5\u4e0b\u6765ConfigurationFactory\u4e2d\u7684buildConfiguration\u5c31\u662f\u6839\u636eregistry.conf\u4e2d\u8bbe\u7f6e\u7684\u914d\u7f6e\u6e90\u6765\u52a0\u8f7d\u66f4\u591a\u7684\u914d\u7f6e\u9879\u3002\\n\\n```java\\nprivate static Configuration buildConfiguration() {\\n    ConfigType configType;\\n    String configTypeName;\\n    try {\\n    \\t// \u4eceregistry.conf\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bfb\u53d6config.type\u5b57\u6bb5\u503c\uff0c\u5e76\u89e3\u6790\u4e3a\u679a\u4e3eConfigType\\n        configTypeName = CURRENT_FILE_INSTANCE.getConfig(\\n            ConfigurationKeys.FILE_ROOT_CONFIG + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR\\n                + ConfigurationKeys.FILE_ROOT_TYPE);\\n\\n        if (StringUtils.isBlank(configTypeName)) {\\n            throw new NotSupportYetException(\\"config type can not be null\\");\\n        }\\n\\n        configType = ConfigType.getType(configTypeName);\\n    } catch (Exception e) {\\n        throw e;\\n    }\\n    Configuration extConfiguration = null;\\n    Configuration configuration;\\n    if (ConfigType.File == configType) {\\n    \\t// \u5982\u679c\u914d\u7f6e\u6587\u4ef6\u4e3afile\u7c7b\u578b\uff0c\u5219\u4eceregistry.conf\u4e2d\u8bfb\u53d6config.file.name\u914d\u7f6e\u9879\uff0c\\n    \\t// \u5373file\u7c7b\u578b\u914d\u7f6e\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u793a\u4f8b\u4e2d\u9ed8\u8ba4\u4e3afile.conf\\n        String pathDataId = String.join(ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR,\\n            ConfigurationKeys.FILE_ROOT_CONFIG, FILE_TYPE, NAME_KEY);\\n        String name = CURRENT_FILE_INSTANCE.getConfig(pathDataId);\\n        \\n        // \u6839\u636efile\u914d\u7f6e\u6587\u4ef6\u7684\u8def\u5f84\u6784\u5efaFileConfuguration\u5bf9\u8c61\\n        configuration = new FileConfiguration(name);\\n        try {\\n        \\t// configuration\u7684\u989d\u5916\u6269\u5c55\uff0c\u4e5f\u662f\u53ea\u5bf9\u5ba2\u6237\u7aefSpringBoot\u7684SDK\u624d\u751f\u6548\\n            extConfiguration = EnhancedServiceLoader.load(ExtConfigurationProvider.class).provide(configuration);\\n            if (LOGGER.isInfoEnabled()) {\\n                LOGGER.info(\\"load Configuration:{}\\", extConfiguration == null\\n                    ? configuration.getClass().getSimpleName() : extConfiguration.getClass().getSimpleName());\\n            }\\n        } catch (EnhancedServiceNotFoundException ignore) {\\n\\n        } catch (Exception e) {\\n            LOGGER.error(\\"failed to load extConfiguration:{}\\", e.getMessage(), e);\\n        }\\n    } else {\\n    \\t// \u5982\u679c\u914d\u7f6e\u6587\u4ef6\u7684\u7c7b\u578b\u4e0d\u662ffile\uff0c\u5982\uff1anacos\u3001zk\u7b49\uff0c\\n    \\t// \u5219\u901a\u8fc7SPI\u7684\u65b9\u5f0f\u751f\u6210\u5bf9\u5e94\u7684ConfigurationProvider\u5bf9\u8c61\\n        configuration = EnhancedServiceLoader\\n            .load(ConfigurationProvider.class, Objects.requireNonNull(configType).name()).provide();\\n    }\\n    try {\\n    \\t// ConfigurationCache\u662f\u5bf9Configuration\u505a\u4e86\u4e00\u6b21\u5c42\u4ee3\u7406\u5185\u5b58\u7f13\u5b58\uff0c\u63d0\u5347\u83b7\u53d6\u914d\u7f6e\u7684\u6027\u80fd\\n        Configuration configurationCache;\\n        if (null != extConfiguration) {\\n            configurationCache = ConfigurationCache.getInstance().proxy(extConfiguration);\\n        } else {\\n            configurationCache = ConfigurationCache.getInstance().proxy(configuration);\\n        }\\n        if (null != configurationCache) {\\n            extConfiguration = configurationCache;\\n        }\\n    } catch (EnhancedServiceNotFoundException ignore) {\\n\\n    } catch (Exception e) {\\n        LOGGER.error(\\"failed to load configurationCacheProvider:{}\\", e.getMessage(), e);\\n    }\\n    return null == extConfiguration ? configuration : extConfiguration;\\n}\\n```\\n\\n#### 3. \u521d\u59cb\u5316UUIDGenerator\\nUUIDGenertor\u521d\u59cb\u5316\u63a5\u6536\u4e00\u4e2aserverNode\u53c2\u6570\uff0cUUIDGenertor\u5f53\u524d\u662f\u4f7f\u7528\u4e86\u96ea\u82b1\u7b97\u6cd5\u6765\u751f\u6210\u552f\u4e00Id\uff0c\u8be5serverNode\u7528\u6765\u4fdd\u8bc1\u591a\u4e2aseata-server\u5b9e\u4f8b\u751f\u6210\u7684\u552f\u4e00id\u4e0d\u91cd\u590d\u3002\\n```java\\npublic class UUIDGenerator {\\n\\n    /**\\n     * Generate uuid long.\\n     *\\n     * @return the long\\n     */\\n    public static long generateUUID() {\\n        return IdWorker.getInstance().nextId();\\n    }\\n\\n    /**\\n     * Init.\\n     *\\n     * @param serverNode the server node id\\n     */\\n    public static void init(Long serverNode) {\\n        IdWorker.init(serverNode);\\n    }\\n}\\n```\\n\\nUUIDGenerator\u662f\u5bf9IdWorker\u505a\u4e86\u5c01\u88c5\uff0c\u552f\u4e00id\u7684\u6838\u5fc3\u5b9e\u73b0\u903b\u8f91\u5728IdWoker\u7c7b\u4e2d\uff0cIdWorker\u662f\u4e00\u4e2a\u96ea\u82b1\u7b97\u6cd5\u5b9e\u73b0\u7684\u3002\u6b64\u5904\u7684IdWorker\u53c8\u662f\u4e00\u4e2a\u5355\u4f8b\\n```java\\npublic class IdWorker\\n/**\\n     * Constructor\\n     *\\n     * @param workerId\u5c31\u662f\u4e0a\u9762\u63d0\u5230\u7684ServerNode, \u53d6\u503c\u8303\u56f4\u57280\xb71023\uff0c\u4e5f\u5c31\u662f\u572864\u4f4d\u7684UUID\u4e2d\u536010\u4f4d\\n     */\\n    public IdWorker(long workerId) {\\n        if (workerId > maxWorkerId || workerId < 0) {\\n            throw new IllegalArgumentException(\\n                String.format(\\"worker Id can\'t be greater than %d or less than 0\\", maxWorkerId));\\n        }\\n        this.workerId = workerId;\\n    }\\n\\n    /**\\n     * Get the next ID (the method is thread-safe)\\n     *\\n     * @return SnowflakeId\\n     */\\n    public long nextId() {\\n        long timestamp = timeGen();\\n\\n        if (timestamp < lastTimestamp) {\\n            throw new RuntimeException(String.format(\\n                \\"clock moved backwards.  Refusing to generate id for %d milliseconds\\", lastTimestamp - timestamp));\\n        }\\n\\n        synchronized (this) {\\n            if (lastTimestamp == timestamp) {\\n                sequence = (sequence + 1) & sequenceMask;\\n                if (sequence == 0) {\\n                    timestamp = tilNextMillis(lastTimestamp);\\n                }\\n            } else {\\n                sequence = 0L;\\n            }\\n            lastTimestamp = timestamp;\\n        }\\n        //\u96ea\u82b1\u7b97\u6cd564\u4f4d\u552f\u4e00id\u7ec4\u6210\uff1a\u7b2c\u4e00\u4f4d0 + 41\u4f4d\u65f6\u95f4\u6233 + 10\u4f4dworkerId + 12\u4f4d\u81ea\u589e\u5e8f\u5217\u5316\uff08\u540c\u4e00\u65f6\u95f4\u6233\u5185\u81ea\u589e\uff09\\n        return ((timestamp - twepoch) << timestampLeftShift) | (workerId << workerIdShift) | sequence;\\n    }\\n```\\n\\n#### 4. SessionHolder\u521d\u59cb\u5316\\nSessionHolder\u8d1f\u8d23Session\u7684\u6301\u4e45\u5316\uff0c\u4e00\u4e2aSession\u5bf9\u8c61\u5bf9\u5e94\u4e00\u4e2a\u4e8b\u52a1\uff0c\u4e8b\u52a1\u5206\u4e3a\u4e24\u79cd\uff1a\u5168\u5c40\u4e8b\u52a1\uff08GlobalSession\uff09\u548c\u5206\u652f\u4e8b\u52a1\uff08BranchSession\uff09\u3002\\nSessionHolder\u652f\u6301file\u548cdb\u4e24\u79cd\u6301\u4e45\u5316\u65b9\u5f0f\uff0c\u5176\u4e2ddb\u652f\u6301\u96c6\u7fa4\u6a21\u5f0f\uff0c\u63a8\u8350\u4f7f\u7528db\u3002SessionHolder\u4e2d\u6700\u4e3b\u8981\u7684\u56db\u4e2a\u5b57\u6bb5\u5982\u4e0b\uff1a\\n```java\\n// ROOT_SESSION_MANAGER\u7528\u4e8e\u83b7\u53d6\u6240\u6709\u7684Setssion\uff0c\u4ee5\u53caSession\u7684\u521b\u5efa\u3001\u66f4\u65b0\u3001\u5220\u9664\u7b49\u3002\\nprivate static SessionManager ROOT_SESSION_MANAGER;\\n// \u7528\u4e8e\u83b7\u53d6\u3001\u66f4\u65b0\u6240\u6709\u7684\u5f02\u6b65commit\u7684Session\\nprivate static SessionManager ASYNC_COMMITTING_SESSION_MANAGER;\\n// \u7528\u4e8e\u83b7\u53d6\u3001\u66f4\u65b0\u6240\u6709\u9700\u8981\u91cd\u8bd5commit\u7684Session\\nprivate static SessionManager RETRY_COMMITTING_SESSION_MANAGER;\\n// \u7528\u4e8e\u83b7\u53d6\u3001\u66f4\u65b0\u6240\u6709\u9700\u8981\u91cd\u8bd5rollback\u7684Session\\nprivate static SessionManager RETRY_ROLLBACKING_SESSION_MANAGER;\\n```\\n\\nSessionHolder\u7684init\u65b9\u6cd5\\n```java\\npublic static void init(String mode) throws IOException {\\n    if (StringUtils.isBlank(mode)) {\\n        mode = CONFIG.getConfig(ConfigurationKeys.STORE_MODE);\\n    }\\n    StoreMode storeMode = StoreMode.get(mode);\\n    if (StoreMode.DB.equals(storeMode)) {\\n        // \u8fd9\u91cc\u53c8\u7528\u5230\u4e86SPI\u7684\u65b9\u5f0f\u52a0\u8f7dSessionManager\uff0c\\n        // \u5176\u5b9e\u4e0b\u9762\u83b7\u53d6\u7684\u56db\u4e2aSessionManager\u5b9e\u4f8b\u90fd\u662f\u540c\u4e00\u4e2a\u7c7bDataBaseSessionManager\u7684\u4e0d\u540c\u5b9e\u4f8b\uff0c\\n        // \u53ea\u662f\u7ed9DataBaseSessionManager\u7684\u6784\u9020\u51fd\u6570\u4f20\u53c2\u4e0d\u540c\u3002\\n        ROOT_SESSION_MANAGER = EnhancedServiceLoader.load(SessionManager.class, StoreMode.DB.getName());\\n        ASYNC_COMMITTING_SESSION_MANAGER = EnhancedServiceLoader.load(SessionManager.class, StoreMode.DB.getName(),\\n            new Object[] {ASYNC_COMMITTING_SESSION_MANAGER_NAME});\\n        RETRY_COMMITTING_SESSION_MANAGER = EnhancedServiceLoader.load(SessionManager.class, StoreMode.DB.getName(),\\n            new Object[] {RETRY_COMMITTING_SESSION_MANAGER_NAME});\\n        RETRY_ROLLBACKING_SESSION_MANAGER = EnhancedServiceLoader.load(SessionManager.class, StoreMode.DB.getName(),\\n            new Object[] {RETRY_ROLLBACKING_SESSION_MANAGER_NAME});\\n    } else if (StoreMode.FILE.equals(storeMode)) {\\n        //file\u6a21\u5f0f\u53ef\u4ee5\u5148\u4e0d\u5173\u5fc3\\n        ...\\n    } else {\\n        throw new IllegalArgumentException(\\"unknown store mode:\\" + mode);\\n    }\\n    // reload\u65b9\u6cd5\u5bf9\u4e8edb\u6a21\u5f0f\u53ef\u4ee5\u5ffd\u7565\\n    reload();\\n}\\n```\\n\\n\u4e0a\u9762\u770b\u5230SessionHolder\u4e2d\u7684\u56db\u4e2aSessionManager\u672c\u8d28\u90fd\u662f\u7c7bDataBaseSessionManager\u7684\u5b9e\u4f8b\uff0c\u53ea\u662f\u7ed9\u6784\u9020\u51fd\u6570\u4f20\u53c2\u4e0d\u540c\uff0c\u770b\u4e0bDataBaseSessionManager\u7684\u5b9a\u4e49\uff1a\\n```java\\npublic DataBaseSessionManager(String name) {\\n\\tsuper();\\n\\tthis.taskName = name;\\n}\\n\\n// \u6839\u636e\u5b9e\u4f8b\u7684taskName\u6765\u51b3\u5b9aallSessions\u8fd4\u56de\u7684\u4e8b\u52a1\u5217\u8868\uff0c\\n// \u5982taskName\u7b49\u4e8eASYNC_COMMITTING_SESSION_MANAGER_NAME\u7684\\n// \u5c31\u8fd4\u56de\u6240\u6709\u72b6\u6001\u4e3aAsyncCommitting\u7684\u4e8b\u52a1\u3002\\npublic Collection<GlobalSession> allSessions() {\\n\\t// get by taskName\\n\\tif (SessionHolder.ASYNC_COMMITTING_SESSION_MANAGER_NAME.equalsIgnoreCase(taskName)) {\\n\\t\\t\\treturn findGlobalSessions(new SessionCondition(GlobalStatus.AsyncCommitting));\\n\\t} else if (SessionHolder.RETRY_COMMITTING_SESSION_MANAGER_NAME.equalsIgnoreCase(taskName)) {\\n\\t\\t\\treturn findGlobalSessions(new SessionCondition(new GlobalStatus[] {GlobalStatus.CommitRetrying}));\\n\\t} else if (SessionHolder.RETRY_ROLLBACKING_SESSION_MANAGER_NAME.equalsIgnoreCase(taskName)) {\\n\\t\\t\\treturn findGlobalSessions(new SessionCondition(new GlobalStatus[] {GlobalStatus.RollbackRetrying,\\n\\t\\t\\t\\t\\tGlobalStatus.Rollbacking, GlobalStatus.TimeoutRollbacking, GlobalStatus.TimeoutRollbackRetrying}));\\n\\t} else {\\n\\t\\t// taskName\u4e3anull\uff0c\u5219\u5bf9\u5e94ROOT_SESSION_MANAGER\uff0c\u5373\u83b7\u53d6\u6240\u6709\u72b6\u6001\u7684\u4e8b\u52a1\\n\\t\\treturn findGlobalSessions(new SessionCondition(new GlobalStatus[] {\\n\\t\\t\\t\\tGlobalStatus.UnKnown, GlobalStatus.Begin,\\n\\t\\t\\t\\tGlobalStatus.Committing, GlobalStatus.CommitRetrying, GlobalStatus.Rollbacking,\\n\\t\\t\\t\\tGlobalStatus.RollbackRetrying,\\n\\t\\t\\t\\tGlobalStatus.TimeoutRollbacking, \\n\\t\\t\\t\\tGlobalStatus.TimeoutRollbackRetrying,\\n\\t\\t\\t\\tGlobalStatus.AsyncCommitting}));\\n\\t}\\n}\\n```\\n\\n#### 5. \u521d\u59cb\u5316DefaultCoordinator\\nDefaultCoordinator\u662f\u4e8b\u52a1\u534f\u8c03\u5668\u7684\u6838\u5fc3\uff0c\u5982\uff1a\u5f00\u542f\u3001\u63d0\u4ea4\u3001\u56de\u6eda\u5168\u5c40\u4e8b\u52a1\uff0c\u6ce8\u518c\u3001\u63d0\u4ea4\u3001\u56de\u6eda\u5206\u652f\u4e8b\u52a1\u90fd\u662f\u7531DefaultCoordinator\u8d1f\u8d23\u534f\u8c03\u5904\u7406\u7684\u3002DefaultCoordinato\u901a\u8fc7RpcServer\u4e0e\u8fdc\u7a0b\u7684TM\u3001RM\u901a\u4fe1\u6765\u5b9e\u73b0\u5206\u652f\u4e8b\u52a1\u7684\u63d0\u4ea4\u3001\u56de\u6eda\u7b49\u3002\\n```java\\npublic DefaultCoordinator(ServerMessageSender messageSender) {\\n\\t// \u63a5\u53e3messageSender\u7684\u5b9e\u73b0\u7c7b\u5c31\u662f\u4e0a\u6587\u63d0\u5230\u7684RpcServer\\n\\tthis.messageSender = messageSender;\\n\\t\\n\\t// DefaultCore\u5c01\u88c5\u4e86AT\u3001TCC\u3001Saga\u7b49\u5206\u5e03\u5f0f\u4e8b\u52a1\u6a21\u5f0f\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b\\n\\tthis.core = new DefaultCore(messageSender);\\n}\\n\\n// init\u65b9\u6cd5\u521d\u59cb\u5316\u4e865\u4e2a\u5b9a\u65f6\u5668\uff0c\u4e3b\u8981\u7528\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u91cd\u8bd5\u673a\u5236\uff0c\\n// \u56e0\u4e3a\u5206\u5e03\u5f0f\u73af\u5883\u7684\u4e0d\u7a33\u5b9a\u6027\u4f1a\u9020\u6210\u4e8b\u52a1\u5904\u4e8e\u4e2d\u95f4\u72b6\u6001\uff0c\\n// \u6240\u4ee5\u8981\u901a\u8fc7\u4e0d\u65ad\u7684\u91cd\u8bd5\u673a\u5236\u6765\u5b9e\u73b0\u4e8b\u52a1\u7684\u6700\u7ec8\u4e00\u81f4\u6027\u3002\\n// \u4e0b\u9762\u7684\u5b9a\u65f6\u5668\u9664\u4e86undoLogDelete\u4e4b\u5916\uff0c\u5176\u4ed6\u7684\u5b9a\u65f6\u4efb\u52a1\u9ed8\u8ba4\u90fd\u662f1\u79d2\u6267\u884c\u4e00\u6b21\u3002\\npublic void init() {\\n    // \u5904\u7406\u5904\u4e8e\u56de\u6eda\u72b6\u6001\u53ef\u91cd\u8bd5\u7684\u4e8b\u52a1\\n\\tretryRollbacking.scheduleAtFixedRate(() -> {\\n\\t\\ttry {\\n\\t\\t\\thandleRetryRollbacking();\\n\\t\\t} catch (Exception e) {\\n\\t\\t\\tLOGGER.info(\\"Exception retry rollbacking ... \\", e);\\n\\t\\t}\\n\\t}, 0, ROLLBACKING_RETRY_PERIOD, TimeUnit.MILLISECONDS);\\n\\t\\t\\n    // \u5904\u7406\u4e8c\u9636\u6bb5\u53ef\u4ee5\u91cd\u8bd5\u63d0\u4ea4\u7684\u72b6\u6001\u53ef\u91cd\u8bd5\u7684\u4e8b\u52a1\\n\\tretryCommitting.scheduleAtFixedRate(() -> {\\n\\t\\ttry {\\n\\t\\t\\thandleRetryCommitting();\\n\\t\\t} catch (Exception e) {\\n\\t\\t\\tLOGGER.info(\\"Exception retry committing ... \\", e);\\n\\t\\t}\\n\\t}, 0, COMMITTING_RETRY_PERIOD, TimeUnit.MILLISECONDS);\\n\\n    // \u5904\u7406\u5f02\u6b65\u63d0\u4ea4\u7684\u4e8b\u52a1\\n\\tasyncCommitting.scheduleAtFixedRate(() -> {\\n\\t\\ttry {\\n\\t\\t\\thandleAsyncCommitting();\\n\\t\\t} catch (Exception e) {\\n\\t\\t\\tLOGGER.info(\\"Exception async committing ... \\", e);\\n\\t\\t}\\n\\t}, 0, ASYNC_COMMITTING_RETRY_PERIOD, TimeUnit.MILLISECONDS);\\n    \\n\\t// \u68c0\u67e5\u4e8b\u52a1\u7684\u7b2c\u4e00\u9636\u6bb5\u5df2\u7ecf\u8d85\u65f6\u7684\u4e8b\u52a1\uff0c\u8bbe\u7f6e\u4e8b\u52a1\u72b6\u6001\u4e3aTimeoutRollbacking\uff0c\\n\\t// \u8be5\u4e8b\u52a1\u4f1a\u7531\u5176\u4ed6\u5b9a\u65f6\u4efb\u52a1\u6267\u884c\u56de\u6eda\u64cd\u4f5c\\n\\ttimeoutCheck.scheduleAtFixedRate(() -> {\\n\\t\\ttry {\\n\\t\\t\\ttimeoutCheck();\\n\\t\\t} catch (Exception e) {\\n\\t\\t\\tLOGGER.info(\\"Exception timeout checking ... \\", e);\\n\\t\\t}\\n\\t}, 0, TIMEOUT_RETRY_PERIOD, TimeUnit.MILLISECONDS);\\n    \\n\\t// \u6839\u636eunlog\u7684\u4fdd\u5b58\u5929\u6570\u8c03\u7528RM\u5220\u9664unlog\\n\\tundoLogDelete.scheduleAtFixedRate(() -> {\\n\\t\\ttry {\\n\\t\\t\\tundoLogDelete();\\n\\t\\t} catch (Exception e) {\\n\\t\\t\\tLOGGER.info(\\"Exception undoLog deleting ... \\", e);\\n\\t\\t}\\n\\t}, UNDO_LOG_DELAY_DELETE_PERIOD, UNDO_LOG_DELETE_PERIOD, TimeUnit.MILLISECONDS);\\n}\\n```\\n\\n#### 6. \u521d\u59cb\u5316NettyRemotingServer\\nNettyRemotingServer\u662f\u57fa\u4e8eNetty\u5b9e\u73b0\u7684\u7b80\u5316\u7248\u7684Rpc\u670d\u52a1\u7aef\uff0cNettyRemotingServer\u521d\u59cb\u5316\u65f6\u4e3b\u8981\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a\\n1. **registerProcessor**\uff1a\u6ce8\u518c\u4e0eClient\u901a\u4fe1\u7684Processor\u3002\\n2. **super.init()**\uff1asuper.init()\u65b9\u6cd5\u4e2d\u8d1f\u8d23\u521d\u59cb\u5316Netty\uff0c\u5e76\u628a\u5f53\u524d\u5b9e\u4f8b\u7684IP\u7aef\u53e3\u6ce8\u518c\u5230\u6ce8\u518c\u4e2d\u5fc3\u4e2d\\n\\n```java\\npublic void init() {\\n    // registry processor\\n    registerProcessor();\\n    if (initialized.compareAndSet(false, true)) {\\n        super.init();\\n    }\\n}\\n\\nprivate void registerProcessor() {\\n\\t// 1. \u6ce8\u518c\u6838\u5fc3\u7684ServerOnRequestProcessor\uff0c\u5373\u4e0e\u4e8b\u52a1\u5904\u7406\u76f8\u5173\u7684Processor\uff0c\\n\\t// \u5982\uff1a\u5168\u5c40\u4e8b\u52a1\u5f00\u59cb\u3001\u63d0\u4ea4\uff0c\u5206\u652f\u4e8b\u52a1\u6ce8\u518c\u3001\u53cd\u9988\u5f53\u524d\u72b6\u6001\u7b49\u3002\\n\\t// ServerOnRequestProcessor\u7684\u6784\u9020\u51fd\u6570\u4e2d\u4f20\u5165getHandler()\u8fd4\u56de\u7684\u793a\u4f8b\uff0c\u8fd9\u4e2ahandler\\n\\t// \u5c31\u662f\u524d\u9762\u63d0\u5230\u7684DefaultCoordinator\uff0cDefaultCoordinator\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u6838\u5fc3\u5904\u7406\u7c7b\\n\\tServerOnRequestProcessor onRequestProcessor =\\n\\t    new ServerOnRequestProcessor(this, getHandler());\\n\\tsuper.registerProcessor(MessageType.TYPE_BRANCH_REGISTER, onRequestProcessor, messageExecutor);\\n\\tsuper.registerProcessor(MessageType.TYPE_BRANCH_STATUS_REPORT, onRequestProcessor, messageExecutor);\\n\\tsuper.registerProcessor(MessageType.TYPE_GLOBAL_BEGIN, onRequestProcessor, messageExecutor);\\n\\tsuper.registerProcessor(MessageType.TYPE_GLOBAL_COMMIT, onRequestProcessor, messageExecutor);\\n\\tsuper.registerProcessor(MessageType.TYPE_GLOBAL_LOCK_QUERY, onRequestProcessor, messageExecutor);\\n\\tsuper.registerProcessor(MessageType.TYPE_GLOBAL_REPORT, onRequestProcessor, messageExecutor);\\n\\tsuper.registerProcessor(MessageType.TYPE_GLOBAL_ROLLBACK, onRequestProcessor, messageExecutor);\\n\\tsuper.registerProcessor(MessageType.TYPE_GLOBAL_STATUS, onRequestProcessor, messageExecutor);\\n\\tsuper.registerProcessor(MessageType.TYPE_SEATA_MERGE, onRequestProcessor, messageExecutor);\\n\\t\\n\\t// 2.\u6ce8\u518cResponseProcessor\uff0cResponseProcessor\u7528\u4e8e\u5904\u7406\u5f53Server\u7aef\u4e3b\u52a8\u53d1\u8d77\u8bf7\u6c42\u65f6\uff0c\\n\\t// Client\u7aef\u56de\u590d\u7684\u6d88\u606f\uff0c\u5373Response\u3002\u5982\uff1aServer\u5411Client\u7aef\u53d1\u9001\u5206\u652f\u4e8b\u52a1\u63d0\u4ea4\u6216\u8005\u56de\u6eda\u7684\u8bf7\u6c42\u65f6\uff0c\\n\\t// Client\u8fd4\u56de\u63d0\u4ea4/\u56de\u6eda\u7684\u7ed3\u679c\\n\\tServerOnResponseProcessor onResponseProcessor =\\n\\t    new ServerOnResponseProcessor(getHandler(), getFutures());\\n\\tsuper.registerProcessor(MessageType.TYPE_BRANCH_COMMIT_RESULT, onResponseProcessor, messageExecutor);\\n\\tsuper.registerProcessor(MessageType.TYPE_BRANCH_ROLLBACK_RESULT, onResponseProcessor, messageExecutor);\\n\\t\\n\\t// 3. Client\u7aef\u53d1\u8d77RM\u6ce8\u518c\u8bf7\u6c42\u65f6\u5bf9\u5e94\u7684Processor\\n\\tRegRmProcessor regRmProcessor = new RegRmProcessor(this);\\n\\tsuper.registerProcessor(MessageType.TYPE_REG_RM, regRmProcessor, messageExecutor);\\n\\t\\n\\t// 4. Client\u7aef\u53d1\u8d77TM\u6ce8\u518c\u8bf7\u6c42\u65f6\u5bf9\u5e94\u7684Processor\\n\\tRegTmProcessor regTmProcessor = new RegTmProcessor(this);\\n\\tsuper.registerProcessor(MessageType.TYPE_REG_CLT, regTmProcessor, null);\\n\\t\\n\\t// 5. Client\u7aef\u53d1\u9001\u5fc3\u8df3\u8bf7\u6c42\u65f6\u5bf9\u5e94\u7684Processor\\n\\tServerHeartbeatProcessor heartbeatMessageProcessor = new ServerHeartbeatProcessor(this);\\n\\tsuper.registerProcessor(MessageType.TYPE_HEARTBEAT_MSG, heartbeatMessageProcessor, null);\\n}\\n```\\n\\n\u5728NettyRemotingServer\u4e2d\u6709\u8c03\u7528\u57fa\u7c7bAbstractNettyRemotingServer\u7684init\u65b9\u6cd5\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\n```java\\npublic void init() {\\n\\t// super.init()\u65b9\u6cd5\u4e2d\u542f\u52a8\u4e86\u4e00\u4e2a\u5b9a\u65f6\u6e05\u7406\u8d85\u65f6Rpc\u8bf7\u6c42\u7684\u5b9a\u65f6\u4efb\u52a1\uff0c3S\u6267\u884c\u4e00\u6b21\u3002\\n    super.init();\\n\\t// \u914d\u7f6eNetty Server\u7aef\uff0c\u5f00\u59cb\u76d1\u542c\u7aef\u53e3\u3002\\n    serverBootstrap.start();\\n}\\n\\n// serverBootstrap.start();\\npublic void start() {\\n\\t// Netty server\u7aef\u7684\u5e38\u89c4\u914d\u7f6e\uff0c\u5176\u4e2d\u6dfb\u52a0\u4e86\u4e24\u4e2aChannelHandler\uff1a\\n\\t// ProtocolV1Decoder\u3001ProtocolV1Encoder\uff0c\\n\\t// \u5206\u522b\u5bf9\u5e94Seata\u81ea\u5b9a\u4e49RPC\u534f\u8bae\u7684\u89e3\u7801\u5668\u548c\u7f16\u7801\u5668\\n    this.serverBootstrap.group(this.eventLoopGroupBoss, this.eventLoopGroupWorker)\\n        .channel(NettyServerConfig.SERVER_CHANNEL_CLAZZ)\\n        .option(ChannelOption.SO_BACKLOG, nettyServerConfig.getSoBackLogSize())\\n        .option(ChannelOption.SO_REUSEADDR, true)\\n        .childOption(ChannelOption.SO_KEEPALIVE, true)\\n        .childOption(ChannelOption.TCP_NODELAY, true)\\n        .childOption(ChannelOption.SO_SNDBUF, nettyServerConfig.getServerSocketSendBufSize())\\n        .childOption(ChannelOption.SO_RCVBUF, nettyServerConfig.getServerSocketResvBufSize())\\n        .childOption(ChannelOption.WRITE_BUFFER_WATER_MARK,\\n            new WriteBufferWaterMark(nettyServerConfig.getWriteBufferLowWaterMark(),\\n                nettyServerConfig.getWriteBufferHighWaterMark()))\\n        .localAddress(new InetSocketAddress(listenPort))\\n        .childHandler(new ChannelInitializer<SocketChannel>() {\\n            @Override\\n            public void initChannel(SocketChannel ch) {\\n                ch.pipeline().addLast(new IdleStateHandler(nettyServerConfig.getChannelMaxReadIdleSeconds(), 0, 0))\\n                    .addLast(new ProtocolV1Decoder())\\n                    .addLast(new ProtocolV1Encoder());\\n                if (channelHandlers != null) {\\n                    addChannelPipelineLast(ch, channelHandlers);\\n                }\\n\\n            }\\n        });\\n\\n    try {\\n\\t\\t// \u5f00\u59cb\u76d1\u542c\u914d\u7f6e\u7684\u7aef\u53e3\\n        ChannelFuture future = this.serverBootstrap.bind(listenPort).sync();\\n        LOGGER.info(\\"Server started, listen port: {}\\", listenPort);\\n\\t\\t// Netty\u542f\u52a8\u6210\u529f\u4e4b\u540e\u628a\u5f53\u524d\u5b9e\u4f8b\u6ce8\u518c\u5230registry.conf\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u7684\u6ce8\u518c\u4e2d\u5fc3\u4e0a\\n        RegistryFactory.getInstance().register(new InetSocketAddress(XID.getIpAddress(), XID.getPort()));\\n        initialized.set(true);\\n        future.channel().closeFuture().sync();\\n    } catch (Exception exx) {\\n        throw new RuntimeException(exx);\\n    }\\n}\\n```"},{"id":"/seata-xa-introduce","metadata":{"permalink":"/zh-cn/blog/seata-xa-introduce","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-xa-introduce.md","title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u5982\u4f55\u5b9e\u73b0\uff1f\u6df1\u5165\u89e3\u8bfb Seata \u7684 XA \u6a21\u5f0f","description":"\u6df1\u5165\u89e3\u8bfb Seata \u7684 XA \u6a21\u5f0f","date":"2020-04-28T00:00:00.000Z","formattedDate":"2020\u5e744\u670828\u65e5","tags":[],"readingTime":20.815,"hasTruncateMarker":false,"authors":[{"name":"\u714a\u6a8d"}],"frontMatter":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u5982\u4f55\u5b9e\u73b0\uff1f\u6df1\u5165\u89e3\u8bfb Seata \u7684 XA \u6a21\u5f0f","keywords":["Seata","\u5206\u5e03\u5f0f\u4e8b\u52a1","XA","AT"],"description":"\u6df1\u5165\u89e3\u8bfb Seata \u7684 XA \u6a21\u5f0f","author":"\u714a\u6a8d","date":"2020/04/28"},"prevItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1Seata\u6e90\u7801-Server\u7aef\u542f\u52a8\u6d41\u7a0b","permalink":"/zh-cn/blog/seata-sourcecode-server-bootstrap"},"nextItem":{"title":"Seata \u6781\u7b80\u5165\u95e8","permalink":"/zh-cn/blog/seata-quick-start"}},"content":"\u4f5c\u8005\u7b80\u4ecb\uff1a\u714a\u6a8d\uff0cGitHub ID\uff1asharajava\uff0c\u963f\u91cc\u5df4\u5df4\u4e2d\u4ef6\u95f4 GTS \u7814\u53d1\u56e2\u961f\u8d1f\u8d23\u4eba\uff0cSEATA \u5f00\u6e90\u9879\u76ee\u53d1\u8d77\u4eba\uff0c\u66fe\u5728 Oracle \u5317\u4eac\u7814\u53d1\u4e2d\u5fc3\u591a\u5e74\uff0c\u4ece\u4e8b WebLogic \u6838\u5fc3\u7814\u53d1\u5de5\u4f5c\u3002\u957f\u671f\u4e13\u6ce8\u4e8e\u4e2d\u95f4\u4ef6\uff0c\u5c24\u5176\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u9886\u57df\u7684\u6280\u672f\u5b9e\u8df5\u3002\\n\\nSeata 1.2.0 \u7248\u672c\u91cd\u78c5\u53d1\u5e03\u65b0\u7684\u4e8b\u52a1\u6a21\u5f0f\uff1aXA \u6a21\u5f0f\uff0c\u5b9e\u73b0\u5bf9 XA \u534f\u8bae\u7684\u652f\u6301\u3002\\n\\n\u8fd9\u91cc\uff0c\u6211\u4eec\u4ece\u4e09\u4e2a\u65b9\u9762\u6765\u6df1\u5165\u89e3\u8bfb\u8fd9\u4e2a\u65b0\u7684\u7279\u6027\uff1a\\n\\n- \u662f\u4ec0\u4e48\uff08What\uff09\uff1aXA \u6a21\u5f0f\u662f\u4ec0\u4e48\uff1f\\n- \u4e3a\u4ec0\u4e48\uff08Why\uff09\uff1a\u4e3a\u4ec0\u4e48\u652f\u6301 XA\uff1f\\n- \u600e\u4e48\u505a\uff08How\uff09\uff1aXA \u6a21\u5f0f\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u4ee5\u53ca\u600e\u6837\u4f7f\u7528\uff1f\\n\\n# 1. XA \u6a21\u5f0f\u662f\u4ec0\u4e48\uff1f\\n\\n\u8fd9\u91cc\u6709\u4e24\u4e2a\u57fa\u672c\u7684\u524d\u7f6e\u6982\u5ff5\uff1a\\n\\n1. \u4ec0\u4e48\u662f XA\uff1f\\n2. \u4ec0\u4e48\u662f Seata \u5b9a\u4e49\u7684\u6240\u8c13 \u4e8b\u52a1\u6a21\u5f0f\uff1f\\n\\n\u57fa\u4e8e\u8fd9\u4e24\u70b9\uff0c\u518d\u6765\u7406\u89e3 XA \u6a21\u5f0f\u5c31\u5f88\u81ea\u7136\u4e86\u3002\\n\\n## 1.1 \u4ec0\u4e48\u662f XA\uff1f\\n\\nXA \u89c4\u8303 \u662f X/Open \u7ec4\u7ec7\u5b9a\u4e49\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5904\u7406\uff08DTP\uff0cDistributed Transaction Processing\uff09\u6807\u51c6\u3002\\n\\nXA \u89c4\u8303 \u63cf\u8ff0\u4e86\u5168\u5c40\u7684\u4e8b\u52a1\u7ba1\u7406\u5668\u4e0e\u5c40\u90e8\u7684\u8d44\u6e90\u7ba1\u7406\u5668\u4e4b\u95f4\u7684\u63a5\u53e3\u3002 XA\u89c4\u8303 \u7684\u76ee\u7684\u662f\u5141\u8bb8\u7684\u591a\u4e2a\u8d44\u6e90\uff08\u5982\u6570\u636e\u5e93\uff0c\u5e94\u7528\u670d\u52a1\u5668\uff0c\u6d88\u606f\u961f\u5217\u7b49\uff09\u5728\u540c\u4e00\u4e8b\u52a1\u4e2d\u8bbf\u95ee\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f ACID \u5c5e\u6027\u8de8\u8d8a\u5e94\u7528\u7a0b\u5e8f\u800c\u4fdd\u6301\u6709\u6548\u3002\\n\\nXA \u89c4\u8303 \u4f7f\u7528\u4e24\u9636\u6bb5\u63d0\u4ea4\uff082PC\uff0cTwo-Phase Commit\uff09\u6765\u4fdd\u8bc1\u6240\u6709\u8d44\u6e90\u540c\u65f6\u63d0\u4ea4\u6216\u56de\u6eda\u4efb\u4f55\u7279\u5b9a\u7684\u4e8b\u52a1\u3002\\n\\nXA \u89c4\u8303 \u5728\u4e0a\u4e16\u7eaa 90 \u5e74\u4ee3\u521d\u5c31\u88ab\u63d0\u51fa\u3002\u76ee\u524d\uff0c\u51e0\u4e4e\u6240\u6709\u4e3b\u6d41\u7684\u6570\u636e\u5e93\u90fd\u5bf9 XA \u89c4\u8303 \u63d0\u4f9b\u4e86\u652f\u6301\u3002\\n\\n## 1.2 \u4ec0\u4e48\u662f Seata \u7684\u4e8b\u52a1\u6a21\u5f0f\uff1f\\n\\nSeata \u5b9a\u4e49\u4e86\u5168\u5c40\u4e8b\u52a1\u7684\u6846\u67b6\u3002\\n\\n\u5168\u5c40\u4e8b\u52a1 \u5b9a\u4e49\u4e3a\u82e5\u5e72 \u5206\u652f\u4e8b\u52a1 \u7684\u6574\u4f53\u534f\u8c03\uff1a\\n\\n1. TM \u5411 TC \u8bf7\u6c42\u53d1\u8d77\uff08Begin\uff09\u3001\u63d0\u4ea4\uff08Commit\uff09\u3001\u56de\u6eda\uff08Rollback\uff09\u5168\u5c40\u4e8b\u52a1\u3002\\n2. TM \u628a\u4ee3\u8868\u5168\u5c40\u4e8b\u52a1\u7684 XID \u7ed1\u5b9a\u5230\u5206\u652f\u4e8b\u52a1\u4e0a\u3002\\n3. RM \u5411 TC \u6ce8\u518c\uff0c\u628a\u5206\u652f\u4e8b\u52a1\u5173\u8054\u5230 XID \u4ee3\u8868\u7684\u5168\u5c40\u4e8b\u52a1\u4e2d\u3002\\n4. RM \u628a\u5206\u652f\u4e8b\u52a1\u7684\u6267\u884c\u7ed3\u679c\u4e0a\u62a5\u7ed9 TC\u3002\uff08\u53ef\u9009\uff09\\n5. TC \u53d1\u9001\u5206\u652f\u63d0\u4ea4\uff08Branch Commit\uff09\u6216\u5206\u652f\u56de\u6eda\uff08Branch Rollback\uff09\u547d\u4ee4\u7ed9 RM\u3002\\n\\n<img src=\\"https://img.alicdn.com/tfs/TB19qmhOrY1gK0jSZTEXXXDQVXa-1330-924.png\\" alt=\\"seata-mod\\" style={{ zoom:\'50%\' }} />\\n\\nSeata \u7684 \u5168\u5c40\u4e8b\u52a1 \u5904\u7406\u8fc7\u7a0b\uff0c\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a\\n\\n- \u6267\u884c\u9636\u6bb5 \uff1a\u6267\u884c \u5206\u652f\u4e8b\u52a1\uff0c\u5e76 \u4fdd\u8bc1 \u6267\u884c\u7ed3\u679c\u6ee1\u8db3\u662f *\u53ef\u56de\u6eda\u7684\uff08Rollbackable\uff09* \u548c *\u6301\u4e45\u5316\u7684\uff08Durable\uff09*\u3002\\n- \u5b8c\u6210\u9636\u6bb5\uff1a \u6839\u636e \u6267\u884c\u9636\u6bb5 \u7ed3\u679c\u5f62\u6210\u7684\u51b3\u8bae\uff0c\u5e94\u7528\u901a\u8fc7 TM \u53d1\u51fa\u7684\u5168\u5c40\u63d0\u4ea4\u6216\u56de\u6eda\u7684\u8bf7\u6c42\u7ed9 TC\uff0cTC \u547d\u4ee4 RM \u9a71\u52a8 \u5206\u652f\u4e8b\u52a1 \u8fdb\u884c Commit \u6216 Rollback\u3002\\n\\nSeata \u7684\u6240\u8c13 \u4e8b\u52a1\u6a21\u5f0f \u662f\u6307\uff1a\u8fd0\u884c\u5728 Seata \u5168\u5c40\u4e8b\u52a1\u6846\u67b6\u4e0b\u7684 \u5206\u652f\u4e8b\u52a1 \u7684\u884c\u4e3a\u6a21\u5f0f\u3002\u51c6\u786e\u5730\u8bb2\uff0c\u5e94\u8be5\u53eb\u4f5c \u5206\u652f\u4e8b\u52a1\u6a21\u5f0f\u3002\\n\\n\u4e0d\u540c\u7684 \u4e8b\u52a1\u6a21\u5f0f \u533a\u522b\u5728\u4e8e \u5206\u652f\u4e8b\u52a1 \u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u8fbe\u5230\u5168\u5c40\u4e8b\u52a1\u4e24\u4e2a\u9636\u6bb5\u7684\u76ee\u6807\u3002\u5373\uff0c\u56de\u7b54\u4ee5\u4e0b\u4e24\u4e2a\u95ee\u9898\uff1a\\n\\n- \u6267\u884c\u9636\u6bb5 \uff1a\u5982\u4f55\u6267\u884c\u5e76 \u4fdd\u8bc1 \u6267\u884c\u7ed3\u679c\u6ee1\u8db3\u662f *\u53ef\u56de\u6eda\u7684\uff08Rollbackable\uff09* \u548c *\u6301\u4e45\u5316\u7684\uff08Durable\uff09*\u3002\\n- \u5b8c\u6210\u9636\u6bb5\uff1a \u6536\u5230 TC \u7684\u547d\u4ee4\u540e\uff0c\u5982\u4f55\u505a\u5230\u5206\u652f\u7684\u63d0\u4ea4\u6216\u56de\u6eda\uff1f\\n\\n\u4ee5\u6211\u4eec Seata \u7684 AT \u6a21\u5f0f\u548c TCC \u6a21\u5f0f\u4e3a\u4f8b\u6765\u7406\u89e3\uff1a\\n\\nAT \u6a21\u5f0f\\n\\n<img src=\\"https://img.alicdn.com/tfs/TB1NTuzOBr0gK0jSZFnXXbRRXXa-1330-924.png\\" alt=\\"at-mod\\" style={{ zoom:\'50%\' }} />\\n\\n- \u6267\u884c\u9636\u6bb5\uff1a\\n\\n- - \u53ef\u56de\u6eda\uff1a\u6839\u636e SQL \u89e3\u6790\u7ed3\u679c\uff0c\u8bb0\u5f55\u56de\u6eda\u65e5\u5fd7\\n  - \u6301\u4e45\u5316\uff1a\u56de\u6eda\u65e5\u5fd7\u548c\u4e1a\u52a1 SQL \u5728\u540c\u4e00\u4e2a\u672c\u5730\u4e8b\u52a1\u4e2d\u63d0\u4ea4\u5230\u6570\u636e\u5e93\\n\\n- \u5b8c\u6210\u9636\u6bb5\uff1a\\n\\n- - \u5206\u652f\u63d0\u4ea4\uff1a\u5f02\u6b65\u5220\u9664\u56de\u6eda\u65e5\u5fd7\u8bb0\u5f55\\n  - \u5206\u652f\u56de\u6eda\uff1a\u4f9d\u636e\u56de\u6eda\u65e5\u5fd7\u8fdb\u884c\u53cd\u5411\u8865\u507f\u66f4\u65b0\\n\\nTCC \u6a21\u5f0f\\n\\n<img src=\\"https://img.alicdn.com/tfs/TB1m59pOEY1gK0jSZFCXXcwqXXa-1330-924.png\\" alt=\\"tcc-mod\\" style={{ zoom:\'50%\' }} />\\n\\n- \u6267\u884c\u9636\u6bb5\uff1a\\n\\n- - \u8c03\u7528\u4e1a\u52a1\u5b9a\u4e49\u7684 Try \u65b9\u6cd5\uff08\u5b8c\u5168\u7531\u4e1a\u52a1\u5c42\u9762\u4fdd\u8bc1 *\u53ef\u56de\u6eda* \u548c *\u6301\u4e45\u5316*\uff09\\n\\n- \u5b8c\u6210\u9636\u6bb5\uff1a\\n\\n- - \u5206\u652f\u63d0\u4ea4\uff1a\u8c03\u7528\u5404\u4e8b\u52a1\u5206\u652f\u5b9a\u4e49\u7684 Confirm \u65b9\u6cd5\\n  - \u5206\u652f\u56de\u6eda\uff1a\u8c03\u7528\u5404\u4e8b\u52a1\u5206\u652f\u5b9a\u4e49\u7684 Cancel \u65b9\u6cd5\\n\\n## 1.3 \u4ec0\u4e48\u662f Seata \u7684 XA \u6a21\u5f0f\uff1f\\n\\nXA \u6a21\u5f0f\uff1a\\n\\n\u5728 Seata \u5b9a\u4e49\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u6846\u67b6\u5185\uff0c\u5229\u7528\u4e8b\u52a1\u8d44\u6e90\uff08\u6570\u636e\u5e93\u3001\u6d88\u606f\u670d\u52a1\u7b49\uff09\u5bf9 XA \u534f\u8bae\u7684\u652f\u6301\uff0c\u4ee5 XA \u534f\u8bae\u7684\u673a\u5236\u6765\u7ba1\u7406\u5206\u652f\u4e8b\u52a1\u7684\u4e00\u79cd \u4e8b\u52a1\u6a21\u5f0f\u3002\\n\\n<img src=\\"https://img.alicdn.com/tfs/TB1hSpccIVl614jSZKPXXaGjpXa-1330-924.png\\" alt=\\"xa-mod\\" style={{ zoom:\'50%\' }} />\\n\\n- \u6267\u884c\u9636\u6bb5\uff1a\\n\\n- - \u53ef\u56de\u6eda\uff1a\u4e1a\u52a1 SQL \u64cd\u4f5c\u653e\u5728 XA \u5206\u652f\u4e2d\u8fdb\u884c\uff0c\u7531\u8d44\u6e90\u5bf9 XA \u534f\u8bae\u7684\u652f\u6301\u6765\u4fdd\u8bc1 *\u53ef\u56de\u6eda*\\n  - \u6301\u4e45\u5316\uff1aXA \u5206\u652f\u5b8c\u6210\u540e\uff0c\u6267\u884c XA prepare\uff0c\u540c\u6837\uff0c\u7531\u8d44\u6e90\u5bf9 XA \u534f\u8bae\u7684\u652f\u6301\u6765\u4fdd\u8bc1 *\u6301\u4e45\u5316*\uff08\u5373\uff0c\u4e4b\u540e\u4efb\u4f55\u610f\u5916\u90fd\u4e0d\u4f1a\u9020\u6210\u65e0\u6cd5\u56de\u6eda\u7684\u60c5\u51b5\uff09\\n\\n- \u5b8c\u6210\u9636\u6bb5\uff1a\\n\\n- - \u5206\u652f\u63d0\u4ea4\uff1a\u6267\u884c XA \u5206\u652f\u7684 commit\\n  - \u5206\u652f\u56de\u6eda\uff1a\u6267\u884c XA \u5206\u652f\u7684 rollback\\n\\n# 2. \u4e3a\u4ec0\u4e48\u652f\u6301 XA\uff1f\\n\\n\u4e3a\u4ec0\u4e48\u8981\u5728 Seata \u4e2d\u589e\u52a0 XA \u6a21\u5f0f\u5462\uff1f\u652f\u6301 XA \u7684\u610f\u4e49\u5728\u54ea\u91cc\u5462\uff1f\\n\\n## 2.1 \u8865\u507f\u578b\u4e8b\u52a1\u6a21\u5f0f\u7684\u95ee\u9898\\n\\n\u672c\u8d28\u4e0a\uff0cSeata \u5df2\u7ecf\u652f\u6301\u7684 3 \u5927\u4e8b\u52a1\u6a21\u5f0f\uff1aAT\u3001TCC\u3001Saga \u90fd\u662f \u8865\u507f\u578b \u7684\u3002\\n\\n\u8865\u507f\u578b \u4e8b\u52a1\u5904\u7406\u673a\u5236\u6784\u5efa\u5728 \u4e8b\u52a1\u8d44\u6e90 \u4e4b\u4e0a\uff08\u8981\u4e48\u5728\u4e2d\u95f4\u4ef6\u5c42\u9762\uff0c\u8981\u4e48\u5728\u5e94\u7528\u5c42\u9762\uff09\uff0c\u4e8b\u52a1\u8d44\u6e90 \u672c\u8eab\u5bf9\u5206\u5e03\u5f0f\u4e8b\u52a1\u662f\u65e0\u611f\u77e5\u7684\u3002\\n\\n<img src=\\"https://img.alicdn.com/tfs/TB1z.qyOET1gK0jSZFrXXcNCXXa-602-460.png\\" alt=\\"img\\" style={{ zoom:\'50%\' }} />\\n\\n\u4e8b\u52a1\u8d44\u6e90 \u5bf9\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u65e0\u611f\u77e5\u5b58\u5728\u4e00\u4e2a\u6839\u672c\u6027\u7684\u95ee\u9898\uff1a\u65e0\u6cd5\u505a\u5230\u771f\u6b63\u7684 \u5168\u5c40\u4e00\u81f4\u6027 \u3002\\n\\n\u6bd4\u5982\uff0c\u4e00\u6761\u5e93\u5b58\u8bb0\u5f55\uff0c\u5904\u5728 \u8865\u507f\u578b \u4e8b\u52a1\u5904\u7406\u8fc7\u7a0b\u4e2d\uff0c\u7531 100 \u6263\u51cf\u4e3a 50\u3002\u6b64\u65f6\uff0c\u4ed3\u5e93\u7ba1\u7406\u5458\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u67e5\u8be2\u7edf\u8ba1\u5e93\u5b58\uff0c\u5c31\u770b\u5230\u5f53\u524d\u7684 50\u3002\u4e4b\u540e\uff0c\u4e8b\u52a1\u56e0\u4e3a\u5f02\u5916\u56de\u6eda\uff0c\u5e93\u5b58\u4f1a\u88ab\u8865\u507f\u56de\u6eda\u4e3a 100\u3002\u663e\u7136\uff0c\u4ed3\u5e93\u7ba1\u7406\u5458\u67e5\u8be2\u7edf\u8ba1\u5230\u7684 50 \u5c31\u662f \u810f \u6570\u636e\u3002\\n\\n\u53ef\u4ee5\u770b\u5230\uff0c\u8865\u507f\u578b \u5206\u5e03\u5f0f\u4e8b\u52a1\u673a\u5236\u56e0\u4e3a\u4e0d\u8981\u6c42 \u4e8b\u52a1\u8d44\u6e90 \u672c\u8eab\uff08\u5982\u6570\u636e\u5e93\uff09\u7684\u673a\u5236\u53c2\u4e0e\uff0c\u6240\u4ee5\u65e0\u6cd5\u4fdd\u8bc1\u4ece\u4e8b\u52a1\u6846\u67b6\u4e4b\u5916\u7684\u5168\u5c40\u89c6\u89d2\u7684\u6570\u636e\u4e00\u81f4\u6027\u3002\\n\\n## 2.2 XA \u7684\u4ef7\u503c\\n\\n\u4e0e \u8865\u507f\u578b \u4e0d\u540c\uff0cXA \u534f\u8bae \u8981\u6c42 \u4e8b\u52a1\u8d44\u6e90 \u672c\u8eab\u63d0\u4f9b\u5bf9\u89c4\u8303\u548c\u534f\u8bae\u7684\u652f\u6301\u3002\\n\\n<img src=\\"https://img.alicdn.com/tfs/TB1vs9kOvb2gK0jSZK9XXaEgFXa-602-486.png\\" alt=\\"nct\\" style={{ zoom:\'50%\' }} />\\n\\n\u56e0\u4e3a \u4e8b\u52a1\u8d44\u6e90 \u611f\u77e5\u5e76\u53c2\u4e0e\u5206\u5e03\u5f0f\u4e8b\u52a1\u5904\u7406\u8fc7\u7a0b\uff0c\u6240\u4ee5 \u4e8b\u52a1\u8d44\u6e90\uff08\u5982\u6570\u636e\u5e93\uff09\u53ef\u4ee5\u4fdd\u969c\u4ece\u4efb\u610f\u89c6\u89d2\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\u6709\u6548\u9694\u79bb\uff0c\u6ee1\u8db3\u5168\u5c40\u6570\u636e\u4e00\u81f4\u6027\u3002\\n\\n\u6bd4\u5982\uff0c\u4e0a\u4e00\u8282\u63d0\u5230\u7684\u5e93\u5b58\u66f4\u65b0\u573a\u666f\uff0cXA \u4e8b\u52a1\u5904\u7406\u8fc7\u7a0b\u4e2d\uff0c\u4e2d\u95f4\u6001\u6570\u636e\u5e93\u5b58 50 \u7531\u6570\u636e\u5e93\u672c\u8eab\u4fdd\u8bc1\uff0c\u662f\u4e0d\u4f1a\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u67e5\u8be2\u7edf\u8ba1 *\u770b* \u5230\u7684\u3002\uff08\u5f53\u7136\u9694\u79bb\u7ea7\u522b\u9700\u8981 \u8bfb\u5df2\u63d0\u4ea4 \u4ee5\u4e0a\uff09\\n\\n\u9664\u4e86 \u5168\u5c40\u4e00\u81f4\u6027 \u8fd9\u4e2a\u6839\u672c\u6027\u7684\u4ef7\u503c\u5916\uff0c\u652f\u6301 XA \u8fd8\u6709\u5982\u4e0b\u51e0\u4e2a\u65b9\u9762\u7684\u597d\u5904\uff1a\\n\\n1. \u4e1a\u52a1\u65e0\u4fb5\u5165\uff1a\u548c AT \u4e00\u6837\uff0cXA \u6a21\u5f0f\u5c06\u662f\u4e1a\u52a1\u65e0\u4fb5\u5165\u7684\uff0c\u4e0d\u7ed9\u5e94\u7528\u8bbe\u8ba1\u548c\u5f00\u53d1\u5e26\u6765\u989d\u5916\u8d1f\u62c5\u3002\\n2. \u6570\u636e\u5e93\u7684\u652f\u6301\u5e7f\u6cdb\uff1aXA \u534f\u8bae\u88ab\u4e3b\u6d41\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5e7f\u6cdb\u652f\u6301\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u9002\u914d\u5373\u53ef\u4f7f\u7528\u3002\\n3. \u591a\u8bed\u8a00\u652f\u6301\u5bb9\u6613\uff1a\u56e0\u4e3a\u4e0d\u6d89\u53ca SQL \u89e3\u6790\uff0cXA \u6a21\u5f0f\u5bf9 Seata \u7684 RM \u7684\u8981\u6c42\u6bd4\u8f83\u5c11\uff0c\u4e3a\u4e0d\u540c\u8bed\u8a00\u5f00\u53d1 SDK \u8f83\u4e4b AT \u6a21\u5f0f\u5c06\u66f4 *\u8584*\uff0c\u66f4\u5bb9\u6613\u3002\\n4. \u4f20\u7edf\u57fa\u4e8e XA \u5e94\u7528\u7684\u8fc1\u79fb\uff1a\u4f20\u7edf\u7684\uff0c\u57fa\u4e8e XA \u534f\u8bae\u7684\u5e94\u7528\uff0c\u8fc1\u79fb\u5230 Seata \u5e73\u53f0\uff0c\u4f7f\u7528 XA \u6a21\u5f0f\u5c06\u66f4\u5e73\u6ed1\u3002\\n\\n## 2.3 XA \u5e7f\u6cdb\u88ab\u8d28\u7591\u7684\u95ee\u9898\\n\\n\u4e0d\u5b58\u5728\u67d0\u4e00\u79cd\u5206\u5e03\u5f0f\u4e8b\u52a1\u673a\u5236\u53ef\u4ee5\u5b8c\u7f8e\u9002\u5e94\u6240\u6709\u573a\u666f\uff0c\u6ee1\u8db3\u6240\u6709\u9700\u6c42\u3002\\n\\nXA \u89c4\u8303\u65e9\u5728\u4e0a\u4e16\u7eaa 90 \u5e74\u4ee3\u521d\u5c31\u88ab\u63d0\u51fa\uff0c\u7528\u4ee5\u89e3\u51b3\u5206\u5e03\u5f0f\u4e8b\u52a1\u5904\u7406\u8fd9\u4e2a\u9886\u57df\u7684\u95ee\u9898\u3002\\n\\n\u73b0\u5728\uff0c\u65e0\u8bba AT \u6a21\u5f0f\u3001TCC \u6a21\u5f0f\u8fd8\u662f Saga \u6a21\u5f0f\uff0c\u8fd9\u4e9b\u6a21\u5f0f\u7684\u63d0\u51fa\uff0c\u672c\u8d28\u4e0a\u90fd\u6e90\u81ea XA \u89c4\u8303\u5bf9\u67d0\u4e9b\u573a\u666f\u9700\u6c42\u7684\u65e0\u6cd5\u6ee1\u8db3\u3002\\n\\nXA \u89c4\u8303\u5b9a\u4e49\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5904\u7406\u673a\u5236\u5b58\u5728\u4e00\u4e9b\u88ab\u5e7f\u6cdb\u8d28\u7591\u7684\u95ee\u9898\uff0c\u9488\u5bf9\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u4eec\u662f\u5982\u4f55\u601d\u8003\u7684\u5462\uff1f\\n\\n1. **\u6570\u636e\u9501\u5b9a**\uff1a\u6570\u636e\u5728\u6574\u4e2a\u4e8b\u52a1\u5904\u7406\u8fc7\u7a0b\u7ed3\u675f\u524d\uff0c\u90fd\u88ab\u9501\u5b9a\uff0c\u8bfb\u5199\u90fd\u6309\u9694\u79bb\u7ea7\u522b\u7684\u5b9a\u4e49\u7ea6\u675f\u8d77\u6765\u3002\\n\\n> \u601d\u8003\uff1a\\n>\\n> \u6570\u636e\u9501\u5b9a\u662f\u83b7\u5f97\u66f4\u9ad8\u9694\u79bb\u6027\u548c\u5168\u5c40\u4e00\u81f4\u6027\u6240\u8981\u4ed8\u51fa\u7684\u4ee3\u4ef7\u3002\\n>\\n> \u8865\u507f\u578b \u7684\u4e8b\u52a1\u5904\u7406\u673a\u5236\uff0c\u5728 \u6267\u884c\u9636\u6bb5 \u5373\u5b8c\u6210\u5206\u652f\uff08\u672c\u5730\uff09\u4e8b\u52a1\u7684\u63d0\u4ea4\uff0c\uff08\u8d44\u6e90\u5c42\u9762\uff09\u4e0d\u9501\u5b9a\u6570\u636e\u3002\u800c\u8fd9\u662f\u4ee5\u727a\u7272 \u9694\u79bb\u6027 \u4e3a\u4ee3\u4ef7\u7684\u3002\\n>\\n> \u53e6\u5916\uff0cAT \u6a21\u5f0f\u4f7f\u7528 *\u5168\u5c40\u9501* \u4fdd\u969c\u57fa\u672c\u7684 *\u5199\u9694\u79bb*\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u9501\u5b9a\u6570\u636e\u7684\uff0c\u53ea\u4e0d\u8fc7\u9501\u5728 TC \u4fa7\u96c6\u4e2d\u7ba1\u7406\uff0c\u89e3\u9501\u6548\u7387\u9ad8\u4e14\u6ca1\u6709\u963b\u585e\u7684\u95ee\u9898\u3002\\n\\n2. **\u534f\u8bae\u963b\u585e**\uff1aXA prepare \u540e\uff0c\u5206\u652f\u4e8b\u52a1\u8fdb\u5165\u963b\u585e\u9636\u6bb5\uff0c\u6536\u5230 XA commit \u6216 XA rollback \u524d\u5fc5\u987b\u963b\u585e\u7b49\u5f85\u3002\\n\\n> \u601d\u8003\uff1a\\n>\\n> \u534f\u8bae\u7684\u963b\u585e\u673a\u5236\u672c\u8eab\u5e76\u4e0d\u662f\u95ee\u9898\uff0c\u5173\u952e\u95ee\u9898\u5728\u4e8e \u534f\u8bae\u963b\u585e \u9047\u4e0a \u6570\u636e\u9501\u5b9a\u3002\\n>\\n> \u5982\u679c\u4e00\u4e2a\u53c2\u4e0e\u5168\u5c40\u4e8b\u52a1\u7684\u8d44\u6e90 \u201c\u5931\u8054\u201d \u4e86\uff08\u6536\u4e0d\u5230\u5206\u652f\u4e8b\u52a1\u7ed3\u675f\u7684\u547d\u4ee4\uff09\uff0c\u90a3\u4e48\u5b83\u9501\u5b9a\u7684\u6570\u636e\uff0c\u5c06\u4e00\u76f4\u88ab\u9501\u5b9a\u3002\u8fdb\u800c\uff0c\u751a\u81f3\u53ef\u80fd\u56e0\u6b64\u4ea7\u751f\u6b7b\u9501\u3002\\n>\\n> \u8fd9\u662f XA \u534f\u8bae\u7684\u6838\u5fc3\u75db\u70b9\uff0c\u4e5f\u662f Seata \u5f15\u5165 XA \u6a21\u5f0f\u8981\u91cd\u70b9\u89e3\u51b3\u7684\u95ee\u9898\u3002\\n>\\n> \u57fa\u672c\u601d\u8def\u662f\u4e24\u4e2a\u65b9\u9762\uff1a\u907f\u514d \u201c\u5931\u8054\u201d \u548c \u589e\u52a0 \u201c\u81ea\u89e3\u9501\u201d \u673a\u5236\u3002\uff08\u8fd9\u91cc\u6d89\u53ca\u975e\u5e38\u591a\u6280\u672f\u7ec6\u8282\uff0c\u6682\u65f6\u4e0d\u5c55\u5f00\uff0c\u5728\u540e\u7eed XA \u6a21\u5f0f\u6f14\u8fdb\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u4e13\u95e8\u62ff\u51fa\u6765\u8ba8\u8bba\uff09\\n\\n3. **\u6027\u80fd\u5dee**\uff1a\u6027\u80fd\u7684\u635f\u8017\u4e3b\u8981\u6765\u81ea\u4e24\u4e2a\u65b9\u9762\uff1a\u4e00\u65b9\u9762\uff0c\u4e8b\u52a1\u534f\u8c03\u8fc7\u7a0b\uff0c\u589e\u52a0\u5355\u4e2a\u4e8b\u52a1\u7684 RT\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5e76\u53d1\u4e8b\u52a1\u6570\u636e\u7684\u9501\u51b2\u7a81\uff0c\u964d\u4f4e\u541e\u5410\u3002\\n\\n> \u601d\u8003\uff1a\\n>\\n> \u548c\u4e0d\u4f7f\u7528\u5206\u5e03\u5f0f\u4e8b\u52a1\u652f\u6301\u7684\u8fd0\u884c\u573a\u666f\u6bd4\u8f83\uff0c\u6027\u80fd\u80af\u5b9a\u662f\u4e0b\u964d\u7684\uff0c\u8fd9\u70b9\u6beb\u65e0\u7591\u95ee\u3002\\n>\\n> \u672c\u8d28\u4e0a\uff0c\u4e8b\u52a1\uff08\u65e0\u8bba\u662f\u672c\u5730\u4e8b\u52a1\u8fd8\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\uff09\u673a\u5236\u5c31\u662f\u62ff\u90e8\u5206 \u6027\u80fd\u7684\u727a\u7272 \uff0c\u6362\u6765 \u7f16\u7a0b\u6a21\u578b\u7684\u7b80\u5355 \u3002\\n>\\n> \u4e0e\u540c\u4e3a \u4e1a\u52a1\u65e0\u4fb5\u5165 \u7684 AT \u6a21\u5f0f\u6bd4\u8f83\uff1a\\n>\\n> \u9996\u5148\uff0c\u56e0\u4e3a\u540c\u6837\u8fd0\u884c\u5728 Seata \u5b9a\u4e49\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u6846\u67b6\u4e0b\uff0cXA \u6a21\u5f0f\u5e76\u6ca1\u6709\u4ea7\u751f\u66f4\u591a\u4e8b\u52a1\u534f\u8c03\u7684\u901a\u4fe1\u5f00\u9500\u3002\\n>\\n> \u5176\u6b21\uff0c\u5e76\u53d1\u4e8b\u52a1\u95f4\uff0c\u5982\u679c\u6570\u636e\u5b58\u5728\u70ed\u70b9\uff0c\u4ea7\u751f\u9501\u51b2\u7a81\uff0c\u8fd9\u79cd\u60c5\u51b5\uff0c\u5728 AT \u6a21\u5f0f\uff08\u9ed8\u8ba4\u4f7f\u7528\u5168\u5c40\u9501\uff09\u4e0b\u540c\u6837\u5b58\u5728\u7684\u3002\\n>\\n> \u6240\u4ee5\uff0c\u5728\u5f71\u54cd\u6027\u80fd\u7684\u4e24\u4e2a\u4e3b\u8981\u65b9\u9762\uff0cXA \u6a21\u5f0f\u5e76\u4e0d\u6bd4 AT \u6a21\u5f0f\u6709\u975e\u5e38\u660e\u663e\u7684\u52a3\u52bf\u3002\\n>\\n> AT \u6a21\u5f0f\u6027\u80fd\u4f18\u52bf\u4e3b\u8981\u5728\u4e8e\uff1a\u96c6\u4e2d\u7ba1\u7406\u5168\u5c40\u6570\u636e\u9501\uff0c\u9501\u7684\u91ca\u653e\u4e0d\u9700\u8981 RM \u53c2\u4e0e\uff0c\u91ca\u653e\u9501\u975e\u5e38\u5feb\uff1b\u53e6\u5916\uff0c\u5168\u5c40\u63d0\u4ea4\u7684\u4e8b\u52a1\uff0c\u5b8c\u6210\u9636\u6bb5 \u5f02\u6b65\u5316\u3002\\n\\n# 3. XA \u6a21\u5f0f\u5982\u4f55\u5b9e\u73b0\u4ee5\u53ca\u600e\u6837\u7528\uff1f\\n\\n## 3.1 XA \u6a21\u5f0f\u7684\u8bbe\u8ba1\\n\\n### 3.1.1 \u8bbe\u8ba1\u76ee\u6807\\n\\nXA \u6a21\u5f0f\u7684\u57fa\u672c\u8bbe\u8ba1\u76ee\u6807\uff0c\u4e24\u4e2a\u4e3b\u8981\u65b9\u9762\uff1a\\n\\n1. \u4ece \u573a\u666f \u4e0a\uff0c\u6ee1\u8db3 \u5168\u5c40\u4e00\u81f4\u6027 \u7684\u9700\u6c42\u3002\\n2. \u4ece \u5e94\u7528\u4e0a\uff0c\u4fdd\u6301\u4e0e AT \u6a21\u5f0f\u4e00\u81f4\u7684\u65e0\u4fb5\u5165\u3002\\n3. \u4ece \u673a\u5236 \u4e0a\uff0c\u9002\u5e94\u5206\u5e03\u5f0f\u5fae\u670d\u52a1\u67b6\u6784\u7684\u7279\u70b9\u3002\\n\\n\u6574\u4f53\u601d\u8def\uff1a\\n\\n1. \u4e0e AT \u6a21\u5f0f\u76f8\u540c\u7684\uff1a\u4ee5\u5e94\u7528\u7a0b\u5e8f\u4e2d \u672c\u5730\u4e8b\u52a1 \u7684\u7c92\u5ea6\uff0c\u6784\u5efa\u5230 XA \u6a21\u5f0f\u7684 \u5206\u652f\u4e8b\u52a1\u3002\\n2. \u901a\u8fc7\u6570\u636e\u6e90\u4ee3\u7406\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u672c\u5730\u4e8b\u52a1\u8303\u56f4\u5916\uff0c\u5728\u6846\u67b6\u5c42\u9762\u5305\u88c5 XA \u534f\u8bae\u7684\u4ea4\u4e92\u673a\u5236\uff0c\u628a XA \u7f16\u7a0b\u6a21\u578b \u900f\u660e\u5316\u3002\\n3. \u628a XA \u7684 2PC \u62c6\u5f00\uff0c\u5728\u5206\u652f\u4e8b\u52a1 \u6267\u884c\u9636\u6bb5 \u7684\u672b\u5c3e\u5c31\u8fdb\u884c XA prepare\uff0c\u628a XA \u534f\u8bae\u5b8c\u7f8e\u878d\u5408\u5230 Seata \u7684\u4e8b\u52a1\u6846\u67b6\uff0c\u51cf\u5c11\u4e00\u8f6e RPC \u4ea4\u4e92\u3002\\n\\n### 3.1.2 \u6838\u5fc3\u8bbe\u8ba1\\n\\n#### 1. \u6574\u4f53\u8fd0\u884c\u673a\u5236\\n\\nXA \u6a21\u5f0f \u8fd0\u884c\u5728 Seata \u5b9a\u4e49\u7684\u4e8b\u52a1\u6846\u67b6\u5185\uff1a\\n\\n<img src=\\"https://img.alicdn.com/tfs/TB1uM2OaSslXu8jSZFuXXXg7FXa-1330-958.png\\" alt=\\"xa-fw\\" style={{ zoom:\'50%\' }} />\\n\\n- \u6267\u884c\u9636\u6bb5\uff08E xecute\uff09\uff1a\\n\\n- - XA start/XA end/XA prepare + SQL + \u6ce8\u518c\u5206\u652f\\n\\n- \u5b8c\u6210\u9636\u6bb5\uff08F inish\uff09\uff1a\\n\\n- - XA commit/XA rollback\\n\\n#### 2. \u6570\u636e\u6e90\u4ee3\u7406\\n\\nXA \u6a21\u5f0f\u9700\u8981 XAConnection\u3002\\n\\n\u83b7\u53d6 XAConnection \u4e24\u79cd\u65b9\u5f0f\uff1a\\n\\n- \u65b9\u5f0f\u4e00\uff1a\u8981\u6c42\u5f00\u53d1\u8005\u914d\u7f6e XADataSource\\n- \u65b9\u5f0f\u4e8c\uff1a\u6839\u636e\u5f00\u53d1\u8005\u7684\u666e\u901a DataSource \u6765\u521b\u5efa\\n\\n\u7b2c\u4e00\u79cd\u65b9\u5f0f\uff0c\u7ed9\u5f00\u53d1\u8005\u589e\u52a0\u4e86\u8ba4\u77e5\u8d1f\u62c5\uff0c\u9700\u8981\u4e3a XA \u6a21\u5f0f\u4e13\u95e8\u53bb\u5b66\u4e60\u548c\u4f7f\u7528 XA \u6570\u636e\u6e90\uff0c\u4e0e \u900f\u660e\u5316 XA \u7f16\u7a0b\u6a21\u578b\u7684\u8bbe\u8ba1\u76ee\u6807\u76f8\u8fdd\u80cc\u3002\\n\\n\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u5bf9\u5f00\u53d1\u8005\u6bd4\u8f83\u53cb\u597d\uff0c\u548c AT \u6a21\u5f0f\u4f7f\u7528\u4e00\u6837\uff0c\u5f00\u53d1\u8005\u5b8c\u5168\u4e0d\u5fc5\u5173\u5fc3 XA \u5c42\u9762\u7684\u4efb\u4f55\u95ee\u9898\uff0c\u4fdd\u6301\u672c\u5730\u7f16\u7a0b\u6a21\u578b\u5373\u53ef\u3002\\n\\n\u6211\u4eec\u4f18\u5148\u8bbe\u8ba1\u5b9e\u73b0\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff1a\u6570\u636e\u6e90\u4ee3\u7406\u6839\u636e\u666e\u901a\u6570\u636e\u6e90\u4e2d\u83b7\u53d6\u7684\u666e\u901a JDBC \u8fde\u63a5\u521b\u5efa\u51fa\u76f8\u5e94\u7684 XAConnection\u3002\\n\\n\u7c7b\u6bd4 AT \u6a21\u5f0f\u7684\u6570\u636e\u6e90\u4ee3\u7406\u673a\u5236\uff0c\u5982\u4e0b\uff1a\\n\\n<img src=\\"/img/xa/pics/ds1.png\\" alt=\\"img\\" style={{ zoom:\'50%\' }} />\\n\\n\u4f46\u662f\uff0c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u6709\u5c40\u9650\uff1a\u65e0\u6cd5\u4fdd\u8bc1\u517c\u5bb9\u7684\u6b63\u786e\u6027\u3002\\n\\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u5728\u505a\u6570\u636e\u5e93\u9a71\u52a8\u7a0b\u5e8f\u8981\u505a\u7684\u4e8b\u60c5\u3002\u4e0d\u540c\u7684\u5382\u5546\u3001\u4e0d\u540c\u7248\u672c\u7684\u6570\u636e\u5e93\u9a71\u52a8\u5b9e\u73b0\u673a\u5236\u662f\u5382\u5546\u79c1\u6709\u7684\uff0c\u6211\u4eec\u53ea\u80fd\u4fdd\u8bc1\u5728\u5145\u5206\u6d4b\u8bd5\u8fc7\u7684\u9a71\u52a8\u7a0b\u5e8f\u4e0a\u662f\u6b63\u786e\u7684\uff0c\u5f00\u53d1\u8005\u4f7f\u7528\u7684\u9a71\u52a8\u7a0b\u5e8f\u7248\u672c\u5dee\u5f02\u5f88\u53ef\u80fd\u9020\u6210\u673a\u5236\u7684\u5931\u6548\u3002\\n\\n\u8fd9\u70b9\u5728 Oracle \u4e0a\u4f53\u73b0\u975e\u5e38\u660e\u663e\u3002\u53c2\u89c1 Druid issue\uff1ahttps://github.com/alibaba/druid/issues/3707\\n\\n\u7efc\u5408\u8003\u8651\uff0cXA \u6a21\u5f0f\u7684\u6570\u636e\u6e90\u4ee3\u7406\u8bbe\u8ba1\u9700\u8981\u540c\u65f6\u652f\u6301\u7b2c\u4e00\u79cd\u65b9\u5f0f\uff1a\u57fa\u4e8e XA \u6570\u636e\u6e90\u8fdb\u884c\u4ee3\u7406\u3002\\n\\n\u7c7b\u6bd4 AT \u6a21\u5f0f\u7684\u6570\u636e\u6e90\u4ee3\u7406\u673a\u5236\uff0c\u5982\u4e0b\uff1a\\n\\n<img src=\\"/img/xa/pics/ds2.png\\" alt=\\"img\\" style={{ zoom:\'50%\' }} />\\n\\n#### 3. \u5206\u652f\u6ce8\u518c\\n\\nXA start \u9700\u8981 Xid \u53c2\u6570\u3002\\n\\n\u8fd9\u4e2a Xid \u9700\u8981\u548c Seata \u5168\u5c40\u4e8b\u52a1\u7684 XID \u548c BranchId \u5173\u8054\u8d77\u6765\uff0c\u4ee5\u4fbf\u7531 TC \u9a71\u52a8 XA \u5206\u652f\u7684\u63d0\u4ea4\u6216\u56de\u6eda\u3002\\n\\n\u76ee\u524d Seata \u7684 BranchId \u662f\u5728\u5206\u652f\u6ce8\u518c\u8fc7\u7a0b\uff0c\u7531 TC \u7edf\u4e00\u751f\u6210\u7684\uff0c\u6240\u4ee5 XA \u6a21\u5f0f\u5206\u652f\u6ce8\u518c\u7684\u65f6\u673a\u9700\u8981\u5728 XA start \u4e4b\u524d\u3002\\n\\n\u5c06\u6765\u4e00\u4e2a\u53ef\u80fd\u7684\u4f18\u5316\u65b9\u5411\uff1a\\n\\n\u628a\u5206\u652f\u6ce8\u518c\u5c3d\u91cf\u5ef6\u540e\u3002\u7c7b\u4f3c AT \u6a21\u5f0f\u5728\u672c\u5730\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u524d\u624d\u6ce8\u518c\u5206\u652f\uff0c\u907f\u514d\u5206\u652f\u6267\u884c\u5931\u8d25\u60c5\u51b5\u4e0b\uff0c\u6ca1\u6709\u610f\u4e49\u7684\u5206\u652f\u6ce8\u518c\u3002\\n\\n\u8fd9\u4e2a\u4f18\u5316\u65b9\u5411\u9700\u8981 BranchId \u751f\u6210\u673a\u5236\u7684\u53d8\u5316\u6765\u914d\u5408\u3002BranchId \u4e0d\u901a\u8fc7\u5206\u652f\u6ce8\u518c\u8fc7\u7a0b\u751f\u6210\uff0c\u800c\u662f\u751f\u6210\u540e\u518d\u5e26\u7740 BranchId \u53bb\u6ce8\u518c\u5206\u652f\u3002\\n\\n#### 4. \u5c0f\u7ed3\\n\\n\u8fd9\u91cc\u53ea\u901a\u8fc7\u51e0\u4e2a\u91cd\u8981\u7684\u6838\u5fc3\u8bbe\u8ba1\uff0c\u8bf4\u660e XA \u6a21\u5f0f\u7684\u57fa\u672c\u5de5\u4f5c\u673a\u5236\u3002\\n\\n\u6b64\u5916\uff0c\u8fd8\u6709\u5305\u62ec *\u8fde\u63a5\u4fdd\u6301*\u3001*\u5f02\u5e38\u5904\u7406* \u7b49\u91cd\u8981\u65b9\u9762\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u4ece\u9879\u76ee\u4ee3\u7801\u4e2d\u8fdb\u4e00\u6b65\u4e86\u89e3\u3002\\n\\n\u4ee5\u540e\u4f1a\u9646\u7eed\u5199\u51fa\u6765\u548c\u5927\u5bb6\u4ea4\u6d41\u3002\\n\\n### 3.1.3 \u6f14\u8fdb\u89c4\u5212\\n\\nXA \u6a21\u5f0f\u603b\u4f53\u7684\u6f14\u8fdb\u89c4\u5212\u5982\u4e0b\uff1a\\n\\n1. \u7b2c 1 \u6b65\uff08\u5df2\u7ecf\u5b8c\u6210\uff09\uff1a\u9996\u4e2a\u7248\u672c\uff081.2.0\uff09\uff0c\u628a XA \u6a21\u5f0f\u539f\u578b\u673a\u5236\u8dd1\u901a\u3002\u786e\u4fdd\u53ea\u589e\u52a0\uff0c\u4e0d\u4fee\u6539\uff0c\u4e0d\u7ed9\u5176\u4ed6\u6a21\u5f0f\u5f15\u5165\u7684\u65b0\u95ee\u9898\u3002\\n2. \u7b2c 2 \u6b65\uff08\u8ba1\u5212 5 \u6708\u5b8c\u6210\uff09\uff1a\u4e0e AT \u6a21\u5f0f\u5fc5\u8981\u7684\u878d\u5408\u3001\u91cd\u6784\u3002\\n3. \u7b2c 3 \u6b65\uff08\u8ba1\u5212 7 \u6708\u5b8c\u6210\uff09\uff1a\u5b8c\u5584\u5f02\u5e38\u5904\u7406\u673a\u5236\uff0c\u8fdb\u884c\u4e0a\u751f\u4ea7\u6240\u5fc5\u9700\u7684\u6253\u78e8\u3002\\n4. \u7b2c 4 \u6b65\uff08\u8ba1\u5212 8 \u6708\u5b8c\u6210\uff09\uff1a\u6027\u80fd\u4f18\u5316\u3002\\n5. \u7b2c 5 \u6b65\uff08\u8ba1\u5212 2020 \u5e74\u5185\u5b8c\u6210\uff09\uff1a\u7ed3\u5408 Seata \u9879\u76ee\u6b63\u5728\u8fdb\u884c\u7684\u9762\u5411\u4e91\u539f\u751f\u7684 Transaction Mesh \u8bbe\u8ba1\uff0c\u6253\u9020\u4e91\u539f\u751f\u80fd\u529b\u3002\\n\\n## 3.2 XA \u6a21\u5f0f\u7684\u4f7f\u7528\\n\\n\u4ece\u7f16\u7a0b\u6a21\u578b\u4e0a\uff0cXA \u6a21\u5f0f\u4e0e AT \u6a21\u5f0f\u4fdd\u6301\u5b8c\u5168\u4e00\u81f4\u3002\\n\\n\u53ef\u4ee5\u53c2\u8003 Seata \u5b98\u7f51\u7684\u6837\u4f8b\uff1aseata-xa\\n\\n\u6837\u4f8b\u573a\u666f\u662f Seata \u7ecf\u5178\u7684\uff0c\u6d89\u53ca\u5e93\u5b58\u3001\u8ba2\u5355\u3001\u8d26\u6237 3 \u4e2a\u5fae\u670d\u52a1\u7684\u5546\u54c1\u8ba2\u8d2d\u4e1a\u52a1\u3002\\n\\n\u5728\u6837\u4f8b\u4e2d\uff0c\u4e0a\u5c42\u7f16\u7a0b\u6a21\u578b\u4e0e AT \u6a21\u5f0f\u5b8c\u5168\u76f8\u540c\u3002\u53ea\u9700\u8981\u4fee\u6539\u6570\u636e\u6e90\u4ee3\u7406\uff0c\u5373\u53ef\u5b9e\u73b0 XA \u6a21\u5f0f\u4e0e AT \u6a21\u5f0f\u4e4b\u95f4\u7684\u5207\u6362\u3002\\n\\n```\\n    @Bean(\\"dataSource\\")\\n    public DataSource dataSource(DruidDataSource druidDataSource) {\\n        // DataSourceProxy for AT mode\\n        // return new DataSourceProxy(druidDataSource);\\n\\n        // DataSourceProxyXA for XA mode\\n        return new DataSourceProxyXA(druidDataSource);\\n    }\\n```\\n\\n# 4. \u603b\u7ed3\\n\\n\u5728\u5f53\u524d\u7684\u6280\u672f\u53d1\u5c55\u9636\u6bb5\uff0c\u4e0d\u5b58\u4e00\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u5904\u7406\u673a\u5236\u53ef\u4ee5\u5b8c\u7f8e\u6ee1\u8db3\u6240\u6709\u573a\u666f\u7684\u9700\u6c42\u3002\\n\\n\u4e00\u81f4\u6027\u3001\u53ef\u9760\u6027\u3001\u6613\u7528\u6027\u3001\u6027\u80fd\u7b49\u8bf8\u591a\u65b9\u9762\u7684\u7cfb\u7edf\u8bbe\u8ba1\u7ea6\u675f\uff0c\u9700\u8981\u7528\u4e0d\u540c\u7684\u4e8b\u52a1\u5904\u7406\u673a\u5236\u53bb\u6ee1\u8db3\u3002\\n\\nSeata \u9879\u76ee\u6700\u6838\u5fc3\u7684\u4ef7\u503c\u5728\u4e8e\uff1a\u6784\u5efa\u4e00\u4e2a\u5168\u9762\u89e3\u51b3\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u7684 \u6807\u51c6\u5316 \u5e73\u53f0\u3002\\n\\n\u57fa\u4e8e Seata\uff0c\u4e0a\u5c42\u5e94\u7528\u67b6\u6784\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u573a\u666f\u7684\u9700\u6c42\uff0c\u7075\u6d3b\u9009\u62e9\u5408\u9002\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u3002\\n\\n<img src=\\"https://img.alicdn.com/tfs/TB1lTSoOqL7gK0jSZFBXXXZZpXa-1028-528.png\\" alt=\\"img\\" style={{ zoom:\'50%\' }} />\\n\\nXA \u6a21\u5f0f\u7684\u52a0\u5165\uff0c\u8865\u9f50\u4e86 Seata \u5728 \u5168\u5c40\u4e00\u81f4\u6027 \u573a\u666f\u4e0b\u7684\u7f3a\u53e3\uff0c\u5f62\u6210 AT\u3001TCC\u3001Saga\u3001XA \u56db\u5927 \u4e8b\u52a1\u6a21\u5f0f \u7684\u7248\u56fe\uff0c\u57fa\u672c\u53ef\u4ee5\u6ee1\u8db3\u6240\u6709\u573a\u666f\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5904\u7406\u8bc9\u6c42\u3002\\n\\n\u5f53\u7136 XA \u6a21\u5f0f\u548c Seata \u9879\u76ee\u672c\u8eab\u90fd\u8fd8\u4e0d\u5c3d\u5b8c\u7f8e\uff0c\u6709\u5f88\u591a\u9700\u8981\u6539\u8fdb\u548c\u5b8c\u5584\u7684\u5730\u65b9\u3002\u975e\u5e38\u6b22\u8fce\u5927\u5bb6\u53c2\u4e0e\u5230\u9879\u76ee\u7684\u5efa\u8bbe\u4e2d\uff0c\u5171\u540c\u6253\u9020\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5e73\u53f0\u3002"},{"id":"/seata-quick-start","metadata":{"permalink":"/zh-cn/blog/seata-quick-start","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-quick-start.md","title":"Seata \u6781\u7b80\u5165\u95e8","description":"\u4ece 0 \u5f00\u59cb\u5165\u95e8 Seata\uff0c\u642d\u5efa Seata \u670d\u52a1\uff0c\u5e76\u63a5\u5165 Java \u9879\u76ee\u4e2d\u5b9e\u73b0\u5206\u5e03\u5f0f\u4e8b\u52a1","date":"2020-04-19T00:00:00.000Z","formattedDate":"2020\u5e744\u670819\u65e5","tags":[],"readingTime":13.355,"hasTruncateMarker":false,"authors":[{"name":"\u828b\u9053\u6e90\u7801"}],"frontMatter":{"title":"Seata \u6781\u7b80\u5165\u95e8","description":"\u4ece 0 \u5f00\u59cb\u5165\u95e8 Seata\uff0c\u642d\u5efa Seata \u670d\u52a1\uff0c\u5e76\u63a5\u5165 Java \u9879\u76ee\u4e2d\u5b9e\u73b0\u5206\u5e03\u5f0f\u4e8b\u52a1","keywords":["fescar\u3001seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"],"author":"\u828b\u9053\u6e90\u7801","date":"2020/04/19"},"prevItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u5982\u4f55\u5b9e\u73b0\uff1f\u6df1\u5165\u89e3\u8bfb Seata \u7684 XA \u6a21\u5f0f","permalink":"/zh-cn/blog/seata-xa-introduce"},"nextItem":{"title":"Seata \u9ad8\u53ef\u7528\u90e8\u7f72\u5b9e\u8df5","permalink":"/zh-cn/blog/seata-ha-practice"}},"content":"- [1. \u6982\u8ff0](#)\\n- [2. \u90e8\u7f72\u5355\u673a TC Server](#)\\n- [3. \u90e8\u7f72\u96c6\u7fa4 TC Server](#)\\n- [4. \u63a5\u5165 Java \u5e94\u7528](#)\\n\\n# 1. \u6982\u8ff0\\n\\n[Seata](https://github.com/seata/seata) \u662f**\u963f\u91cc**\u5f00\u6e90\u7684\u4e00\u6b3e\u5f00\u6e90\u7684**\u5206\u5e03\u5f0f\u4e8b\u52a1**\u89e3\u51b3\u65b9\u6848\uff0c\u81f4\u529b\u4e8e\u63d0\u4f9b\u9ad8\u6027\u80fd\u548c\u7b80\u5355\u6613\u7528\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u670d\u52a1\u3002\\n\\n## 1.1 \u56db\u79cd\u4e8b\u52a1\u6a21\u5f0f\\n\\nSeata \u76ee\u6807\u6253\u9020**\u4e00\u7ad9\u5f0f**\u7684\u5206\u5e03\u4e8b\u52a1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6700\u7ec8\u4f1a\u63d0\u4f9b\u56db\u79cd\u4e8b\u52a1\u6a21\u5f0f\uff1a\\n* AT \u6a21\u5f0f\uff1a\u53c2\u89c1[\u300aSeata AT \u6a21\u5f0f\u300b](https://seata.io/zh-cn/docs/dev/mode/at-mode.html)\u6587\u6863\\n* TCC \u6a21\u5f0f\uff1a\u53c2\u89c1[\u300aSeata TCC \u6a21\u5f0f\u300b](https://seata.io/zh-cn/docs/dev/mode/tcc-mode.html)\u6587\u6863\\n* Saga \u6a21\u5f0f\uff1a\u53c2\u89c1[\u300aSEATA Saga \u6a21\u5f0f\u300b](https://seata.io/zh-cn/docs/dev/mode/saga-mode.html)\u6587\u6863\\n* XA \u6a21\u5f0f\uff1a\u6b63\u5728\u5f00\u53d1\u4e2d...\\n\\n\u76ee\u524d\u4f7f\u7528\u7684**\u6d41\u884c\u5ea6**\u60c5\u51b5\u662f\uff1aAT > TCC > Saga\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u5b66\u4e60 Seata \u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u82b1\u66f4\u591a\u7cbe\u529b\u5728 **AT \u6a21\u5f0f**\u4e0a\uff0c\u6700\u597d\u641e\u61c2\u80cc\u540e\u7684\u5b9e\u73b0\u539f\u7406\uff0c\u6bd5\u7adf\u5206\u5e03\u5f0f\u4e8b\u52a1\u6d89\u53ca\u5230\u6570\u636e\u7684\u6b63\u786e\u6027\uff0c\u51fa\u95ee\u9898\u9700\u8981\u5feb\u901f\u6392\u67e5\u5b9a\u4f4d\u5e76\u89e3\u51b3\u3002\\n\\n> \u53cb\u60c5\u63d0\u793a\uff1a\u5177\u4f53\u7684\u6d41\u884c\u5ea6\uff0c\u80d6\u53cb\u53ef\u4ee5\u9009\u62e9\u770b\u770b [Wanted: who\'s using Seata](https://github.com/seata/seata/issues/1246) \u6bcf\u4e2a\u516c\u53f8\u767b\u8bb0\u7684\u4f7f\u7528\u65b9\u5f0f\u3002\\n\\n## 1.2 \u4e09\u79cd\u89d2\u8272\\n\\n\u5728 Seata \u7684\u67b6\u6784\u4e2d\uff0c\u4e00\u5171\u6709\u4e09\u4e2a\u89d2\u8272\uff1a\\n\\n![\u4e09\u4e2a\u89d2\u8272](http://www.iocoder.cn/images/Seata/2017-01-01/02.png)\\n\\n* **TC** (Transaction Coordinator) - \u4e8b\u52a1\u534f\u8c03\u8005\uff1a\u7ef4\u62a4\u5168\u5c40\u548c\u5206\u652f\u4e8b\u52a1\u7684\u72b6\u6001\uff0c\u9a71\u52a8**\u5168\u5c40\u4e8b\u52a1**\u63d0\u4ea4\u6216\u56de\u6eda\u3002\\n* **TM** (Transaction Manager) - \u4e8b\u52a1\u7ba1\u7406\u5668\uff1a\u5b9a\u4e49**\u5168\u5c40\u4e8b\u52a1**\u7684\u8303\u56f4\uff0c\u5f00\u59cb\u5168\u5c40\u4e8b\u52a1\u3001\u63d0\u4ea4\u6216\u56de\u6eda\u5168\u5c40\u4e8b\u52a1\u3002\\n* **RM** ( Resource Manager ) - \u8d44\u6e90\u7ba1\u7406\u5668\uff1a\u7ba1\u7406**\u5206\u652f\u4e8b\u52a1**\u5904\u7406\u7684\u8d44\u6e90( Resource )\uff0c\u4e0e TC \u4ea4\u8c08\u4ee5\u6ce8\u518c\u5206\u652f\u4e8b\u52a1\u548c\u62a5\u544a\u5206\u652f\u4e8b\u52a1\u7684\u72b6\u6001\uff0c\u5e76\u9a71\u52a8**\u5206\u652f\u4e8b\u52a1**\u63d0\u4ea4\u6216\u56de\u6eda\u3002\\n\\n\u5176\u4e2d\uff0cTC \u4e3a\u5355\u72ec\u90e8\u7f72\u7684 **Server** \u670d\u52a1\u7aef\uff0cTM \u548c RM \u4e3a\u5d4c\u5165\u5230\u5e94\u7528\u4e2d\u7684 **Client** \u5ba2\u6237\u7aef\u3002\\n\\n\u5728 Seata \u4e2d\uff0c\u4e00\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684**\u751f\u547d\u5468\u671f**\u5982\u4e0b\uff1a\\n\\n![\u67b6\u6784\u56fe](http://www.iocoder.cn/images/Seata/2017-01-01/01.png)\\n\\n> \u53cb\u60c5\u63d0\u793a\uff1a\u770b\u4e0b\u827f\u827f\u6dfb\u52a0\u7684\u7ea2\u8272\u5c0f\u52fe\u3002\\n\\n* TM \u8bf7\u6c42 TC \u5f00\u542f\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\u3002TC \u4f1a\u751f\u6210\u4e00\u4e2a **XID** \u4f5c\u4e3a\u8be5\u5168\u5c40\u4e8b\u52a1\u7684\u7f16\u53f7\u3002\\n    > **XID**\uff0c\u4f1a\u5728\u5fae\u670d\u52a1\u7684\u8c03\u7528\u94fe\u8def\u4e2d\u4f20\u64ad\uff0c\u4fdd\u8bc1\u5c06\u591a\u4e2a\u5fae\u670d\u52a1\u7684\u5b50\u4e8b\u52a1\u5173\u8054\u5728\u4e00\u8d77\u3002\\n\\n* RM \u8bf7\u6c42 TC \u5c06\u672c\u5730\u4e8b\u52a1\u6ce8\u518c\u4e3a\u5168\u5c40\u4e8b\u52a1\u7684\u5206\u652f\u4e8b\u52a1\uff0c\u901a\u8fc7\u5168\u5c40\u4e8b\u52a1\u7684 **XID** \u8fdb\u884c\u5173\u8054\u3002\\n* TM \u8bf7\u6c42 TC \u544a\u8bc9 **XID** \u5bf9\u5e94\u7684\u5168\u5c40\u4e8b\u52a1\u662f\u8fdb\u884c\u63d0\u4ea4\u8fd8\u662f\u56de\u6eda\u3002\\n* TC \u9a71\u52a8 RM \u4eec\u5c06 **XID** \u5bf9\u5e94\u7684\u81ea\u5df1\u7684\u672c\u5730\u4e8b\u52a1\u8fdb\u884c\u63d0\u4ea4\u8fd8\u662f\u56de\u6eda\u3002\\n\\n## 1.3 \u6846\u67b6\u652f\u6301\u60c5\u51b5\\n\\nSeata \u76ee\u524d\u63d0\u4f9b\u4e86\u5bf9\u4e3b\u6d41\u7684**\u5fae\u670d\u52a1\u6846\u67b6**\u7684\u652f\u6301\uff1a\\n* Dubbo\\n    > \u901a\u8fc7 [`seata-dubbo`](https://github.com/seata/seata/blob/develop/integration/dubbo/) \u96c6\u6210\\n\\n* SOFA-RPC\\n    > \u901a\u8fc7 [`seata-sofa-rpc`](https://github.com/seata/seata/blob/develop/integration/sofa-rpc/) \u96c6\u6210\\n\\n* Motan\\n    > \u901a\u8fc7 [`seata-motan`](https://github.com/seata/seata/blob/develop/integration/motan/) \u96c6\u6210\\n\\n* gRPC\\n    > \u901a\u8fc7 [`seata-grpc`](https://github.com/seata/seata/blob/develop/integration/gprc/) \u96c6\u6210\\n\\n* Apache HttpClient\\n    > \u901a\u8fc7 [`seata-http`](https://github.com/seata/seata/blob/develop/integration/http/) \u96c6\u6210\\n\\n* Spring Cloud OpenFeign\\n    > \u901a\u8fc7 [`spring-cloud-starter-alibaba-seata`](https://github.com/alibaba/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-starters/spring-cloud-starter-alibaba-seata/src/main/java/com/alibaba/cloud/seata/) \u7684 [`feign`](https://github.com/alibaba/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-starters/spring-cloud-starter-alibaba-seata/src/main/java/com/alibaba/cloud/seata/feign/) \u6a21\u5757\\n    \\n* Spring RestTemplate   \\n    > \u901a\u8fc7 [`spring-cloud-starter-alibaba-seata`](https://github.com/alibaba/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-starters/spring-cloud-starter-alibaba-seata/src/main/java/com/alibaba/cloud/seata/feign/SeataBeanPostProcessor.java) \u7684 [`rest`](https://github.com/alibaba/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-starters/spring-cloud-starter-alibaba-seata/src/main/java/com/alibaba/cloud/seata/rest/) \u6a21\u5757\\n\\n\u540c\u65f6\u65b9\u4fbf\u6211\u4eec\u96c6\u6210\u5230 Java \u9879\u76ee\u5f53\u4e2d\uff0cSeata \u4e5f\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684 Starter \u5e93\uff1a\\n* [`seata-spring-boot-starter`](https://mvnrepository.com/artifact/io.seata/seata-spring-boot-starter)\\n* [`spring-cloud-starter-alibaba-seata`](https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-seata)\\n\\n\u56e0\u4e3a Seata \u662f\u57fa\u4e8e [DataSource](https://docs.oracle.com/javase/7/docs/api/javax/sql/DataSource.html) \u6570\u636e\u6e90\u8fdb\u884c**\u4ee3\u7406**\u6765\u62d3\u5c55\uff0c\u6240\u4ee5\u5929\u7136\u5bf9\u4e3b\u6d41\u7684 ORM \u6846\u67b6\u63d0\u4f9b\u4e86\u975e\u5e38\u597d\u7684\u652f\u6301\uff1a\\n* MyBatis\u3001MyBatis-Plus\\n* JPA\u3001Hibernate\\n\\n## 1.4 \u6848\u4f8b\u60c5\u51b5\\n\\n\u4ece [Wanted: who\'s using Seata](https://github.com/seata/seata/issues/1246) \u7684\u767b\u8bb0\u60c5\u51b5\uff0cSeata \u5df2\u7ecf\u5728\u56fd\u5185\u5f88\u591a\u56e2\u961f\u5f00\u59cb\u843d\u5730\uff0c\u5176\u4e2d\u4e0d\u4e4f\u6709\u6ef4\u6ef4\u3001\u97f5\u8fbe\u7b49\u5927\u578b\u516c\u53f8\u3002\u53ef\u6c47\u603b\u5982\u4e0b\u56fe\uff1a\\n                                                                                                               \\n![\u6c47\u603b\u56fe](http://www.iocoder.cn/images/Seata/2017-01-01/03.png)\\n\\n\u53e6\u5916\uff0c\u5728 [awesome-seata](https://github.com/seata/awesome-seata) \u4ed3\u5e93\u4e2d\uff0c\u827f\u827f\u770b\u5230\u4e86\u6ef4\u6ef4\u7b49\u7b49\u516c\u53f8\u7684\u843d\u5730\u65f6\u7684\u6280\u672f\u5206\u4eab\uff0c\u8fd8\u662f\u975e\u5e38\u771f\u5b9e\u53ef\u9760\u7684\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a![awesome-seata \u6ef4\u6ef4](http://www.iocoder.cn/images/Seata/2017-01-01/04.png)\\n\\n\u4ece\u6848\u4f8b\u7684\u60c5\u51b5\u6765\u8bf4\uff0cSeata \u53ef\u80fd\u7ed9\u662f\u76ee\u524d\u5df2\u77e5\u6700\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u81f3\u5c11\u5bf9\u5b83\u8fdb\u884c\u6280\u672f\u6295\u5165\u662f\u975e\u5e38\u4e0d\u9519\u7684\u9009\u62e9\u3002\\n\\n# 2. \u90e8\u7f72\u5355\u673a TC Server\\n\\n\u672c\u5c0f\u8282\uff0c\u6211\u4eec\u6765\u5b66\u4e60\u90e8\u7f72**\u5355\u673a** Seata **TC** Server\uff0c\u5e38\u7528\u4e8e\u5b66\u4e60\u6216\u6d4b\u8bd5\u4f7f\u7528\uff0c\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u90e8\u7f72\u5355\u673a\u3002\\n\\n\u56e0\u4e3a TC \u9700\u8981\u8fdb\u884c\u5168\u5c40\u4e8b\u52a1\u548c\u5206\u652f\u4e8b\u52a1\u7684\u8bb0\u5f55\uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u5e94\u7684**\u5b58\u50a8**\u3002\u76ee\u524d\uff0cTC \u6709\u4e24\u79cd\u5b58\u50a8\u6a21\u5f0f( `store.mode` )\uff1a\\n\\n* file \u6a21\u5f0f\uff1a\u9002\u5408**\u5355\u673a**\u6a21\u5f0f\uff0c\u5168\u5c40\u4e8b\u52a1\u4f1a\u8bdd\u4fe1\u606f\u5728**\u5185\u5b58**\u4e2d\u8bfb\u5199\uff0c\u5e76\u6301\u4e45\u5316\u672c\u5730\u6587\u4ef6 `root.data`\uff0c\u6027\u80fd\u8f83\u9ad8\u3002\\n* db \u6a21\u5f0f\uff1a\u9002\u5408**\u96c6\u7fa4**\u6a21\u5f0f\uff0c\u5168\u5c40\u4e8b\u52a1\u4f1a\u8bdd\u4fe1\u606f\u901a\u8fc7 **db** \u5171\u4eab\uff0c\u76f8\u5bf9\u6027\u80fd\u5dee\u70b9\u3002\\n\\n\u663e\u7136\uff0c\u6211\u4eec\u5c06\u91c7\u7528 file \u6a21\u5f0f\uff0c\u6700\u7ec8\u6211\u4eec\u90e8\u7f72\u5355\u673a TC Server \u5982\u4e0b\u56fe\u6240\u793a\uff1a![\u5355\u673a TC Server](http://www.iocoder.cn/images/Seata/2017-01-01/11.png)\\n\\n\u54d4\u54d4\u5b8c\u8fd9\u4e48\u591a\uff0c\u6211\u4eec\u5f00\u59cb\u6b63\u5f0f\u90e8\u7f72\u5355\u673a TC Server\uff0c\u8fd9\u91cc\u827f\u827f\u4f7f\u7528 macOS \u7cfb\u7edf\uff0c\u548c Linux\u3001Windows \u662f\u5dee\u4e0d\u591a\u7684\uff0c\u80d6\u53cb\u8111\u8865\u7ffb\u8bd1\u3002\\n\\n## 2.1 \u4e0b\u8f7d Seata \u8f6f\u4ef6\u5305\\n\\n\u6253\u5f00 [Seata \u4e0b\u8f7d\u9875\u9762](https://github.com/seata/seata/releases)\uff0c\u9009\u62e9\u60f3\u8981\u7684 Seata \u7248\u672c\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u9009\u62e9 [v1.1.0](https://github.com/seata/seata/releases/tag/v1.1.0) \u6700\u65b0\u7248\u672c\u3002\\n\\n```Bash\\n# \u521b\u5efa\u76ee\u5f55\\n$ mkdir -p /Users/yunai/Seata\\n$ cd /Users/yunai/Seata\\n\\n# \u4e0b\u8f7d\\n$ wget https://github.com/seata/seata/releases/download/v1.1.0/seata-server-1.1.0.tar.gz\\n\\n# \u89e3\u538b\\n$ tar -zxvf seata-server-1.1.0.tar.gz\\n\\n# \u67e5\u770b\u76ee\u5f55\\n$ cd seata\\n$ ls -ls\\n24 -rw-r--r--    1 yunai  staff  11365 May 13  2019 LICENSE\\n 0 drwxr-xr-x    4 yunai  staff    128 Apr  2 07:46 bin # \u6267\u884c\u811a\u672c\\n 0 drwxr-xr-x    9 yunai  staff    288 Feb 19 23:49 conf # \u914d\u7f6e\u6587\u4ef6\\n 0 drwxr-xr-x  138 yunai  staff   4416 Apr  2 07:46 lib #  seata-*.jar + \u4f9d\u8d56\u5e93 \\n```\\n\\n## 2.2 \u542f\u52a8 TC Server\\n\\n\u6267\u884c `nohup sh bin/seata-server.sh &` \u547d\u4ee4\uff0c\u542f\u52a8 TC Server \u5728\u540e\u53f0\u3002\u5728 `nohup.out` \u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u5982\u4e0b\u65e5\u5fd7\uff0c\u8bf4\u660e\u542f\u52a8\u6210\u529f\uff1a\\n\\n```Java\\n# \u4f7f\u7528 File \u5b58\u50a8\u5668\\n2020-04-02 08:36:01.302 INFO [main]io.seata.common.loader.EnhancedServiceLoader.loadFile:247 -load TransactionStoreManager[FILE] extension by class[io.seata.server.store.file.FileTransactionStoreManager]\\n2020-04-02 08:36:01.302 INFO [main]io.seata.common.loader.EnhancedServiceLoader.loadFile:247 -load SessionManager[FILE] extension by class[io.seata.server.session.file.FileBasedSessionManager]\\n# \u542f\u52a8\u6210\u529f\\n2020-04-02 08:36:01.597 INFO [main]io.seata.core.rpc.netty.RpcServerBootstrap.start:155 -Server started ...\\n```\\n* \u9ed8\u8ba4\u914d\u7f6e\u4e0b\uff0cSeata TC Server \u542f\u52a8\u5728 **8091** \u7aef\u70b9\u3002\\n\\n\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528 file \u6a21\u5f0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u770b\u5230\u7528\u4e8e\u6301\u4e45\u5316\u7684\u672c\u5730\u6587\u4ef6 `root.data`\u3002\u64cd\u4f5c\u547d\u4ee4\u5982\u4e0b\uff1a\\n\\n```Bash\\n$ ls -ls sessionStore/\\ntotal 0\\n0 -rw-r--r--  1 yunai  staff  0 Apr  2 08:36 root.data\\n```\\n\\n\u540e\u7eed\uff0c\u80d6\u53cb\u53ef\u4ee5\u9605\u8bfb[\u300c4. \u63a5\u5165 Java \u5e94\u7528\u300d](#)\u5c0f\u8282\uff0c\u5f00\u59cb\u4f7f\u7528 Seata \u5b9e\u73b0\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002\\n\\n# 3. \u90e8\u7f72\u96c6\u7fa4 TC Server\\n\\n\u672c\u5c0f\u8282\uff0c\u6211\u4eec\u6765\u5b66\u4e60\u90e8\u7f72**\u96c6\u7fa4** Seata **TC** Server\uff0c\u5b9e\u73b0\u9ad8\u53ef\u7528\uff0c\u751f\u4ea7\u73af\u5883\u4e0b\u5fc5\u5907\u3002\u5728\u96c6\u7fa4\u65f6\uff0c\u591a\u4e2a Seata TC Server \u901a\u8fc7 **db** \u6570\u636e\u5e93\uff0c\u5b9e\u73b0\u5168\u5c40\u4e8b\u52a1\u4f1a\u8bdd\u4fe1\u606f\u7684\u5171\u4eab\u3002\\n\\n\u540c\u65f6\uff0c\u6bcf\u4e2a Seata TC Server \u53ef\u4ee5\u6ce8\u518c\u81ea\u5df1\u5230\u6ce8\u518c\u4e2d\u5fc3\u4e0a\uff0c\u65b9\u4fbf\u5e94\u7528\u4ece\u6ce8\u518c\u4e2d\u5fc3\u83b7\u5f97\u5230\u4ed6\u4eec\u3002\u6700\u7ec8\u6211\u4eec\u90e8\u7f72 \u96c6\u7fa4 TC Server \u5982\u4e0b\u56fe\u6240\u793a\uff1a![\u96c6\u7fa4 TC Server](http://www.iocoder.cn/images/Seata/2017-01-01/21.png)\\n\\nSeata TC Server \u5bf9\u4e3b\u6d41\u7684\u6ce8\u518c\u4e2d\u5fc3\u90fd\u63d0\u4f9b\u4e86\u96c6\u6210\uff0c\u5177\u4f53\u53ef\u89c1 [discovery](https://github.com/seata/seata/tree/develop/discovery) \u76ee\u5f55\u3002\u8003\u8651\u5230\u56fd\u5185\u4f7f\u7528 Nacos \u4f5c\u4e3a\u6ce8\u518c\u4e2d\u5fc3\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u91c7\u7528\u5b83\u3002\\n\\n> \u53cb\u60c5\u63d0\u793a\uff1a\u5982\u679c\u5bf9 Nacos \u4e0d\u4e86\u89e3\u7684\u80d6\u53cb\uff0c\u53ef\u4ee5\u53c2\u8003[\u300aNacos \u5b89\u88c5\u90e8\u7f72\u300b](http://www.iocoder.cn/Nacos/install/?self)\u6587\u7ae0\u3002\\n\\n\u54d4\u54d4\u5b8c\u8fd9\u4e48\u591a\uff0c\u6211\u4eec\u5f00\u59cb\u6b63\u5f0f\u90e8\u7f72\u5355\u673a TC Server\uff0c\u8fd9\u91cc\u827f\u827f\u4f7f\u7528 macOS \u7cfb\u7edf\uff0c\u548c Linux\u3001Windows \u662f\u5dee\u4e0d\u591a\u7684\uff0c\u80d6\u53cb\u8111\u8865\u7ffb\u8bd1\u3002\\n\\n## 3.1 \u4e0b\u8f7d Seata \u8f6f\u4ef6\u5305\\n\\n\u6253\u5f00 [Seata \u4e0b\u8f7d\u9875\u9762](https://github.com/seata/seata/releases)\uff0c\u9009\u62e9\u60f3\u8981\u7684 Seata \u7248\u672c\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u9009\u62e9 [v1.1.0](https://github.com/seata/seata/releases/tag/v1.1.0) \u6700\u65b0\u7248\u672c\u3002\\n\\n```Bash\\n# \u521b\u5efa\u76ee\u5f55\\n$ mkdir -p /Users/yunai/Seata\\n$ cd /Users/yunai/Seata\\n\\n# \u4e0b\u8f7d\\n$ wget https://github.com/seata/seata/releases/download/v1.1.0/seata-server-1.1.0.tar.gz\\n\\n# \u89e3\u538b\\n$ tar -zxvf seata-server-1.1.0.tar.gz\\n\\n# \u67e5\u770b\u76ee\u5f55\\n$ cd seata\\n$ ls -ls\\n24 -rw-r--r--    1 yunai  staff  11365 May 13  2019 LICENSE\\n 0 drwxr-xr-x    4 yunai  staff    128 Apr  2 07:46 bin # \u6267\u884c\u811a\u672c\\n 0 drwxr-xr-x    9 yunai  staff    288 Feb 19 23:49 conf # \u914d\u7f6e\u6587\u4ef6\\n 0 drwxr-xr-x  138 yunai  staff   4416 Apr  2 07:46 lib #  seata-*.jar + \u4f9d\u8d56\u5e93 \\n```\\n\\n## 3.2 \u521d\u59cb\u5316\u6570\u636e\u5e93\\n\\n\u2460 \u4f7f\u7528 [`mysql.sql`](https://github.com/seata/seata/blob/develop/script/server/db/mysql.sql) \u811a\u672c\uff0c\u521d\u59cb\u5316 Seata TC Server \u7684 db \u6570\u636e\u5e93\u3002\u811a\u672c\u5185\u5bb9\u5982\u4e0b\uff1a\\n\\n```SQL\\n-- -------------------------------- The script used when storeMode is \'db\' --------------------------------\\n-- the table to store GlobalSession data\\nCREATE TABLE IF NOT EXISTS `global_table`\\n(\\n    `xid`                       VARCHAR(128) NOT NULL,\\n    `transaction_id`            BIGINT,\\n    `status`                    TINYINT      NOT NULL,\\n    `application_id`            VARCHAR(32),\\n    `transaction_service_group` VARCHAR(32),\\n    `transaction_name`          VARCHAR(128),\\n    `timeout`                   INT,\\n    `begin_time`                BIGINT,\\n    `application_data`          VARCHAR(2000),\\n    `gmt_create`                DATETIME,\\n    `gmt_modified`              DATETIME,\\n    PRIMARY KEY (`xid`),\\n    KEY `idx_gmt_modified_status` (`gmt_modified`, `status`),\\n    KEY `idx_transaction_id` (`transaction_id`)\\n) ENGINE = InnoDB\\n  DEFAULT CHARSET = utf8;\\n\\n-- the table to store BranchSession data\\nCREATE TABLE IF NOT EXISTS `branch_table`\\n(\\n    `branch_id`         BIGINT       NOT NULL,\\n    `xid`               VARCHAR(128) NOT NULL,\\n    `transaction_id`    BIGINT,\\n    `resource_group_id` VARCHAR(32),\\n    `resource_id`       VARCHAR(256),\\n    `branch_type`       VARCHAR(8),\\n    `status`            TINYINT,\\n    `client_id`         VARCHAR(64),\\n    `application_data`  VARCHAR(2000),\\n    `gmt_create`        DATETIME(6),\\n    `gmt_modified`      DATETIME(6),\\n    PRIMARY KEY (`branch_id`),\\n    KEY `idx_xid` (`xid`)\\n) ENGINE = InnoDB\\n  DEFAULT CHARSET = utf8;\\n\\n-- the table to store lock data\\nCREATE TABLE IF NOT EXISTS `lock_table`\\n(\\n    `row_key`        VARCHAR(128) NOT NULL,\\n    `xid`            VARCHAR(96),\\n    `transaction_id` BIGINT,\\n    `branch_id`      BIGINT       NOT NULL,\\n    `resource_id`    VARCHAR(256),\\n    `table_name`     VARCHAR(32),\\n    `pk`             VARCHAR(36),\\n    `gmt_create`     DATETIME,\\n    `gmt_modified`   DATETIME,\\n    PRIMARY KEY (`row_key`),\\n    KEY `idx_branch_id` (`branch_id`)\\n) ENGINE = InnoDB\\n  DEFAULT CHARSET = utf8;\\n```\\n\\n\u5728 MySQL \u4e2d\uff0c\u521b\u5efa `seata` \u6570\u636e\u5e93\uff0c\u5e76\u5728\u8be5\u5e93\u4e0b\u6267\u884c\u8be5\u811a\u672c\u3002\u6700\u7ec8\u7ed3\u679c\u5982\u4e0b\u56fe\uff1a![`seata` \u6570\u636e\u5e93 - MySQL 5.X](http://www.iocoder.cn/images/Seata/2017-01-01/22.png)\\n\\n\u2461 \u4fee\u6539 `conf/file` \u914d\u7f6e\u6587\u4ef6\uff0c\u4fee\u6539\u4f7f\u7528 db \u6570\u636e\u5e93\uff0c\u5b9e\u73b0 Seata TC Server \u7684\u5168\u5c40\u4e8b\u52a1\u4f1a\u8bdd\u4fe1\u606f\u7684\u5171\u4eab\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a![`conf/file` \u914d\u7f6e\u6587\u4ef6](http://www.iocoder.cn/images/Seata/2017-01-01/23.png)\\n\\n\u2462 MySQL8 \u7684\u652f\u6301\\n\\n> \u5982\u679c\u80d6\u53cb\u4f7f\u7528\u7684 MySQL \u662f 8.X \u7248\u672c\uff0c\u5219\u9700\u8981\u770b\u8be5\u6b65\u9aa4\u3002\u5426\u5219\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u3002\\n\\n\u9996\u5148\uff0c\u9700\u8981\u4e0b\u8f7d MySQL 8.X JDBC \u9a71\u52a8\uff0c\u547d\u4ee4\u884c\u64cd\u4f5c\u5982\u4e0b\uff1a\\n\\n```Bash\\n$ cd lib\\n$ wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.19/mysql-connector-java-8.0.19.jar\\n```\\n\\n\u7136\u540e\uff0c\u4fee\u6539 `conf/file` \u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u7528\u8be5 MySQL 8.X JDBC \u9a71\u52a8\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a![`seata` \u6570\u636e\u5e93 - MySQL 8.X](http://www.iocoder.cn/images/Seata/2017-01-01/24.png)\\n\\n## 3.3 \u8bbe\u7f6e\u4f7f\u7528 Nacos \u6ce8\u518c\u4e2d\u5fc3\\n\\n\u4fee\u6539 `conf/registry.conf` \u914d\u7f6e\u6587\u4ef6\uff0c\u8bbe\u7f6e\u4f7f\u7528 Nacos \u6ce8\u518c\u4e2d\u5fc3\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a![`conf/registry.conf` \u914d\u7f6e\u6587\u4ef6](http://www.iocoder.cn/images/Seata/2017-01-01/25.png)\\n\\n## 3.4 \u542f\u52a8 TC Server\\n\\n\u2460 \u6267\u884c `nohup sh bin/seata-server.sh -p 18091 -n 1 &` \u547d\u4ee4\uff0c\u542f\u52a8**\u7b2c\u4e00\u4e2a** TC Server \u5728\u540e\u53f0\u3002\\n* `-p`\uff1aSeata TC Server \u76d1\u542c\u7684\u7aef\u53e3\u3002\\n* `-n`\uff1aServer node\u3002\u5728\u591a\u4e2a TC Server \u65f6\uff0c\u9700\u533a\u5206\u5404\u81ea\u8282\u70b9\uff0c\u7528\u4e8e\u751f\u6210\u4e0d\u540c\u533a\u95f4\u7684 transactionId \u4e8b\u52a1\u7f16\u53f7\uff0c\u4ee5\u514d\u51b2\u7a81\u3002\\n\\n\u5728 `nohup.out` \u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u5982\u4e0b\u65e5\u5fd7\uff0c\u8bf4\u660e\u542f\u52a8\u6210\u529f\uff1a\\n\\n```Java\\n# \u4f7f\u7528 DB \u5b58\u50a8\u5668\\n2020-04-05 16:54:12.793 INFO [main]io.seata.common.loader.EnhancedServiceLoader.loadFile:247 -load DataSourceGenerator[dbcp] extension by class[io.seata.server.store.db.DbcpDataSourceGenerator]\\nLoading class `com.mysql.jdbc.Driver\'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver\'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.\\n2020-04-05 16:54:13.442 INFO [main]io.seata.common.loader.EnhancedServiceLoader.loadFile:247 -load LogStore[DB] extension by class[io.seata.core.store.db.LogStoreDataBaseDAO]\\n2020-04-05 16:54:13.442 INFO [main]io.seata.common.loader.EnhancedServiceLoader.loadFile:247 -load TransactionStoreManager[DB] extension by class[io.seata.server.store.db.DatabaseTransactionStoreManager]\\n2020-04-05 16:54:13.442 INFO [main]io.seata.common.loader.EnhancedServiceLoader.loadFile:247 -load SessionManager[DB] extension by class[io.seata.server.session.db.DataBaseSessionManager]\\n# \u542f\u52a8\u6210\u529f\\n2020-04-05 16:54:13.779 INFO [main]io.seata.core.rpc.netty.RpcServerBootstrap.start:155 -Server started ...\\n# \u4f7f\u7528 Nacos \u6ce8\u518c\u4e2d\u5fc3\\n2020-04-05 16:54:13.788 INFO [main]io.seata.common.loader.EnhancedServiceLoader.loadFile:247 -load RegistryProvider[Nacos] extension by class[io.seata.discovery.registry.nacos.NacosRegistryProvider]\\n```\\n\\n\u2461 \u6267\u884c `nohup sh bin/seata-server.sh -p 28091 -n 2 &` \u547d\u4ee4\uff0c\u542f\u52a8**\u7b2c\u4e8c\u4e2a** TC Server \u5728\u540e\u53f0\u3002\\n\\n\u2462 \u6253\u5f00 Nacos \u6ce8\u518c\u4e2d\u5fc3\u7684\u63a7\u5236\u53f0\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6709**\u4e24\u4e2a** Seata TC Server \u793a\u4f8b\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a![Nacos \u63a7\u5236\u53f0](http://www.iocoder.cn/images/Seata/2017-01-01/26.png)\\n\\n# 4. \u63a5\u5165 Java \u5e94\u7528\\n\\n## 4.1 AT \u6a21\u5f0f\\n\\n**\u2460 Spring Boot**\\n\\n1\u3001[\u300a\u828b\u9053 Spring Boot \u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u5165\u95e8\u300b](http://www.iocoder.cn/Spring-Boot/Seata/?self)\u7684[\u300c2. AT \u6a21\u5f0f + \u591a\u6570\u636e\u6e90\u300d](#)\u5c0f\u8282\uff0c\u5b9e\u73b0\u5355\u4f53 Spring Boot \u9879\u76ee\u5728\u591a\u6570\u636e\u6e90\u4e0b\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002\\n\\n![\u6574\u4f53\u56fe](http://www.iocoder.cn/images/Spring-Boot/2020-10-01/01.png)\\n\\n2\u3001[\u300a\u828b\u9053 Spring Boot \u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u5165\u95e8\u300b](http://www.iocoder.cn/Spring-Boot/Seata/?self)\u7684[\u300cAT \u6a21\u5f0f + HttpClient \u8fdc\u7a0b\u8c03\u7528\u300d](#)\u5c0f\u8282\uff0c\u5b9e\u73b0\u591a\u4e2a Spring Boot \u9879\u76ee\u7684\u5206\u5e03\u4e8b\u52a1\u3002\\n\\n![\u6574\u4f53\u56fe](http://www.iocoder.cn/images/Spring-Boot/2020-10-01/21.png)\\n\\n**\u2461 Dubbo**\\n\\n[\u300aDubbo \u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u5165\u95e8\u300b](http://www.iocoder.cn/Dubbo/Seata/?sef)\u7684[\u300c2. AT \u6a21\u5f0f\u300d](#)\u5c0f\u8282\uff0c\u5b9e\u73b0\u591a\u4e2a Dubbo \u670d\u52a1\u4e0b\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002\\n\\n![\u6574\u4f53\u56fe](http://www.iocoder.cn/images/Dubbo/2020-04-15/01.png)\\n\\n**\u2462 Spring Cloud**\\n\\n[\u300a\u828b\u9053 Spring Cloud Alibaba \u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u5165\u95e8\u300b](http://www.iocoder.cn/Spring-Cloud-Alibaba/Seata/?self)\u7684[\u300c3. AT \u6a21\u5f0f + Feign\u300d](#)\u5c0f\u8282\uff0c\u5b9e\u73b0\u591a\u4e2a Spring Cloud \u670d\u52a1\u4e0b\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002\\n\\n![\u6574\u4f53\u56fe](http://www.iocoder.cn/images/Spring-Cloud/2020-07-15/01.png)\\n\\n## 4.2 TCC \u6a21\u5f0f\\n\\n* \u6587\u6863\uff1a[\u300aSeata \u6587\u6863 \u2014\u2014 TCC \u6a21\u5f0f\u300b](https://seata.io/zh-cn/docs/dev/mode/tcc-mode.html)\\n* \u793a\u4f8b\uff1a<https://github.com/seata/seata-samples/blob/master/tcc>\\n\\n## 4.3 Saga \u6a21\u5f0f\\n\\n* \u6587\u6863\uff1a[\u300aSeata \u6587\u6863 \u2014\u2014 Saga \u6a21\u5f0f\u300b](https://seata.io/zh-cn/docs/dev/mode/saga-mode.html)\\n* \u793a\u4f8b\uff1a<https://github.com/seata/seata-samples/tree/master/saga>\\n\\n## 4.4 XA \u6a21\u5f0f\\n\\nSeata \u6b63\u5728\u5f00\u53d1\u4e2d..."},{"id":"/seata-ha-practice","metadata":{"permalink":"/zh-cn/blog/seata-ha-practice","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-ha-practice.md","title":"Seata \u9ad8\u53ef\u7528\u90e8\u7f72\u5b9e\u8df5","description":"Seata \u9ad8\u53ef\u7528\u90e8\u7f72\u5b9e\u8df5","date":"2020-04-10T00:00:00.000Z","formattedDate":"2020\u5e744\u670810\u65e5","tags":[],"readingTime":6.655,"hasTruncateMarker":false,"authors":[{"name":"helloworlde"}],"frontMatter":{"hidden":true,"title":"Seata \u9ad8\u53ef\u7528\u90e8\u7f72\u5b9e\u8df5","keywords":["kubernetes","ops"],"description":"Seata \u9ad8\u53ef\u7528\u90e8\u7f72\u5b9e\u8df5","author":"helloworlde","date":"2020-04-10T00:00:00.000Z"},"prevItem":{"title":"Seata \u6781\u7b80\u5165\u95e8","permalink":"/zh-cn/blog/seata-quick-start"},"nextItem":{"title":"Seata config \u6a21\u5757\u6e90\u7801\u5206\u6790","permalink":"/zh-cn/blog/seata-analysis-config-modular"}},"content":"\u4f7f\u7528\u914d\u7f6e\u4e2d\u5fc3\u548c\u6570\u636e\u5e93\u6765\u5b9e\u73b0 Seata \u7684\u9ad8\u53ef\u7528\uff0c\u4ee5 Nacos \u548c MySQL \u4e3a\u4f8b\uff0c\u5c06[cloud-seata-nacos](https://github.com/helloworlde/spring-cloud-alibaba-component/blob/master/cloud-seata-nacos/)\u5e94\u7528\u90e8\u7f72\u5230 Kubernetes \u96c6\u7fa4\u4e2d\\n\\n\u8be5\u5e94\u7528\u4f7f\u7528 Nacos \u4f5c\u4e3a\u914d\u7f6e\u548c\u6ce8\u518c\u4e2d\u5fc3\uff0c\u603b\u5171\u6709\u4e09\u4e2a\u670d\u52a1: order-service, pay-service, storage-service, \u5176\u4e2d order-service \u5bf9\u5916\u63d0\u4f9b\u4e0b\u5355\u63a5\u53e3\uff0c\u5f53\u4f59\u989d\u548c\u5e93\u5b58\u5145\u8db3\u65f6\uff0c\u4e0b\u5355\u6210\u529f\uff0c\u4f1a\u63d0\u4ea4\u4e8b\u52a1\uff0c\u5f53\u4e0d\u8db3\u65f6\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u4e0b\u5355\u5931\u8d25\uff0c\u56de\u6eda\u4e8b\u52a1\\n\\n## \u51c6\u5907\u5de5\u4f5c\\n\\n\u9700\u8981\u51c6\u5907\u53ef\u7528\u7684\u6ce8\u518c\u4e2d\u5fc3\u3001\u914d\u7f6e\u4e2d\u5fc3 Nacos \u548c MySQL\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6ce8\u518c\u4e2d\u5fc3\u3001\u914d\u7f6e\u4e2d\u5fc3\u548c\u6570\u636e\u5e93\u90fd\u662f\u5df2\u6709\u7684\uff0c\u4e0d\u9700\u8981\u7279\u522b\u914d\u7f6e\uff0c\u5728\u8fd9\u4e2a\u5b9e\u8df5\u4e2d\uff0c\u4e3a\u4e86\u7b80\u5355\uff0c\u53ea\u90e8\u7f72\u5355\u673a\u7684\u6ce8\u518c\u4e2d\u5fc3\u3001\u914d\u7f6e\u4e2d\u5fc3\u548c\u6570\u636e\u5e93\uff0c\u5047\u8bbe\u4ed6\u4eec\u662f\u53ef\u9760\u7684\\n\\n- \u90e8\u7f72 Nacos \\n\\n\u5728\u670d\u52a1\u5668\u90e8\u7f72 Nacos\uff0c\u5f00\u653e 8848 \u7aef\u53e3\uff0c\u7528\u4e8e seata-server \u6ce8\u518c\uff0c\u670d\u52a1\u5668\u5730\u5740\u4e3a `192.168.199.2`\\n\\n```bash\\ndocker run --name nacos -p 8848:8848 -e MODE=standalone nacos/nacos-server\\n```\\n\\n- \u90e8\u7f72 MySQL \\n\\n\u90e8\u7f72\u4e00\u53f0MySQL \u6570\u636e\u5e93\uff0c\u7528\u4e8e\u4fdd\u5b58\u4e8b\u52a1\u6570\u636e\uff0c\u670d\u52a1\u5668\u5730\u5740\u4e3a `192.168.199.2`\\n\\n```bash\\ndocker run --name mysql -p 30060:3306-e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7.17\\n```\\n\\n## \u90e8\u7f72 seata-server\\n\\n- \u521b\u5efaseata-server\u9700\u8981\u7684\u8868\\n\\n\u5177\u4f53\u7684 SQL \u53c2\u8003 [script/server/db](https://github.com/seata/seata/tree/develop/script/server/db)\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f MySQL \u7684\u811a\u672c\uff0c\u6570\u636e\u5e93\u540d\u79f0\u4e3a `seata`\\n\\n\u540c\u65f6\uff0c\u4e5f\u9700\u8981\u521b\u5efa undo_log \u8868\uff0c \u53ef\u4ee5\u53c2\u8003 [script/client/at/db/](https://github.com/seata/seata/blob/develop/script/client/at/db/)\\n\\n- \u4fee\u6539seata-server\u914d\u7f6e\\n\\n\u5c06\u4ee5\u4e0b\u914d\u7f6e\u6dfb\u52a0\u5230 Nacos \u914d\u7f6e\u4e2d\u5fc3\uff0c\u5177\u4f53\u6dfb\u52a0\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003 [script/config-center](https://github.com/seata/seata/tree/develop/script/config-center)\\n\\n```\\nservice.vgroupMapping.my_test_tx_group=default\\nstore.mode=db\\nstore.db.datasource=druid\\nstore.db.dbType=mysql\\nstore.db.driverClassName=com.mysql.jdbc.Driver\\nstore.db.url=jdbc:mysql://192.168.199.2:30060/seata?useUnicode=true\\nstore.db.user=root\\nstore.db.password=123456\\n```\\n\\n### \u90e8\u7f72 seata-server \u5230 Kubernetes\\n\\n- seata-server.yaml\\n\\n\u9700\u8981\u5c06 ConfigMap \u7684\u6ce8\u518c\u4e2d\u5fc3\u548c\u914d\u7f6e\u4e2d\u5fc3\u5730\u5740\u6539\u6210\u76f8\u5e94\u7684\u5730\u5740\\n\\n```yaml\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: seata-ha-server\\n  namespace: default\\n  labels:\\n    app.kubernetes.io/name: seata-ha-server\\nspec:\\n  type: ClusterIP\\n  ports:\\n    - port: 8091\\n      protocol: TCP\\n      name: http\\n  selector:\\n    app.kubernetes.io/name: seata-ha-server\\n\\n---\\n\\napiVersion: apps/v1\\nkind: StatefulSet\\nmetadata:\\n  name: seata-ha-server\\n  namespace: default\\n  labels:\\n    app.kubernetes.io/name: seata-ha-server\\nspec:\\n  serviceName: seata-ha-server\\n  replicas: 3\\n  selector:\\n    matchLabels:\\n      app.kubernetes.io/name: seata-ha-server\\n  template:\\n    metadata:\\n      labels:\\n        app.kubernetes.io/name: seata-ha-server\\n    spec:\\n      containers:\\n        - name: seata-ha-server\\n          image: docker.io/seataio/seata-server:latest\\n          imagePullPolicy: IfNotPresent\\n          env:\\n            - name: SEATA_CONFIG_NAME\\n              value: file:/root/seata-config/registry\\n          ports:\\n            - name: http\\n              containerPort: 8091\\n              protocol: TCP\\n          volumeMounts:\\n            - name: seata-config\\n              mountPath: /root/seata-config\\n      volumes:\\n        - name: seata-config\\n          configMap:\\n            name: seata-ha-server-config\\n\\n\\n---\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: seata-ha-server-config\\ndata:\\n  registry.conf: |\\n    registry {\\n        type = \\"nacos\\"\\n        nacos {\\n          application = \\"seata-server\\"\\n          serverAddr = \\"192.168.199.2\\"\\n        }\\n    }\\n    config {\\n      type = \\"nacos\\"\\n      nacos {\\n        serverAddr = \\"192.168.199.2\\"\\n        group = \\"SEATA_GROUP\\"\\n      }\\n    }\\n```\\n\\n- \u90e8\u7f72\\n\\n```bash\\nkubectl apply -f seata-server.yaml\\n```\\n\\n\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u4f1a\u6709\u4e09\u4e2a pod\\n\\n```bash\\nkubectl get pod | grep seata-ha-server\\n\\nseata-ha-server-645844b8b6-9qh5j    1/1     Running   0          3m14s\\nseata-ha-server-645844b8b6-pzczs    1/1     Running   0          3m14s\\nseata-ha-server-645844b8b6-wkpw8    1/1     Running   0          3m14s\\n```\\n\\n\u5f85\u542f\u52a8\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728 Nacos \u7684\u670d\u52a1\u5217\u8868\u4e2d\u53d1\u73b0\u4e09\u4e2a seata-server \u7684\u5b9e\u4f8b\uff0c\u81f3\u6b64\uff0c\u5df2\u7ecf\u5b8c\u6210 seata-server \u7684\u9ad8\u53ef\u7528\u90e8\u7f72\\n\\n- \u67e5\u770b\u670d\u52a1\u65e5\u5fd7 \\n\\n```bash\\nkubelet logs -f seata-ha-server-645844b8b6-9qh5j\\n```\\n\\n```java\\n[0.012s][info   ][gc] Using Serial\\n2020-04-15 00:55:09.880 INFO [main]io.seata.server.ParameterParser.init:90 -The server is running in container.\\n2020-04-15 00:55:10.013 INFO [main]io.seata.config.FileConfiguration.<init>:110 -The configuration file used is file:/root/seata-config/registry.conf\\n2020-04-15 00:55:12.426 INFO [main]com.alibaba.druid.pool.DruidDataSource.init:947 -{dataSource-1} inited\\n2020-04-15 00:55:13.127 INFO [main]io.seata.core.rpc.netty.RpcServerBootstrap.start:155 -Server started \\n```\\n\\n\u5176\u4e2d`{dataSource-1} `\u8bf4\u660e\u4f7f\u7528\u4e86\u6570\u636e\u5e93\uff0c\u5e76\u6b63\u5e38\u521d\u59cb\u5316\u5b8c\u6210\\n\\n- \u67e5\u770b\u6ce8\u518c\u4e2d\u5fc3\uff0c\u6b64\u65f6seata-serve \u8fd9\u4e2a\u670d\u52a1\u4f1a\u6709\u4e09\u4e2a\u5b9e\u4f8b\\n\\n![seata-ha-nacos-list.png](/img/blog/seata-ha-nacos-list.png)\\n\\n\\n## \u90e8\u7f72\u4e1a\u52a1\u670d\u52a1\\n\\n- \u521b\u5efa\u4e1a\u52a1\u8868\u5e76\u521d\u59cb\u5316\u6570\u636e\\n\\n\u5177\u4f53\u7684\u4e1a\u52a1\u8868\u53ef\u4ee5\u53c2\u8003 [cloud-seata-nacos/README.md](https://github.com/helloworlde/spring-cloud-alibaba-component/blob/master/cloud-seata-nacos/README.md)\\n\\n- \u6dfb\u52a0 Nacos \u914d\u7f6e\\n\\n\u5728 public \u7684\u547d\u540d\u7a7a\u95f4\u4e0b\uff0c\u5206\u522b\u521b\u5efa data-id \u4e3a `order-service.properties`, `pay-service.properties`, `storage-service.properties` \u7684\u914d\u7f6e\uff0c\u5185\u5bb9\u76f8\u540c\uff0c\u9700\u8981\u4fee\u6539\u6570\u636e\u5e93\u7684\u5730\u5740\u3001\u7528\u6237\u540d\u548c\u5bc6\u7801\\n\\n```\\n# MySQL\\nspring.datasource.url=jdbc:mysql://192.168.199.2:30060/seata?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false\\nspring.datasource.username=root\\nspring.datasource.password=123456\\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\\n# Seata\\nspring.cloud.alibaba.seata.tx-service-group=my_test_tx_group\\n```\\n\\n- \u90e8\u7f72\u670d\u52a1\\n\\n\u901a\u8fc7 application.yaml \u914d\u7f6e\u6587\u4ef6\u90e8\u7f72\u670d\u52a1\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u4fee\u6539 ConfigMap \u7684 `NACOS_ADDR`\u4e3a\u81ea\u5df1\u7684 Nacos \u5730\u5740\\n\\n```yaml\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  namespace: default\\n  name: seata-ha-service\\n  labels:\\n    app.kubernetes.io/name: seata-ha-service\\nspec:\\n  type: NodePort\\n  ports:\\n    - port: 8081\\n      nodePort: 30081\\n      protocol: TCP\\n      name: http\\n  selector:\\n    app.kubernetes.io/name: seata-ha-service\\n\\n---\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: seata-ha-service-config\\ndata:\\n  NACOS_ADDR: 192.168.199.2:8848\\n\\n---\\napiVersion: v1\\nkind: ServiceAccount\\nmetadata:\\n  name: seata-ha-account\\n  namespace: default\\n  \\n---\\napiVersion: rbac.authorization.k8s.io/v1beta1\\nkind: ClusterRoleBinding\\nmetadata:\\n  name: seata-ha-account\\nroleRef:\\n  apiGroup: rbac.authorization.k8s.io\\n  kind: ClusterRole\\n  name: cluster-admin\\nsubjects:\\n  - kind: ServiceAccount\\n    name: seata-ha-account\\n    namespace: default\\n\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  namespace: default\\n  name: seata-ha-service\\n  labels:\\n    app.kubernetes.io/name: seata-ha-service\\nspec:\\n  replicas: 1\\n  selector:\\n    matchLabels:\\n      app.kubernetes.io/name: seata-ha-service\\n  template:\\n    metadata:\\n      labels:\\n        app.kubernetes.io/name: seata-ha-service\\n    spec:\\n      serviceAccountName: seata-ha-account\\n      containers:\\n        - name: seata-ha-order-service\\n          image: \\"registry.cn-qingdao.aliyuncs.com/hellowoodes/seata-ha-order-service:1.1\\"\\n          imagePullPolicy: IfNotPresent\\n          env:\\n            - name: NACOS_ADDR\\n              valueFrom:\\n                configMapKeyRef:\\n                  key: NACOS_ADDR\\n                  name: seata-ha-service-config\\n          ports:\\n            - name: http\\n              containerPort: 8081\\n              protocol: TCP\\n        - name: seata-ha-pay-service\\n          image: \\"registry.cn-qingdao.aliyuncs.com/hellowoodes/seata-ha-pay-service:1.1\\"\\n          imagePullPolicy: IfNotPresent\\n          env:\\n            - name: NACOS_ADDR\\n              valueFrom:\\n                configMapKeyRef:\\n                  key: NACOS_ADDR\\n                  name: seata-ha-service-config\\n          ports:\\n            - name: http\\n              containerPort: 8082\\n              protocol: TCP\\n        - name: seata-ha-storage-service\\n          image: \\"registry.cn-qingdao.aliyuncs.com/hellowoodes/seata-ha-storage-service:1.1\\"\\n          imagePullPolicy: IfNotPresent\\n          env:\\n            - name: NACOS_ADDR\\n              valueFrom:\\n                configMapKeyRef:\\n                  key: NACOS_ADDR\\n                  name: seata-ha-service-config\\n          ports:\\n            - name: http\\n              containerPort: 8083\\n              protocol: TCP\\n```\\n\\n\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u5e94\u7528\u90e8\u7f72\u5230\u96c6\u7fa4\u4e2d\\n\\n```bash\\nkubectl apply -f application.yaml\\n```\\n\\n\u7136\u540e\u67e5\u770b\u521b\u5efa\u7684 pod\uff0cseata-ha-service \u8fd9\u4e2a\u670d\u52a1\u4e0b\u6709\u4e09\u4e2a pod\\n\\n```bash\\nkubectl get pod | grep seata-ha-service\\n\\nseata-ha-service-7dbdc6894b-5r8q4      3/3     Running   0          12m\\n```\\n\\n\u5f85\u5e94\u7528\u542f\u52a8\u540e\uff0c\u5728 Nacos \u7684\u670d\u52a1\u5217\u8868\u4e2d\uff0c\u4f1a\u6709\u76f8\u5e94\u7684\u670d\u52a1\\n\\n![seata-ha-service-list.png](/img/blog/seata-ha-service-list.png)\\n\\n\u6b64\u65f6\u67e5\u770b\u670d\u52a1\u7684\u65e5\u5fd7\uff0c\u4f1a\u770b\u5230\u670d\u52a1\u5411\u6bcf\u4e00\u4e2a TC \u90fd\u6ce8\u518c\u4e86\\n\\n```bash\\nkubectl logs -f seata-ha-service-7dbdc6894b-5r8q4 seata-ha-order-service\\n```\\n\\n![seata-ha-service-register.png](/img/blog/seata-ha-service-register.png)\\n\\n\u67e5\u770b\u4efb\u610f\u7684 TC \u65e5\u5fd7\uff0c\u4f1a\u53d1\u73b0\u6bcf\u4e00\u4e2a\u670d\u52a1\u90fd\u5411 TC \u6ce8\u518c\u4e86\\n\\n```bash\\nkubelet logs -f seata-ha-server-645844b8b6-9qh5j\\n```\\n\\n![seata-ha-tc-register.png](/img/blog/seata-ha-tc-register.png)\\n\\n\\n## \u6d4b\u8bd5\\n\\n\\n### \u6d4b\u8bd5\u6210\u529f\u573a\u666f\\n\\n\u8c03\u7528\u4e0b\u5355\u63a5\u53e3\uff0c\u5c06 price \u8bbe\u7f6e\u4e3a 1\uff0c\u56e0\u4e3a\u521d\u59cb\u5316\u7684\u4f59\u989d\u4e3a 10\uff0c\u53ef\u4ee5\u4e0b\u5355\u6210\u529f\\n\\n```bash\\ncurl -X POST \\\\\\n  http://192.168.199.2:30081/order/placeOrder \\\\\\n  -H \'Content-Type: application/json\' \\\\\\n  -d \'{\\n    \\"userId\\": 1,\\n    \\"productId\\": 1,\\n    \\"price\\": 1\\n}\'\\n```\\n\\n\u6b64\u65f6\u8fd4\u56de\u7ed3\u679c\u4e3a\uff1a\\n\\n```json\\n{\\"success\\":true,\\"message\\":null,\\"data\\":null}\\n```\\n\\n\u67e5\u770bTC \u7684\u65e5\u5fd7\uff0c\u4e8b\u52a1\u6210\u529f\u63d0\u4ea4\uff1a\\n\\n![seata-ha-commit-tc-success.png](/img/blog/seata-ha-commit-tc-success.png)\\n\\n\u67e5\u770b order-service \u670d\u52a1\u65e5\u5fd7\\n![seata-ha-commit-success.png](/img/blog/seata-ha-commit-service-success.png)\\n\\n\\n### \u6d4b\u8bd5\u5931\u8d25\u573a\u666f\\n\\n\u8bbe\u7f6e price \u4e3a 100\uff0c\u6b64\u65f6\u4f59\u989d\u4e0d\u8db3\uff0c\u4f1a\u4e0b\u5355\u5931\u8d25\u629b\u51fa\u5f02\u5e38\uff0c\u4e8b\u52a1\u4f1a\u56de\u6eda\\n\\n```bash\\ncurl -X POST \\\\\\n  http://192.168.199.2:30081/order/placeOrder \\\\\\n  -H \'Content-Type: application/json\' \\\\\\n  -d \'{\\n    \\"userId\\": 1,\\n    \\"productId\\": 1,\\n    \\"price\\": 100\\n}\'\\n```\\n\\n\u67e5\u770b TC \u7684\u65e5\u5fd7\uff1a\\n![seata-ha-commit-tc-rollback.png](/img/blog/seata-ha-commit-tc-rollback.png)\\n\\n\u67e5\u770b\u670d\u52a1\u7684\u65e5\u5fd7 \uff1a\\n![seata-ha-commit-service-rollback.png](/img/blog/seata-ha-commit-service-rollback.png)\\n\\n\u591a\u6b21\u8c03\u7528\u67e5\u770b\u670d\u52a1\u65e5\u5fd7\uff0c\u53d1\u73b0\u4f1a\u968f\u673a\u7684\u5411\u5176\u4e2d\u67d0\u53f0TC\u53d1\u8d77\u4e8b\u52a1\u6ce8\u518c\uff0c\u5f53\u6269\u5bb9\u6216\u7f29\u5bb9\u540e\uff0c\u6709\u76f8\u5e94\u7684 TC \u53c2\u4e0e\u6216\u9000\u51fa\uff0c\u8bc1\u660e\u9ad8\u53ef\u7528\u90e8\u7f72\u751f\u6548"},{"id":"/seata-analysis-config-modular","metadata":{"permalink":"/zh-cn/blog/seata-analysis-config-modular","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-analysis-config-modular.md","title":"Seata config \u6a21\u5757\u6e90\u7801\u5206\u6790","description":"\u4e00 . \u5bfc\u8bfb","date":"2020-01-11T00:00:00.000Z","formattedDate":"2020\u5e741\u670811\u65e5","tags":[],"readingTime":7.74,"hasTruncateMarker":false,"authors":[{"name":"\u8d75\u6da6\u6cfd"}],"frontMatter":{"title":"Seata config \u6a21\u5757\u6e90\u7801\u5206\u6790","author":"\u8d75\u6da6\u6cfd","keywords":["Seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"],"date":"2020/1/11"},"prevItem":{"title":"Seata \u9ad8\u53ef\u7528\u90e8\u7f72\u5b9e\u8df5","permalink":"/zh-cn/blog/seata-ha-practice"},"nextItem":{"title":"\u6e90\u7801\u5206\u6790Seata-XID\u4f20\u9012 Dubbo\u7bc7","permalink":"/zh-cn/blog/seata-analysis-dubbo-transmit-xid"}},"content":"## \u4e00 . \u5bfc\u8bfb\\n\u6839\u636e[\u5927\u4f6c](https://www.iteye.com/blog/javatar-949527)\u5b9a\u4e49\u7684\u5206\u7c7b\uff0c\u914d\u7f6e\u53ef\u4ee5\u6709\u4e09\u79cd\uff1a\u73af\u5883\u914d\u7f6e\u3001\u63cf\u8ff0\u914d\u7f6e\u3001\u6269\u5c55\u914d\u7f6e\u3002\\n\\n\u73af\u5883\u914d\u7f6e\uff1a\u50cf\u4e00\u4e9b\u7ec4\u4ef6\u542f\u52a8\u65f6\u7684\u53c2\u6570\u7b49\uff0c\u901a\u5e38\u662f\u79bb\u6563\u7684\u7b80\u5355\u503c\uff0c\u591a\u662f key-value \u578b\u6570\u636e\u3002\\n\\n\u63cf\u8ff0\u914d\u7f6e\uff1a\u4e0e\u4e1a\u52a1\u903b\u8f91\u76f8\u5173\uff0c\u6bd4\u5982\uff1a\u4e8b\u52a1\u53d1\u8d77\u65b9\u548c\u53c2\u4e0e\u65b9\uff0c\u901a\u5e38\u4f1a\u5d4c\u5230\u4e1a\u52a1\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406\u4e2d\u3002\u63cf\u8ff0\u914d\u7f6e\u4fe1\u606f\u8f83\u591a\uff0c\u751a\u81f3\u6709\u5c42\u6b21\u5173\u7cfb\u3002\\n\\n\u6269\u5c55\u914d\u7f6e\uff1a\u4ea7\u54c1\u9700\u8981\u53d1\u73b0\u7b2c\u4e09\u65b9\u5b9e\u73b0\uff0c\u5bf9\u914d\u7f6e\u7684\u805a\u5408\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u6bd4\u5982\uff1a\u5404\u79cd\u914d\u7f6e\u4e2d\u5fc3\u548c\u6ce8\u518c\u4e2d\u5fc3\uff0c\u901a\u5e38\u505a\u6cd5\u662f\u5728 jar \u5305\u7684 META-INF/services \u4e0b\u653e\u7f6e\u63a5\u53e3\u7c7b\u5168\u540d\u6587\u4ef6\uff0c\u5185\u5bb9\u4e3a\u6bcf\u884c\u4e00\u4e2a\u5b9e\u73b0\u7c7b\u7c7b\u540d\u3002\\n\\n## \u4e8c. \u73af\u5883\u914d\u7f6e\\n\\nseata server \u5728\u52a0\u8f7d\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u7528 resources/registry.conf \u6765\u786e\u5b9a\u914d\u7f6e\u4e2d\u5fc3\u548c\u6ce8\u518c\u4e2d\u5fc3\u7684\u7c7b\u578b\u3002\u800c seata client \u5728 1.0 \u7248\u672c\u540e\uff0c\u4e0d\u4ec5\u80fd\u4f7f\u7528 conf \u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u7684\u52a0\u8f7d\uff0c\u4e5f\u53ef\u4ee5\u5728 springboot \u7684 yml \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u4f7f\u7528 seata.config.{type} \u6765\u8fdb\u884c\u914d\u7f6e\u4e2d\u5fc3\u7684\u9009\u62e9\uff0c\u6ce8\u518c\u4e2d\u5fc3\u4e0e\u4e4b\u7c7b\u4f3c\u3002\u901a\u8fc7 yml \u52a0\u8f7d\u914d\u7f6e\u7684\u6e90\u7801\u5728 io.seata.spring.boot.autoconfigure.properties.registry \u5305\u4e0b\u3002\\n\\n\u5982\u679c seata \u5ba2\u6237\u7aef\u7684\u4f7f\u7528\u8005\u65e2\u5728resources\u4e0b\u653e\u4e86 conf \u914d\u7f6e\u6587\u4ef6\u53c8\u5728 yml \u6587\u4ef6\u4e2d\u914d\u7f6e\uff0c\u90a3\u4e48\u4f1a\u4f18\u5148\u4f7f\u7528 yml \u4e2d\u914d\u7f6e\u7684\u3002\u4ee3\u7801\uff1a\\n\\n```java\\nCURRENT_FILE_INSTANCE = null == extConfiguration ? configuration : extConfiguration;\\n```\\n\\n\u8fd9\u91cc extConfiguration \u662f\u5916\u90e8\u914d\u7f6e\u5b9e\u4f8b\uff0c\u5373 ExtConfigurationProvider#provide() \u5916\u90e8\u914d\u7f6e\u63d0\u4f9b\u7c7b\u63d0\u4f9b\u7684\uff0c\u800c configuration \u662f\u53e6\u4e00\u4e2a\u914d\u7f6e\u63d0\u4f9b\u7c7b\u63d0\u4f9b\u7684 ConfigurationProvider#provide()\uff0c\u8fd9\u4e24\u4e2a\u914d\u7f6e\u63d0\u4f9b\u7c7b\u662f\u5728 config \u6a21\u5757 ConfigurationFactory \u9759\u6001\u5757\u4e2d\uff0c\u901a\u8fc7 SPI \u7684\u65b9\u5f0f\u52a0\u8f7d\u3002\\n\\n```java\\nEnhancedServiceLoader.load(ExtConfigurationProvider.class).provide(configuration);\\n```\\n\\n\u4e0a\u9762\u8bf4\u7684\u662f\u914d\u7f6e\u4e2d\u5fc3\u7c7b\u578b\u7684\u9009\u62e9\uff0c\u800c\u914d\u7f6e\u73af\u5883\u7684\u52a0\u8f7d\uff0c\u662f\u5728\u786e\u5b9a\u4e86\u4f7f\u7528\u4ec0\u4e48\u914d\u7f6e\u4e2d\u5fc3\u7c7b\u578b\u540e\uff0c\u518d\u901a\u8fc7\u76f8\u5e94\u7684\u914d\u7f6e\u4e2d\u5fc3\u52a0\u8f7d\u73af\u5883\u914d\u7f6e\u3002File \u5373\u6587\u672c\u65b9\u5f0f\u914d\u7f6e\u4e5f\u662f\u4e00\u79cd\u914d\u7f6e\u4e2d\u5fc3\u3002\\n\\nclient \u548c server \u83b7\u53d6\u914d\u7f6e\u53c2\u6570\uff0c\u662f\u901a\u8fc7 ConfigurationFactory#getInstance() \u83b7\u53d6\u914d\u7f6e\u7c7b\u5b9e\u4f8b\uff0c\u518d\u4f7f\u7528\u914d\u7f6e\u7c7b\u5b9e\u4f8b\u83b7\u53d6\u914d\u7f6e\u53c2\u6570\uff0c\u914d\u7f6e\u7684 key \u8fd9\u4e9b\u5e38\u91cf\u7684\u5b9a\u4e49\uff0c\u4e3b\u8981\u5728 core \u6a21\u5757\u4e0b config \u6587\u4ef6\u4e2d\u3002\\n\\n\u4e00\u4e9b\u91cd\u8981\u7684\u73af\u5883\u914d\u7f6e\u5c5e\u6027\u7684\u610f\u4e49\uff0c[\u5b98\u7f51\u90fd\u6709\u4ecb\u7ecd](https://seata.io/zh-cn/docs/user/configurations.html)\u3002\\n\\n\u5728\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u901a\u8fc7 ConfigurationFactory \u83b7\u53d6\u540e\u6ce8\u5165\u6784\u9020\u51fd\u6570\u4e2d\u7684\uff0c\u9700\u8981\u91cd\u542f\u624d\u80fd\u751f\u6548\uff0c\u800c\u5728\u4f7f\u7528\u65f6\u901a\u8fc7 ConfigurationFactory \u5b9e\u65f6\u83b7\u53d6\u7684\uff0c\u914d\u7f6e\u6539\u4e86\u5c31\u53ef\u4ee5\u751f\u6548\u3002\\n\\n\u4f46\u662f config \u6a21\u5757\u63d0\u4f9b\u4e86 ConfigurationChangeListener#onChangeEvent \u63a5\u53e3\u65b9\u6cd5\u6765\u4fee\u6539\u5b9e\u4f8b\u5185\u90e8\u7684\u5c5e\u6027\u3002\u5373\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u76d1\u542c\u52a8\u6001\u53d8\u5316\u7684\u5c5e\u6027\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u81ea\u8eab\u4f7f\u7528\u7684\u5c5e\u6027\u548c\u521a\u5f00\u59cb\u6ce8\u5165\u65f6\u4e0d\u4e00\u6837\u4e86\uff0c\u5c31\u4fee\u6539\u5b9e\u4f8b\u4e2d\u4fdd\u5b58\u7684\u5c5e\u6027\uff0c\u548c\u914d\u7f6e\u4e2d\u5fc3\u4fdd\u6301\u4e00\u81f4\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u52a8\u6001\u914d\u7f6e\u3002\\n\\n```java\\npublic class GlobalTransactionalInterceptor implements ConfigurationChangeListener {\\nprivate volatile boolean disable = ConfigurationFactory.getInstance().getBoolean(ConfigurationKeys.DISABLE_GLOBAL_TRANSACTION,false);\\n@Override public Object invoke(Param param) {\\n   if(disable){//\u4e8b\u52a1\u4e1a\u52a1\u5904\u7406}\\n}\\n@Override public void onChangeEvent(Param param) {\\n   disable = param;\\n}}\\n```\\n\\n\u4e0a\u9762\u662f spring \u6a21\u5757\u4e0b\u7684 GlobalTransactionalInterceptor \u4e0e\u964d\u7ea7\u5c5e\u6027\u76f8\u5173\u7684\u4f2a\u4ee3\u7801\u3002 GlobalTrarnsactionalScanner \u5728\u4e0a\u9762\u7684 interceptor \u7c7b\u88ab\u5b9e\u4f8b\u5316\u65f6\uff0c\u628a interceptor \u6ce8\u518c\u5230\u4e86\u914d\u7f6e\u53d8\u5316\u76d1\u542c\u5217\u8868\u4e2d\uff0c\u5f53\u914d\u7f6e\u88ab\u6539\u53d8\u7684\u65f6\u5019\uff0c\u4f1a\u8c03\u7528\u76d1\u542c\u5668\uff1a\\n\\n```java\\nConfigurationFactory.getInstance().addConfigListener(ConfigurationKeys.DISABLE_GLOBAL_TRANSACTION,(ConfigurationChangeListener)interceptor);\\n```\\n\\n\u964d\u7ea7\u7684\u610f\u601d\u662f\uff0c\u5f53\u670d\u52a1\u67d0\u4e00\u9879\u529f\u80fd\u4e0d\u53ef\u7528\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u52a8\u6001\u914d\u7f6e\u7684\u5c5e\u6027\uff0c\u628a\u67d0\u4e00\u9879\u529f\u80fd\u7ed9\u5173\u4e86\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u907f\u514d\u4e00\u76f4\u5c1d\u8bd5\u5931\u8d25\u7684\u5904\u7406\u3002interceptor#invoke() \u53ea\u6709\u5f53\u8fd9\u4e2a disable \u5c5e\u6027\u4e3a true \u65f6\uff0c\u624d\u4f1a\u6267\u884c seata \u4e8b\u52a1\u76f8\u5173\u4e1a\u52a1\u3002\\n\\n## \u4e09. \u63cf\u8ff0\u914d\u7f6e \\n\u4e00\u822c\u6027\u6846\u67b6\u63cf\u8ff0\u6027\u914d\u7f6e\u901a\u5e38\u4fe1\u606f\u6bd4\u8f83\u591a\uff0c\u751a\u81f3\u6709\u5c42\u6b21\u5173\u7cfb\uff0c\u7528 xml \u914d\u7f6e\u6bd4\u8f83\u65b9\u4fbf\uff0c\u56e0\u4e3a\u6811\u7ed3\u6784\u63cf\u8ff0\u6027\u66f4\u5f3a\u3002\u800c\u73b0\u5728\u7684\u4e60\u60ef\u90fd\u5728\u63d0\u5021\u53bb\u7e41\u7410\u7684\u7ea6\u675f\u6027\u914d\u7f6e\uff0c\u91c7\u7528\u7ea6\u5b9a\u7684\u65b9\u5f0f\u3002\\n\\nseata AT \u6a21\u5f0f\u662f\u901a\u8fc7\u4ee3\u7406\u6570\u636e\u6e90\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u4e8b\u52a1\u5904\u7406\uff0c\u5bf9\u4e1a\u52a1\u65b9\u5165\u4fb5\u8f83\u5c0f\uff0c\u53ea\u9700\u8ba9 seata \u5728\u542f\u52a8\u65f6\uff0c\u8bc6\u522b\u54ea\u4e9b\u4e1a\u52a1\u65b9\u9700\u8981\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\uff0c\u6240\u4ee5\u7528\u6ce8\u89e3\u5c31\u53ef\u4ee5\u5b9e\u73b0\u63cf\u8ff0\u6027\u914d\u7f6e\u3002\\n\\n```java\\n@GlobalTransactional(timeoutMills = 300000, name = \\"busi-doBiz\\")\\npublic String doBiz(String msg) {}\\n```\\n\u5982\u679c\u662f tcc \u6a21\u5f0f\uff0c\u4e8b\u52a1\u53c2\u4e0e\u65b9\u8fd8\u9700\u4f7f\u7528\u6ce8\u89e3\u6807\u8bc6\uff1a\\n\\n```java\\n@TwoPhaseBusinessAction(name = \\"tccActionForSpringTest\\" , commitMethod = \\"commit\\", rollbackMethod = \\"rollback\\")\\npublic boolean prepare(BusinessActionContext actionContext, int i);\\npublic boolean commit(BusinessActionContext actionContext);\\npublic boolean rollback(BusinessActionContext actionContext);\\n```\\n\\n## \u56db .\u6269\u5c55\u914d\u7f6e\\n\u6269\u5c55\u914d\u7f6e\uff0c\u901a\u5e38\u5bf9\u4ea7\u54c1\u7684\u805a\u5408\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u56e0\u4e3a\u4ea7\u54c1\u9700\u8981\u53d1\u73b0\u7b2c\u4e09\u65b9\u5b9e\u73b0\uff0c\u5c06\u5176\u52a0\u5165\u4ea7\u54c1\u5185\u90e8\u3002\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200110213751452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODA0NzM3,size_16,color_FFFFFF,t_70)\\n\u8fd9\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u914d\u7f6e\u4e2d\u5fc3\u63d0\u4f9b\u7c7b\u7684\u4f8b\u5b50\uff0c\u5728 META-INF/services \u4e0b\u653e\u7f6e\u4e00\u4e2a\u63a5\u53e3\u540c\u540d\u7684\u6587\u672c\u6587\u4ef6\uff0c\u6587\u4ef6\u7684\u5185\u5bb9\u4e3a\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u3002\u8fd9\u662f\u6807\u51c6\u7684 spi \u65b9\u5f0f\u3002\u7136\u540e\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 registry.conf \u4e2d\u7684 config.type=test \u3002\\n\\n\u4f46\u662f\u5982\u679c\u4f60\u8ba4\u4e3a\u8fd9\u6837\u5c31\u53ef\u4ee5\u88ab seata \u8bc6\u522b\u5230\uff0c\u5e76\u4e14\u66ff\u6362\u6389\u914d\u7f6e\u4e2d\u5fc3\uff0c\u90a3\u4f60\u5c31\u9519\u4e86\u3002seata \u5728\u52a0\u8f7d\u914d\u7f6e\u4e2d\u5fc3\u7684\u65f6\u5019\uff0c\u4f7f\u7528 enum ConfigType \u5305\u88f9\u4e86\u4e00\u4e0b\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u914d\u7f6e\u4e2d\u5fc3\u7684\u7c7b\u578b\u7684\u503c\uff1a\\n\\n```java\\nprivate static Configuration buildConfiguration() {\\n   configTypeName = \\"test\\";//registry.conf\u4e2d\u914d\u7f6e\u7684config.type\\n   configType = ConfigType.getType(configTypeName);//ConfigType\u83b7\u53d6\u4e0d\u5230\u4f1a\u629b\u5f02\u5e38\\n}\\n```\\n\\n\u5982\u679c\u5728 ConfigType \u4e2d\u6ca1\u6709\u5b9a\u4e49 test \u8fd9\u79cd\u914d\u7f6e\u4e2d\u5fc3\u7c7b\u578b\uff0c\u90a3\u4e48\u4f1a\u629b\u5f02\u5e38\u3002\u6240\u4ee5\u5355\u7eaf\u7684\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u800c\u4e0d\u6539\u53d8\u6e90\u7801\u662f\u65e0\u6cd5\u4f7f\u7528 ConfigType \u4e2d\u5b9a\u4e49\u7684\u914d\u7f6e\u4e2d\u5fc3\u63d0\u4f9b\u7c7b\u4ee5\u5916\u7684\u914d\u7f6e\u4e2d\u5fc3\u63d0\u4f9b\u7c7b\u3002\\n\\n\u76ee\u524d1.0\u7248\u672c\u5728 ConfigType \u4e2d\u5b9a\u4e49\u7684\u914d\u7f6e\u4e2d\u5fc3\u7c7b\u578b\u6709\uff1aFile,ZK,Nacos,Apollo,Consul,Etcd3,SpringCloudConfig,Custom\u3002\u5982\u679c\u7528\u6237\u60f3\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u914d\u7f6e\u4e2d\u5fc3\u7c7b\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528 Custom \u8fd9\u79cd\u7c7b\u578b\u3002\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200110215249152.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODA0NzM3,size_16,color_FFFFFF,t_70)\\n\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u4e0d\u4f18\u96c5\u7684\u65b9\u5f0f\uff0c\u5373\u63d0\u4f9b\u4e00\u4e2a\u6307\u5b9a\u540d\u79f0 ZK \u4f46\u662f\u7ea7\u522b order=3 \u66f4\u9ad8\u7684\u5b9e\u73b0\u7c7b\uff08ZK\u9ed8\u8ba4order=1\uff09\uff0c\u5c31\u53ef\u4ee5\u8ba9 ConfigurationFactory \u4f7f\u7528 TestConfigurationProvider \u4f5c\u4e3a\u914d\u7f6e\u4e2d\u5fc3\u63d0\u4f9b\u7c7b\u3002\\n\\n\u901a\u8fc7\u4e0a\u9762\u7684\u6b65\u9aa4\uff0c\u5c31\u53ef\u4ee5\u8ba9 seata \u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u63d0\u4f9b\u7684\u4ee3\u7801\u3002seata \u4e2d codec\u3001compressor\u3001discovery\u3001integration \u7b49\u6a21\u5757\uff0c\u90fd\u662f\u4f7f\u7528 spi \u673a\u5236\u52a0\u8f7d\u529f\u80fd\u7c7b\uff0c\u7b26\u5408\u5fae\u5185\u6838 + \u63d2\u4ef6\u5316\uff0c\u5e73\u7b49\u5bf9\u5f85\u7b2c\u4e09\u65b9\u7684\u8bbe\u8ba1\u601d\u60f3\u3002\\n\\n## \u4e94  . seata\u6e90\u7801\u5206\u6790\u7cfb\u5217\u5730\u5740\\n\u4f5c\u8005\uff1a\u8d75\u6da6\u6cfd\uff0c[\u7cfb\u5217\u5730\u5740](https://blog.csdn.net/qq_37804737/category_9530078.html)\u3002"},{"id":"/seata-analysis-dubbo-transmit-xid","metadata":{"permalink":"/zh-cn/blog/seata-analysis-dubbo-transmit-xid","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-analysis-dubbo-transmit-xid.md","title":"\u6e90\u7801\u5206\u6790Seata-XID\u4f20\u9012 Dubbo\u7bc7","description":"\u672c\u6587\u8bb2\u8ff0\u901a\u8fc7\u6e90\u7801\u89e3\u6790Seata-Dubbo\u4f20\u9012XID","date":"2020-01-01T00:00:00.000Z","formattedDate":"2020\u5e741\u67081\u65e5","tags":[],"readingTime":3.39,"hasTruncateMarker":false,"authors":[{"name":"FUNKYE"}],"frontMatter":{"title":"\u6e90\u7801\u5206\u6790Seata-XID\u4f20\u9012 Dubbo\u7bc7","keywords":["Seata","Dubbo","\u5206\u5e03\u5f0f\u4e8b\u52a1","spring"],"description":"\u672c\u6587\u8bb2\u8ff0\u901a\u8fc7\u6e90\u7801\u89e3\u6790Seata-Dubbo\u4f20\u9012XID","author":"FUNKYE","date":"2020/01/01"},"prevItem":{"title":"Seata config \u6a21\u5757\u6e90\u7801\u5206\u6790","permalink":"/zh-cn/blog/seata-analysis-config-modular"},"nextItem":{"title":"Seata tcc \u6a21\u5757\u6e90\u7801\u5206\u6790","permalink":"/zh-cn/blog/seata-analysis-tcc-modular"}},"content":"\u672c\u6587\u4f5c\u8005\uff1aFUNKYE(\u9648\u5065\u658c),\u676d\u5dde\u67d0\u4e92\u8054\u7f51\u516c\u53f8\u4e3b\u7a0b\u3002\\n\\n# \u524d\u8a00\\n\\n\u200b\\t1.\u9996\u5148\u6765\u770b\u4e0b\u5305\u7ed3\u6784,\u5728seata-dubbo\u548cseata-dubbo-alibaba\u4e0b\u6709\u7edf\u4e00\u7531TransactionPropagationFilter\u8fd9\u4e2a\u7c7b,\u5206\u522b\u5bf9\u5e94apache-dubbo\u8ddfalibaba-dubbo.\\n\\n![20200101203229](/img/blog/20200101203229.png)\\n\\n## \u5206\u6790\u6e90\u7801\\n\\n```java\\npackage io.seata.integration.dubbo;\\n\\nimport io.seata.core.context.RootContext;\\nimport org.apache.dubbo.common.Constants;\\nimport org.apache.dubbo.common.extension.Activate;\\nimport org.apache.dubbo.rpc.Filter;\\nimport org.apache.dubbo.rpc.Invocation;\\nimport org.apache.dubbo.rpc.Invoker;\\nimport org.apache.dubbo.rpc.Result;\\nimport org.apache.dubbo.rpc.RpcContext;\\nimport org.apache.dubbo.rpc.RpcException;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\n\\n@Activate(group = {Constants.PROVIDER, Constants.CONSUMER}, order = 100)\\npublic class TransactionPropagationFilter implements Filter {\\n\\n    private static final Logger LOGGER = LoggerFactory.getLogger(TransactionPropagationFilter.class);\\n\\n    @Override\\n    public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcException {\\n        //\u83b7\u53d6\u672c\u5730XID\\n        String xid = RootContext.getXID();\\n        String xidInterceptorType = RootContext.getXIDInterceptorType();\\n        //\u83b7\u53d6Dubbo\u9690\u5f0f\u4f20\u53c2\u4e2d\u7684XID\\n        String rpcXid = getRpcXid();\\n        String rpcXidInterceptorType = RpcContext.getContext().getAttachment(RootContext.KEY_XID_INTERCEPTOR_TYPE);\\n        if (LOGGER.isDebugEnabled()) {\\n            LOGGER.debug(\\"xid in RootContext[{}] xid in RpcContext[{}]\\", xid, rpcXid);\\n        }\\n        boolean bind = false;\\n        if (xid != null) {\\n            //\u4f20\u9012XID\\n            RpcContext.getContext().setAttachment(RootContext.KEY_XID, xid);\\n            RpcContext.getContext().setAttachment(RootContext.KEY_XID_INTERCEPTOR_TYPE, xidInterceptorType);\\n        } else {\\n            if (rpcXid != null) {\\n                //\u7ed1\u5b9aXID\\n                RootContext.bind(rpcXid);\\n                RootContext.bindInterceptorType(rpcXidInterceptorType);\\n                bind = true;\\n                if (LOGGER.isDebugEnabled()) {\\n                    LOGGER.debug(\\"bind[{}] interceptorType[{}] to RootContext\\", rpcXid, rpcXidInterceptorType);\\n                }\\n            }\\n        }\\n        try {\\n            return invoker.invoke(invocation);\\n        } finally {\\n            if (bind) {\\n                //\u8fdb\u884c\u5254\u9664\u5df2\u5b8c\u6210\u4e8b\u52a1\u7684XID\\n                String unbindInterceptorType = RootContext.unbindInterceptorType();\\n                String unbindXid = RootContext.unbind();\\n                if (LOGGER.isDebugEnabled()) {\\n                    LOGGER.debug(\\"unbind[{}] interceptorType[{}] from RootContext\\", unbindXid, unbindInterceptorType);\\n                }\\n                //\u5982\u679c\u53d1\u73b0\u89e3\u7ed1\u7684XID\u5e76\u4e0d\u662f\u5f53\u524d\u63a5\u6536\u5230\u7684XID\\n                if (!rpcXid.equalsIgnoreCase(unbindXid)) {\\n                    LOGGER.warn(\\"xid in change during RPC from {} to {}, xidInterceptorType from {} to {} \\", rpcXid, unbindXid, rpcXidInterceptorType, unbindInterceptorType);\\n                    if (unbindXid != null) {\\n                        //\u91cd\u65b0\u7ed1\u5b9aXID\\n                        RootContext.bind(unbindXid);\\n                        RootContext.bindInterceptorType(unbindInterceptorType);\\n                        LOGGER.warn(\\"bind [{}] interceptorType[{}] back to RootContext\\", unbindXid, unbindInterceptorType);\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * get rpc xid\\n     * @return\\n     */\\n    private String getRpcXid() {\\n        String rpcXid = RpcContext.getContext().getAttachment(RootContext.KEY_XID);\\n        if (rpcXid == null) {\\n            rpcXid = RpcContext.getContext().getAttachment(RootContext.KEY_XID.toLowerCase());\\n        }\\n        return rpcXid;\\n    }\\n\\n}\\n```\\n\\n\u200b\\t1.\u6839\u636e\u6e90\u7801,\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u76f8\u5e94\u7684\u903b\u8f91\u5904\u7406\\n\\n![20200101213336](/img/blog/20200101213336.png)\\n\\n## \u8981\u70b9\u77e5\u8bc6\\n\\n\u200b\\t1.Dubbo @Activate\u6ce8\u89e3:\\n\\n```java\\n@Documented\\n@Retention(RetentionPolicy.RUNTIME)\\n@Target({ElementType.TYPE, ElementType.METHOD})\\npublic @interface Activate {\\n    /**\\n     * Group\u8fc7\u6ee4\u6761\u4ef6\u3002\\n     * <br />\\n     * \u5305\u542b{@link ExtensionLoader#getActivateExtension}\u7684group\u53c2\u6570\u7ed9\u7684\u503c\uff0c\u5219\u8fd4\u56de\u6269\u5c55\u3002\\n     * <br />\\n     * \u5982\u6ca1\u6709Group\u8bbe\u7f6e\uff0c\u5219\u4e0d\u8fc7\u6ee4\u3002\\n     */\\n    String[] group() default {};\\n\\n    /**\\n     * Key\u8fc7\u6ee4\u6761\u4ef6\u3002\u5305\u542b{@link ExtensionLoader#getActivateExtension}\u7684URL\u7684\u53c2\u6570Key\u4e2d\u6709\uff0c\u5219\u8fd4\u56de\u6269\u5c55\u3002\\n     * <p/>\\n     * \u793a\u4f8b\uff1a<br/>\\n     * \u6ce8\u89e3\u7684\u503c <code>@Activate(\\"cache,validatioin\\")</code>\uff0c\\n     * \u5219{@link ExtensionLoader#getActivateExtension}\u7684URL\u7684\u53c2\u6570\u6709<code>cache</code>Key\uff0c\u6216\u662f<code>validatioin</code>\u5219\u8fd4\u56de\u6269\u5c55\u3002\\n     * <br/>\\n     * \u5982\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u4e0d\u8fc7\u6ee4\u3002\\n     */\\n    String[] value() default {};\\n\\n    /**\\n     * \u6392\u5e8f\u4fe1\u606f\uff0c\u53ef\u4ee5\u4e0d\u63d0\u4f9b\u3002\\n     */\\n    String[] before() default {};\\n\\n    /**\\n     * \u6392\u5e8f\u4fe1\u606f\uff0c\u53ef\u4ee5\u4e0d\u63d0\u4f9b\u3002\\n     */\\n    String[] after() default {};\\n\\n    /**\\n     * \u6392\u5e8f\u4fe1\u606f\uff0c\u53ef\u4ee5\u4e0d\u63d0\u4f9b\u3002\\n     */\\n    int order() default 0;\\n}\\n```\\n\\n\u53ef\u4ee5\u5206\u6790\u5f97\u77e5,Seata\u7684dubbo\u8fc7\u6ee4\u5668\u4e0a\u7684\u6ce8\u89e3@Activate(group = {Constants.PROVIDER, Constants.CONSUMER}, order = 100),\u8868\u793adubbo\u7684\u670d\u52a1\u63d0\u4f9b\u65b9\u8ddf\u6d88\u8d39\u65b9\u90fd\u4f1a\u89e6\u53d1\u5230\u8fd9\u4e2a\u8fc7\u6ee4\u5668,\u6240\u4ee5\u6211\u4eec\u7684Seata\u53d1\u8d77\u8005\u4f1a\u4ea7\u751f\u4e00\u4e2aXID\u7684\u4f20\u9012,\u4e0a\u8ff0\u6d41\u7a0b\u56fe\u8ddf\u4ee3\u7801\u5df2\u7ecf\u5f88\u6e05\u6670\u7684\u8868\u793a\u4e86.\\n\\n\u200b\\t2.Dubbo\u9690\u5f0f\u4f20\u53c2\u53ef\u4ee5\u901a\u8fc7 `RpcContext` \u4e0a\u7684 `setAttachment` \u548c `getAttachment` \u5728\u670d\u52a1\u6d88\u8d39\u65b9\u548c\u63d0\u4f9b\u65b9\u4e4b\u95f4\u8fdb\u884c\u53c2\u6570\u7684\u9690\u5f0f\u4f20\u9012\u3002\\n\\n\u83b7\u53d6:RpcContext.getContext().getAttachment(RootContext.KEY_XID);\\n\\n\u4f20\u9012:RpcContext.getContext().setAttachment(RootContext.KEY_XID, xid);\\n\\n# \u603b\u7ed3\\n\\n\u66f4\u591a\u6e90\u7801\u9605\u8bfb\u8bf7\u8bbf\u95ee[Seata\u5b98\u7f51](http://seata.io/zh-cn/index.html)"},{"id":"/seata-analysis-tcc-modular","metadata":{"permalink":"/zh-cn/blog/seata-analysis-tcc-modular","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-analysis-tcc-modular.md","title":"Seata tcc \u6a21\u5757\u6e90\u7801\u5206\u6790","description":"\u4e00  .\u5bfc\u8bfb","date":"2019-12-25T00:00:00.000Z","formattedDate":"2019\u5e7412\u670825\u65e5","tags":[],"readingTime":10.08,"hasTruncateMarker":false,"authors":[{"name":"\u8d75\u6da6\u6cfd"}],"frontMatter":{"title":"Seata tcc \u6a21\u5757\u6e90\u7801\u5206\u6790","author":"\u8d75\u6da6\u6cfd","keywords":["Seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"],"date":"2019/12/25"},"prevItem":{"title":"\u6e90\u7801\u5206\u6790Seata-XID\u4f20\u9012 Dubbo\u7bc7","permalink":"/zh-cn/blog/seata-analysis-dubbo-transmit-xid"},"nextItem":{"title":"Seata core \u6a21\u5757\u6e90\u7801\u5206\u6790","permalink":"/zh-cn/blog/seata-analysis-core-modular"}},"content":"## \u4e00  .\u5bfc\u8bfb\\n\\nspring \u6a21\u5757\u5206\u6790\u4e2d\u8bb2\u5230\uff0cSeata \u7684 spring \u6a21\u5757\u4f1a\u5bf9\u6d89\u53ca\u5230\u5206\u5e03\u5f0f\u4e1a\u52a1\u7684 bean \u8fdb\u884c\u5904\u7406\u3002\u9879\u76ee\u542f\u52a8\u65f6\uff0c\u5f53 GlobalTransactionalScanner \u626b\u63cf\u5230 TCC \u670d\u52a1\u7684 reference \u65f6\uff08\u5373tcc\u4e8b\u52a1\u53c2\u4e0e\u65b9\uff09\uff0c\u4f1a\u5bf9\u5176\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\uff0c\u5373\u7ed9 bean \u7ec7\u5165 TCC \u6a21\u5f0f\u4e0b\u7684 MethodInterceptor \u7684\u5b9e\u73b0\u7c7b\u3002tcc \u4e8b\u52a1\u53d1\u8d77\u65b9\u4f9d\u7136\u4f7f\u7528 @GlobalTransactional \u6ce8\u89e3\u5f00\u542f\uff0c\u7ec7\u5165\u7684\u662f\u901a\u7528\u7684 MethodInterceptor \u7684\u5b9e\u73b0\u7c7b\u3002\\n\\nTCC \u6a21\u5f0f\u4e0b\u7684 MethodInterceptor \u5b9e\u73b0\u7c7b\u5373 TccActionInterceptor(spring\u6a21\u5757) \uff0c\u8fd9\u4e2a\u7c7b\u4e2d\u8c03\u7528\u4e86 ActionInterceptorHandler(tcc\u6a21\u5757) \u8fdb\u884c TCC \u6a21\u5f0f\u4e0b\u4e8b\u52a1\u6d41\u7a0b\u7684\u5904\u7406\u3002\\t\\n\\nTCC \u52a8\u6001\u4ee3\u7406\u7684\u4e3b\u8981\u529f\u80fd\u662f\uff1a\u751f\u6210TCC\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u3001\u900f\u4f20\u4e1a\u52a1\u53c2\u6570\u3001\u6ce8\u518c\u5206\u652f\u4e8b\u52a1\u8bb0\u5f55\u3002\\n\\n## \u4e8c  .TCC\u6a21\u5f0f\u4ecb\u7ecd\\n\\n\u57282PC\uff08\u4e24\u9636\u6bb5\u63d0\u4ea4\uff09\u534f\u8bae\u4e2d\uff0c\u4e8b\u52a1\u7ba1\u7406\u5668\u5206\u4e24\u9636\u6bb5\u534f\u8c03\u8d44\u6e90\u7ba1\u7406\uff0c\u8d44\u6e90\u7ba1\u7406\u5668\u5bf9\u5916\u63d0\u4f9b\u4e09\u4e2a\u64cd\u4f5c\uff0c\u5206\u522b\u662f\u4e00\u9636\u6bb5\u7684\u51c6\u5907\u64cd\u4f5c\uff0c\u548c\u4e8c\u9636\u6bb5\u7684\u63d0\u4ea4\u64cd\u4f5c\u548c\u56de\u6eda\u64cd\u4f5c\u3002\\n\\n```java\\npublic interface TccAction {\\n\\n    @TwoPhaseBusinessAction(name = \\"tccActionForTest\\" , commitMethod = \\"commit\\", rollbackMethod = \\"rollback\\")\\n    public boolean prepare(BusinessActionContext actionContext,\\n                           @BusinessActionContextParameter(paramName = \\"a\\") int a,\\n                           @BusinessActionContextParameter(paramName = \\"b\\", index = 0) List b,\\n                           @BusinessActionContextParameter(isParamInProperty = true) TccParam tccParam);\\n\\n    public boolean commit(BusinessActionContext actionContext);\\n    \\n    public boolean rollback(BusinessActionContext actionContext);\\n}\\n```\\n\\n\u8fd9\u662f TCC \u53c2\u4e0e\u8005\u5b9e\u4f8b\uff0c\u53c2\u4e0e\u8005\u9700\u8981\u5b9e\u73b0\u4e09\u4e2a\u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u662f BusinessActionContext \uff0c\u65b9\u6cd5\u8fd4\u56de\u7c7b\u578b\u56fa\u5b9a\uff0c\u5bf9\u5916\u53d1\u5e03\u6210\u5fae\u670d\u52a1\uff0c\u4f9b\u4e8b\u52a1\u7ba1\u7406\u5668\u8c03\u7528\u3002\\n\\nprepare\uff1a\u8d44\u6e90\u7684\u68c0\u67e5\u548c\u9884\u7559\u3002\u4f8b\uff1a\u6263\u51cf\u8d26\u6237\u7684\u4f59\u989d\uff0c\u5e76\u589e\u52a0\u76f8\u540c\u7684\u51bb\u7ed3\u4f59\u989d\u3002\\n\\ncommit\uff1a\u4f7f\u7528\u9884\u7559\u7684\u8d44\u6e90\uff0c\u5b8c\u6210\u771f\u6b63\u7684\u4e1a\u52a1\u64cd\u4f5c\u3002\u4f8b\uff1a\u51cf\u5c11\u51bb\u7ed3\u4f59\u989d\uff0c\u6263\u51cf\u8d44\u91d1\u4e1a\u52a1\u5b8c\u6210\u3002\\n\\ncancel\uff1a\u91ca\u653e\u9884\u7559\u8d44\u6e90\u3002\u4f8b\uff1a\u51bb\u7ed3\u4f59\u989d\u52a0\u56de\u8d26\u6237\u7684\u4f59\u989d\u3002\\n\\n\u5176\u4e2d BusinessActionContext \u5c01\u88c5\u4e86\u672c\u6b21\u4e8b\u52a1\u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff1axid\u3001branchId\u3001actionName \u548c\u88ab @BusinessActionContextParam \u6ce8\u89e3\u7684\u53c2\u6570\u7b49\u3002\\n\\n\u53c2\u4e0e\u65b9\u4e1a\u52a1\u6709\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\\n1.\u63a7\u5236\u4e1a\u52a1\u5e42\u7b49\u6027\uff0c\u9700\u8981\u652f\u6301\u540c\u4e00\u7b14\u4e8b\u52a1\u7684\u91cd\u590d\u63d0\u4ea4\u548c\u91cd\u590d\u56de\u6eda\u3002\\n2.\u9632\u60ac\u6302\uff0c\u5373\u4e8c\u9636\u6bb5\u7684\u56de\u6eda\uff0c\u6bd4\u4e00\u9636\u6bb5\u7684 try \u5148\u6267\u884c\u3002\\n3.\u653e\u5bbd\u4e00\u81f4\u6027\u534f\u8bae\uff0c\u6700\u7ec8\u4e00\u81f4\uff0c\u6240\u4ee5\u662f\u8bfb\u5df2\u4fee\u6539\\n\\n##  \u4e09  . remoting \u5305\u89e3\u6790\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20191124211806237.png?)\\n\\n\u5305\u4e2d\u6240\u6709\u7684\u7c7b\u90fd\u662f\u4e3a\u5305\u4e2d\u7684 DefaultRemotingParser \u670d\u52a1\uff0cDubbo\u3001LocalTCC\u3001SofaRpc \u5206\u522b\u8d1f\u8d23\u89e3\u6790\u5404\u81eaRPC\u534f\u8bae\u4e0b\u7684\u7c7b\u3002\\n\\nDefaultRemotingParser \u7684\u4e3b\u8981\u65b9\u6cd5\uff1a\\n1.\u5224\u65ad bean \u662f\u5426\u662f remoting bean\uff0c\u4ee3\u7801\uff1a\\n\\n```java\\n    @Override\\n    public boolean isRemoting(Object bean, String beanName) throws FrameworkException {\\n        //\u5224\u65ad\u662f\u5426\u662f\u670d\u52a1\u8c03\u7528\u65b9\u6216\u8005\u662f\u5426\u662f\u670d\u52a1\u63d0\u4f9b\u65b9\\n        return isReference(bean, beanName) || isService(bean, beanName);\\n    }\\n```\\n\\n2.\u8fdc\u7a0b bean \u89e3\u6790\uff0c\u628a rpc\u7c7b \u89e3\u6790\u6210 RemotingDesc\uff0c\uff0c\u4ee3\u7801\uff1a\\n\\n```java\\n@Override\\n    public boolean isRemoting(Object bean, String beanName) throws FrameworkException {\\n        //\u5224\u65ad\u662f\u5426\u662f\u670d\u52a1\u8c03\u7528\u65b9\u6216\u8005\u662f\u5426\u662f\u670d\u52a1\u63d0\u4f9b\u65b9\\n        return isReference(bean, beanName) || isService(bean, beanName);\\n    }\\n```\\n\\n\u5229\u7528 allRemotingParsers \u6765\u89e3\u6790\u8fdc\u7a0b bean \u3002allRemotingParsers\u662f\u5728\uff1ainitRemotingParser()  \u4e2d\u8c03\u7528EnhancedServiceLoader.loadAll(RemotingParser.class) \u52a8\u6001\u8fdb\u884c RemotingParser \u5b50\u7c7b\u7684\u52a0\u8f7d\uff0c\u5373 SPI \u52a0\u8f7d\u673a\u5236\u3002\\n\\n\u5982\u679c\u60f3\u6269\u5c55\uff0c\u6bd4\u5982\u5b9e\u73b0\u4e00\u4e2afeign\u8fdc\u7a0b\u8c03\u7528\u7684\u89e3\u6790\u7c7b\uff0c\u53ea\u8981\u628aRemotingParser\u76f8\u5173\u5b9e\u73b0\u7c7b\u5199\u5728 SPI \u7684\u914d\u7f6e\u4e2d\u5c31\u53ef\u4ee5\u4e86\uff0c\u6269\u5c55\u6027\u5f88\u5f3a\u3002\\n\\nRemotingDesc \u4e8b\u52a1\u6d41\u7a0b\u9700\u8981\u7684\u8fdc\u7a0b bean \u7684\u4e00\u4e9b\u5177\u4f53\u4fe1\u606f\uff0c\u6bd4\u5982 targetBean\u3001interfaceClass\u3001interfaceClassName\u3001protocol\u3001isReference\u7b49\u7b49\u3002\\n\\n3.TCC\u8d44\u6e90\u6ce8\u518c\\n\\n```java\\npublic RemotingDesc parserRemotingServiceInfo(Object bean, String beanName) {\\n        RemotingDesc remotingBeanDesc = getServiceDesc(bean, beanName);\\n        if (remotingBeanDesc == null) {\\n            return null;\\n        }\\n        remotingServiceMap.put(beanName, remotingBeanDesc);\\n\\n        Class<?> interfaceClass = remotingBeanDesc.getInterfaceClass();\\n        Method[] methods = interfaceClass.getMethods();\\n        if (isService(bean, beanName)) {\\n            try {\\n                //service bean, registry resource\\n                Object targetBean = remotingBeanDesc.getTargetBean();\\n                for (Method m : methods) {\\n                    TwoPhaseBusinessAction twoPhaseBusinessAction = m.getAnnotation(TwoPhaseBusinessAction.class);\\n                    if (twoPhaseBusinessAction != null) {\\n                        TCCResource tccResource = new TCCResource();\\n                        tccResource.setActionName(twoPhaseBusinessAction.name());\\n                        tccResource.setTargetBean(targetBean);\\n                        tccResource.setPrepareMethod(m);\\n                        tccResource.setCommitMethodName(twoPhaseBusinessAction.commitMethod());\\n                        tccResource.setCommitMethod(ReflectionUtil\\n                            .getMethod(interfaceClass, twoPhaseBusinessAction.commitMethod(),\\n                                new Class[] {BusinessActionContext.class}));\\n                        tccResource.setRollbackMethodName(twoPhaseBusinessAction.rollbackMethod());\\n                        tccResource.setRollbackMethod(ReflectionUtil\\n                            .getMethod(interfaceClass, twoPhaseBusinessAction.rollbackMethod(),\\n                                new Class[] {BusinessActionContext.class}));\\n                        //registry tcc resource\\n                        DefaultResourceManager.get().registerResource(tccResource);\\n                    }\\n                }\\n            } catch (Throwable t) {\\n                throw new FrameworkException(t, \\"parser remoting service error\\");\\n            }\\n        }\\n        if (isReference(bean, beanName)) {\\n            //reference bean, TCC proxy\\n            remotingBeanDesc.setReference(true);\\n        }\\n        return remotingBeanDesc;\\n    }\\n```\\n\\n\u9996\u5148\u5224\u65ad\u662f\u5426\u662f\u4e8b\u52a1\u53c2\u4e0e\u65b9\uff0c\u5982\u679c\u662f\uff0c\u62ff\u5230 RemotingDesc \u4e2d\u7684 interfaceClass\uff0c\u904d\u5386\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\uff0c\u5224\u65ad\u65b9\u6cd5\u4e0a\u662f\u5426\u6709@TwoParserBusinessAction \u6ce8\u89e3\uff0c\u5982\u679c\u6709\uff0c\u628a\u53c2\u6570\u5c01\u88c5\u6210 TCCRecource\uff0c\u901a\u8fc7 DefaultResourceManager \u8fdb\u884c TCC \u8d44\u6e90\u7684\u6ce8\u518c\u3002\\n\\n\u8fd9\u91cc DefaultResourceManager \u4f1a\u6839\u636e Resource \u7684 BranchType \u6765\u5bfb\u627e\u5bf9\u5e94\u7684\u8d44\u6e90\u7ba1\u7406\u5668\uff0cTCC \u6a21\u5f0f\u4e0b\u8d44\u6e90\u7ba1\u7406\u7c7b\uff0c\u5728 tcc \u6a21\u5757\u4e2d\u3002\\n\\n\u8fd9\u4e2a rpc \u89e3\u6790\u7c7b\u4e3b\u8981\u63d0\u4f9b\u7ed9 spring \u6a21\u5757\u8fdb\u884c\u4f7f\u7528\u3002parserRemotingServiceInfo() \u88ab\u5c01\u88c5\u5230\u4e86 spring \u6a21\u5757\u7684 TCCBeanParserUtils \u5de5\u5177\u7c7b\u4e2d\u3002spring \u6a21\u5757\u7684 GlobalTransactionScanner \u5728\u9879\u76ee\u542f\u52a8\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u5de5\u5177\u7c7b\u89e3\u6790 TCC bean\uff0c\u5de5\u5177\u7c7b TCCBeanParserUtils \u4f1a\u8c03\u7528 TCCResourceManager \u8fdb\u884c\u8d44\u6e90\u7684\u6ce8\u518c\uff0c\u5e76\u4e14\u5982\u679c\u662f\u5168\u5c40\u4e8b\u52a1\u7684\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u4f1a\u7ec7\u5165 TccActionInterceptor \u4ee3\u7406\u3002\u8fd9\u4e9b\u4e2a\u6d41\u7a0b\u662f spring \u6a21\u5757\u7684\u529f\u80fd\uff0ctcc \u6a21\u5757\u662f\u63d0\u4f9b\u529f\u80fd\u7c7b\u7ed9 spring \u6a21\u5757\u4f7f\u7528\u3002\\n\\n## \u4e09  .tcc \u8d44\u6e90\u7ba1\u7406\u5668\\n\\nTCCResourceManager \u8d1f\u8d23\u7ba1\u7406 TCC \u6a21\u5f0f\u4e0b\u8d44\u6e90\u7684\u6ce8\u518c\u3001\u5206\u652f\u7684\u6ce8\u518c\u3001\u63d0\u4ea4\u3001\u548c\u56de\u6eda\u3002\\n\\n1.\u5728\u9879\u76ee\u542f\u52a8\u65f6\uff0c spring \u6a21\u5757\u7684 GlobalTransactionScanner \u626b\u63cf\u5230 bean \u662f tcc bean \u65f6\uff0c\u4f1a\u672c\u5730\u7f13\u5b58\u8d44\u6e90\uff0c\u5e76\u5411 server \u6ce8\u518c\uff1a\\n\\n```java\\n    @Override\\n    public void registerResource(Resource resource) {\\n        TCCResource tccResource = (TCCResource)resource;\\n        tccResourceCache.put(tccResource.getResourceId(), tccResource);\\n        super.registerResource(tccResource);\\n    }\\n```\\n\\n\u4e0eserver\u901a\u4fe1\u7684\u903b\u8f91\u88ab\u5c01\u88c5\u5728\u4e86\u7236\u7c7b AbstractResourceManage \u4e2d\uff0c\u8fd9\u91cc\u6839\u636e resourceId \u5bf9 TCCResource \u8fdb\u884c\u7f13\u5b58\u3002\u7236\u7c7b AbstractResourceManage  \u6ce8\u518c\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u4f7f\u7528 resourceGroupId + actionName\uff0cactionName \u5c31\u662f @TwoParseBusinessAction \u6ce8\u89e3\u4e2d\u7684 name\uff0cresourceGroupId \u9ed8\u8ba4\u662f DEFAULT\u3002\\n\\n2.\u4e8b\u52a1\u5206\u652f\u7684\u6ce8\u518c\u5728 rm-datasource \u5305\u4e0b\u7684 AbstractResourceManager \u4e2d\uff0c\u6ce8\u518c\u65f6\u53c2\u6570 lockKeys \u4e3a null\uff0c\u548c AT \u6a21\u5f0f\u4e0b\u4e8b\u52a1\u5206\u652f\u7684\u6ce8\u518c\u8fd8\u662f\u6709\u4e9b\u4e0d\u4e00\u6837\u7684\u3002\\n\\n3.\u5206\u652f\u7684\u63d0\u4ea4\u6216\u8005\u56de\u6eda\uff1a\\n\\n```java\\n    @Override\\n    public BranchStatus branchCommit(BranchType branchType, String xid, long branchId, String resourceId,\\n                                     String applicationData) throws TransactionException {\\n        TCCResource tccResource = (TCCResource)tccResourceCache.get(resourceId);\\n        if (tccResource == null) {\\n            throw new ShouldNeverHappenException(\\"TCC resource is not exist, resourceId:\\" + resourceId);\\n        }\\n        Object targetTCCBean = tccResource.getTargetBean();\\n        Method commitMethod = tccResource.getCommitMethod();\\n        if (targetTCCBean == null || commitMethod == null) {\\n            throw new ShouldNeverHappenException(\\"TCC resource is not available, resourceId:\\" + resourceId);\\n        }\\n        try {\\n            boolean result = false;\\n            //BusinessActionContext\\n            BusinessActionContext businessActionContext = getBusinessActionContext(xid, branchId, resourceId,\\n                applicationData);\\n            Object ret = commitMethod.invoke(targetTCCBean, businessActionContext);\\n            if (ret != null) {\\n                if (ret instanceof TwoPhaseResult) {\\n                    result = ((TwoPhaseResult)ret).isSuccess();\\n                } else {\\n                    result = (boolean)ret;\\n                }\\n            }\\n            return result ? BranchStatus.PhaseTwo_Committed : BranchStatus.PhaseTwo_CommitFailed_Retryable;\\n        } catch (Throwable t) {\\n            LOGGER.error(msg, t);\\n            throw new FrameworkException(t, msg);\\n        }\\n    }\\n```\\n\u901a\u8fc7\u53c2\u6570 xid\u3001branchId\u3001resourceId\u3001applicationData \u6062\u590d\u4e1a\u52a1\u7684\u4e0a\u4e0b\u6587 businessActionContext\u3002\\n\\n\u6839\u636e\u83b7\u53d6\u5230\u7684\u4e0a\u4e0b\u6587\u901a\u8fc7\u53cd\u5c04\u6267\u884c commit \u65b9\u6cd5\uff0c\u5e76\u8fd4\u56de\u6267\u884c\u7ed3\u679c\u3002\u56de\u6eda\u65b9\u6cd5\u7c7b\u4f3c\u3002\\n\\n\u8fd9\u91cc branchCommit() \u548c branchRollback() \u63d0\u4f9b\u7ed9 rm \u6a21\u5757\u8d44\u6e90\u5904\u7406\u7684\u62bd\u8c61\u7c7b AbstractRMHandler \u8c03\u7528\uff0c\u8fd9\u4e2a handler \u662f core \u6a21\u5757\u5b9a\u4e49\u7684\u6a21\u677f\u65b9\u6cd5\u7684\u8fdb\u4e00\u6b65\u5b9e\u73b0\u7c7b\u3002\u548c registerResource() \u4e0d\u4e00\u6837\uff0c\u540e\u8005\u662f spring \u626b\u63cf\u65f6\u4e3b\u52a8\u6ce8\u518c\u8d44\u6e90\u3002\\n\\n## \u56db  . tcc \u6a21\u5f0f\u4e8b\u52a1\u5904\u7406\\n\\nspring \u6a21\u5757\u4e2d\u7684 TccActionInterceptor \u7684 invoke() \u65b9\u6cd5\u5728\u88ab\u4ee3\u7406\u7684 rpc bean \u88ab\u8c03\u7528\u65f6\u6267\u884c\u3002\u8be5\u65b9\u6cd5\u5148\u83b7\u53d6 rpc \u62e6\u622a\u5668\u900f\u4f20\u8fc7\u6765\u7684\u5168\u5c40\u4e8b\u52a1 xid \uff0c\u7136\u540e TCC \u6a21\u5f0f\u4e0b\u5168\u5c40\u4e8b\u52a1\u53c2\u4e0e\u8005\u7684\u4e8b\u52a1\u6d41\u7a0b\u8fd8\u662f\u4ea4\u7ed9 tcc \u6a21\u5757 ActionInterceptorHandler  \u5904\u7406\u3002\\n \\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e8b\u52a1\u53c2\u4e0e\u8005\uff0c\u5728\u9879\u76ee\u542f\u52a8\u7684\u65f6\u5019\uff0c\u88ab\u4ee3\u7406\u3002\u771f\u5b9e\u7684\u4e1a\u52a1\u65b9\u6cd5\uff0c\u5728 ActionInterceptorHandler \u4e2d\uff0c\u901a\u8fc7\u56de\u8c03\u6267\u884c\u3002\\n\\n```java\\n    public Map<String, Object> proceed(Method method, Object[] arguments, String xid, TwoPhaseBusinessAction businessAction,\\n                                       Callback<Object> targetCallback) throws Throwable {\\n        Map<String, Object> ret = new HashMap<String, Object>(4);\\n\\n        //TCC name\\n        String actionName = businessAction.name();\\n        BusinessActionContext actionContext = new BusinessActionContext();\\n        actionContext.setXid(xid);\\n        //set action anme\\n        actionContext.setActionName(actionName);\\n\\n        //Creating Branch Record\\n        String branchId = doTccActionLogStore(method, arguments, businessAction, actionContext);\\n        actionContext.setBranchId(branchId);\\n\\n        //set the parameter whose type is BusinessActionContext\\n        Class<?>[] types = method.getParameterTypes();\\n        int argIndex = 0;\\n        for (Class<?> cls : types) {\\n            if (cls.getName().equals(BusinessActionContext.class.getName())) {\\n                arguments[argIndex] = actionContext;\\n                break;\\n            }\\n            argIndex++;\\n        }\\n        //the final parameters of the try method\\n        ret.put(Constants.TCC_METHOD_ARGUMENTS, arguments);\\n        //the final result\\n        ret.put(Constants.TCC_METHOD_RESULT, targetCallback.execute());\\n        return ret;\\n    }\\n```\\n\\n\u8fd9\u91cc\u6709\u4e24\u4e2a\u91cd\u8981\u64cd\u4f5c\uff1a\\n\\n1.doTccActionLogStore() \u8fd9\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u8c03\u7528\u4e86\u4e24\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u65b9\u6cd5\uff1a\\nfetchActionRequestContext(method, arguments)\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u628a\u88ab @BusinessActionContextParam \u6ce8\u89e3\u7684\u53c2\u6570\u53d6\u51fa\u6765\uff0c\u5728\u4e0b\u9762\u7684 init \u65b9\u6cd5\u4e2d\u585e\u5165 BusinessActionComtext \uff0c\u540c\u65f6\u585e\u5165\u7684\u8fd8\u6709\u4e8b\u52a1\u76f8\u5173\u53c2\u6570\u3002\\nDefaultResourceManager.get().branchRegister(BranchType.TCC, actionName, null, xid,applicationContextStr, null)\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u6267\u884c TCC \u6a21\u5f0f\u4e0b\u4e8b\u52a1\u53c2\u4e0e\u8005\u4e8b\u52a1\u5206\u652f\u7684\u6ce8\u518c\u3002\\n\\n2.\u56de\u8c03\u6267\u884c targetCallback.execute() \uff0c\u88ab\u4ee3\u7406\u7684 bean \u5177\u4f53\u7684\u4e1a\u52a1\uff0c\u5373 prepare() \u65b9\u6cd5\u3002\\n\\n\\n## \u4e94  .\u603b\u7ed3\\ntcc\u6a21\u5757\uff0c\u4e3b\u8981\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd \uff1a\\n\\n1. \u5b9a\u4e49\u4e24\u9636\u6bb5\u534f\u8bae\u6ce8\u89e3\uff0c\u63d0\u4f9b tcc \u6a21\u5f0f\u4e0b\u4e8b\u52a1\u6d41\u7a0b\u9700\u8981\u7684\u5c5e\u6027\u3002\\n2. \u63d0\u4f9b\u89e3\u6790\u4e0d\u540c rpc \u6846\u67b6 remoting bean \u7684 ParserRemoting \u5b9e\u73b0\uff0c\u4f9b spring \u6a21\u5757\u8c03\u7528\u3002\\n3. \u63d0\u4f9b TCC \u6a21\u5f0f\u4e0b\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u8fdb\u884c\u8d44\u6e90\u6ce8\u518c\u3001\u4e8b\u52a1\u5206\u652f\u6ce8\u518c\u63d0\u4ea4\u56de\u6eda\u7b49\u3002\\n4. \u63d0\u4f9b TCC \u6a21\u5f0f\u4e0b\u4e8b\u52a1\u6d41\u7a0b\u7684\u5904\u7406\u7c7b\uff0c\u8ba9 MethodInterceptor \u4ee3\u7406\u7c7b\u4e0d\u6267\u884c\u5177\u4f53\u6a21\u5f0f\u7684\u4e8b\u52a1\u6d41\u7a0b\uff0c\u800c\u662f\u4e0b\u653e\u5230 tcc \u6a21\u5757\u3002\\n\\n## \u4e94  .\u76f8\u5173\\n\u4f5c\u8005\uff1a\u8d75\u6da6\u6cfd\uff0c[\u7cfb\u5217\u5730\u5740](https://blog.csdn.net/qq_37804737/category_9530078.html)\u3002"},{"id":"/seata-analysis-core-modular","metadata":{"permalink":"/zh-cn/blog/seata-analysis-core-modular","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-analysis-core-modular.md","title":"Seata core \u6a21\u5757\u6e90\u7801\u5206\u6790","description":"\u4e00  . \u5bfc\u8bfb","date":"2019-12-23T00:00:00.000Z","formattedDate":"2019\u5e7412\u670823\u65e5","tags":[],"readingTime":8.63,"hasTruncateMarker":false,"authors":[{"name":"\u8d75\u6da6\u6cfd"}],"frontMatter":{"title":"Seata core \u6a21\u5757\u6e90\u7801\u5206\u6790","author":"\u8d75\u6da6\u6cfd","keywords":["Seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"],"date":"2019/12/23"},"prevItem":{"title":"Seata tcc \u6a21\u5757\u6e90\u7801\u5206\u6790","permalink":"/zh-cn/blog/seata-analysis-tcc-modular"},"nextItem":{"title":"\u901a\u8fc7AOP\u52a8\u6001\u521b\u5efa/\u5173\u95edSeata\u5206\u5e03\u5f0f\u4e8b\u52a1","permalink":"/zh-cn/blog/seata-spring-boot-aop-aspectj"}},"content":"## \u4e00  . \u5bfc\u8bfb\\ncore \u6a21\u5757\u5b9a\u4e49\u4e86\u4e8b\u52a1\u7684\u7c7b\u578b\u3001\u72b6\u6001\uff0c\u901a\u7528\u7684\u884c\u4e3a\uff0cclient \u548c server \u901a\u4fe1\u65f6\u7684\u534f\u8bae\u548c\u6d88\u606f\u6a21\u578b\uff0c\u8fd8\u6709\u5f02\u5e38\u5904\u7406\u65b9\u5f0f\uff0c\u7f16\u8bd1\u3001\u538b\u7f29\u7c7b\u578b\u65b9\u5f0f\uff0c\u914d\u7f6e\u4fe1\u606f\u540d\u79f0\uff0c\u73af\u5883context\u7b49\uff0c\u8fd8\u57fa\u4e8e netty \u5c01\u88c5\u4e86 rpc \uff0c\u4f9b\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4f7f\u7528\u3002\\n\\n\u6309\u5305\u987a\u5e8f\u6765\u5206\u6790\u4e00\u4e0b core \u6a21\u5757\u4e3b\u8981\u529f\u80fd\u7c7b\uff1a\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20191223162313317.png)\\n\\ncodec\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2a codec \u7684\u5de5\u5382\u7c7b\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6839\u636e\u5e8f\u5217\u5316\u7c7b\u578b\u6765\u627e\u5bf9\u5e94\u7684\u5904\u7406\u7c7b\u3002\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3\u7c7b Codec \uff0c\u6709\u4e24\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff1a\\n\\n```java\\n<T> byte[] encode(T t);\\n```\\n\\n```java\\n<T> T decode(byte[] bytes);\\n```\\n\u76ee\u524d1.0\u7248\u672c\u5728 codec \u6a21\u5757\uff0c\u6709\u4e09\u79cd\u5e8f\u5217\u5316\u7684\u5b9e\u73b0\uff1aSEATA\u3001PROTOBUF\u3001KRYO\u3002\\n\\ncompressor\uff1a\u548ccodec\u5305\u4e0b\u9762\u7c7b\u4e00\u6837\uff0c\u90fd\u662f\u4e09\u4e2a\u7c7b\uff0c\u4e00\u4e2a\u538b\u7f29\u7c7b\u578b\u7c7b\uff0c\u4e00\u4e2a\u5de5\u5382\u7c7b\uff0c\u4e00\u4e2a\u538b\u7f29\u548c\u89e3\u538b\u7f29\u64cd\u4f5c\u7684\u62bd\u8c61\u7c7b\u30021.0\u7248\u672c\u5c31\u53ea\u6709\u4e00\u79cd\u538b\u7f29\u65b9\u5f0f\uff1aGzip\\n\\nconstants\uff1a\u4e24\u4e2aClientTableColumnsName\u3001ServerTableColumnsName\u7c7b\uff0c\u5206\u522b\u662f client \u7aef\u5b58\u50a8\u4e8b\u52a1\u7684\u8868\u548c server \u7aef\u5b58\u50a8\u4e8b\u52a1\u8868\u5bf9\u5e94\u7684model\u7c7b\u3002\u8fd8\u6709\u5b9a\u4e49\u652f\u6301\u7684\u6570\u636e\u5e93\u7c7b\u578b\u7c7b\u548c\u4e00\u4e9b\u5b9a\u4e49\u914d\u7f6e\u4fe1\u606f\u5c5e\u6027\u7684\u524d\u7f00\u7684\u7c7b\u3002\\n\\ncontext\uff1a\u73af\u5883\u7c7b RootContext \u6301\u6709\u4e00\u4e2a ThreadLocalContextCore \u7528\u6765\u5b58\u50a8\u4e8b\u52a1\u7684\u6807\u8bc6\u4fe1\u606f\u3002\u6bd4\u5982 TX_XID \u7528\u6765\u552f\u4e00\u7684\u8868\u793a\u4e00\u4e2a\u4e8b\u52a1\u3002TX_LOCK  \u5982\u679c\u5b58\u5728\uff0c\u5219\u8868\u793a\u672c\u5730\u4e8b\u52a1\u5bf9\u4e8e update/delete/insert/selectForUpdate SQL \u9700\u8981\u7528\u5168\u5c40\u9501\u63a7\u5236\u3002\\n\\nevent\uff1a\u8fd9\u91cc\u7528\u5230\u4e86 guava \u4e2d EventBus \u4e8b\u4ef6\u603b\u7ebf\u6765\u8fdb\u884c\u6ce8\u518c\u548c\u901a\u77e5\uff0c\u76d1\u542c\u5668\u6a21\u5f0f\u3002\u5728 server \u6a21\u5757\u7684 metrics \u5305\u4e2d\uff0cMetricsManager \u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u5bf9 GlobalStatus \u5373 server \u6a21\u5757\u5904\u7406\u4e8b\u52a1\u7684\u51e0\u4e2a\u72b6\u6001\u53d8\u5316\u65f6\uff0c\u6ce8\u518c\u4e86\u76d1\u633a\u4e8b\u4ef6\uff0c\u5f53 server \u5904\u7406\u4e8b\u52a1\u65f6\uff0c\u4f1a\u56de\u8c03\u76d1\u542c\u7684\u65b9\u6cd5\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u8fdb\u884c\u7edf\u8ba1\u5404\u79cd\u72b6\u6001\u4e8b\u52a1\u7684\u6570\u91cf\u3002\\n\\nlock\uff1a\\tserver \u5728\u6536\u5230 registerBranch \u6d88\u606f\u8fdb\u884c\u5206\u652f\u6ce8\u518c\u7684\u65f6\u5019\uff0c\u4f1a\u52a0\u9501\u30021.0\u7248\u672c\u6709\u4e24\u79cd\u9501\u7684\u5b9e\u73b0\uff0cDataBaseLocker \u548c MemoryLocker\uff0c\u5206\u522b\u662f\u6570\u636e\u5e93\u9501\u548c\u5185\u5b58\u9501\uff0c\u6570\u636e\u5e93\u9501\u6839\u636e rowKey = resourceId + tableName + pk \u8fdb\u884c\u52a0\u9501\uff0c\u5185\u5b58\u9501\u76f4\u63a5\u5c31\u662f\u6839\u636e primary key\u3002\\n\\nmodel\uff1aBranchStatus\u3001GlobalStatus\u3001BranchType \u7528\u6765\u5b9a\u4e49\u4e8b\u52a1\u7684\u7c7b\u578b\u548c\u5168\u5c40\u3001\u5206\u652f\u72b6\u6001\u3002\u8fd8\u6709TransactionManager\u548cResourceManager\uff0c\u662f rm \u548c tm \u7684\u62bd\u8c61\u7c7b\u3002\u5177\u4f53\u7684 rm \u548c tm \u7684\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5404\u79cd\u4e8b\u52a1\u7c7b\u578b\u90fd\u4e0d\u540c\uff0c\u6240\u4ee5\u8fd9\u91cc\u6ca1\u6709\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\u3002\\n\\nprotocol\uff1a\u5b9a\u4e49\u4e86 rpc \u6a21\u5757\u4f20\u8f93\u7528\u7684\u5b9e\u4f53\u7c7b\uff0c\u5373\u6bcf\u4e2a\u4e8b\u52a1\u72b6\u6001\u573a\u666f\u4e0b request \u548c response \u7684model\u3002\\n\\nstore\uff1a\u5b9a\u4e86\u4e0e\u6570\u636e\u5e93\u6253\u4ea4\u9053\u7684\u6570\u636e\u6a21\u578b\uff0c\u548c\u4e0e\u6570\u636e\u5e93\u4ea4\u4e92\u7684\u8bed\u53e5\u3002\\n\\n## \u4e8c  . exception \u5305\u4e2d handler \u7c7b\u5206\u6790\\n\u8fd9\u662f AbstractExceptionHandler \u7684 UML \u56fe\uff0cCallback \u3001AbstractCallback \u662f AbstractExceptionHandler \u7684\u5185\u90e8\u63a5\u53e3\u548c\u5185\u90e8\u7c7b\uff0cAbstractCallback \u62bd\u8c61\u7c7b\u5b9e\u73b0\u4e86\u63a5\u53e3 Callback \u7684\u4e09\u4e2a\u65b9\u6cd5\uff0c\u8fd8\u6709\u4e00\u4e2a execute() \u672a\u5b9e\u73b0\u3002AbstractExceptionHandler \u4f7f\u7528\u4e86 AbstractCallback \u4f5c\u4e3a\u6a21\u677f\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5e76\u4f7f\u7528\u4e86\u5176\u5b9e\u73b0\u7684\u4e09\u4e2a\u65b9\u6cd5\uff0c\u4f46\u662f execute() \u65b9\u6cd5\u4ecd\u7559\u7ed9\u5b50\u7c7b\u5b9e\u73b0\u3002\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20191211165628768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODA0NzM3,size_16,color_FFFFFF,t_70)\\n\u4ece\u5bf9\u5916\u66b4\u9732\u7684\u89d2\u5ea6\u770b AbstractExceptionHandler \u5b9a\u4e49\u4e86\u4e00\u4e2a\u5e26\u6709\u5f02\u5e38\u5904\u7406\u7684\u6a21\u677f\u65b9\u6cd5\uff0c\u6a21\u677f\u4e2d\u6709\u56db\u4e2a\u884c\u4e3a\uff0c\u5728\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u6267\u884c\uff0c\u5176\u4e2d\u4e09\u79cd\u884c\u4e3a\u5df2\u7ecf\u5b9e\u73b0\uff0c\u6267\u884c\u7684\u884c\u4e3a\u4ea4\u7531\u5b50\u7c7b\u81ea\u884c\u5b9e\u73b0\uff0c\u8be6\u89e3\uff1a\\n\\n1.\u4f7f\u7528\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\uff0c\u5728 exceptionHandlerTemplate() \u4e2d\uff0c\u5b9a\u4e49\u597d\u4e86\u6267\u884c\u7684\u6a21\u677f\\n\\n```java\\n    public void exceptionHandleTemplate(Callback callback, AbstractTransactionRequest request,\\n        AbstractTransactionResponse response) {\\n        try {\\n            callback.execute(request, response); //\u6267\u884c\u4e8b\u52a1\u4e1a\u52a1\u7684\u65b9\u6cd5\\n            callback.onSuccess(request, response); //\u8bbe\u7f6eresponse\u8fd4\u56de\u7801\\n        } catch (TransactionException tex) {\\n            LOGGER.error(\\"Catch TransactionException while do RPC, request: {}\\", request, tex);\\n            callback.onTransactionException(request, response, tex); //\u8bbe\u7f6eresponse\u8fd4\u56de\u7801\u5e76\u8bbe\u7f6emsg\\n        } catch (RuntimeException rex) {\\n            LOGGER.error(\\"Catch RuntimeException while do RPC, request: {}\\", request, rex);\\n            callback.onException(request, response, rex);  //\u8bbe\u7f6eresponse\u8fd4\u56de\u7801\u5e76\u8bbe\u7f6emsg\\n        }\\n    }\\n```\\nonSuccess\u3001onTransactionException\u3001onException \u5728 AbstarctCallback \u4e2d\u5df2\u7ecf\u88ab\u5b9e\u73b0\uff0cexecute \u5219\u7531AbstractExceptionHandler \u5b50\u7c7b\u5373\u8d1f\u8d23\u4e0d\u540c\u4e8b\u52a1\u6a21\u5f0f\u7684 handler \u7c7b\u8fdb\u884c\u5b9e\u73b0\u3002\\nAbstractExceptionHandler \u76ee\u524d\u6709\u4e24\u4e2a\u5b50\u7c7b\uff1aAbstractTCInboundHandler \u8d1f\u8d23\u5904\u7406\u5168\u5c40\u4e8b\u52a1\u7684\u4e1a\u52a1\uff0cAbstractRMHandler \u8d1f\u8d23\u5904\u7406\u5206\u652f\u4e8b\u52a1\u7684\u4e1a\u52a1\u3002\\n\\n2.\u4f7f\u7528\u56de\u8c03\u673a\u5236\uff0c\u4f18\u70b9\u662f\uff1a\u5141\u8bb8 AbstractExceptionHandler \u628a\u9700\u8981\u8c03\u7528\u7684\u7c7b Callback \u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8fdb\u6765\uff0chandler \u4e0d\u9700\u8981\u77e5\u9053 callback \u7684\u5177\u4f53\u6267\u884c\u903b\u8f91\uff0c\u53ea\u8981\u77e5\u9053 callback \u7684\u7279\u6027\u539f\u578b\u548c\u9650\u5236\u6761\u4ef6(\u53c2\u6570\u3001\u8fd4\u56de\u503c)\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002\\n\\n\u5148\u4f7f\u7528\u6a21\u677f\u65b9\u6cd5\uff0c\u628a\u4e8b\u52a1\u4e1a\u52a1\u6d41\u7a0b\u5b9a\u4e0b\u6765\uff0c\u518d\u901a\u8fc7\u56de\u8c03\uff0c\u628a\u5177\u4f53\u6267\u884c\u4e8b\u52a1\u4e1a\u52a1\u7684\u65b9\u6cd5\uff0c\u7559\u7ed9\u5b50\u7c7b\u5b9e\u73b0\u3002\u8bbe\u8ba1\u7684\u975e\u5e38\u5de7\u5999\u3002\\n\\n\u8fd9\u4e2a exceptionHandlerTemplate() \u5e94\u8be5\u7ffb\u8bd1\u6210\u5e26\u6709\u5f02\u5e38\u5904\u7406\u7684\u6a21\u677f\u65b9\u6cd5\u3002\u5f02\u5e38\u5904\u7406\u5df2\u7ecf\u88ab\u62bd\u8c61\u7c7b\u5b9e\u73b0\uff0c\u5177\u4f53\u7684\u4e0d\u540c\u6a21\u5f0f\u4e0b commit \u3001rollback \u7684\u4e1a\u52a1\u5904\u7406\u5219\u4ea4\u7ed9\u5b50\u7c7b\u5b9e\u73b0\u3002\\n\\n## \u4e09  . rpc \u5305\u5206\u6790\\nseata \u5bf9\u4e8e rpc \u7684\u5c01\u88c5\uff0c\u7ec6\u8282\u4e0d\u9700\u8981\u7ea0\u7ed3\uff0c\u53ef\u4ee5\u7814\u7a76\u4e00\u4e0b\u4e00\u4e0b\u5bf9\u4e8e\u4e8b\u52a1\u4e1a\u52a1\u7684\u5904\u7406\u3002\\n\\nclient \u7aef\u7684 rpc \u7c7b\u662f AbstractRpcRemotingClient\uff1a\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20191211180129741.png)\\n\\n\u91cd\u8981\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u90fd\u5728\u7c7b\u56fe\u4e2d\uff0c\u6d88\u606f\u53d1\u9001\u548c\u521d\u59cb\u5316\u65b9\u6cd5\u6ca1\u753b\u5728\u7c7b\u56fe\u4e2d\uff0c\u8be6\u7ec6\u5206\u6790\u4e00\u4e0b\u7c7b\u56fe\uff1a\\n\\nclientBootstrap\uff1a\u662f netty \u542f\u52a8\u7c7b Bootstrap \u7684\u5c01\u88c5\u7c7b\uff0c\u6301\u6709\u4e86 Bootstrap \u7684\u5b9e\u4f8b\uff0c\u5e76\u81ea\u5b9a\u4e49\u81ea\u5df1\u60f3\u8981\u7684\u5c5e\u6027\u3002\\n\\nclientChannelManager\uff1a\u4f7f\u7528 ConcurrentHashMap<serverAddress,channel> \u5bb9\u5668\u7ef4\u62a4\u5730\u5740\u548c channel \u7684\u5bf9\u5e94\u5173\u7cfb\u3002\\n\\nclientMessageListener\uff1a \u6d88\u606f\u7684\u5904\u7406\u7c7b\uff0c\u6839\u636e\u6d88\u606f\u7684\u7c7b\u578b\u7684\u4e0d\u540c\u6709\u4e09\u79cd\u5177\u4f53\u7684\u5904\u7406\u65b9\u6cd5\\n\\n```java\\npublic void onMessage(RpcMessage request, String serverAddress, ClientMessageSender sender) {\\n        Object msg = request.getBody();\\n        if (LOGGER.isInfoEnabled()) {\\n            LOGGER.info(\\"onMessage:\\" + msg);\\n        }\\n        if (msg instanceof BranchCommitRequest) {\\n            handleBranchCommit(request, serverAddress, (BranchCommitRequest)msg, sender);\\n        } else if (msg instanceof BranchRollbackRequest) {\\n            handleBranchRollback(request, serverAddress, (BranchRollbackRequest)msg, sender);\\n        } else if (msg instanceof UndoLogDeleteRequest) {\\n            handleUndoLogDelete((UndoLogDeleteRequest)msg);\\n        }\\n    }\\n```\\n\\n\u6d88\u606f\u7c7b\u4e2d\uff0c\u6301\u6709 TransactionMessageHandler \u5bf9\u4e0d\u540c\u7c7b\u578b\u6d88\u606f\u8fdb\u884c\u5904\u7406\uff0c\u6700\u7ec8\u4f1a\u6839\u636e\u4e8b\u52a1\u7c7b\u578b\u7684\u4e0d\u540c\uff08AT\u3001TCC\u3001SAGE\uff09\u8c03\u7528\u5177\u4f53\u7684\u5904\u7406\u7c7b\uff0c\u5373\u7b2c\u4e8c\u90e8\u5206\u8bf4\u7684 exceptionHandleTemplate() \u7684\u5b9e\u73b0\u7c7b\u3002\\n\\nmergeSendExecutorService\uff1a\u662f\u4e00\u4e2a\u7ebf\u7a0b\u6c60\uff0c\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u8d1f\u8d23\u5bf9\u4e0d\u540c\u5730\u5740\u4e0b\u7684\u6d88\u606f\u8fdb\u884c\u548c\u5e76\u53d1\u9001\u3002\u5728 sendAsyncRequest() \u4e2d\uff0c\u4f1a\u7ed9\u7ebf\u7a0b\u6c60\u7684\u961f\u5217LinkedBlockingQueue&lt;&gt;  offer \u6d88\u606f\uff0c\u7136\u540e\u8fd9\u4e2a\u7ebf\u7a0b\u8d1f\u8d23 poll \u548c\u5904\u7406\u6d88\u606f\u3002\\n\\nchannelRead()\uff1a\u5904\u7406\u670d\u52a1\u7aef\u7684 HeartbeatMessage.PONG \u5fc3\u8df3\u6d88\u606f\u3002\u8fd8\u6709\u6d88\u606f\u7c7b\u578b\u662f MergeResultMessage \u5373\u5f02\u6b65\u6d88\u606f\u7684\u54cd\u5e94\u6d88\u606f\uff0c\u6839\u636e msgId \u627e\u5230\u5bf9\u5e94 MessageFuture \uff0c\u5e76\u8bbe\u7f6e\u5f02\u6b65\u6d88\u606f\u7684 result \u7ed3\u679c\u3002\\n\\ndispatch()\uff1a\u8c03\u7528 clientMessageListener \u5904\u7406 server \u53d1\u9001\u8fc7\u6765\u7684\u6d88\u606f\uff0c\u4e0d\u540c\u7c7b\u578b request \u6709\u4e0d\u540c\u7684\u5904\u7406\u7c7b\u3002\\n\\n\u7b80\u5355\u70b9\u770b netty\uff0c\u53ea\u9700\u8981\u5173\u6ce8\u5e8f\u5217\u5316\u65b9\u5f0f\u548c\u6d88\u606f\u5904\u7406handler\u7c7b\u3002seata \u7684 rpc \u5e8f\u5217\u5316\u65b9\u5f0f\u901a\u8fc7\u5de5\u5382\u7c7b\u627e Codec \u5b9e\u73b0\u7c7b\u8fdb\u884c\u5904\u7406\uff0chandler \u5373\u4e0a\u6587\u8bf4\u7684 TransactionMessageHandler \u3002\\n\\n## \u56db  . \u603b\u7ed3\\ncore \u6a21\u5757\u6d89\u53ca\u7684\u529f\u80fd\u5f88\u591a\uff0c\u5176\u4e2d\u7684\u7c7b\u5927\u591a\u90fd\u662f\u5176\u4ed6\u6a21\u5757\u7684\u62bd\u8c61\u7c7b\u3002\u62bd\u8c61\u51fa\u4e1a\u52a1\u6a21\u578b\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u5206\u5e03\u5728\u4e0d\u540c\u7684\u6a21\u5757\u3002core \u6a21\u5757\u7684\u4ee3\u7801\u975e\u5e38\u7684\u4f18\u79c0\uff0c\u5f88\u591a\u8bbe\u8ba1\u90fd\u662f\u7ecf\u5178\uff0c\u6bd4\u5982\u4e0a\u6587\u5206\u6790\u7684\u57fa\u4e8e\u6a21\u677f\u6a21\u5f0f\u6539\u9020\u7684\uff0c\u975e\u5e38\u5b9e\u7528\u4e5f\u975e\u5e38\u7f8e\uff0c\u503c\u5f97\u4ed4\u7ec6\u7814\u7a76\u3002\\n\\n## \u4e94  . seata\u6e90\u7801\u5206\u6790\u7cfb\u5217\u5730\u5740\\n[\u7cfb\u5217\u5730\u5740](https://blog.csdn.net/qq_37804737/category_9530078.html)"},{"id":"/seata-spring-boot-aop-aspectj","metadata":{"permalink":"/zh-cn/blog/seata-spring-boot-aop-aspectj","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-spring-boot-aop-aspectj.md","title":"\u901a\u8fc7AOP\u52a8\u6001\u521b\u5efa/\u5173\u95edSeata\u5206\u5e03\u5f0f\u4e8b\u52a1","description":"\u672c\u6587\u8bb2\u8ff0\u5982\u4f55\u901a\u8fc7AOP\u52a8\u6001\u521b\u5efa/\u5173\u95edSeata\u5206\u5e03\u5f0f\u4e8b\u52a1","date":"2019-12-23T00:00:00.000Z","formattedDate":"2019\u5e7412\u670823\u65e5","tags":[],"readingTime":4.11,"hasTruncateMarker":false,"authors":[{"name":"FUNKYE"}],"frontMatter":{"title":"\u901a\u8fc7AOP\u52a8\u6001\u521b\u5efa/\u5173\u95edSeata\u5206\u5e03\u5f0f\u4e8b\u52a1","keywords":["Seata","Nacos","\u5206\u5e03\u5f0f\u4e8b\u52a1","spring"],"description":"\u672c\u6587\u8bb2\u8ff0\u5982\u4f55\u901a\u8fc7AOP\u52a8\u6001\u521b\u5efa/\u5173\u95edSeata\u5206\u5e03\u5f0f\u4e8b\u52a1","author":"FUNKYE","date":"2019/12/23"},"prevItem":{"title":"Seata core \u6a21\u5757\u6e90\u7801\u5206\u6790","permalink":"/zh-cn/blog/seata-analysis-core-modular"},"nextItem":{"title":"Seata \u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u4e0e\u964d\u7ea7\u5b9e\u73b0\u539f\u7406","permalink":"/zh-cn/blog/seata-dynamic-config-and-dynamic-disable"}},"content":"\u672c\u6587\u4f5c\u8005\uff1aFUNKYE(\u9648\u5065\u658c),\u676d\u5dde\u67d0\u4e92\u8054\u7f51\u516c\u53f8\u4e3b\u7a0b\u3002\\n\\n# \u524d\u8a00\\n\\n\u901a\u8fc7GA\u5927\u4f1a\u4e0a\u6ef4\u6ef4\u51fa\u884c\u7684\u9ad8\u7ea7\u7814\u53d1\u5de5\u7a0b\u9648\u9e4f\u5fd7\u7684\u5728\u6ef4\u6ef4\u4e24\u8f6e\u8f66\u4e1a\u52a1\u4e2d\u7684\u5b9e\u8df5,\u53d1\u73b0\u52a8\u6001\u964d\u7ea7\u7684\u5fc5\u8981\u6027\u662f\u975e\u5e38\u7684\u9ad8,\u6240\u4ee5\u8fd9\u8fb9\u7b80\u5355\u5229\u7528spring boot aop\u6765\u7b80\u5355\u7684\u5904\u7406\u964d\u7ea7\u76f8\u5173\u7684\u5904\u7406,\u8fd9\u8fb9\u975e\u5e38\u611f\u8c22\u9648\u9e4f\u5fd7\u7684\u5206\u4eab!\\n\\n\u53ef\u5229\u7528\u6b64demo[\u9879\u76ee\u5730\u5740](https://gitee.com/itCjb/springboot-dubbo-mybatisplus-seata )\\n\\n\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u6539\u9020\u5b9e\u8df5.\\n\\n## \u51c6\u5907\u5de5\u4f5c\\n\\n\u200b\\t1.\u521b\u5efa\u6d4b\u8bd5\u7528\u7684TestAspect:\\n\\n```java\\npackage org.test.config;\\n\\nimport java.lang.reflect.Method; \\n\\nimport org.apache.commons.lang3.StringUtils;\\nimport org.aspectj.lang.JoinPoint;\\nimport org.aspectj.lang.annotation.AfterReturning;\\nimport org.aspectj.lang.annotation.AfterThrowing;\\nimport org.aspectj.lang.annotation.Aspect;\\nimport org.aspectj.lang.annotation.Before;\\nimport org.aspectj.lang.reflect.MethodSignature;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\nimport org.springframework.stereotype.Component;\\n\\nimport io.seata.core.context.RootContext;\\nimport io.seata.core.exception.TransactionException;\\nimport io.seata.tm.api.GlobalTransaction;\\nimport io.seata.tm.api.GlobalTransactionContext;\\n\\n@Aspect\\n@Component\\npublic class TestAspect {\\n    private final static Logger logger = LoggerFactory.getLogger(TestAspect.class);\\n    \\n    @Before(\\"execution(* org.test.service.*.*(..))\\")\\n    public void before(JoinPoint joinPoint) throws TransactionException {\\n        MethodSignature signature = (MethodSignature)joinPoint.getSignature();\\n        Method method = signature.getMethod();\\n        logger.info(\\"\u62e6\u622a\u5230\u9700\u8981\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u65b9\u6cd5,\\" + method.getName());\\n        // \u6b64\u5904\u53ef\u7528redis\u6216\u8005\u5b9a\u65f6\u4efb\u52a1\u6765\u83b7\u53d6\u4e00\u4e2akey\u5224\u65ad\u662f\u5426\u9700\u8981\u5173\u95ed\u5206\u5e03\u5f0f\u4e8b\u52a1\\n        // \u6a21\u62df\u52a8\u6001\u5173\u95ed\u5206\u5e03\u5f0f\u4e8b\u52a1\\n        if ((int)(Math.random() * 100) % 2 == 0) {\\n            GlobalTransaction tx = GlobalTransactionContext.getCurrentOrCreate();\\n            tx.begin(300000, \\"test-client\\");\\n        } else {\\n            logger.info(\\"\u5173\u95ed\u5206\u5e03\u5f0f\u4e8b\u52a1\\");\\n        }\\n    }\\n\\n    @AfterThrowing(throwing = \\"e\\", pointcut = \\"execution(* org.test.service.*.*(..))\\")\\n    public void doRecoveryActions(Throwable e) throws TransactionException {\\n        logger.info(\\"\u65b9\u6cd5\u6267\u884c\u5f02\u5e38:{}\\", e.getMessage());\\n        if (!StringUtils.isBlank(RootContext.getXID()))\\n            GlobalTransactionContext.reload(RootContext.getXID()).rollback();\\n    }\\n\\n    @AfterReturning(value = \\"execution(* org.test.service.*.*(..))\\", returning = \\"result\\")\\n    public void afterReturning(JoinPoint point, Object result) throws TransactionException {\\n        logger.info(\\"\u65b9\u6cd5\u6267\u884c\u7ed3\u675f:{}\\", result);\\n        if ((Boolean)result) {\\n            if (!StringUtils.isBlank(RootContext.getXID())) {\\n                logger.info(\\"\u5206\u5e03\u5f0f\u4e8b\u52a1Id:{}\\", RootContext.getXID());\\n                GlobalTransactionContext.reload(RootContext.getXID()).commit();\\n            }\\n        }\\n    }\\n\\n}\\n```\\n\\n\u8bf7\u6ce8\u610f\u4e0a\u9762\u7684\u5305\u540d\u53ef\u6539\u4e3a\u4f60\u81ea\u5df1\u7684service\u5305\u540d:\\n\\n\u200b\\t2.\u6539\u52a8service\u4ee3\u7801:\\n\\n```java\\n    public Object seataCommit() {\\n        testService.Commit();\\n        return true;\\n    }\\n```\\n\\n\u56e0\u4e3a\u5f02\u5e38\u8ddf\u8fd4\u56de\u7ed3\u679c\u6211\u4eec\u90fd\u4f1a\u62e6\u622a,\u6240\u4ee5\u8fd9\u8fb9\u53ef\u4ee5trycatch\u6216\u8005\u76f4\u63a5\u8ba9\u4ed6\u629b\u5f02\u5e38\u6765\u62e6\u622a\u4e5f\u884c,\u6216\u8005\u76f4\u63a5\u5224\u65ad\u8fd4\u56de\u7ed3\u679c,\u6bd4\u5982\u4f60\u7684\u4e1a\u52a1\u4ee3\u7801code=200\u4e3a\u6210\u529f,\u90a3\u4e48\u5c31commit,\u53cd\u4e4b\u5728\u62e6\u622a\u8fd4\u56de\u503c\u90a3\u6bb5\u4ee3\u7801\u52a0\u4e0arollback;\\n\\n# \u8fdb\u884c\u8c03\u8bd5\\n\\n\u200b\\t1.\u66f4\u6539\u4ee3\u7801\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38\\n\\n```java\\n    public Object seataCommit() {\\n        try {\\n            testService.Commit();\\n            int i = 1 / 0;\\n            return true;\\n        } catch (Exception e) {\\n            // TODO: handle exception\\n            throw new RuntimeException();\\n        }\\n    }\\n```\\n\\n\u200b\\t\u67e5\u770b\u65e5\u5fd7:\\n\\n```java\\n2019-12-23 11:57:55.386  INFO 23952 --- [.0-28888-exec-7] org.test.controller.TestController       : \u62e6\u622a\u5230\u9700\u8981\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u65b9\u6cd5,seataCommit\\n2019-12-23 11:57:55.489  INFO 23952 --- [.0-28888-exec-7] i.seata.tm.api.DefaultGlobalTransaction  : Begin new global transaction [192.168.14.67:8092:2030765910]\\n2019-12-23 11:57:55.489  INFO 23952 --- [.0-28888-exec-7] org.test.controller.TestController       : \u521b\u5efa\u5206\u5e03\u5f0f\u4e8b\u52a1\u5b8c\u6bd5192.168.14.67:8092:2030765910\\n2019-12-23 11:57:55.709  INFO 23952 --- [.0-28888-exec-7] org.test.controller.TestController       : \u65b9\u6cd5\u6267\u884c\u5f02\u5e38:null\\n2019-12-23 11:57:55.885  INFO 23952 --- [.0-28888-exec-7] i.seata.tm.api.DefaultGlobalTransaction  : [192.168.14.67:8092:2030765910] rollback status: Rollbacked\\n2019-12-23 11:57:55.888 ERROR 23952 --- [.0-28888-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException] with root cause\\n\\n```\\n\\n\u200b\\t\u53ef\u4ee5\u770b\u5230\u5df2\u88ab\u62e6\u622a\u4e5f\u89e6\u53d1\u4e86rollback\u4e86.\\n\\n\u200b\\t2.\u6062\u590d\u4ee3\u7801\u8c03\u8bd5\u6b63\u5e38\u60c5\u51b5:\\n\\n```java\\n    public Object seataCommit() {\\n        testService.Commit();\\n        return true;\\n    }\\n```\\n\\n\u200b\\t\u67e5\u770b\u65e5\u5fd7:\\n\\n```\\n2019-12-23 12:00:20.876  INFO 23952 --- [.0-28888-exec-2] org.test.controller.TestController       : \u62e6\u622a\u5230\u9700\u8981\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u65b9\u6cd5,seataCommit\\n2019-12-23 12:00:20.919  INFO 23952 --- [.0-28888-exec-2] i.seata.tm.api.DefaultGlobalTransaction  : Begin new global transaction [192.168.14.67:8092:2030765926]\\n2019-12-23 12:00:20.920  INFO 23952 --- [.0-28888-exec-2] org.test.controller.TestController       : \u521b\u5efa\u5206\u5e03\u5f0f\u4e8b\u52a1\u5b8c\u6bd5192.168.14.67:8092:2030765926\\n2019-12-23 12:00:21.078  INFO 23952 --- [.0-28888-exec-2] org.test.controller.TestController       : \u65b9\u6cd5\u6267\u884c\u7ed3\u675f:true\\n2019-12-23 12:00:21.078  INFO 23952 --- [.0-28888-exec-2] org.test.controller.TestController       : \u5206\u5e03\u5f0f\u4e8b\u52a1Id:192.168.14.67:8092:2030765926\\n2019-12-23 12:00:21.213  INFO 23952 --- [.0-28888-exec-2] i.seata.tm.api.DefaultGlobalTransaction  : [192.168.14.67:8092:2030765926] commit status: Committed\\n```\\n\\n\u200b\\t\u53ef\u4ee5\u770b\u5230\u4e8b\u52a1\u5df2\u7ecf\u88ab\u63d0\u4ea4\u4e86.\\n\\n# \u603b\u7ed3\\n\\n\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\u5e0c\u671b\u5e0c\u671b\u5927\u5bb6\u8bbf\u95ee\u4ee5\u4e0b\u5730\u5740\u9605\u8bfb\u8be6\u7ec6\u6587\u6863\\n\\n[nacos\u5b98\u7f51](https://nacos.io/zh-cn/index.html)\\n\\n[dubbo\u5b98\u7f51](http://dubbo.apache.org/en-us/)\\n\\n[seata\u5b98\u7f51](http://seata.io/zh-cn/)\\n\\n[docker\u5b98\u7f51](https://www.docker.com/)"},{"id":"/seata-dynamic-config-and-dynamic-disable","metadata":{"permalink":"/zh-cn/blog/seata-dynamic-config-and-dynamic-disable","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-dynamic-config-and-dynamic-disable.md","title":"Seata \u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u4e0e\u964d\u7ea7\u5b9e\u73b0\u539f\u7406","description":"\u8bb2\u8ff0\u4e86 Seata \u652f\u6301\u7684\u591a\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u662f\u5982\u4f55\u9002\u914d\u4e0d\u540c\u7684\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u4ee5\u53ca\u5982\u4f55\u5b9e\u73b0\u964d\u7ea7\u529f\u80fd\u3002","date":"2019-12-17T00:00:00.000Z","formattedDate":"2019\u5e7412\u670817\u65e5","tags":[],"readingTime":7.97,"hasTruncateMarker":false,"authors":[{"name":"\u5f20\u4e58\u8f89"}],"frontMatter":{"title":"Seata \u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u4e0e\u964d\u7ea7\u5b9e\u73b0\u539f\u7406","author":"\u5f20\u4e58\u8f89","keywords":["Seata\u3001Dynamic\u3001Config"],"description":"\u8bb2\u8ff0\u4e86 Seata \u652f\u6301\u7684\u591a\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u662f\u5982\u4f55\u9002\u914d\u4e0d\u540c\u7684\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u4ee5\u53ca\u5982\u4f55\u5b9e\u73b0\u964d\u7ea7\u529f\u80fd\u3002","date":"2019/12/17"},"prevItem":{"title":"\u901a\u8fc7AOP\u52a8\u6001\u521b\u5efa/\u5173\u95edSeata\u5206\u5e03\u5f0f\u4e8b\u52a1","permalink":"/zh-cn/blog/seata-spring-boot-aop-aspectj"},"nextItem":{"title":"Seata \u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u539f\u7406","permalink":"/zh-cn/blog/seata-config-center"}},"content":"Seata \u7684\u52a8\u6001\u964d\u7ea7\u9700\u8981\u7ed3\u5408\u914d\u7f6e\u4e2d\u5fc3\u7684\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u529f\u80fd\u3002\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\uff0c\u5373\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\u76d1\u542c\u8ba2\u9605\uff0c\u6839\u636e\u9700\u8981\u8bfb\u53d6\u5df2\u66f4\u65b0\u7684\u7f13\u5b58\u503c\uff0cZK\u3001Apollo\u3001Nacos \u7b49\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u90fd\u6709\u73b0\u6210\u7684\u76d1\u542c\u5668\u53ef\u5b9e\u73b0\u52a8\u6001\u5237\u65b0\u914d\u7f6e\uff1b\u52a8\u6001\u964d\u7ea7\uff0c\u5373\u901a\u8fc7\u52a8\u6001\u66f4\u65b0\u6307\u5b9a\u914d\u7f6e\u53c2\u6570\u503c\uff0c\u4f7f\u5f97 Seata \u80fd\u591f\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u52a8\u6001\u63a7\u5236\u5168\u5c40\u4e8b\u52a1\u5931\u6548\uff08\u76ee\u524d\u53ea\u6709 AT \u6a21\u5f0f\u6709\u8fd9\u4e2a\u529f\u80fd\uff09\u3002\\n\\n\u90a3\u4e48 Seata \u652f\u6301\u7684\u591a\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u662f\u5982\u4f55\u9002\u914d\u4e0d\u540c\u7684\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u4ee5\u53ca\u5982\u4f55\u5b9e\u73b0\u964d\u7ea7\u7684\u5462\uff1f\u4e0b\u9762\u4ece\u6e90\u7801\u7684\u5c42\u9762\u8be6\u7ec6\u7ed9\u5927\u5bb6\u8bb2\u89e3\u4e00\u756a\u3002\\n\\n\\n\\n# \u52a8\u6001\u914d\u7f6e\u8ba2\u9605\\n\\nSeata \u914d\u7f6e\u4e2d\u5fc3\u6709\u4e00\u4e2a\u76d1\u542c\u5668\u57fa\u51c6\u63a5\u53e3\uff0c\u5b83\u4e3b\u8981\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u548c default \u65b9\u6cd5\uff0c\u5982\u4e0b\uff1a\\n\\nio.seata.config.ConfigurationChangeListener\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191216212442.png)\\n\\n\u8be5\u76d1\u542c\u5668\u57fa\u51c6\u63a5\u53e3\u4e3b\u8981\u6709\u4e24\u4e2a\u5b9e\u73b0\u7c7b\u578b\uff1a\\n\\n1. \u5b9e\u73b0\u6ce8\u518c\u914d\u7f6e\u8ba2\u9605\u4e8b\u4ef6\u76d1\u542c\u5668\uff1a\u7528\u4e8e\u5b9e\u73b0\u5404\u79cd\u529f\u80fd\u7684\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\uff0c\u6bd4\u5982 GlobalTransactionalInterceptor \u5b9e\u73b0\u4e86 ConfigurationChangeListener\uff0c\u6839\u636e\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u5b9e\u73b0\u7684\u52a8\u6001\u964d\u7ea7\u529f\u80fd\uff1b\\n2. \u5b9e\u73b0\u914d\u7f6e\u4e2d\u5fc3\u52a8\u6001\u8ba2\u9605\u529f\u80fd\u4e0e\u9002\u914d\uff1a\u5bf9\u4e8e\u76ee\u524d\u8fd8\u6ca1\u6709\u52a8\u6001\u8ba2\u9605\u529f\u80fd\u7684 file \u7c7b\u578b\u9ed8\u8ba4\u914d\u7f6e\u4e2d\u5fc3\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8be5\u57fa\u51c6\u63a5\u53e3\u6765\u5b9e\u73b0\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u529f\u80fd\uff1b\u5bf9\u4e8e\u963b\u585e\u8ba2\u9605\u9700\u8981\u53e6\u8d77\u4e00\u4e2a\u7ebf\u7a0b\u53bb\u6267\u884c\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u5b9e\u73b0\u8be5\u57fa\u51c6\u63a5\u53e3\u8fdb\u884c\u9002\u914d\uff0c\u8fd8\u53ef\u4ee5\u590d\u7528\u8be5\u57fa\u51c6\u63a5\u53e3\u7684\u7ebf\u7a0b\u6c60\uff1b\u4ee5\u53ca\u8fd8\u6709\u5f02\u6b65\u8ba2\u9605\uff0c\u6709\u8ba2\u9605\u5355\u4e2a key\uff0c\u6709\u8ba2\u9605\u591a\u4e2a key \u7b49\u7b49\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u5b9e\u73b0\u8be5\u57fa\u51c6\u63a5\u53e3\u4ee5\u9002\u914d\u5404\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u3002\\n\\n## Nacos \u52a8\u6001\u8ba2\u9605\u5b9e\u73b0\\n\\nNacos \u6709\u81ea\u5df1\u5185\u90e8\u5b9e\u73b0\u7684\u76d1\u542c\u5668\uff0c\u56e0\u6b64\u76f4\u63a5\u76f4\u63a5\u7ee7\u627f\u5b83\u5185\u90e8\u62bd\u8c61\u76d1\u542c\u5668 AbstractSharedListener\uff0c\u5b9e\u73b0\u5982\u4e0b\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191223212237.png)\\n\\n\u5982\u4e0a\uff0c\\n\\n- dataId\uff1a\u4e3a\u8ba2\u9605\u7684\u914d\u7f6e\u5c5e\u6027\uff1b\\n- listener\uff1a\u914d\u7f6e\u8ba2\u9605\u4e8b\u4ef6\u76d1\u542c\u5668\uff0c\u7528\u4e8e\u5c06\u5916\u90e8\u4f20\u5165\u7684 listener \u4f5c\u4e3a\u4e00\u4e2a wrapper\uff0c\u6267\u884c\u771f\u6b63\u7684\u53d8\u66f4\u903b\u8f91\u3002\\n\\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cnacos \u5e76\u6ca1\u6709\u4f7f\u7528 ConfigurationChangeListener \u5b9e\u73b0\u81ea\u5df1\u7684\u76d1\u542c\u914d\u7f6e\uff0c\u4e00\u65b9\u9762\u662f\u56e0\u4e3a Nacos \u672c\u8eab\u5df2\u6709\u76d1\u542c\u8ba2\u9605\u529f\u80fd\uff0c\u4e0d\u9700\u8981\u81ea\u5df1\u518d\u53bb\u5b9e\u73b0\uff1b\u53e6\u4e00\u65b9\u9762\u56e0\u4e3a nacos \u5c5e\u4e8e\u975e\u963b\u585e\u5f0f\u8ba2\u9605\uff0c\u4e0d\u9700\u8981\u590d\u7528 ConfigurationChangeListener \u7684\u7ebf\u7a0b\u6c60\uff0c\u5373\u65e0\u9700\u8fdb\u884c\u9002\u914d\u3002\\n\\n\u6dfb\u52a0\u8ba2\u9605\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191223213347.png)\\n\\nNacos \u914d\u7f6e\u4e2d\u5fc3\u4e3a\u67d0\u4e2a dataId \u6dfb\u52a0\u8ba2\u9605\u7684\u903b\u8f91\u5f88\u7b80\u5355\uff0c\u7528 dataId \u548c listener \u521b\u5efa\u4e00\u4e2a NacosListener \u8c03\u7528 configService#addListener \u65b9\u6cd5\uff0c\u628a NacosListener \u4f5c\u4e3a dataId \u7684\u76d1\u542c\u5668\uff0cdataId \u5c31\u5b9e\u73b0\u4e86\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u529f\u80fd\u3002\\n\\n## file \u52a8\u6001\u8ba2\u9605\u5b9e\u73b0\\n\\n\u4ee5\u5b83\u7684\u5b9e\u73b0\u7c7b FileListener \u4e3e\u4f8b\u5b50\uff0c\u5b83\u7684\u5b9e\u73b0\u903b\u8f91\u5982\u4e0b\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191215151642.png)\\n\\n\u5982\u4e0a\uff0c\\n\\n- dataId\uff1a\u4e3a\u8ba2\u9605\u7684\u914d\u7f6e\u5c5e\u6027\uff1b\\n\\n- listener\uff1a\u914d\u7f6e\u8ba2\u9605\u4e8b\u4ef6\u76d1\u542c\u5668\uff0c\u7528\u4e8e\u5c06\u5916\u90e8\u4f20\u5165\u7684 listener \u4f5c\u4e3a\u4e00\u4e2a wrapper\uff0c\u6267\u884c\u771f\u6b63\u7684\u53d8\u66f4\u903b\u8f91\uff0c\u8fd9\u91cc\u7279\u522b\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c**\u8be5\u76d1\u542c\u5668\u4e0e FileListener \u540c\u6837\u5b9e\u73b0\u4e86 ConfigurationChangeListener \u63a5\u53e3\uff0c\u53ea\u4e0d\u8fc7 FileListener \u662f\u7528\u4e8e\u7ed9 file \u63d0\u4f9b\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u529f\u80fd\uff0c\u800c listener \u7528\u4e8e\u6267\u884c\u914d\u7f6e\u8ba2\u9605\u4e8b\u4ef6**\uff1b\\n\\n- executor\uff1a\u7528\u4e8e\u5904\u7406\u914d\u7f6e\u53d8\u66f4\u903b\u8f91\u7684\u7ebf\u7a0b\u6c60\uff0c\u5728 ConfigurationChangeListener#onProcessEvent \u65b9\u6cd5\u4e2d\u7528\u5230\u3002\\n\\n**FileListener#onChangeEvent \u65b9\u6cd5\u7684\u5b9e\u73b0\u8ba9 file \u5177\u5907\u4e86\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u7684\u529f\u80fd**\uff0c\u5b83\u7684\u903b\u8f91\u5982\u4e0b\uff1a\\n\\n\u65e0\u9650\u5faa\u73af\u83b7\u53d6\u8ba2\u9605\u7684\u914d\u7f6e\u5c5e\u6027\u5f53\u524d\u7684\u503c\uff0c\u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\u65e7\u7684\u503c\uff0c\u5224\u65ad\u662f\u5426\u6709\u53d8\u66f4\uff0c\u5982\u679c\u6709\u53d8\u66f4\u5c31\u6267\u884c\u5916\u90e8\u4f20\u5165 listener \u7684\u903b\u8f91\u3002\\n\\nConfigurationChangeEvent \u7528\u4e8e\u4fdd\u5b58\u914d\u7f6e\u53d8\u66f4\u7684\u4e8b\u4ef6\u7c7b\uff0c\u5b83\u7684\u6210\u5458\u5c5e\u6027\u5982\u4e0b\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191215175232.png)\\n\\n\\n\\n\u8fd9\u91cc\u7684 getConfig \u65b9\u6cd5\u662f\u5982\u4f55\u611f\u77e5 file \u914d\u7f6e\u7684\u53d8\u66f4\u5462\uff1f\u6211\u4eec\u70b9\u8fdb\u53bb\uff0c\u53d1\u73b0\u5b83\u6700\u7ec8\u7684\u903b\u8f91\u5982\u4e0b\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191215162713.png)\\n\\n\u53d1\u73b0\u5b83\u662f\u521b\u5efa\u4e00\u4e2a future \u7c7b\uff0c\u7136\u540e\u5305\u88c5\u6210\u4e00\u4e2a Runnable \u653e\u5165\u7ebf\u7a0b\u6c60\u4e2d\u5f02\u6b65\u6267\u884c\uff0c\u6700\u540e\u8c03\u7528 get \u65b9\u6cd5\u963b\u585e\u83b7\u53d6\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u7ee7\u7eed\u5f80\u4e0b\u770b\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191215170908.png)\\n\\nallowDynamicRefresh\uff1a\u52a8\u6001\u5237\u65b0\u914d\u7f6e\u5f00\u5173\uff1b\\n\\ntargetFileLastModified\uff1afile \u6700\u540e\u66f4\u6539\u7684\u65f6\u95f4\u7f13\u5b58\u3002\\n\\n\u4ee5\u4e0a\u903b\u8f91\uff1a\\n\\n\u83b7\u53d6 file \u6700\u540e\u66f4\u65b0\u7684\u65f6\u95f4\u503c tempLastModified\uff0c\u7136\u540e\u5bf9\u6bd4\u5bf9\u6bd4\u7f13\u5b58\u503c targetFileLastModified\uff0c\u5982\u679c tempLastModified > targetFileLastModified\uff0c\u8bf4\u660e\u671f\u95f4\u914d\u7f6e\u6709\u66f4\u6539\u8fc7\uff0c\u8fd9\u65f6\u5c31\u91cd\u65b0\u52a0\u8f7d file \u5b9e\u4f8b\uff0c\u66ff\u6362\u6389\u65e7\u7684 fileConfig\uff0c\u4f7f\u5f97\u540e\u9762\u7684\u64cd\u4f5c\u80fd\u591f\u83b7\u53d6\u5230\u6700\u65b0\u7684\u914d\u7f6e\u503c\u3002\\n\\n\u6dfb\u52a0\u4e00\u4e2a\u914d\u7f6e\u5c5e\u6027\u76d1\u542c\u5668\u7684\u903b\u8f91\u5982\u4e0b\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191215161103.png)\\n\\nconfigListenersMap \u4e3a FileConfiguration \u7684\u914d\u7f6e\u76d1\u542c\u5668\u7f13\u5b58\uff0c\u5b83\u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0b\uff1a\\n\\n```java\\nConcurrentMap<String/*dataId*/, Set<ConfigurationChangeListener>> configListenersMap\\n```\\n\\n\u4ece\u6570\u636e\u7ed3\u6784\u4e0a\u53ef\u770b\u51fa\uff0c\u6bcf\u4e2a\u914d\u7f6e\u5c5e\u6027\u53ef\u5173\u8054\u591a\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668\u3002\\n\\n\u6700\u7ec8\u6267\u884c onProcessEvent \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u662f\u76d1\u542c\u5668\u57fa\u51c6\u63a5\u53e3\u91cc\u9762\u7684 default \u65b9\u6cd5\uff0c\u5b83\u4f1a\u8c03\u7528 onChangeEvent \u65b9\u6cd5\uff0c\u5373\u6700\u7ec8\u4f1a\u8c03\u7528 FileListener \u4e2d\u7684\u5b9e\u73b0\u3002\\n\\n\\n\\n# \u52a8\u6001\u964d\u7ea7\\n\\n\u6709\u4e86\u4ee5\u4e0a\u7684\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u529f\u80fd\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0 ConfigurationChangeListener \u76d1\u542c\u5668\uff0c\u5c31\u53ef\u4ee5\u505a\u5404\u79cd\u5404\u79cd\u7684\u529f\u80fd\uff0c\u76ee\u524d Seata \u53ea\u6709\u52a8\u6001\u964d\u7ea7\u6709\u7528\u5230\u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u7684\u529f\u80fd\u3002\\n\\n\u5728\u300c[Seata AT \u6a21\u5f0f\u542f\u52a8\u6e90\u7801\u5206\u6790](https://mp.weixin.qq.com/s/n9MHk47zSsFQmV-gBq_P1A)\u300d\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8bb2\u5230\uff0cSpring \u96c6\u6210 Seata \u7684\u9879\u76ee\u4e2d\uff0c\u5728 AT \u6a21\u5f0f\u542f\u52a8\u65f6\uff0c\u4f1a\u7528 \u7528GlobalTransactionalInterceptor \u4ee3\u66ff\u4e86\u88ab GlobalTransactional \u548c GlobalLock \u6ce8\u89e3\u7684\u65b9\u6cd5\uff0cGlobalTransactionalInterceptor \u5b9e\u73b0\u4e86 MethodInterceptor\uff0c\u6700\u7ec8\u4f1a\u6267\u884c invoker \u65b9\u6cd5\uff0c\u90a3\u4e48\u60f3\u8981\u5b9e\u73b0\u52a8\u6001\u964d\u7ea7\uff0c\u5c31\u53ef\u4ee5\u5728\u8fd9\u91cc\u505a\u624b\u811a\u3002\\n\\n- \u5728 GlobalTransactionalInterceptor \u4e2d\u52a0\u5165\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\uff1a\\n\\n```java\\nprivate volatile boolean disable; \\n```\\n\\n\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u8d4b\u503c\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191215173221.png)\\n\\nConfigurationKeys.DISABLE_GLOBAL_TRANSACTION\uff08service.disableGlobalTransaction\uff09\u8fd9\u4e2a\u53c2\u6570\u76ee\u524d\u6709\u4e24\u4e2a\u529f\u80fd\uff1a\\n\\n1. \u5728\u542f\u52a8\u65f6\u51b3\u5b9a\u662f\u5426\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\uff1b\\n2. \u5728\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\u540e\uff0c\u51b3\u5b9a\u662f\u5426\u964d\u7ea7\u3002\\n\\n- \u5b9e\u73b0 ConfigurationChangeListener\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191215173358.png)\\n\\n\u8fd9\u91cc\u7684\u903b\u8f91\u7b80\u5355\uff0c\u5c31\u662f\u5224\u65ad\u76d1\u542c\u4e8b\u4ef6\u662f\u5426\u5c5e\u4e8e ConfigurationKeys.DISABLE_GLOBAL_TRANSACTION \u914d\u7f6e\u5c5e\u6027\uff0c\u5982\u679c\u662f\uff0c\u76f4\u63a5\u66f4\u65b0 disable \u503c\u3002\\n\\n- \u63a5\u4e0b\u6765\u5728 GlobalTransactionalInterceptor#invoke \u4e2d\u505a\u70b9\u624b\u811a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191215174155.png)\\n\\n\u5982\u4e0a\uff0cdisable = true \u65f6\uff0c\u4e0d\u6267\u884c\u5168\u5c40\u4e8b\u52a1\u4e0e\u5168\u5c40\u9501\u3002\\n\\n- \u914d\u7f6e\u4e2d\u5fc3\u8ba2\u9605\u964d\u7ea7\u76d1\u542c\u5668\\n\\nio.seata.spring.annotation.GlobalTransactionScanner#wrapIfNecessary\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191215174409.png)\\n\\n\u5728 Spring AOP \u8fdb\u884c wrap \u903b\u8f91\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u524d\u914d\u7f6e\u4e2d\u5fc3\u5c06\u8ba2\u9605\u964d\u7ea7\u4e8b\u4ef6\u76d1\u542c\u5668\u3002\\n\\n# \u4f5c\u8005\u7b80\u4ecb\\n\\n\u5f20\u4e58\u8f89\uff0c\u76ee\u524d\u5c31\u804c\u4e8e\u4e2d\u901a\u79d1\u6280\u4fe1\u606f\u4e2d\u5fc3\u6280\u672f\u5e73\u53f0\u90e8\uff0c\u62c5\u4efb Java \u5de5\u7a0b\u5e08\uff0c\u4e3b\u8981\u8d1f\u8d23\u4e2d\u901a\u6d88\u606f\u5e73\u53f0\u4e0e\u5168\u94fe\u8def\u538b\u6d4b\u9879\u76ee\u7684\u7814\u53d1\uff0c\u70ed\u7231\u5206\u4eab\u6280\u672f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u300c\u540e\u7aef\u8fdb\u9636\u300d\u4f5c\u8005\uff0c\u6280\u672f\u535a\u5ba2\uff08[https://objcoding.com/](https://objcoding.com/)\uff09\u535a\u4e3b\uff0cSeata Contributor\uff0cGitHub ID\uff1aobjcoding\u3002"},{"id":"/seata-config-center","metadata":{"permalink":"/zh-cn/blog/seata-config-center","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-config-center.md","title":"Seata \u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u539f\u7406","description":"Seata \u53ef\u4ee5\u652f\u6301\u591a\u4e2a\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\uff0c\u90a3\u4e48 Seata \u662f\u5982\u4f55\u540c\u65f6\u517c\u5bb9\u90a3\u4e48\u591a\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u7684\u5462\uff1f","date":"2019-12-12T00:00:00.000Z","formattedDate":"2019\u5e7412\u670812\u65e5","tags":[],"readingTime":7.2,"hasTruncateMarker":false,"authors":[{"name":"\u5f20\u4e58\u8f89"}],"frontMatter":{"title":"Seata \u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u539f\u7406","author":"\u5f20\u4e58\u8f89","keywords":["Seata\u3001Config"],"description":"Seata \u53ef\u4ee5\u652f\u6301\u591a\u4e2a\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\uff0c\u90a3\u4e48 Seata \u662f\u5982\u4f55\u540c\u65f6\u517c\u5bb9\u90a3\u4e48\u591a\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u7684\u5462\uff1f","date":"2019/12/12"},"prevItem":{"title":"Seata \u52a8\u6001\u914d\u7f6e\u8ba2\u9605\u4e0e\u964d\u7ea7\u5b9e\u73b0\u539f\u7406","permalink":"/zh-cn/blog/seata-dynamic-config-and-dynamic-disable"},"nextItem":{"title":"Docker\u90e8\u7f72Seata\u4e0eNacos\u6574\u5408","permalink":"/zh-cn/blog/seata-nacos-docker"}},"content":"Seata \u53ef\u4ee5\u652f\u6301\u591a\u4e2a\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\uff0c\u90a3\u4e48 Seata \u662f\u5982\u4f55\u540c\u65f6\u517c\u5bb9\u90a3\u4e48\u591a\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u7684\u5462\uff1f\u4e0b\u9762\u6211\u7ed9\u5927\u5bb6\u8be6\u7ec6\u4ecb\u7ecd\u4e0b Seata \u914d\u7f6e\u4e2d\u5fc3\u7684\u5b9e\u73b0\u539f\u7406\u3002\\n\\n\\n# \u914d\u7f6e\u4e2d\u5fc3\u5c5e\u6027\u52a0\u8f7d\\n\\n\u5728 Seata \u914d\u7f6e\u4e2d\u5fc3\uff0c\u6709\u4e24\u4e2a\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191211193041.png)\\n\\nfile.conf \u662f\u9ed8\u8ba4\u7684\u914d\u7f6e\u5c5e\u6027\uff0cregistry.conf \u4e3b\u8981\u5b58\u50a8\u7b2c\u4e09\u65b9\u6ce8\u518c\u4e2d\u5fc3\u4e0e\u914d\u7f6e\u4e2d\u5fc3\u7684\u4fe1\u606f\uff0c\u4e3b\u8981\u6709\u4e24\u5927\u5757\uff1a\\n\\n```json\\nregistry {\\n  # file \u3001nacos \u3001eureka\u3001redis\u3001zk\u3001consul\u3001etcd3\u3001sofa\\n  # ...\\n}\\n\\nconfig {\\n  # file\u3001nacos \u3001apollo\u3001zk\u3001consul\u3001etcd3\\n  type = \\"file\\"\\n  nacos {\\n    serverAddr = \\"localhost\\"\\n    namespace = \\"\\"\\n  }\\n  file {\\n    name = \\"file.conf\\"\\n  }\\n  # ...\\n}\\n```\\n\\n\u5176\u4e2d registry \u4e3a\u6ce8\u518c\u4e2d\u5fc3\u7684\u914d\u7f6e\u5c5e\u6027\uff0c\u8fd9\u91cc\u5148\u4e0d\u8bb2\uff0cconfig \u4e3a\u914d\u7f6e\u4e2d\u5fc3\u7684\u5c5e\u6027\u503c\uff0c\u9ed8\u8ba4\u4e3a file \u7c7b\u578b\uff0c\u5373\u4f1a\u52a0\u8f7d\u672c\u5730\u7684 file.conf \u91cc\u9762\u7684\u5c5e\u6027\uff0c\u5982\u679c type \u4e3a\u5176\u5b83\u7c7b\u578b\uff0c\u90a3\u4e48\u4f1a\u4ece\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u52a0\u8f7d\u914d\u7f6e\u5c5e\u6027\u503c\u3002\\n\\n\u5728 config \u6a21\u5757\u7684 core \u76ee\u5f55\u4e2d\uff0c\u6709\u4e2a\u914d\u7f6e\u5de5\u5382\u7c7b ConfigurationFactory\uff0c\u5b83\u7684\u7ed3\u6784\u5982\u4e0b\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191210211022.png)\\n\\n\u53ef\u4ee5\u770b\u5230\u90fd\u662f\u4e00\u4e9b\u914d\u7f6e\u7684\u9759\u6001\u5e38\u91cf\uff1a\\n\\nREGISTRY_CONF_PREFIX\u3001REGISTRY_CONF_SUFFIX\uff1a\u914d\u7f6e\u6587\u4ef6\u540d\u3001\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u7c7b\u578b\uff1b\\n\\nSYSTEM_PROPERTY_SEATA_CONFIG_NAME\u3001ENV_SEATA_CONFIG_NAME\u3001ENV_SYSTEM_KEY\u3001ENV_PROPERTY_KEY\uff1a\u81ea\u5b9a\u4e49\u6587\u4ef6\u540d\u914d\u7f6e\u53d8\u91cf\uff0c\u4e5f\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u914d\u7f6e\u4e2d\u5fc3\u7684\u5c5e\u6027\u6587\u4ef6\u3002\\n\\nConfigurationFactory \u91cc\u9762\u6709\u4e00\u5904\u9759\u6001\u4ee3\u7801\u5757\uff0c\u5982\u4e0b\uff1a\\n\\nio.seata.config.ConfigurationFactory\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191211102702.png)\\n\\n\u6839\u636e\u81ea\u5b9a\u4e49\u6587\u4ef6\u540d\u914d\u7f6e\u53d8\u91cf\u627e\u51fa\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\u4e0e\u7c7b\u578b\uff0c\u5982\u679c\u6ca1\u6709\u914d\u7f6e\uff0c\u9ed8\u8ba4\u4f7f\u7528 registry.conf\uff0cFileConfiguration \u662f Seata \u9ed8\u8ba4\u7684\u914d\u7f6e\u5b9e\u73b0\u7c7b\uff0c\u5982\u679c\u4e3a\u9ed8\u8ba4\u503c\uff0c\u5219\u4f1a\u66f4\u5177  registry.conf \u914d\u7f6e\u6587\u4ef6\u751f\u6210 FileConfiguration \u9ed8\u8ba4\u914d\u7f6e\u5bf9\u8c61\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u5229\u7528 SPI \u673a\u5236\u652f\u6301\u7b2c\u4e09\u65b9\u6269\u5c55\u914d\u7f6e\u5b9e\u73b0\uff0c\u5177\u4f53\u5b9e\u73b0\u662f\u7ee7\u627f ExtConfigurationProvider \u63a5\u53e3\uff0c\u5728`META-INF/services/`\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5e76\u586b\u5199\u5b9e\u73b0\u7c7b\u7684\u5168\u8def\u5f84\u540d\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191211194643.png)\\n\\n\\n\\n# \u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u7c7b\u52a0\u8f7d\\n\\n\u5728\u9759\u6001\u4ee3\u7801\u5757\u903b\u8f91\u52a0\u8f7d\u5b8c\u914d\u7f6e\u4e2d\u5fc3\u5c5e\u6027\u4e4b\u540e\uff0cSeata \u662f\u5982\u4f55\u9009\u62e9\u914d\u7f6e\u4e2d\u5fc3\u5e76\u83b7\u53d6\u914d\u7f6e\u4e2d\u5fc3\u7684\u5c5e\u6027\u503c\u7684\u5462\uff1f\\n\\n\u6211\u4eec\u521a\u521a\u4e5f\u8bf4\u4e86 FileConfiguration \u662f Seata \u7684\u9ed8\u8ba4\u914d\u7f6e\u5b9e\u73b0\u7c7b\uff0c\u5b83\u7ee7\u627f\u4e86 AbstractConfiguration\uff0c\u5b83\u7684\u57fa\u7c7b\u4e3a Configuration\uff0c\u63d0\u4f9b\u4e86\u83b7\u53d6\u53c2\u6570\u503c\u7684\u65b9\u6cd5\uff1a\\n\\n```java\\nshort getShort(String dataId, int defaultValue, long timeoutMills);\\nint getInt(String dataId, int defaultValue, long timeoutMills);\\nlong getLong(String dataId, long defaultValue, long timeoutMills);\\n// ....\\n```\\n\\n\u90a3\u4e48\u610f\u5473\u7740\u53ea\u9700\u8981\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u6574\u5408\u5230 Seata \u914d\u7f6e\u4e2d\u5fc3\u4e86\uff0c\u4e0b\u9762\u6211\u62ff zk \u6765\u505a\u4f8b\u5b50\uff1a\\n\\n\u9996\u5148\uff0c\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a Provider \u7c7b\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191211200155.png)\\n\\n\u5b9e\u73b0\u7684 provider \u65b9\u6cd5\u5982\u5176\u540d\uff0c\u4e3b\u8981\u662f\u8f93\u51fa\u5177\u4f53\u7684 Configuration \u5b9e\u73b0\u7c7b\u3002\\n\\n\u90a3\u4e48\u6211\u4eec\u662f\u5982\u4f55\u83b7\u53d6\u6839\u636e\u914d\u7f6e\u53bb\u83b7\u53d6\u5bf9\u5e94\u7684\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u7c7b\u5462\uff1f\\n\\n\u5728 Seata \u9879\u76ee\u4e2d\uff0c\u83b7\u53d6\u4e00\u4e2a\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u7c7b\u901a\u5e38\u662f\u8fd9\u4e48\u505a\u7684\uff1a\\n\\n```java\\nConfiguration CONFIG = ConfigurationFactory.getInstance();\\n```\\n\\n\u5728 getInstance() \u65b9\u6cd5\u4e2d\u4e3b\u8981\u662f\u4f7f\u7528\u4e86\u5355\u4f8b\u6a21\u5f0f\u6784\u9020\u914d\u7f6e\u5b9e\u73b0\u7c7b\uff0c\u5b83\u7684\u6784\u9020\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a\\n\\nio.seata.config.ConfigurationFactory#buildConfiguration\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191211102905.png)\\n\\n\u9996\u5148\u4ece ConfigurationFactory \u4e2d\u7684\u9759\u6001\u4ee3\u7801\u5757\u6839\u636e registry.conf \u521b\u5efa\u7684 CURRENT_FILE_INSTANCE \u4e2d\u83b7\u53d6\u5f53\u524d\u73af\u5883\u4f7f\u7528\u7684\u914d\u7f6e\u4e2d\u5fc3\uff0c\u9ed8\u8ba4\u4e3a\u4e3a File \u7c7b\u578b\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728 registry.conf \u914d\u7f6e\u5176\u5b83\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\uff0c\u8fd9\u91cc\u4e5f\u662f\u5229\u7528\u4e86 SPI \u673a\u5236\u53bb\u52a0\u8f7d\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u7684\u5b9e\u73b0\u7c7b\uff0c\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191211205127.png)\\n\\n\u5982\u4e0a\uff0c\u5373\u662f\u521a\u521a\u6211\u6240\u8bf4\u7684 ZookeeperConfigurationProvider \u914d\u7f6e\u5b9e\u73b0\u8f93\u51fa\u7c7b\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b\u8fd9\u884c\u4ee3\u7801\uff1a\\n\\n```java\\nEnhancedServiceLoader.load(ConfigurationProvider.class,Objects.requireNonNull(configType).name()).provide();\\n```\\n\\nEnhancedServiceLoader \u662f Seata SPI \u5b9e\u73b0\u6838\u5fc3\u7c7b\uff0c\u8fd9\u884c\u4ee3\u7801\u4f1a\u52a0\u8f7d `META-INF/services/`\u548c `META-INF/seata/`\u76ee\u5f55\u4e2d\u6587\u4ef6\u586b\u5199\u7684\u7c7b\u540d\uff0c\u90a3\u4e48\u5982\u679c\u5176\u4e2d\u6709\u591a\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u7c7b\u90fd\u88ab\u52a0\u8f7d\u4e86\u600e\u4e48\u529e\u5462\uff1f\\n\\n\u6211\u4eec\u6ce8\u610f\u5230 ZookeeperConfigurationProvider \u7c7b\u7684\u4e0a\u9762\u6709\u4e00\u4e2a\u6ce8\u89e3\uff1a\\n\\n```java\\n@LoadLevel(name = \\"ZK\\", order = 1)\\n```\\n\\n\u5728\u52a0\u8f7d\u591a\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u7c7b\u65f6\uff0c\u4f1a\u6839\u636e order \u8fdb\u884c\u6392\u5e8f\uff1a\\n\\nio.seata.common.loader.EnhancedServiceLoader#findAllExtensionClass\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191211210438.png)\\n\\nio.seata.common.loader.EnhancedServiceLoader#loadFile\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191211210347.png)\\n\\n\u8fd9\u6837\uff0c\u5c31\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\u4e86\u3002\\n\\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0 Seata \u8fd8\u53ef\u4ee5\u7528\u8fd9\u4e2a\u65b9\u6cd5\u8fdb\u884c\u9009\u62e9\uff0cSeata \u5728\u8c03\u7528 load \u65b9\u6cd5\u65f6\uff0c\u8fd8\u4f20\u4e86\u4e00\u4e2a\u53c2\u6570\uff1a\\n\\n```java\\nObjects.requireNonNull(configType).name()\\n```\\n\\nConfigType \u4e3a\u914d\u7f6e\u4e2d\u5fc3\u7c7b\u578b\uff0c\u662f\u4e2a\u679a\u4e3e\u7c7b\uff1a\\n\\n```java\\npublic enum ConfigType {\\n  File, ZK, Nacos, Apollo, Consul, Etcd3, SpringCloudConfig, Custom;\\n}\\n```\\n\\n\u6211\u4eec\u6ce8\u610f\u5230\uff0cLoadLevel \u6ce8\u89e3\u4e0a\u8fd8\u6709\u4e00\u4e2a name \u5c5e\u6027\uff0c\u5728\u8fdb\u884c\u7b5b\u9009\u5b9e\u73b0\u7c7b\u65f6\uff0cSeata \u8fd8\u505a\u4e86\u8fd9\u4e2a\u64cd\u4f5c\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191211211210.png)\\n\\n\u6839\u636e\u5f53\u524d configType \u6765\u5224\u65ad\u662f\u5426\u7b49\u4e8e LoadLevel \u7684 name \u5c5e\u6027\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u90a3\u4e48\u5c31\u662f\u5f53\u524d\u914d\u7f6e\u7684\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u7c7b\u3002\\n\\n\\n\\n# \u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u7c7b\\n\\nZookeeperConfiguration \u7ee7\u627f\u4e86 AbstractConfiguration\uff0c\u5b83\u7684\u6784\u9020\u65b9\u6cd5\u5982\u4e0b\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191211202510.png)\\n\\n\u6784\u9020\u65b9\u6cd5\u521b\u5efa\u4e86\u4e00\u4e2a zkClient \u5bf9\u8c61\uff0c\u8fd9\u91cc\u7684 FILE_CONFIG \u662f\u4ec0\u4e48\u5462\uff1f\\n\\n```java\\nprivate static final Configuration FILE_CONFIG = ConfigurationFactory.CURRENT_FILE_INSTANCE;\\n```\\n\\n\u539f\u6765\u5c31\u662f\u521a\u521a\u9759\u6001\u4ee3\u7801\u5757\u4e2d\u521b\u5efa\u7684 registry.conf \u914d\u7f6e\u5b9e\u73b0\u7c7b\uff0c\u4ece\u8be5\u914d\u7f6e\u5b9e\u73b0\u7c7b\u62ff\u5230\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u7684\u76f8\u5173\u5c5e\u6027\uff0c\u6784\u9020\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u5ba2\u6237\u7aef\uff0c\u7136\u540e\u5b9e\u73b0 Configuration \u63a5\u53e3\u65f6\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191211203735.png)\\n\\n\u5c31\u53ef\u4ee5\u5229\u7528\u5ba2\u6237\u7aef\u76f8\u5173\u65b9\u6cd5\u53bb\u7b2c\u4e09\u65b9\u914d\u7f6e\u83b7\u53d6\u5bf9\u5e94\u7684\u53c2\u6570\u503c\u4e86\u3002\\n\\n\\n\\n# \u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u914d\u7f6e\u540c\u6b65\u811a\u672c\\n\\n\u4e0a\u5468\u672b\u624d\u5199\u597d\uff0c\u5df2\u7ecf\u63d0\u4ea4 PR \u4e0a\u53bb\u4e86\uff0c\u8fd8\u5904\u4e8e review \u4e2d\uff0c\u9884\u4f30\u4f1a\u5728 Seata 1.0 \u7248\u672c\u63d0\u4f9b\u7ed9\u5927\u5bb6\u4f7f\u7528\uff0c\u656c\u8bf7\u671f\u5f85\u3002\\n\\n\u5177\u4f53\u4f4d\u7f6e\u5728 Seata \u9879\u76ee\u7684 script \u76ee\u5f55\u4e2d\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191211212141.png)\\n\\nconfig.txt \u4e3a\u672c\u5730\u914d\u7f6e\u597d\u7684\u503c\uff0c\u642d\u5efa\u597d\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u4e4b\u540e\uff0c\u8fd0\u884c\u811a\u672c\u4f1a\u5c06 config.txt \u7684\u914d\u7f6e\u540c\u6b65\u5230\u7b2c\u4e09\u65b9\u914d\u7f6e\u4e2d\u5fc3\u3002\\n\\n\\n# \u4f5c\u8005\u7b80\u4ecb\\n\\n\u5f20\u4e58\u8f89\uff0c\u76ee\u524d\u5c31\u804c\u4e8e\u4e2d\u901a\u79d1\u6280\u4fe1\u606f\u4e2d\u5fc3\u6280\u672f\u5e73\u53f0\u90e8\uff0c\u62c5\u4efb Java \u5de5\u7a0b\u5e08\uff0c\u4e3b\u8981\u8d1f\u8d23\u4e2d\u901a\u6d88\u606f\u5e73\u53f0\u4e0e\u5168\u94fe\u8def\u538b\u6d4b\u9879\u76ee\u7684\u7814\u53d1\uff0c\u70ed\u7231\u5206\u4eab\u6280\u672f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u300c\u540e\u7aef\u8fdb\u9636\u300d\u4f5c\u8005\uff0c\u6280\u672f\u535a\u5ba2\uff08[https://objcoding.com/](https://objcoding.com/)\uff09\u535a\u4e3b\uff0cSeata Contributor\uff0cGitHub ID\uff1aobjcoding\u3002"},{"id":"/seata-nacos-docker","metadata":{"permalink":"/zh-cn/blog/seata-nacos-docker","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-nacos-docker.md","title":"Docker\u90e8\u7f72Seata\u4e0eNacos\u6574\u5408","description":"\u672c\u6587\u8bb2\u8ff0\u5982\u4f55\u4f7f\u7528Seata\u6574\u5408Nacos\u914d\u7f6e\u7684Docker\u90e8\u7f72","date":"2019-12-03T00:00:00.000Z","formattedDate":"2019\u5e7412\u67083\u65e5","tags":[],"readingTime":11.645,"hasTruncateMarker":false,"authors":[{"name":"FUNKYE"}],"frontMatter":{"title":"Docker\u90e8\u7f72Seata\u4e0eNacos\u6574\u5408","keywords":["Seata","Nacos","\u5206\u5e03\u5f0f\u4e8b\u52a1"],"description":"\u672c\u6587\u8bb2\u8ff0\u5982\u4f55\u4f7f\u7528Seata\u6574\u5408Nacos\u914d\u7f6e\u7684Docker\u90e8\u7f72","author":"FUNKYE","date":"2019/12/03"},"prevItem":{"title":"Seata \u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u539f\u7406","permalink":"/zh-cn/blog/seata-config-center"},"nextItem":{"title":"Seata\u5206\u5e03\u5f0f\u4e8b\u52a1\u542f\u7528Nacos\u505a\u914d\u7f6e\u4e2d\u5fc3","permalink":"/zh-cn/blog/seata-nacos-analysis"}},"content":"\u8fd0\u884c\u6240\u4f7f\u7528\u7684demo[\u9879\u76ee\u5730\u5740](https://gitee.com/itCjb/springboot-dubbo-mybatisplus-seata )\\n\\n\u672c\u6587\u4f5c\u8005\uff1aFUNKYE(\u9648\u5065\u658c),\u676d\u5dde\u67d0\u4e92\u8054\u7f51\u516c\u53f8\u4e3b\u7a0b\u3002\\n\\n# \u524d\u8a00\\n\\n\u76f4\u8fde\u65b9\u5f0f\u7684Seata\u914d\u7f6e[\u535a\u5ba2](http://seata.io/zh-cn/blog/springboot-dubbo-mybatisplus-seata.html)\\n\\nSeata\u6574\u5408Nacos\u914d\u7f6e[\u535a\u5ba2](http://seata.io/zh-cn/blog/seata-nacos-analysis.html)\\n\\n\u6211\u4eec\u63a5\u7740\u524d\u51e0\u7bc7\u7bc7\u7684\u57fa\u7840\u4e0a\u53bb\u914d\u7f6enacos\u505a\u914d\u7f6e\u4e2d\u5fc3\u8ddfdubbo\u6ce8\u518c\u4e2d\u5fc3.\\n\\n## \u51c6\u5907\u5de5\u4f5c\\n\\n\u200b\\t1.\u5b89\u88c5docker\\n\\n```shell\\nyum -y install docker\\n```\\n\\n\u200b\\t2.\u521b\u5efanacos\u4e0eseata\u7684\u6570\u636e\u5e93\\n\\n```mysql\\n/******************************************/\\n/*   \u6570\u636e\u5e93\u5168\u540d = nacos   */\\n/*   \u8868\u540d\u79f0 = config_info   */\\n/******************************************/\\nCREATE TABLE `config_info` (\\n  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT \'id\',\\n  `data_id` varchar(255) NOT NULL COMMENT \'data_id\',\\n  `group_id` varchar(255) DEFAULT NULL,\\n  `content` longtext NOT NULL COMMENT \'content\',\\n  `md5` varchar(32) DEFAULT NULL COMMENT \'md5\',\\n  `gmt_create` datetime NOT NULL DEFAULT \'2010-05-05 00:00:00\' COMMENT \'\u521b\u5efa\u65f6\u95f4\',\\n  `gmt_modified` datetime NOT NULL DEFAULT \'2010-05-05 00:00:00\' COMMENT \'\u4fee\u6539\u65f6\u95f4\',\\n  `src_user` text COMMENT \'source user\',\\n  `src_ip` varchar(20) DEFAULT NULL COMMENT \'source ip\',\\n  `app_name` varchar(128) DEFAULT NULL,\\n  `tenant_id` varchar(128) DEFAULT \'\' COMMENT \'\u79df\u6237\u5b57\u6bb5\',\\n  `c_desc` varchar(256) DEFAULT NULL,\\n  `c_use` varchar(64) DEFAULT NULL,\\n  `effect` varchar(64) DEFAULT NULL,\\n  `type` varchar(64) DEFAULT NULL,\\n  `c_schema` text,\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=\'config_info\';\\n\\n/******************************************/\\n/*   \u6570\u636e\u5e93\u5168\u540d = nacos_config   */\\n/*   \u8868\u540d\u79f0 = config_info_aggr   */\\n/******************************************/\\nCREATE TABLE `config_info_aggr` (\\n  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT \'id\',\\n  `data_id` varchar(255) NOT NULL COMMENT \'data_id\',\\n  `group_id` varchar(255) NOT NULL COMMENT \'group_id\',\\n  `datum_id` varchar(255) NOT NULL COMMENT \'datum_id\',\\n  `content` longtext NOT NULL COMMENT \'\u5185\u5bb9\',\\n  `gmt_modified` datetime NOT NULL COMMENT \'\u4fee\u6539\u65f6\u95f4\',\\n  `app_name` varchar(128) DEFAULT NULL,\\n  `tenant_id` varchar(128) DEFAULT \'\' COMMENT \'\u79df\u6237\u5b57\u6bb5\',\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=\'\u589e\u52a0\u79df\u6237\u5b57\u6bb5\';\\n\\n\\n/******************************************/\\n/*   \u6570\u636e\u5e93\u5168\u540d = nacos_config   */\\n/*   \u8868\u540d\u79f0 = config_info_beta   */\\n/******************************************/\\nCREATE TABLE `config_info_beta` (\\n  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT \'id\',\\n  `data_id` varchar(255) NOT NULL COMMENT \'data_id\',\\n  `group_id` varchar(128) NOT NULL COMMENT \'group_id\',\\n  `app_name` varchar(128) DEFAULT NULL COMMENT \'app_name\',\\n  `content` longtext NOT NULL COMMENT \'content\',\\n  `beta_ips` varchar(1024) DEFAULT NULL COMMENT \'betaIps\',\\n  `md5` varchar(32) DEFAULT NULL COMMENT \'md5\',\\n  `gmt_create` datetime NOT NULL DEFAULT \'2010-05-05 00:00:00\' COMMENT \'\u521b\u5efa\u65f6\u95f4\',\\n  `gmt_modified` datetime NOT NULL DEFAULT \'2010-05-05 00:00:00\' COMMENT \'\u4fee\u6539\u65f6\u95f4\',\\n  `src_user` text COMMENT \'source user\',\\n  `src_ip` varchar(20) DEFAULT NULL COMMENT \'source ip\',\\n  `tenant_id` varchar(128) DEFAULT \'\' COMMENT \'\u79df\u6237\u5b57\u6bb5\',\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=\'config_info_beta\';\\n\\n/******************************************/\\n/*   \u6570\u636e\u5e93\u5168\u540d = nacos_config   */\\n/*   \u8868\u540d\u79f0 = config_info_tag   */\\n/******************************************/\\nCREATE TABLE `config_info_tag` (\\n  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT \'id\',\\n  `data_id` varchar(255) NOT NULL COMMENT \'data_id\',\\n  `group_id` varchar(128) NOT NULL COMMENT \'group_id\',\\n  `tenant_id` varchar(128) DEFAULT \'\' COMMENT \'tenant_id\',\\n  `tag_id` varchar(128) NOT NULL COMMENT \'tag_id\',\\n  `app_name` varchar(128) DEFAULT NULL COMMENT \'app_name\',\\n  `content` longtext NOT NULL COMMENT \'content\',\\n  `md5` varchar(32) DEFAULT NULL COMMENT \'md5\',\\n  `gmt_create` datetime NOT NULL DEFAULT \'2010-05-05 00:00:00\' COMMENT \'\u521b\u5efa\u65f6\u95f4\',\\n  `gmt_modified` datetime NOT NULL DEFAULT \'2010-05-05 00:00:00\' COMMENT \'\u4fee\u6539\u65f6\u95f4\',\\n  `src_user` text COMMENT \'source user\',\\n  `src_ip` varchar(20) DEFAULT NULL COMMENT \'source ip\',\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=\'config_info_tag\';\\n\\n/******************************************/\\n/*   \u6570\u636e\u5e93\u5168\u540d = nacos_config   */\\n/*   \u8868\u540d\u79f0 = config_tags_relation   */\\n/******************************************/\\nCREATE TABLE `config_tags_relation` (\\n  `id` bigint(20) NOT NULL COMMENT \'id\',\\n  `tag_name` varchar(128) NOT NULL COMMENT \'tag_name\',\\n  `tag_type` varchar(64) DEFAULT NULL COMMENT \'tag_type\',\\n  `data_id` varchar(255) NOT NULL COMMENT \'data_id\',\\n  `group_id` varchar(128) NOT NULL COMMENT \'group_id\',\\n  `tenant_id` varchar(128) DEFAULT \'\' COMMENT \'tenant_id\',\\n  `nid` bigint(20) NOT NULL AUTO_INCREMENT,\\n  PRIMARY KEY (`nid`),\\n  UNIQUE KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),\\n  KEY `idx_tenant_id` (`tenant_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=\'config_tag_relation\';\\n\\n/******************************************/\\n/*   \u6570\u636e\u5e93\u5168\u540d = nacos_config   */\\n/*   \u8868\u540d\u79f0 = group_capacity   */\\n/******************************************/\\nCREATE TABLE `group_capacity` (\\n  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT \'\u4e3b\u952eID\',\\n  `group_id` varchar(128) NOT NULL DEFAULT \'\' COMMENT \'Group ID\uff0c\u7a7a\u5b57\u7b26\u8868\u793a\u6574\u4e2a\u96c6\u7fa4\',\\n  `quota` int(10) unsigned NOT NULL DEFAULT \'0\' COMMENT \'\u914d\u989d\uff0c0\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u503c\',\\n  `usage` int(10) unsigned NOT NULL DEFAULT \'0\' COMMENT \'\u4f7f\u7528\u91cf\',\\n  `max_size` int(10) unsigned NOT NULL DEFAULT \'0\' COMMENT \'\u5355\u4e2a\u914d\u7f6e\u5927\u5c0f\u4e0a\u9650\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\uff0c0\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u503c\',\\n  `max_aggr_count` int(10) unsigned NOT NULL DEFAULT \'0\' COMMENT \'\u805a\u5408\u5b50\u914d\u7f6e\u6700\u5927\u4e2a\u6570\uff0c\uff0c0\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u503c\',\\n  `max_aggr_size` int(10) unsigned NOT NULL DEFAULT \'0\' COMMENT \'\u5355\u4e2a\u805a\u5408\u6570\u636e\u7684\u5b50\u914d\u7f6e\u5927\u5c0f\u4e0a\u9650\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\uff0c0\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u503c\',\\n  `max_history_count` int(10) unsigned NOT NULL DEFAULT \'0\' COMMENT \'\u6700\u5927\u53d8\u66f4\u5386\u53f2\u6570\u91cf\',\\n  `gmt_create` datetime NOT NULL DEFAULT \'2010-05-05 00:00:00\' COMMENT \'\u521b\u5efa\u65f6\u95f4\',\\n  `gmt_modified` datetime NOT NULL DEFAULT \'2010-05-05 00:00:00\' COMMENT \'\u4fee\u6539\u65f6\u95f4\',\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `uk_group_id` (`group_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=\'\u96c6\u7fa4\u3001\u5404Group\u5bb9\u91cf\u4fe1\u606f\u8868\';\\n\\n/******************************************/\\n/*   \u6570\u636e\u5e93\u5168\u540d = nacos_config   */\\n/*   \u8868\u540d\u79f0 = his_config_info   */\\n/******************************************/\\nCREATE TABLE `his_config_info` (\\n  `id` bigint(64) unsigned NOT NULL,\\n  `nid` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\\n  `data_id` varchar(255) NOT NULL,\\n  `group_id` varchar(128) NOT NULL,\\n  `app_name` varchar(128) DEFAULT NULL COMMENT \'app_name\',\\n  `content` longtext NOT NULL,\\n  `md5` varchar(32) DEFAULT NULL,\\n  `gmt_create` datetime NOT NULL DEFAULT \'2010-05-05 00:00:00\',\\n  `gmt_modified` datetime NOT NULL DEFAULT \'2010-05-05 00:00:00\',\\n  `src_user` text,\\n  `src_ip` varchar(20) DEFAULT NULL,\\n  `op_type` char(10) DEFAULT NULL,\\n  `tenant_id` varchar(128) DEFAULT \'\' COMMENT \'\u79df\u6237\u5b57\u6bb5\',\\n  PRIMARY KEY (`nid`),\\n  KEY `idx_gmt_create` (`gmt_create`),\\n  KEY `idx_gmt_modified` (`gmt_modified`),\\n  KEY `idx_did` (`data_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=\'\u591a\u79df\u6237\u6539\u9020\';\\n\\n\\n/******************************************/\\n/*   \u6570\u636e\u5e93\u5168\u540d = nacos_config   */\\n/*   \u8868\u540d\u79f0 = tenant_capacity   */\\n/******************************************/\\nCREATE TABLE `tenant_capacity` (\\n  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT \'\u4e3b\u952eID\',\\n  `tenant_id` varchar(128) NOT NULL DEFAULT \'\' COMMENT \'Tenant ID\',\\n  `quota` int(10) unsigned NOT NULL DEFAULT \'0\' COMMENT \'\u914d\u989d\uff0c0\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u503c\',\\n  `usage` int(10) unsigned NOT NULL DEFAULT \'0\' COMMENT \'\u4f7f\u7528\u91cf\',\\n  `max_size` int(10) unsigned NOT NULL DEFAULT \'0\' COMMENT \'\u5355\u4e2a\u914d\u7f6e\u5927\u5c0f\u4e0a\u9650\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\uff0c0\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u503c\',\\n  `max_aggr_count` int(10) unsigned NOT NULL DEFAULT \'0\' COMMENT \'\u805a\u5408\u5b50\u914d\u7f6e\u6700\u5927\u4e2a\u6570\',\\n  `max_aggr_size` int(10) unsigned NOT NULL DEFAULT \'0\' COMMENT \'\u5355\u4e2a\u805a\u5408\u6570\u636e\u7684\u5b50\u914d\u7f6e\u5927\u5c0f\u4e0a\u9650\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\uff0c0\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u503c\',\\n  `max_history_count` int(10) unsigned NOT NULL DEFAULT \'0\' COMMENT \'\u6700\u5927\u53d8\u66f4\u5386\u53f2\u6570\u91cf\',\\n  `gmt_create` datetime NOT NULL DEFAULT \'2010-05-05 00:00:00\' COMMENT \'\u521b\u5efa\u65f6\u95f4\',\\n  `gmt_modified` datetime NOT NULL DEFAULT \'2010-05-05 00:00:00\' COMMENT \'\u4fee\u6539\u65f6\u95f4\',\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `uk_tenant_id` (`tenant_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=\'\u79df\u6237\u5bb9\u91cf\u4fe1\u606f\u8868\';\\n\\n\\nCREATE TABLE `tenant_info` (\\n  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT \'id\',\\n  `kp` varchar(128) NOT NULL COMMENT \'kp\',\\n  `tenant_id` varchar(128) default \'\' COMMENT \'tenant_id\',\\n  `tenant_name` varchar(128) default \'\' COMMENT \'tenant_name\',\\n  `tenant_desc` varchar(256) DEFAULT NULL COMMENT \'tenant_desc\',\\n  `create_source` varchar(32) DEFAULT NULL COMMENT \'create_source\',\\n  `gmt_create` bigint(20) NOT NULL COMMENT \'\u521b\u5efa\u65f6\u95f4\',\\n  `gmt_modified` bigint(20) NOT NULL COMMENT \'\u4fee\u6539\u65f6\u95f4\',\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),\\n  KEY `idx_tenant_id` (`tenant_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=\'tenant_info\';\\n\\nCREATE TABLE users (\\n\\tusername varchar(50) NOT NULL PRIMARY KEY,\\n\\tpassword varchar(500) NOT NULL,\\n\\tenabled boolean NOT NULL\\n);\\n\\nCREATE TABLE roles (\\n\\tusername varchar(50) NOT NULL,\\n\\trole varchar(50) NOT NULL\\n);\\n\\nINSERT INTO users (username, password, enabled) VALUES (\'nacos\', \'$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu\', TRUE);\\n\\nINSERT INTO roles (username, role) VALUES (\'nacos\', \'ROLE_ADMIN\');\\n\\n```\\n\\n```mysql\\n-- the table to store GlobalSession data\\nCREATE TABLE IF NOT EXISTS `global_table`\\n(\\n    `xid`                       VARCHAR(128) NOT NULL,\\n    `transaction_id`            BIGINT,\\n    `status`                    TINYINT      NOT NULL,\\n    `application_id`            VARCHAR(32),\\n    `transaction_service_group` VARCHAR(32),\\n    `transaction_name`          VARCHAR(128),\\n    `timeout`                   INT,\\n    `begin_time`                BIGINT,\\n    `application_data`          VARCHAR(2000),\\n    `gmt_create`                DATETIME,\\n    `gmt_modified`              DATETIME,\\n    PRIMARY KEY (`xid`),\\n    KEY `idx_gmt_modified_status` (`gmt_modified`, `status`),\\n    KEY `idx_transaction_id` (`transaction_id`)\\n) ENGINE = InnoDB\\n  DEFAULT CHARSET = utf8;\\n\\n-- the table to store BranchSession data\\nCREATE TABLE IF NOT EXISTS `branch_table`\\n(\\n    `branch_id`         BIGINT       NOT NULL,\\n    `xid`               VARCHAR(128) NOT NULL,\\n    `transaction_id`    BIGINT,\\n    `resource_group_id` VARCHAR(32),\\n    `resource_id`       VARCHAR(256),\\n    `branch_type`       VARCHAR(8),\\n    `status`            TINYINT,\\n    `client_id`         VARCHAR(64),\\n    `application_data`  VARCHAR(2000),\\n    `gmt_create`        DATETIME(6),\\n    `gmt_modified`      DATETIME(6),\\n    PRIMARY KEY (`branch_id`),\\n    KEY `idx_xid` (`xid`)\\n) ENGINE = InnoDB\\n  DEFAULT CHARSET = utf8;\\n\\n-- the table to store lock data\\nCREATE TABLE IF NOT EXISTS `lock_table`\\n(\\n    `row_key`        VARCHAR(128) NOT NULL,\\n    `xid`            VARCHAR(128),\\n    `transaction_id` BIGINT,\\n    `branch_id`      BIGINT       NOT NULL,\\n    `resource_id`    VARCHAR(256),\\n    `table_name`     VARCHAR(32),\\n    `pk`             VARCHAR(36),\\n    `gmt_create`     DATETIME,\\n    `gmt_modified`   DATETIME,\\n    PRIMARY KEY (`row_key`),\\n    KEY `idx_branch_id` (`branch_id`)\\n) ENGINE = InnoDB\\n  DEFAULT CHARSET = utf8;\\n\\n```\\n\\n\u200b\\t3.\u62c9\u53d6nacos\u4ee5\u53caseata\u955c\u50cf\u5e76\u8fd0\u884c\\n\\n```shell\\ndocker run -d --name nacos -p 8848:8848 -e MODE=standalone -e MYSQL_MASTER_SERVICE_HOST=\u4f60\u7684mysql\u6240\u5728ip -e MYSQL_MASTER_SERVICE_DB_NAME=nacos -e MYSQL_MASTER_SERVICE_USER=root -e MYSQL_MASTER_SERVICE_PASSWORD=mysql\u5bc6\u7801 -e MYSQL_SLAVE_SERVICE_HOST=\u4f60\u7684mysql\u6240\u5728ip -e SPRING_DATASOURCE_PLATFORM=mysql -e MYSQL_DATABASE_NUM=1 nacos/nacos-server:latest\\n```\\n\\n```shell\\ndocker run -d --name seata -p 8091:8091 -e SEATA_IP=\u4f60\u60f3\u6307\u5b9a\u7684ip -e SEATA_PORT=8091 seataio/seata-server:1.4.2\\n```\\n\\n## Seata\u914d\u7f6e\\n\\n\u200b\\t1.\u7531\u4e8eseata\u5bb9\u5668\u5185\u6ca1\u6709\u5185\u7f6evim,\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u8981\u6587\u4ef6\u5939cp\u5230\u5bbf\u4e3b\u673a\u5916\u6765\u7f16\u8f91\u597d\u4e86,\u518dcp\u56de\u53bb\\n\\n```\\ndocker cp \u5bb9\u5668id:seata-server/resources \u4f60\u60f3\u653e\u7f6e\u7684\u76ee\u5f55\\n```\\n\\n\u200b\\t2.\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u83b7\u53d6\u4e24\u4e2a\u5bb9\u5668\u7684ip\u5730\u5740\\n\\n```\\ndocker inspect --format=\'{{.NetworkSettings.IPAddress}}\' ID/NAMES\\n```\\n\\n\u200b\\t3.nacos-config.txt\u7f16\u8f91\u4e3a\u5982\u4e0b\u5185\u5bb9\\n\\n```\\ntransport.type=TCP\\ntransport.server=NIO\\ntransport.heartbeat=true\\ntransport.enableClientBatchSendRequest=false\\ntransport.threadFactory.bossThreadPrefix=NettyBoss\\ntransport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\\ntransport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\\ntransport.threadFactory.shareBossWorker=false\\ntransport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\\ntransport.threadFactory.clientSelectorThreadSize=1\\ntransport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\\ntransport.threadFactory.bossThreadSize=1\\ntransport.threadFactory.workerThreadSize=default\\ntransport.shutdown.wait=3\\nservice.vgroupMapping.\u4f60\u7684\u4e8b\u52a1\u7ec4\u540d=default\\nservice.default.grouplist=127.0.0.1:8091\\nservice.enableDegrade=false\\nservice.disableGlobalTransaction=false\\nclient.rm.asyncCommitBufferLimit=10000\\nclient.rm.lock.retryInterval=10\\nclient.rm.lock.retryTimes=30\\nclient.rm.lock.retryPolicyBranchRollbackOnConflict=true\\nclient.rm.reportRetryCount=5\\nclient.rm.tableMetaCheckEnable=false\\nclient.rm.tableMetaCheckerInterval=60000\\nclient.rm.sqlParserType=druid\\nclient.rm.reportSuccessEnable=false\\nclient.rm.sagaBranchRegisterEnable=false\\nclient.tm.commitRetryCount=5\\nclient.tm.rollbackRetryCount=5\\nclient.tm.defaultGlobalTransactionTimeout=60000\\nclient.tm.degradeCheck=false\\nclient.tm.degradeCheckAllowTimes=10\\nclient.tm.degradeCheckPeriod=2000\\nstore.mode=file\\nstore.publicKey=\\nstore.file.dir=file_store/data\\nstore.file.maxBranchSessionSize=16384\\nstore.file.maxGlobalSessionSize=512\\nstore.file.fileWriteBufferCacheSize=16384\\nstore.file.flushDiskMode=async\\nstore.file.sessionReloadReadSize=100\\nstore.db.datasource=druid\\nstore.db.dbType=mysql\\nstore.db.driverClassName=com.mysql.jdbc.Driver\\nstore.db.url=jdbc:mysql://\u4f60\u7684mysql\u6240\u5728ip:3306/seata?useUnicode=true&rewriteBatchedStatements=true\\nstore.db.user=mysql\u8d26\u53f7\\nstore.db.password=mysql\u5bc6\u7801\\nstore.db.minConn=5\\nstore.db.maxConn=30\\nstore.db.globalTable=global_table\\nstore.db.branchTable=branch_table\\nstore.db.queryLimit=100\\nstore.db.lockTable=lock_table\\nstore.db.maxWait=5000\\nserver.recovery.committingRetryPeriod=1000\\nserver.recovery.asynCommittingRetryPeriod=1000\\nserver.recovery.rollbackingRetryPeriod=1000\\nserver.recovery.timeoutRetryPeriod=1000\\nserver.maxCommitRetryTimeout=-1\\nserver.maxRollbackRetryTimeout=-1\\nserver.rollbackRetryTimeoutUnlockEnable=false\\nclient.undo.dataValidation=true\\nclient.undo.logSerialization=jackson\\nclient.undo.onlyCareUpdateColumns=true\\nserver.undo.logSaveDays=7\\nserver.undo.logDeletePeriod=86400000\\nclient.undo.logTable=undo_log\\nclient.undo.compress.enable=true\\nclient.undo.compress.type=zip\\nclient.undo.compress.threshold=64k\\nlog.exceptionRate=100\\ntransport.serialization=seata\\ntransport.compressor=none\\nmetrics.enabled=false\\nmetrics.registryType=compact\\nmetrics.exporterList=prometheus\\nmetrics.exporterPrometheusPort=9898\\n```\\n\\n\u8be6\u7ec6\u53c2\u6570\u914d\u7f6e\u8bf7\u70b9[\u6b64\u5904](http://seata.io/zh-cn/docs/user/configurations.html)\\n\\n\u200b\\t4.registry.conf\u7f16\u8f91\u4e3a\u5982\u4e0b\u5185\u5bb9\\n\\n```\\nregistry {\\n  # file \u3001nacos \u3001eureka\u3001redis\u3001zk\u3001consul\u3001etcd3\u3001sofa\\n  type = \\"nacos\\"\\n\\n  nacos {\\n    serverAddr = \\"nacos\u5bb9\u5668ip:8848\\"\\n    namespace = \\"\\"\\n    cluster = \\"default\\"\\n  }\\n}\\n\\nconfig {\\n  # file\u3001nacos \u3001apollo\u3001zk\u3001consul\u3001etcd3\\n  type = \\"nacos\\"\\n\\n  nacos {\\n    serverAddr = \\"nacos\u5bb9\u5668ip:8848\\"\\n    namespace = \\"\\"\\n  }\\n}\\n```\\n\\n\u200b\\t5.\u914d\u7f6e\u5b8c\u6210\u540e\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4,\u628a\u4fee\u6539\u5b8c\u6210\u7684registry.conf\u590d\u5236\u5230\u5bb9\u5668\u4e2d,\u5e76\u91cd\u542f\u67e5\u770b\u65e5\u5fd7\u8fd0\u884c\\n\\n```shell\\ndocker cp /home/seata/resources/registry.conf seata:seata-server/resources/\\ndocker restart seata\\ndocker logs -f seata\\n```\\n\\n\u200b\\t6.\u8fd0\u884cnacos-config.sh\u5bfc\u5165Nacos\u914d\u7f6e\\n\\neg: sh ${SEATAPATH}/script/config-center/nacos/nacos-config.sh -h localhost -p 8848 -g SEATA_GROUP -t 5a3c7d6c-f497-4d68-a71a-2e5e3340b3ca -u username -w password\\n\\n\u5177\u4f53\u53c2\u6570\u91ca\u4e49\u53c2\u8003\uff1a[\u914d\u7f6e\u5bfc\u5165\u8bf4\u660e](https://github.com/seata/seata/blob/1.4.2/script/config-center/README.md)\\n\\n\\n\u200b\\t7.\u767b\u5f55nacos\u63a7\u5236\u4e2d\u5fc3\u67e5\u770b\\n\\n![20191202205912](/img/blog/20191202205912.png)\\n\\n\u200b\\t\u5982\u56fe\u6240\u793a\u4fbf\u662f\u6210\u529f\u4e86.\\n\\n# \u8fdb\u884c\u8c03\u8bd5\\n\\n\u200b\\t1.\u62c9\u53d6\u535a\u6587\u4e2d\u6240\u793a\u7684\u9879\u76ee,\u4fee\u6539test-service\u7684application.yml\u4e0eregistry.conf\\n\\n```\\nregistry {\\n  type = \\"nacos\\"\\n  nacos {\\n    serverAddr = \\"\u5bbf\u4e3b\u673aip:8848\\"\\n    namespace = \\"\\"\\n    cluster = \\"default\\"\\n  }\\n}\\nconfig {\\n  type = \\"nacos\\"\\n  nacos {\\n    serverAddr = \\"\u5bbf\u4e3b\u673aip:8848\\"\\n    namespace = \\"\\"\\n    cluster = \\"default\\"\\n  }\\n}\\n\\n```\\n\\n```\\nserver:\\n  port: 38888\\nspring:\\n  application: \\n      name: test-service\\n  datasource:\\n    type: com.alibaba.druid.pool.DruidDataSource\\n    url: jdbc:mysql://mysqlip:3306/test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\n    username: root\\n    password: 123456\\ndubbo:\\n  protocol:\\n    threadpool: cached\\n  scan:\\n    base-packages: com.example\\n  application:\\n    qos-enable: false\\n    name: testserver\\n  registry:\\n    id: my-registry\\n    address:  nacos://\u5bbf\u4e3b\u673aip:8848\\nmybatis-plus:\\n  mapper-locations: classpath:/mapper/*Mapper.xml\\n  typeAliasesPackage: org.test.entity\\n  global-config:\\n    db-config:\\n      field-strategy: not-empty\\n      id-type: auto\\n      db-type: mysql\\n  configuration:\\n    map-underscore-to-camel-case: true\\n    cache-enabled: true\\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\\n    auto-mapping-unknown-column-behavior: none\\n```\\n\\n\u200b\\t2.\u628a\u4fee\u6539\u5b8c\u6210\u7684registry.conf\u590d\u5236\u5230test-client-resources\u4e2d,\u5e76\u4fee\u6539application\\n\\n```\\nspring:\\n  application:\\n     name: test\\n  datasource:\\n     driver-class-name: com.mysql.cj.jdbc.Driver\\n     url: jdbc:mysql://mysqlIp:3306/test?userSSL=true&useUnicode=true&characterEncoding=UTF8&serverTimezone=Asia/Shanghai\\n     username: root\\n     password: 123456\\n  mvc:\\n    servlet:\\n      load-on-startup: 1\\n  http:\\n    encoding:\\n            force: true\\n            charset: utf-8\\n            enabled: true\\n    multipart:\\n      max-file-size: 10MB\\n      max-request-size: 10MB\\ndubbo:\\n  registry:\\n    id: my-registry\\n    address:  nacos://\u5bbf\u4e3b\u673aip:8848\\n  application:\\n    name: dubbo-demo-client\\n    qos-enable: false\\nserver:\\n  port: 28888\\n  max-http-header-size: 8192\\n  address: 0.0.0.0\\n  tomcat:\\n    max-http-post-size: 104857600\\n```\\n\u200b\\t4. \u5728\u6bcf\u4e2a\u6240\u6d89\u53ca\u7684 db \u6267\u884c undo_log \u811a\u672c.\\n```sql\\nCREATE TABLE IF NOT EXISTS `undo_log`\\n(\\n    `branch_id`     BIGINT       NOT NULL COMMENT \'branch transaction id\',\\n    `xid`           VARCHAR(128) NOT NULL COMMENT \'global transaction id\',\\n    `context`       VARCHAR(128) NOT NULL COMMENT \'undo_log context,such as serialization\',\\n    `rollback_info` LONGBLOB     NOT NULL COMMENT \'rollback info\',\\n    `log_status`    INT(11)      NOT NULL COMMENT \'0:normal status,1:defense status\',\\n    `log_created`   DATETIME(6)  NOT NULL COMMENT \'create datetime\',\\n    `log_modified`  DATETIME(6)  NOT NULL COMMENT \'modify datetime\',\\n    UNIQUE KEY `ux_undo_log` (`xid`, `branch_id`)\\n) ENGINE = InnoDB\\n  AUTO_INCREMENT = 1\\n  DEFAULT CHARSET = utf8 COMMENT =\'AT transaction mode undo table\';\\n```\\n\\n\u200b\\t5.\u4f9d\u6b21\u8fd0\u884ctest-service,test-client.\\n\\n\u200b\\t6.\u67e5\u770bnacos\u4e2d\u670d\u52a1\u5217\u8868\u662f\u5426\u5982\u4e0b\u56fe\u6240\u793a\\n\\n![20191203132351](/img/blog/20191203132351.png)\\n\\n# \u603b\u7ed3\\n\\n\u5173\u4e8enacos\u4e0eseata\u7684docker\u90e8\u7f72\u5df2\u7ecf\u5b8c\u6210\u4e86,\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\u5e0c\u671b\u5e0c\u671b\u5927\u5bb6\u8bbf\u95ee\u4ee5\u4e0b\u5730\u5740\u9605\u8bfb\u8be6\u7ec6\u6587\u6863\\n\\n[nacos\u5b98\u7f51](https://nacos.io/zh-cn/index.html)\\n\\n[dubbo\u5b98\u7f51](http://dubbo.apache.org/en-us/)\\n\\n[seata\u5b98\u7f51](http://seata.io/zh-cn/)\\n\\n[docker\u5b98\u7f51](https://www.docker.com/)"},{"id":"/seata-nacos-analysis","metadata":{"permalink":"/zh-cn/blog/seata-nacos-analysis","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-nacos-analysis.md","title":"Seata\u5206\u5e03\u5f0f\u4e8b\u52a1\u542f\u7528Nacos\u505a\u914d\u7f6e\u4e2d\u5fc3","description":"\u672c\u6587\u8bb2\u8ff0\u5982\u4f55\u4f7f\u7528Seata\u6574\u5408Nacos\u914d\u7f6e","date":"2019-12-02T00:00:00.000Z","formattedDate":"2019\u5e7412\u67082\u65e5","tags":[],"readingTime":6.475,"hasTruncateMarker":false,"authors":[{"name":"FUNKYE"}],"frontMatter":{"title":"Seata\u5206\u5e03\u5f0f\u4e8b\u52a1\u542f\u7528Nacos\u505a\u914d\u7f6e\u4e2d\u5fc3","keywords":["Seata","Nacos","\u5206\u5e03\u5f0f\u4e8b\u52a1"],"description":"\u672c\u6587\u8bb2\u8ff0\u5982\u4f55\u4f7f\u7528Seata\u6574\u5408Nacos\u914d\u7f6e","author":"FUNKYE","date":"2019/12/02"},"prevItem":{"title":"Docker\u90e8\u7f72Seata\u4e0eNacos\u6574\u5408","permalink":"/zh-cn/blog/seata-nacos-docker"},"nextItem":{"title":"\u900f\u8fc7\u6e90\u7801\u89e3\u51b3SeataAT\u6a21\u5f0f\u6574\u5408Mybatis-Plus\u5931\u53bbMP\u7279\u6027\u7684\u95ee\u9898","permalink":"/zh-cn/blog/seata-mybatisplus-analysis"}},"content":"[\u9879\u76ee\u5730\u5740](https://gitee.com/itCjb/springboot-dubbo-mybatisplus-seata )\\n\\n\u672c\u6587\u4f5c\u8005\uff1aFUNKYE(\u9648\u5065\u658c),\u676d\u5dde\u67d0\u4e92\u8054\u7f51\u516c\u53f8\u4e3b\u7a0b\u3002\\n\\n# \u524d\u8a00\\n\\n\u4e0a\u6b21\u53d1\u5e03\u4e86\u76f4\u8fde\u65b9\u5f0f\u7684seata\u914d\u7f6e,\u8be6\u7ec6\u53ef\u4ee5\u770b\u8fd9\u7bc7[\u535a\u5ba2](http://seata.io/zh-cn/blog/springboot-dubbo-mybatisplus-seata.html)\\n\\n\u6211\u4eec\u63a5\u7740\u4e0a\u4e00\u7bc7\u7684\u57fa\u7840\u4e0a\u53bb\u914d\u7f6enacos\u505a\u914d\u7f6e\u4e2d\u5fc3\u8ddfdubbo\u6ce8\u518c\u4e2d\u5fc3.\\n\\n## \u51c6\u5907\u5de5\u4f5c\\n\\n\u200b\\t1.\u9996\u5148\u53bbnacos\u7684github\u4e0a\u4e0b\u8f7d[\u6700\u65b0\u7248\u672c](https://github.com/alibaba/nacos/releases/tag/1.1.4)\\n\\n\u200b\\t![](/img/blog/20191202203649.png)\\n\\n\u200b\\t2.\u4e0b\u8f7d\u597d\u4e86\u540e,\u5f88\u7b80\u5355,\u89e3\u538b\u540e\u5230bin\u76ee\u5f55\u4e0b\u53bb\u542f\u52a8\u5c31\u597d\u4e86,\u770b\u5230\u5982\u56fe\u6240\u793a\u5c31\u6210\u4e86\uff1a\\n\\n![](/img/blog/20191202203943.png)\\n\\n\u200b\\t3.\u542f\u52a8\u5b8c\u6bd5\u540e\u8bbf\u95ee:http://127.0.0.1:8848/nacos/#/login\\n\\n![](/img/blog/20191202204101.png)\\n\\n\u662f\u4e0d\u662f\u770b\u5230\u8fd9\u6837\u7684\u754c\u9762\u4e86?\u8f93\u5165nacos(\u8d26\u53f7\u5bc6\u7801\u76f8\u540c),\u5148\u8fdb\u53bb\u770b\u770b\u5427.\\n\\n\u8fd9\u65f6\u5019\u53ef\u4ee5\u53d1\u73b0\u6ca1\u6709\u4efb\u4f55\u670d\u52a1\u6ce8\u518c\\n\\n![20191202204147](/img/blog/20191202204147.png)\\n\\n\u522b\u6025\u6211\u4eec\u9a6c\u4e0a\u8ba9seata\u670d\u52a1\u8fde\u63a5\u8fdb\u6765.\\n\\n## Seata\u914d\u7f6e\\n\\n\u200b\\t1.\u8fdb\u5165seata\u7684conf\u6587\u4ef6\u5939\u770b\u5230\u8fd9\u4e2a\u6728\u6709?\\n\\n![](/img/blog/20191202204259.png)\\n\\n\u5c31\u662f\u5b83,\u7f16\u8f91\u5b83:\\n\\n![20191202204353](/img/blog/20191202204353.png)\\n\\n![20191202204437](/img/blog/20191202204437.png)\\n\\n\u200b\\t2.\u7136\u540e\u8bb0\u5f97\u4fdd\u5b58\u54e6!\u63a5\u7740\u6211\u4eec\u628aregistry.conf\u6587\u4ef6\u6253\u5f00\u7f16\u8f91\uff1a\\n\\n```\\nregistry {\\n  # file \u3001nacos \u3001eureka\u3001redis\u3001zk\u3001consul\u3001etcd3\u3001sofa\\n  type = \\"nacos\\"\\n\\n  nacos {\\n    serverAddr = \\"localhost\\"\\n    namespace = \\"\\"\\n    cluster = \\"default\\"\\n  }\\n  eureka {\\n    serviceUrl = \\"http://localhost:8761/eureka\\"\\n    application = \\"default\\"\\n    weight = \\"1\\"\\n  }\\n  redis {\\n    serverAddr = \\"localhost:6379\\"\\n    db = \\"0\\"\\n  }\\n  zk {\\n    cluster = \\"default\\"\\n    serverAddr = \\"127.0.0.1:2181\\"\\n    session.timeout = 6000\\n    connect.timeout = 2000\\n  }\\n  consul {\\n    cluster = \\"default\\"\\n    serverAddr = \\"127.0.0.1:8500\\"\\n  }\\n  etcd3 {\\n    cluster = \\"default\\"\\n    serverAddr = \\"http://localhost:2379\\"\\n  }\\n  sofa {\\n    serverAddr = \\"127.0.0.1:9603\\"\\n    application = \\"default\\"\\n    region = \\"DEFAULT_ZONE\\"\\n    datacenter = \\"DefaultDataCenter\\"\\n    cluster = \\"default\\"\\n    group = \\"SEATA_GROUP\\"\\n    addressWaitTime = \\"3000\\"\\n  }\\n  file {\\n    name = \\"file.conf\\"\\n  }\\n}\\n\\nconfig {\\n  # file\u3001nacos \u3001apollo\u3001zk\u3001consul\u3001etcd3\\n  type = \\"nacos\\"\\n\\n  nacos {\\n    serverAddr = \\"localhost\\"\\n    namespace = \\"\\"\\n  }\\n  consul {\\n    serverAddr = \\"127.0.0.1:8500\\"\\n  }\\n  apollo {\\n    app.id = \\"seata-server\\"\\n    apollo.meta = \\"http://192.168.1.204:8801\\"\\n  }\\n  zk {\\n    serverAddr = \\"127.0.0.1:2181\\"\\n    session.timeout = 6000\\n    connect.timeout = 2000\\n  }\\n  etcd3 {\\n    serverAddr = \\"http://localhost:2379\\"\\n  }\\n  file {\\n    name = \\"file.conf\\"\\n  }\\n}\\n\\n```\\n\\n\u90fd\u7f16\u8f91\u597d\u4e86\u540e\uff0c\u6211\u4eec\u8fd0\u884cnacos-config.sh,\u8fd9\u65f6\u5019\u6211\u4eec\u914d\u7f6e\u7684nacos-config.txt\u7684\u5185\u5bb9\u5df2\u7ecf\u88ab\u53d1\u9001\u5230nacos\u4e2d\u4e86\u8be6\u7ec6\u5982\u56fe\uff1a\\n\\n![20191202205743](/img/blog/20191202205743.png)\\n\\n\u51fa\u73b0\u4ee5\u4e0a\u7c7b\u4f3c\u7684\u4ee3\u7801\u5c31\u662f\u8bf4\u660e\u6210\u529f\u4e86\uff0c\u63a5\u7740\u6211\u4eec\u767b\u5f55nacos\u914d\u7f6e\u4e2d\u5fc3\uff0c\u67e5\u770b\u914d\u7f6e\u5217\u8868\uff0c\u51fa\u73b0\u5982\u56fe\u5217\u8868\u8bf4\u660e\u914d\u7f6e\u6210\u529f\u4e86\uff1a\\n\\n![20191202205912](/img/blog/20191202205912.png)\\n\\n\u770b\u5230\u4e86\u5427,\u4f60\u7684\u914d\u7f6e\u5df2\u7ecf\u5168\u90e8\u90fd\u63d0\u4ea4\u4e0a\u53bb\u4e86,\u5982\u679c\u518dgit\u5de5\u5177\u5185\u8fd0\u884csh\u4e0d\u884c\u7684\u8bdd,\u8bd5\u7740\u628a\u7f16\u8f91sh\u6587\u4ef6,\u8bd5\u8bd5\u6539\u6210\u5982\u4e0b\u64cd\u4f5c \\n\\n```shell\\nfor line in $(cat nacos-config.txt)\\n\\ndo\\n\\nkey=${line%%=*}\\nvalue=${line#*=}\\necho \\"\\\\r\\\\n set \\"${key}\\" = \\"${value}\\n\\nresult=`curl -X POST \\"http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=$key&group=SEATA_GROUP&content=$value\\"`\\n\\nif [ \\"$result\\"x == \\"true\\"x ]; then\\n\\n  echo \\"\\\\033[42;37m $result \\\\033[0m\\"\\n\\nelse\\n\\n  echo \\"\\\\033[41;37 $result \\\\033[0m\\"\\n  let error++\\n\\nfi\\n\\ndone\\n\\n\\nif [ $error -eq 0 ]; then\\n\\necho  \\"\\\\r\\\\n\\\\033[42;37m init nacos config finished, please start seata-server. \\\\033[0m\\"\\n\\nelse\\n\\necho  \\"\\\\r\\\\n\\\\033[41;33m init nacos config fail. \\\\033[0m\\"\\n\\nfi\\n```\\n\\n\u200b\\t3.\u76ee\u524d\u6211\u4eec\u7684\u51c6\u5907\u5de5\u4f5c\u5168\u90e8\u5b8c\u6210,\u6211\u4eec\u53bbseata-service/bin\u53bb\u8fd0\u884cseata\u670d\u52a1\u5427,\u5982\u56fe\u6240\u793a\u5c31\u6210\u529f\u5566!\\n\\n![20191202210112](/img/blog/20191202210112.png)\\n\\n# \u8fdb\u884c\u8c03\u8bd5\\n\\n\u200b\\t1.\u9996\u5148\u628aspringboot-dubbo-mybatsiplus-seata\u9879\u76ee\u7684pom\u7684\u4f9d\u8d56\u66f4\u6539,\u53bb\u9664\u6389zk\u8fd9\u4e9b\u914d\u7f6e,\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528nacos\u505a\u6ce8\u518c\u4e2d\u5fc3\u4e86.\\n\\n```java\\n\\t<properties>\\n\\t\\t<webVersion>3.1</webVersion>\\n\\t\\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\\n\\t\\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\\n\\t\\t<maven.compiler.source>1.8</maven.compiler.source>\\n\\t\\t<maven.compiler.target>1.8</maven.compiler.target>\\n\\t\\t<HikariCP.version>3.2.0</HikariCP.version>\\n\\t\\t<mybatis-plus-boot-starter.version>3.2.0</mybatis-plus-boot-starter.version>\\n\\t</properties>\\n\\t<parent>\\n\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t<artifactId>spring-boot-starter-parent</artifactId>\\n\\t\\t<version>2.1.8.RELEASE</version>\\n\\t</parent>\\n\\t<dependencies>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>com.alibaba.nacos</groupId>\\n\\t\\t\\t<artifactId>nacos-client</artifactId>\\n\\t\\t\\t<version>1.1.4</version>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.apache.dubbo</groupId>\\n\\t\\t\\t<artifactId>dubbo-registry-nacos</artifactId>\\n\\t\\t\\t<version>2.7.4.1</version>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.apache.dubbo</groupId>\\n\\t\\t\\t<artifactId>dubbo-spring-boot-starter</artifactId>\\n\\t\\t\\t<version>2.7.4.1</version>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.apache.commons</groupId>\\n\\t\\t\\t<artifactId>commons-lang3</artifactId>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>com.alibaba</groupId>\\n\\t\\t\\t<artifactId>fastjson</artifactId>\\n\\t\\t\\t<version>1.2.60</version>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- <dependency> <groupId>javax</groupId> <artifactId>javaee-api</artifactId> \\n\\t\\t\\t<version>7.0</version> <scope>provided</scope> </dependency> --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>io.springfox</groupId>\\n\\t\\t\\t<artifactId>springfox-swagger2</artifactId>\\n\\t\\t\\t<version>2.9.2</version>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>io.springfox</groupId>\\n\\t\\t\\t<artifactId>springfox-swagger-ui</artifactId>\\n\\t\\t\\t<version>2.9.2</version>\\n\\t\\t</dependency>\\n \\n\\t\\t\x3c!-- mybatis-plus begin --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>com.baomidou</groupId>\\n\\t\\t\\t<artifactId>mybatis-plus-boot-starter</artifactId>\\n\\t\\t\\t<version>${mybatis-plus-boot-starter.version}</version>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- mybatis-plus end --\x3e\\n\\t\\t\x3c!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.projectlombok</groupId>\\n\\t\\t\\t<artifactId>lombok</artifactId>\\n\\t\\t\\t<scope>provided</scope>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>io.seata</groupId>\\n\\t\\t\\t<artifactId>seata-all</artifactId>\\n\\t\\t\\t<version>0.9.0.1</version>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- <dependency> <groupId>com.baomidou</groupId> <artifactId>dynamic-datasource-spring-boot-starter</artifactId> \\n\\t\\t\\t<version>2.5.4</version> </dependency> --\x3e\\n \\n\\t\\t\x3c!-- <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-generator</artifactId> \\n\\t\\t\\t<version>3.1.0</version> </dependency> --\x3e\\n\\t\\t\x3c!-- https://mvnrepository.com/artifact/org.freemarker/freemarker --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.freemarker</groupId>\\n\\t\\t\\t<artifactId>freemarker</artifactId>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>com.alibaba</groupId>\\n\\t\\t\\t<artifactId>druid-spring-boot-starter</artifactId>\\n\\t\\t\\t<version>1.1.20</version>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- \u52a0\u4e0a\u8fd9\u4e2a\u624d\u80fd\u8fa8\u8ba4\u5230log4j2.yml\u6587\u4ef6 --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>com.fasterxml.jackson.dataformat</groupId>\\n\\t\\t\\t<artifactId>jackson-dataformat-yaml</artifactId>\\n\\t\\t</dependency>\\n\\t\\t<dependency> \x3c!-- \u5f15\u5165log4j2\u4f9d\u8d56 --\x3e\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-log4j2</artifactId>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>mysql</groupId>\\n\\t\\t\\t<artifactId>mysql-connector-java</artifactId>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-web</artifactId>\\n\\t\\t\\t<exclusions>\\n\\t\\t\\t\\t<exclusion>\\n\\t\\t\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t\\t\\t<artifactId>spring-boot-starter-logging</artifactId>\\n\\t\\t\\t\\t</exclusion>\\n\\t\\t\\t\\t<exclusion>\\n\\t\\t\\t\\t\\t<groupId>org.slf4j</groupId>\\n\\t\\t\\t\\t\\t<artifactId>slf4j-log4j12</artifactId>\\n\\t\\t\\t\\t</exclusion>\\n\\t\\t\\t</exclusions>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-aop</artifactId>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-test</artifactId>\\n\\t\\t\\t<scope>test</scope>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- <dependency> <groupId>org.scala-lang</groupId> <artifactId>scala-library</artifactId> \\n\\t\\t\\t<version>2.11.0</version> </dependency> --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-configuration-processor</artifactId>\\n\\t\\t\\t<optional>true</optional>\\n\\t\\t</dependency>\\n\\t</dependencies>\\n\\n```\\n\\n\u200b\\t2.\u7136\u540e\u66f4\u6539test-service\u7684\u76ee\u5f55\u7ed3\u6784,\u5220\u9664zk\u7684\u914d\u7f6e\u5e76\u66f4\u6539application.yml\u6587\u4ef6,\u76ee\u5f55\u7ed3\u6784\u4e0e\u4ee3\u7801:\\n\\n```yaml\\nserver:\\n  port: 38888\\nspring:\\n  application: \\n      name: test-service\\n  datasource:\\n    type: com.alibaba.druid.pool.DruidDataSource\\n    url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\n    username: root\\n    password: 123456\\ndubbo:\\n  protocol:\\n    loadbalance: leastactive\\n    threadpool: cached\\n  scan:\\n    base-packages: org\u3002test.service\\n  application:\\n    qos-enable: false\\n    name: testserver\\n  registry:\\n    id: my-registry\\n    address:  nacos://127.0.0.1:8848\\nmybatis-plus:\\n  mapper-locations: classpath:/mapper/*Mapper.xml\\n  typeAliasesPackage: org.test.entity\\n  global-config:\\n    db-config:\\n      field-strategy: not-empty\\n      id-type: auto\\n      db-type: mysql\\n  configuration:\\n    map-underscore-to-camel-case: true\\n    cache-enabled: true      \\n    auto-mapping-unknown-column-behavior: none\\n```\\n\\n<img src=\\"/img/blog/20191202211833.png\\" alt=\\"20191202211833\\"  style={{ zoom:\'100%\' }} />\\n\\n\u200b\\t3.\u518d\u66f4\u6539registry.conf\u6587\u4ef6,\u5982\u679c\u4f60\u7684nacos\u662f\u5176\u5b83\u670d\u52a1\u5668,\u8bf7\u6539\u6210\u5bf9\u5e94\u90fdip\u8ddf\u7aef\u53e3\\n\\n```java\\nregistry {\\n  type = \\"nacos\\"\\n  file {\\n    name = \\"file.conf\\"\\n  }\\n   zk {\\n    cluster = \\"default\\"\\n    serverAddr = \\"127.0.0.1:2181\\"\\n    session.timeout = 6000\\n    connect.timeout = 2000\\n  }\\n    nacos {\\n    serverAddr = \\"localhost\\"\\n    namespace = \\"\\"\\n    cluster = \\"default\\"\\n  }\\n}\\nconfig {\\n  type = \\"nacos\\"\\n  file {\\n    name = \\"file.conf\\"\\n  }\\n  zk {\\n    serverAddr = \\"127.0.0.1:2181\\"\\n    session.timeout = 6000\\n    connect.timeout = 2000\\n  }\\n    nacos {\\n    serverAddr = \\"localhost\\"\\n    namespace = \\"\\"\\n    cluster = \\"default\\"\\n  }\\n}\\n```\\n\\n\u200b\\t4.\u63a5\u7740\u6211\u4eec\u8fd0\u884cprovideApplication\\n\\n![20191202212000](/img/blog/20191202212000.png)\\n\\n\u542f\u52a8\u6210\u529f\u5566,\u6211\u4eec\u518d\u53bb\u770bseata\u7684\u65e5\u5fd7:\\n\\n![20191202212028](/img/blog/20191202212028.png)\\n\\n\u6210\u529f\u4e86,\u8fd9\u4e0b\u6211\u4eec\u4e00\u6837,\u53bb\u4fee\u6539test-client\u7684\u5185\u5bb9,\u9996\u5148\u4e00\u6837application.yml,\u628azk\u6362\u6210nacos,\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u63cf\u8ff0\u4e86,\u628atest-service\u5185\u7684registry.conf,\u590d\u5236\u5230client\u9879\u76ee\u7684resources\u4e2d\u8986\u76d6\u539f\u6765\u7684registry.conf.\\n\\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8fd0\u884cclientApplication:\\n\\n![20191202212114](/img/blog/20191202212114.png)\\n\\n\u200b\\t5.\u786e\u8ba4\u670d\u52a1\u5df2\u7ecf\u88ab\u53d1\u5e03\u5e76\u6d4b\u8bd5\u4e8b\u52a1\u8fd0\u884c\u662f\u5426\u6b63\u5e38\\n\\n![20191202212203](/img/blog/20191202212203.png)\\n\\n\u670d\u52a1\u6210\u529f\u53d1\u5e03\u51fa\u6765,\u4e5f\u88ab\u6210\u529f\u6d88\u8d39\u4e86.\u8fd9\u4e0b\u6211\u4eec\u518d\u53bbswagger\u4e2d\u53bb\u6d4b\u8bd5\u56de\u6eda\u662f\u5426\u4e00\u5207\u6b63\u5e38,\u8bbf\u95eehttp://127.0.0.1:28888/swagger-ui.html\\n\\n![20191202212240](/img/blog/20191202212240.png)\\n\\n\u606d\u559c\u4f60,\u770b\u5230\u8fd9\u4e00\u5b9a\u8ddf\u6211\u4e00\u6837\u6210\u529f\u4e86! \\n\\n# \u603b\u7ed3\\n\\n\u5173\u4e8enacos\u7684\u4f7f\u7528\u8ddfseata\u7684\u7b80\u5355\u642d\u5efa\u5df2\u7ecf\u5b8c\u6210\u4e86,\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\u5e0c\u671b\u5e0c\u671b\u5927\u5bb6\u8bbf\u95ee\u4ee5\u4e0b\u5730\u5740\u9605\u8bfb\u8be6\u7ec6\u6587\u6863\\n\\n[nacos\u5b98\u7f51](https://nacos.io/zh-cn/index.html)\\n\\n[dubbo\u5b98\u7f51](http://dubbo.apache.org/en-us/)\\n\\n[seata\u5b98\u7f51](http://seata.io/zh-cn/)"},{"id":"/seata-mybatisplus-analysis","metadata":{"permalink":"/zh-cn/blog/seata-mybatisplus-analysis","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-mybatisplus-analysis.md","title":"\u900f\u8fc7\u6e90\u7801\u89e3\u51b3SeataAT\u6a21\u5f0f\u6574\u5408Mybatis-Plus\u5931\u53bbMP\u7279\u6027\u7684\u95ee\u9898","description":"\u672c\u6587\u8bb2\u8ff0\u5982\u4f55\u900f\u8fc7\u6e90\u7801\u89e3\u51b3Seata\u6574\u5408Mybatis-Plus\u5931\u53bbMP\u7279\u6027\u7684\u95ee\u9898","date":"2019-11-30T00:00:00.000Z","formattedDate":"2019\u5e7411\u670830\u65e5","tags":[],"readingTime":10.225,"hasTruncateMarker":false,"authors":[{"name":"FUNKYE"}],"frontMatter":{"title":"\u900f\u8fc7\u6e90\u7801\u89e3\u51b3SeataAT\u6a21\u5f0f\u6574\u5408Mybatis-Plus\u5931\u53bbMP\u7279\u6027\u7684\u95ee\u9898","keywords":["Seata","Mybatis-Plus","\u5206\u5e03\u5f0f\u4e8b\u52a1"],"description":"\u672c\u6587\u8bb2\u8ff0\u5982\u4f55\u900f\u8fc7\u6e90\u7801\u89e3\u51b3Seata\u6574\u5408Mybatis-Plus\u5931\u53bbMP\u7279\u6027\u7684\u95ee\u9898","author":"FUNKYE","date":"2019/11/30"},"prevItem":{"title":"Seata\u5206\u5e03\u5f0f\u4e8b\u52a1\u542f\u7528Nacos\u505a\u914d\u7f6e\u4e2d\u5fc3","permalink":"/zh-cn/blog/seata-nacos-analysis"},"nextItem":{"title":"SpringBoot+Dubbo+MybatisPlus\u6574\u5408seata\u5206\u5e03\u5f0f\u4e8b\u52a1","permalink":"/zh-cn/blog/springboot-dubbo-mybatisplus-seata"}},"content":"\u9879\u76ee\u5730\u5740\uff1ahttps://gitee.com/itCjb/springboot-dubbo-mybatisplus-seata \\n\\n\u672c\u6587\u4f5c\u8005\uff1aFUNKYE(\u9648\u5065\u658c),\u676d\u5dde\u67d0\u4e92\u8054\u7f51\u516c\u53f8\u4e3b\u7a0b\u3002\\n\\n# \u4ecb\u7ecd\\n\\nMybatis-Plus\uff1a[MyBatis-Plus](https://github.com/baomidou/mybatis-plus)\uff08\u7b80\u79f0 MP\uff09\u662f\u4e00\u4e2a [MyBatis](http://www.mybatis.org/mybatis-3/) \u7684\u589e\u5f3a\u5de5\u5177\uff0c\u5728 MyBatis \u7684\u57fa\u7840\u4e0a\u53ea\u505a\u589e\u5f3a\u4e0d\u505a\u6539\u53d8\uff0c\u4e3a\u7b80\u5316\u5f00\u53d1\u3001\u63d0\u9ad8\u6548\u7387\u800c\u751f\u3002\\n\\nMP\u914d\u7f6e\uff1a\\n\\n```xml\\n<bean id=\\"sqlSessionFactory\\" class=\\"com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean\\">\\n    <property name=\\"dataSource\\" ref=\\"dataSource\\"/>\\n</bean>\\n```\\n\\nSeata\uff1aSeata \u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u81f4\u529b\u4e8e\u63d0\u4f9b\u9ad8\u6027\u80fd\u548c\u7b80\u5355\u6613\u7528\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u670d\u52a1\u3002Seata \u5c06\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86 AT\u3001TCC\u3001SAGA \u548c XA \u4e8b\u52a1\u6a21\u5f0f\uff0c\u4e3a\u7528\u6237\u6253\u9020\u4e00\u7ad9\u5f0f\u7684\u5206\u5e03\u5f0f\u89e3\u51b3\u65b9\u6848\u3002\\n\\nAT\u6a21\u5f0f\u673a\u5236\uff1a\\n\\n- \u4e00\u9636\u6bb5\uff1a\u4e1a\u52a1\u6570\u636e\u548c\u56de\u6eda\u65e5\u5fd7\u8bb0\u5f55\u5728\u540c\u4e00\u4e2a\u672c\u5730\u4e8b\u52a1\u4e2d\u63d0\u4ea4\uff0c\u91ca\u653e\u672c\u5730\u9501\u548c\u8fde\u63a5\u8d44\u6e90\u3002\\n- \u4e8c\u9636\u6bb5\uff1a\\n  - \u63d0\u4ea4\u5f02\u6b65\u5316\uff0c\u975e\u5e38\u5feb\u901f\u5730\u5b8c\u6210\u3002\\n  - \u56de\u6eda\u901a\u8fc7\u4e00\u9636\u6bb5\u7684\u56de\u6eda\u65e5\u5fd7\u8fdb\u884c\u53cd\u5411\u8865\u507f\u3002\\n\\n## \u5206\u6790\u539f\u56e0\\n\\n\u200b\\t1.\u9996\u5148\u6211\u4eec\u901a\u8fc7\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u770b\u5230\uff0cmp\u662f\u9700\u8981\u6ce8\u518csqlSessionFactory\uff0c\u6ce8\u5165\u6570\u636e\u6e90\uff0c\u800cSeata\u662f\u901a\u8fc7\u4ee3\u7406\u6570\u636e\u6e90\u6765\u4fdd\u8bc1\u4e8b\u52a1\u7684\u6b63\u5e38\u56de\u6eda\u8ddf\u63d0\u4ea4\u3002\\n\\n\u200b\\t2.\u6211\u4eec\u6765\u770b\u57fa\u4e8eseata\u7684\u5b98\u65b9demo\u63d0\u4f9b\u7684SeataAutoConfig\u7684\u4ee3\u7801\\n\\n```java\\npackage org.test.config;\\n \\nimport javax.sql.DataSource; \\n \\nimport org.apache.ibatis.session.SqlSessionFactory;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;\\nimport org.springframework.context.annotation.Bean;\\nimport org.springframework.context.annotation.Configuration;\\nimport org.springframework.context.annotation.Primary;\\n \\nimport com.alibaba.druid.pool.DruidDataSource;\\nimport com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean;\\n \\nimport io.seata.rm.datasource.DataSourceProxy;\\nimport io.seata.spring.annotation.GlobalTransactionScanner;\\n \\n@Configuration\\npublic class SeataAutoConfig {\\n\\t@Autowired(required = true)\\n\\tprivate DataSourceProperties dataSourceProperties;\\n\\tprivate final static Logger logger = LoggerFactory.getLogger(SeataAutoConfig.class);\\n \\n\\t@Bean(name = \\"dataSource\\") // \u58f0\u660e\u5176\u4e3aBean\u5b9e\u4f8b\\n\\t@Primary // \u5728\u540c\u6837\u7684DataSource\u4e2d\uff0c\u9996\u5148\u4f7f\u7528\u88ab\u6807\u6ce8\u7684DataSource\\n\\tpublic DataSource druidDataSource() {\\n\\t\\tDruidDataSource druidDataSource = new DruidDataSource();\\n\\t\\tlogger.info(\\"dataSourceProperties.getUrl():{}\\",dataSourceProperties.getUrl());\\n\\t\\tdruidDataSource.setUrl(dataSourceProperties.getUrl());\\n\\t\\tdruidDataSource.setUsername(dataSourceProperties.getUsername());\\n\\t\\tdruidDataSource.setPassword(dataSourceProperties.getPassword());\\n\\t\\tdruidDataSource.setDriverClassName(dataSourceProperties.getDriverClassName());\\n\\t\\tdruidDataSource.setInitialSize(0);\\n\\t\\tdruidDataSource.setMaxActive(180);\\n\\t\\tdruidDataSource.setMaxWait(60000);\\n\\t\\tdruidDataSource.setMinIdle(0);\\n\\t\\tdruidDataSource.setValidationQuery(\\"Select 1 from DUAL\\");\\n\\t\\tdruidDataSource.setTestOnBorrow(false);\\n\\t\\tdruidDataSource.setTestOnReturn(false);\\n\\t\\tdruidDataSource.setTestWhileIdle(true);\\n\\t\\tdruidDataSource.setTimeBetweenEvictionRunsMillis(60000);\\n\\t\\tdruidDataSource.setMinEvictableIdleTimeMillis(25200000);\\n\\t\\tdruidDataSource.setRemoveAbandoned(true);\\n\\t\\tdruidDataSource.setRemoveAbandonedTimeout(1800);\\n\\t\\tdruidDataSource.setLogAbandoned(true);\\n\\t\\tlogger.info(\\"\u88c5\u8f7ddataSource........\\");\\n\\t\\treturn druidDataSource;\\n\\t}\\n \\n\\t/**\\n\\t * init datasource proxy\\n\\t * \\n\\t * @Param: druidDataSource datasource bean instance\\n\\t * @Return: DataSourceProxy datasource proxy\\n\\t */\\n\\t@Bean\\n\\tpublic DataSourceProxy dataSourceProxy(DataSource dataSource) {\\n\\t\\tlogger.info(\\"\u4ee3\u7406dataSource........\\");\\n\\t\\treturn new DataSourceProxy(dataSource);\\n\\t}\\n \\n\\t@Bean\\n\\tpublic SqlSessionFactory sqlSessionFactory(DataSourceProxy dataSourceProxy) throws Exception {\\n\\t\\tMybatisSqlSessionFactoryBean factory = new MybatisSqlSessionFactoryBean();\\n\\t\\tfactory.setDataSource(dataSourceProxy);\\n        factory.setMapperLocations(new PathMatchingResourcePatternResolver()\\n            .getResources(\\"classpath*:/mapper/*.xml\\"));\\n\\t\\treturn factory.getObject();\\n\\t}\\n \\n\\t/**\\n\\t * init global transaction scanner\\n\\t *\\n\\t * @Return: GlobalTransactionScanner\\n\\t */\\n\\t@Bean\\n\\tpublic GlobalTransactionScanner globalTransactionScanner() {\\n\\t\\tlogger.info(\\"\u914d\u7f6eseata........\\");\\n\\t\\treturn new GlobalTransactionScanner(\\"test-service\\", \\"test-group\\");\\n\\t}\\n}\\n\\n```\\n\\n\u9996\u5148\u770b\u5230\u6211\u4eec\u7684seata\u914d\u7f6e\u6570\u636e\u6e90\u7684\u7c7b\u91cc,\u6211\u4eec\u914d\u7f6e\u4e86\u4e00\u4e2a\u6570\u636e\u6e90,\u7136\u540e\u53c8\u914d\u7f6e\u4e86\u4e00\u4e2aseata\u4ee3\u7406datasource\u7684bean,\u8fd9\u65f6\u5019.\\n\\n\u7136\u540e\u6211\u4eec\u5982\u679c\u76f4\u63a5\u542f\u52a8mp\u6574\u5408seata\u7684\u9879\u76ee\u4f1a\u53d1\u73b0,\u5206\u9875\u4e4b\u7c7b\u7684\u63d2\u4ef6\u4f1a\u76f4\u63a5\u5931\u6548,\u8fde\u626b\u63cfmapper\u90fd\u5f97\u4ece\u4ee3\u7801\u4e0a\u5199,\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462?\\n\\n\u901a\u8fc7\u9605\u8bfb\u4ee5\u4e0a\u4ee3\u7801,\u662f\u56e0\u4e3a\u6211\u4eec\u53e6\u5916\u7684\u914d\u7f6e\u4e86\u4e00\u4e2asqlSessionFactory,\u5bfc\u81f4mp\u7684sqlSessionFactory\u5931\u6548\u4e86,\u8fd9\u65f6\u5019\u6211\u4eec\u53d1\u73b0\u4e86\u95ee\u9898\u7684\u6240\u5728\u4e86\uff0c\u5373\u4f7f\u6211\u4eec\u4e0d\u914d\u7f6esqlSessionFactoryl\uff0c\u4e5f\u4f1a\u56e0\u4e3amp\u6240\u4f7f\u7528\u7684\u6570\u636e\u6e90\u4e0d\u662f\u88abseata\u4ee3\u7406\u8fc7\u540e\u7684\u6570\u636e\u6e90\uff0c\u5bfc\u81f4\u5206\u5e03\u5f0f\u4e8b\u52a1\u5931\u6548.\u4f46\u662f\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462?\\n\\n\u8fd9\u65f6\u5019\u6211\u4eec\u9700\u8981\u53bb\u9605\u8bfbmp\u7684\u6e90\u7801,\u627e\u5230\u4ed6\u7684\u542f\u52a8\u7c7b,\u4e00\u770b\u4fbf\u77e5\\n\\n```java\\n/*\\n * Copyright (c) 2011-2020, baomidou (jobob@qq.com).\\n * <p>\\n * Licensed under the Apache License, Version 2.0 (the \\"License\\"); you may not\\n * use this file except in compliance with the License. You may obtain a copy of\\n * the License at\\n * <p>\\n * https://www.apache.org/licenses/LICENSE-2.0\\n * <p>\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\"AS IS\\" BASIS, WITHOUT\\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\\n * License for the specific language governing permissions and limitations under\\n * the License.\\n */\\npackage com.baomidou.mybatisplus.autoconfigure;\\n \\n \\nimport com.baomidou.mybatisplus.core.MybatisConfiguration;\\nimport com.baomidou.mybatisplus.core.config.GlobalConfig;\\nimport com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;\\nimport com.baomidou.mybatisplus.core.incrementer.IKeyGenerator;\\nimport com.baomidou.mybatisplus.core.injector.ISqlInjector;\\nimport com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean;\\nimport org.apache.ibatis.annotations.Mapper;\\nimport org.apache.ibatis.mapping.DatabaseIdProvider;\\nimport org.apache.ibatis.plugin.Interceptor;\\nimport org.apache.ibatis.scripting.LanguageDriver;\\nimport org.apache.ibatis.session.ExecutorType;\\nimport org.apache.ibatis.session.SqlSessionFactory;\\nimport org.apache.ibatis.type.TypeHandler;\\nimport org.mybatis.spring.SqlSessionFactoryBean;\\nimport org.mybatis.spring.SqlSessionTemplate;\\nimport org.mybatis.spring.mapper.MapperFactoryBean;\\nimport org.mybatis.spring.mapper.MapperScannerConfigurer;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\nimport org.springframework.beans.BeanWrapper;\\nimport org.springframework.beans.BeanWrapperImpl;\\nimport org.springframework.beans.factory.BeanFactory;\\nimport org.springframework.beans.factory.BeanFactoryAware;\\nimport org.springframework.beans.factory.InitializingBean;\\nimport org.springframework.beans.factory.ObjectProvider;\\nimport org.springframework.beans.factory.support.BeanDefinitionBuilder;\\nimport org.springframework.beans.factory.support.BeanDefinitionRegistry;\\nimport org.springframework.boot.autoconfigure.AutoConfigurationPackages;\\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;\\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;\\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\\nimport org.springframework.context.ApplicationContext;\\nimport org.springframework.context.annotation.Bean;\\nimport org.springframework.context.annotation.Configuration;\\nimport org.springframework.context.annotation.Import;\\nimport org.springframework.context.annotation.ImportBeanDefinitionRegistrar;\\nimport org.springframework.core.io.Resource;\\nimport org.springframework.core.io.ResourceLoader;\\nimport org.springframework.core.type.AnnotationMetadata;\\nimport org.springframework.util.Assert;\\nimport org.springframework.util.CollectionUtils;\\nimport org.springframework.util.ObjectUtils;\\nimport org.springframework.util.StringUtils;\\n \\nimport javax.sql.DataSource;\\nimport java.util.List;\\nimport java.util.Optional;\\nimport java.util.stream.Stream;\\n \\n/**\\n * {@link EnableAutoConfiguration Auto-Configuration} for Mybatis. Contributes a\\n * {@link SqlSessionFactory} and a {@link SqlSessionTemplate}.\\n * <p>\\n * If {@link org.mybatis.spring.annotation.MapperScan} is used, or a\\n * configuration file is specified as a property, those will be considered,\\n * otherwise this auto-configuration will attempt to register mappers based on\\n * the interface definitions in or under the root auto-configuration package.\\n * </p>\\n * <p> copy from {@link org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration}</p>\\n *\\n * @author Edd\xfa Mel\xe9ndez\\n * @author Josh Long\\n * @author Kazuki Shimizu\\n * @author Eduardo Macarr\xf3n\\n */\\n@Configuration\\n@ConditionalOnClass({SqlSessionFactory.class, SqlSessionFactoryBean.class})\\n@ConditionalOnSingleCandidate(DataSource.class)\\n@EnableConfigurationProperties(MybatisPlusProperties.class)\\n@AutoConfigureAfter(DataSourceAutoConfiguration.class)\\npublic class MybatisPlusAutoConfiguration implements InitializingBean {\\n \\n    private static final Logger logger = LoggerFactory.getLogger(MybatisPlusAutoConfiguration.class);\\n \\n    private final MybatisPlusProperties properties;\\n \\n    private final Interceptor[] interceptors;\\n \\n    private final TypeHandler[] typeHandlers;\\n \\n    private final LanguageDriver[] languageDrivers;\\n \\n    private final ResourceLoader resourceLoader;\\n \\n    private final DatabaseIdProvider databaseIdProvider;\\n \\n    private final List<ConfigurationCustomizer> configurationCustomizers;\\n \\n    private final List<MybatisPlusPropertiesCustomizer> mybatisPlusPropertiesCustomizers;\\n \\n    private final ApplicationContext applicationContext;\\n \\n \\n    public MybatisPlusAutoConfiguration(MybatisPlusProperties properties,\\n                                        ObjectProvider<Interceptor[]> interceptorsProvider,\\n                                        ObjectProvider<TypeHandler[]> typeHandlersProvider,\\n                                        ObjectProvider<LanguageDriver[]> languageDriversProvider,\\n                                        ResourceLoader resourceLoader,\\n                                        ObjectProvider<DatabaseIdProvider> databaseIdProvider,\\n                                        ObjectProvider<List<ConfigurationCustomizer>> configurationCustomizersProvider,\\n                                        ObjectProvider<List<MybatisPlusPropertiesCustomizer>> mybatisPlusPropertiesCustomizerProvider,\\n                                        ApplicationContext applicationContext) {\\n        this.properties = properties;\\n        this.interceptors = interceptorsProvider.getIfAvailable();\\n        this.typeHandlers = typeHandlersProvider.getIfAvailable();\\n        this.languageDrivers = languageDriversProvider.getIfAvailable();\\n        this.resourceLoader = resourceLoader;\\n        this.databaseIdProvider = databaseIdProvider.getIfAvailable();\\n        this.configurationCustomizers = configurationCustomizersProvider.getIfAvailable();\\n        this.mybatisPlusPropertiesCustomizers = mybatisPlusPropertiesCustomizerProvider.getIfAvailable();\\n        this.applicationContext = applicationContext;\\n    }\\n \\n    @Override\\n    public void afterPropertiesSet() {\\n        if (!CollectionUtils.isEmpty(mybatisPlusPropertiesCustomizers)) {\\n            mybatisPlusPropertiesCustomizers.forEach(i -> i.customize(properties));\\n        }\\n        checkConfigFileExists();\\n    }\\n \\n    private void checkConfigFileExists() {\\n        if (this.properties.isCheckConfigLocation() && StringUtils.hasText(this.properties.getConfigLocation())) {\\n            Resource resource = this.resourceLoader.getResource(this.properties.getConfigLocation());\\n            Assert.state(resource.exists(),\\n                \\"Cannot find config location: \\" + resource + \\" (please add config file or check your Mybatis configuration)\\");\\n        }\\n    }\\n \\n    @SuppressWarnings(\\"SpringJavaInjectionPointsAutowiringInspection\\")\\n    @Bean\\n    @ConditionalOnMissingBean\\n    public SqlSessionFactory sqlSessionFactory(DataSource dataSource) throws Exception {\\n        // TODO \u4f7f\u7528 MybatisSqlSessionFactoryBean \u800c\u4e0d\u662f SqlSessionFactoryBean\\n        MybatisSqlSessionFactoryBean factory = new MybatisSqlSessionFactoryBean();\\n        factory.setDataSource(dataSource);\\n        factory.setVfs(SpringBootVFS.class);\\n        if (StringUtils.hasText(this.properties.getConfigLocation())) {\\n            factory.setConfigLocation(this.resourceLoader.getResource(this.properties.getConfigLocation()));\\n        }\\n        applyConfiguration(factory);\\n        if (this.properties.getConfigurationProperties() != null) {\\n            factory.setConfigurationProperties(this.properties.getConfigurationProperties());\\n        }\\n        if (!ObjectUtils.isEmpty(this.interceptors)) {\\n            factory.setPlugins(this.interceptors);\\n        }\\n        if (this.databaseIdProvider != null) {\\n            factory.setDatabaseIdProvider(this.databaseIdProvider);\\n        }\\n        if (StringUtils.hasLength(this.properties.getTypeAliasesPackage())) {\\n            factory.setTypeAliasesPackage(this.properties.getTypeAliasesPackage());\\n        }\\n        if (this.properties.getTypeAliasesSuperType() != null) {\\n            factory.setTypeAliasesSuperType(this.properties.getTypeAliasesSuperType());\\n        }\\n        if (StringUtils.hasLength(this.properties.getTypeHandlersPackage())) {\\n            factory.setTypeHandlersPackage(this.properties.getTypeHandlersPackage());\\n        }\\n        if (!ObjectUtils.isEmpty(this.typeHandlers)) {\\n            factory.setTypeHandlers(this.typeHandlers);\\n        }\\n        if (!ObjectUtils.isEmpty(this.properties.resolveMapperLocations())) {\\n            factory.setMapperLocations(this.properties.resolveMapperLocations());\\n        }\\n \\n        // TODO \u5bf9\u6e90\u7801\u505a\u4e86\u4e00\u5b9a\u7684\u4fee\u6539(\u56e0\u4e3a\u6e90\u7801\u9002\u914d\u4e86\u8001\u65e7\u7684mybatis\u7248\u672c,\u4f46\u6211\u4eec\u4e0d\u9700\u8981\u9002\u914d)\\n        Class<? extends LanguageDriver> defaultLanguageDriver = this.properties.getDefaultScriptingLanguageDriver();\\n        if (!ObjectUtils.isEmpty(this.languageDrivers)) {\\n            factory.setScriptingLanguageDrivers(this.languageDrivers);\\n        }\\n        Optional.ofNullable(defaultLanguageDriver).ifPresent(factory::setDefaultScriptingLanguageDriver);\\n \\n        // TODO \u81ea\u5b9a\u4e49\u679a\u4e3e\u5305\\n        if (StringUtils.hasLength(this.properties.getTypeEnumsPackage())) {\\n            factory.setTypeEnumsPackage(this.properties.getTypeEnumsPackage());\\n        }\\n        // TODO \u6b64\u5904\u5fc5\u4e3a\u975e NULL\\n        GlobalConfig globalConfig = this.properties.getGlobalConfig();\\n        // TODO \u6ce8\u5165\u586b\u5145\u5668\\n        if (this.applicationContext.getBeanNamesForType(MetaObjectHandler.class,\\n            false, false).length > 0) {\\n            MetaObjectHandler metaObjectHandler = this.applicationContext.getBean(MetaObjectHandler.class);\\n            globalConfig.setMetaObjectHandler(metaObjectHandler);\\n        }\\n        // TODO \u6ce8\u5165\u4e3b\u952e\u751f\u6210\u5668\\n        if (this.applicationContext.getBeanNamesForType(IKeyGenerator.class, false,\\n            false).length > 0) {\\n            IKeyGenerator keyGenerator = this.applicationContext.getBean(IKeyGenerator.class);\\n            globalConfig.getDbConfig().setKeyGenerator(keyGenerator);\\n        }\\n        // TODO \u6ce8\u5165sql\u6ce8\u5165\u5668\\n        if (this.applicationContext.getBeanNamesForType(ISqlInjector.class, false,\\n            false).length > 0) {\\n            ISqlInjector iSqlInjector = this.applicationContext.getBean(ISqlInjector.class);\\n            globalConfig.setSqlInjector(iSqlInjector);\\n        }\\n        // TODO \u8bbe\u7f6e GlobalConfig \u5230 MybatisSqlSessionFactoryBean\\n        factory.setGlobalConfig(globalConfig);\\n        return factory.getObject();\\n    }\\n \\n    // TODO \u5165\u53c2\u4f7f\u7528 MybatisSqlSessionFactoryBean\\n    private void applyConfiguration(MybatisSqlSessionFactoryBean factory) {\\n        // TODO \u4f7f\u7528 MybatisConfiguration\\n        MybatisConfiguration configuration = this.properties.getConfiguration();\\n        if (configuration == null && !StringUtils.hasText(this.properties.getConfigLocation())) {\\n            configuration = new MybatisConfiguration();\\n        }\\n        if (configuration != null && !CollectionUtils.isEmpty(this.configurationCustomizers)) {\\n            for (ConfigurationCustomizer customizer : this.configurationCustomizers) {\\n                customizer.customize(configuration);\\n            }\\n        }\\n        factory.setConfiguration(configuration);\\n    }\\n \\n    @Bean\\n    @ConditionalOnMissingBean\\n    public SqlSessionTemplate sqlSessionTemplate(SqlSessionFactory sqlSessionFactory) {\\n        ExecutorType executorType = this.properties.getExecutorType();\\n        if (executorType != null) {\\n            return new SqlSessionTemplate(sqlSessionFactory, executorType);\\n        } else {\\n            return new SqlSessionTemplate(sqlSessionFactory);\\n        }\\n    }\\n \\n    /**\\n     * This will just scan the same base package as Spring Boot does. If you want more power, you can explicitly use\\n     * {@link org.mybatis.spring.annotation.MapperScan} but this will get typed mappers working correctly, out-of-the-box,\\n     * similar to using Spring Data JPA repositories.\\n     */\\n    public static class AutoConfiguredMapperScannerRegistrar implements BeanFactoryAware, ImportBeanDefinitionRegistrar {\\n \\n        private BeanFactory beanFactory;\\n \\n        @Override\\n        public void registerBeanDefinitions(AnnotationMetadata importingClassMetadata, BeanDefinitionRegistry registry) {\\n \\n            if (!AutoConfigurationPackages.has(this.beanFactory)) {\\n                logger.debug(\\"Could not determine auto-configuration package, automatic mapper scanning disabled.\\");\\n                return;\\n            }\\n \\n            logger.debug(\\"Searching for mappers annotated with @Mapper\\");\\n \\n            List<String> packages = AutoConfigurationPackages.get(this.beanFactory);\\n            if (logger.isDebugEnabled()) {\\n                packages.forEach(pkg -> logger.debug(\\"Using auto-configuration base package \'{}\'\\", pkg));\\n            }\\n \\n            BeanDefinitionBuilder builder = BeanDefinitionBuilder.genericBeanDefinition(MapperScannerConfigurer.class);\\n            builder.addPropertyValue(\\"processPropertyPlaceHolders\\", true);\\n            builder.addPropertyValue(\\"annotationClass\\", Mapper.class);\\n            builder.addPropertyValue(\\"basePackage\\", StringUtils.collectionToCommaDelimitedString(packages));\\n            BeanWrapper beanWrapper = new BeanWrapperImpl(MapperScannerConfigurer.class);\\n            Stream.of(beanWrapper.getPropertyDescriptors())\\n                // Need to mybatis-spring 2.0.2+\\n                .filter(x -> x.getName().equals(\\"lazyInitialization\\")).findAny()\\n                .ifPresent(x -> builder.addPropertyValue(\\"lazyInitialization\\", \\"${mybatis.lazy-initialization:false}\\"));\\n            registry.registerBeanDefinition(MapperScannerConfigurer.class.getName(), builder.getBeanDefinition());\\n        }\\n \\n        @Override\\n        public void setBeanFactory(BeanFactory beanFactory) {\\n            this.beanFactory = beanFactory;\\n        }\\n    }\\n \\n    /**\\n     * If mapper registering configuration or mapper scanning configuration not present, this configuration allow to scan\\n     * mappers based on the same component-scanning path as Spring Boot itself.\\n     */\\n    @Configuration\\n    @Import(AutoConfiguredMapperScannerRegistrar.class)\\n    @ConditionalOnMissingBean({MapperFactoryBean.class, MapperScannerConfigurer.class})\\n    public static class MapperScannerRegistrarNotFoundConfiguration implements InitializingBean {\\n \\n        @Override\\n        public void afterPropertiesSet() {\\n            logger.debug(\\n                \\"Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.\\");\\n        }\\n    }\\n}\\n\\n```\\n\\n\u770b\u5230mp\u542f\u52a8\u7c7b\u91cc\u7684sqlSessionFactory\u65b9\u6cd5\u4e86\u5417,\u4ed6\u4e5f\u662f\u4e00\u6837\u7684\u6ce8\u5165\u4e00\u4e2a\u6570\u636e\u6e90,\u8fd9\u65f6\u5019\u5927\u5bb6\u5e94\u8be5\u90fd\u77e5\u9053\u89e3\u51b3\u65b9\u6cd5\u4e86\u5427?\\n\\n\u6ca1\u9519,\u5c31\u662f\u628a\u88ab\u4ee3\u7406\u8fc7\u7684\u6570\u636e\u6e90\u7ed9\u653e\u5230mp\u7684sqlSessionFactory\u4e2d.\\n\\n\u5f88\u7b80\u5355,\u6211\u4eec\u9700\u8981\u7a0d\u5fae\u6539\u52a8\u4e00\u4e0b\u6211\u4eec\u7684seata\u914d\u7f6e\u7c7b\u5c31\u884c\u4e86\\n\\n```java\\npackage org.test.config;\\n\\nimport javax.sql.DataSource;\\n\\nimport org.mybatis.spring.annotation.MapperScan;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;\\nimport org.springframework.context.annotation.Bean;\\nimport org.springframework.context.annotation.Configuration;\\nimport org.springframework.context.annotation.Primary;\\n\\nimport com.alibaba.druid.pool.DruidDataSource;\\n\\nimport io.seata.rm.datasource.DataSourceProxy;\\nimport io.seata.spring.annotation.GlobalTransactionScanner;\\n\\n@Configuration\\n@MapperScan(\\"com.baomidou.springboot.mapper*\\")\\npublic class SeataAutoConfig {\\n    @Autowired(required = true)\\n    private DataSourceProperties dataSourceProperties;\\n    private final static Logger logger = LoggerFactory.getLogger(SeataAutoConfig.class);\\n    private DataSourceProxy dataSourceProxy;\\n\\n    @Bean(name = \\"dataSource\\") // \u58f0\u660e\u5176\u4e3aBean\u5b9e\u4f8b\\n    @Primary // \u5728\u540c\u6837\u7684DataSource\u4e2d\uff0c\u9996\u5148\u4f7f\u7528\u88ab\u6807\u6ce8\u7684DataSource\\n    public DataSource druidDataSource() {\\n        DruidDataSource druidDataSource = new DruidDataSource();\\n        logger.info(\\"dataSourceProperties.getUrl():{}\\", dataSourceProperties.getUrl());\\n        druidDataSource.setUrl(dataSourceProperties.getUrl());\\n        druidDataSource.setUsername(dataSourceProperties.getUsername());\\n        druidDataSource.setPassword(dataSourceProperties.getPassword());\\n        druidDataSource.setDriverClassName(dataSourceProperties.getDriverClassName());\\n        druidDataSource.setInitialSize(0);\\n        druidDataSource.setMaxActive(180);\\n        druidDataSource.setMaxWait(60000);\\n        druidDataSource.setMinIdle(0);\\n        druidDataSource.setValidationQuery(\\"Select 1 from DUAL\\");\\n        druidDataSource.setTestOnBorrow(false);\\n        druidDataSource.setTestOnReturn(false);\\n        druidDataSource.setTestWhileIdle(true);\\n        druidDataSource.setTimeBetweenEvictionRunsMillis(60000);\\n        druidDataSource.setMinEvictableIdleTimeMillis(25200000);\\n        druidDataSource.setRemoveAbandoned(true);\\n        druidDataSource.setRemoveAbandonedTimeout(1800);\\n        druidDataSource.setLogAbandoned(true);\\n        logger.info(\\"\u88c5\u8f7ddataSource........\\");\\n        dataSourceProxy = new DataSourceProxy(druidDataSource);\\n        return dataSourceProxy;\\n    }\\n\\n    /**\\n     * init datasource proxy\\n     * \\n     * @Param: druidDataSource datasource bean instance\\n     * @Return: DataSourceProxy datasource proxy\\n     */\\n    @Bean\\n    public DataSourceProxy dataSourceProxy() {\\n        logger.info(\\"\u4ee3\u7406dataSource........\\");\\n        return dataSourceProxy;\\n    }\\n\\n    /**\\n     * init global transaction scanner\\n     *\\n     * @Return: GlobalTransactionScanner\\n     */\\n    @Bean\\n    public GlobalTransactionScanner globalTransactionScanner() {\\n        logger.info(\\"\u914d\u7f6eseata........\\");\\n        return new GlobalTransactionScanner(\\"test-service\\", \\"test-group\\");\\n    }\\n}\\n\\n```\\n\\n\u770b\u4ee3\u7801,\u6211\u4eec\u53bb\u6389\u4e86\u81ea\u5df1\u914d\u7f6e\u7684sqlSessionFactory,\u76f4\u63a5\u8ba9DataSource bean\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u88ab\u4ee3\u7406\u8fc7\u7684bean,\u5e76\u4e14\u6211\u4eec\u52a0\u5165\u4e86@Primary,\u5bfc\u81f4mp\u4f18\u5148\u4f7f\u7528\u6211\u4eec\u914d\u7f6e\u7684\u6570\u636e\u6e90,\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86mp\u56e0\u4e3aseata\u4ee3\u7406\u4e86\u6570\u636e\u6e90\u8ddf\u521b\u5efa\u4e86\u65b0\u7684sqlSessionFactory,\u5bfc\u81f4mp\u7684\u63d2\u4ef6,\u7ec4\u4ef6\u5931\u6548\u7684bug\u4e86!\\n\\n# \u603b\u7ed3\\n\\n\u8e29\u5230\u5751\u4e0d\u53ef\u6015\uff0c\u4e3b\u8981\u53c8\u8010\u5fc3\u7684\u987a\u7740\u6bcf\u4e2a\u7ec4\u4ef6\u5b9e\u73b0\u7684\u539f\u7406\uff0c\u518d\u53bb\u601d\u8003\uff0c\u67e5\u627e\u5bf9\u5e94\u51b2\u7a81\u7684\u4ee3\u7801\u5757\uff0c\u4f60\u4e00\u5b9a\u80fd\u627e\u5230\u4e2a\u517c\u5bb9\u4e8c\u8005\u7684\u65b9\u6cd5\u3002"},{"id":"/springboot-dubbo-mybatisplus-seata","metadata":{"permalink":"/zh-cn/blog/springboot-dubbo-mybatisplus-seata","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/springboot-dubbo-mybatisplus-seata.md","title":"SpringBoot+Dubbo+MybatisPlus\u6574\u5408seata\u5206\u5e03\u5f0f\u4e8b\u52a1","description":"\u672c\u6587\u8bb2\u8ff0\u5982\u4f55\u5c06springboot+dubbo+mybatisplus\u6574\u5408seata\u76f4\u8fde\u65b9\u5f0f\u642d\u5efa","date":"2019-11-29T00:00:00.000Z","formattedDate":"2019\u5e7411\u670829\u65e5","tags":[],"readingTime":22.755,"hasTruncateMarker":false,"authors":[{"name":"FUNKYE"}],"frontMatter":{"title":"SpringBoot+Dubbo+MybatisPlus\u6574\u5408seata\u5206\u5e03\u5f0f\u4e8b\u52a1","keywords":["Seata","dubbo","mybatis","\u5206\u5e03\u5f0f\u4e8b\u52a1"],"description":"\u672c\u6587\u8bb2\u8ff0\u5982\u4f55\u5c06springboot+dubbo+mybatisplus\u6574\u5408seata\u76f4\u8fde\u65b9\u5f0f\u642d\u5efa","author":"FUNKYE","date":"2019/11/29"},"prevItem":{"title":"\u900f\u8fc7\u6e90\u7801\u89e3\u51b3SeataAT\u6a21\u5f0f\u6574\u5408Mybatis-Plus\u5931\u53bbMP\u7279\u6027\u7684\u95ee\u9898","permalink":"/zh-cn/blog/seata-mybatisplus-analysis"},"nextItem":{"title":"Seata \u5ba2\u6237\u7aef\u9700\u8981\u540c\u65f6\u542f\u52a8 RM \u548c TM \u5417\uff1f","permalink":"/zh-cn/blog/seata-at-mode-start-rm-tm"}},"content":"[\u9879\u76ee\u5730\u5740](https://gitee.com/itCjb/springboot-dubbo-mybatisplus-seata )\\n\\n\u672c\u6587\u4f5c\u8005\uff1aFUNKYE(\u9648\u5065\u658c),\u676d\u5dde\u67d0\u4e92\u8054\u7f51\u516c\u53f8\u4e3b\u7a0b\u3002\\n\\n# \u524d\u8a00\\n\\n\u200b    **\u4e8b\u52a1**\uff1a\u4e8b\u52a1\u662f\u7531\u4e00\u7ec4\u64cd\u4f5c\u6784\u6210\u7684\u53ef\u9760\u7684\u72ec\u7acb\u7684\u5de5\u4f5c\u5355\u5143\uff0c\u4e8b\u52a1\u5177\u5907ACID\u7684\u7279\u6027\uff0c\u5373\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u548c\u6301\u4e45\u6027\u3002\\n\u200b    **\u5206\u5e03\u5f0f\u4e8b\u52a1**:\u5f53\u4e00\u4e2a\u64cd\u4f5c\u7275\u6d89\u5230\u591a\u4e2a\u670d\u52a1,\u591a\u53f0\u6570\u636e\u5e93\u534f\u529b\u5b8c\u6210\u65f6(\u6bd4\u5982\u5206\u8868\u5206\u5e93\u540e,\u4e1a\u52a1\u62c6\u5206),\u591a\u4e2a\u670d\u52a1\u4e2d\uff0c\u672c\u5730\u7684Transaction\u5df2\u7ecf\u65e0\u6cd5\u5e94\u5bf9\u8fd9\u4e2a\u60c5\u51b5\u4e86,\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u4e00\u81f4\u6027\uff0c\u5c31\u9700\u8981\u7528\u5230\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002\\n\u200b    **Seata** \uff1a\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u81f4\u529b\u4e8e\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u63d0\u4f9b\u9ad8\u6027\u80fd\u548c\u7b80\u5355\u6613\u7528\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u670d\u52a1\u3002\\n\u200b    **\u672c\u6587\u76ee\u7684**\uff1a\u73b0\u5982\u4eca\u5fae\u670d\u52a1\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u800c\u5e02\u9762\u4e0a\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u65b9\u6848\u53ef\u8c13\u4e0d\u5c11\uff0c\u53c2\u5dee\u4e0d\u9f50\uff0c\u6bd4\u8f83\u6d41\u884c\u7684\u4ee5MQ\u4ee3\u8868\u7684\u4fdd\u8bc1\u7684\u662f\u6d88\u606f\u6700\u7ec8\u4e00\u81f4\u6027\u7684\u89e3\u51b3\u65b9\u6848\uff08\u6d88\u8d39\u786e\u8ba4\uff0c\u6d88\u606f\u56de\u67e5\uff0c\u6d88\u606f\u8865\u507f\u673a\u5236\u7b49\uff09\uff0c\u4ee5\u53caTX-LCN\u7684LCN\u6a21\u5f0f\u534f\u8c03\u672c\u5730\u4e8b\u52a1\u6765\u4fdd\u8bc1\u4e8b\u52a1\u7edf\u4e00\u63d0\u4ea4\u6216\u56de\u6eda\uff08\u5df2\u7ecf\u505c\u6b62\u66f4\u65b0\uff0c\u5bf9Dubbo2.7\u4e0d\u517c\u5bb9\uff09\u3002\u800cMQ\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u592a\u8fc7\u590d\u6742\uff0cTX-LCN\u65ad\u66f4\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u4e00\u4e2a\u9ad8\u6548\u53ef\u9760\u53ca\u6613\u4e0a\u624b\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0cSeata\u8131\u9896\u800c\u51fa\uff0c\u672c\u6587\u8981\u4ecb\u7ecd\u7684\u5c31\u662f\u5982\u4f55\u5feb\u901f\u642d\u5efa\u4e00\u4e2a\u6574\u5408Seata\u7684Demo\u9879\u76ee\uff0c\u4e00\u8d77\u6765\u5427\uff01\\n\\n# \u51c6\u5907\u5de5\u4f5c\\n\\n1.\u9996\u5148\u5b89\u88c5mysql,eclipse\u4e4b\u7c7b\u5e38\u7528\u7684\u5de5\u5177,\u8fd9\u4e0d\u5c55\u5f00\u4e86. \\n\\n2.\u8bbf\u95eeseata\u4e0b\u8f7d\u4e2d\u5fc3[\u5730\u5740](http://seata.io/zh-cn/blog/download.html)\u6211\u4eec\u4f7f\u7528\u76840.9.0\u7248\u672c\\n\\n3.\u4e0b\u8f7d\u5e76\u89e3\u538bseata-server\\n\\n## \u5efa\u5e93\u5efa\u8868\\n\\n1.\u9996\u5148\u6211\u4eec\u94fe\u63a5mysql\u521b\u5efa\u4e00\u4e2a\u540d\u4e3aseata\u7684\u6570\u636e\u5e93,\u7136\u540e\u8fd0\u884c\u4e00\u4e0b\u5efa\u8868sql,\u8fd9\u4e2a\u5728seata-server\u7684conf\u6587\u4ef6\u5939\u5185\u7684db_store.sql\u5c31\u662f\u6211\u7684\u6240\u9700\u8981\u4f7f\u7528\u7684sql\u4e86.\\n\\n```mysql\\n/*\\nNavicat MySQL Data Transfer\\nSource Server         : mysql\\nSource Server Version : 50721\\nSource Host           : localhost:3306\\nSource Database       : seata\\nTarget Server Type    : MYSQL\\nTarget Server Version : 50721\\nFile Encoding         : 65001\\nDate: 2019-11-23 22:03:18\\n*/\\n\\nSET FOREIGN_KEY_CHECKS=0;\\n\\n-- ----------------------------\\n\\n-- Table structure for branch_table\\n\\n-- ----------------------------\\n\\nDROP TABLE IF EXISTS `branch_table`;\\nCREATE TABLE `branch_table` (\\n  `branch_id` bigint(20) NOT NULL,\\n  `xid` varchar(128) NOT NULL,\\n  `transaction_id` bigint(20) DEFAULT NULL,\\n  `resource_group_id` varchar(32) DEFAULT NULL,\\n  `resource_id` varchar(256) DEFAULT NULL,\\n  `lock_key` varchar(128) DEFAULT NULL,\\n  `branch_type` varchar(8) DEFAULT NULL,\\n  `status` tinyint(4) DEFAULT NULL,\\n  `client_id` varchar(64) DEFAULT NULL,\\n  `application_data` varchar(2000) DEFAULT NULL,\\n  `gmt_create` datetime DEFAULT NULL,\\n  `gmt_modified` datetime DEFAULT NULL,\\n  PRIMARY KEY (`branch_id`),\\n  KEY `idx_xid` (`xid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\\n\\n-- ----------------------------\\n\\n-- Records of branch_table\\n\\n-- ----------------------------\\n\\n-- ----------------------------\\n\\n-- Table structure for global_table\\n\\n-- ----------------------------\\n\\nDROP TABLE IF EXISTS `global_table`;\\nCREATE TABLE `global_table` (\\n  `xid` varchar(128) NOT NULL,\\n  `transaction_id` bigint(20) DEFAULT NULL,\\n  `status` tinyint(4) NOT NULL,\\n  `application_id` varchar(32) DEFAULT NULL,\\n  `transaction_service_group` varchar(32) DEFAULT NULL,\\n  `transaction_name` varchar(128) DEFAULT NULL,\\n  `timeout` int(11) DEFAULT NULL,\\n  `begin_time` bigint(20) DEFAULT NULL,\\n  `application_data` varchar(2000) DEFAULT NULL,\\n  `gmt_create` datetime DEFAULT NULL,\\n  `gmt_modified` datetime DEFAULT NULL,\\n  PRIMARY KEY (`xid`),\\n  KEY `idx_gmt_modified_status` (`gmt_modified`,`status`),\\n  KEY `idx_transaction_id` (`transaction_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\\n\\n-- ----------------------------\\n\\n-- Records of global_table\\n\\n-- ----------------------------\\n\\n-- ----------------------------\\n\\n-- Table structure for lock_table\\n\\n-- ----------------------------\\n\\nDROP TABLE IF EXISTS `lock_table`;\\nCREATE TABLE `lock_table` (\\n  `row_key` varchar(128) NOT NULL,\\n  `xid` varchar(96) DEFAULT NULL,\\n  `transaction_id` mediumtext,\\n  `branch_id` mediumtext,\\n  `resource_id` varchar(256) DEFAULT NULL,\\n  `table_name` varchar(32) DEFAULT NULL,\\n  `pk` varchar(36) DEFAULT NULL,\\n  `gmt_create` datetime DEFAULT NULL,\\n  `gmt_modified` datetime DEFAULT NULL,\\n  PRIMARY KEY (`row_key`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\\n\\n-- ----------------------------\\n\\n-- Records of lock_table\\n\\n-- ----------------------------\\n\\n-- ----------------------------\\n\\n-- Table structure for undo_log\\n\\n-- ----------------------------\\n\\nDROP TABLE IF EXISTS `undo_log`;\\nCREATE TABLE `undo_log` (\\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\\n  `branch_id` bigint(20) NOT NULL,\\n  `xid` varchar(100) NOT NULL,\\n  `context` varchar(128) NOT NULL,\\n  `rollback_info` longblob NOT NULL,\\n  `log_status` int(11) NOT NULL,\\n  `log_created` datetime NOT NULL,\\n  `log_modified` datetime NOT NULL,\\n  `ext` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `ux_undo_log` (`xid`,`branch_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\\n\\n-- ----------------------------\\n\\n-- Records of undo_log\\n```\\n\\n2.\u8fd0\u884c\u5b8c\u4e0a\u9762\u7684seata\u6240\u9700\u8981\u7684\u6570\u636e\u5e93\u540e,\u6211\u4eec\u8fdb\u884c\u642d\u5efa\u6211\u4eec\u6240\u9700\u8981\u5199\u7684demo\u7684\u5e93,\u521b\u5efa\u4e00\u4e2a\u540d\u4e3atest\u7684\u6570\u636e\u5e93,\u7136\u540e\u6267\u884c\u4ee5\u4e0bsql\u4ee3\u7801:\\n\\n```mysql\\n/*\\nNavicat MySQL Data Transfer\\nSource Server         : mysql\\nSource Server Version : 50721\\nSource Host           : localhost:3306\\nSource Database       : test\\nTarget Server Type    : MYSQL\\nTarget Server Version : 50721\\nFile Encoding         : 65001\\nDate: 2019-11-23 22:03:24\\n*/\\n\\nSET FOREIGN_KEY_CHECKS=0;\\n\\n-- ----------------------------\\n\\n-- Table structure for test\\n\\n-- ----------------------------\\n\\nDROP TABLE IF EXISTS `test`;\\nCREATE TABLE `test` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT,\\n  `one` varchar(255) DEFAULT NULL,\\n  `two` varchar(255) DEFAULT NULL,\\n  `createTime` datetime DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4;\\n\\n-- ----------------------------\\n\\n-- Records of test\\n\\n-- ----------------------------\\n\\nINSERT INTO `test` VALUES (\'1\', \'1\', \'2\', \'2019-11-23 16:07:34\');\\n\\n-- ----------------------------\\n\\n-- Table structure for undo_log\\n\\n-- ----------------------------\\n\\nDROP TABLE IF EXISTS `undo_log`;\\nCREATE TABLE `undo_log` (\\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\\n  `branch_id` bigint(20) NOT NULL,\\n  `xid` varchar(100) NOT NULL,\\n  `context` varchar(128) NOT NULL,\\n  `rollback_info` longblob NOT NULL,\\n  `log_status` int(11) NOT NULL,\\n  `log_created` datetime NOT NULL,\\n  `log_modified` datetime NOT NULL,\\n  `ext` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `ux_undo_log` (`xid`,`branch_id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;\\n\\n-- ----------------------------\\n\\n-- Records of undo_log\\n```\\n\\n 3.\u6211\u4eec\u627e\u5230seata-server/conf \u6587\u4ef6\u5939\u5185\u7684file\u7f16\u8f91\u5b83:![20191129132933](/img/blog/20191129132933.png)\\n\\n 4.\u518d\u6b21\u627e\u5230\u5176\u4e2d\u7684db\u914d\u7f6e\u65b9\u6cd5\u5757,\u66f4\u6539\u65b9\u6cd5\u5982\u4e0b\u56fe:![](/img/blog/20191129133111.png)\\n\\n\u597d\u4e86,\u53ef\u4ee5\u5230bin\u76ee\u5f55\u53bb./seata-server.bat \u8fd0\u884c\u770b\u770b\u4e86 \\n\\n# \u521b\u5efa\u9879\u76ee\\n\\n\u200b\\t\u9996\u5148\u6211\u4eec\u4f7f\u7528\u7684\u662feclipse,\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u7528idea\u4e4b\u7c7b\u7684\u5de5\u5177,\u8be6\u7ec6\u8bf7\u6309\u4e0b\u9762\u6b65\u9aa4\u6765\u8fd0\u884c\\n\\n\u200b\\t1.\u521b\u5efa\u4e00\u4e2a\u65b0\u7684maven\u9879\u76ee,\u5e76\u5220\u9664\u591a\u4f59\u6587\u4ef6\u5939:![20191129133354](/img/blog/20191129133354.png)<img src=\\"/img/blog/20191129133441.png\\" alt=\\"20191129133441\\" style={{ zoom:\'150%\' }} />\\n\\n\u200b\\t2.\u6253\u5f00\u9879\u76ee\u7684pom.xml,\u52a0\u5165\u4ee5\u4e0b\u4f9d\u8d56:\\n\\n```java\\n\\t<properties>\\n\\t\\t<webVersion>3.1</webVersion>\\n\\t\\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\\n\\t\\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\\n\\t\\t<maven.compiler.source>1.8</maven.compiler.source>\\n\\t\\t<maven.compiler.target>1.8</maven.compiler.target>\\n\\t\\t<HikariCP.version>3.2.0</HikariCP.version>\\n\\t\\t<mybatis-plus-boot-starter.version>3.2.0</mybatis-plus-boot-starter.version>\\n\\t</properties>\\n\\t<parent>\\n\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t<artifactId>spring-boot-starter-parent</artifactId>\\n\\t\\t<version>2.1.8.RELEASE</version>\\n\\t</parent>\\n\\t<dependencies>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.apache.curator</groupId>\\n\\t\\t\\t<artifactId>curator-framework</artifactId>\\n\\t\\t\\t<version>4.2.0</version>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.apache.curator</groupId>\\n\\t\\t\\t<artifactId>curator-recipes</artifactId>\\n\\t\\t\\t<version>4.2.0</version>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.apache.dubbo</groupId>\\n\\t\\t\\t<artifactId>dubbo-spring-boot-starter</artifactId>\\n\\t\\t\\t<version>2.7.4.1</version>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.apache.commons</groupId>\\n\\t\\t\\t<artifactId>commons-lang3</artifactId>\\n\\t\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>com.alibaba</groupId>\\n\\t\\t\\t<artifactId>fastjson</artifactId>\\n\\t\\t\\t<version>1.2.60</version>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- <dependency> <groupId>javax</groupId> <artifactId>javaee-api</artifactId> \\n\\t\\t\\t<version>7.0</version> <scope>provided</scope> </dependency> --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>io.springfox</groupId>\\n\\t\\t\\t<artifactId>springfox-swagger2</artifactId>\\n\\t\\t\\t<version>2.9.2</version>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>io.springfox</groupId>\\n\\t\\t\\t<artifactId>springfox-swagger-ui</artifactId>\\n\\t\\t\\t<version>2.9.2</version>\\n\\t\\t</dependency>\\n \\n\\t\\t\x3c!-- mybatis-plus begin --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>com.baomidou</groupId>\\n\\t\\t\\t<artifactId>mybatis-plus-boot-starter</artifactId>\\n\\t\\t\\t<version>${mybatis-plus-boot-starter.version}</version>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- mybatis-plus end --\x3e\\n\\t\\t\x3c!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.projectlombok</groupId>\\n\\t\\t\\t<artifactId>lombok</artifactId>\\n\\t\\t\\t<scope>provided</scope>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>io.seata</groupId>\\n\\t\\t\\t<artifactId>seata-all</artifactId>\\n\\t\\t\\t<version>0.9.0.1</version>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- Zookeeper --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.apache.zookeeper</groupId>\\n\\t\\t\\t<artifactId>zookeeper</artifactId>\\n\\t\\t\\t<version>3.4.9</version>\\n\\t\\t\\t<exclusions>\\n\\t\\t\\t\\t<exclusion>\\n\\t\\t\\t\\t\\t<groupId>org.slf4j</groupId>\\n\\t\\t\\t\\t\\t<artifactId>slf4j-log4j12</artifactId>\\n\\t\\t\\t\\t</exclusion>\\n\\t\\t\\t</exclusions>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- <dependency> <groupId>com.baomidou</groupId> <artifactId>dynamic-datasource-spring-boot-starter</artifactId> \\n\\t\\t\\t<version>2.5.4</version> </dependency> --\x3e\\n \\n\\t\\t\x3c!-- <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-generator</artifactId> \\n\\t\\t\\t<version>3.1.0</version> </dependency> --\x3e\\n\\t\\t\x3c!-- https://mvnrepository.com/artifact/org.freemarker/freemarker --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.freemarker</groupId>\\n\\t\\t\\t<artifactId>freemarker</artifactId>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>com.alibaba</groupId>\\n\\t\\t\\t<artifactId>druid-spring-boot-starter</artifactId>\\n\\t\\t\\t<version>1.1.20</version>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- \u52a0\u4e0a\u8fd9\u4e2a\u624d\u80fd\u8fa8\u8ba4\u5230log4j2.yml\u6587\u4ef6 --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>com.fasterxml.jackson.dataformat</groupId>\\n\\t\\t\\t<artifactId>jackson-dataformat-yaml</artifactId>\\n\\t\\t</dependency>\\n\\t\\t<dependency> \x3c!-- \u5f15\u5165log4j2\u4f9d\u8d56 --\x3e\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-log4j2</artifactId>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>mysql</groupId>\\n\\t\\t\\t<artifactId>mysql-connector-java</artifactId>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-web</artifactId>\\n\\t\\t\\t<exclusions>\\n\\t\\t\\t\\t<exclusion>\\n\\t\\t\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t\\t\\t<artifactId>spring-boot-starter-logging</artifactId>\\n\\t\\t\\t\\t</exclusion>\\n\\t\\t\\t\\t<exclusion>\\n\\t\\t\\t\\t\\t<groupId>org.slf4j</groupId>\\n\\t\\t\\t\\t\\t<artifactId>slf4j-log4j12</artifactId>\\n\\t\\t\\t\\t</exclusion>\\n\\t\\t\\t</exclusions>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-aop</artifactId>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-test</artifactId>\\n\\t\\t\\t<scope>test</scope>\\n\\t\\t</dependency>\\n\\t\\t\x3c!-- <dependency> <groupId>org.scala-lang</groupId> <artifactId>scala-library</artifactId> \\n\\t\\t\\t<version>2.11.0</version> </dependency> --\x3e\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-configuration-processor</artifactId>\\n\\t\\t\\t<optional>true</optional>\\n\\t\\t</dependency>\\n\\t</dependencies>\\n\\n```\\n\\n\u200b\\t3.\u518d\u5207\u6362\u7236\u9879\u76ee\u4e3apom\u6a21\u5f0f,\u8fd8\u662fpom\u6587\u4ef6,\u5207\u6362\u4e3a overview ,\u505a\u5982\u56fe\u64cd\u4f5c:![20191129134127](/img/blog/20191129134127.png)\\n\\n4.\u521b\u5efa\u6211\u4eec\u7684demo\u5b50\u9879\u76ee,test-service:![20191129135935](/img/blog/20191129135935.png)\\n\\n\u200b\\t\u76ee\u5f55\u5982\u4e0b:\\n\\n<img src=\\"/img/blog/20191129140048.png\\" alt=\\"20191129140048\\"  style={{ zoom:\'200%\' }} />\\n\\n \\t\u521b\u5efaEmbeddedZooKeeper.java\u6587\u4ef6,\u8ddf ProviderApplication.java,\u4ee3\u7801\u5982\u4e0b:\\n\\n```java\\npackage org.test;\\n \\nimport java.io.File;\\nimport java.lang.reflect.Method;\\nimport java.util.Properties;\\nimport java.util.UUID;\\n \\nimport org.apache.zookeeper.server.ServerConfig;\\nimport org.apache.zookeeper.server.ZooKeeperServerMain;\\nimport org.apache.zookeeper.server.quorum.QuorumPeerConfig;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\nimport org.springframework.context.SmartLifecycle;\\nimport org.springframework.util.ErrorHandler;\\nimport org.springframework.util.SocketUtils;\\n \\n/**\\n * from:\\n * https://github.com/spring-projects/spring-xd/blob/v1.3.1.RELEASE/spring-xd-dirt/src/main/java/org/springframework/xd/dirt/zookeeper/ZooKeeperUtils.java\\n * \\n * Helper class to start an embedded instance of standalone (non clustered) ZooKeeper.\\n * \\n * NOTE: at least an external standalone server (if not an ensemble) are recommended, even for\\n * {@link org.springframework.xd.dirt.server.singlenode.SingleNodeApplication}\\n * \\n * @author Patrick Peralta\\n * @author Mark Fisher\\n * @author David Turanski\\n */\\npublic class EmbeddedZooKeeper implements SmartLifecycle {\\n \\n    /**\\n     * Logger.\\n     */\\n    private static final Logger logger = LoggerFactory.getLogger(EmbeddedZooKeeper.class);\\n \\n    /**\\n     * ZooKeeper client port. This will be determined dynamically upon startup.\\n     */\\n    private final int clientPort;\\n \\n    /**\\n     * Whether to auto-start. Default is true.\\n     */\\n    private boolean autoStartup = true;\\n \\n    /**\\n     * Lifecycle phase. Default is 0.\\n     */\\n    private int phase = 0;\\n \\n    /**\\n     * Thread for running the ZooKeeper server.\\n     */\\n    private volatile Thread zkServerThread;\\n \\n    /**\\n     * ZooKeeper server.\\n     */\\n    private volatile ZooKeeperServerMain zkServer;\\n \\n    /**\\n     * {@link ErrorHandler} to be invoked if an Exception is thrown from the ZooKeeper server thread.\\n     */\\n    private ErrorHandler errorHandler;\\n \\n    private boolean daemon = true;\\n \\n    /**\\n     * Construct an EmbeddedZooKeeper with a random port.\\n     */\\n    public EmbeddedZooKeeper() {\\n        clientPort = SocketUtils.findAvailableTcpPort();\\n    }\\n \\n    /**\\n     * Construct an EmbeddedZooKeeper with the provided port.\\n     *\\n     * @param clientPort\\n     *            port for ZooKeeper server to bind to\\n     */\\n    public EmbeddedZooKeeper(int clientPort, boolean daemon) {\\n        this.clientPort = clientPort;\\n        this.daemon = daemon;\\n    }\\n \\n    /**\\n     * Returns the port that clients should use to connect to this embedded server.\\n     * \\n     * @return dynamically determined client port\\n     */\\n    public int getClientPort() {\\n        return this.clientPort;\\n    }\\n \\n    /**\\n     * Specify whether to start automatically. Default is true.\\n     * \\n     * @param autoStartup\\n     *            whether to start automatically\\n     */\\n    public void setAutoStartup(boolean autoStartup) {\\n        this.autoStartup = autoStartup;\\n    }\\n \\n    /**\\n     * {@inheritDoc}\\n     */\\n    public boolean isAutoStartup() {\\n        return this.autoStartup;\\n    }\\n \\n    /**\\n     * Specify the lifecycle phase for the embedded server.\\n     * \\n     * @param phase\\n     *            the lifecycle phase\\n     */\\n    public void setPhase(int phase) {\\n        this.phase = phase;\\n    }\\n \\n    /**\\n     * {@inheritDoc}\\n     */\\n    public int getPhase() {\\n        return this.phase;\\n    }\\n \\n    /**\\n     * {@inheritDoc}\\n     */\\n    public boolean isRunning() {\\n        return (zkServerThread != null);\\n    }\\n \\n    /**\\n     * Start the ZooKeeper server in a background thread.\\n     * <p>\\n     * Register an error handler via {@link #setErrorHandler} in order to handle any exceptions thrown during startup or\\n     * execution.\\n     */\\n    public synchronized void start() {\\n        if (zkServerThread == null) {\\n            zkServerThread = new Thread(new ServerRunnable(), \\"ZooKeeper Server Starter\\");\\n            zkServerThread.setDaemon(daemon);\\n            zkServerThread.start();\\n        }\\n    }\\n \\n    /**\\n     * Shutdown the ZooKeeper server.\\n     */\\n    public synchronized void stop() {\\n        if (zkServerThread != null) {\\n            // The shutdown method is protected...thus this hack to invoke it.\\n            // This will log an exception on shutdown; see\\n            // https://issues.apache.org/jira/browse/ZOOKEEPER-1873 for details.\\n            try {\\n                Method shutdown = ZooKeeperServerMain.class.getDeclaredMethod(\\"shutdown\\");\\n                shutdown.setAccessible(true);\\n                shutdown.invoke(zkServer);\\n            }\\n \\n            catch (Exception e) {\\n                throw new RuntimeException(e);\\n            }\\n \\n            // It is expected that the thread will exit after\\n            // the server is shutdown; this will block until\\n            // the shutdown is complete.\\n            try {\\n                zkServerThread.join(5000);\\n                zkServerThread = null;\\n            } catch (InterruptedException e) {\\n                Thread.currentThread().interrupt();\\n                logger.warn(\\"Interrupted while waiting for embedded ZooKeeper to exit\\");\\n                // abandoning zk thread\\n                zkServerThread = null;\\n            }\\n        }\\n    }\\n \\n    /**\\n     * Stop the server if running and invoke the callback when complete.\\n     */\\n    public void stop(Runnable callback) {\\n        stop();\\n        callback.run();\\n    }\\n \\n    /**\\n     * Provide an {@link ErrorHandler} to be invoked if an Exception is thrown from the ZooKeeper server thread. If none\\n     * is provided, only error-level logging will occur.\\n     * \\n     * @param errorHandler\\n     *            the {@link ErrorHandler} to be invoked\\n     */\\n    public void setErrorHandler(ErrorHandler errorHandler) {\\n        this.errorHandler = errorHandler;\\n    }\\n \\n    /**\\n     * Runnable implementation that starts the ZooKeeper server.\\n     */\\n    private class ServerRunnable implements Runnable {\\n \\n        public void run() {\\n            try {\\n                Properties properties = new Properties();\\n                File file = new File(System.getProperty(\\"java.io.tmpdir\\") + File.separator + UUID.randomUUID());\\n                file.deleteOnExit();\\n                properties.setProperty(\\"dataDir\\", file.getAbsolutePath());\\n                properties.setProperty(\\"clientPort\\", String.valueOf(clientPort));\\n \\n                QuorumPeerConfig quorumPeerConfig = new QuorumPeerConfig();\\n                quorumPeerConfig.parseProperties(properties);\\n \\n                zkServer = new ZooKeeperServerMain();\\n                ServerConfig configuration = new ServerConfig();\\n                configuration.readFrom(quorumPeerConfig);\\n \\n                zkServer.runFromConfig(configuration);\\n            } catch (Exception e) {\\n                if (errorHandler != null) {\\n                    errorHandler.handleError(e);\\n                } else {\\n                    logger.error(\\"Exception running embedded ZooKeeper\\", e);\\n                }\\n            }\\n        }\\n    }\\n \\n}\\n\\n```\\n\\n```java\\npackage org.test;\\n \\nimport org.apache.dubbo.config.spring.context.annotation.DubboComponentScan;\\nimport org.springframework.boot.SpringApplication;\\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\\nimport org.springframework.context.annotation.ComponentScan;\\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\\n \\n/**\\n * \\n * @author cjb\\n * @date 2019/10/24\\n */\\n@EnableTransactionManagement\\n@ComponentScan(basePackages = {\\"org.test.config\\", \\"org.test.service.impl\\"})\\n@DubboComponentScan(basePackages = \\"org.test.service.impl\\")\\n@SpringBootApplication\\npublic class ProviderApplication {\\n \\n    public static void main(String[] args) {\\n        new EmbeddedZooKeeper(2181, false).start();\\n        SpringApplication app = new SpringApplication(ProviderApplication.class);\\n        app.run(args);\\n    }\\n \\n}\\n\\n```\\n\\n \\t\u521b\u5efa\u5b9e\u4f53\u5305 org.test.entity\u4ee5\u53ca\u521b\u5efa\u5b9e\u4f53\u7c7bTest \u7528\u5230\u4e86lombok,\u8be6\u7ec6\u767e\u5ea6\u4e00\u4e0b,eclipse\u88c5lombok\u63d2\u4ef6\\n\\n```java\\npackage org.test.entity;\\n \\nimport java.io.Serializable;\\nimport java.time.LocalDateTime;\\n \\nimport com.baomidou.mybatisplus.annotation.IdType;\\nimport com.baomidou.mybatisplus.annotation.TableField;\\nimport com.baomidou.mybatisplus.annotation.TableId;\\n \\nimport io.swagger.annotations.ApiModel;\\nimport io.swagger.annotations.ApiModelProperty;\\nimport lombok.Data;\\nimport lombok.EqualsAndHashCode;\\nimport lombok.experimental.Accessors;\\n \\n/**\\n * <p>\\n * \u529f\u80fd\\n * </p>\\n *\\n * @author Funkye\\n * @since 2019-04-23\\n */\\n@Data\\n@EqualsAndHashCode(callSuper = false)\\n@Accessors(chain = true)\\n@ApiModel(value = \\"test\u5bf9\u8c61\\", description = \\"\u529f\u80fd\\")\\npublic class Test implements Serializable {\\n \\n    private static final long serialVersionUID = 1L;\\n \\n    @ApiModelProperty(value = \\"\u4e3b\u952e\\")\\n    @TableId(value = \\"id\\", type = IdType.AUTO)\\n    private Integer id;\\n \\n    @ApiModelProperty(value = \\"one\\")\\n    @TableField(\\"one\\")\\n    private String one;\\n \\n    @ApiModelProperty(value = \\"two\\")\\n    @TableField(\\"two\\")\\n    private String two;\\n \\n    @ApiModelProperty(value = \\"createTime\\")\\n    @TableField(\\"createTime\\")\\n    private LocalDateTime createTime;\\n \\n}\\n\\n```\\n\\n\u200b\\t\u521b\u5efaservice,service.impl,mapper\u7b49\u5305,\u4f9d\u6b21\u521b\u5efaITestservice,\u4ee5\u53ca\u5b9e\u73b0\u7c7b,mapper\\n\\n```java\\npackage org.test.service;\\n \\nimport org.test.entity.Test;\\n \\nimport com.baomidou.mybatisplus.extension.service.IService; \\n \\n/**\\n * <p>\\n * \u529f\u80fd \u670d\u52a1\u7c7b\\n * </p>\\n *\\n * @author Funkye\\n * @since 2019-04-10\\n */\\npublic interface ITestService extends IService<Test> {\\n \\n}\\n\\n```\\n\\n```java\\npackage org.test.service.impl;\\n \\n \\n \\n \\nimport org.apache.dubbo.config.annotation.Service;\\nimport org.test.entity.Test;\\nimport org.test.mapper.TestMapper;\\nimport org.test.service.ITestService;\\n \\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\\n \\n@Service(version = \\"1.0.0\\",interfaceClass =ITestService.class )\\npublic class TestServiceImpl extends ServiceImpl<TestMapper, Test> implements ITestService {\\n \\n}\\n\\n```\\n\\n```java\\npackage org.test.mapper;\\n \\nimport org.test.entity.Test; \\n \\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\\n \\n/**\\n * <p>\\n * \u529f\u80fd Mapper \u63a5\u53e3\\n * </p>\\n *\\n * @author Funkye\\n * @since 2019-04-10\\n */\\npublic interface TestMapper extends BaseMapper<Test> {\\n \\n}\\n\\n```\\n\\n \\t\u521b\u5efaorg.test.config\u5305,\u521b\u5efaSeataAutoConfig.java,\u914d\u7f6e\u4fe1\u606f\u90fd\u5728\u6b64\u5904,\u4e3b\u8981\u4f5c\u7528\u4e3a\u4ee3\u7406\u6570\u636e,\u8fde\u63a5\u4e8b\u52a1\u670d\u52a1\u5206\u7ec4 \\n\\n```java\\npackage org.test.config;\\n\\nimport javax.sql.DataSource;\\n\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.beans.factory.annotation.Qualifier;\\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;\\nimport org.springframework.context.annotation.Bean;\\nimport org.springframework.context.annotation.Configuration;\\nimport org.springframework.context.annotation.Primary;\\n\\nimport com.alibaba.druid.pool.DruidDataSource;\\n\\nimport io.seata.rm.datasource.DataSourceProxy;\\nimport io.seata.spring.annotation.GlobalTransactionScanner;\\n\\n@Configuration\\npublic class SeataAutoConfig {\\n\\t@Autowired(required = true)\\n\\tprivate DataSourceProperties dataSourceProperties;\\n\\tprivate final static Logger logger = LoggerFactory.getLogger(SeataAutoConfig.class);\\n\\n\\t@Bean(name = \\"druidDataSource\\") // \u58f0\u660e\u5176\u4e3aBean\u5b9e\u4f8b\\n\\tpublic DataSource druidDataSource() {\\n\\t\\tDruidDataSource druidDataSource = new DruidDataSource();\\n\\t\\tlogger.info(\\"dataSourceProperties.getUrl():{}\\", dataSourceProperties.getUrl());\\n\\t\\tdruidDataSource.setUrl(dataSourceProperties.getUrl());\\n\\t\\tdruidDataSource.setUsername(dataSourceProperties.getUsername());\\n\\t\\tdruidDataSource.setPassword(dataSourceProperties.getPassword());\\n\\t\\tdruidDataSource.setDriverClassName(dataSourceProperties.getDriverClassName());\\n\\t\\tdruidDataSource.setInitialSize(0);\\n\\t\\tdruidDataSource.setMaxActive(180);\\n\\t\\tdruidDataSource.setMaxWait(60000);\\n\\t\\tdruidDataSource.setMinIdle(0);\\n\\t\\tdruidDataSource.setValidationQuery(\\"Select 1 from DUAL\\");\\n\\t\\tdruidDataSource.setTestOnBorrow(false);\\n\\t\\tdruidDataSource.setTestOnReturn(false);\\n\\t\\tdruidDataSource.setTestWhileIdle(true);\\n\\t\\tdruidDataSource.setTimeBetweenEvictionRunsMillis(60000);\\n\\t\\tdruidDataSource.setMinEvictableIdleTimeMillis(25200000);\\n\\t\\tdruidDataSource.setRemoveAbandoned(true);\\n\\t\\tdruidDataSource.setRemoveAbandonedTimeout(1800);\\n\\t\\tdruidDataSource.setLogAbandoned(true);\\n\\t\\tlogger.info(\\"\u88c5\u8f7ddataSource........\\");\\n\\t\\treturn druidDataSource;\\n\\t}\\n\\n\\t/**\\n\\t * init datasource proxy\\n\\t * \\n\\t * @Param: druidDataSource datasource bean instance\\n\\t * @Return: DataSourceProxy datasource proxy\\n\\t */\\n\\t@Bean(name = \\"dataSource\\")\\n\\t@Primary // \u5728\u540c\u6837\u7684DataSource\u4e2d\uff0c\u9996\u5148\u4f7f\u7528\u88ab\u6807\u6ce8\u7684DataSource\\n\\tpublic DataSourceProxy dataSourceProxy(@Qualifier(value = \\"druidDataSource\\") DruidDataSource druidDataSource) {\\n\\t\\tlogger.info(\\"\u4ee3\u7406dataSource........\\");\\n\\t\\treturn new DataSourceProxy(druidDataSource);\\n\\t}\\n\\n\\t/**\\n\\t * init global transaction scanner\\n\\t *\\n\\t * @Return: GlobalTransactionScanner\\n\\t */\\n\\t@Bean\\n\\tpublic GlobalTransactionScanner globalTransactionScanner() {\\n\\t\\tlogger.info(\\"\u914d\u7f6eseata........\\");\\n\\t\\treturn new GlobalTransactionScanner(\\"test-service\\", \\"test-group\\");\\n\\t}\\n}\\n```\\n\\n \\t\u518d\u521b\u5efamybatisplus\u6240\u9700\u7684\u914d\u7f6e\u6587\u4ef6MybatisPlusConfig  \\n\\n```java\\npackage org.test.config;\\n \\nimport java.util.ArrayList;\\nimport java.util.List;\\n \\nimport org.mybatis.spring.mapper.MapperScannerConfigurer;\\nimport org.springframework.context.annotation.Bean;\\nimport org.springframework.context.annotation.Configuration;\\n \\nimport com.baomidou.mybatisplus.core.parser.ISqlParser;\\nimport com.baomidou.mybatisplus.extension.parsers.BlockAttackSqlParser;\\nimport com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;\\n \\n@Configuration\\n// @MapperScan(\\"com.baomidou.springboot.mapper*\\")//\u8fd9\u4e2a\u6ce8\u89e3\uff0c\u4f5c\u7528\u76f8\u5f53\u4e8e\u4e0b\u9762\u7684@Bean\\n// MapperScannerConfigurer\uff0c2\u8005\u914d\u7f6e1\u4efd\u5373\u53ef\\npublic class MybatisPlusConfig {\\n \\n    /**\\n     * mybatis-plus\u5206\u9875\u63d2\u4ef6<br>\\n     * \u6587\u6863\uff1ahttp://mp.baomidou.com<br>\\n     */\\n    @Bean\\n    public PaginationInterceptor paginationInterceptor() {\\n        PaginationInterceptor paginationInterceptor = new PaginationInterceptor();\\n        List<ISqlParser> sqlParserList = new ArrayList<ISqlParser>();\\n        // \u653b\u51fb SQL \u963b\u65ad\u89e3\u6790\u5668\u3001\u52a0\u5165\u89e3\u6790\u94fe\\n        sqlParserList.add(new BlockAttackSqlParser());\\n        paginationInterceptor.setSqlParserList(sqlParserList);\\n        return paginationInterceptor;\\n    }\\n \\n    /**\\n     * \u76f8\u5f53\u4e8e\u9876\u90e8\u7684\uff1a {@code @MapperScan(\\"com.baomidou.springboot.mapper*\\")} \u8fd9\u91cc\u53ef\u4ee5\u6269\u5c55\uff0c\u6bd4\u5982\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u6765\u914d\u7f6e\u626b\u63cfMapper\u7684\u8def\u5f84\\n     */\\n \\n    @Bean\\n    public MapperScannerConfigurer mapperScannerConfigurer() {\\n        MapperScannerConfigurer scannerConfigurer = new MapperScannerConfigurer();\\n        scannerConfigurer.setBasePackage(\\"org.test.mapper\\");\\n        return scannerConfigurer;\\n    }\\n \\n}\\n\\n```\\n\\n\u200b\\t \u518d\u521b\u5efa**resources\u76ee\u5f55,\u521b\u5efamapper\u6587\u4ef6\u5939,application.yml\u7b49\u6587\u4ef6** \\n\\n```yaml\\nserver:\\n  port: 38888\\nspring:\\n  application: \\n      name: test-service\\n  datasource:\\n    type: com.alibaba.druid.pool.DruidDataSource\\n    url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\n    username: root\\n    password: 123456\\ndubbo:\\n  protocol:\\n    loadbalance: leastactive\\n    threadpool: cached\\n  scan:\\n    base-packages: org\u3002test.service\\n  application:\\n    qos-enable: false\\n    name: testserver\\n  registry:\\n    id: my-registry\\n    address:  zookeeper://127.0.0.1:2181?client=curator\\nmybatis-plus:\\n  mapper-locations: classpath:/mapper/*Mapper.xml\\n  typeAliasesPackage: org.test.entity\\n  global-config:\\n    db-config:\\n      field-strategy: not-empty\\n      id-type: auto\\n      db-type: mysql\\n  configuration:\\n    map-underscore-to-camel-case: true\\n    cache-enabled: true      \\n    auto-mapping-unknown-column-behavior: none\\n\\n```\\n\\n\u200b\\t \u521b\u5efafile.conf,\u6b64\u5904\u7684service \u5185\u7684vgroup_mapping.\u4f60\u7684\u4e8b\u52a1\u5206\u7ec4,\u6bd4\u5982\u4e0a**\u9762SeataAutoConfig\u5185\u914d\u7f6e\u4e86test-group,\u90a3\u4e48\u8fd9\u91cc\u4e5f\u8981\u6539\u4e3atest-group**,\u7136\u540e\u4e0b\u9762ip\u7aef\u53e3\u90fd\u662fseata\u8fd0\u884c\u7684ip\u8ddf\u7aef\u53e3\u5c31\u884c\u4e86 \\n\\n```java\\ntransport {\\n  type = \\"TCP\\"\\n  server = \\"NIO\\"\\n  heartbeat = true\\n  thread-factory {\\n    boss-thread-prefix = \\"NettyBoss\\"\\n    worker-thread-prefix = \\"NettyServerNIOWorker\\"\\n    server-executor-thread-prefix = \\"NettyServerBizHandler\\"\\n    share-boss-worker = false\\n    client-selector-thread-prefix = \\"NettyClientSelector\\"\\n    client-selector-thread-size = 1\\n    client-worker-thread-prefix = \\"NettyClientWorkerThread\\"\\n    boss-thread-size = 1\\n    worker-thread-size = 8\\n  }\\n  shutdown {\\n    wait = 3\\n  }\\n  serialization = \\"seata\\"\\n  compressor = \\"none\\"\\n}\\nservice {\\n  vgroup_mapping.test-group = \\"default\\"\\n  default.grouplist = \\"127.0.0.1:8091\\"\\n  enableDegrade = false\\n  disable = false\\n  max.commit.retry.timeout = \\"-1\\"\\n  max.rollback.retry.timeout = \\"-1\\"\\n}\\n \\nclient {\\n  async.commit.buffer.limit = 10000\\n  lock {\\n    retry.internal = 10\\n    retry.times = 30\\n  }\\n  report.retry.count = 5\\n  tm.commit.retry.count = 1\\n  tm.rollback.retry.count = 1\\n  undo.log.table = \\"undo_log\\"\\n}\\n \\nrecovery {\\n  committing-retry-period = 1000\\n  asyn-committing-retry-period = 1000\\n  rollbacking-retry-period = 1000\\n  timeout-retry-period = 1000\\n}\\n \\ntransaction {\\n  undo.data.validation = true\\n  undo.log.serialization = \\"jackson\\"\\n  undo.log.save.days = 7\\n  undo.log.delete.period = 86400000\\n  undo.log.table = \\"undo_log\\"\\n}\\n \\nmetrics {\\n  enabled = false\\n  registry-type = \\"compact\\"\\n  exporter-list = \\"prometheus\\"\\n  exporter-prometheus-port = 9898\\n}\\n \\nsupport {\\n  spring {\\n    datasource.autoproxy = false\\n  }\\n}\\n\\n```\\n\\n \u521b\u5efaregistry.conf,\u6765\u6307\u5b9afile,zk\u7684ip\u7aef\u53e3\u4e4b\u7c7b\u7684\u914d\u7f6e \\n\\n```java\\nregistry {\\n  type = \\"file\\"\\n  file {\\n    name = \\"file.conf\\"\\n  }\\n}\\nconfig {\\n  type = \\"file\\"\\n  file {\\n    name = \\"file.conf\\"\\n  }\\n  zk {\\n    serverAddr = \\"127.0.0.1:2181\\"\\n    session.timeout = 6000\\n    connect.timeout = 2000\\n  }\\n}\\n\\n```\\n\\n\u200b\\t \u5927\u529f\u544a\u6210,\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u5566,\u8fd9\u65f6\u5019\u89c2\u5bdfseata-server![20191129142115](/img/blog/20191129142115.png)\\n\\n\u200b\\t\u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efatest-client\u9879\u76ee\u9879\u76ee,\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86,\u8ddf\u4e0a\u9762\u7684test-service\u4e00\u6837\u7684\u521b\u5efa\u65b9\u5f0f\\n\\n\u200b\\t\u63a5\u4e0b\u6765\u6211\u4eec\u590d\u5236test-service\u5185\u7684service\u8ddf\u5b9e\u4f53\u8fc7\u53bb,\u5f53\u7136\u4f60\u5acc\u9ebb\u70e6,\u53ef\u4ee5\u5355\u72ec\u641e\u4e2a\u5b50\u9879\u76ee\u653e\u901a\u7528\u7684service\u8ddf\u5b9e\u4f53,\u4e00\u4e9b\u5de5\u5177\u7c7b\u7b49\u7b49,\u6211\u8fd9\u8fb9\u4e3a\u4e86\u5feb\u901f\u642d\u5efa\u8fd9\u4e2ademo,\u5c31\u9009\u62e9\u590d\u5236\u9ecf\u8d34\u7684\u65b9\u5f0f\u4e86.\\n\\n\u76ee\u5f55\u7ed3\u6784:![](/img/blog/20191129142349.png)\\n\\n \\t\u7136\u540e\u6211\u4eec\u521b\u5efaClientApplication:\\n\\n```java\\npackage org.test;\\n \\nimport java.util.TimeZone;\\nimport java.util.concurrent.Executor;\\n \\nimport org.apache.dubbo.config.spring.context.annotation.EnableDubbo;\\nimport org.springframework.boot.SpringApplication;\\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;\\nimport org.springframework.context.annotation.Bean;\\nimport org.springframework.context.annotation.ComponentScan;\\nimport org.springframework.context.annotation.Configuration;\\nimport org.springframework.scheduling.annotation.EnableAsync;\\nimport org.springframework.scheduling.annotation.EnableScheduling;\\nimport org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\\n \\nimport com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration;\\n \\n@SpringBootApplication(exclude = {DataSourceAutoConfiguration.class, MybatisPlusAutoConfiguration.class})\\n@EnableScheduling\\n@EnableAsync\\n@Configuration\\n@EnableDubbo(scanBasePackages = {\\"org.test.service\\"})\\n@ComponentScan(basePackages = {\\"org.test.service\\", \\"org.test.controller\\", \\"org.test.config\\"})\\npublic class ClientApplication {\\n    public static void main(String[] args) {\\n        TimeZone.setDefault(TimeZone.getTimeZone(\\"Asia/Shanghai\\"));\\n        SpringApplication app = new SpringApplication(ClientApplication.class);\\n        app.run(args);\\n    }\\n \\n    @Bean(name = \\"threadPoolTaskExecutor\\")\\n    public Executor threadPoolTaskExecutor() {\\n        return new ThreadPoolTaskExecutor();\\n    }\\n}\\n\\n```\\n\\n \u518d\u5230config\u5305\u5185\u521b\u5efaSwaggerConfig :\\n\\n```java\\npackage org.test.config;\\n \\nimport java.util.ArrayList;\\nimport java.util.List;\\n \\nimport org.springframework.context.annotation.Bean;\\nimport org.springframework.context.annotation.Configuration;\\n \\nimport springfox.documentation.builders.ApiInfoBuilder;\\nimport springfox.documentation.builders.PathSelectors;\\nimport springfox.documentation.builders.RequestHandlerSelectors;\\nimport springfox.documentation.service.ApiInfo;\\nimport springfox.documentation.service.Contact;\\nimport springfox.documentation.service.Parameter;\\nimport springfox.documentation.spi.DocumentationType;\\nimport springfox.documentation.spring.web.plugins.Docket;\\nimport springfox.documentation.swagger2.annotations.EnableSwagger2;\\n \\n@Configuration\\n@EnableSwagger2\\npublic class SwaggerConfig {\\n    // swagger2\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8fd9\u91cc\u53ef\u4ee5\u914d\u7f6eswagger2\u7684\u4e00\u4e9b\u57fa\u672c\u7684\u5185\u5bb9\uff0c\u6bd4\u5982\u626b\u63cf\u7684\u5305\u7b49\u7b49\\n    @Bean\\n    public Docket createRestApi() {\\n        List<Parameter> pars = new ArrayList<Parameter>();\\n        return new Docket(DocumentationType.SWAGGER_2).apiInfo(apiInfo()).select()\\n            // \u4e3a\u5f53\u524d\u5305\u8def\u5f84\\n            .apis(RequestHandlerSelectors.basePackage(\\"org.test.controller\\")).paths(PathSelectors.any()).build()\\n            .globalOperationParameters(pars);\\n    }\\n \\n    // \u6784\u5efa api\u6587\u6863\u7684\u8be6\u7ec6\u4fe1\u606f\u51fd\u6570,\u6ce8\u610f\u8fd9\u91cc\u7684\u6ce8\u89e3\u5f15\u7528\u7684\u662f\u54ea\u4e2a\\n    private ApiInfo apiInfo() {\\n        return new ApiInfoBuilder()\\n            // \u9875\u9762\u6807\u9898\\n            .title(\\"\u9879\u76ee\u63a5\u53e3\\")\\n            // \u521b\u5efa\u4eba\\n            .contact(new Contact(\\"FUNKYE\\", \\"\\", \\"\\"))\\n            // \u7248\u672c\u53f7\\n            .version(\\"1.0\\")\\n            // \u63cf\u8ff0\\n            .description(\\"API \u63cf\u8ff0\\").build();\\n    }\\n}\\n\\n```\\n\\n\u200b\\t\u518d\u521b\u5efaSpringMvcConfigure,\u518d\u91cc\u9762\u653e\u5165seata\u7684\u914d\u7f6e,\u6211\u4e3a\u4e86\u5077\u61d2\u76f4\u63a5\u96c6\u6210\u5728mvc\u914d\u7f6e\u7684\u7c7b\u91cc\u4e86,\u5927\u5bb6\u89c4\u8303\u70b9\u53ef\u4ee5\u53e6\u5916\u521b\u5efa\u4e2a\u914d\u7f6eseata\u7684\u7c7b,\u5927\u5bb6\u53ef\u4ee5\u53d1\u73b0\u4e0b\u9762\u8fd8\u662f\u6709\u4e2a\u7ec4\u540d\u79f0,\u6211\u628a\u4e24\u4e2a\u9879\u76ee\u90fd\u5206\u914d\u5230\u4e00\u4e2a\u7ec4\u53bb,\u8c8c\u4f3c\u53e6\u5916\u53d6\u4e00\u4e2a\u4e5f\u6ca1\u4e8b\u7684. \\n\\n```java\\npackage org.test.config;\\n \\nimport java.nio.charset.Charset; \\nimport java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Map;\\n \\nimport org.apache.dubbo.config.annotation.Reference;\\nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\\nimport org.springframework.context.annotation.Bean;\\nimport org.springframework.context.annotation.Configuration;\\nimport org.springframework.core.Ordered;\\nimport org.springframework.http.MediaType;\\nimport org.springframework.http.converter.HttpMessageConverter;\\nimport org.springframework.http.converter.StringHttpMessageConverter;\\nimport org.springframework.web.cors.CorsConfiguration;\\nimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;\\nimport org.springframework.web.filter.CorsFilter;\\nimport org.springframework.web.servlet.HandlerInterceptor;\\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\\nimport org.springframework.web.servlet.view.InternalResourceViewResolver;\\n \\nimport com.alibaba.fastjson.serializer.SerializerFeature;\\nimport com.alibaba.fastjson.support.config.FastJsonConfig;\\nimport com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter;\\nimport com.google.common.collect.Maps;\\n \\nimport io.seata.spring.annotation.GlobalTransactionScanner;\\n \\n@Configuration\\npublic class SpringMvcConfigure implements WebMvcConfigurer {\\n \\n    @Bean\\n    public FilterRegistrationBean corsFilter() {\\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\\n        CorsConfiguration config = new CorsConfiguration();\\n        config.setAllowCredentials(true);\\n        config.addAllowedOrigin(\\"*\\");\\n        config.addAllowedHeader(CorsConfiguration.ALL);\\n        config.addAllowedMethod(CorsConfiguration.ALL);\\n        source.registerCorsConfiguration(\\"/**\\", config);\\n        FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean(new CorsFilter(source));\\n        filterRegistrationBean.setOrder(Ordered.HIGHEST_PRECEDENCE);\\n        filterRegistrationBean.setOrder(1);\\n        filterRegistrationBean.setEnabled(true);\\n        filterRegistrationBean.addUrlPatterns(\\"/**\\");\\n        Map<String, String> initParameters = Maps.newHashMap();\\n        initParameters.put(\\"excludes\\", \\"/favicon.ico,/img/*,/js/*,/css/*\\");\\n        initParameters.put(\\"isIncludeRichText\\", \\"true\\");\\n        filterRegistrationBean.setInitParameters(initParameters);\\n        return filterRegistrationBean;\\n    }\\n \\n    @Bean\\n    public InternalResourceViewResolver viewResolver() {\\n        InternalResourceViewResolver viewResolver = new InternalResourceViewResolver();\\n        viewResolver.setPrefix(\\"/WEB-INF/jsp/\\");\\n        viewResolver.setSuffix(\\".jsp\\");\\n        // viewResolver.setViewClass(JstlView.class);\\n        // \u8fd9\u4e2a\u5c5e\u6027\u901a\u5e38\u5e76\u4e0d\u9700\u8981\u624b\u52a8\u914d\u7f6e\uff0c\u9ad8\u7248\u672c\u7684Spring\u4f1a\u81ea\u52a8\u68c0\u6d4b\\n        return viewResolver;\\n    }\\n \\n \\n \\n    /**\\n     * \u66ff\u6362\u6846\u67b6json\u4e3afastjson\\n     */\\n    @Override\\n    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\\n        FastJsonHttpMessageConverter fastConverter = new FastJsonHttpMessageConverter();\\n        FastJsonConfig fastJsonConfig = new FastJsonConfig();\\n        fastJsonConfig.setSerializerFeatures(SerializerFeature.PrettyFormat, SerializerFeature.WriteMapNullValue,\\n            SerializerFeature.WriteNullStringAsEmpty, SerializerFeature.DisableCircularReferenceDetect);\\n        // \u5904\u7406\u4e2d\u6587\u4e71\u7801\u95ee\u9898\\n        List<MediaType> fastMediaTypes = new ArrayList<>();\\n        fastMediaTypes.add(MediaType.APPLICATION_JSON_UTF8);\\n        fastConverter.setSupportedMediaTypes(fastMediaTypes);\\n        fastConverter.setFastJsonConfig(fastJsonConfig);\\n        // \u5904\u7406\u5b57\u7b26\u4e32, \u907f\u514d\u76f4\u63a5\u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u65f6\u5019\u88ab\u6dfb\u52a0\u4e86\u5f15\u53f7\\n        StringHttpMessageConverter smc = new StringHttpMessageConverter(Charset.forName(\\"UTF-8\\"));\\n        converters.add(smc);\\n        converters.add(fastConverter);\\n    }\\n \\n    @Bean\\n    public GlobalTransactionScanner globalTransactionScanner() {\\n        return new GlobalTransactionScanner(\\"test-client\\", \\"test-group\\");\\n    }\\n \\n}\\n\\n```\\n\\n \u518d\u521b\u5efac**ontroller\u5305,\u518d\u5305\u4e0b\u521b\u5efaTestController** :\\n\\n```java\\npackage org.test.controller;\\n \\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.context.annotation.Lazy;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\nimport org.test.service.DemoService;\\n \\nimport io.swagger.annotations.Api;\\nimport io.swagger.annotations.ApiOperation;\\n \\n/**\\n * <p>\\n * \u6587\u4ef6\u8868 \u524d\u7aef\u63a7\u5236\u5668\\n * </p>\\n *\\n * @author funkye\\n * @since 2019-03-20\\n */\\n@RestController\\n@RequestMapping(\\"/test\\")\\n@Api(tags = \\"\u6d4b\u8bd5\u63a5\u53e3\\")\\npublic class TestController {\\n \\n    private final static Logger logger = LoggerFactory.getLogger(TestController.class);\\n    @Autowired\\n    @Lazy\\n    DemoService demoService;\\n \\n    @GetMapping(value = \\"testSeataOne\\")\\n    @ApiOperation(value = \\"\u6d4b\u8bd5\u624b\u52a8\u56de\u6eda\u5206\u5e03\u5f0f\u4e8b\u52a1\u63a5\u53e3\\")\\n    public Object testSeataOne() {\\n        return demoService.One();\\n    }\\n \\n    @GetMapping(value = \\"testSeataTwo\\")\\n    @ApiOperation(value = \\"\u6d4b\u8bd5\u5f02\u5e38\u56de\u6eda\u5206\u5e03\u5f0f\u4e8b\u52a1\u63a5\u53e3\\")\\n    public Object testSeataTwo() {\\n        return demoService.Two();\\n    }\\n \\n}\\n\\n```\\n\\n \u518d\u5230service\u53bb\u521b\u5efa\u9700\u8981\u4f9d\u8d56\u7684DemoService \\n\\n```java\\npackage org.test.service;\\n \\nimport java.time.LocalDateTime;\\n \\nimport org.apache.dubbo.config.annotation.Reference;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\nimport org.springframework.stereotype.Service;\\nimport org.test.controller.TestController;\\nimport org.test.entity.Test;\\n \\nimport io.seata.core.context.RootContext;\\nimport io.seata.core.exception.TransactionException;\\nimport io.seata.spring.annotation.GlobalTransactional;\\nimport io.seata.tm.api.GlobalTransactionContext;\\n \\n@Service\\npublic class DemoService {\\n\\t@Reference(version = \\"1.0.0\\", timeout = 60000)\\n\\tprivate ITestService testService;\\n\\tprivate final static Logger logger = LoggerFactory.getLogger(DemoService.class);\\n \\n\\t/**\\n\\t * \u624b\u52a8\u56de\u6eda\u793a\u4f8b\\n\\t * \\n\\t * @return\\n\\t */\\n\\t@GlobalTransactional\\n\\tpublic Object One() {\\n\\t\\tlogger.info(\\"seata\u5206\u5e03\u5f0f\u4e8b\u52a1Id:{}\\", RootContext.getXID());\\n\\t\\tTest t = new Test();\\n\\t\\tt.setOne(\\"1\\");\\n\\t\\tt.setTwo(\\"2\\");\\n\\t\\tt.setCreateTime(LocalDateTime.now());\\n\\t\\ttestService.save(t);\\n\\t\\ttry {\\n\\t\\t\\tint i = 1 / 0;\\n\\t\\t\\treturn true;\\n\\t\\t} catch (Exception e) {\\n\\t\\t\\t// TODO: handle exception\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tlogger.info(\\"\u8f7d\u5165\u4e8b\u52a1id\u8fdb\u884c\u56de\u6eda\\");\\n\\t\\t\\t\\tGlobalTransactionContext.reload(RootContext.getXID()).rollback();\\n\\t\\t\\t} catch (TransactionException e1) {\\n\\t\\t\\t\\t// TODO Auto-generated catch block\\n\\t\\t\\t\\te1.printStackTrace();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n \\n\\t/**\\n\\t * \u629b\u51fa\u5f02\u5e38\u8fdb\u884c\u56de\u6eda\u793a\u4f8b\\n\\t * \\n\\t * @return\\n\\t */\\n\\t@GlobalTransactional\\n\\tpublic Object Two() {\\n\\t\\tlogger.info(\\"seata\u5206\u5e03\u5f0f\u4e8b\u52a1Id:{}\\", RootContext.getXID());\\n\\t\\tTest t = new Test();\\n\\t\\tt.setOne(\\"1\\");\\n\\t\\tt.setTwo(\\"2\\");\\n\\t\\tt.setCreateTime(LocalDateTime.now());\\n\\t\\ttestService.save(t);\\n\\t\\ttry {\\n\\t\\t\\tint i = 1 / 0;\\n\\t\\t\\treturn true;\\n\\t\\t} catch (Exception e) {\\n\\t\\t\\t// TODO: handle exception\\n\\t\\t\\tthrow new RuntimeException();\\n\\t\\t}\\n\\t}\\n}\\n\\n```\\n\\n \u4e00\u6837\u521b\u5efaresources\u6587\u4ef6\u5939,\u5148\u521b\u5efa\u5e38\u7528\u7684**application.yml** \\n\\n```java\\nspring:\\n  application:\\n     name: test\\n  datasource:\\n     driver-class-name: com.mysql.cj.jdbc.Driver\\n     url: jdbc:mysql://127.0.0.1:3306/test?userSSL=true&useUnicode=true&characterEncoding=UTF8&serverTimezone=Asia/Shanghai\\n     username: root\\n     password: 123456\\n  mvc:\\n    servlet:\\n      load-on-startup: 1\\n  http:\\n    encoding:\\n            force: true\\n            charset: utf-8\\n            enabled: true\\n    multipart:\\n      max-file-size: 10MB\\n      max-request-size: 10MB\\ndubbo:\\n  registry:\\n    id: my-registry\\n    address:  zookeeper://127.0.0.1:2181?client=curator\\n#    address:  zookeeper://127.0.0.1:2181?client=curator\\n  application:\\n    name: dubbo-demo-client\\n    qos-enable: false\\nserver:\\n  port: 28888\\n  max-http-header-size: 8192\\n  address: 0.0.0.0\\n  tomcat:\\n    max-http-post-size: 104857600\\n\\n```\\n\\n \u518d\u628a\u4e4b\u524dservice\u914d\u7f6e\u597d\u7684file\u8ddfregistry\u6587\u4ef6\u590d\u5236\u6765,\u5982\u679c\u4f60\u7684client\u7ec4\u540d\u79f0\u518d\u914d\u7f6e\u7c7b\u91cc\u4fee\u6539\u4e86,\u90a3\u4e48\u8fd9\u91cc\u7684file\u6587\u4ef6\u5185\u7684\u7ec4\u540d\u79f0\u4e00\u6837\u9700\u8981\u66f4\u6539.\\n\\n![](/img/blog/20191129142851.png)\\n\\n \u5b8c\u6574\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0a,\u8fd9\u65f6\u5019\u53ef\u4ee5\u542f\u52a8test-service\u540e,\u518d\u542f\u52a8test-client,\u5230swagger\u91cc\u6d4b\u8bd5\u54af\\n\\n\u200b\\t4.\u8bbf\u95ee127.0.0.1:28888/swagger-ui.html\u505a\u6700\u540e\u7684\u6536\u5c3e\\t\\t![](/img/blog/20191129143041.png)\\n\\n![20191129143124](/img/blog/20191129143124.png)\\n\\n  \u8fd9\u91cc\u6570\u636e\u6211\u5df2\u7ecf\u5b58\u4e86\u4e00\u6761\u8bb0\u5f55\u4e86,\u6211\u4eec\u770b\u770b\u4f1a\u4e0d\u4f1a\u6210\u529f\u56de\u6eda: \\n\\n![20191129143252](/img/blog/20191129143252.png)\\n\\n \u5237\u65b0\u6570\u636e\u5e93,\u53d1\u73b0\u8fd8\u662f\u53ea\u6709\u4e00\u6761\u6570\u636e: \\n\\n![20191129143124](/img/blog/20191129143124.png)\\n\\n \u518d\u67e5\u770b\u65e5\u5fd7: \\n\\n![20191129143407](/img/blog/20191129143407.png)\\n\\n \u663e\u793a\u5df2\u7ecf\u56de\u6eda,\u6211\u4eec\u518d\u770b\u770bseata-server\u7684\u65e5\u5fd7: \\n\\n<img src=\\"/img/blog/20191129143419.png\\" style={{ zoom:\'200%\' }} />\\n\\n \u663e\u793a\u56de\u6eda\u6210\u529f,\u4e8b\u52a1id\u4e5f\u662f\u4e00\u81f4\u7684,\u8fd9\u4e0b\u6211\u4eec\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5c31\u8dd1\u901a\u54af,\u901a\u8fc7\u6253\u65ad\u70b9\u65b9\u5f0f,\u5927\u5bb6\u53ef\u4ee5\u67e5\u770bundo_log,\u4f1a\u53d1\u73b0\u518d\u4e8b\u52a1\u63d0\u4ea4\u524d,\u4f1a\u5b58\u5165\u4e00\u6761\u4e8b\u52a1\u4fe1\u606f\u7684\u6570\u636e,\u5982\u679c\u56de\u6eda\u6210\u529f,\u8be5\u4fe1\u606f\u5c31\u4f1a\u88ab\u5220\u9664. \\n\\n# \u603b\u7ed3\\n\\nseata\u7684\u6574\u5408\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u6613\u5165\u624b,\u7a0d\u5fae\u7528\u5fc3\u4e00\u4e9b\u4f60\u80af\u5b9a\u5199\u7684\u6bd4\u6211\u66f4\u597d!\\n\\n\u6b22\u8fce\u5927\u5bb6\u4e5f\u591a\u53bb\u9605\u8bfbseata,dubbo\u4e4b\u7c7b\u7684\u6e90\u4ee3\u7801,\u80fd\u89e3\u51b3\u4e1a\u52a1\u4e2d\u9047\u5230\u7684\u5927\u91cf\u7684\u5751\u54e6!"},{"id":"/seata-at-mode-start-rm-tm","metadata":{"permalink":"/zh-cn/blog/seata-at-mode-start-rm-tm","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-at-mode-start-rm-tm.md","title":"Seata \u5ba2\u6237\u7aef\u9700\u8981\u540c\u65f6\u542f\u52a8 RM \u548c TM \u5417\uff1f","description":"\u5173\u4e8e Seata \u540e\u7eed\u4f18\u5316\u7684\u4e00\u4e2a\u8ba8\u8bba\u70b9","date":"2019-11-28T00:00:00.000Z","formattedDate":"2019\u5e7411\u670828\u65e5","tags":[],"readingTime":3.325,"hasTruncateMarker":false,"authors":[{"name":"\u5f20\u4e58\u8f89"}],"frontMatter":{"title":"Seata \u5ba2\u6237\u7aef\u9700\u8981\u540c\u65f6\u542f\u52a8 RM \u548c TM \u5417\uff1f","author":"\u5f20\u4e58\u8f89","keywords":["Seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001AT\u6a21\u5f0f\u3001RM\u3001TM"],"description":"\u5173\u4e8e Seata \u540e\u7eed\u4f18\u5316\u7684\u4e00\u4e2a\u8ba8\u8bba\u70b9","date":"2019/11/28"},"prevItem":{"title":"SpringBoot+Dubbo+MybatisPlus\u6574\u5408seata\u5206\u5e03\u5f0f\u4e8b\u52a1","permalink":"/zh-cn/blog/springboot-dubbo-mybatisplus-seata"},"nextItem":{"title":"Seata AT \u6a21\u5f0f\u542f\u52a8\u6e90\u7801\u5206\u6790","permalink":"/zh-cn/blog/seata-at-mode-start"}},"content":"\u5728\u5206\u6790\u542f\u52a8\u90e8\u5206\u6e90\u7801\u65f6\uff0c\u6211\u53d1\u73b0 GlobalTransactionScanner \u4f1a\u540c\u65f6\u542f\u52a8 RM \u548c TM client\uff0c\u4f46\u6839\u636e Seata \u7684\u8bbe\u8ba1\u6765\u770b\uff0cTM \u8d1f\u8d23\u5168\u5c40\u4e8b\u52a1\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u4e00\u4e2a\u670d\u52a1\u4e2d\u4e0d\u9700\u8981\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\uff0c\u6b64\u65f6\u662f\u4e0d\u9700\u8981\u542f\u52a8 TM client\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u9879\u76ee\u4e2d\u5982\u679c\u6ca1\u6709\u5168\u5c40\u4e8b\u52a1\u6ce8\u89e3\uff0c\u6b64\u65f6\u662f\u4e0d\u662f\u5c31\u4e0d\u9700\u8981\u521d\u59cb\u5316 TM client \u4e86\uff0c\u56e0\u4e3a\u4e0d\u662f\u6bcf\u4e2a\u5fae\u670d\u52a1\uff0c\u90fd\u9700\u8981 GlobalTransactional\uff0c\u5b83\u6b64\u65f6\u4ec5\u4ec5\u4f5c\u4e3a\u4e00\u4e2a RM client \u800c\u5df2\u3002\\n\\n\\n\u4e8e\u662f\u6211\u7740\u624b\u5c06 GlobalTransactionScanner \u7a0d\u5fae\u66f4\u6539\u4e86\u521d\u59cb\u5316\u7684\u89c4\u5219\uff0c\u7531\u4e8e\u4e4b\u524d GlobalTransactionScanner \u8c03\u7528 \u521d\u59cb\u5316\u65b9\u6cd5\u662f\u5728 InitializingBean \u4e2d\u7684 afterPropertiesSet() \u65b9\u6cd5\u4e2d\u8fdb\u884c\uff0cafterPropertySet() \u4ec5\u4ec5\u662f\u5f53\u524d bean \u521d\u59cb\u5316\u540e\u88ab\u8c03\u7528\uff0c\u6b64\u65f6\u65e0\u6cd5\u5f97\u77e5\u5f53\u524d Spring \u5bb9\u5668\u662f\u5426\u6709\u5168\u5c40\u4e8b\u52a1\u6ce8\u89e3\u3002\\n\\n\u56e0\u6b64\u6211\u53bb\u6389\u4e86 InitializingBean\uff0c\u6539\u6210\u4e86\u662f\u5b9e\u73b0 ApplicationListener\uff0c\u5728\u5b9e\u4f8b\u5316 bean \u7684\u8fc7\u7a0b\u4e2d\u68c0\u67e5\u662f\u5426\u6709 GlobalTransactional \u6ce8\u89e3\u7684\u5b58\u5728\uff0c\u6700\u540e\u5728 Spring \u5bb9\u5668\u521d\u59cb\u5316\u5b8c\u6210\u4e4b\u540e\u518d\u8c03\u7528 RM \u548c TM client \u521d\u59cb\u5316\u65b9\u6cd5\uff0c\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u662f\u5426\u6709\u7528\u5230\u5168\u5c40\u4e8b\u52a1\u6ce8\u89e3\u6765\u51b3\u5b9a\u662f\u5426\u542f\u52a8 TM client \u4e86\u3002\\n\\n\u8fd9\u91cc\u9644\u4e0a PR \u5730\u5740\uff1a[https://github.com/seata/seata/pull/1936](https://github.com/seata/seata/pull/1936)\\n\\n\u968f\u540e\u5728 pr \u4e2d\u8ba8\u8bba\u4e2d\u5f97\u77e5\uff0c\u76ee\u524d Seata \u7684\u8bbe\u8ba1\u662f\u53ea\u6709\u5728\u53d1\u8d77\u65b9\u7684 TM \u624d\u53ef\u4ee5\u53d1\u8d77 GlobalRollbackRequest\uff0cRM \u53ea\u80fd\u53d1\u9001 BranchReport(false) \u4e0a\u62a5\u5206\u652f\u72b6\u6001\u4e2a TC \u670d\u52a1\u7aef\uff0c\u65e0\u6cd5\u76f4\u63a5\u53d1\u9001 GlobalRollbackRequest \u8fdb\u884c\u5168\u5c40\u56de\u6eda\u64cd\u4f5c\u3002\u5177\u4f53\u7684\u4ea4\u4e92\u903b\u8f91\u5982\u4e0b\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191128094250.png)\\n\\n\u90a3\u4e48\u6839\u636e\u4e0a\u9762\u7684\u8bbe\u8ba1\u6a21\u578b\uff0c\u81ea\u7136\u53ef\u4ee5\u6309\u9700\u542f\u52a8 TM client \u4e86\u3002\\n\\n\u4f46\u662f Seata \u540e\u9762\u7684\u4f18\u5316\u8fed\u4ee3\u4e2d\uff0c\u8fd8\u9700\u8981\u8003\u8651\u7684\u4e00\u70b9\u662f\uff1a\\n\\n\u5f53\u53c2\u4e0e\u65b9\u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u662f\u5426\u53ef\u4ee5\u76f4\u63a5\u7531\u53c2\u4e0e\u65b9\u7684 TM client \u53d1\u8d77\u5168\u5c40\u56de\u6eda\uff1f\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u53ef\u4ee5\u7f29\u77ed\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u5468\u671f\u65f6\u95f4\uff0c\u5c3d\u5feb\u91ca\u653e\u5168\u5c40\u9501\u8ba9\u5176\u4ed6\u6570\u636e\u51b2\u7a81\u7684\u4e8b\u52a1\u5c3d\u65e9\u7684\u83b7\u53d6\u5230\u9501\u6267\u884c\u3002\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/20191127202606.png)\\n\\n\\n\u4e5f\u5c31\u662f\u8bf4\u5728\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\u5f53\u4e2d\uff0c\u53ea\u8981\u6709\u4e00\u4e2a RM client \u6267\u884c\u672c\u5730\u4e8b\u52a1\u5931\u8d25\u4e86\uff0c\u76f4\u63a5\u5f53\u524d\u670d\u52a1\u7684 TM client \u53d1\u8d77\u5168\u5c40\u4e8b\u52a1\u56de\u6eda\uff0c\u4e0d\u5fc5\u8981\u7b49\u5f85\u53d1\u8d77\u65b9\u7684 TM \u53d1\u8d77\u7684\u51b3\u8bae\u56de\u6eda\u901a\u77e5\u4e86\u3002\u5982\u679c\u8981\u5b9e\u73b0\u8fd9\u4e2a\u4f18\u5316\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6bcf\u4e2a\u670d\u52a1\u90fd\u9700\u8981\u540c\u65f6\u542f\u52a8 TM client \u548c RM client\u3002\\n\\n# \u4f5c\u8005\u7b80\u4ecb\uff1a\\n\\n\u5f20\u4e58\u8f89\uff0c\u76ee\u524d\u5c31\u804c\u4e8e\u4e2d\u901a\u79d1\u6280\u4fe1\u606f\u4e2d\u5fc3\u6280\u672f\u5e73\u53f0\u90e8\uff0c\u62c5\u4efb Java \u5de5\u7a0b\u5e08\uff0c\u4e3b\u8981\u8d1f\u8d23\u4e2d\u901a\u6d88\u606f\u5e73\u53f0\u4e0e\u5168\u94fe\u8def\u538b\u6d4b\u9879\u76ee\u7684\u7814\u53d1\uff0c\u70ed\u7231\u5206\u4eab\u6280\u672f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u300c\u540e\u7aef\u8fdb\u9636\u300d\u4f5c\u8005\uff0c\u6280\u672f\u535a\u5ba2\uff08[https://objcoding.com/](https://objcoding.com/)\uff09\u535a\u4e3b\uff0cSeata Contributor\uff0cGitHub ID\uff1aobjcoding\u3002"},{"id":"/seata-at-mode-start","metadata":{"permalink":"/zh-cn/blog/seata-at-mode-start","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-at-mode-start.md","title":"Seata AT \u6a21\u5f0f\u542f\u52a8\u6e90\u7801\u5206\u6790","description":"Seata \u6e90\u7801\u5206\u6790\u7cfb\u5217","date":"2019-11-27T00:00:00.000Z","formattedDate":"2019\u5e7411\u670827\u65e5","tags":[],"readingTime":13.8,"hasTruncateMarker":false,"authors":[{"name":"\u5f20\u4e58\u8f89"}],"frontMatter":{"title":"Seata AT \u6a21\u5f0f\u542f\u52a8\u6e90\u7801\u5206\u6790","author":"\u5f20\u4e58\u8f89","keywords":["Seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001AT\u6a21\u5f0f"],"description":"Seata \u6e90\u7801\u5206\u6790\u7cfb\u5217","date":"2019/11/27"},"prevItem":{"title":"Seata \u5ba2\u6237\u7aef\u9700\u8981\u540c\u65f6\u542f\u52a8 RM \u548c TM \u5417\uff1f","permalink":"/zh-cn/blog/seata-at-mode-start-rm-tm"},"nextItem":{"title":"\u57fa\u4e8e Seata Saga \u8bbe\u8ba1\u66f4\u6709\u5f39\u6027\u7684\u91d1\u878d\u5e94\u7528","permalink":"/zh-cn/blog/design-more-flexable-application-by-saga"}},"content":"\u4ece\u4e0a\u4e00\u7bc7\u6587\u7ae0\u300c[\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u95f4\u4ef6Seata\u7684\u8bbe\u8ba1\u539f\u7406](https://mp.weixin.qq.com/s/Pypkm5C9aLPJHYwcM6tAtA)\u300d\u8bb2\u4e86\u4e0b Seata AT \u6a21\u5f0f\u7684\u4e00\u4e9b\u8bbe\u8ba1\u539f\u7406\uff0c\u4ece\u4e2d\u4e5f\u77e5\u9053\u4e86 AT \u6a21\u5f0f\u7684\u4e09\u4e2a\u89d2\u8272\uff08RM\u3001TM\u3001TC\uff09\uff0c\u63a5\u4e0b\u6765\u6211\u4f1a\u66f4\u65b0 Seata \u6e90\u7801\u5206\u6790\u7cfb\u5217\u6587\u7ae0\u3002\u4eca\u5929\u5c31\u6765\u5206\u6790 Seata AT \u6a21\u5f0f\u5728\u542f\u52a8\u7684\u65f6\u5019\u90fd\u505a\u4e86\u54ea\u4e9b\u64cd\u4f5c\u3002\\n\\n\\n\\n# \u5ba2\u6237\u7aef\u542f\u52a8\u903b\u8f91\\n\\nTM \u662f\u8d1f\u8d23\u6574\u4e2a\u5168\u5c40\u4e8b\u52a1\u7684\u7ba1\u7406\u5668\uff0c\u56e0\u6b64\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\u662f\u7531 TM \u5f00\u542f\u7684\uff0cTM \u6709\u4e2a\u5168\u5c40\u7ba1\u7406\u7c7b GlobalTransaction\uff0c\u7ed3\u6784\u5982\u4e0b\uff1a\\n\\nio.seata.tm.api.GlobalTransaction\\n\\n```java\\npublic interface GlobalTransaction {\\n\\n  void begin() throws TransactionException;\\n\\n  void begin(int timeout) throws TransactionException;\\n\\n  void begin(int timeout, String name) throws TransactionException;\\n\\n  void commit() throws TransactionException;\\n\\n  void rollback() throws TransactionException;\\n  \\n  GlobalStatus getStatus() throws TransactionException;\\n  \\n  // ...\\n}\\n```\\n\\n\u53ef\u4ee5\u901a\u8fc7 GlobalTransactionContext \u521b\u5efa\u4e00\u4e2a GlobalTransaction\uff0c\u7136\u540e\u7528 GlobalTransaction \u8fdb\u884c\u5168\u5c40\u4e8b\u52a1\u7684\u5f00\u542f\u3001\u63d0\u4ea4\u3001\u56de\u6eda\u7b49\u64cd\u4f5c\uff0c\u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u7528 API \u65b9\u5f0f\u4f7f\u7528 Seata AT \u6a21\u5f0f\uff1a\\n\\n```java\\n//init seata;\\nTMClient.init(applicationId, txServiceGroup);\\nRMClient.init(applicationId, txServiceGroup);\\n//trx\\nGlobalTransaction tx = GlobalTransactionContext.getCurrentOrCreate();\\ntry {\\n  tx.begin(60000, \\"testBiz\\");\\n  // \u4e8b\u52a1\u5904\u7406\\n  // ...\\n  tx.commit();\\n} catch (Exception exx) {\\n  tx.rollback();\\n  throw exx;\\n}\\n```\\n\\n\u5982\u679c\u6bcf\u6b21\u4f7f\u7528\u5168\u5c40\u4e8b\u52a1\u90fd\u8fd9\u6837\u5199\uff0c\u96be\u514d\u4f1a\u9020\u6210\u4ee3\u7801\u5197\u4f59\uff0c\u6211\u4eec\u7684\u9879\u76ee\u90fd\u662f\u57fa\u4e8e Spring \u5bb9\u5668\uff0c\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u5229\u7528 Spring AOP \u7684\u7279\u6027\uff0c\u7528\u6a21\u677f\u6a21\u5f0f\u628a\u8fd9\u4e9b\u5197\u4f59\u4ee3\u7801\u5c01\u88c5\u6a21\u7248\u91cc\uff0c\u53c2\u8003 Mybatis-spring \u4e5f\u662f\u505a\u4e86\u8fd9\u4e48\u4e00\u4ef6\u4e8b\u60c5\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u57fa\u4e8e Spring \u7684\u9879\u76ee\u542f\u52a8 Seata \u5e76\u6ce8\u518c\u5168\u5c40\u4e8b\u52a1\u65f6\u90fd\u505a\u4e86\u54ea\u4e9b\u5de5\u4f5c\u3002\\n\\n\u6211\u4eec\u5f00\u542f\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\u662f\u5728\u65b9\u6cd5\u4e0a\u52a0\u4e0a `@GlobalTransactional`\u6ce8\u89e3\uff0cSeata \u7684 Spring \u6a21\u5757\u4e2d\uff0c\u6709\u4e2a GlobalTransactionScanner\uff0c\u5b83\u7684\u7ee7\u627f\u5173\u7cfb\u5982\u4e0b\uff1a\\n\\n```java\\npublic class GlobalTransactionScanner extends AbstractAutoProxyCreator implements InitializingBean, ApplicationContextAware, DisposableBean {\\n  // ...\\n}\\n```\\n\\n\u5728\u57fa\u4e8e Spring \u9879\u76ee\u7684\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u8be5\u7c7b\u4f1a\u6709\u5982\u4e0b\u521d\u59cb\u5316\u6d41\u7a0b\uff1a\\n\\n![image-20191124155455309](https://gitee.com/objcoding/md-picture/raw/master/img/image-20191124155455309.png)\\n\\nInitializingBean \u7684 afterPropertiesSet() \u65b9\u6cd5\u8c03\u7528\u4e86 initClient() \u65b9\u6cd5\uff1a\\n\\nio.seata.spring.annotation.GlobalTransactionScanner#initClient\\n\\n```java\\nTMClient.init(applicationId, txServiceGroup);\\nRMClient.init(applicationId, txServiceGroup);\\n```\\n\\n\u5bf9 TM \u548c RM \u505a\u4e86\u521d\u59cb\u5316\u64cd\u4f5c\u3002\\n\\n- TM \u521d\u59cb\u5316\\n\\nio.seata.tm.TMClient#init\\n\\n```java\\npublic static void init(String applicationId, String transactionServiceGroup) {\\n  // \u83b7\u53d6 TmRpcClient \u5b9e\u4f8b\\n  TmRpcClient tmRpcClient = TmRpcClient.getInstance(applicationId, transactionServiceGroup);\\n  // \u521d\u59cb\u5316 TM Client\\n  tmRpcClient.init();\\n}\\n```\\n\\n\u8c03\u7528 TmRpcClient.getInstance() \u65b9\u6cd5\u4f1a\u83b7\u53d6\u4e00\u4e2a TM \u5ba2\u6237\u7aef\u5b9e\u4f8b\uff0c\u5728\u83b7\u53d6\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u521b\u5efa Netty \u5ba2\u6237\u7aef\u914d\u7f6e\u6587\u4ef6\u5bf9\u8c61\uff0c\u4ee5\u53ca\u521b\u5efa messageExecutor \u7ebf\u7a0b\u6c60\uff0c\u8be5\u7ebf\u7a0b\u6c60\u7528\u4e8e\u5728\u5904\u7406\u5404\u79cd\u4e0e\u670d\u52a1\u7aef\u7684\u6d88\u606f\u4ea4\u4e92\uff0c\u5728\u521b\u5efa TmRpcClient \u5b9e\u4f8b\u65f6\uff0c\u521b\u5efa ClientBootstrap\uff0c\u7528\u4e8e\u7ba1\u7406 Netty \u670d\u52a1\u7684\u542f\u505c\uff0c\u4ee5\u53ca ClientChannelManager\uff0c\u5b83\u662f\u4e13\u95e8\u7528\u4e8e\u7ba1\u7406 Netty \u5ba2\u6237\u7aef\u5bf9\u8c61\u6c60\uff0cSeata \u7684 Netty \u90e8\u5206\u914d\u5408\u4f7f\u7528\u4e86\u5bf9\u8c61\u6c60\uff0c\u540e\u9762\u5728\u5206\u6790\u7f51\u7edc\u6a21\u5757\u4f1a\u8bb2\u5230\u3002\\n\\nio.seata.core.rpc.netty.AbstractRpcRemotingClient#init\\n\\n```java\\npublic void init() {\\n  clientBootstrap.start();\\n  // \u5b9a\u65f6\u5c1d\u8bd5\u8fde\u63a5\u670d\u52a1\u7aef\\n  timerExecutor.scheduleAtFixedRate(new Runnable() {\\n    @Override\\n    public void run() {\\n      clientChannelManager.reconnect(getTransactionServiceGroup());\\n    }\\n  }, SCHEDULE_INTERVAL_MILLS, SCHEDULE_INTERVAL_MILLS, TimeUnit.SECONDS);\\n  mergeSendExecutorService = new ThreadPoolExecutor(MAX_MERGE_SEND_THREAD,\\n                                                    MAX_MERGE_SEND_THREAD,\\n                                                    KEEP_ALIVE_TIME, TimeUnit.MILLISECONDS,\\n                                                    new LinkedBlockingQueue<>(),\\n                                                    new NamedThreadFactory(getThreadPrefix(), MAX_MERGE_SEND_THREAD));\\n  mergeSendExecutorService.submit(new MergedSendRunnable());\\n  super.init();\\n}\\n```\\n\\n\u8c03\u7528 TM \u5ba2\u6237\u7aef init() \u65b9\u6cd5\uff0c\u6700\u7ec8\u4f1a\u542f\u52a8 netty \u5ba2\u6237\u7aef\uff08\u6b64\u65f6\u8fd8\u672a\u771f\u6b63\u542f\u52a8\uff0c\u5728\u5bf9\u8c61\u6c60\u88ab\u8c03\u7528\u65f6\u624d\u4f1a\u88ab\u771f\u6b63\u542f\u52a8\uff09\uff1b\u5f00\u542f\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u5b9a\u65f6\u91cd\u65b0\u53d1\u9001 RegisterTMRequest\uff08RM \u5ba2\u6237\u7aef\u4f1a\u53d1\u9001 RegisterRMRequest\uff09\u8bf7\u6c42\u5c1d\u8bd5\u8fde\u63a5\u670d\u52a1\u7aef\uff0c\u5177\u4f53\u903b\u8f91\u662f\u5728 NettyClientChannelManager \u4e2d\u7684 channels \u4e2d\u7f13\u5b58\u4e86\u5ba2\u6237\u7aef channel\uff0c\u5982\u679c\u6b64\u65f6 channels \u4e0d\u5b58\u5728\u83b7\u53d6\u5df2\u8fc7\u671f\uff0c\u90a3\u4e48\u5c31\u4f1a\u5c1d\u8bd5\u8fde\u63a5\u670d\u52a1\u7aef\u4ee5\u91cd\u65b0\u83b7\u53d6 channel \u5e76\u5c06\u5176\u7f13\u5b58\u5230 channels \u4e2d\uff1b\u5f00\u542f\u4e00\u6761\u5355\u72ec\u7ebf\u7a0b\uff0c\u7528\u4e8e\u5904\u7406\u5f02\u6b65\u8bf7\u6c42\u53d1\u9001\uff0c\u8fd9\u91cc\u7528\u5f97\u5f88\u5de7\u5999\uff0c\u4e4b\u540e\u5728\u5206\u6790\u7f51\u7edc\u6a21\u5757\u5728\u5177\u4f53\u5bf9\u5176\u8fdb\u884c\u5206\u6790\u3002\\n\\nio.seata.core.rpc.netty.AbstractRpcRemoting#init\\n\\n```java\\npublic void init() {\\n  timerExecutor.scheduleAtFixedRate(new Runnable() {\\n    @Override\\n    public void run() {\\n      for (Map.Entry<Integer, MessageFuture> entry : futures.entrySet()) {\\n        if (entry.getValue().isTimeout()) {\\n          futures.remove(entry.getKey());\\n          entry.getValue().setResultMessage(null);\\n          if (LOGGER.isDebugEnabled()) {\\n            LOGGER.debug(\\"timeout clear future: {}\\", entry.getValue().getRequestMessage().getBody());\\n          }\\n        }\\n      }\\n\\n      nowMills = System.currentTimeMillis();\\n    }\\n  }, TIMEOUT_CHECK_INTERNAL, TIMEOUT_CHECK_INTERNAL, TimeUnit.MILLISECONDS);\\n}\\n```\\n\\n\u5728 AbstractRpcRemoting \u7684 init \u65b9\u6cd5\u4e2d\uff0c\u53c8\u662f\u5f00\u542f\u4e86\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u8be5\u5b9a\u65f6\u4efb\u52a1\u4e3b\u8981\u662f\u7528\u4e8e\u5b9a\u65f6\u6e05\u9664 futures \u5df2\u8fc7\u671f\u7684 futrue\uff0cfutures \u662f\u4fdd\u5b58\u53d1\u9001\u8bf7\u6c42\u9700\u8981\u8fd4\u56de\u7ed3\u679c\u7684 future \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u6709\u4e2a\u8d85\u65f6\u65f6\u95f4\uff0c\u8fc7\u4e86\u8d85\u65f6\u65f6\u95f4\u5c31\u4f1a\u81ea\u52a8\u629b\u5f02\u5e38\uff0c\u56e0\u6b64\u9700\u8981\u5b9a\u65f6\u6e05\u9664\u5df2\u8fc7\u671f\u7684 future \u5bf9\u8c61\u3002\\n\\n- RM \u521d\u59cb\u5316\\n\\nio.seata.rm.RMClient#init\\n\\n```java\\npublic static void init(String applicationId, String transactionServiceGroup) {\\n  RmRpcClient rmRpcClient = RmRpcClient.getInstance(applicationId, transactionServiceGroup);\\n  rmRpcClient.setResourceManager(DefaultResourceManager.get());\\n  rmRpcClient.setClientMessageListener(new RmMessageListener(DefaultRMHandler.get()));\\n  rmRpcClient.init();\\n}\\n```\\n\\n RmRpcClient.getInstance \u5904\u7406\u903b\u8f91\u4e0e TM \u5927\u81f4\u76f8\u540c\uff1bResourceManager \u662f RM \u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u8d1f\u8d23\u5206\u652f\u4e8b\u52a1\u7684\u6ce8\u518c\u3001\u63d0\u4ea4\u3001\u4e0a\u62a5\u3001\u4ee5\u53ca\u56de\u6eda\u64cd\u4f5c\uff0c\u4ee5\u53ca\u5168\u5c40\u9501\u7684\u67e5\u8be2\u64cd\u4f5c\uff0cDefaultResourceManager \u4f1a\u6301\u6709\u5f53\u524d\u6240\u6709\u7684 RM \u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u8fdb\u884c\u7edf\u4e00\u8c03\u7528\u5904\u7406\uff0c\u800c get() \u65b9\u6cd5\u4e3b\u8981\u662f\u52a0\u8f7d\u5f53\u524d\u7684\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u4e3b\u8981\u7528\u4e86\u7c7b\u4f3c SPI \u7684\u673a\u5236\uff0c\u8fdb\u884c\u7075\u6d3b\u52a0\u8f7d\uff0c\u5982\u4e0b\u56fe\uff0cSeata \u4f1a\u626b\u63cf META-INF/services/ \u76ee\u5f55\u4e0b\u7684\u914d\u7f6e\u7c7b\u5e76\u8fdb\u884c\u52a8\u6001\u52a0\u8f7d\u3002\\n\\nClientMessageListener \u662f RM \u6d88\u606f\u5904\u7406\u76d1\u542c\u5668\uff0c\u7528\u4e8e\u8d1f\u8d23\u5904\u7406\u4ece TC \u53d1\u9001\u8fc7\u6765\u7684\u6307\u4ee4\uff0c\u5e76\u5bf9\u5206\u652f\u8fdb\u884c\u5206\u652f\u63d0\u4ea4\u3001\u5206\u652f\u56de\u6eda\uff0c\u4ee5\u53ca undo log \u5220\u9664\u64cd\u4f5c\uff1b\u6700\u540e init \u65b9\u6cd5\u8ddf TM \u903b\u8f91\u4e5f\u5927\u4f53\u4e00\u81f4\uff1bDefaultRMHandler \u5c01\u88c5\u4e86 RM \u5206\u652f\u4e8b\u52a1\u7684\u4e00\u4e9b\u5177\u4f53\u64cd\u4f5c\u903b\u8f91\u3002\\n\\n\u63a5\u4e0b\u6765\u518d\u770b\u770b wrapIfNecessary \u65b9\u6cd5\u7a76\u7adf\u505a\u4e86\u54ea\u4e9b\u64cd\u4f5c\u3002\\n\\nio.seata.spring.annotation.GlobalTransactionScanner#wrapIfNecessary\\n\\n```java\\nprotected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey) {\\n  // \u5224\u65ad\u662f\u5426\u6709\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\\n  if (disableGlobalTransaction) {\\n    return bean;\\n  }\\n  try {\\n    synchronized (PROXYED_SET) {\\n      if (PROXYED_SET.contains(beanName)) {\\n        return bean;\\n      }\\n      interceptor = null;\\n      //check TCC proxy\\n      if (TCCBeanParserUtils.isTccAutoProxy(bean, beanName, applicationContext)) {\\n        //TCC interceptor, proxy bean of sofa:reference/dubbo:reference, and LocalTCC\\n        interceptor = new TccActionInterceptor(TCCBeanParserUtils.getRemotingDesc(beanName));\\n      } else {\\n        Class<?> serviceInterface = SpringProxyUtils.findTargetClass(bean);\\n        Class<?>[] interfacesIfJdk = SpringProxyUtils.findInterfaces(bean);\\n\\n        // \u5224\u65ad bean \u4e2d\u662f\u5426\u6709 GlobalTransactional \u548c GlobalLock \u6ce8\u89e3\\n        if (!existsAnnotation(new Class[]{serviceInterface})\\n            && !existsAnnotation(interfacesIfJdk)) {\\n          return bean;\\n        }\\n\\n        if (interceptor == null) {\\n          // \u521b\u5efa\u4ee3\u7406\u7c7b\\n          interceptor = new GlobalTransactionalInterceptor(failureHandlerHook);\\n        }\\n      }\\n\\n      LOGGER.info(\\"Bean[{}] with name [{}] would use interceptor [{}]\\",\\n                  bean.getClass().getName(), beanName, interceptor.getClass().getName());\\n      if (!AopUtils.isAopProxy(bean)) {\\n        bean = super.wrapIfNecessary(bean, beanName, cacheKey);\\n      } else {\\n        AdvisedSupport advised = SpringProxyUtils.getAdvisedSupport(bean);\\n        // \u6267\u884c\u5305\u88c5\u76ee\u6807\u5bf9\u8c61\u5230\u4ee3\u7406\u5bf9\u8c61  \\n        Advisor[] advisor = super.buildAdvisors(beanName, getAdvicesAndAdvisorsForBean(null, null, null));\\n        for (Advisor avr : advisor) {\\n          advised.addAdvisor(0, avr);\\n        }\\n      }\\n      PROXYED_SET.add(beanName);\\n      return bean;\\n    }\\n  } catch (Exception exx) {\\n    throw new RuntimeException(exx);\\n  }\\n}\\n```\\n\\n\\nGlobalTransactionScanner \u7ee7\u627f\u4e86 AbstractAutoProxyCreator\uff0c\u7528\u4e8e\u5bf9 Spring AOP \u652f\u6301\uff0c\u4ece\u4ee3\u7801\u4e2d\u53ef\u770b\u51fa\uff0c\u7528GlobalTransactionalInterceptor \u4ee3\u66ff\u4e86\u88ab GlobalTransactional \u548c GlobalLock \u6ce8\u89e3\u7684\u65b9\u6cd5\u3002\\n\\nGlobalTransactionalInterceptor \u5b9e\u73b0\u4e86 MethodInterceptor\uff1a\\n\\nio.seata.spring.annotation.GlobalTransactionalInterceptor#invoke\\n\\n```java\\npublic Object invoke(final MethodInvocation methodInvocation) throws Throwable {\\n  Class<?> targetClass = methodInvocation.getThis() != null ? AopUtils.getTargetClass(methodInvocation.getThis()) : null;\\n  Method specificMethod = ClassUtils.getMostSpecificMethod(methodInvocation.getMethod(), targetClass);\\n  final Method method = BridgeMethodResolver.findBridgedMethod(specificMethod);\\n\\n  final GlobalTransactional globalTransactionalAnnotation = getAnnotation(method, GlobalTransactional.class);\\n  final GlobalLock globalLockAnnotation = getAnnotation(method, GlobalLock.class);\\n  if (globalTransactionalAnnotation != null) {\\n    // \u5168\u5c40\u4e8b\u52a1\u6ce8\u89e3\\n    return handleGlobalTransaction(methodInvocation, globalTransactionalAnnotation);\\n  } else if (globalLockAnnotation != null) {\\n    // \u5168\u5c40\u9501\u6ce8\u89e3\\n    return handleGlobalLock(methodInvocation);\\n  } else {\\n    return methodInvocation.proceed();\\n  }\\n}\\n```\\n\\n\u4ee5\u4e0a\u662f\u4ee3\u7406\u65b9\u6cd5\u6267\u884c\u7684\u903b\u8f91\u903b\u8f91\uff0c\u5176\u4e2d handleGlobalTransaction() \u65b9\u6cd5\u91cc\u9762\u8c03\u7528\u4e86 TransactionalTemplate \u6a21\u7248\uff1a\\n\\nio.seata.spring.annotation.GlobalTransactionalInterceptor#handleGlobalTransaction\\n\\n```java\\nprivate Object handleGlobalTransaction(final MethodInvocation methodInvocation,\\n                                       final GlobalTransactional globalTrxAnno) throws Throwable {\\n  try {\\n    return transactionalTemplate.execute(new TransactionalExecutor() {\\n      @Override\\n      public Object execute() throws Throwable {\\n        return methodInvocation.proceed();\\n      }\\n      @Override\\n      public TransactionInfo getTransactionInfo() {\\n        // ...\\n      }\\n    });\\n  } catch (TransactionalExecutor.ExecutionException e) {\\n    // ...\\n  }\\n}\\n```\\n\\nhandleGlobalTransaction() \u65b9\u6cd5\u6267\u884c\u4e86\u5c31\u662f TransactionalTemplate \u6a21\u7248\u7c7b\u7684 execute \u65b9\u6cd5\uff1a\\n\\nio.seata.tm.api.TransactionalTemplate#execute\\n\\n```java\\npublic Object execute(TransactionalExecutor business) throws Throwable {\\n  // 1. get or create a transaction\\n  GlobalTransaction tx = GlobalTransactionContext.getCurrentOrCreate();\\n\\n  // 1.1 get transactionInfo\\n  TransactionInfo txInfo = business.getTransactionInfo();\\n  if (txInfo == null) {\\n    throw new ShouldNeverHappenException(\\"transactionInfo does not exist\\");\\n  }\\n  try {\\n\\n    // 2. begin transaction\\n    beginTransaction(txInfo, tx);\\n\\n    Object rs = null;\\n    try {\\n\\n      // Do Your Business\\n      rs = business.execute();\\n\\n    } catch (Throwable ex) {\\n\\n      // 3.the needed business exception to rollback.\\n      completeTransactionAfterThrowing(txInfo,tx,ex);\\n      throw ex;\\n    }\\n\\n    // 4. everything is fine, commit.\\n    commitTransaction(tx);\\n\\n    return rs;\\n  } finally {\\n    //5. clear\\n    triggerAfterCompletion();\\n    cleanUp();\\n  }\\n}\\n```\\n\\n\u4ee5\u4e0a\u662f\u4e0d\u662f\u6709\u4e00\u79cd\u4f3c\u66fe\u76f8\u8bc6\u7684\u611f\u89c9\uff1f\u6ca1\u9519\uff0c\u4ee5\u4e0a\u5c31\u662f\u6211\u4eec\u4f7f\u7528 API \u65f6\u7ecf\u5e38\u5199\u7684\u5197\u4f59\u4ee3\u7801\uff0c\u73b0\u5728 Spring \u901a\u8fc7\u4ee3\u7406\u6a21\u5f0f\uff0c\u628a\u8fd9\u4e9b\u5197\u4f59\u4ee3\u7801\u90fd\u5c01\u88c5\u5e26\u6a21\u7248\u91cc\u9762\u4e86\uff0c\u5b83\u5c06\u90a3\u4e9b\u5197\u4f59\u4ee3\u7801\u7edf\u7edf\u5c01\u88c5\u8d77\u6765\u7edf\u4e00\u6d41\u7a0b\u5904\u7406\uff0c\u5e76\u4e0d\u9700\u8981\u4f60\u663e\u793a\u5199\u51fa\u6765\u4e86\uff0c\u6709\u5174\u8da3\u7684\u4e5f\u53ef\u4ee5\u53bb\u770b\u770b Mybatis-spring \u7684\u6e90\u7801\uff0c\u4e5f\u662f\u5199\u5f97\u975e\u5e38\u7cbe\u5f69\u3002\\n\\n\\n\\n# \u670d\u52a1\u7aef\u5904\u7406\u903b\u8f91\\n\\n\u670d\u52a1\u7aef\u6536\u5230\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff0c\u90a3\u5f53\u7136\u662f\u5c06\u5176 channel \u4e5f\u7f13\u5b58\u8d77\u6765\uff0c\u524d\u9762\u4e5f\u8bf4\u5230\u5ba2\u6237\u7aef\u4f1a\u53d1\u9001 RegisterRMRequest/RegisterTMRequest \u8bf7\u6c42\u7ed9\u670d\u52a1\u7aef\uff0c\u670d\u52a1\u7aef\u6536\u5230\u540e\u4f1a\u8c03\u7528 ServerMessageListener \u76d1\u542c\u5668\u5904\u7406\uff1a\\n\\nio.seata.core.rpc.ServerMessageListener\\n\\n```java\\npublic interface ServerMessageListener {\\n  // \u5904\u7406\u5404\u79cd\u4e8b\u52a1\uff0c\u5982\u5206\u652f\u6ce8\u518c\u3001\u5206\u652f\u63d0\u4ea4\u3001\u5206\u652f\u4e0a\u62a5\u3001\u5206\u652f\u56de\u6eda\u7b49\u7b49\\n  void onTrxMessage(RpcMessage request, ChannelHandlerContext ctx, ServerMessageSender sender);\\n\\t// \u5904\u7406 RM \u5ba2\u6237\u7aef\u7684\u6ce8\u518c\u8fde\u63a5\\n  void onRegRmMessage(RpcMessage request, ChannelHandlerContext ctx,\\n                      ServerMessageSender sender, RegisterCheckAuthHandler checkAuthHandler);\\n  // \u5904\u7406 TM \u5ba2\u6237\u7aef\u7684\u6ce8\u518c\u8fde\u63a5\\n  void onRegTmMessage(RpcMessage request, ChannelHandlerContext ctx,\\n                      ServerMessageSender sender, RegisterCheckAuthHandler checkAuthHandler);\\n  // \u670d\u52a1\u7aef\u4e0e\u5ba2\u6237\u7aef\u4fdd\u6301\u5fc3\u8df3\\n  void onCheckMessage(RpcMessage request, ChannelHandlerContext ctx, ServerMessageSender sender)\\n\\n}\\n```\\n\\nChannelManager \u662f\u670d\u52a1\u7aef channel \u7684\u7ba1\u7406\u5668\uff0c\u670d\u52a1\u7aef\u6bcf\u6b21\u548c\u5ba2\u6237\u7aef\u901a\u4fe1\uff0c\u90fd\u9700\u8981\u4ece ChannelManager \u4e2d\u83b7\u53d6\u5ba2\u6237\u7aef\u5bf9\u5e94\u7684 channel\uff0c\u5b83\u7528\u4e8e\u4fdd\u5b58 TM \u548c RM \u5ba2\u6237\u7aef channel \u7684\u7f13\u5b58\u7ed3\u6784\u5982\u4e0b\uff1a\\n\\n```java\\n/**\\n * resourceId -> applicationId -> ip -> port -> RpcContext\\n */\\nprivate static final ConcurrentMap<String, ConcurrentMap<String, ConcurrentMap<String, ConcurrentMap<Integer,\\nRpcContext>>>>\\n  RM_CHANNELS = new ConcurrentHashMap<String, ConcurrentMap<String, ConcurrentMap<String, ConcurrentMap<Integer,\\nRpcContext>>>>();\\n\\n/**\\n * ip+appname,port\\n */\\nprivate static final ConcurrentMap<String, ConcurrentMap<Integer, RpcContext>> TM_CHANNELS\\n  = new ConcurrentHashMap<String, ConcurrentMap<Integer, RpcContext>>();\\n```\\n\\n\u4ee5\u4e0a\u7684 Map \u7ed3\u6784\u6709\u70b9\u590d\u6742\uff1a\\n\\nRM_CHANNELS\uff1a\\n\\n1. resourceId \u6307\u7684\u662f RM client \u7684\u6570\u636e\u5e93\u5730\u5740\uff1b\\n2. applicationId \u6307\u7684\u662f RM client \u7684\u670d\u52a1 Id\uff0c\u6bd4\u5982 springboot \u7684\u914d\u7f6e spring.application.name=account-service \u4e2d\u7684 account-service \u5373\u662f  applicationId\uff1b\\n3. ip \u6307\u7684\u662f RM client \u670d\u52a1\u5730\u5740\uff1b\\n4. port \u6307\u7684\u662f RM client \u670d\u52a1\u5730\u5740\uff1b\\n5. RpcContext \u4fdd\u5b58\u4e86\u672c\u6b21\u6ce8\u518c\u8bf7\u6c42\u7684\u4fe1\u606f\u3002\\n\\nTM_CHANNELS\uff1a\\n\\n1. ip+appname\uff1a\u8fd9\u91cc\u7684\u6ce8\u91ca\u5e94\u8be5\u662f\u5199\u9519\u4e86\uff0c\u5e94\u8be5\u662f appname+ip\uff0c\u5373 TM_CHANNELS \u7684 Map \u7ed3\u6784\u7b2c\u4e00\u4e2a key \u4e3a appname+ip\uff1b\\n2. port\uff1a\u5ba2\u6237\u7aef\u7684\u7aef\u53e3\u53f7\u3002\\n\\n\u4ee5\u4e0b\u662f RM Client \u6ce8\u518c\u903b\u8f91\uff1a\\n\\nio.seata.core.rpc.ChannelManager#registerRMChannel\\n\\n```java\\npublic static void registerRMChannel(RegisterRMRequest resourceManagerRequest, Channel channel)\\n  throws IncompatibleVersionException {\\n  Version.checkVersion(resourceManagerRequest.getVersion());\\n  // \u5c06 ResourceIds \u6570\u636e\u5e93\u8fde\u63a5\u8fde\u63a5\u4fe1\u606f\u653e\u5165\u4e00\u4e2aset\u4e2d\\n  Set<String> dbkeySet = dbKeytoSet(resourceManagerRequest.getResourceIds());\\n  RpcContext rpcContext;\\n  // \u4ece\u7f13\u5b58\u4e2d\u5224\u65ad\u662f\u5426\u6709\u8be5channel\u4fe1\u606f\\n  if (!IDENTIFIED_CHANNELS.containsKey(channel)) {\\n    // \u6839\u636e\u8bf7\u6c42\u6ce8\u518c\u4fe1\u606f\uff0c\u6784\u5efa rpcContext\\n    rpcContext = buildChannelHolder(NettyPoolKey.TransactionRole.RMROLE, resourceManagerRequest.getVersion(),\\n                                    resourceManagerRequest.getApplicationId(), resourceManagerRequest.getTransactionServiceGroup(),\\n                                    resourceManagerRequest.getResourceIds(), channel);\\n    // \u5c06 rpcContext \u653e\u5165\u7f13\u5b58\u4e2d\\n    rpcContext.holdInIdentifiedChannels(IDENTIFIED_CHANNELS);\\n  } else {\\n    rpcContext = IDENTIFIED_CHANNELS.get(channel);\\n    rpcContext.addResources(dbkeySet);\\n  }\\n  if (null == dbkeySet || dbkeySet.isEmpty()) { return; }\\n  for (String resourceId : dbkeySet) {\\n    String clientIp;\\n    // \u5c06\u8bf7\u6c42\u4fe1\u606f\u5b58\u5165 RM_CHANNELS \u4e2d\uff0c\u8fd9\u91cc\u7528\u4e86 java8 \u7684 computeIfAbsent \u65b9\u6cd5\u64cd\u4f5c\\n    ConcurrentMap<Integer, RpcContext> portMap = RM_CHANNELS.computeIfAbsent(resourceId, resourceIdKey -> new ConcurrentHashMap<>())\\n      .computeIfAbsent(resourceManagerRequest.getApplicationId(), applicationId -> new ConcurrentHashMap<>())\\n      .computeIfAbsent(clientIp = getClientIpFromChannel(channel), clientIpKey -> new ConcurrentHashMap<>());\\n\\t\\t// \u5c06\u5f53\u524d rpcContext \u653e\u5165 portMap \u4e2d\\n    rpcContext.holdInResourceManagerChannels(resourceId, portMap);\\n    updateChannelsResource(resourceId, clientIp, resourceManagerRequest.getApplicationId());\\n  }\\n}\\n```\\n\\n\u4ece\u4ee5\u4e0a\u4ee3\u7801\u903b\u8f91\u80fd\u591f\u770b\u51fa\uff0c\u6ce8\u518c RM client \u4e3b\u8981\u662f\u5c06\u6ce8\u518c\u8bf7\u6c42\u4fe1\u606f\uff0c\u653e\u5165 RM_CHANNELS \u7f13\u5b58\u4e2d\uff0c\u540c\u65f6\u8fd8\u4f1a\u4ece IDENTIFIED_CHANNELS \u4e2d\u5224\u65ad\u672c\u6b21\u8bf7\u6c42\u7684 channel \u662f\u5426\u5df2\u9a8c\u8bc1\u8fc7\uff0cIDENTIFIED_CHANNELS \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\\n\\n```java\\nprivate static final ConcurrentMap<Channel, RpcContext> IDENTIFIED_CHANNELS\\n  = new ConcurrentHashMap<>();\\n```\\n\\nIDENTIFIED_CHANNELS \u5305\u542b\u4e86\u6240\u6709 TM \u548c RM \u5df2\u6ce8\u518c\u7684 channel\u3002\\n\\n\u4ee5\u4e0b\u662f TM \u6ce8\u518c\u903b\u8f91\uff1a\\n\\nio.seata.core.rpc.ChannelManager#registerTMChannel\\n\\n```java\\npublic static void registerTMChannel(RegisterTMRequest request, Channel channel)\\n  throws IncompatibleVersionException {\\n  Version.checkVersion(request.getVersion());\\n  // \u6839\u636e\u8bf7\u6c42\u6ce8\u518c\u4fe1\u606f\uff0c\u6784\u5efa RpcContext\\n  RpcContext rpcContext = buildChannelHolder(NettyPoolKey.TransactionRole.TMROLE, request.getVersion(),\\n                                             request.getApplicationId(),\\n                                             request.getTransactionServiceGroup(),\\n                                             null, channel);\\n  // \u5c06 RpcContext \u653e\u5165 IDENTIFIED_CHANNELS \u7f13\u5b58\u4e2d\\n  rpcContext.holdInIdentifiedChannels(IDENTIFIED_CHANNELS);\\n  // account-service:127.0.0.1:63353\\n  String clientIdentified = rpcContext.getApplicationId() + Constants.CLIENT_ID_SPLIT_CHAR\\n    + getClientIpFromChannel(channel);\\n  // \u5c06\u8bf7\u6c42\u4fe1\u606f\u5b58\u5165 TM_CHANNELS \u7f13\u5b58\u4e2d\\n  TM_CHANNELS.putIfAbsent(clientIdentified, new ConcurrentHashMap<Integer, RpcContext>());\\n  // \u5c06\u4e0a\u4e00\u6b65\u521b\u5efa\u597d\u7684get\u51fa\u6765\uff0c\u4e4b\u540e\u518d\u5c06rpcContext\u653e\u5165\u8fd9\u4e2amap\u7684value\u4e2d\\n  ConcurrentMap<Integer, RpcContext> clientIdentifiedMap = TM_CHANNELS.get(clientIdentified);\\n  rpcContext.holdInClientChannels(clientIdentifiedMap);\\n}\\n```\\n\\nTM client \u7684\u6ce8\u518c\u5927\u4f53\u7c7b\u4f3c\uff0c\u628a\u672c\u6b21\u6ce8\u518c\u7684\u4fe1\u606f\u653e\u5165\u5bf9\u5e94\u7684\u7f13\u5b58\u4e2d\u4fdd\u5b58\uff0c\u4f46\u6bd4 RM client \u7684\u6ce8\u518c\u903b\u8f91\u7b80\u5355\u4e00\u4e9b\uff0c\u4e3b\u8981\u662f RM client \u4f1a\u6d89\u53ca\u5206\u652f\u4e8b\u52a1\u8d44\u6e90\u7684\u4fe1\u606f\uff0c\u9700\u8981\u6ce8\u518c\u7684\u4fe1\u606f\u4e5f\u4f1a\u6bd4 TM client \u591a\u3002\\n\\n\u4ee5\u4e0a\u6e90\u7801\u5206\u6790\u57fa\u4e8e 0.9.0 \u7248\u672c\u3002\\n\\n\\n# \u4f5c\u8005\u7b80\u4ecb\\n\\n\u5f20\u4e58\u8f89\uff0c\u76ee\u524d\u5c31\u804c\u4e8e\u4e2d\u901a\u79d1\u6280\u4fe1\u606f\u4e2d\u5fc3\u6280\u672f\u5e73\u53f0\u90e8\uff0c\u62c5\u4efb Java \u5de5\u7a0b\u5e08\uff0c\u4e3b\u8981\u8d1f\u8d23\u4e2d\u901a\u6d88\u606f\u5e73\u53f0\u4e0e\u5168\u94fe\u8def\u538b\u6d4b\u9879\u76ee\u7684\u7814\u53d1\uff0c\u70ed\u7231\u5206\u4eab\u6280\u672f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u300c\u540e\u7aef\u8fdb\u9636\u300d\u4f5c\u8005\uff0c\u6280\u672f\u535a\u5ba2\uff08[https://objcoding.com/](https://objcoding.com/)\uff09\u535a\u4e3b\uff0cSeata Contributor\uff0cGitHub ID\uff1aobjcoding\u3002"},{"id":"/design-more-flexable-application-by-saga","metadata":{"permalink":"/zh-cn/blog/design-more-flexable-application-by-saga","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/design-more-flexable-application-by-saga.md","title":"\u57fa\u4e8e Seata Saga \u8bbe\u8ba1\u66f4\u6709\u5f39\u6027\u7684\u91d1\u878d\u5e94\u7528","description":"\u672c\u6587\u4ece\u91d1\u878d\u5206\u5e03\u5f0f\u5e94\u7528\u5f00\u53d1\u7684\u4e00\u4e9b\u75db\u70b9\u51fa\u53d1\uff0c\u7ed3\u5408\u7406\u8bba\u548c\u5b9e\u8df5\u5bf9\u793e\u533a\u548c\u884c\u4e1a\u7684\u89e3\u51b3\u65b9\u6848\u8fdb\u884c\u4e86\u5206\u6790\uff0c\u5e76\u8bb2\u89e3\u4e86\u5982\u4f55\u57fa\u4e8eSeata saga\u8bbe\u8ba1\u66f4\u6709\u5f39\u6027\u7684\u91d1\u878d\u5e94\u7528","date":"2019-11-04T00:00:00.000Z","formattedDate":"2019\u5e7411\u67084\u65e5","tags":[],"readingTime":28.77,"hasTruncateMarker":false,"authors":[{"name":"long187"}],"frontMatter":{"title":"\u57fa\u4e8e Seata Saga \u8bbe\u8ba1\u66f4\u6709\u5f39\u6027\u7684\u91d1\u878d\u5e94\u7528","keywords":["Saga","Seata","\u4e00\u81f4\u6027","\u91d1\u878d","\u5f39\u6027","\u5206\u5e03\u5f0f","\u4e8b\u52a1"],"description":"\u672c\u6587\u4ece\u91d1\u878d\u5206\u5e03\u5f0f\u5e94\u7528\u5f00\u53d1\u7684\u4e00\u4e9b\u75db\u70b9\u51fa\u53d1\uff0c\u7ed3\u5408\u7406\u8bba\u548c\u5b9e\u8df5\u5bf9\u793e\u533a\u548c\u884c\u4e1a\u7684\u89e3\u51b3\u65b9\u6848\u8fdb\u884c\u4e86\u5206\u6790\uff0c\u5e76\u8bb2\u89e3\u4e86\u5982\u4f55\u57fa\u4e8eSeata saga\u8bbe\u8ba1\u66f4\u6709\u5f39\u6027\u7684\u91d1\u878d\u5e94\u7528","author":"long187","date":"2019-11-04T00:00:00.000Z"},"prevItem":{"title":"Seata AT \u6a21\u5f0f\u542f\u52a8\u6e90\u7801\u5206\u6790","permalink":"/zh-cn/blog/seata-at-mode-start"},"nextItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u53ca\u5176\u4e09\u79cd\u6a21\u5f0f\u8be6\u89e3","permalink":"/zh-cn/blog/seata-at-tcc-saga"}},"content":"Seata \u610f\u4e3a\uff1aSimple Extensible Autonomous Transaction Architecture\uff0c\u662f\u4e00\u5957\u4e00\u7ad9\u5f0f\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u63d0\u4f9b\u4e86 AT\u3001TCC\u3001Saga \u548c XA \u4e8b\u52a1\u6a21\u5f0f\uff0c\u672c\u6587\u8be6\u89e3\u5176\u4e2d\u7684 Saga \u6a21\u5f0f\u3002<br />\u9879\u76ee\u5730\u5740\uff1a[https://github.com/seata/seata](https://github.com/seata/seata)\\n\\n\u672c\u6587\u4f5c\u8005\uff1a\u5c79\u8fdc\uff08\u9648\u9f99\uff09\uff0c\u8682\u8681\u91d1\u670d\u5206\u5e03\u5f0f\u4e8b\u52a1\u6838\u5fc3\u7814\u53d1\uff0cSeata Committer\u3002\\n\\n<a name=\\"uTwja\\"></a>\\n# \u91d1\u878d\u5206\u5e03\u5f0f\u5e94\u7528\u5f00\u53d1\u7684\u75db\u70b9\\n\\n\u5206\u5e03\u5f0f\u7cfb\u7edf\u6709\u4e00\u4e2a\u6bd4\u8f83\u660e\u663e\u7684\u95ee\u9898\u5c31\u662f\uff0c\u4e00\u4e2a\u4e1a\u52a1\u6d41\u7a0b\u9700\u8981\u7ec4\u5408\u4e00\u7ec4\u670d\u52a1\u3002\u8fd9\u6837\u7684\u4e8b\u60c5\u5728\u5fae\u670d\u52a1\u4e0b\u5c31\u66f4\u4e3a\u660e\u663e\u4e86\uff0c\u56e0\u4e3a\u8fd9\u9700\u8981\u4e1a\u52a1\u4e0a\u7684\u4e00\u81f4\u6027\u7684\u4fdd\u8bc1\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u6b65\u9aa4\u5931\u8d25\u4e86\uff0c\u90a3\u4e48\u8981\u4e48\u56de\u6eda\u5230\u4ee5\u524d\u7684\u670d\u52a1\u8c03\u7528\uff0c\u8981\u4e48\u4e0d\u65ad\u91cd\u8bd5\u4fdd\u8bc1\u6240\u6709\u7684\u6b65\u9aa4\u90fd\u6210\u529f\u3002---\u300a\u5de6\u8033\u542c\u98ce-\u5f39\u529b\u8bbe\u8ba1\u4e4b\u201c\u8865\u507f\u4e8b\u52a1\u201d\u300b\\n\\n\u800c\u5728\u91d1\u878d\u9886\u57df\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u7684\u4e1a\u52a1\u6d41\u7a0b\u5f80\u5f80\u4f1a\u66f4\u590d\u6742\uff0c\u6d41\u7a0b\u5f88\u957f\uff0c\u6bd4\u5982\u4e00\u4e2a\u4e92\u8054\u7f51\u5fae\u8d37\u4e1a\u52a1\u6d41\u7a0b\u8c03\u5341\u51e0\u4e2a\u670d\u52a1\u5f88\u6b63\u5e38\uff0c\u518d\u52a0\u4e0a\u5f02\u5e38\u5904\u7406\u7684\u6d41\u7a0b\u90a3\u5c31\u66f4\u590d\u6742\u4e86\uff0c\u505a\u8fc7\u91d1\u878d\u4e1a\u52a1\u5f00\u53d1\u7684\u540c\u5b66\u4f1a\u5f88\u6709\u4f53\u611f\u3002\\n\\n\u6240\u4ee5\u5728\u91d1\u878d\u5206\u5e03\u5f0f\u5e94\u7528\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u6211\u4eec\u9762\u4e34\u4e00\u4e9b\u75db\u70b9\uff1a\\n\\n- **\u4e1a\u52a1\u4e00\u81f4\u6027\u96be\u4ee5\u4fdd\u969c**<br />\\n\\n\u6211\u4eec\u63a5\u89e6\u5230\u7684\u5927\u591a\u6570\u4e1a\u52a1\uff08\u6bd4\u5982\u5728\u6e20\u9053\u5c42\u3001\u4ea7\u54c1\u5c42\u3001\u96c6\u6210\u5c42\u7684\u7cfb\u7edf\uff09\uff0c\u4e3a\u4e86\u4fdd\u969c\u4e1a\u52a1\u6700\u7ec8\u4e00\u81f4\u6027\uff0c\u5f80\u5f80\u4f1a\u91c7\u7528\u201c\u8865\u507f\u201d\u7684\u65b9\u5f0f\u6765\u505a\uff0c\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u534f\u8c03\u5668\u6765\u652f\u6301\uff0c\u5f00\u53d1\u96be\u5ea6\u662f\u6bd4\u8f83\u5927\u7684\uff0c\u6bcf\u4e00\u6b65\u90fd\u8981\u5728 catch \u91cc\u53bb\u5904\u7406\u524d\u9762\u6240\u6709\u7684\u201c\u56de\u6eda\u201d\u64cd\u4f5c\uff0c\u8fd9\u5c06\u4f1a\u5f62\u6210\u201c\u7bad\u5934\u5f62\u201d\u7684\u4ee3\u7801\uff0c\u53ef\u8bfb\u6027\u53ca\u7ef4\u62a4\u6027\u5dee\u3002\u6216\u8005\u91cd\u8bd5\u5f02\u5e38\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u91cd\u8bd5\u4e0d\u6210\u529f\u53ef\u80fd\u8981\u8f6c\u5f02\u6b65\u91cd\u8bd5\uff0c\u751a\u81f3\u6700\u540e\u8f6c\u4eba\u5de5\u5904\u7406\u3002\u8fd9\u4e9b\u90fd\u7ed9\u5f00\u53d1\u4eba\u5458\u5e26\u6765\u6781\u5927\u7684\u8d1f\u62c5\uff0c\u5f00\u53d1\u6548\u7387\u4f4e\uff0c\u4e14\u5bb9\u6613\u51fa\u9519\u3002\\n\\n- **\u4e1a\u52a1\u72b6\u6001\u96be\u4ee5\u7ba1\u7406**<br />\\n\\n\u4e1a\u52a1\u5b9e\u4f53\u5f88\u591a\u3001\u5b9e\u4f53\u7684\u72b6\u6001\u4e5f\u5f88\u591a\uff0c\u5f80\u5f80\u505a\u5b8c\u4e00\u4e2a\u4e1a\u52a1\u6d3b\u52a8\u540e\u5c31\u5c06\u5b9e\u4f53\u7684\u72b6\u6001\u66f4\u65b0\u5230\u4e86\u6570\u636e\u5e93\u91cc\uff0c\u6ca1\u6709\u4e00\u4e2a\u72b6\u6001\u673a\u6765\u7ba1\u7406\u6574\u4e2a\u72b6\u6001\u7684\u53d8\u8fc1\u8fc7\u7a0b\uff0c\u4e0d\u76f4\u89c2\uff0c\u5bb9\u6613\u51fa\u9519\uff0c\u9020\u6210\u4e1a\u52a1\u8fdb\u5165\u4e00\u4e2a\u4e0d\u6b63\u786e\u7684\u72b6\u6001\u3002\\n\\n- **\u5e42\u7b49\u6027\u96be\u4ee5\u4fdd\u969c**<br />\\n\\n\u670d\u52a1\u7684\u5e42\u7b49\u6027\u662f\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u7684\u57fa\u672c\u8981\u6c42\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u670d\u52a1\u7684\u5e42\u7b49\u6027\u5f80\u5f80\u9700\u8981\u670d\u52a1\u5f00\u53d1\u8005\u9010\u4e2a\u53bb\u8bbe\u8ba1\uff0c\u6709\u7528\u6570\u636e\u5e93\u552f\u4e00\u952e\u5b9e\u73b0\u7684\uff0c\u6709\u7528\u5206\u5e03\u5f0f\u7f13\u5b58\u5b9e\u73b0\u7684\uff0c\u6ca1\u6709\u4e00\u4e2a\u7edf\u4e00\u7684\u65b9\u6848\uff0c\u5f00\u53d1\u4eba\u5458\u8d1f\u62c5\u5927\uff0c\u4e5f\u5bb9\u6613\u9057\u6f0f\uff0c\u4ece\u800c\u9020\u6210\u8d44\u635f\u3002\\n\\n- **\u4e1a\u52a1\u76d1\u63a7\u8fd0\u7ef4\u96be\uff0c\u7f3a\u4e4f\u7edf\u4e00\u7684\u5dee\u9519\u5b88\u62a4\u80fd\u529b**<br />\\n\\n\u4e1a\u52a1\u7684\u6267\u884c\u60c5\u51b5\u76d1\u63a7\u4e00\u822c\u901a\u8fc7\u6253\u5370\u65e5\u5fd7\uff0c\u518d\u57fa\u4e8e\u65e5\u5fd7\u76d1\u63a7\u5e73\u53f0\u67e5\u770b\uff0c\u5927\u591a\u6570\u60c5\u51b5\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u4f46\u662f\u5982\u679c\u4e1a\u52a1\u51fa\u9519\uff0c\u8fd9\u4e9b\u76d1\u63a7\u7f3a\u4e4f\u5f53\u65f6\u7684\u4e1a\u52a1\u4e0a\u4e0b\u6587\uff0c\u5bf9\u6392\u67e5\u95ee\u9898\u4e0d\u53cb\u597d\uff0c\u5f80\u5f80\u9700\u8981\u518d\u53bb\u6570\u636e\u5e93\u91cc\u67e5\u3002\u540c\u65f6\u65e5\u5fd7\u7684\u6253\u5370\u4e5f\u4f9d\u8d56\u4e8e\u5f00\u53d1\uff0c\u5bb9\u6613\u9057\u6f0f\u3002\u5bf9\u4e8e\u8865\u507f\u4e8b\u52a1\u5f80\u5f80\u9700\u8981\u6709\u201c\u5dee\u9519\u5b88\u62a4\u89e6\u53d1\u8865\u507f\u201d\u3001\u201c\u5de5\u4eba\u89e6\u53d1\u8865\u507f\u201d\u64cd\u4f5c\uff0c\u6ca1\u6709\u7edf\u4e00\u7684\u5dee\u9519\u5b88\u62a4\u548c\u5904\u7406\u89c4\u8303\uff0c\u8fd9\u4e9b\u90fd\u8981\u5f00\u53d1\u8005\u9010\u4e2a\u5f00\u53d1\uff0c\u8d1f\u62c5\u6c89\u91cd\u3002\\n\\n<a name=\\"hvEU6\\"></a>\\n\\n# \u7406\u8bba\u57fa\u7840\\n\\n\u4e00\u4e9b\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u5bf9\u6570\u636e\u6709\u5f3a\u4e00\u81f4\u6027\u7684\u9700\u6c42\u65f6\uff0c\u4f1a\u91c7\u7528\u5728\u4e1a\u52a1\u5c42\u4e0a\u9700\u8981\u4f7f\u7528\u201c\u4e24\u9636\u6bb5\u63d0\u4ea4\u201d\u8fd9\u6837\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u65b9\u6848\u3002\u800c\u5728\u53e6\u5916\u4e00\u4e9b\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u8fd9\u4e48\u5f3a\u7684\u4e00\u81f4\u6027\uff0c\u90a3\u5c31\u53ea\u9700\u8981\u4fdd\u8bc1\u6700\u7ec8\u4e00\u81f4\u6027\u5c31\u53ef\u4ee5\u4e86\u3002\\n\\n\u4f8b\u5982\u8682\u8681\u91d1\u670d\u76ee\u524d\u5728\u91d1\u878d\u6838\u5fc3\u7cfb\u7edf\u4f7f\u7528\u7684\u5c31\u662f TCC \u6a21\u5f0f\uff0c\u91d1\u878d\u6838\u5fc3\u7cfb\u7edf\u7684\u7279\u70b9\u662f\u4e00\u81f4\u6027\u8981\u6c42\u9ad8\uff08\u4e1a\u52a1\u4e0a\u7684\u9694\u79bb\u6027\uff09\u3001\u77ed\u6d41\u7a0b\u3001\u5e76\u53d1\u9ad8\u3002\\n\\n\u800c\u5728\u5f88\u591a\u91d1\u878d\u6838\u5fc3\u4ee5\u4e0a\u7684\u4e1a\u52a1\uff08\u6bd4\u5982\u5728\u6e20\u9053\u5c42\u3001\u4ea7\u54c1\u5c42\u3001\u96c6\u6210\u5c42\u7684\u7cfb\u7edf\uff09\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u7684\u7279\u70b9\u662f\u6700\u7ec8\u4e00\u81f4\u5373\u53ef\u3001\u6d41\u7a0b\u591a\u3001\u6d41\u7a0b\u957f\u3001\u8fd8\u53ef\u80fd\u8981\u8c03\u7528\u5176\u5b83\u516c\u53f8\u7684\u670d\u52a1\uff08\u5982\u91d1\u878d\u7f51\u7edc\uff09\u3002\u8fd9\u662f\u5982\u679c\u6bcf\u4e2a\u670d\u52a1\u90fd\u5f00\u53d1 Try\u3001Confirm\u3001Cancel \u4e09\u4e2a\u65b9\u6cd5\u6210\u672c\u9ad8\u3002\u5982\u679c\u4e8b\u52a1\u4e2d\u6709\u5176\u5b83\u516c\u53f8\u7684\u670d\u52a1\uff0c\u4e5f\u65e0\u6cd5\u8981\u6c42\u5176\u5b83\u516c\u53f8\u7684\u670d\u52a1\u4e5f\u9075\u5faa TCC \u8fd9\u79cd\u5f00\u53d1\u6a21\u5f0f\u3002\u540c\u65f6\u6d41\u7a0b\u957f\uff0c\u4e8b\u52a1\u8fb9\u754c\u592a\u957f\u4f1a\u5f71\u54cd\u6027\u80fd\u3002\\n\\n\u5bf9\u4e8e\u4e8b\u52a1\u6211\u4eec\u90fd\u77e5\u9053 ACID\uff0c\u4e5f\u5f88\u719f\u6089 CAP \u7406\u8bba\u6700\u591a\u53ea\u80fd\u6ee1\u8db3\u5176\u4e2d\u4e24\u4e2a\uff0c\u6240\u4ee5\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u51fa\u73b0\u4e86 ACID \u7684\u4e00\u4e2a\u53d8\u79cd BASE\u3002ACID \u5f3a\u8c03\u7684\u662f\u4e00\u81f4\u6027\uff08CAP \u4e2d\u7684 C\uff09\uff0c\u800c BASE \u5f3a\u8c03\u7684\u662f\u53ef\u7528\u6027\uff08CAP \u4e2d\u7684 A\uff09\u3002\u6211\u4eec\u77e5\u9053\uff0c\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u662f\u65e0\u6cd5\u505a\u5230\u5f3a\u4e00\u81f4\u6027\u7684 ACID \u7684\u3002\u7279\u522b\u662f\u6211\u4eec\u9700\u8981\u8de8\u591a\u4e2a\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u800c\u4e14\u8fd9\u4e9b\u7cfb\u7edf\u8fd8\u4e0d\u662f\u7531\u4e00\u4e2a\u516c\u53f8\u6240\u63d0\u4f9b\u7684\u3002BASE \u7684\u7cfb\u7edf\u503e\u5411\u4e8e\u8bbe\u8ba1\u51fa\u66f4\u52a0\u6709\u5f39\u529b\u7684\u7cfb\u7edf\uff0c\u5728\u77ed\u65f6\u95f4\u5185\uff0c\u5c31\u7b97\u662f\u6709\u6570\u636e\u4e0d\u540c\u6b65\u7684\u98ce\u9669\uff0c\u6211\u4eec\u4e5f\u5e94\u8be5\u5141\u8bb8\u65b0\u7684\u4ea4\u6613\u53ef\u4ee5\u53d1\u751f\uff0c\u800c\u540e\u9762\u6211\u4eec\u5728\u4e1a\u52a1\u4e0a\u5c06\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\u7684\u4e8b\u52a1\u901a\u8fc7\u8865\u507f\u7684\u65b9\u5f0f\u5904\u7406\u6389\uff0c\u4ee5\u4fdd\u8bc1\u6700\u7ec8\u7684\u4e00\u81f4\u6027\u3002\\n\\n\u6240\u4ee5\u6211\u4eec\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u4f1a\u8fdb\u884c\u53d6\u820d\uff0c\u5bf9\u4e8e\u66f4\u591a\u7684\u91d1\u878d\u6838\u5fc3\u4ee5\u4e0a\u7684\u4e1a\u52a1\u7cfb\u7edf\u53ef\u4ee5\u91c7\u7528\u8865\u507f\u4e8b\u52a1\uff0c\u8865\u507f\u4e8b\u52a1\u5904\u7406\u65b9\u9762\u572830\u5e74\u524d\u5c31\u63d0\u51fa\u4e86\xa0Saga \u7406\u8bba\uff0c\u968f\u7740\u5fae\u670d\u52a1\u7684\u53d1\u5c55\uff0c\u8fd1\u4e9b\u5e74\u624d\u9010\u6b65\u53d7\u5230\u5927\u5bb6\u7684\u5173\u6ce8\u3002\u76ee\u524d\u4e1a\u754c\u6bd4\u8f83\u4e5f\u516c\u8ba4 Saga \u662f\u4f5c\u4e3a\u957f\u4e8b\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u3002\\n> [https://github.com/aphyr/dist-sagas/blob/master/sagas.pdf](https://github.com/aphyr/dist-sagas/blob/master/sagas.pdf)[1]\\n> [http://microservices.io/patterns/data/saga.html](http://microservices.io/patterns/data/saga.html)[2]\\n\\n\\n<a name=\\"k8kbY\\"></a>\\n\\n# \u793e\u533a\u548c\u4e1a\u754c\u7684\u65b9\u6848\\n\\n<a name=\\"Oc5Er\\"></a>\\n## Apache Camel Saga\\n\\nCamel \u662f\u5b9e\u73b0 EIP\uff08Enterprise Integration Patterns\uff09\u4f01\u4e1a\u96c6\u6210\u6a21\u5f0f\u7684\u4e00\u6b3e\u5f00\u6e90\u4ea7\u54c1\uff0c\u5b83\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7684\u67b6\u6784\uff0c\u6709\u7740\u826f\u597d\u7684\u6027\u80fd\u548c\u541e\u5410\u91cf\uff0c\u5b83\u57282.21\u7248\u672c\u65b0\u589e\u52a0\u4e86 Saga EIP\u3002\\n\\nSaga EIP \u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u5f0f\u53ef\u4ee5\u901a\u8fc7 camel route \u5b9a\u4e49\u4e00\u7cfb\u5217\u6709\u5173\u8054\u5173\u7cfb\u7684 Action\uff0c\u8fd9\u4e9b Action \u8981\u4e48\u90fd\u6267\u884c\u6210\u529f\uff0c\u8981\u4e48\u90fd\u56de\u6eda\uff0cSaga \u53ef\u4ee5\u534f\u8c03\u4efb\u4f55\u901a\u8baf\u534f\u8bae\u7684\u5206\u5e03\u5f0f\u670d\u52a1\u6216\u672c\u5730\u670d\u52a1\uff0c\u5e76\u8fbe\u5230\u5168\u5c40\u7684\u6700\u7ec8\u4e00\u81f4\u6027\u3002Saga \u4e0d\u8981\u6c42\u6574\u4e2a\u5904\u7406\u5728\u77ed\u65f6\u95f4\u5185\u5b8c\u6210\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5360\u7528\u4efb\u4f55\u6570\u636e\u5e93\u9501\uff0c\u5b83\u53ef\u4ee5\u652f\u6301\u9700\u8981\u957f\u65f6\u95f4\u5904\u7406\u7684\u8bf7\u6c42\uff0c\u4ece\u51e0\u79d2\u5230\u51e0\u5929\uff0cCamel \u7684 Saga EIP \u662f\u57fa\u4e8e\xa0[Microprofile \u7684 LRA](https://github.com/eclipse/microprofile-sandbox/tree/master/proposals/0009-LRA)[3]\uff08Long Running Action\uff09\uff0c\u540c\u6837\u4e5f\u662f\u652f\u6301\u534f\u8c03\u4efb\u4f55\u901a\u8baf\u534f\u8bae\u4efb\u4f55\u8bed\u8a00\u5b9e\u73b0\u7684\u5206\u5e03\u5f0f\u670d\u52a1\u3002\\n\\nSaga \u7684\u5b9e\u73b0\u4e0d\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u52a0\u9501\uff0c\u800c\u662f\u5728\u7ed9\u64cd\u4f5c\u5b9a\u4e49\u5b83\u7684\u201c\u8865\u507f\u64cd\u4f5c\u201d\uff0c\u5f53\u6b63\u5e38\u6d41\u7a0b\u6267\u884c\u51fa\u9519\u7684\u65f6\u5019\u89e6\u53d1\u90a3\u4e9b\u5df2\u7ecf\u6267\u884c\u8fc7\u7684\u64cd\u4f5c\u7684\u201c\u8865\u507f\u64cd\u4f5c\u201d\uff0c\u5c06\u6d41\u7a0b\u56de\u6eda\u6389\u3002\u201c\u8865\u507f\u64cd\u4f5c\u201d\u53ef\u4ee5\u5728 Camel route \u4e0a\u7528 Java \u6216 XML DSL\uff08Definition Specific Language\uff09\u6765\u5b9a\u4e49\u3002\\n\\n\u4e0b\u9762\u662f\u4e00\u4e2a Java DSL \u793a\u4f8b\uff1a\\n```java\\n// action\\nfrom(\\"direct:reserveCredit\\")\\n  .bean(idService, \\"generateCustomId\\") // generate a custom Id and set it in the body\\n  .to(\\"direct:creditReservation\\")\\n\\n// delegate action\\nfrom(\\"direct:creditReservation\\")\\n  .saga()\\n  .propagation(SagaPropagation.SUPPORTS)\\n  .option(\\"CreditId\\", body()) // mark the current body as needed in the compensating action\\n  .compensation(\\"direct:creditRefund\\")\\n    .bean(creditService, \\"reserveCredit\\")\\n    .log(\\"Credit ${header.amount} reserved. Custom Id used is ${body}\\");\\n\\n// called only if the saga is cancelled\\nfrom(\\"direct:creditRefund\\")\\n  .transform(header(\\"CreditId\\")) // retrieve the CreditId option from headers\\n  .bean(creditService, \\"refundCredit\\")\\n  .log(\\"Credit for Custom Id ${body} refunded\\");\\n```\\n\\nXML DSL \u793a\u4f8b\uff1a\\n```xml\\n<route>\\n  <from uri=\\"direct:start\\"/>\\n  <saga>\\n    <compensation uri=\\"direct:compensation\\" />\\n    <completion uri=\\"direct:completion\\" />\\n    <option optionName=\\"myOptionKey\\">\\n      <constant>myOptionValue</constant>\\n    </option>\\n    <option optionName=\\"myOptionKey2\\">\\n      <constant>myOptionValue2</constant>\\n    </option>\\n  </saga>\\n  <to uri=\\"direct:action1\\" />\\n  <to uri=\\"direct:action2\\" />\\n</route>\\n```\\n\\n<a name=\\"pQWuF\\"></a>\\n\\n## Eventuate Tram Saga\\n\\n[Eventuate Tram Saga](https://github.com/eventuate-tram/eventuate-tram-sagas)[4]\xa0\u6846\u67b6\u662f\u4f7f\u7528 JDBC / JPA \u7684 Java \u5fae\u670d\u52a1\u7684\u4e00\u4e2a Saga \u6846\u67b6\u3002\u5b83\u4e5f\u548c Camel Saga \u4e00\u6837\u91c7\u7528\u4e86\xa0Java DSL \u6765\u5b9a\u4e49\u8865\u507f\u64cd\u4f5c\uff1a\\n\\n```java\\npublic class CreateOrderSaga implements SimpleSaga<CreateOrderSagaData> {\\n\\n  private SagaDefinition<CreateOrderSagaData> sagaDefinition =\\n          step()\\n            .withCompensation(this::reject)\\n          .step()\\n            .invokeParticipant(this::reserveCredit)\\n          .step()\\n            .invokeParticipant(this::approve)\\n          .build();\\n\\n\\n  @Override\\n  public SagaDefinition<CreateOrderSagaData> getSagaDefinition() {\\n    return this.sagaDefinition;\\n  }\\n\\n\\n  private CommandWithDestination reserveCredit(CreateOrderSagaData data) {\\n    long orderId = data.getOrderId();\\n    Long customerId = data.getOrderDetails().getCustomerId();\\n    Money orderTotal = data.getOrderDetails().getOrderTotal();\\n    return send(new ReserveCreditCommand(customerId, orderId, orderTotal))\\n            .to(\\"customerService\\")\\n            .build();\\n\\n...\\n```\\n\\n<a name=\\"scN9h\\"></a>\\n\\n## Apache ServiceComb Saga\\n\\n[ServiceComb Saga](https://github.com/apache/incubator-servicecomb-saga)[5]\xa0\u4e5f\u662f\u4e00\u4e2a\u5fae\u670d\u52a1\u5e94\u7528\u7684\u6570\u636e\u6700\u7ec8\u4e00\u81f4\u6027\u89e3\u51b3\u65b9\u6848\u3002\u76f8\u5bf9\u4e8e\xa0[TCC](http://design.inf.usi.ch/sites/default/files/biblio/rest-tcc.pdf)\xa0\u800c\u8a00\uff0c\u5728 try \u9636\u6bb5\uff0cSaga \u4f1a\u76f4\u63a5\u63d0\u4ea4\u4e8b\u52a1\uff0c\u540e\u7eed rollback \u9636\u6bb5\u5219\u901a\u8fc7\u53cd\u5411\u7684\u8865\u507f\u64cd\u4f5c\u6765\u5b8c\u6210\u3002\u4e0e\u524d\u9762\u4e24\u79cd\u4e0d\u540c\u662f\u5b83\u662f\u91c7\u7528 Java \u6ce8\u89e3+\u62e6\u622a\u5668\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u201c\u8865\u507f\u201d\u670d\u52a1\u7684\u5b9a\u4e49\u3002<br />\\n\\n<a name=\\"ouwrmp\\"></a>\\n\\n#### \u67b6\u6784\uff1a\\n\\nSaga \u662f\u7531\xa0**alpha**\xa0\u548c\xa0**omega\xa0**\u7ec4\u6210\uff0c\u5176\u4e2d\uff1a\\n\\n- alpha \u5145\u5f53\u534f\u8c03\u8005\u7684\u89d2\u8272\uff0c\u4e3b\u8981\u8d1f\u8d23\u5bf9\u4e8b\u52a1\u8fdb\u884c\u7ba1\u7406\u548c\u534f\u8c03\uff1b<br />\\n- omega \u662f\u5fae\u670d\u52a1\u4e2d\u5185\u5d4c\u7684\u4e00\u4e2a agent\uff0c\u8d1f\u8d23\u5bf9\u7f51\u7edc\u8bf7\u6c42\u8fdb\u884c\u62e6\u622a\u5e76\u5411 alpha \u4e0a\u62a5\u4e8b\u52a1\u4e8b\u4ef6\uff1b<br />\\n\\n\u4e0b\u56fe\u5c55\u793a\u4e86 alpha\uff0comega \u4ee5\u53ca\u5fae\u670d\u52a1\u4e09\u8005\u7684\u5173\u7cfb\uff1a<br />\\n![ServiceComb Saga](/img/saga/service-comb-saga.png?raw=true)\\n\\n<a name=\\"ggflbq\\"></a>\\n\\n#### \u4f7f\u7528\u793a\u4f8b\uff1a\\n```java\\npublic class ServiceA extends AbsService implements IServiceA {\\n\\n  private static final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\\n\\n  @Autowired\\n  private IServiceB serviceB;\\n\\n  @Autowired\\n  private IServiceC serviceC;\\n\\n  @Override\\n  public String getServiceName() {\\n    return \\"servicea\\";\\n  }\\n\\n  @Override\\n  public String getTableName() {\\n    return \\"testa\\";\\n  }\\n\\n  @Override\\n  @SagaStart\\n  @Compensable(compensationMethod = \\"cancelRun\\")\\n  @Transactional(rollbackFor = Exception.class)\\n  public Object run(InvokeContext invokeContext) throws Exception {\\n    LOG.info(\\"A.run called\\");\\n    doRunBusi();\\n    if (invokeContext.isInvokeB(getServiceName())) {\\n      serviceB.run(invokeContext);\\n    }\\n    if (invokeContext.isInvokeC(getServiceName())) {\\n      serviceC.run(invokeContext);\\n    }\\n    if (invokeContext.isException(getServiceName())) {\\n      LOG.info(\\"A.run exception\\");\\n      throw new Exception(\\"A.run exception\\");\\n    }\\n    return null;\\n  }\\n\\n  public void cancelRun(InvokeContext invokeContext) {\\n    LOG.info(\\"A.cancel called\\");\\n    doCancelBusi();\\n  }\\n```\\n\\n<a name=\\"CnD8r\\"></a>\\n\\n## \u8682\u8681\u91d1\u670d\u7684\u5b9e\u8df5\\n\\n\u8682\u8681\u91d1\u670d\u5185\u90e8\u5927\u89c4\u6a21\u5728\u4f7f\u7528 TCC \u6a21\u5f0f\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u4e3b\u8981\u7528\u4e8e\u91d1\u878d\u6838\u5fc3\u7b49\u5bf9\u4e00\u81f4\u6027\u8981\u6c42\u9ad8\u3001\u6027\u80fd\u8981\u6c42\u9ad8\u7684\u573a\u666f\u3002\u5728\u66f4\u4e0a\u5c42\u7684\u4e1a\u52a1\u7cfb\u7edf\u56e0\u4e3a\u6d41\u7a0b\u591a\u6d41\u7a0b\u957f\uff0c\u5f00\u53d1 TCC \u6210\u672c\u6bd4\u8f83\u9ad8\uff0c\u5927\u90fd\u4f1a\u6743\u8861\u91c7\u7528 Saga \u6a21\u5f0f\u6765\u5230\u8fbe\u4e1a\u52a1\u6700\u7ec8\u4e00\u81f4\u6027\uff0c\u7531\u4e8e\u5386\u53f2\u7684\u539f\u56e0\u4e0d\u540c\u7684 BU \u6709\u81ea\u5df1\u7684\u4e00\u5957\u201c\u8865\u507f\u201d\u4e8b\u52a1\u7684\u65b9\u6848\uff0c\u57fa\u672c\u4e0a\u662f\u4e24\u79cd\uff1a\\n\\n- \u4e00\u79cd\u662f\u5f53\u4e00\u4e2a\u670d\u52a1\u5728\u5931\u8d25\u65f6\u9700\u8981\u201c\u91cd\u8bd5\u201d\u6216\u201c\u8865\u507f\u201d\u65f6\uff0c\u5728\u6267\u884c\u670d\u52a1\u524d\u5728\u6570\u636e\u5e93\u63d2\u5165\u4e00\u6761\u8bb0\u5f55\uff0c\u8bb0\u5f55\u72b6\u6001\uff0c\u5f53\u5f02\u5e38\u65f6\u901a\u8fc7\u5b9a\u65f6\u4efb\u52a1\u53bb\u67e5\u8be2\u6570\u636e\u5e93\u8bb0\u5f55\u5e76\u8fdb\u884c\u201c\u91cd\u8bd5\u201d\u6216\u201c\u8865\u507f\u201d\uff0c\u5f53\u4e1a\u52a1\u6d41\u7a0b\u6267\u884c\u6210\u529f\u5219\u5220\u9664\u8bb0\u5f55\uff1b\\n- \u53e6\u4e00\u79cd\u662f\u8bbe\u8ba1\u4e00\u4e2a\u72b6\u6001\u673a\u5f15\u64ce\u548c\u7b80\u5355\u7684 DSL\uff0c\u7f16\u6392\u4e1a\u52a1\u6d41\u7a0b\u548c\u8bb0\u5f55\u4e1a\u52a1\u72b6\u6001\uff0c\u72b6\u6001\u673a\u5f15\u64ce\u53ef\u4ee5\u5b9a\u4e49\u201c\u8865\u507f\u670d\u52a1\u201d\uff0c\u5f53\u5f02\u5e38\u65f6\u7531\u72b6\u6001\u673a\u5f15\u64ce\u53cd\u5411\u8c03\u7528\u201c\u8865\u507f\u670d\u52a1\u201d\u8fdb\u884c\u56de\u6eda\uff0c\u540c\u65f6\u8fd8\u4f1a\u6709\u4e00\u4e2a\u201c\u5dee\u9519\u5b88\u62a4\u201d\u5e73\u53f0\uff0c\u76d1\u63a7\u90a3\u4e9b\u6267\u884c\u5931\u8d25\u6216\u8865\u507f\u5931\u8d25\u7684\u4e1a\u52a1\u6d41\u6c34\uff0c\u5e76\u4e0d\u65ad\u8fdb\u884c\u201c\u8865\u507f\u201d\u6216\u201c\u91cd\u8bd5\u201d\uff1b\\n\\n<a name=\\"MAZEu\\"></a>\\n\\n## \u65b9\u6848\u5bf9\u6bd4\\n\\n\u793e\u533a\u548c\u4e1a\u754c\u7684\u89e3\u51b3\u65b9\u6848\u4e00\u822c\u662f\u4e24\u79cd\uff0c\u4e00\u79cd\u57fa\u672c\u72b6\u6001\u673a\u6216\u6d41\u7a0b\u5f15\u64ce\u901a\u8fc7 DSL \u65b9\u5f0f\u7f16\u6392\u6d41\u7a0b\u7a0b\u548c\u8865\u507f\u5b9a\u4e49\uff0c\u4e00\u79cd\u662f\u57fa\u4e8e Java \u6ce8\u89e3+\u62e6\u622a\u5668\u5b9e\u73b0\u8865\u507f\uff0c\u90a3\u4e48\u8fd9\u4e24\u79cd\u65b9\u6848\u6709\u4ec0\u4e48\u4f18\u7f3a\u70b9\u5462\uff1f\\n\\n| **\u65b9\u5f0f**         | **\u4f18\u70b9**                                                                                                                                                                                                                                                                                                                                                            | **\u7f3a\u70b9**                                                                                                                                                                      |\\n| ---------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| \u72b6\u6001\u673a+DSL       | <br />- \u53ef\u4ee5\u7528\u53ef\u89c6\u5316\u5de5\u5177\u6765\u5b9a\u4e49\u4e1a\u52a1\u6d41\u7a0b\uff0c\u6807\u51c6\u5316\uff0c\u53ef\u8bfb\u6027\u9ad8\uff0c\u53ef\u5b9e\u73b0\u670d\u52a1\u7f16\u6392\u7684\u529f\u80fd<br />- \u63d0\u9ad8\u4e1a\u52a1\u5206\u6790\u4eba\u5458\u4e0e\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u7684\u6c9f\u901a\u6548\u7387<br />- \u4e1a\u52a1\u72b6\u6001\u7ba1\u7406\uff1a\u6d41\u7a0b\u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u72b6\u6001\u673a\uff0c\u53ef\u4ee5\u5f88\u597d\u7684\u53cd\u6620\u4e1a\u52a1\u72b6\u6001\u7684\u6d41\u8f6c<br />- \u63d0\u9ad8\u5f02\u5e38\u5904\u7406\u7075\u6d3b\u6027\uff1a\u53ef\u4ee5\u5b9e\u73b0\u5b95\u673a\u6062\u590d\u540e\u7684\u201c\u5411\u524d\u91cd\u8bd5\u201d\u6216\u201c\u5411\u540e\u8865\u507f\u201d<br />- \u5929\u7136\u53ef\u4ee5\u4f7f\u7528 Actor \u6a21\u578b\u6216 SEDA \u67b6\u6784\u7b49\u5f02\u6b65\u5904\u7406\u5f15\u64ce\u6765\u6267\u884c\uff0c\u63d0\u9ad8\u6574\u4f53\u541e\u5410\u91cf<br /> | <br />- \u4e1a\u52a1\u6d41\u7a0b\u5b9e\u9645\u662f\u7531 JAVA \u7a0b\u5e8f\u4e0e DSL \u914d\u7f6e\u7ec4\u6210\uff0c\u7a0b\u5e8f\u4e0e\u914d\u7f6e\u5206\u79bb\uff0c\u5f00\u53d1\u8d77\u6765\u6bd4\u8f83\u7e41\u7410<br />- \u5982\u679c\u662f\u6539\u9020\u73b0\u6709\u4e1a\u52a1\uff0c\u5bf9\u4e1a\u52a1\u4fb5\u5165\u6027\u9ad8<br />- \u5f15\u64ce\u5b9e\u73b0\u6210\u672c\u9ad8<br />                     |\\n| \u62e6\u622a\u5668+java \u6ce8\u89e3 | <br />- \u7a0b\u5e8f\u4e0e\u6ce8\u89e3\u662f\u5728\u4e00\u8d77\u7684\uff0c\u5f00\u53d1\u7b80\u5355\uff0c\u5b66\u4e60\u6210\u672c\u4f4e<br />- \u65b9\u4fbf\u63a5\u5165\u73b0\u6709\u4e1a\u52a1<br />- \u57fa\u4e8e\u52a8\u6001\u4ee3\u7406\u62e6\u622a\u5668\uff0c\u6846\u67b6\u5b9e\u73b0\u6210\u672c\u4f4e<br />                                                                                                                                                                                                                                          | <br />- \u6846\u67b6\u65e0\u6cd5\u63d0\u4f9b Actor \u6a21\u578b\u6216 SEDA \u67b6\u6784\u7b49\u5f02\u6b65\u5904\u7406\u6a21\u5f0f\u6765\u63d0\u9ad8\u7cfb\u7edf\u541e\u5410\u91cf<br />- \u6846\u67b6\u65e0\u6cd5\u63d0\u4f9b\u4e1a\u52a1\u72b6\u6001\u7ba1\u7406<br />- \u96be\u4ee5\u5b9e\u73b0\u5b95\u673a\u6062\u590d\u540e\u7684\u201c\u5411\u524d\u91cd\u8bd5\u201d\uff0c\u56e0\u4e3a\u65e0\u6cd5\u6062\u590d\u7ebf\u7a0b\u4e0a\u4e0b\u6587<br /> |\\n\\n\\n<a name=\\"EKm6f\\"></a>\\n\\n# \\n\\n<a name=\\"tw6CG\\"></a>\\n\\n# Seata Saga \u7684\u65b9\u6848\\n\\nSeata Saga \u7684\u7b80\u4ecb\u53ef\u4ee5\u770b\u4e00\u4e0b[\u300aSeata Saga \u5b98\u7f51\u6587\u6863\u300b](http://seata.io/zh-cn/docs/user/saga.html)[6]\u3002\\n\\nSeata Saga \u91c7\u7528\u4e86\u72b6\u6001\u673a+DSL \u65b9\u6848\u6765\u5b9e\u73b0\uff0c\u539f\u56e0\u6709\u4ee5\u4e0b\u51e0\u4e2a\uff1a\\n\\n- \u72b6\u6001\u673a+DSL \u65b9\u6848\u5728\u5b9e\u9645\u751f\u4ea7\u4e2d\u5e94\u7528\u66f4\u5e7f\u6cdb\uff1b\\n- \u53ef\u4ee5\u4f7f\u7528 Actor \u6a21\u578b\u6216 SEDA \u67b6\u6784\u7b49\u5f02\u6b65\u5904\u7406\u5f15\u64ce\u6765\u6267\u884c\uff0c\u63d0\u9ad8\u6574\u4f53\u541e\u5410\u91cf\uff1b\\n- \u901a\u5e38\u5728\u6838\u5fc3\u7cfb\u7edf\u4ee5\u4e0a\u5c42\u7684\u4e1a\u52a1\u7cfb\u7edf\u4f1a\u4f34\u968f\u6709\u201c\u670d\u52a1\u7f16\u6392\u201d\u7684\u9700\u6c42\uff0c\u800c\u670d\u52a1\u7f16\u6392\u53c8\u6709\u4e8b\u52a1\u6700\u7ec8\u4e00\u81f4\u6027\u8981\u6c42\uff0c\u4e24\u8005\u5f88\u96be\u5206\u5272\u5f00\uff0c\u72b6\u6001\u673a+DSL \u65b9\u6848\u53ef\u4ee5\u540c\u65f6\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u9700\u6c42\uff1b\\n- \u7531\u4e8e Saga \u6a21\u5f0f\u5728\u7406\u8bba\u4e0a\u662f\u4e0d\u4fdd\u8bc1\u9694\u79bb\u6027\u7684\uff0c\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\u53ef\u80fd\u7531\u4e8e\u810f\u5199\u65e0\u6cd5\u5b8c\u6210\u56de\u6eda\u64cd\u4f5c\uff0c\u6bd4\u5982\u4e3e\u4e00\u4e2a\u6781\u7aef\u7684\u4f8b\u5b50, \u5206\u5e03\u5f0f\u4e8b\u52a1\u5185\u5148\u7ed9\u7528\u6237 A \u5145\u503c\uff0c\u7136\u540e\u7ed9\u7528\u6237 B \u6263\u51cf\u4f59\u989d\uff0c\u5982\u679c\u5728\u7ed9A\u7528\u6237\u5145\u503c\u6210\u529f\uff0c\u5728\u4e8b\u52a1\u63d0\u4ea4\u4ee5\u524d\uff0cA \u7528\u6237\u628a\u7ebf\u6d88\u8d39\u6389\u4e86\uff0c\u5982\u679c\u4e8b\u52a1\u53d1\u751f\u56de\u6eda\uff0c\u8fd9\u65f6\u5219\u6ca1\u6709\u529e\u6cd5\u8fdb\u884c\u8865\u507f\u4e86\uff0c\u6709\u4e9b\u4e1a\u52a1\u573a\u666f\u53ef\u4ee5\u5141\u8bb8\u8ba9\u4e1a\u52a1\u6700\u7ec8\u6210\u529f\uff0c\u5728\u56de\u6eda\u4e0d\u4e86\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u7ee7\u7eed\u91cd\u8bd5\u5b8c\u6210\u540e\u9762\u7684\u6d41\u7a0b\uff0c\u72b6\u6001\u673a+DSL\u7684\u65b9\u6848\u53ef\u4ee5\u5b9e\u73b0\u201c\u5411\u524d\u201d\u6062\u590d\u4e0a\u4e0b\u6587\u7ee7\u7eed\u6267\u884c\u7684\u80fd\u529b, \u8ba9\u4e1a\u52a1\u6700\u7ec8\u6267\u884c\u6210\u529f\uff0c\u8fbe\u5230\u6700\u7ec8\u4e00\u81f4\u6027\u7684\u76ee\u7684\u3002\\n\\n> \u5728\u4e0d\u4fdd\u8bc1\u9694\u79bb\u6027\u7684\u60c5\u51b5\u4e0b\uff1a\u4e1a\u52a1\u6d41\u7a0b\u8bbe\u8ba1\u65f6\u8981\u9075\u5faa\u201c\u5b81\u53ef\u957f\u6b3e, \u4e0d\u53ef\u77ed\u6b3e\u201d\u7684\u539f\u5219\uff0c\u957f\u6b3e\u610f\u601d\u662f\u5ba2\u6237\u5c11\u4e86\u7ebf\u673a\u6784\u591a\u4e86\u94b1\uff0c\u4ee5\u673a\u6784\u4fe1\u8a89\u53ef\u4ee5\u7ed9\u5ba2\u6237\u9000\u6b3e\uff0c\u53cd\u4e4b\u5219\u662f\u77ed\u6b3e\uff0c\u5c11\u7684\u7ebf\u53ef\u80fd\u8ffd\u4e0d\u56de\u6765\u4e86\u3002\u6240\u4ee5\u5728\u4e1a\u52a1\u6d41\u7a0b\u8bbe\u8ba1\u4e0a\u4e00\u5b9a\u662f\u5148\u6263\u6b3e\u3002\\n\\n\\n<a name=\\"4yL9U\\"></a>\\n\\n### \u72b6\u6001\u5b9a\u4e49\u8bed\u8a00(Seata State Language)\\n\\n1. \u901a\u8fc7\u72b6\u6001\u56fe\u6765\u5b9a\u4e49\u670d\u52a1\u8c03\u7528\u7684\u6d41\u7a0b\u5e76\u751f\u6210 json \u72b6\u6001\u8bed\u8a00\u5b9a\u4e49\u6587\u4ef6\uff1b\\n2. \u72b6\u6001\u56fe\u4e2d\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u662f\u8c03\u7528\u4e00\u4e2a\u670d\u52a1\uff0c\u8282\u70b9\u53ef\u4ee5\u914d\u7f6e\u5b83\u7684\u8865\u507f\u8282\u70b9\uff1b\\n3. \u72b6\u6001\u56fe json \u7531\u72b6\u6001\u673a\u5f15\u64ce\u9a71\u52a8\u6267\u884c\uff0c\u5f53\u51fa\u73b0\u5f02\u5e38\u65f6\u72b6\u6001\u5f15\u64ce\u53cd\u5411\u6267\u884c\u5df2\u6210\u529f\u8282\u70b9\u5bf9\u5e94\u7684\u8865\u507f\u8282\u70b9\u5c06\u4e8b\u52a1\u56de\u6eda\uff1b\\n> \u6ce8\u610f: \u5f02\u5e38\u53d1\u751f\u65f6\u662f\u5426\u8fdb\u884c\u8865\u507f\u4e5f\u53ef\u7531\u7528\u6237\u81ea\u5b9a\u4e49\u51b3\u5b9a\\n\\n4. \u53ef\u4ee5\u5b9e\u73b0\u670d\u52a1\u7f16\u6392\u9700\u6c42\uff0c\u652f\u6301\u5355\u9879\u9009\u62e9\u3001\u5e76\u53d1\u3001\u5f02\u6b65\u3001\u5b50\u72b6\u6001\u673a\u3001\u53c2\u6570\u8f6c\u6362\u3001\u53c2\u6570\u6620\u5c04\u3001\u670d\u52a1\u6267\u884c\u72b6\u6001\u5224\u65ad\u3001\u5f02\u5e38\u6355\u83b7\u7b49\u529f\u80fd\uff1b\\n\\n\u5047\u8bbe\u6709\u4e00\u4e2a\u4e1a\u52a1\u6d41\u7a0b\u8981\u8c03\u4e24\u4e2a\u670d\u52a1\uff0c\u5148\u8c03\u5e93\u5b58\u6263\u51cf\uff08InventoryService\uff09\uff0c\u518d\u8c03\u4f59\u989d\u6263\u51cf\uff08BalanceService\uff09\uff0c\u4fdd\u8bc1\u5728\u4e00\u4e2a\u5206\u5e03\u5f0f\u5185\u8981\u4e48\u540c\u65f6\u6210\u529f\uff0c\u8981\u4e48\u540c\u65f6\u56de\u6eda\u3002\u4e24\u4e2a\u53c2\u4e0e\u8005\u670d\u52a1\u90fd\u6709\u4e00\u4e2a reduce \u65b9\u6cd5\uff0c\u8868\u793a\u5e93\u5b58\u6263\u51cf\u6216\u4f59\u989d\u6263\u51cf\uff0c\u8fd8\u6709\u4e00\u4e2a compensateReduce \u65b9\u6cd5\uff0c\u8868\u793a\u8865\u507f\u6263\u51cf\u64cd\u4f5c\u3002\u4ee5\xa0InventoryService \u4e3a\u4f8b\u770b\u4e00\u4e0b\u5b83\u7684\u63a5\u53e3\u5b9a\u4e49\uff1a\\n\\n```java\\npublic interface InventoryService {\\n\\n    /**\\n     * reduce\\n     * @param businessKey\\n     * @param amount\\n     * @param params\\n     * @return\\n     */\\n    boolean reduce(String businessKey, BigDecimal amount, Map<String, Object> params);\\n\\n    /**\\n     * compensateReduce\\n     * @param businessKey\\n     * @param params\\n     * @return\\n     */\\n    boolean compensateReduce(String businessKey, Map<String, Object> params);\\n}\\n```\\n\\n\u8fd9\u4e2a\u4e1a\u52a1\u6d41\u7a0b\u5bf9\u5e94\u7684\u72b6\u6001\u56fe\uff1a\\n\\n![\u793a\u4f8b\u72b6\u6001\u56fe](/img/saga/demo_statelang.png?raw=true)\\n<br />\u5bf9\u5e94\u7684 JSON\\n\\n```json\\n{\\n    \\"Name\\": \\"reduceInventoryAndBalance\\",\\n    \\"Comment\\": \\"reduce inventory then reduce balance in a transaction\\",\\n    \\"StartState\\": \\"ReduceInventory\\",\\n    \\"Version\\": \\"0.0.1\\",\\n    \\"States\\": {\\n        \\"ReduceInventory\\": {\\n            \\"Type\\": \\"ServiceTask\\",\\n            \\"ServiceName\\": \\"inventoryAction\\",\\n            \\"ServiceMethod\\": \\"reduce\\",\\n            \\"CompensateState\\": \\"CompensateReduceInventory\\",\\n            \\"Next\\": \\"ChoiceState\\",\\n            \\"Input\\": [\\n                \\"$.[businessKey]\\",\\n                \\"$.[count]\\"\\n            ],\\n            \\"Output\\": {\\n                \\"reduceInventoryResult\\": \\"$.#root\\"\\n            },\\n            \\"Status\\": {\\n                \\"#root == true\\": \\"SU\\",\\n                \\"#root == false\\": \\"FA\\",\\n                \\"$Exception{java.lang.Throwable}\\": \\"UN\\"\\n            }\\n        },\\n        \\"ChoiceState\\":{\\n            \\"Type\\": \\"Choice\\",\\n            \\"Choices\\":[\\n                {\\n                    \\"Expression\\":\\"[reduceInventoryResult] == true\\",\\n                    \\"Next\\":\\"ReduceBalance\\"\\n                }\\n            ],\\n            \\"Default\\":\\"Fail\\"\\n        },\\n        \\"ReduceBalance\\": {\\n            \\"Type\\": \\"ServiceTask\\",\\n            \\"ServiceName\\": \\"balanceAction\\",\\n            \\"ServiceMethod\\": \\"reduce\\",\\n            \\"CompensateState\\": \\"CompensateReduceBalance\\",\\n            \\"Input\\": [\\n                \\"$.[businessKey]\\",\\n                \\"$.[amount]\\",\\n                {\\n                    \\"throwException\\" : \\"$.[mockReduceBalanceFail]\\"\\n                }\\n            ],\\n            \\"Output\\": {\\n                \\"compensateReduceBalanceResult\\": \\"$.#root\\"\\n            },\\n            \\"Status\\": {\\n                \\"#root == true\\": \\"SU\\",\\n                \\"#root == false\\": \\"FA\\",\\n                \\"$Exception{java.lang.Throwable}\\": \\"UN\\"\\n            },\\n            \\"Catch\\": [\\n                {\\n                    \\"Exceptions\\": [\\n                        \\"java.lang.Throwable\\"\\n                    ],\\n                    \\"Next\\": \\"CompensationTrigger\\"\\n                }\\n            ],\\n            \\"Next\\": \\"Succeed\\"\\n        },\\n        \\"CompensateReduceInventory\\": {\\n            \\"Type\\": \\"ServiceTask\\",\\n            \\"ServiceName\\": \\"inventoryAction\\",\\n            \\"ServiceMethod\\": \\"compensateReduce\\",\\n            \\"Input\\": [\\n                \\"$.[businessKey]\\"\\n            ]\\n        },\\n        \\"CompensateReduceBalance\\": {\\n            \\"Type\\": \\"ServiceTask\\",\\n            \\"ServiceName\\": \\"balanceAction\\",\\n            \\"ServiceMethod\\": \\"compensateReduce\\",\\n            \\"Input\\": [\\n                \\"$.[businessKey]\\"\\n            ]\\n        },\\n        \\"CompensationTrigger\\": {\\n            \\"Type\\": \\"CompensationTrigger\\",\\n            \\"Next\\": \\"Fail\\"\\n        },\\n        \\"Succeed\\": {\\n            \\"Type\\":\\"Succeed\\"\\n        },\\n        \\"Fail\\": {\\n            \\"Type\\":\\"Fail\\",\\n            \\"ErrorCode\\": \\"PURCHASE_FAILED\\",\\n            \\"Message\\": \\"purchase failed\\"\\n        }\\n    }\\n}\\n```\\n\\n\u72b6\u6001\u8bed\u8a00\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53c2\u8003\u4e86\xa0[AWS Step Functions](https://docs.aws.amazon.com/zh_cn/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html)[7]\u3002\\n\\n<a name=\\"2de9b28a\\"></a>\\n\\n#### \\"\u72b6\u6001\u673a\\" \u5c5e\u6027\u7b80\u4ecb:\\n\\n- Name: \u8868\u793a\u72b6\u6001\u673a\u7684\u540d\u79f0\uff0c\u5fc5\u987b\u552f\u4e00\uff1b\\n- Comment: \u72b6\u6001\u673a\u7684\u63cf\u8ff0\uff1b\\n- Version: \u72b6\u6001\u673a\u5b9a\u4e49\u7248\u672c\uff1b\\n- StartState: \u542f\u52a8\u65f6\u8fd0\u884c\u7684\u7b2c\u4e00\u4e2a\\"\u72b6\u6001\\"\uff1b\\n- States: \u72b6\u6001\u5217\u8868\uff0c\u662f\u4e00\u4e2a map \u7ed3\u6784\uff0ckey \u662f\\"\u72b6\u6001\\"\u7684\u540d\u79f0\uff0c\u5728\u72b6\u6001\u673a\u5185\u5fc5\u987b\u552f\u4e00\uff1b\\n\\n<a name=\\"2b956670\\"></a>\\n\\n#### \\"\u72b6\u6001\\" \u5c5e\u6027\u7b80\u4ecb:\\n\\n- Type\uff1a\\"\u72b6\u6001\\" \u7684\u7c7b\u578b\uff0c\u6bd4\u5982\u6709\uff1a\\n  - ServiceTask: \u6267\u884c\u8c03\u7528\u670d\u52a1\u4efb\u52a1\uff1b\\n  - Choice: \u5355\u6761\u4ef6\u9009\u62e9\u8def\u7531\uff1b\\n  - CompensationTrigger: \u89e6\u53d1\u8865\u507f\u6d41\u7a0b\uff1b\\n  - Succeed: \u72b6\u6001\u673a\u6b63\u5e38\u7ed3\u675f\uff1b\\n  - Fail: \u72b6\u6001\u673a\u5f02\u5e38\u7ed3\u675f\uff1b\\n  - SubStateMachine: \u8c03\u7528\u5b50\u72b6\u6001\u673a\uff1b\\n- ServiceName: \u670d\u52a1\u540d\u79f0\uff0c\u901a\u5e38\u662f\u670d\u52a1\u7684beanId\uff1b\\n- ServiceMethod: \u670d\u52a1\u65b9\u6cd5\u540d\u79f0\uff1b\\n- CompensateState: \u8be5\\"\u72b6\u6001\\"\u7684\u8865\u507f\\"\u72b6\u6001\\"\uff1b\\n- Input: \u8c03\u7528\u670d\u52a1\u7684\u8f93\u5165\u53c2\u6570\u5217\u8868\uff0c\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5bf9\u5e94\u4e8e\u670d\u52a1\u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\uff0c $.\u8868\u793a\u4f7f\u7528\u8868\u8fbe\u5f0f\u4ece\u72b6\u6001\u673a\u4e0a\u4e0b\u6587\u4e2d\u53d6\u53c2\u6570\uff0c\u8868\u8fbe\u4f7f\u7528\u7684\xa0[SpringEL](https://docs.spring.io/spring/docs/4.3.10.RELEASE/spring-framework-reference/html/expressions.html)[8]\uff0c \u5982\u679c\u662f\u5e38\u91cf\u76f4\u63a5\u5199\u503c\u5373\u53ef\uff1b\\n- Output: \u5c06\u670d\u52a1\u8fd4\u56de\u7684\u53c2\u6570\u8d4b\u503c\u5230\u72b6\u6001\u673a\u4e0a\u4e0b\u6587\u4e2d\uff0c\u662f\u4e00\u4e2a map \u7ed3\u6784\uff0ckey \u4e3a\u653e\u5165\u5230\u72b6\u6001\u673a\u4e0a\u6587\u65f6\u7684 key\uff08\u72b6\u6001\u673a\u4e0a\u4e0b\u6587\u4e5f\u662f\u4e00\u4e2a map\uff09\uff0cvalue \u4e2d $. \u662f\u8868\u793a SpringEL \u8868\u8fbe\u5f0f\uff0c\u8868\u793a\u4ece\u670d\u52a1\u7684\u8fd4\u56de\u53c2\u6570\u4e2d\u53d6\u503c\uff0c#root \u8868\u793a\u670d\u52a1\u7684\u6574\u4e2a\u8fd4\u56de\u53c2\u6570\uff1b\\n- Status: \u670d\u52a1\u6267\u884c\u72b6\u6001\u6620\u5c04\uff0c\u6846\u67b6\u5b9a\u4e49\u4e86\u4e09\u4e2a\u72b6\u6001\uff0cSU \u6210\u529f\u3001FA \u5931\u8d25\u3001UN \u672a\u77e5\uff0c\u6211\u4eec\u9700\u8981\u628a\u670d\u52a1\u6267\u884c\u7684\u72b6\u6001\u6620\u5c04\u6210\u8fd9\u4e09\u4e2a\u72b6\u6001\uff0c\u5e2e\u52a9\u6846\u67b6\u5224\u65ad\u6574\u4e2a\u4e8b\u52a1\u7684\u4e00\u81f4\u6027\uff0c\u662f\u4e00\u4e2a map \u7ed3\u6784\uff0ckey \u662f\u6761\u4ef6\u8868\u8fbe\u5f0f\uff0c\u4e00\u822c\u662f\u53d6\u670d\u52a1\u7684\u8fd4\u56de\u503c\u6216\u629b\u51fa\u7684\u5f02\u5e38\u8fdb\u884c\u5224\u65ad\uff0c\u9ed8\u8ba4\u662f SpringEL \u8868\u8fbe\u5f0f\u5224\u65ad\u670d\u52a1\u8fd4\u56de\u53c2\u6570\uff0c\u5e26 $Exception{\u5f00\u5934\u8868\u793a\u5224\u65ad\u5f02\u5e38\u7c7b\u578b\uff0cvalue \u662f\u5f53\u8fd9\u4e2a\u6761\u4ef6\u8868\u8fbe\u5f0f\u6210\u7acb\u65f6\u5219\u5c06\u670d\u52a1\u6267\u884c\u72b6\u6001\u6620\u5c04\u6210\u8fd9\u4e2a\u503c\uff1b\\n- Catch: \u6355\u83b7\u5230\u5f02\u5e38\u540e\u7684\u8def\u7531\uff1b\\n- Next: \u670d\u52a1\u6267\u884c\u5b8c\u6210\u540e\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\\"\u72b6\u6001\\"\uff1b\\n- Choices: Choice \u7c7b\u578b\u7684\\"\u72b6\u6001\\"\u91cc, \u53ef\u9009\u7684\u5206\u652f\u5217\u8868, \u5206\u652f\u4e2d\u7684 Expression \u4e3a SpringEL \u8868\u8fbe\u5f0f\uff0cNext \u4e3a\u5f53\u8868\u8fbe\u5f0f\u6210\u7acb\u65f6\u6267\u884c\u7684\u4e0b\u4e00\u4e2a\\"\u72b6\u6001\\"\uff1b\\n- ErrorCode: Fail \u7c7b\u578b\\"\u72b6\u6001\\"\u7684\u9519\u8bef\u7801\uff1b\\n- Message: Fail \u7c7b\u578b\\"\u72b6\u6001\\"\u7684\u9519\u8bef\u4fe1\u606f\uff1b\\n\\n\u66f4\u591a\u8be6\u7ec6\u7684\u72b6\u6001\u8bed\u8a00\u89e3\u91ca\u8bf7\u770b[\u300aSeata Saga \u5b98\u7f51\u6587\u6863\u300b](http://seata.io/zh-cn/docs/user/saga.html)[6[http://seata.io/zh-cn/docs/user/saga.html](http://seata.io/zh-cn/docs/user/saga.html)]\u3002\\n\\n<a name=\\"209f0e37\\"></a>\\n\\n### \u72b6\u6001\u673a\u5f15\u64ce\u539f\u7406:\\n\\n![\u72b6\u6001\u673a\u5f15\u64ce\u539f\u7406](/img/saga/saga_engine_mechanism.png?raw=true)\\n\\n- \u56fe\u4e2d\u7684\u72b6\u6001\u56fe\u662f\u5148\u6267\u884c stateA, \u518d\u6267\u884c stataB\uff0c\u7136\u540e\u6267\u884c stateC\uff1b\\n- \\"\u72b6\u6001\\"\u7684\u6267\u884c\u662f\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7684\u6a21\u578b\uff0cstataA \u6267\u884c\u5b8c\u6210\u540e\uff0c\u4f1a\u4ea7\u751f\u8def\u7531\u6d88\u606f\u653e\u5165 EventQueue\uff0c\u4e8b\u4ef6\u6d88\u8d39\u7aef\u4ece EventQueue \u53d6\u51fa\u6d88\u606f\uff0c\u6267\u884c stateB\uff1b\\n- \u5728\u6574\u4e2a\u72b6\u6001\u673a\u542f\u52a8\u65f6\u4f1a\u8c03\u7528 Seata Server \u5f00\u542f\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u5e76\u751f\u4ea7 xid, \u7136\u540e\u8bb0\u5f55\\"\u72b6\u6001\u673a\u5b9e\u4f8b\\"\u542f\u52a8\u4e8b\u4ef6\u5230\u672c\u5730\u6570\u636e\u5e93\uff1b\\n- \u5f53\u6267\u884c\u5230\u4e00\u4e2a\\"\u72b6\u6001\\"\u65f6\u4f1a\u8c03\u7528 Seata Server \u6ce8\u518c\u5206\u652f\u4e8b\u52a1\uff0c\u5e76\u751f\u4ea7 branchId, \u7136\u540e\u8bb0\u5f55\\"\u72b6\u6001\u5b9e\u4f8b\\"\u5f00\u59cb\u6267\u884c\u4e8b\u4ef6\u5230\u672c\u5730\u6570\u636e\u5e93\uff1b\\n- \u5f53\u4e00\u4e2a\\"\u72b6\u6001\\"\u6267\u884c\u5b8c\u6210\u540e\u4f1a\u8bb0\u5f55\\"\u72b6\u6001\u5b9e\u4f8b\\"\u6267\u884c\u7ed3\u675f\u4e8b\u4ef6\u5230\u672c\u5730\u6570\u636e\u5e93, \u7136\u540e\u8c03\u7528 Seata Server \u4e0a\u62a5\u5206\u652f\u4e8b\u52a1\u7684\u72b6\u6001\uff1b\\n- \u5f53\u6574\u4e2a\u72b6\u6001\u673a\u6267\u884c\u5b8c\u6210\uff0c\u4f1a\u8bb0\u5f55\\"\u72b6\u6001\u673a\u5b9e\u4f8b\\"\u6267\u884c\u5b8c\u6210\u4e8b\u4ef6\u5230\u672c\u5730\u6570\u636e\u5e93, \u7136\u540e\u8c03\u7528 Seata Server \u63d0\u4ea4\u6216\u56de\u6eda\u5206\u5e03\u5f0f\u4e8b\u52a1\uff1b\\n\\n<a name=\\"808e95dc\\"></a>\\n\\n### \u72b6\u6001\u673a\u5f15\u64ce\u8bbe\u8ba1:\\n\\n![\u72b6\u6001\u673a\u5f15\u64ce\u8bbe\u8ba1](/img/saga/saga_engine.png?raw=true)\\n\\n\u72b6\u6001\u673a\u5f15\u64ce\u7684\u8bbe\u8ba1\u4e3b\u8981\u5206\u6210\u4e09\u5c42, \u4e0a\u5c42\u4f9d\u8d56\u4e0b\u5c42\uff0c\u4ece\u4e0b\u5f80\u4e0a\u5206\u522b\u662f\uff1a\\n\\n- Eventing \u5c42\uff1a\\n  - \u5b9e\u73b0\u4e8b\u4ef6\u9a71\u52a8\u67b6\u6784, \u53ef\u4ee5\u538b\u5165\u4e8b\u4ef6, \u5e76\u7531\u6d88\u8d39\u7aef\u6d88\u8d39\u4e8b\u4ef6, \u672c\u5c42\u4e0d\u5173\u5fc3\u4e8b\u4ef6\u662f\u4ec0\u4e48\u6d88\u8d39\u7aef\u6267\u884c\u4ec0\u4e48\uff0c\u7531\u4e0a\u5c42\u5b9e\u73b0\uff1b\\n\\n- ProcessController \u5c42\uff1a\\n  - \u7531\u4e8e\u4e0a\u5c42\u7684 Eventing \u9a71\u52a8\u4e00\u4e2a\u201c\u7a7a\u201d\u6d41\u7a0b\u6267\u884c\u7684\u6267\u884c\uff0c\\"state\\"\u7684\u884c\u4e3a\u548c\u8def\u7531\u90fd\u672a\u5b9e\u73b0\uff0c\u7531\u4e0a\u5c42\u5b9e\u73b0\uff1b\\n> \u57fa\u4e8e\u4ee5\u4e0a\u4e24\u5c42\u7406\u8bba\u4e0a\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6269\u5c55\u4efb\u4f55\\"\u6d41\u7a0b\\"\u5f15\u64ce\u3002\u8fd9\u4e24\u5c42\u7684\u8bbe\u8ba1\u662f\u53c2\u8003\u4e86\u5185\u90e8\u91d1\u878d\u7f51\u7edc\u5e73\u53f0\u7684\u8bbe\u8ba1\u3002\\n\\n\\n- StateMachineEngine \u5c42\uff1a\\n  - \u5b9e\u73b0\u72b6\u6001\u673a\u5f15\u64ce\u6bcf\u79cd state \u7684\u884c\u4e3a\u548c\u8def\u7531\u903b\u8f91\uff1b\\n  - \u63d0\u4f9b API\u3001\u72b6\u6001\u673a\u8bed\u8a00\u4ed3\u5e93\uff1b\\n\\n<a name=\\"73a9fddd\\"></a>\\n\\n### Saga \u6a21\u5f0f\u4e0b\u670d\u52a1\u8bbe\u8ba1\u7684\u5b9e\u8df5\u7ecf\u9a8c\\n\\n\u4e0b\u9762\u662f\u5b9e\u8df5\u4e2d\u603b\u7ed3\u7684\u5728 Saga \u6a21\u5f0f\u4e0b\u5fae\u670d\u52a1\u8bbe\u8ba1\u7684\u4e00\u4e9b\u7ecf\u9a8c\uff0c\u5f53\u7136\u8fd9\u662f\u63a8\u8350\u505a\u6cd5\uff0c\u5e76\u4e0d\u662f\u8bf4\u4e00\u5b9a\u8981 100% \u9075\u5faa\uff0c\u6ca1\u6709\u9075\u5faa\u4e5f\u6709\u201c\u7ed5\u8fc7\u201d\u65b9\u6848\u3002\\n> \u597d\u6d88\u606f\uff1aSeata Saga \u6a21\u5f0f\u5bf9\u5fae\u670d\u52a1\u7684\u63a5\u53e3\u53c2\u6570\u6ca1\u6709\u4efb\u52a1\u8981\u6c42\uff0c\u8fd9\u4f7f\u5f97 Saga \u6a21\u5f0f\u53ef\u7528\u4e8e\u96c6\u6210\u9057\u7559\u7cfb\u7edf\u6216\u5916\u90e8\u673a\u6784\u7684\u670d\u52a1\u3002\\n\\n\\n<a name=\\"d64c5051\\"></a>\\n\\n#### \u5141\u8bb8\u7a7a\u8865\u507f\\n\\n- \u7a7a\u8865\u507f\uff1a\u539f\u670d\u52a1\u672a\u6267\u884c\uff0c\u8865\u507f\u670d\u52a1\u6267\u884c\u4e86\uff1b\\n- \u51fa\u73b0\u539f\u56e0\uff1a\\n  - \u539f\u670d\u52a1 \u8d85\u65f6\uff08\u4e22\u5305\uff09\uff1b\\n  - Saga \u4e8b\u52a1\u89e6\u53d1 \u56de\u6eda\uff1b\\n  - \u672a\u6536\u5230\u539f\u670d\u52a1\u8bf7\u6c42\uff0c\u5148\u6536\u5230\u8865\u507f\u8bf7\u6c42\uff1b\\n\\n\u6240\u4ee5\u670d\u52a1\u8bbe\u8ba1\u65f6\u9700\u8981\u5141\u8bb8\u7a7a\u8865\u507f\uff0c\u5373\u6ca1\u6709\u627e\u5230\u8981\u8865\u507f\u7684\u4e1a\u52a1\u4e3b\u952e\u65f6\u8fd4\u56de\u8865\u507f\u6210\u529f\u5e76\u5c06\u539f\u4e1a\u52a1\u4e3b\u952e\u8bb0\u5f55\u4e0b\u6765\u3002\\n\\n<a name=\\"88a92b17\\"></a>\\n\\n#### \u9632\u60ac\u6302\u63a7\u5236\\n\\n- \u60ac\u6302\uff1a\u8865\u507f\u670d\u52a1 \u6bd4 \u539f\u670d\u52a1 \u5148\u6267\u884c\uff1b\\n- \u51fa\u73b0\u539f\u56e0\uff1a\\n  - \u539f\u670d\u52a1 \u8d85\u65f6\uff08\u62e5\u5835\uff09\uff1b\\n  - Saga \u4e8b\u52a1\u56de\u6eda\uff0c\u89e6\u53d1 \u56de\u6eda\uff1b\\n  - \u62e5\u5835\u7684\u539f\u670d\u52a1\u5230\u8fbe\uff1b\\n\\n\u6240\u4ee5\u8981\u68c0\u67e5\u5f53\u524d\u4e1a\u52a1\u4e3b\u952e\u662f\u5426\u5df2\u7ecf\u5728\u7a7a\u8865\u507f\u8bb0\u5f55\u4e0b\u6765\u7684\u4e1a\u52a1\u4e3b\u952e\u4e2d\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\u5219\u8981\u62d2\u7edd\u670d\u52a1\u7684\u6267\u884c\u3002\\n\\n<a name=\\"ce766631\\"></a>\\n\\n#### \u5e42\u7b49\u63a7\u5236\\n\\n- \u539f\u670d\u52a1\u4e0e\u8865\u507f\u670d\u52a1\u90fd\u9700\u8981\u4fdd\u8bc1\u5e42\u7b49\u6027, \u7531\u4e8e\u7f51\u7edc\u53ef\u80fd\u8d85\u65f6\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u91cd\u8bd5\u7b56\u7565\uff0c\u91cd\u8bd5\u53d1\u751f\u65f6\u8981\u901a\u8fc7\u5e42\u7b49\u63a7\u5236\u907f\u514d\u4e1a\u52a1\u6570\u636e\u91cd\u590d\u66f4\u65b0\u3002\\n\\n<a name=\\"FO5YS\\"></a>\\n\\n# \u603b\u7ed3\\n\\n\u5f88\u591a\u65f6\u5019\u6211\u4eec\u4e0d\u9700\u8981\u5f3a\u8c03\u5f3a\u4e00\u6027\uff0c\u6211\u4eec\u57fa\u4e8e BASE \u548c Saga \u7406\u8bba\u53bb\u8bbe\u8ba1\u66f4\u6709\u5f39\u6027\u7684\u7cfb\u7edf\uff0c\u5728\u5206\u5e03\u5f0f\u67b6\u6784\u4e0b\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u548c\u5bb9\u9519\u80fd\u529b\u3002\u5206\u5e03\u5f0f\u67b6\u6784\u6ca1\u6709\u94f6\u5f39\uff0c\u53ea\u6709\u9002\u5408\u7279\u5b9a\u573a\u666f\u7684\u65b9\u6848\uff0c\u4e8b\u5b9e\u4e0a Seata Saga \u662f\u4e00\u4e2a\u5177\u5907\u201c\u670d\u52a1\u7f16\u6392\u201d\u548c\u201cSaga \u5206\u5e03\u5f0f\u4e8b\u52a1\u201d\u80fd\u529b\u7684\u4ea7\u54c1\uff0c\u603b\u7ed3\u4e0b\u6765\u5b83\u7684\u9002\u7528\u573a\u666f\u662f\uff1a\\n\\n- \u9002\u7528\u4e8e\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u7684\u201c\u957f\u4e8b\u52a1\u201d\u5904\u7406\uff1b\\n- \u9002\u7528\u4e8e\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u7684\u201c\u670d\u52a1\u7f16\u6392\u201d\u9700\u6c42\uff1b\\n- \u9002\u7528\u4e8e\u91d1\u878d\u6838\u5fc3\u7cfb\u7edf\u4ee5\u4e0a\u7684\u6709\u5927\u91cf\u7ec4\u5408\u670d\u52a1\u7684\u4e1a\u52a1\u7cfb\u7edf\uff08\u6bd4\u5982\u5728\u6e20\u9053\u5c42\u3001\u4ea7\u54c1\u5c42\u3001\u96c6\u6210\u5c42\u7684\u7cfb\u7edf\uff09\uff1b\\n- \u9002\u7528\u4e8e\u4e1a\u52a1\u6d41\u7a0b\u4e2d\u9700\u8981\u96c6\u6210\u9057\u7559\u7cfb\u7edf\u6216\u5916\u90e8\u673a\u6784\u63d0\u4f9b\u7684\u670d\u52a1\u7684\u573a\u666f\uff08\u8fd9\u4e9b\u670d\u52a1\u4e0d\u53ef\u53d8\u4e0d\u80fd\u5bf9\u5176\u63d0\u51fa\u6539\u9020\u8981\u6c42\uff09\u3002\\n\\n<a name=\\"3X7vO\\"></a>\\n\\n## \u6587\u4e2d\u6d89\u53ca\u76f8\u5173\u94fe\u63a5\\n\\n[1][https://github.com/aphyr/dist-sagas/blob/master/sagas.pdf](https://github.com/aphyr/dist-sagas/blob/master/sagas.pdf)<br />[2][http://microservices.io/patterns/data/saga.html](http://microservices.io/patterns/data/saga.html)<br />[3][Microprofile \u7684 LRA](https://github.com/eclipse/microprofile-sandbox/tree/master/proposals/0009-LRA)\uff1a[https://github.com/eclipse/microprofile-sandbox/tree/master/proposals/0009-LRA](https://github.com/eclipse/microprofile-sandbox/tree/master/proposals/0009-LRA)<br />[4][Eventuate Tram Saga](https://github.com/eventuate-tram/eventuate-tram-sagas)\uff1a[https://github.com/eventuate-tram/eventuate-tram-sagas](https://github.com/eventuate-tram/eventuate-tram-sagas)<br />[5][ServiceComb Saga](https://github.com/apache/incubator-servicecomb-saga)\uff1a[https://github.com/apache/servicecomb-pack](https://github.com/apache/servicecomb-pack)<br />[6][Seata Saga \u5b98\u7f51\u6587\u6863](http://seata.io/zh-cn/docs/user/saga.html)\uff1a[http://seata.io/zh-cn/docs/user/saga.html](http://seata.io/zh-cn/docs/user/saga.html)<br />[7][AWS Step Functions](https://docs.aws.amazon.com/zh_cn/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html)\uff1a[https://docs.aws.amazon.com/zh_cn/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html](https://docs.aws.amazon.com/zh_cn/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html)<br />[8][SpringEL](https://docs.spring.io/spring/docs/4.3.10.RELEASE/spring-framework-reference/html/expressions.html)\uff1a[https://docs.spring.io/spring/docs/4.3.10.RELEASE/spring-framework-reference/html/expressions.html](https://docs.spring.io/spring/docs/4.3.10.RELEASE/spring-framework-reference/html/expressions.html)<br />"},{"id":"/seata-at-tcc-saga","metadata":{"permalink":"/zh-cn/blog/seata-at-tcc-saga","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-at-tcc-saga.md","title":"\u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u53ca\u5176\u4e09\u79cd\u6a21\u5f0f\u8be6\u89e3","description":"\u7740\u91cd\u5206\u4eab\u5206\u5e03\u5f0f\u4e8b\u52a1\u4ea7\u751f\u7684\u80cc\u666f\u3001\u7406\u8bba\u57fa\u7840\uff0c\u4ee5\u53ca Seata \u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u539f\u7406\u4ee5\u53ca\u4e09\u79cd\u6a21\u5f0f\uff08AT\u3001TCC\u3001Saga\uff09\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5b9e\u73b0","date":"2019-08-11T00:00:00.000Z","formattedDate":"2019\u5e748\u670811\u65e5","tags":[],"readingTime":25.685,"hasTruncateMarker":false,"authors":[{"name":"long187"}],"frontMatter":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u53ca\u5176\u4e09\u79cd\u6a21\u5f0f\u8be6\u89e3","keywords":["Saga","Seata","AT","TCC","\u4e00\u81f4\u6027","\u91d1\u878d","\u5206\u5e03\u5f0f","\u4e8b\u52a1"],"description":"\u7740\u91cd\u5206\u4eab\u5206\u5e03\u5f0f\u4e8b\u52a1\u4ea7\u751f\u7684\u80cc\u666f\u3001\u7406\u8bba\u57fa\u7840\uff0c\u4ee5\u53ca Seata \u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u539f\u7406\u4ee5\u53ca\u4e09\u79cd\u6a21\u5f0f\uff08AT\u3001TCC\u3001Saga\uff09\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5b9e\u73b0","author":"long187","date":"2019-08-11T00:00:00.000Z"},"prevItem":{"title":"\u57fa\u4e8e Seata Saga \u8bbe\u8ba1\u66f4\u6709\u5f39\u6027\u7684\u91d1\u878d\u5e94\u7528","permalink":"/zh-cn/blog/design-more-flexable-application-by-saga"},"nextItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u95f4\u4ef6 Seata \u7684\u8bbe\u8ba1\u539f\u7406","permalink":"/zh-cn/blog/seata-at-mode-design"}},"content":"\u4f5c\u8005\uff1a\u5c79\u8fdc\uff08\u9648\u9f99\uff09\uff0c\u8682\u8681\u91d1\u670d\u5206\u5e03\u5f0f\u4e8b\u52a1\u6846\u67b6\u6838\u5fc3\u7814\u53d1\uff0cSeata Committer\u3002\\n<br />\u672c\u6587\u6839\u636e 8 \u6708 11 \u65e5 SOFA Meetup#3 \u5e7f\u5dde\u7ad9 \u300a\u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u53ca\u5176\u4e09\u79cd\u6a21\u5f0f\u8be6\u89e3\u300b\u4e3b\u9898\u5206\u4eab\u6574\u7406\uff0c\u7740\u91cd\u5206\u4eab\u5206\u5e03\u5f0f\u4e8b\u52a1\u4ea7\u751f\u7684\u80cc\u666f\u3001\u7406\u8bba\u57fa\u7840\uff0c\u4ee5\u53ca Seata \u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u539f\u7406\u4ee5\u53ca\u4e09\u79cd\u6a21\u5f0f\uff08AT\u3001TCC\u3001Saga\uff09\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5b9e\u73b0\u3002\\n\\n\u73b0\u573a\u56de\u987e\u89c6\u9891\u4ee5\u53ca PPT \u89c1\u6587\u672b\u94fe\u63a5\u3002\\n\\n![3 \u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u4e09\u79cd\u6a21\u5f0f\u8be6\u89e3-\u5c79\u8fdc.jpg](/img/saga/sofameetup3_img/1.jpeg)\\n\\n<a name=\\"Ad95d\\"></a>\\n## \u4e00\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u4ea7\u751f\u7684\u80cc\u666f\\n\\n<a name=\\"Q2ayF\\"></a>\\n### 1.1 \u5206\u5e03\u5f0f\u67b6\u6784\u6f14\u8fdb\u4e4b -\xa0\u6570\u636e\u5e93\u7684\u6c34\u5e73\u62c6\u5206\\n\\n\u8682\u8681\u91d1\u670d\u7684\u4e1a\u52a1\u6570\u636e\u5e93\u8d77\u521d\u662f\u5355\u5e93\u5355\u8868\uff0c\u4f46\u968f\u7740\u4e1a\u52a1\u6570\u636e\u89c4\u6a21\u7684\u5feb\u901f\u53d1\u5c55\uff0c\u6570\u636e\u91cf\u8d8a\u6765\u8d8a\u5927\uff0c\u5355\u5e93\u5355\u8868\u9010\u6e10\u6210\u4e3a\u74f6\u9888\u3002\u6240\u4ee5\u6211\u4eec\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u4e86\u6c34\u5e73\u62c6\u5206\uff0c\u5c06\u539f\u5355\u5e93\u5355\u8868\u62c6\u5206\u6210\u6570\u636e\u5e93\u5206\u7247\u3002\\n\\n\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5206\u5e93\u5206\u8868\u4e4b\u540e\uff0c\u539f\u6765\u5728\u4e00\u4e2a\u6570\u636e\u5e93\u4e0a\u5c31\u80fd\u5b8c\u6210\u7684\u5199\u64cd\u4f5c\uff0c\u53ef\u80fd\u5c31\u4f1a\u8de8\u591a\u4e2a\u6570\u636e\u5e93\uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u8de8\u6570\u636e\u5e93\u4e8b\u52a1\u95ee\u9898\u3002\\n\\n![image.png](/img/saga/sofameetup3_img/2.png)\\n\\n\\n<a name=\\"WBQbC\\"></a>\\n### 1.2 \u5206\u5e03\u5f0f\u67b6\u6784\u6f14\u8fdb\u4e4b -\xa0\u4e1a\u52a1\u670d\u52a1\u5316\u62c6\u5206\\n\\n\u5728\u4e1a\u52a1\u53d1\u5c55\u521d\u671f\uff0c\u201c\u4e00\u5757\u5927\u997c\u201d\u7684\u5355\u4e1a\u52a1\u7cfb\u7edf\u67b6\u6784\uff0c\u80fd\u6ee1\u8db3\u57fa\u672c\u7684\u4e1a\u52a1\u9700\u6c42\u3002\u4f46\u662f\u968f\u7740\u4e1a\u52a1\u7684\u5feb\u901f\u53d1\u5c55\uff0c\u7cfb\u7edf\u7684\u8bbf\u95ee\u91cf\u548c\u4e1a\u52a1\u590d\u6742\u7a0b\u5ea6\u90fd\u5728\u5feb\u901f\u589e\u957f\uff0c\u5355\u7cfb\u7edf\u67b6\u6784\u9010\u6e10\u6210\u4e3a\u4e1a\u52a1\u53d1\u5c55\u74f6\u9888\uff0c\u89e3\u51b3\u4e1a\u52a1\u7cfb\u7edf\u7684\u9ad8\u8026\u5408\u3001\u53ef\u4f38\u7f29\u95ee\u9898\u7684\u9700\u6c42\u8d8a\u6765\u8d8a\u5f3a\u70c8\u3002\\n\\n\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8682\u8681\u91d1\u670d\u6309\u7167\u9762\u5411\u670d\u52a1\u67b6\u6784\uff08SOA\uff09\u7684\u8bbe\u8ba1\u539f\u5219\uff0c\u5c06\u5355\u4e1a\u52a1\u7cfb\u7edf\u62c6\u5206\u6210\u591a\u4e2a\u4e1a\u52a1\u7cfb\u7edf\uff0c\u964d\u4f4e\u4e86\u5404\u7cfb\u7edf\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\uff0c\u4f7f\u4e0d\u540c\u7684\u4e1a\u52a1\u7cfb\u7edf\u4e13\u6ce8\u4e8e\u81ea\u8eab\u4e1a\u52a1\uff0c\u66f4\u6709\u5229\u4e8e\u4e1a\u52a1\u7684\u53d1\u5c55\u548c\u7cfb\u7edf\u5bb9\u91cf\u7684\u4f38\u7f29\u3002\\n\\n![image.png](/img/saga/sofameetup3_img/3.png)\\n\\n\u4e1a\u52a1\u7cfb\u7edf\u6309\u7167\u670d\u52a1\u62c6\u5206\u4e4b\u540e\uff0c\u4e00\u4e2a\u5b8c\u6574\u7684\u4e1a\u52a1\u5f80\u5f80\u9700\u8981\u8c03\u7528\u591a\u4e2a\u670d\u52a1\uff0c\u5982\u4f55\u4fdd\u8bc1\u591a\u4e2a\u670d\u52a1\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\u6210\u4e3a\u4e00\u4e2a\u96be\u9898\u3002\\n\\n\\n<a name=\\"3oIxE\\"></a>\\n## \u4e8c\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u7406\u8bba\u57fa\u7840\\n\\n<a name=\\"akRiW\\"></a>\\n### 2.1\xa0\u4e24\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae\\n\\n![16_16_18__08_13_2019.jpg](/img/saga/sofameetup3_img/4.jpeg)\\n\\n\u4e24\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae\uff1a\u4e8b\u52a1\u7ba1\u7406\u5668\u5206\u4e24\u4e2a\u9636\u6bb5\u6765\u534f\u8c03\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u7b2c\u4e00\u9636\u6bb5\u51c6\u5907\u8d44\u6e90\uff0c\u4e5f\u5c31\u662f\u9884\u7559\u4e8b\u52a1\u6240\u9700\u7684\u8d44\u6e90\uff0c\u5982\u679c\u6bcf\u4e2a\u8d44\u6e90\u7ba1\u7406\u5668\u90fd\u8d44\u6e90\u9884\u7559\u6210\u529f\uff0c\u5219\u8fdb\u884c\u7b2c\u4e8c\u9636\u6bb5\u8d44\u6e90\u63d0\u4ea4\uff0c\u5426\u5219\u534f\u8c03\u8d44\u6e90\u7ba1\u7406\u5668\u56de\u6eda\u8d44\u6e90\u3002\\n\\n<a name=\\"8tfKI\\"></a>\\n### 2.2\xa0TCC\\n\\n![16_16_51__08_13_2019.jpg](/img/saga/sofameetup3_img/5.jpeg)\\n\\nTCC\uff08Try-Confirm-Cancel\uff09 \u5b9e\u9645\u4e0a\u662f\u670d\u52a1\u5316\u7684\u4e24\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae\uff0c\u4e1a\u52a1\u5f00\u53d1\u8005\u9700\u8981\u5b9e\u73b0\u8fd9\u4e09\u4e2a\u670d\u52a1\u63a5\u53e3\uff0c\u7b2c\u4e00\u9636\u6bb5\u670d\u52a1\u7531\u4e1a\u52a1\u4ee3\u7801\u7f16\u6392\u6765\u8c03\u7528 Try \u63a5\u53e3\u8fdb\u884c\u8d44\u6e90\u9884\u7559\uff0c\u6240\u6709\u53c2\u4e0e\u8005\u7684 Try \u63a5\u53e3\u90fd\u6210\u529f\u4e86\uff0c\u4e8b\u52a1\u7ba1\u7406\u5668\u4f1a\u63d0\u4ea4\u4e8b\u52a1\uff0c\u5e76\u8c03\u7528\u6bcf\u4e2a\u53c2\u4e0e\u8005\u7684 Confirm \u63a5\u53e3\u771f\u6b63\u63d0\u4ea4\u4e1a\u52a1\u64cd\u4f5c\uff0c\u5426\u5219\u8c03\u7528\u6bcf\u4e2a\u53c2\u4e0e\u8005\u7684 Cancel \u63a5\u53e3\u56de\u6eda\u4e8b\u52a1\u3002\\n\\n<a name=\\"IXxpF\\"></a>\\n### 2.3 Saga\\n\\n![3 \u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u4e09\u79cd\u6a21\u5f0f\u8be6\u89e3-\u5c79\u8fdc-9.jpg](/img/saga/sofameetup3_img/6.jpeg)\\n\\nSaga \u662f\u4e00\u79cd\u8865\u507f\u534f\u8bae\uff0c\u5728 Saga \u6a21\u5f0f\u4e0b\uff0c\u5206\u5e03\u5f0f\u4e8b\u52a1\u5185\u6709\u591a\u4e2a\u53c2\u4e0e\u8005\uff0c\u6bcf\u4e00\u4e2a\u53c2\u4e0e\u8005\u90fd\u662f\u4e00\u4e2a\u51b2\u6b63\u8865\u507f\u670d\u52a1\uff0c\u9700\u8981\u7528\u6237\u6839\u636e\u4e1a\u52a1\u573a\u666f\u5b9e\u73b0\u5176\u6b63\u5411\u64cd\u4f5c\u548c\u9006\u5411\u56de\u6eda\u64cd\u4f5c\u3002\\n\\n\u5206\u5e03\u5f0f\u4e8b\u52a1\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u4f9d\u6b21\u6267\u884c\u5404\u53c2\u4e0e\u8005\u7684\u6b63\u5411\u64cd\u4f5c\uff0c\u5982\u679c\u6240\u6709\u6b63\u5411\u64cd\u4f5c\u5747\u6267\u884c\u6210\u529f\uff0c\u90a3\u4e48\u5206\u5e03\u5f0f\u4e8b\u52a1\u63d0\u4ea4\u3002\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u6b63\u5411\u64cd\u4f5c\u6267\u884c\u5931\u8d25\uff0c\u90a3\u4e48\u5206\u5e03\u5f0f\u4e8b\u52a1\u4f1a\u9000\u56de\u53bb\u6267\u884c\u524d\u9762\u5404\u53c2\u4e0e\u8005\u7684\u9006\u5411\u56de\u6eda\u64cd\u4f5c\uff0c\u56de\u6eda\u5df2\u63d0\u4ea4\u7684\u53c2\u4e0e\u8005\uff0c\u4f7f\u5206\u5e03\u5f0f\u4e8b\u52a1\u56de\u5230\u521d\u59cb\u72b6\u6001\u3002\\n\\nSaga \u7406\u8bba\u51fa\u81ea\xa0Hector & Kenneth 1987\u53d1\u8868\u7684\u8bba\u6587 Sagas\u3002<br />\\n<br />Saga \u6b63\u5411\u670d\u52a1\u4e0e\u8865\u507f\u670d\u52a1\u4e5f\u9700\u8981\u4e1a\u52a1\u5f00\u53d1\u8005\u5b9e\u73b0\u3002\\n\\n<a name=\\"fZPaN\\"></a>\\n## \u4e09\u3001Seata\xa0\u53ca\u5176\u4e09\u79cd\u6a21\u5f0f\u8be6\u89e3\\n\\n<a name=\\"IgVM7\\"></a>\\n### 3.1 \u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u4ecb\u7ecd\\n\\nSeata\uff08Simple Extensible Autonomous Transaction Architecture\uff0c\u7b80\u5355\u53ef\u6269\u5c55\u81ea\u6cbb\u4e8b\u52a1\u6846\u67b6\uff09\u662f 2019 \u5e74 1 \u6708\u4efd\u8682\u8681\u91d1\u670d\u548c\u963f\u91cc\u5df4\u5df4\u5171\u540c\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u3002Seata \u5f00\u6e90\u534a\u5e74\u5de6\u53f3\uff0c\u76ee\u524d\u5df2\u7ecf\u6709\u8d85\u8fc7 1.1 \u4e07 star\uff0c\u793e\u533a\u975e\u5e38\u6d3b\u8dc3\u3002\u6211\u4eec\u70ed\u5ff1\u6b22\u8fce\u5927\u5bb6\u53c2\u4e0e\u5230 Seata \u793e\u533a\u5efa\u8bbe\u4e2d\uff0c\u4e00\u540c\u5c06 Seata \u6253\u9020\u6210\u5f00\u6e90\u5206\u5e03\u5f0f\u4e8b\u52a1\u6807\u6746\u4ea7\u54c1\u3002\\n\\nSeata\uff1a[https://](https://github.com/seata/seata)[github.com/seata/seata](https://github.com/seata/seata)<br />\\n<br />![image.png](/img/saga/sofameetup3_img/7.png)\\n\\n<a name=\\"zyy0l\\"></a>\\n### 3.2 \u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u4ea7\u54c1\u6a21\u5757\\n\\n\u5982\u4e0b\u56fe\u6240\u793a\uff0cSeata \u4e2d\u6709\u4e09\u5927\u6a21\u5757\uff0c\u5206\u522b\u662f TM\u3001RM \u548c TC\u3002 \u5176\u4e2d TM \u548c RM \u662f\u4f5c\u4e3a Seata \u7684\u5ba2\u6237\u7aef\u4e0e\u4e1a\u52a1\u7cfb\u7edf\u96c6\u6210\u5728\u4e00\u8d77\uff0cTC \u4f5c\u4e3a Seata \u7684\u670d\u52a1\u7aef\u72ec\u7acb\u90e8\u7f72\u3002\\n\\n![image.png](/img/saga/sofameetup3_img/8.png)\\n\\n\u5728 Seata \u4e2d\uff0c\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u6267\u884c\u6d41\u7a0b\uff1a\\n\\n- TM \u5f00\u542f\u5206\u5e03\u5f0f\u4e8b\u52a1\uff08TM \u5411 TC \u6ce8\u518c\u5168\u5c40\u4e8b\u52a1\u8bb0\u5f55\uff09\uff1b\\n- \u6309\u4e1a\u52a1\u573a\u666f\uff0c\u7f16\u6392\u6570\u636e\u5e93\u3001\u670d\u52a1\u7b49\u4e8b\u52a1\u5185\u8d44\u6e90\uff08RM \u5411 TC \u6c47\u62a5\u8d44\u6e90\u51c6\u5907\u72b6\u6001\xa0\uff09\uff1b\\n- TM \u7ed3\u675f\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u4e8b\u52a1\u4e00\u9636\u6bb5\u7ed3\u675f\uff08TM \u901a\u77e5 TC\xa0\u63d0\u4ea4/\u56de\u6eda\u5206\u5e03\u5f0f\u4e8b\u52a1\uff09\uff1b\\n- TC \u6c47\u603b\u4e8b\u52a1\u4fe1\u606f\uff0c\u51b3\u5b9a\u5206\u5e03\u5f0f\u4e8b\u52a1\u662f\u63d0\u4ea4\u8fd8\u662f\u56de\u6eda\uff1b\\n- TC \u901a\u77e5\u6240\u6709 RM \u63d0\u4ea4/\u56de\u6eda \u8d44\u6e90\uff0c\u4e8b\u52a1\u4e8c\u9636\u6bb5\u7ed3\u675f\uff1b\\n\\n<a name=\\"1QKqI\\"></a>\\n### 3.3 \u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u89e3\u51b3\u65b9\u6848\\n\\nSeata \u4f1a\u6709 4 \u79cd\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u5206\u522b\u662f AT \u6a21\u5f0f\u3001TCC \u6a21\u5f0f\u3001Saga \u6a21\u5f0f\u548c XA \u6a21\u5f0f\u3002\\n\\n![15_49_23__08_13_2019.jpg](/img/saga/sofameetup3_img/9.jpeg)<br />\\n\\n<a name=\\"784n4\\"></a>\\n#### 2.3.1 AT \u6a21\u5f0f\\n\\n\u4eca\u5e74 1 \u6708\u4efd\uff0cSeata \u5f00\u6e90\u4e86 AT \u6a21\u5f0f\u3002AT \u6a21\u5f0f\u662f\u4e00\u79cd\u65e0\u4fb5\u5165\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u3002\u5728 AT \u6a21\u5f0f\u4e0b\uff0c\u7528\u6237\u53ea\u9700\u5173\u6ce8\u81ea\u5df1\u7684\u201c\u4e1a\u52a1 SQL\u201d\uff0c\u7528\u6237\u7684 \u201c\u4e1a\u52a1 SQL\u201d\xa0\u4f5c\u4e3a\u4e00\u9636\u6bb5\uff0cSeata \u6846\u67b6\u4f1a\u81ea\u52a8\u751f\u6210\u4e8b\u52a1\u7684\u4e8c\u9636\u6bb5\u63d0\u4ea4\u548c\u56de\u6eda\u64cd\u4f5c\u3002\\n\\n![image.png](/img/saga/sofameetup3_img/10.png)<br />\\n\\n<a name=\\"Acfeo\\"></a>\\n##### AT \u6a21\u5f0f\u5982\u4f55\u505a\u5230\u5bf9\u4e1a\u52a1\u7684\u65e0\u4fb5\u5165 \uff1a\\n\\n- \u4e00\u9636\u6bb5\uff1a\\n\\n\u5728\u4e00\u9636\u6bb5\uff0cSeata \u4f1a\u62e6\u622a\u201c\u4e1a\u52a1 SQL\u201d\uff0c\u9996\u5148\u89e3\u6790 SQL \u8bed\u4e49\uff0c\u627e\u5230\u201c\u4e1a\u52a1 SQL\u201d\u8981\u66f4\u65b0\u7684\u4e1a\u52a1\u6570\u636e\uff0c\u5728\u4e1a\u52a1\u6570\u636e\u88ab\u66f4\u65b0\u524d\uff0c\u5c06\u5176\u4fdd\u5b58\u6210\u201cbefore image\u201d\uff0c\u7136\u540e\u6267\u884c\u201c\u4e1a\u52a1 SQL\u201d\u66f4\u65b0\u4e1a\u52a1\u6570\u636e\uff0c\u5728\u4e1a\u52a1\u6570\u636e\u66f4\u65b0\u4e4b\u540e\uff0c\u518d\u5c06\u5176\u4fdd\u5b58\u6210\u201cafter image\u201d\uff0c\u6700\u540e\u751f\u6210\u884c\u9501\u3002\u4ee5\u4e0a\u64cd\u4f5c\u5168\u90e8\u5728\u4e00\u4e2a\u6570\u636e\u5e93\u4e8b\u52a1\u5185\u5b8c\u6210\uff0c\u8fd9\u6837\u4fdd\u8bc1\u4e86\u4e00\u9636\u6bb5\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u3002\\n\\n![\u56fe\u72473.png](/img/saga/sofameetup3_img/11.png)\\n\\n- \u4e8c\u9636\u6bb5\u63d0\u4ea4\uff1a\\n\\n\u4e8c\u9636\u6bb5\u5982\u679c\u662f\u63d0\u4ea4\u7684\u8bdd\uff0c\u56e0\u4e3a\u201c\u4e1a\u52a1 SQL\u201d\u5728\u4e00\u9636\u6bb5\u5df2\u7ecf\u63d0\u4ea4\u81f3\u6570\u636e\u5e93\uff0c \u6240\u4ee5 Seata \u6846\u67b6\u53ea\u9700\u5c06\u4e00\u9636\u6bb5\u4fdd\u5b58\u7684\u5feb\u7167\u6570\u636e\u548c\u884c\u9501\u5220\u6389\uff0c\u5b8c\u6210\u6570\u636e\u6e05\u7406\u5373\u53ef\u3002\\n\\n![\u56fe\u72474.png](/img/saga/sofameetup3_img/12.png)\\n\\n- \u4e8c\u9636\u6bb5\u56de\u6eda\uff1a\\n\\n\u4e8c\u9636\u6bb5\u5982\u679c\u662f\u56de\u6eda\u7684\u8bdd\uff0cSeata \u5c31\u9700\u8981\u56de\u6eda\u4e00\u9636\u6bb5\u5df2\u7ecf\u6267\u884c\u7684\u201c\u4e1a\u52a1 SQL\u201d\uff0c\u8fd8\u539f\u4e1a\u52a1\u6570\u636e\u3002\u56de\u6eda\u65b9\u5f0f\u4fbf\u662f\u7528\u201cbefore image\u201d\u8fd8\u539f\u4e1a\u52a1\u6570\u636e\uff1b\u4f46\u5728\u8fd8\u539f\u524d\u8981\u9996\u5148\u8981\u6821\u9a8c\u810f\u5199\uff0c\u5bf9\u6bd4\u201c\u6570\u636e\u5e93\u5f53\u524d\u4e1a\u52a1\u6570\u636e\u201d\u548c \u201cafter image\u201d\uff0c\u5982\u679c\u4e24\u4efd\u6570\u636e\u5b8c\u5168\u4e00\u81f4\u5c31\u8bf4\u660e\u6ca1\u6709\u810f\u5199\uff0c\u53ef\u4ee5\u8fd8\u539f\u4e1a\u52a1\u6570\u636e\uff0c\u5982\u679c\u4e0d\u4e00\u81f4\u5c31\u8bf4\u660e\u6709\u810f\u5199\uff0c\u51fa\u73b0\u810f\u5199\u5c31\u9700\u8981\u8f6c\u4eba\u5de5\u5904\u7406\u3002\\n\\n![\u56fe\u72475.png](/img/saga/sofameetup3_img/13.png)\\n\\nAT \u6a21\u5f0f\u7684\u4e00\u9636\u6bb5\u3001\u4e8c\u9636\u6bb5\u63d0\u4ea4\u548c\u56de\u6eda\u5747\u7531 Seata \u6846\u67b6\u81ea\u52a8\u751f\u6210\uff0c\u7528\u6237\u53ea\u9700\u7f16\u5199\u201c\u4e1a\u52a1 SQL\u201d\uff0c\u4fbf\u80fd\u8f7b\u677e\u63a5\u5165\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0cAT \u6a21\u5f0f\u662f\u4e00\u79cd\u5bf9\u4e1a\u52a1\u65e0\u4efb\u4f55\u4fb5\u5165\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u3002\\n\\n<a name=\\"FnD1S\\"></a>\\n#### 2.3.2 TCC \u6a21\u5f0f\\n\\n2019 \u5e74 3 \u6708\u4efd\uff0cSeata \u5f00\u6e90\u4e86 TCC \u6a21\u5f0f\uff0c\u8be5\u6a21\u5f0f\u7531\u8682\u8681\u91d1\u670d\u8d21\u732e\u3002TCC \u6a21\u5f0f\u9700\u8981\u7528\u6237\u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u573a\u666f\u5b9e\u73b0 Try\u3001Confirm \u548c Cancel \u4e09\u4e2a\u64cd\u4f5c\uff1b\u4e8b\u52a1\u53d1\u8d77\u65b9\u5728\u4e00\u9636\u6bb5\u6267\u884c Try \u65b9\u5f0f\uff0c\u5728\u4e8c\u9636\u6bb5\u63d0\u4ea4\u6267\u884c Confirm \u65b9\u6cd5\uff0c\u4e8c\u9636\u6bb5\u56de\u6eda\u6267\u884c Cancel \u65b9\u6cd5\u3002\\n\\n![\u56fe\u72476.png](/img/saga/sofameetup3_img/14.png)\\n\\nTCC \u4e09\u4e2a\u65b9\u6cd5\u63cf\u8ff0\uff1a\\n\\n- Try\uff1a\u8d44\u6e90\u7684\u68c0\u6d4b\u548c\u9884\u7559\uff1b\\n- Confirm\uff1a\u6267\u884c\u7684\u4e1a\u52a1\u64cd\u4f5c\u63d0\u4ea4\uff1b\u8981\u6c42 Try \u6210\u529f Confirm \u4e00\u5b9a\u8981\u80fd\u6210\u529f\uff1b\\n- Cancel\uff1a\u9884\u7559\u8d44\u6e90\u91ca\u653e\uff1b\\n\\n**\u8682\u8681\u91d1\u670d\u5728 TCC \u7684\u5b9e\u8df5\u7ecf\u9a8c**<br />**<br />![16_48_02__08_13_2019.jpg](/img/saga/sofameetup3_img/15.jpeg)\\n\\n**1 TCC \u8bbe\u8ba1 - \u4e1a\u52a1\u6a21\u578b\u5206 2 \u9636\u6bb5\u8bbe\u8ba1\uff1a**\\n\\n\u7528\u6237\u63a5\u5165 TCC \uff0c\u6700\u91cd\u8981\u7684\u662f\u8003\u8651\u5982\u4f55\u5c06\u81ea\u5df1\u7684\u4e1a\u52a1\u6a21\u578b\u62c6\u6210\u4e24\u9636\u6bb5\u6765\u5b9e\u73b0\u3002\\n\\n\u4ee5\u201c\u6263\u94b1\u201d\u573a\u666f\u4e3a\u4f8b\uff0c\u5728\u63a5\u5165 TCC \u524d\uff0c\u5bf9 A \u8d26\u6237\u7684\u6263\u94b1\uff0c\u53ea\u9700\u4e00\u6761\u66f4\u65b0\u8d26\u6237\u4f59\u989d\u7684 SQL \u4fbf\u80fd\u5b8c\u6210\uff1b\u4f46\u662f\u5728\u63a5\u5165 TCC \u4e4b\u540e\uff0c\u7528\u6237\u5c31\u9700\u8981\u8003\u8651\u5982\u4f55\u5c06\u539f\u6765\u4e00\u6b65\u5c31\u80fd\u5b8c\u6210\u7684\u6263\u94b1\u64cd\u4f5c\uff0c\u62c6\u6210\u4e24\u9636\u6bb5\uff0c\u5b9e\u73b0\u6210\u4e09\u4e2a\u65b9\u6cd5\uff0c\u5e76\u4e14\u4fdd\u8bc1\u4e00\u9636\u6bb5 Try\xa0 \u6210\u529f\u7684\u8bdd \u4e8c\u9636\u6bb5 Confirm \u4e00\u5b9a\u80fd\u6210\u529f\u3002\\n\\n![\u56fe\u72477.png](/img/saga/sofameetup3_img/16.png)\\n\\n\u5982\u4e0a\u56fe\u6240\u793a\uff0c\\n\\nTry \u65b9\u6cd5\u4f5c\u4e3a\u4e00\u9636\u6bb5\u51c6\u5907\u65b9\u6cd5\uff0c\u9700\u8981\u505a\u8d44\u6e90\u7684\u68c0\u67e5\u548c\u9884\u7559\u3002\u5728\u6263\u94b1\u573a\u666f\u4e0b\uff0cTry \u8981\u505a\u7684\u4e8b\u60c5\u662f\u5c31\u662f\u68c0\u67e5\u8d26\u6237\u4f59\u989d\u662f\u5426\u5145\u8db3\uff0c\u9884\u7559\u8f6c\u8d26\u8d44\u91d1\uff0c\u9884\u7559\u7684\u65b9\u5f0f\u5c31\u662f\u51bb\u7ed3 A \u8d26\u6237\u7684 \u8f6c\u8d26\u8d44\u91d1\u3002Try \u65b9\u6cd5\u6267\u884c\u4e4b\u540e\uff0c\u8d26\u53f7 A \u4f59\u989d\u867d\u7136\u8fd8\u662f 100\uff0c\u4f46\u662f\u5176\u4e2d 30 \u5143\u5df2\u7ecf\u88ab\u51bb\u7ed3\u4e86\uff0c\u4e0d\u80fd\u88ab\u5176\u4ed6\u4e8b\u52a1\u4f7f\u7528\u3002\\n\\n\u4e8c\u9636\u6bb5 Confirm \u65b9\u6cd5\u6267\u884c\u771f\u6b63\u7684\u6263\u94b1\u64cd\u4f5c\u3002Confirm \u4f1a\u4f7f\u7528 Try \u9636\u6bb5\u51bb\u7ed3\u7684\u8d44\u91d1\uff0c\u6267\u884c\u8d26\u53f7\u6263\u6b3e\u3002Confirm \u65b9\u6cd5\u6267\u884c\u4e4b\u540e\uff0c\u8d26\u53f7 A \u5728\u4e00\u9636\u6bb5\u4e2d\u51bb\u7ed3\u7684 30 \u5143\u5df2\u7ecf\u88ab\u6263\u9664\uff0c\u8d26\u53f7 A \u4f59\u989d\u53d8\u6210 70 \u5143 \u3002\\n\\n\u5982\u679c\u4e8c\u9636\u6bb5\u662f\u56de\u6eda\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u5728 Cancel \u65b9\u6cd5\u5185\u91ca\u653e\u4e00\u9636\u6bb5 Try \u51bb\u7ed3\u7684 30 \u5143\uff0c\u4f7f\u8d26\u53f7 A \u7684\u56de\u5230\u521d\u59cb\u72b6\u6001\uff0c100 \u5143\u5168\u90e8\u53ef\u7528\u3002\\n\\n\u7528\u6237\u63a5\u5165 TCC \u6a21\u5f0f\uff0c\u6700\u91cd\u8981\u7684\u4e8b\u60c5\u5c31\u662f\u8003\u8651\u5982\u4f55\u5c06\u4e1a\u52a1\u6a21\u578b\u62c6\u6210 2 \u9636\u6bb5\uff0c\u5b9e\u73b0\u6210 TCC \u7684 3 \u4e2a\u65b9\u6cd5\uff0c\u5e76\u4e14\u4fdd\u8bc1 Try \u6210\u529f Confirm \u4e00\u5b9a\u80fd\u6210\u529f\u3002\u76f8\u5bf9\u4e8e AT \u6a21\u5f0f\uff0cTCC \u6a21\u5f0f\u5bf9\u4e1a\u52a1\u4ee3\u7801\u6709\u4e00\u5b9a\u7684\u4fb5\u5165\u6027\uff0c\u4f46\u662f TCC \u6a21\u5f0f\u65e0 AT \u6a21\u5f0f\u7684\u5168\u5c40\u884c\u9501\uff0cTCC \u6027\u80fd\u4f1a\u6bd4 AT \u6a21\u5f0f\u9ad8\u5f88\u591a\u3002\\n\\n**2 TCC \u8bbe\u8ba1 - \u5141\u8bb8\u7a7a\u56de\u6eda\uff1a**<br />**<br />![16_51_44__08_13_2019.jpg](/img/saga/sofameetup3_img/17.jpeg)\\n\\nCancel \u63a5\u53e3\u8bbe\u8ba1\u65f6\u9700\u8981\u5141\u8bb8\u7a7a\u56de\u6eda\u3002\u5728 Try \u63a5\u53e3\u56e0\u4e3a\u4e22\u5305\u65f6\u6ca1\u6709\u6536\u5230\uff0c\u4e8b\u52a1\u7ba1\u7406\u5668\u4f1a\u89e6\u53d1\u56de\u6eda\uff0c\u8fd9\u65f6\u4f1a\u89e6\u53d1 Cancel \u63a5\u53e3\uff0c\u8fd9\u65f6 Cancel \u6267\u884c\u65f6\u53d1\u73b0\u6ca1\u6709\u5bf9\u5e94\u7684\u4e8b\u52a1 xid \u6216\u4e3b\u952e\u65f6\uff0c\u9700\u8981\u8fd4\u56de\u56de\u6eda\u6210\u529f\u3002\u8ba9\u4e8b\u52a1\u670d\u52a1\u7ba1\u7406\u5668\u8ba4\u4e3a\u5df2\u56de\u6eda\uff0c\u5426\u5219\u4f1a\u4e0d\u65ad\u91cd\u8bd5\uff0c\u800c Cancel \u53c8\u6ca1\u6709\u5bf9\u5e94\u7684\u4e1a\u52a1\u6570\u636e\u53ef\u4ee5\u8fdb\u884c\u56de\u6eda\u3002\\n\\n**3 TCC \u8bbe\u8ba1 - \u9632\u60ac\u6302\u63a7\u5236\uff1a**<br />**<br />![16_51_56__08_13_2019.jpg](/img/saga/sofameetup3_img/18.jpeg)\\n\\n\u60ac\u6302\u7684\u610f\u601d\u662f\uff1aCancel \u6bd4 Try \u63a5\u53e3\u5148\u6267\u884c\uff0c\u51fa\u73b0\u7684\u539f\u56e0\u662f Try \u7531\u4e8e\u7f51\u7edc\u62e5\u5835\u800c\u8d85\u65f6\uff0c\u4e8b\u52a1\u7ba1\u7406\u5668\u751f\u6210\u56de\u6eda\uff0c\u89e6\u53d1 Cancel \u63a5\u53e3\uff0c\u800c\u6700\u7ec8\u53c8\u6536\u5230\u4e86 Try \u63a5\u53e3\u8c03\u7528\uff0c\u4f46\u662f Cancel \u6bd4 Try \u5148\u5230\u3002\u6309\u7167\u524d\u9762\u5141\u8bb8\u7a7a\u56de\u6eda\u7684\u903b\u8f91\uff0c\u56de\u6eda\u4f1a\u8fd4\u56de\u6210\u529f\uff0c\u4e8b\u52a1\u7ba1\u7406\u5668\u8ba4\u4e3a\u4e8b\u52a1\u5df2\u56de\u6eda\u6210\u529f\uff0c\u5219\u6b64\u65f6\u7684 Try \u63a5\u53e3\u4e0d\u5e94\u8be5\u6267\u884c\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u6240\u4ee5\u6211\u4eec\u5728 Cancel \u7a7a\u56de\u6eda\u8fd4\u56de\u6210\u529f\u4e4b\u524d\u5148\u8bb0\u5f55\u8be5\u6761\u4e8b\u52a1 xid \u6216\u4e1a\u52a1\u4e3b\u952e\uff0c\u6807\u8bc6\u8fd9\u6761\u8bb0\u5f55\u5df2\u7ecf\u56de\u6eda\u8fc7\uff0cTry \u63a5\u53e3\u5148\u68c0\u67e5\u8fd9\u6761\u4e8b\u52a1xid\u6216\u4e1a\u52a1\u4e3b\u952e\u5982\u679c\u5df2\u7ecf\u6807\u8bb0\u4e3a\u56de\u6eda\u6210\u529f\u8fc7\uff0c\u5219\u4e0d\u6267\u884c Try \u7684\u4e1a\u52a1\u64cd\u4f5c\u3002\\n\\n**4 TCC \u8bbe\u8ba1 - \u5e42\u7b49\u63a7\u5236\uff1a**<br />**<br />![16_52_07__08_13_2019.jpg](/img/saga/sofameetup3_img/19.jpeg)\\n\\n\u5e42\u7b49\u6027\u7684\u610f\u601d\u662f\uff1a\u5bf9\u540c\u4e00\u4e2a\u7cfb\u7edf\uff0c\u4f7f\u7528\u540c\u6837\u7684\u6761\u4ef6\uff0c\u4e00\u6b21\u8bf7\u6c42\u548c\u91cd\u590d\u7684\u591a\u6b21\u8bf7\u6c42\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684\u5f71\u54cd\u662f\u4e00\u81f4\u7684\u3002\u56e0\u4e3a\u7f51\u7edc\u6296\u52a8\u6216\u62e5\u5835\u53ef\u80fd\u4f1a\u8d85\u65f6\uff0c\u4e8b\u52a1\u7ba1\u7406\u5668\u4f1a\u5bf9\u8d44\u6e90\u8fdb\u884c\u91cd\u8bd5\u64cd\u4f5c\uff0c\u6240\u4ee5\u5f88\u53ef\u80fd\u4e00\u4e2a\u4e1a\u52a1\u64cd\u4f5c\u4f1a\u88ab\u91cd\u590d\u8c03\u7528\uff0c\u4e3a\u4e86\u4e0d\u56e0\u4e3a\u91cd\u590d\u8c03\u7528\u800c\u591a\u6b21\u5360\u7528\u8d44\u6e90\uff0c\u9700\u8981\u5bf9\u670d\u52a1\u8bbe\u8ba1\u65f6\u8fdb\u884c\u5e42\u7b49\u63a7\u5236\uff0c\u901a\u5e38\u6211\u4eec\u53ef\u4ee5\u7528\u4e8b\u52a1 xid \u6216\u4e1a\u52a1\u4e3b\u952e\u5224\u91cd\u6765\u63a7\u5236\u3002\\n\\n<a name=\\"dsMch\\"></a>\\n#### 2.3.3 Saga \u6a21\u5f0f\\n\\nSaga \u6a21\u5f0f\u662f Seata \u5373\u5c06\u5f00\u6e90\u7684\u957f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u5c06\u7531\u8682\u8681\u91d1\u670d\u4e3b\u8981\u8d21\u732e\u3002\u5728 Saga \u6a21\u5f0f\u4e0b\uff0c\u5206\u5e03\u5f0f\u4e8b\u52a1\u5185\u6709\u591a\u4e2a\u53c2\u4e0e\u8005\uff0c\u6bcf\u4e00\u4e2a\u53c2\u4e0e\u8005\u90fd\u662f\u4e00\u4e2a\u51b2\u6b63\u8865\u507f\u670d\u52a1\uff0c\u9700\u8981\u7528\u6237\u6839\u636e\u4e1a\u52a1\u573a\u666f\u5b9e\u73b0\u5176\u6b63\u5411\u64cd\u4f5c\u548c\u9006\u5411\u56de\u6eda\u64cd\u4f5c\u3002\\n\\n\u5206\u5e03\u5f0f\u4e8b\u52a1\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u4f9d\u6b21\u6267\u884c\u5404\u53c2\u4e0e\u8005\u7684\u6b63\u5411\u64cd\u4f5c\uff0c\u5982\u679c\u6240\u6709\u6b63\u5411\u64cd\u4f5c\u5747\u6267\u884c\u6210\u529f\uff0c\u90a3\u4e48\u5206\u5e03\u5f0f\u4e8b\u52a1\u63d0\u4ea4\u3002\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u6b63\u5411\u64cd\u4f5c\u6267\u884c\u5931\u8d25\uff0c\u90a3\u4e48\u5206\u5e03\u5f0f\u4e8b\u52a1\u4f1a\u53bb\u9000\u56de\u53bb\u6267\u884c\u524d\u9762\u5404\u53c2\u4e0e\u8005\u7684\u9006\u5411\u56de\u6eda\u64cd\u4f5c\uff0c\u56de\u6eda\u5df2\u63d0\u4ea4\u7684\u53c2\u4e0e\u8005\uff0c\u4f7f\u5206\u5e03\u5f0f\u4e8b\u52a1\u56de\u5230\u521d\u59cb\u72b6\u6001\u3002\\n\\n![\u56fe\u72478.png](/img/saga/sofameetup3_img/20.png)\\n\\n\\nSaga \u6a21\u5f0f\u4e0b\u5206\u5e03\u5f0f\u4e8b\u52a1\u901a\u5e38\u662f\u7531\u4e8b\u4ef6\u9a71\u52a8\u7684\uff0c\u5404\u4e2a\u53c2\u4e0e\u8005\u4e4b\u95f4\u662f\u5f02\u6b65\u6267\u884c\u7684\uff0cSaga \u6a21\u5f0f\u662f\u4e00\u79cd\u957f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u3002\\n\\n**1 Saga \u6a21\u5f0f\u4f7f\u7528\u573a\u666f**<br />**<br />![16_44_58__08_13_2019.jpg](/img/saga/sofameetup3_img/21.jpeg)\\n\\nSaga \u6a21\u5f0f\u9002\u7528\u4e8e\u4e1a\u52a1\u6d41\u7a0b\u957f\u4e14\u9700\u8981\u4fdd\u8bc1\u4e8b\u52a1\u6700\u7ec8\u4e00\u81f4\u6027\u7684\u4e1a\u52a1\u7cfb\u7edf\uff0cSaga \u6a21\u5f0f\u4e00\u9636\u6bb5\u5c31\u4f1a\u63d0\u4ea4\u672c\u5730\u4e8b\u52a1\uff0c\u65e0\u9501\u3001\u957f\u6d41\u7a0b\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4fdd\u8bc1\u6027\u80fd\u3002\\n\\n\u4e8b\u52a1\u53c2\u4e0e\u8005\u53ef\u80fd\u662f\u5176\u5b83\u516c\u53f8\u7684\u670d\u52a1\u6216\u8005\u662f\u9057\u7559\u7cfb\u7edf\u7684\u670d\u52a1\uff0c\u65e0\u6cd5\u8fdb\u884c\u6539\u9020\u548c\u63d0\u4f9b TCC \u8981\u6c42\u7684\u63a5\u53e3\uff0c\u53ef\u4ee5\u4f7f\u7528 Saga \u6a21\u5f0f\u3002\\n\\nSaga\u6a21\u5f0f\u7684\u4f18\u52bf\u662f\uff1a\\n\\n- \u4e00\u9636\u6bb5\u63d0\u4ea4\u672c\u5730\u6570\u636e\u5e93\u4e8b\u52a1\uff0c\u65e0\u9501\uff0c\u9ad8\u6027\u80fd\uff1b\\n- \u53c2\u4e0e\u8005\u53ef\u4ee5\u91c7\u7528\u4e8b\u52a1\u9a71\u52a8\u5f02\u6b65\u6267\u884c\uff0c\u9ad8\u541e\u5410\uff1b\\n- \u8865\u507f\u670d\u52a1\u5373\u6b63\u5411\u670d\u52a1\u7684\u201c\u53cd\u5411\u201d\uff0c\u6613\u4e8e\u7406\u89e3\uff0c\u6613\u4e8e\u5b9e\u73b0\uff1b\\n\\n\u7f3a\u70b9\uff1aSaga \u6a21\u5f0f\u7531\u4e8e\u4e00\u9636\u6bb5\u5df2\u7ecf\u63d0\u4ea4\u672c\u5730\u6570\u636e\u5e93\u4e8b\u52a1\uff0c\u4e14\u6ca1\u6709\u8fdb\u884c\u201c\u9884\u7559\u201d\u52a8\u4f5c\uff0c\u6240\u4ee5\u4e0d\u80fd\u4fdd\u8bc1\u9694\u79bb\u6027\u3002\u540e\u7eed\u4f1a\u8bb2\u5230\u5bf9\u4e8e\u7f3a\u4e4f\u9694\u79bb\u6027\u7684\u5e94\u5bf9\u63aa\u65bd\u3002<br />**2 \u57fa\u4e8e\u72b6\u6001\u673a\u5f15\u64ce\u7684 Saga \u5b9e\u73b0**\\n\\n![17_13_19__08_13_2019.jpg](/img/saga/sofameetup3_img/22.png)\\n\\n\u76ee\u524d Saga \u7684\u5b9e\u73b0\u4e00\u822c\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u901a\u8fc7\u4e8b\u4ef6\u9a71\u52a8\u67b6\u6784\u5b9e\u73b0\uff0c\u4e00\u79cd\u662f\u57fa\u4e8e\u6ce8\u89e3\u52a0\u62e6\u622a\u5668\u62e6\u622a\u4e1a\u52a1\u7684\u6b63\u5411\u670d\u52a1\u5b9e\u73b0\u3002Seata \u76ee\u524d\u662f\u91c7\u7528\u4e8b\u4ef6\u9a71\u52a8\u7684\u673a\u5236\u6765\u5b9e\u73b0\u7684\uff0cSeata \u5b9e\u73b0\u4e86\u4e00\u4e2a\u72b6\u6001\u673a\uff0c\u53ef\u4ee5\u7f16\u6392\u670d\u52a1\u7684\u8c03\u7528\u6d41\u7a0b\u53ca\u6b63\u5411\u670d\u52a1\u7684\u8865\u507f\u670d\u52a1\uff0c\u751f\u6210\u4e00\u4e2a json \u6587\u4ef6\u5b9a\u4e49\u7684\u72b6\u6001\u56fe\uff0c\u72b6\u6001\u673a\u5f15\u64ce\u9a71\u52a8\u5230\u8fd9\u4e2a\u56fe\u7684\u8fd0\u884c\uff0c\u5f53\u53d1\u751f\u5f02\u5e38\u7684\u65f6\u5019\u72b6\u6001\u673a\u89e6\u53d1\u56de\u6eda\uff0c\u9010\u4e2a\u6267\u884c\u8865\u507f\u670d\u52a1\u3002\u5f53\u7136\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u89e6\u53d1\u56de\u6eda\u7528\u6237\u662f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u51b3\u5b9a\u7684\u3002\u8be5\u72b6\u6001\u673a\u53ef\u4ee5\u5b9e\u73b0\u670d\u52a1\u7f16\u6392\u7684\u9700\u6c42\uff0c\u5b83\u652f\u6301\u5355\u9879\u9009\u62e9\u3001\u5e76\u53d1\u3001\u5f02\u6b65\u3001\u5b50\u72b6\u6001\u673a\u8c03\u7528\u3001\u53c2\u6570\u8f6c\u6362\u3001\u53c2\u6570\u6620\u5c04\u3001\u670d\u52a1\u6267\u884c\u72b6\u6001\u5224\u65ad\u3001\u5f02\u5e38\u6355\u83b7\u7b49\u529f\u80fd\u3002\\n\\n**3 \u72b6\u6001\u673a\u5f15\u64ce\u539f\u7406**<br />\\n\\n![16_45_32__08_13_2019.jpg](/img/saga/sofameetup3_img/23.png)\\n\\n\u8be5\u72b6\u6001\u673a\u5f15\u64ce\u7684\u57fa\u672c\u539f\u7406\u662f\uff0c\u5b83\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u67b6\u6784\uff0c\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u662f\u5f02\u6b65\u6267\u884c\u7684\uff0c\u6b65\u9aa4\u4e0e\u6b65\u9aa4\u4e4b\u95f4\u901a\u8fc7\u4e8b\u4ef6\u961f\u5217\u6d41\u8f6c\uff0c<br />\u6781\u5927\u7684\u63d0\u9ad8\u7cfb\u7edf\u541e\u5410\u91cf\u3002\u6bcf\u4e2a\u6b65\u9aa4\u6267\u884c\u65f6\u4f1a\u8bb0\u5f55\u4e8b\u52a1\u65e5\u5fd7\uff0c\u7528\u4e8e\u51fa\u73b0\u5f02\u5e38\u65f6\u56de\u6eda\u65f6\u4f7f\u7528\uff0c\u4e8b\u52a1\u65e5\u5fd7\u4f1a\u8bb0\u5f55\u5728\u4e0e\u4e1a\u52a1\u8868\u6240\u5728\u7684\u6570\u636e\u5e93\u5185\uff0c\u63d0\u9ad8\u6027\u80fd\u3002\\n\\n**4 \u72b6\u6001\u673a\u5f15\u64ce\u8bbe\u8ba1**\\n\\n![16_45_46__08_13_2019.jpg](/img/saga/sofameetup3_img/24.jpeg)\\n\\n\u8be5\u72b6\u6001\u673a\u5f15\u64ce\u5206\u6210\u4e86\u4e09\u5c42\u67b6\u6784\u7684\u8bbe\u8ba1\uff0c\u6700\u5e95\u5c42\u662f\u201c\u4e8b\u4ef6\u9a71\u52a8\u201d\u5c42\uff0c\u5b9e\u73b0\u4e86 EventBus \u548c\u6d88\u8d39\u4e8b\u4ef6\u7684\u7ebf\u7a0b\u6c60\uff0c\u662f\u4e00\u4e2a Pub-Sub \u7684\u67b6\u6784\u3002\u7b2c\u4e8c\u5c42\u662f\u201c\u6d41\u7a0b\u63a7\u5236\u5668\u201d\u5c42\uff0c\u5b83\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6781\u7b80\u7684\u6d41\u7a0b\u5f15\u64ce\u6846\u67b6\uff0c\u5b83\u9a71\u52a8\u4e00\u4e2a\u201c\u7a7a\u201d\u7684\u6d41\u7a0b\u6267\u884c\uff0c\u201c\u7a7a\u201d\u7684\u610f\u601d\u662f\u6307\u5b83\u4e0d\u5173\u5fc3\u6d41\u7a0b\u8282\u70b9\u505a\u4ec0\u4e48\u4e8b\u60c5\uff0c\u5b83\u53ea\u6267\u884c\u6bcf\u4e2a\u8282\u70b9\u7684 process \u65b9\u6cd5\uff0c\u7136\u540e\u6267\u884c route \u65b9\u6cd5\u6d41\u8f6c\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002\u8fd9\u662f\u4e00\u4e2a\u901a\u7528\u6846\u67b6\uff0c\u57fa\u4e8e\u8fd9\u4e24\u5c42\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5b9e\u73b0\u4efb\u4f55\u6d41\u7a0b\u5f15\u64ce\u3002\u6700\u4e0a\u5c42\u662f\u201c\u72b6\u6001\u673a\u5f15\u64ce\u201d\u5c42\uff0c\u5b83\u5b9e\u73b0\u4e86\u6bcf\u79cd\u72b6\u6001\u8282\u70b9\u7684\u201c\u884c\u4e3a\u201d\u53ca\u201c\u8def\u7531\u201d\u903b\u8f91\u4ee3\u7801\uff0c\u63d0\u4f9b API \u548c\u72b6\u6001\u56fe\u4ed3\u5e93\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u4e9b\u5176\u5b83\u7ec4\u4ef6\uff0c\u6bd4\u5982\u8868\u8fbe\u5f0f\u8bed\u8a00\u3001\u903b\u8f91\u8ba1\u7b97\u5668\u3001\u6d41\u6c34\u751f\u6210\u5668\u3001\u62e6\u622a\u5668\u3001\u914d\u7f6e\u7ba1\u7406\u3001\u4e8b\u52a1\u65e5\u5fd7\u8bb0\u5f55\u7b49\u3002\\n\\n**5 Saga \u670d\u52a1\u8bbe\u8ba1\u7ecf\u9a8c**\\n\\n\u548cTCC\u7c7b\u4f3c\uff0cSaga\u7684\u6b63\u5411\u670d\u52a1\u4e0e\u53cd\u5411\u670d\u52a1\u4e5f\u9700\u6c42\u9075\u5faa\u4ee5\u4e0b\u8bbe\u8ba1\u539f\u5219\uff1a\\n\\n**1\uff09Saga \u670d\u52a1\u8bbe\u8ba1 - \u5141\u8bb8\u7a7a\u8865\u507f**<br />**<br />![16_52_22__08_13_2019.jpg](/img/saga/sofameetup3_img/25.jpeg)\\n\\n**2\uff09Saga \u670d\u52a1\u8bbe\u8ba1 - \u9632\u60ac\u6302\u63a7\u5236**<br />**<br />![16_52_52__08_13_2019.jpg](/img/saga/sofameetup3_img/26.jpeg)\\n\\n**3\uff09Saga \u670d\u52a1\u8bbe\u8ba1 - \u5e42\u7b49\u63a7\u5236**<br />**<br />![3 \u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u4e09\u79cd\u6a21\u5f0f\u8be6\u89e3-\u5c79\u8fdc-31.jpg](/img/saga/sofameetup3_img/27.jpeg)\\n\\n**4\uff09Saga \u8bbe\u8ba1 - \u81ea\u5b9a\u4e49\u4e8b\u52a1\u6062\u590d\u7b56\u7565**<br />**<br />![16_53_07__08_13_2019.jpg](/img/saga/sofameetup3_img/28.jpeg)\\n\\n\u524d\u9762\u8bb2\u5230 Saga \u6a21\u5f0f\u4e0d\u4fdd\u8bc1\u4e8b\u52a1\u7684\u9694\u79bb\u6027\uff0c\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\u53ef\u80fd\u51fa\u73b0\u810f\u5199\u3002\u6bd4\u5982\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u672a\u63d0\u4ea4\u7684\u60c5\u51b5\u4e0b\uff0c\u524d\u4e00\u4e2a\u670d\u52a1\u7684\u6570\u636e\u88ab\u4fee\u6539\u4e86\uff0c\u800c\u540e\u9762\u7684\u670d\u52a1\u53d1\u751f\u4e86\u5f02\u5e38\u9700\u8981\u8fdb\u884c\u56de\u6eda\uff0c\u53ef\u80fd\u7531\u4e8e\u524d\u9762\u670d\u52a1\u7684\u6570\u636e\u88ab\u4fee\u6539\u540e\u65e0\u6cd5\u8fdb\u884c\u8865\u507f\u64cd\u4f5c\u3002\u8fd9\u65f6\u7684\u4e00\u79cd\u5904\u7406\u529e\u6cd5\u53ef\u4ee5\u662f\u201c\u91cd\u8bd5\u201d\u7ee7\u7eed\u5f80\u524d\u5b8c\u6210\u8fd9\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002\u7531\u4e8e\u6574\u4e2a\u4e1a\u52a1\u6d41\u7a0b\u662f\u7531\u72b6\u6001\u673a\u7f16\u6392\u7684\uff0c\u5373\u4f7f\u662f\u4e8b\u540e\u6062\u590d\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u5f80\u524d\u91cd\u8bd5\u3002\u6240\u4ee5\u7528\u6237\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u7279\u70b9\u914d\u7f6e\u8be5\u6d41\u7a0b\u7684\u4e8b\u52a1\u5904\u7406\u7b56\u7565\u662f\u4f18\u5148\u201c\u56de\u6eda\u201d\u8fd8\u662f\u201c\u91cd\u8bd5\u201d\uff0c\u5f53\u4e8b\u52a1\u8d85\u65f6\u7684\u65f6\u5019\uff0cServer \u7aef\u4f1a\u6839\u636e\u8fd9\u4e2a\u7b56\u7565\u4e0d\u65ad\u8fdb\u884c\u91cd\u8bd5\u3002\\n\\n\u7531\u4e8e Saga \u4e0d\u4fdd\u8bc1\u9694\u79bb\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u4e1a\u52a1\u8bbe\u8ba1\u7684\u65f6\u5019\u9700\u8981\u505a\u5230\u201c\u5b81\u53ef\u957f\u6b3e\uff0c\u4e0d\u53ef\u77ed\u6b3e\u201d\u7684\u539f\u5219\uff0c\u957f\u6b3e\u662f\u6307\u5728\u51fa\u73b0\u5dee\u9519\u7684\u65f6\u5019\u7ad9\u5728\u6211\u65b9\u7684\u89d2\u5ea6\u94b1\u591a\u4e86\u7684\u60c5\u51b5\uff0c\u94b1\u5c11\u4e86\u5219\u662f\u77ed\u6b3e\uff0c\u56e0\u4e3a\u5982\u679c\u957f\u6b3e\u53ef\u4ee5\u7ed9\u5ba2\u6237\u9000\u6b3e\uff0c\u800c\u77ed\u6b3e\u5219\u53ef\u80fd\u94b1\u8ffd\u4e0d\u56de\u6765\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u4e1a\u52a1\u8bbe\u8ba1\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u662f\u5148\u6263\u5ba2\u6237\u5e10\u518d\u5165\u5e10\uff0c\u5982\u679c\u56e0\u4e3a\u9694\u79bb\u6027\u95ee\u9898\u9020\u6210\u8986\u76d6\u66f4\u65b0\uff0c\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u94b1\u5c11\u4e86\u7684\u60c5\u51b5\u3002\\n\\n**6 \u57fa\u4e8e\u6ce8\u89e3\u548c\u62e6\u622a\u5668\u7684 Saga \u5b9e\u73b0**<br />**<br />![17_13_37__08_13_2019.jpg](/img/saga/sofameetup3_img/29.jpeg)\\n\\n\u8fd8\u6709\u4e00\u79cd Saga \u7684\u5b9e\u73b0\u662f\u57fa\u4e8e\u6ce8\u89e3+\u62e6\u622a\u5668\u7684\u5b9e\u73b0\uff0cSeata \u76ee\u524d\u6ca1\u6709\u5b9e\u73b0\uff0c\u53ef\u4ee5\u770b\u4e0a\u9762\u7684\u4f2a\u4ee3\u7801\u6765\u7406\u89e3\u4e00\u4e0b\uff0cone \u65b9\u6cd5\u4e0a\u5b9a\u4e49\u4e86 @SagaCompensable \u7684\u6ce8\u89e3\uff0c\u7528\u4e8e\u5b9a\u4e49 one \u65b9\u6cd5\u7684\u8865\u507f\u65b9\u6cd5\u662f compensateOne \u65b9\u6cd5\u3002\u7136\u540e\u5728\u4e1a\u52a1\u6d41\u7a0b\u4ee3\u7801 processA \u65b9\u6cd5\u4e0a\u5b9a\u4e49 @SagaTransactional \u6ce8\u89e3\uff0c\u542f\u52a8 Saga \u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u901a\u8fc7\u62e6\u622a\u5668\u62e6\u622a\u6bcf\u4e2a\u6b63\u5411\u65b9\u6cd5\u5f53\u51fa\u73b0\u5f02\u5e38\u7684\u65f6\u5019\u89e6\u53d1\u56de\u6eda\u64cd\u4f5c\uff0c\u8c03\u7528\u6b63\u5411\u65b9\u6cd5\u7684\u8865\u507f\u65b9\u6cd5\u3002\\n\\n**7 \u4e24\u79cd Saga \u5b9e\u73b0\u4f18\u52a3\u5bf9\u6bd4**\\n\\n\u4e24\u79cd Saga \u7684\u5b9e\u73b0\u5404\u6709\u53c8\u7f3a\u70b9\uff0c\u4e0b\u9762\u8868\u683c\u662f\u4e00\u4e2a\u5bf9\u6bd4\uff1a\\n\\n![17_13_49__08_13_2019.jpg](/img/saga/sofameetup3_img/30.jpeg)\\n\\n\u72b6\u6001\u673a\u5f15\u64ce\u7684\u6700\u5927\u4f18\u52bf\u662f\u53ef\u4ee5\u901a\u8fc7\u4e8b\u4ef6\u9a71\u52a8\u7684\u65b9\u6cd5\u5f02\u6b65\u6267\u884c\u63d0\u9ad8\u7cfb\u7edf\u541e\u5410\uff0c\u53ef\u4ee5\u5b9e\u73b0\u670d\u52a1\u7f16\u6392\u9700\u6c42\uff0c\u5728 Saga \u6a21\u5f0f\u7f3a\u4e4f\u9694\u79bb\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u591a\u4e00\u79cd\u201c\u5411\u524d\u91cd\u8bd5\u201d\u7684\u4e8b\u60c5\u6062\u590d\u7b56\u7565\u3002\u6ce8\u89e3\u52a0\u62e6\u622a\u5668\u7684\u7684\u6700\u5927\u4f18\u52bf\u662f\uff0c\u5f00\u53d1\u7b80\u5355\u3001\u5b66\u4e60\u6210\u672c\u4f4e\u3002\\n\\n<a name=\\"Gpkrf\\"></a>\\n## \u603b\u7ed3\\n\\n\u672c\u6587\u5148\u56de\u987e\u4e86\u5206\u5e03\u5f0f\u4e8b\u52a1\u4ea7\u751f\u7684\u80cc\u666f\u53ca\u7406\u8bba\u57fa\u7840\uff0c\u7136\u540e\u91cd\u70b9\u8bb2\u89e3\u4e86 Seata \u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u539f\u7406\u4ee5\u53ca\u4e09\u79cd\u6a21\u5f0f\uff08AT\u3001TCC\u3001Saga\uff09\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5b9e\u73b0\u3002\\n\\nSeata \u7684\u5b9a\u4f4d\u662f\u5206\u5e03\u5f0f\u4e8b\u5168\u573a\u666f\u89e3\u51b3\u65b9\u6848\uff0c\u672a\u6765\u8fd8\u4f1a\u6709 XA \u6a21\u5f0f\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5b9e\u73b0\uff0c\u6bcf\u79cd\u6a21\u5f0f\u90fd\u6709\u5b83\u7684\u9002\u7528\u573a\u666f\uff0cAT \u6a21\u5f0f\u662f\u65e0\u4fb5\u5165\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u9002\u7528\u4e8e\u4e0d\u5e0c\u671b\u5bf9\u4e1a\u52a1\u8fdb\u884c\u6539\u9020\u7684\u573a\u666f\uff0c\u51e0\u4e4e0\u5b66\u4e60\u6210\u672c\u3002TCC \u6a21\u5f0f\u662f\u9ad8\u6027\u80fd\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u9002\u7528\u4e8e\u6838\u5fc3\u7cfb\u7edf\u7b49\u5bf9\u6027\u80fd\u6709\u5f88\u9ad8\u8981\u6c42\u7684\u573a\u666f\u3002Saga \u6a21\u5f0f\u662f\u957f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u9002\u7528\u4e8e\u4e1a\u52a1\u6d41\u7a0b\u957f\u4e14\u9700\u8981\u4fdd\u8bc1\u4e8b\u52a1\u6700\u7ec8\u4e00\u81f4\u6027\u7684\u4e1a\u52a1\u7cfb\u7edf\uff0cSaga \u6a21\u5f0f\u4e00\u9636\u6bb5\u5c31\u4f1a\u63d0\u4ea4\u672c\u5730\u4e8b\u52a1\uff0c\u65e0\u9501\uff0c\u957f\u6d41\u7a0b\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4fdd\u8bc1\u6027\u80fd\uff0c\u591a\u7528\u4e8e\u6e20\u9053\u5c42\u3001\u96c6\u6210\u5c42\u4e1a\u52a1\u7cfb\u7edf\u3002\u4e8b\u52a1\u53c2\u4e0e\u8005\u53ef\u80fd\u662f\u5176\u5b83\u516c\u53f8\u7684\u670d\u52a1\u6216\u8005\u662f\u9057\u7559\u7cfb\u7edf\u7684\u670d\u52a1\uff0c\u65e0\u6cd5\u8fdb\u884c\u6539\u9020\u548c\u63d0\u4f9b TCC \u8981\u6c42\u7684\u63a5\u53e3\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 Saga \u6a21\u5f0f\u3002\\n\\n\u672c\u6b21\u5206\u4eab\u7684\u89c6\u9891\u56de\u987e\u4ee5\u53caPPT \u67e5\u770b\u5730\u5740\uff1a[https://tech.antfin.com/community/activities/779/review](https://tech.antfin.com/community/activities/779/review)"},{"id":"/seata-at-mode-design","metadata":{"permalink":"/zh-cn/blog/seata-at-mode-design","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-at-mode-design.md","title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u95f4\u4ef6 Seata \u7684\u8bbe\u8ba1\u539f\u7406","description":"AT \u6a21\u5f0f\u8bbe\u8ba1\u539f\u7406","date":"2019-07-11T00:00:00.000Z","formattedDate":"2019\u5e747\u670811\u65e5","tags":[],"readingTime":14.945,"hasTruncateMarker":false,"authors":[{"name":"\u5f20\u4e58\u8f89"}],"frontMatter":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u95f4\u4ef6 Seata \u7684\u8bbe\u8ba1\u539f\u7406","author":"\u5f20\u4e58\u8f89","keywords":["Seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001AT\u6a21\u5f0f"],"description":"AT \u6a21\u5f0f\u8bbe\u8ba1\u539f\u7406","date":"2019/07/11"},"prevItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1 Seata \u53ca\u5176\u4e09\u79cd\u6a21\u5f0f\u8be6\u89e3","permalink":"/zh-cn/blog/seata-at-tcc-saga"},"nextItem":{"title":"Seata\u5206\u5e03\u5f0fGo Server\u6b63\u5f0f\u5f00\u6e90-TaaS\u8bbe\u8ba1\u7b80\u4ecb","permalink":"/zh-cn/blog/seata-analysis-go-server"}},"content":"\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4f53\u7cfb\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u4e1a\u52a1\u6a21\u5757\u5206\u5c42\u8bbe\u8ba1\uff0c\u5355\u72ec\u90e8\u7f72\uff0c\u51cf\u8f7b\u4e86\u670d\u52a1\u90e8\u7f72\u538b\u529b\uff0c\u4e5f\u89e3\u8026\u4e86\u4e1a\u52a1\u7684\u8026\u5408\uff0c\u907f\u514d\u4e86\u5e94\u7528\u9010\u6e10\u53d8\u6210\u4e00\u4e2a\u5e9e\u7136\u602a\u7269\uff0c\u4ece\u800c\u53ef\u4ee5\u8f7b\u677e\u6269\u5c55\uff0c\u5728\u67d0\u4e9b\u670d\u52a1\u51fa\u73b0\u6545\u969c\u65f6\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u5176\u5b83\u670d\u52a1\u7684\u6b63\u5e38\u8fd0\u884c\u3002\u603b\u4e4b\uff0c\u5fae\u670d\u52a1\u5728\u4e1a\u52a1\u7684\u9ad8\u901f\u53d1\u5c55\u4e2d\u5e26\u7ed9\u6211\u4eec\u8d8a\u6765\u8d8a\u591a\u7684\u4f18\u52bf\uff0c\u4f46\u662f\u5fae\u670d\u52a1\u5e76\u4e0d\u662f\u5341\u5168\u5341\u7f8e\uff0c\u56e0\u6b64\u4e0d\u80fd\u76f2\u76ee\u8fc7\u5ea6\u6ee5\u7528\uff0c\u5b83\u6709\u5f88\u591a\u4e0d\u8db3\uff0c\u800c\u4e14\u4f1a\u7ed9\u7cfb\u7edf\u5e26\u6765\u4e00\u5b9a\u7684\u590d\u6742\u5ea6\uff0c\u5176\u4e2d\u4f34\u968f\u800c\u6765\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\uff0c\u662f\u5fae\u670d\u52a1\u67b6\u6784\u4f53\u7cfb\u4e0b\u5fc5\u7136\u9700\u8981\u5904\u7406\u7684\u4e00\u4e2a\u75db\u70b9\uff0c\u4e5f\u662f\u4e1a\u754c\u4e00\u76f4\u5173\u6ce8\u7684\u4e00\u4e2a\u9886\u57df\uff0c\u56e0\u6b64\u4e5f\u51fa\u73b0\u4e86\u8bf8\u5982 CAP \u548c BASE \u7b49\u7406\u8bba\u3002\\n\\n\u5728\u4eca\u5e74\u5e74\u521d\uff0c\u963f\u91cc\u5f00\u6e90\u4e86\u4e00\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u95f4\u4ef6\uff0c\u8d77\u521d\u8d77\u540d\u4e3a Fescar\uff0c\u540e\u6539\u540d\u4e3a Seata\uff0c\u5728\u5b83\u5f00\u6e90\u4e4b\u521d\uff0c\u6211\u5c31\u77e5\u9053\u5b83\u80af\u5b9a\u8981\u706b\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u89e3\u51b3\u75db\u70b9\u7684\u5f00\u6e90\u9879\u76ee\uff0cSeata \u4e00\u5f00\u59cb\u5c31\u662f\u51b2\u7740\u5bf9\u4e1a\u52a1\u65e0\u4fb5\u5165\u4e0e\u9ad8\u6027\u80fd\u65b9\u5411\u8d70\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u5bf9\u89e3\u51b3\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u8feb\u5207\u7684\u9700\u6c42\u3002\u56e0\u4e3a\u5f85\u8fc7\u7684\u51e0\u5bb6\u516c\u53f8\uff0c\u7528\u7684\u90fd\u662f\u5fae\u670d\u52a1\u67b6\u6784\uff0c\u4f46\u662f\u5728\u89e3\u51b3\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u95ee\u9898\u4e0a\u90fd\u4e0d\u592a\u4f18\u96c5\uff0c\u6240\u4ee5\u6211\u4e5f\u5728\u4e00\u76f4\u5173\u6ce8 Seata \u7684\u53d1\u5c55\uff0c\u4eca\u5929\u5c31\u7b80\u8981\u8bf4\u8bf4\u5b83\u7684\u4e00\u4e9b\u8bbe\u8ba1\u4e0a\u7684\u539f\u7406\uff0c\u540e\u7eed\u6211\u5c06\u4f1a\u5bf9\u5b83\u7684\u5404\u4e2a\u6a21\u5757\u8fdb\u884c\u6df1\u5165\u6e90\u7801\u5206\u6790\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u6301\u7eed\u5173\u6ce8\u6211\u7684\u516c\u4f17\u53f7\u6216\u8005\u535a\u5ba2\uff0c\u4e0d\u8981\u8ddf\u4e22\u3002\\n\\n\\n\\n\\n# \u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u7684\u65b9\u6848\u6709\u54ea\u4e9b\uff1f\\n\\n\u76ee\u524d\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u7684\u65b9\u6848\u4e3b\u8981\u6709\u5bf9\u4e1a\u52a1\u65e0\u5165\u4fb5\u548c\u6709\u5165\u4fb5\u7684\u65b9\u6848\uff0c\u65e0\u5165\u4fb5\u65b9\u6848\u4e3b\u8981\u6709\u57fa\u4e8e\u6570\u636e\u5e93 XA \u534f\u8bae\u7684\u4e24\u6bb5\u5f0f\u63d0\u4ea4\uff082PC\uff09\u65b9\u6848\uff0c\u5b83\u7684\u4f18\u70b9\u662f\u5bf9\u4e1a\u52a1\u4ee3\u7801\u65e0\u5165\u4fb5\uff0c\u4f46\u662f\u5b83\u7684\u7f3a\u70b9\u4e5f\u662f\u5f88\u660e\u663e\uff1a\u5fc5\u987b\u8981\u6c42\u6570\u636e\u5e93\u5bf9 XA \u534f\u8bae\u7684\u652f\u6301\uff0c\u4e14\u7531\u4e8e XA \u534f\u8bae\u81ea\u8eab\u7684\u7279\u70b9\uff0c\u5b83\u4f1a\u9020\u6210\u4e8b\u52a1\u8d44\u6e90\u957f\u65f6\u95f4\u5f97\u4e0d\u5230\u91ca\u653e\uff0c\u9501\u5b9a\u5468\u671f\u957f\uff0c\u800c\u4e14\u5728\u5e94\u7528\u5c42\u4e0a\u9762\u65e0\u6cd5\u5e72\u9884\uff0c\u56e0\u6b64\u5b83\u6027\u80fd\u5f88\u5dee\uff0c\u5b83\u7684\u5b58\u5728\u76f8\u5f53\u4e8e\u4e03\u4f24\u62f3\u90a3\u6837\u201c\u4f24\u4eba\u4e03\u5206\uff0c\u635f\u5df1\u4e09\u5206\u201d\uff0c\u56e0\u6b64\u5728\u4e92\u8054\u7f51\u9879\u76ee\u4e2d\u5e76\u4e0d\u662f\u5f88\u6d41\u884c\u8fd9\u79cd\u89e3\u51b3\u65b9\u6848\u3002\\n\\n\u4e3a\u4e86\u8fd9\u4e2a\u5f25\u8865\u8fd9\u79cd\u65b9\u6848\u5e26\u6765\u6027\u80fd\u4f4e\u7684\u95ee\u9898\uff0c\u5927\u4f6c\u4eec\u53c8\u60f3\u51fa\u4e86\u5f88\u591a\u79cd\u65b9\u6848\u6765\u89e3\u51b3\uff0c\u4f46\u8fd9\u65e0\u4e00\u4f8b\u5916\u90fd\u9700\u8981\u901a\u8fc7\u5728\u5e94\u7528\u5c42\u505a\u624b\u811a\uff0c\u5373\u5165\u4fb5\u4e1a\u52a1\u7684\u65b9\u5f0f\uff0c\u6bd4\u5982\u5f88\u51fa\u540d\u7684 TCC \u65b9\u6848\uff0c\u57fa\u4e8e TCC \u4e5f\u6709\u5f88\u591a\u6210\u719f\u7684\u6846\u67b6\uff0c\u5982 ByteTCC\u3001tcc-transaction \u7b49\u3002\u4ee5\u53ca\u57fa\u4e8e\u53ef\u9760\u6d88\u606f\u7684\u6700\u7ec8\u4e00\u81f4\u6027\u6765\u5b9e\u73b0\uff0c\u5982 RocketMQ \u7684\u4e8b\u52a1\u6d88\u606f\u3002\\n\\n\u5165\u4fb5\u4ee3\u7801\u7684\u65b9\u6848\u662f\u57fa\u4e8e\u73b0\u6709\u60c5\u5f62\u201c\u8feb\u4e0d\u5f97\u5df2\u201d\u624d\u63a8\u51fa\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5b9e\u9645\u4e0a\u5b83\u4eec\u5b9e\u73b0\u8d77\u6765\u975e\u5e38\u4e0d\u4f18\u96c5\uff0c\u4e00\u4e2a\u4e8b\u52a1\u7684\u8c03\u7528\u901a\u5e38\u4f34\u968f\u800c\u6765\u7684\u662f\u5bf9\u8be5\u4e8b\u52a1\u63a5\u53e3\u589e\u52a0\u4e00\u7cfb\u5217\u7684\u53cd\u5411\u64cd\u4f5c\uff0c\u6bd4\u5982 TCC \u4e09\u6bb5\u5f0f\u63d0\u4ea4\uff0c\u63d0\u4ea4\u903b\u8f91\u5fc5\u7136\u4f34\u968f\u7740\u56de\u6eda\u7684\u903b\u8f91\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u4f1a\u4f7f\u5f97\u9879\u76ee\u975e\u5e38\u81c3\u80bf\uff0c\u7ef4\u62a4\u6210\u672c\u9ad8\u3002\\n\\n\\n\\n# Seata \u5404\u6a21\u5757\u4e4b\u95f4\u7684\u5173\u7cfb\\n\\n\u9488\u5bf9\u4e0a\u9762\u6240\u8bf4\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u7684\u75db\u70b9\uff0c\u90a3\u5f88\u663e\u7136\uff0c\u6211\u4eec\u7406\u60f3\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u80af\u5b9a\u662f\u6027\u80fd\u8981\u597d\u800c\u4e14\u8981\u5bf9\u4e1a\u52a1\u65e0\u5165\u4fb5\uff0c\u4e1a\u52a1\u5c42\u4e0a\u65e0\u9700\u5173\u5fc3\u5206\u5e03\u5f0f\u4e8b\u52a1\u673a\u5236\u7684\u7ea6\u675f\uff0cSeata \u6b63\u662f\u5f80\u8fd9\u4e2a\u65b9\u5411\u53d1\u5c55\u7684\uff0c\u56e0\u6b64\u5b83\u975e\u5e38\u503c\u5f97\u671f\u5f85\uff0c\u5b83\u5c06\u7ed9\u6211\u4eec\u7684\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u8d28\u7684\u63d0\u5347\u3002\\n\\n\u90a3 Seata \u662f\u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\u4e0b\u9762\u8bf4\u8bf4\u5b83\u7684\u5404\u4e2a\u6a21\u5757\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\\n\\nSeata \u7684\u8bbe\u8ba1\u601d\u8def\u662f\u5c06\u4e00\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u53ef\u4ee5\u7406\u89e3\u6210\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\uff0c\u4e0b\u9762\u6302\u4e86\u82e5\u5e72\u4e2a\u5206\u652f\u4e8b\u52a1\uff0c\u800c\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\u662f\u4e00\u4e2a\u6ee1\u8db3 ACID \u7684\u672c\u5730\u4e8b\u52a1\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u64cd\u4f5c\u5206\u5e03\u5f0f\u4e8b\u52a1\u50cf\u64cd\u4f5c\u672c\u5730\u4e8b\u52a1\u4e00\u6837\u3002\\n\\nSeata \u5185\u90e8\u5b9a\u4e49\u4e86 3\u4e2a\u6a21\u5757\u6765\u5904\u7406\u5168\u5c40\u4e8b\u52a1\u548c\u5206\u652f\u4e8b\u52a1\u7684\u5173\u7cfb\u548c\u5904\u7406\u8fc7\u7a0b\uff0c\u8fd9\u4e09\u4e2a\u7ec4\u4ef6\u5206\u522b\u662f\uff1a\\n\\n- Transaction Coordinator (TC)\uff1a \u4e8b\u52a1\u534f\u8c03\u5668\uff0c\u7ef4\u62a4\u5168\u5c40\u4e8b\u52a1\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u8d1f\u8d23\u534f\u8c03\u5e76\u9a71\u52a8\u5168\u5c40\u4e8b\u52a1\u7684\u63d0\u4ea4\u6216\u56de\u6eda\u3002\\n- Transaction Manager (TM)\uff1a \u63a7\u5236\u5168\u5c40\u4e8b\u52a1\u7684\u8fb9\u754c\uff0c\u8d1f\u8d23\u5f00\u542f\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\uff0c\u5e76\u6700\u7ec8\u53d1\u8d77\u5168\u5c40\u63d0\u4ea4\u6216\u5168\u5c40\u56de\u6eda\u7684\u51b3\u8bae\u3002\\n- Resource Manager (RM)\uff1a \u63a7\u5236\u5206\u652f\u4e8b\u52a1\uff0c\u8d1f\u8d23\u5206\u652f\u6ce8\u518c\u3001\u72b6\u6001\u6c47\u62a5\uff0c\u5e76\u63a5\u6536\u4e8b\u52a1\u534f\u8c03\u5668\u7684\u6307\u4ee4\uff0c\u9a71\u52a8\u5206\u652f\uff08\u672c\u5730\uff09\u4e8b\u52a1\u7684\u63d0\u4ea4\u548c\u56de\u6eda\u3002\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/seata.png)\\n\\n\u7b80\u8981\u8bf4\u8bf4\u6574\u4e2a\u5168\u5c40\u4e8b\u52a1\u7684\u6267\u884c\u6b65\u9aa4\uff1a\\n\\n1. TM \u5411 TC \u7533\u8bf7\u5f00\u542f\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\uff0cTC \u521b\u5efa\u5168\u5c40\u4e8b\u52a1\u540e\u8fd4\u56de\u5168\u5c40\u552f\u4e00\u7684 XID\uff0cXID \u4f1a\u5728\u5168\u5c40\u4e8b\u52a1\u7684\u4e0a\u4e0b\u6587\u4e2d\u4f20\u64ad\uff1b\\n2. RM \u5411 TC \u6ce8\u518c\u5206\u652f\u4e8b\u52a1\uff0c\u8be5\u5206\u652f\u4e8b\u52a1\u5f52\u5c5e\u4e8e\u62e5\u6709\u76f8\u540c XID \u7684\u5168\u5c40\u4e8b\u52a1\uff1b\\n3. TM \u5411 TC \u53d1\u8d77\u5168\u5c40\u63d0\u4ea4\u6216\u56de\u6eda\uff1b\\n4. TC \u8c03\u5ea6 XID \u4e0b\u7684\u5206\u652f\u4e8b\u52a1\u5b8c\u6210\u63d0\u4ea4\u6216\u8005\u56de\u6eda\u3002\\n\\n\\n\\n# \u4e0e XA \u65b9\u6848\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f\\n\\nSeata \u7684\u4e8b\u52a1\u63d0\u4ea4\u65b9\u5f0f\u8ddf XA \u534f\u8bae\u7684\u4e24\u6bb5\u5f0f\u63d0\u4ea4\u5728\u603b\u4f53\u4e0a\u6765\u8bf4\u57fa\u672c\u662f\u4e00\u81f4\u7684\uff0c\u90a3\u5b83\u4eec\u4e4b\u95f4\u6709\u4ec0\u4e48\u4e0d\u540c\u5462\uff1f\\n\\n\u6211\u4eec\u90fd\u77e5\u9053 XA \u534f\u8bae\u5b83\u4f9d\u8d56\u7684\u662f\u6570\u636e\u5e93\u5c42\u9762\u6765\u4fdd\u969c\u4e8b\u52a1\u7684\u4e00\u81f4\u6027\uff0c\u4e5f\u5373\u662f\u8bf4 XA \u7684\u5404\u4e2a\u5206\u652f\u4e8b\u52a1\u662f\u5728\u6570\u636e\u5e93\u5c42\u9762\u4e0a\u9a71\u52a8\u7684\uff0c\u7531\u4e8e XA \u7684\u5404\u4e2a\u5206\u652f\u4e8b\u52a1\u9700\u8981\u6709 XA \u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4e00\u65b9\u9762\u4f1a\u5bfc\u81f4\u6570\u636e\u5e93\u4e0e XA \u9a71\u52a8\u8026\u5408\uff0c\u53e6\u4e00\u65b9\u9762\u5b83\u4f1a\u5bfc\u81f4\u5404\u4e2a\u5206\u652f\u7684\u4e8b\u52a1\u8d44\u6e90\u9501\u5b9a\u5468\u671f\u957f\uff0c\u8fd9\u4e5f\u662f\u5b83\u6ca1\u6709\u5728\u4e92\u8054\u7f51\u516c\u53f8\u6d41\u884c\u7684\u91cd\u8981\u56e0\u7d20\u3002\\n\\n\u57fa\u4e8e XA \u534f\u8bae\u4ee5\u4e0a\u7684\u95ee\u9898\uff0cSeata \u53e6\u8f9f\u8e4a\u5f84\uff0c\u65e2\u7136\u5728\u4f9d\u8d56\u6570\u636e\u5e93\u5c42\u4f1a\u5bfc\u81f4\u8fd9\u4e48\u591a\u95ee\u9898\uff0c\u90a3\u6211\u5c31\u4ece\u5e94\u7528\u5c42\u505a\u624b\u811a\uff0c\u8fd9\u8fd8\u5f97\u4ece Seata \u7684 RM \u6a21\u5757\u8bf4\u8d77\uff0c\u524d\u9762\u4e5f\u8bf4\u8fc7 RM \u7684\u4e3b\u8981\u4f5c\u7528\u4e86\uff0c\u5176\u5b9e RM \u5728\u5185\u90e8\u505a\u4e86\u5bf9\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u4ee3\u7406\u5c42\uff0c\u5982\u4e0b\uff1a\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/seata5.png)\\n\\nSeata \u5728\u6570\u636e\u6e90\u505a\u4e86\u4e00\u5c42\u4ee3\u7406\u5c42\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528 Seata \u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u6570\u636e\u6e90\u5b9e\u9645\u4e0a\u7528\u7684\u662f Seata \u81ea\u5e26\u7684\u6570\u636e\u6e90\u4ee3\u7406 DataSourceProxy\uff0cSeata \u5728\u8fd9\u5c42\u4ee3\u7406\u4e2d\u52a0\u5165\u4e86\u5f88\u591a\u903b\u8f91\uff0c\u4e3b\u8981\u662f\u89e3\u6790 SQL\uff0c\u628a\u4e1a\u52a1\u6570\u636e\u5728\u66f4\u65b0\u524d\u540e\u7684\u6570\u636e\u955c\u50cf\u7ec4\u7ec7\u6210\u56de\u6eda\u65e5\u5fd7\uff0c\u5e76\u5c06 undo log \u65e5\u5fd7\u63d2\u5165 undo_log \u8868\u4e2d\uff0c\u4fdd\u8bc1\u6bcf\u6761\u66f4\u65b0\u6570\u636e\u7684\u4e1a\u52a1 sql \u90fd\u6709\u5bf9\u5e94\u7684\u56de\u6eda\u65e5\u5fd7\u5b58\u5728\u3002\\n\\n\u8fd9\u6837\u505a\u7684\u597d\u5904\u5c31\u662f\uff0c\u672c\u5730\u4e8b\u52a1\u6267\u884c\u5b8c\u53ef\u4ee5\u7acb\u5373\u91ca\u653e\u672c\u5730\u4e8b\u52a1\u9501\u5b9a\u7684\u8d44\u6e90\uff0c\u7136\u540e\u5411 TC \u4e0a\u62a5\u5206\u652f\u72b6\u6001\u3002\u5f53 TM \u51b3\u8bae\u5168\u5c40\u63d0\u4ea4\u65f6\uff0c\u5c31\u4e0d\u9700\u8981\u540c\u6b65\u534f\u8c03\u5904\u7406\u4e86\uff0cTC \u4f1a\u5f02\u6b65\u8c03\u5ea6\u5404\u4e2a RM \u5206\u652f\u4e8b\u52a1\u5220\u9664\u5bf9\u5e94\u7684 undo log \u65e5\u5fd7\u5373\u53ef\uff0c\u8fd9\u4e2a\u6b65\u9aa4\u975e\u5e38\u5feb\u901f\u5730\u53ef\u4ee5\u5b8c\u6210\uff1b\u5f53 TM \u51b3\u8bae\u5168\u5c40\u56de\u6eda\u65f6\uff0cRM \u6536\u5230 TC \u53d1\u9001\u7684\u56de\u6eda\u8bf7\u6c42\uff0cRM \u901a\u8fc7 XID \u627e\u5230\u5bf9\u5e94\u7684 undo log \u56de\u6eda\u65e5\u5fd7\uff0c\u7136\u540e\u6267\u884c\u56de\u6eda\u65e5\u5fd7\u5b8c\u6210\u56de\u6eda\u64cd\u4f5c\u3002\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/seata6.png)\\n\\n\u5982\u4e0a\u56fe\u6240\u793a\uff0cXA \u65b9\u6848\u7684 RM \u662f\u653e\u5728\u6570\u636e\u5e93\u5c42\u7684\uff0c\u5b83\u4f9d\u8d56\u4e86\u6570\u636e\u5e93\u7684 XA \u9a71\u52a8\u7a0b\u5e8f\u3002\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/Seata7.png)\\n\\n\u5982\u4e0a\u56fe\u6240\u793a\uff0cSeata \u7684 RM \u5b9e\u9645\u4e0a\u662f\u5df2\u4e2d\u95f4\u4ef6\u7684\u5f62\u5f0f\u653e\u5728\u5e94\u7528\u5c42\uff0c\u4e0d\u7528\u4f9d\u8d56\u6570\u636e\u5e93\u5bf9\u534f\u8bae\u7684\u652f\u6301\uff0c\u5b8c\u5168\u5265\u79bb\u4e86\u5206\u5e03\u5f0f\u4e8b\u52a1\u65b9\u6848\u5bf9\u6570\u636e\u5e93\u5728\u534f\u8bae\u652f\u6301\u4e0a\u7684\u8981\u6c42\u3002\\n\\n\\n\\n# \u5206\u652f\u4e8b\u52a1\u5982\u4f55\u63d0\u4ea4\u548c\u56de\u6eda\uff1f\\n\\n\u4e0b\u9762\u8be6\u7ec6\u8bf4\u8bf4\u5206\u652f\u4e8b\u52a1\u662f\u5982\u4f55\u63d0\u4ea4\u548c\u56de\u6eda\u7684\uff1a\\n\\n- \u7b2c\u4e00\u9636\u6bb5\uff1a\\n\\n\\n\u5206\u652f\u4e8b\u52a1\u5229\u7528 RM \u6a21\u5757\u4e2d\u5bf9 JDBC \u6570\u636e\u6e90\u4ee3\u7406\uff0c\u52a0\u5165\u4e86\u82e5\u5e72\u6d41\u7a0b\uff0c\u5bf9\u4e1a\u52a1 SQL \u8fdb\u884c\u89e3\u91ca\uff0c\u628a\u4e1a\u52a1\u6570\u636e\u5728\u66f4\u65b0\u524d\u540e\u7684\u6570\u636e\u955c\u50cf\u7ec4\u7ec7\u6210\u56de\u6eda\u65e5\u5fd7\uff0c\u5e76\u751f\u6210 undo log \u65e5\u5fd7\uff0c\u5bf9\u5168\u5c40\u4e8b\u52a1\u9501\u7684\u68c0\u67e5\u4ee5\u53ca\u5206\u652f\u4e8b\u52a1\u7684\u6ce8\u518c\u7b49\uff0c\u5229\u7528\u672c\u5730\u4e8b\u52a1 ACID \u7279\u6027\uff0c\u5c06\u4e1a\u52a1 SQL \u548c undo log \u5199\u5165\u540c\u4e00\u4e2a\u4e8b\u7269\u4e2d\u4e00\u540c\u63d0\u4ea4\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u4fdd\u8bc1\u4e1a\u52a1 SQL \u5fc5\u5b9a\u5b58\u5728\u76f8\u5e94\u7684\u56de\u6eda\u65e5\u5fd7\uff0c\u6700\u540e\u5bf9\u5206\u652f\u4e8b\u52a1\u72b6\u6001\u5411 TC \u8fdb\u884c\u4e0a\u62a5\u3002\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/seata2.png)\\n\\n- \u7b2c\u4e8c\u9636\u6bb5\uff1a\\n\\n\\nTM\u51b3\u8bae\u5168\u5c40\u63d0\u4ea4\uff1a\\n\\n\u5f53 TM \u51b3\u8bae\u63d0\u4ea4\u65f6\uff0c\u5c31\u4e0d\u9700\u8981\u540c\u6b65\u534f\u8c03\u5904\u7406\u4e86\uff0cTC \u4f1a\u5f02\u6b65\u8c03\u5ea6\u5404\u4e2a RM \u5206\u652f\u4e8b\u52a1\u5220\u9664\u5bf9\u5e94\u7684 undo log \u65e5\u5fd7\u5373\u53ef\uff0c\u8fd9\u4e2a\u6b65\u9aa4\u975e\u5e38\u5feb\u901f\u5730\u53ef\u4ee5\u5b8c\u6210\u3002\u8fd9\u4e2a\u673a\u5236\u5bf9\u4e8e\u6027\u80fd\u63d0\u5347\u975e\u5e38\u5173\u952e\uff0c\u6211\u4eec\u77e5\u9053\u6b63\u5e38\u7684\u4e1a\u52a1\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u4e8b\u52a1\u6267\u884c\u7684\u6210\u529f\u7387\u662f\u975e\u5e38\u9ad8\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u5728\u672c\u5730\u4e8b\u52a1\u4e2d\u63d0\u4ea4\uff0c\u8fd9\u6b65\u5bf9\u4e8e\u63d0\u5347\u6027\u80fd\u975e\u5e38\u663e\u8457\u3002\\n\\n\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/seata3.png)\\n\\n\\n\\nTM\u51b3\u8bae\u5168\u5c40\u56de\u6eda\uff1a\\n\\n\u5f53 TM \u51b3\u8bae\u56de\u6eda\u65f6\uff0cRM \u6536\u5230 TC \u53d1\u9001\u7684\u56de\u6eda\u8bf7\u6c42\uff0cRM \u901a\u8fc7 XID \u627e\u5230\u5bf9\u5e94\u7684 undo log \u56de\u6eda\u65e5\u5fd7\uff0c\u7136\u540e\u5229\u7528\u672c\u5730\u4e8b\u52a1 ACID \u7279\u6027\uff0c\u6267\u884c\u56de\u6eda\u65e5\u5fd7\u5b8c\u6210\u56de\u6eda\u64cd\u4f5c\u5e76\u5220\u9664 undo log \u65e5\u5fd7\uff0c\u6700\u540e\u5411 TC \u8fdb\u884c\u56de\u6eda\u7ed3\u679c\u4e0a\u62a5\u3002\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/seata4.png)\\n\\n\u4e1a\u52a1\u5bf9\u4ee5\u4e0a\u6240\u6709\u7684\u6d41\u7a0b\u90fd\u65e0\u611f\u77e5\uff0c\u4e1a\u52a1\u5b8c\u5168\u4e0d\u5173\u5fc3\u5168\u5c40\u4e8b\u52a1\u7684\u5177\u4f53\u63d0\u4ea4\u548c\u56de\u6eda\uff0c\u800c\u4e14\u6700\u91cd\u8981\u7684\u4e00\u70b9\u662f Seata \u5c06\u4e24\u6bb5\u5f0f\u63d0\u4ea4\u7684\u540c\u6b65\u534f\u8c03\u5206\u89e3\u5230\u5404\u4e2a\u5206\u652f\u4e8b\u52a1\u4e2d\u4e86\uff0c\u5206\u652f\u4e8b\u52a1\u4e0e\u666e\u901a\u7684\u672c\u5730\u4e8b\u52a1\u65e0\u4efb\u4f55\u5dee\u5f02\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4f7f\u7528 Seata \u540e\uff0c\u5206\u5e03\u5f0f\u4e8b\u52a1\u5c31\u50cf\u4f7f\u7528\u672c\u5730\u4e8b\u52a1\u4e00\u6837\uff0c\u5b8c\u5168\u5c06\u6570\u636e\u5e93\u5c42\u7684\u4e8b\u52a1\u534f\u8c03\u673a\u5236\u4ea4\u7ed9\u4e86\u4e2d\u95f4\u4ef6\u5c42 Seata \u53bb\u505a\u4e86\uff0c\u8fd9\u6837\u867d\u7136\u4e8b\u52a1\u534f\u8c03\u642c\u5230\u5e94\u7528\u5c42\u4e86\uff0c\u4f46\u662f\u4f9d\u7136\u53ef\u4ee5\u505a\u5230\u5bf9\u4e1a\u52a1\u7684\u96f6\u4fb5\u5165\uff0c\u4ece\u800c\u5265\u79bb\u4e86\u5206\u5e03\u5f0f\u4e8b\u52a1\u65b9\u6848\u5bf9\u6570\u636e\u5e93\u5728\u534f\u8bae\u652f\u6301\u4e0a\u7684\u8981\u6c42\uff0c\u4e14 Seata \u5728\u5206\u652f\u4e8b\u52a1\u5b8c\u6210\u4e4b\u540e\u76f4\u63a5\u91ca\u653e\u8d44\u6e90\uff0c\u6781\u5927\u51cf\u5c11\u4e86\u5206\u652f\u4e8b\u52a1\u5bf9\u8d44\u6e90\u7684\u9501\u5b9a\u65f6\u95f4\uff0c\u5b8c\u7f8e\u907f\u514d\u4e86 XA \u534f\u8bae\u9700\u8981\u540c\u6b65\u534f\u8c03\u5bfc\u81f4\u8d44\u6e90\u9501\u5b9a\u65f6\u95f4\u8fc7\u957f\u7684\u95ee\u9898\u3002\\n\\n\\n\\n# \u5176\u5b83\u65b9\u6848\u7684\u8865\u5145\\n\\n\u4e0a\u9762\u8bf4\u7684\u5176\u5b9e\u662f Seata \u7684\u9ed8\u8ba4\u6a21\u5f0f\uff0c\u4e5f\u53eb AT \u6a21\u5f0f\uff0c\u5b83\u662f\u7c7b\u4f3c\u4e8e XA \u65b9\u6848\u7684\u4e24\u6bb5\u5f0f\u63d0\u4ea4\u65b9\u6848\uff0c\u5e76\u4e14\u662f\u5bf9\u4e1a\u52a1\u65e0\u4fb5\u5165\uff0c\u4f46\u662f\u8fd9\u79cd\u673a\u5236\u4f9d\u7136\u662f\u9700\u8981\u4f9d\u8d56\u6570\u636e\u5e93\u672c\u5730\u4e8b\u52a1\u7684 ACID \u7279\u6027\uff0c\u6709\u6ca1\u6709\u53d1\u73b0\uff0c\u6211\u5728\u4e0a\u9762\u7684\u56fe\u4e2d\u90fd\u5f3a\u8c03\u4e86\u5fc5\u987b\u662f\u652f\u6301 ACID \u7279\u6027\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u6765\u4e86\uff0c\u975e\u5173\u7cfb\u578b\u6216\u8005\u4e0d\u652f\u6301 ACID \u7684\u6570\u636e\u5e93\u5c31\u65e0\u6cd5\u4f7f\u7528 Seata \u4e86\uff0c\u522b\u614c\uff0cSeata \u73b0\u9636\u6bb5\u4e3a\u6211\u4eec\u51c6\u5907\u4e86\u53e6\u5916\u4e00\u79cd\u6a21\u5f0f\uff0c\u53eb MT \u6a21\u5f0f\uff0c\u5b83\u662f\u4e00\u79cd\u5bf9\u4e1a\u52a1\u6709\u5165\u4fb5\u7684\u65b9\u6848\uff0c\u63d0\u4ea4\u56de\u6eda\u7b49\u64cd\u4f5c\u9700\u8981\u6211\u4eec\u81ea\u884c\u5b9a\u4e49\uff0c\u4e1a\u52a1\u903b\u8f91\u9700\u8981\u88ab\u5206\u89e3\u4e3a Prepare/Commit/Rollback 3 \u90e8\u5206\uff0c\u5f62\u6210\u4e00\u4e2a MT \u5206\u652f\uff0c\u52a0\u5165\u5168\u5c40\u4e8b\u52a1\uff0c\u5b83\u5b58\u5728\u7684\u610f\u4e49\u662f\u4e3a Seata \u89e6\u8fbe\u66f4\u591a\u7684\u573a\u666f\u3002\\n\\n![](https://gitee.com/objcoding/md-picture/raw/master/img/seata8.png)\\n\\n\u53ea\u4e0d\u8fc7\uff0c\u5b83\u4e0d\u662f Seata \u201c\u4e3b\u6253\u201d\u7684\u6a21\u5f0f\uff0c\u5b83\u7684\u5b58\u5728\u4ec5\u4ec5\u4f5c\u4e3a\u8865\u5145\u7684\u65b9\u6848\uff0c\u4ece\u4ee5\u4e0a\u5b98\u65b9\u7684\u53d1\u5c55\u8fdc\u666f\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\uff0cSeata \u7684\u76ee\u6807\u662f\u59cb\u7ec8\u662f\u5bf9\u4e1a\u52a1\u65e0\u5165\u4fb5\u7684\u65b9\u6848\u3002\\n\\n*\u6ce8\uff1a\u672c\u6587\u56fe\u7247\u8bbe\u8ba1\u53c2\u8003Seata\u5b98\u65b9\u56fe*\\n\\n# \u4f5c\u8005\u7b80\u4ecb\uff1a\\n\\n\u5f20\u4e58\u8f89\uff0c\u76ee\u524d\u5c31\u804c\u4e8e\u4e2d\u901a\u79d1\u6280\u4fe1\u606f\u4e2d\u5fc3\u6280\u672f\u5e73\u53f0\u90e8\uff0c\u62c5\u4efb Java \u5de5\u7a0b\u5e08\uff0c\u4e3b\u8981\u8d1f\u8d23\u4e2d\u901a\u6d88\u606f\u5e73\u53f0\u4e0e\u5168\u94fe\u8def\u538b\u6d4b\u9879\u76ee\u7684\u7814\u53d1\uff0c\u70ed\u7231\u5206\u4eab\u6280\u672f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u300c\u540e\u7aef\u8fdb\u9636\u300d\u4f5c\u8005\uff0c\u6280\u672f\u535a\u5ba2\uff08[https://objcoding.com/](https://objcoding.com/)\uff09\u535a\u4e3b\uff0cSeata Contributor\uff0cGitHub ID\uff1aobjcoding\u3002"},{"id":"/seata-analysis-go-server","metadata":{"permalink":"/zh-cn/blog/seata-analysis-go-server","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-analysis-go-server.md","title":"Seata\u5206\u5e03\u5f0fGo Server\u6b63\u5f0f\u5f00\u6e90-TaaS\u8bbe\u8ba1\u7b80\u4ecb","description":"\u524d\u8a00","date":"2019-04-23T00:00:00.000Z","formattedDate":"2019\u5e744\u670823\u65e5","tags":[],"readingTime":6.17,"hasTruncateMarker":false,"authors":[{"name":"fagongzi(zhangxu19830126@gmail.com)"}],"frontMatter":{"title":"Seata\u5206\u5e03\u5f0fGo Server\u6b63\u5f0f\u5f00\u6e90-TaaS\u8bbe\u8ba1\u7b80\u4ecb","author":"fagongzi(zhangxu19830126@gmail.com)","date":"2019/04/23","keywords":["seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001\u9ad8\u53ef\u7528"]},"prevItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u95f4\u4ef6 Seata \u7684\u8bbe\u8ba1\u539f\u7406","permalink":"/zh-cn/blog/seata-at-mode-design"},"nextItem":{"title":"Fescar \u4e0e Spring Cloud \u96c6\u6210\u6e90\u7801\u6df1\u5ea6\u5256\u6790","permalink":"/zh-cn/blog/how-to-support-spring-cloud"}},"content":"### \u524d\u8a00\\nTaaS \u662f Seata \u670d\u52a1\u7aef\uff08TC, Transaction Coordinator\uff09\u7684\u4e00\u79cd\u9ad8\u53ef\u7528\u5b9e\u73b0\uff0c\u4f7f\u7528 `Golang` \u7f16\u5199\u3002Taas \u7531InfiniVision (http://infinivision.cn) \u8d21\u732e\u7ed9Seata\u5f00\u6e90\u793e\u533a\u3002\u73b0\u5df2\u6b63\u5f0f\u5f00\u6e90\uff0c\u5e76\u8d21\u732e\u7ed9 Seata \u793e\u533a\u3002\\n\\n\u5728Seata\u5f00\u6e90\u4e4b\u524d\uff0c\u6211\u4eec\u5185\u90e8\u5f00\u59cb\u501f\u9274GTS\u4ee5\u53ca\u4e00\u4e9b\u5f00\u6e90\u9879\u76ee\u6765\u5b9e\u73b0\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u89e3\u51b3\u65b9\u6848TaaS(Transaction as a Service)\u3002\\n\\n\u5728\u6211\u4eec\u5b8c\u6210TaaS\u7684\u670d\u52a1\u7aef\u7684\u5f00\u53d1\u5de5\u4f5c\u540e\uff0cSeata\uff08\u5f53\u65f6\u8fd8\u53ebFescar\uff09\u5f00\u6e90\u4e86\uff0c\u5e76\u4e14\u5f15\u8d77\u4e86\u5f00\u6e90\u793e\u533a\u7684\u5e7f\u6cdb\u5173\u6ce8\uff0c\u52a0\u4e0a\u963f\u91cc\u5df4\u5df4\u7684\u5e73\u53f0\u5f71\u54cd\u529b\u4ee5\u53ca\u793e\u533a\u6d3b\u8dc3\u5ea6\uff0c\u6211\u4eec\u8ba4\u4e3aSeata\u4f1a\u6210\u4e3a\u4eca\u540e\u5f00\u6e90\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u6807\u51c6\uff0c\u6211\u4eec\u51b3\u5b9aTaaS\u517c\u5bb9Seata\u3002\\n\\n\u5728\u53d1\u73b0Seata\u7684\u670d\u52a1\u7aef\u7684\u5b9e\u73b0\u662f\u5355\u673a\u7684\uff0c\u9ad8\u53ef\u7528\u7b49\u5e76\u6ca1\u6709\u5b9e\u73b0\uff0c\u4e8e\u662f\u6211\u4eec\u4e0eSeata\u793e\u533a\u8d1f\u8d23\u4eba\u53d6\u5f97\u8054\u7cfb\uff0c\u5e76\u4e14\u51b3\u5b9a\u628aTaaS\u5f00\u6e90\uff0c\u56de\u9988\u5f00\u6e90\u793e\u533a\u3002 \u540c\u65f6\uff0c\u6211\u4eec\u4f1a\u957f\u671f\u7ef4\u62a4\uff0c\u5e76\u4e14\u548cSeata\u7248\u672c\u4fdd\u6301\u540c\u6b65\u3002\\n\\n\u76ee\u524d\uff0cSeata\u5b98\u65b9\u7684Java\u9ad8\u53ef\u7528\u7248\u672c\u4e5f\u5728\u5f00\u53d1\u4e2d\uff0cTaaS\u548c\u8be5\u9ad8\u53ef\u7528\u7248\u672c\u7684\u8bbe\u8ba1\u601d\u60f3\u4e0d\u540c\uff0c\u5728\u4eca\u540e\u4f1a\u957f\u671f\u5171\u5b58\u3002\\n\\nTaaS\u5df2\u7ecf\u5f00\u6e90\uff0c github (https://github.com/seata/seata-go-server)\uff0c\u6b22\u8fce\u5927\u5bb6\u8bd5\u7528\u3002\\n\\n### \u8bbe\u8ba1\u539f\u5219\\n1. \u9ad8\u6027\u80fd\uff0c\u6027\u80fd\u548c\u673a\u5668\u6570\u91cf\u6210\u6b63\u6bd4\uff0c\u5373\u901a\u8fc7\u52a0\u5165\u65b0\u673a\u5668\u5230\u96c6\u7fa4\u4e2d\uff0c\u5c31\u53ef\u4ee5\u63d0\u5347\u6027\u80fd\\n2. \u9ad8\u53ef\u7528\uff0c\u4e00\u53f0\u673a\u5668\u51fa\u73b0\u6545\u969c\uff0c\u7cfb\u7edf\u80fd\u4f9d\u65e7\u53ef\u4ee5\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\uff0c\u6216\u8005\u5728\u8f83\u77ed\u7684\u65f6\u95f4\u5185\u6062\u590d\u5bf9\u5916\u670d\u52a1\uff08Leader\u5207\u6362\u7684\u65f6\u95f4\uff09\\n3. Auto-Rebalance\uff0c\u96c6\u7fa4\u4e2d\u589e\u52a0\u65b0\u7684\u673a\u5668\uff0c\u6216\u8005\u6709\u673a\u5668\u4e0b\u7ebf\uff0c\u7cfb\u7edf\u80fd\u591f\u81ea\u52a8\u7684\u505a\u8d1f\u8f7d\u5747\u8861\\n4. \u5f3a\u4e00\u81f4\uff0c\u7cfb\u7edf\u7684\u5143\u6570\u636e\u5f3a\u4e00\u81f4\u5728\u591a\u4e2a\u526f\u672c\u4e2d\u5b58\u50a8\\n\\n### \u8bbe\u8ba1\\n![](/img/blog/taas.png)\\n\\n#### \u9ad8\u6027\u80fd\\nTaaS\u7684\u6027\u80fd\u548c\u673a\u5668\u6570\u91cf\u6210\u6b63\u6bd4\uff0c\u4e3a\u4e86\u652f\u6301\u8fd9\u4e2a\u7279\u6027\uff0c\u5728TaaS\u4e2d\u5904\u7406\u5168\u5c40\u4e8b\u52a1\u7684\u6700\u5c0f\u5355\u5143\u79f0\u4e3a`Fragment`\uff0c\u7cfb\u7edf\u5728\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u8bbe\u5b9a\u6bcf\u4e2aFragment\u652f\u6301\u7684\u6d3b\u8dc3\u5168\u5c40\u4e8b\u52a1\u7684\u5e76\u53d1\u6570\uff0c\u540c\u65f6\u7cfb\u7edf\u4f1a\u5bf9\u6bcf\u4e2aFragment\u8fdb\u884c\u91c7\u6837\uff0c\u4e00\u65e6\u53d1\u73b0Fragment\u8d85\u8d1f\u8377\uff0c\u4f1a\u751f\u6210\u65b0\u7684Fragment\u6765\u5904\u7406\u66f4\u591a\u7684\u5e76\u53d1\u3002\\n\\n#### \u9ad8\u53ef\u7528\\n\u6bcf\u4e2a`Fragment`\u6709\u591a\u4e2a\u526f\u672c\u548c\u4e00\u4e2aLeader\uff0c\u7531Leader\u6765\u5904\u7406\u8bf7\u6c42\u3002\u5f53Leader\u51fa\u73b0\u6545\u969c\uff0c\u7cfb\u7edf\u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684Leader\u6765\u5904\u7406\u8bf7\u6c42\uff0c\u5728\u65b0Leader\u7684\u9009\u4e3e\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e2aFragment\u5bf9\u5916\u4e0d\u63d0\u4f9b\u670d\u52a1\uff0c\u901a\u5e38\u8fd9\u4e2a\u95f4\u9694\u65f6\u95f4\u662f\u51e0\u79d2\u949f\u3002\\n\\n#### \u5f3a\u4e00\u81f4\\nTaaS\u672c\u8eab\u4e0d\u5b58\u50a8\u5168\u5c40\u4e8b\u52a1\u7684\u5143\u6570\u636e\uff0c\u5143\u6570\u636e\u5b58\u50a8\u5728Elasticell   (https://github.com/deepfabric/elasticell) \u4e2d\uff0cElasticell\u662f\u4e00\u4e2a\u517c\u5bb9redis\u534f\u8bae\u7684\u5206\u5e03\u5f0f\u7684KV\u5b58\u50a8\uff0c\u5b83\u57fa\u4e8eRaft\u534f\u8bae\u6765\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002\\n\\n#### Auto-Rebalance\\n\u968f\u7740\u7cfb\u7edf\u7684\u8fd0\u884c\uff0c\u5728\u7cfb\u7edf\u4e2d\u4f1a\u5b58\u5728\u8bb8\u591a`Fragment`\u4ee5\u53ca\u5b83\u4eec\u7684\u526f\u672c\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u5728\u6bcf\u4e2a\u673a\u5668\u4e0a\uff0c`Fragment`\u7684\u5206\u5e03\u4e0d\u5747\u5300\uff0c\u7279\u522b\u662f\u5f53\u65e7\u7684\u673a\u5668\u4e0b\u7ebf\u6216\u8005\u65b0\u7684\u673a\u5668\u4e0a\u7ebf\u7684\u65f6\u5019\u3002TaaS\u5728\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u9009\u62e93\u4e2a\u8282\u70b9\u4f5c\u4e3a\u8c03\u5ea6\u5668\u7684\u89d2\u8272\uff0c\u8c03\u5ea6\u5668\u8d1f\u8d23\u8c03\u5ea6\u8fd9\u4e9b`Fragment`\uff0c\u7528\u6765\u4fdd\u8bc1\u6bcf\u4e2a\u673a\u5668\u4e0a\u7684Fragment\u7684\u6570\u91cf\u4ee5\u53caLeader\u4e2a\u6570\u5927\u81f4\u76f8\u7b49\uff0c\u540c\u65f6\u8fd8\u4f1a\u4fdd\u8bc1\u6bcf\u4e2aFragment\u7684\u526f\u672c\u6570\u7ef4\u6301\u5728\u6307\u5b9a\u7684\u526f\u672c\u4e2a\u6570\u3002\\n\\n##### Fragment\u526f\u672c\u521b\u5efa\\n![](/img/blog/taas_add.png)\\n\\n1. t0\u65f6\u95f4\u70b9\uff0cFragment1\u5728Seata-TC1\u673a\u5668\u4e0a\u521b\u5efa\\n2. t1\u65f6\u95f4\u70b9\uff0cFragment1\u7684\u526f\u672cFragment1\'\u5728Seata-TC2\u673a\u5668\u4e0a\u521b\u5efa\\n3. t2\u65f6\u95f4\u70b9\uff0cFragment1\u7684\u526f\u672cFragment1\\"\u5728Seata-TC3\u673a\u5668\u4e0a\u521b\u5efa\\n\\n\u5728t2\u65f6\u95f4\u70b9\uff0cFragment1\u7684\u4e09\u4e2a\u526f\u672c\u521b\u5efa\u5b8c\u6bd5\u3002\\n\\n##### Fragment\u526f\u672c\u8fc1\u79fb\\n![](/img/blog/taas_move.png)\\n1. t0\u65f6\u523b\u70b9\uff0c\u7cfb\u7edf\u4e00\u4e2a\u5b58\u57284\u4e2aFragment\uff0c\u5206\u522b\u5b58\u5728\u4e8eSeata-TC1\uff0cSeata-TC2\uff0cSeata-TC3\u4e09\u53f0\u673a\u5668\u4e0a\\n2. t1\u65f6\u523b\uff0c\u52a0\u5165\u65b0\u673a\u5668Seata-TC4\\n3. t2\u65f6\u523b\uff0c\u67093\u4e2aFragment\u7684\u526f\u672c\u88ab\u8fc1\u79fb\u5230\u4e86Seata-TC4\u8fd9\u53f0\u673a\u5668\u4e0a\\n\\n### \u5728\u7ebf\u5feb\u901f\u4f53\u9a8c\\n\u6211\u4eec\u5728\u516c\u7f51\u642d\u5efa\u4e86\u4e00\u4e2a\u4f53\u9a8c\u7684\u73af\u5883\uff1a\\n* Seata\u670d\u52a1\u7aef\u5730\u5740\uff1a 39.97.115.141:8091\\n* UI\uff1a http://39.97.115.141:8084/ui/index.html\\n\\n### \u672c\u5730\u5feb\u901f\u4f53\u9a8c\\n\u4f7f\u7528docker-compose\u5feb\u901f\u4f53\u9a8cTaaS\u7684\u529f\u80fd\u3002\\n```bash\\ngit clone https://github.com/seata/taas.git\\ndocker-compse up -d\\n```\\n\u7531\u4e8e\u7ec4\u4ef6\u4f9d\u8d56\u8f83\u591a\uff0cdocker-compose\u542f\u52a830\u79d2\u540e\uff0c\u53ef\u4ee5\u5bf9\u5916\u670d\u52a1\\n\\n#### Seata\u670d\u52a1\u5730\u5740\\n\u670d\u52a1\u9ed8\u8ba4\u76d1\u542c\u57288091\u7aef\u53e3\uff0c\u4fee\u6539Seata\u5bf9\u5e94\u7684\u670d\u52a1\u7aef\u5730\u5740\u4f53\u9a8c\\n\\n#### Seata UI \\n\u8bbf\u95eeWEB UI `http://127.0.0.1:8084/ui/index.html`\\n\\n### \u5173\u4e8eInfiniVision\\n\u6df1\u89c1\u7f51\u7edc\u662f\u4e00\u5bb6\u6280\u672f\u9a71\u52a8\u7684\u4f01\u4e1a\u7ea7\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u81f4\u529b\u4e8e\u5229\u7528\u4eba\u5de5\u667a\u80fd\u3001\u4e91\u8ba1\u7b97\u3001\u533a\u5757\u94fe\u3001\u5927\u6570\u636e\uff0c\u4ee5\u53ca\u7269\u8054\u7f51\u8fb9\u7f18\u8ba1\u7b97\u6280\u672f\u52a9\u529b\u4f20\u7edf\u4f01\u4e1a\u7684\u6570\u5b57\u5316\u8f6c\u578b\u548c\u5347\u7ea7\u3002\u6df1\u89c1\u7f51\u7edc\u79ef\u6781\u62e5\u62b1\u5f00\u6e90\u6587\u5316\u5e76\u5c06\u6838\u5fc3\u7b97\u6cd5\u548c\u67b6\u6784\u5f00\u6e90\uff0c\u77e5\u540d\u4eba\u8138\u8bc6\u522b\u8f6f\u4ef6 InsightFace (https://github.com/deepinsight/insightface) (\u66fe\u591a\u6b21\u83b7\u5f97\u5927\u89c4\u6a21\u4eba\u8138\u8bc6\u522b\u6311\u6218\u51a0\u519b)\uff0c\u4ee5\u53ca\u5206\u5e03\u5f0f\u5b58\u50a8\u5f15\u64ce Elasticell (https://github.com/deepfabric/elasticell) \u7b49\u5747\u662f\u6df1\u89c1\u7f51\u7edc\u7684\u5f00\u6e90\u4ea7\u54c1\u3002\\n\\n### \u5173\u4e8e\u4f5c\u8005\\n\u4f5c\u8005\u5f20\u65ed\uff0c\u5f00\u6e90\u7f51\u5173Gateway (https://github.com/fagongzi/gateway) \u4f5c\u8005\uff0c\u76ee\u524d\u5c31\u804c\u4e8eInfiniVision\uff0c\u8d1f\u8d23\u57fa\u7840\u67b6\u6784\u76f8\u5173\u7684\u7814\u53d1\u5de5\u4f5c\u3002"},{"id":"/how-to-support-spring-cloud","metadata":{"permalink":"/zh-cn/blog/how-to-support-spring-cloud","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/how-to-support-spring-cloud.md","title":"Fescar \u4e0e Spring Cloud \u96c6\u6210\u6e90\u7801\u6df1\u5ea6\u5256\u6790","description":"Fescar \u7b80\u4ecb","date":"2019-04-15T00:00:00.000Z","formattedDate":"2019\u5e744\u670815\u65e5","tags":[],"readingTime":20.04,"hasTruncateMarker":false,"authors":[{"name":"\u90ed\u6811\u6297 \u5b63\u654f"}],"frontMatter":{"title":"Fescar \u4e0e Spring Cloud \u96c6\u6210\u6e90\u7801\u6df1\u5ea6\u5256\u6790","author":"\u90ed\u6811\u6297 \u5b63\u654f","date":"2019/04/15","keywords":["fescar\u3001seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"]},"prevItem":{"title":"Seata\u5206\u5e03\u5f0fGo Server\u6b63\u5f0f\u5f00\u6e90-TaaS\u8bbe\u8ba1\u7b80\u4ecb","permalink":"/zh-cn/blog/seata-analysis-go-server"},"nextItem":{"title":"Seata\uff08Fescar\uff09\u5206\u5e03\u5f0f\u4e8b\u52a1 \u6574\u5408 Spring Cloud","permalink":"/zh-cn/blog/integrate-seata-with-spring-cloud"}},"content":"### Fescar \u7b80\u4ecb\\n\\n\u5e38\u89c1\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u65b9\u5f0f\u6709\u57fa\u4e8e 2PC \u7684 XA (e.g. atomikos)\uff0c\u4ece\u4e1a\u52a1\u5c42\u5165\u624b\u7684 TCC( e.g. byteTCC)\u3001\u4e8b\u52a1\u6d88\u606f ( e.g. RocketMQ Half Message) \u7b49\u7b49\u3002XA \u662f\u9700\u8981\u672c\u5730\u6570\u636e\u5e93\u652f\u6301\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u534f\u8bae\uff0c\u8d44\u6e90\u9501\u5728\u6570\u636e\u5e93\u5c42\u9762\u5bfc\u81f4\u6027\u80fd\u8f83\u5dee\uff0c\u800c\u652f\u4ed8\u5b9d\u4f5c\u4e3a\u5e03\u9053\u5e08\u5f15\u5165\u7684 TCC \u6a21\u5f0f\u9700\u8981\u5927\u91cf\u7684\u4e1a\u52a1\u4ee3\u7801\u4fdd\u8bc1\uff0c\u5f00\u53d1\u7ef4\u62a4\u6210\u672c\u8f83\u9ad8\u3002\\n\\n\u5206\u5e03\u5f0f\u4e8b\u52a1\u662f\u4e1a\u754c\u6bd4\u8f83\u5173\u6ce8\u7684\u9886\u57df\uff0c\u8fd9\u4e5f\u662f\u77ed\u77ed\u65f6\u95f4 Fescar \u80fd\u6536\u83b76k Star\u7684\u539f\u56e0\u4e4b\u4e00\u3002Fescar \u540d\u5b57\u53d6\u81ea **Fast & Easy Commit And Rollback** \uff0c\u7b80\u5355\u6765\u8bf4 Fescar \u901a\u8fc7\u5bf9\u672c\u5730 RDBMS \u5206\u652f\u4e8b\u52a1\u7684\u534f\u8c03\u6765\u9a71\u52a8\u5b8c\u6210\u5168\u5c40\u4e8b\u52a1\uff0c\u662f\u5de5\u4f5c\u5728\u5e94\u7528\u5c42\u7684\u4e2d\u95f4\u4ef6\u3002\u4e3b\u8981\u4f18\u70b9\u662f\u76f8\u5bf9\u4e8eXA\u6a21\u5f0f\u662f\u6027\u80fd\u8f83\u597d\u4e0d\u957f\u65f6\u95f4\u5360\u7528\u8fde\u63a5\u8d44\u6e90\uff0c\u76f8\u5bf9\u4e8e TCC \u65b9\u5f0f\u5f00\u53d1\u6210\u672c\u548c\u4e1a\u52a1\u4fb5\u5165\u6027\u8f83\u4f4e\u3002\\n\\n\u7c7b\u4f3c\u4e8e XA\uff0cFescar \u5c06\u89d2\u8272\u5206\u4e3a TC\u3001RM\u3001TM\uff0c\u4e8b\u52a1\u6574\u4f53\u8fc7\u7a0b\u6a21\u578b\u5982\u4e0b\uff1a\\n\\n![Fescar\u4e8b\u52a1\u8fc7\u7a0b](/img/blog/fescar-microservices.png)\\n\\n```\\n1. TM \u5411 TC \u7533\u8bf7\u5f00\u542f\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\uff0c\u5168\u5c40\u4e8b\u52a1\u521b\u5efa\u6210\u529f\u5e76\u751f\u6210\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684 XID\u3002\\n2. XID \u5728\u5fae\u670d\u52a1\u8c03\u7528\u94fe\u8def\u7684\u4e0a\u4e0b\u6587\u4e2d\u4f20\u64ad\u3002\\n3. RM \u5411 TC \u6ce8\u518c\u5206\u652f\u4e8b\u52a1\uff0c\u5c06\u5176\u7eb3\u5165 XID \u5bf9\u5e94\u5168\u5c40\u4e8b\u52a1\u7684\u7ba1\u8f96\u3002\\n4. TM \u5411 TC \u53d1\u8d77\u9488\u5bf9 XID \u7684\u5168\u5c40\u63d0\u4ea4\u6216\u56de\u6eda\u51b3\u8bae\u3002\\n5. TC \u8c03\u5ea6 XID \u4e0b\u7ba1\u8f96\u7684\u5168\u90e8\u5206\u652f\u4e8b\u52a1\u5b8c\u6210\u63d0\u4ea4\u6216\u56de\u6eda\u8bf7\u6c42\u3002\\n```\\n\\n\u5176\u4e2d\u5728\u76ee\u524d\u7684\u5b9e\u73b0\u7248\u672c\u4e2d TC \u662f\u72ec\u7acb\u90e8\u7f72\u7684\u8fdb\u7a0b\uff0c\u7ef4\u62a4\u5168\u5c40\u4e8b\u52a1\u7684\u64cd\u4f5c\u8bb0\u5f55\u548c\u5168\u5c40\u9501\u8bb0\u5f55\uff0c\u8d1f\u8d23\u534f\u8c03\u5e76\u9a71\u52a8\u5168\u5c40\u4e8b\u52a1\u7684\u63d0\u4ea4\u6216\u56de\u6eda\u3002TM RM \u5219\u4e0e\u5e94\u7528\u7a0b\u5e8f\u5de5\u4f5c\u5728\u540c\u4e00\u5e94\u7528\u8fdb\u7a0b\u3002RM \u5bf9 JDBC \u6570\u636e\u6e90\u91c7\u7528\u4ee3\u7406\u7684\u65b9\u5f0f\u5bf9\u5e95\u5c42\u6570\u636e\u5e93\u505a\u7ba1\u7406\uff0c\u5229\u7528\u8bed\u6cd5\u89e3\u6790\uff0c\u5728\u6267\u884c\u4e8b\u52a1\u65f6\u4fdd\u7559\u5feb\u7167\uff0c\u5e76\u751f\u6210 undo log\u3002\u5927\u6982\u7684\u6d41\u7a0b\u548c\u6a21\u578b\u5212\u5206\u5c31\u4ecb\u7ecd\u5230\u8fd9\u91cc\uff0c\u4e0b\u9762\u5f00\u59cb\u5bf9 Fescar \u4e8b\u52a1\u4f20\u64ad\u673a\u5236\u7684\u5206\u6790\u3002\\n\\n### Fescar \u4e8b\u52a1\u4f20\u64ad\u673a\u5236\\n\\nFescar \u4e8b\u52a1\u4f20\u64ad\u5305\u62ec\u5e94\u7528\u5185\u4e8b\u52a1\u5d4c\u5957\u8c03\u7528\u548c\u8de8\u670d\u52a1\u8c03\u7528\u7684\u4e8b\u52a1\u4f20\u64ad\u3002Fescar \u4e8b\u52a1\u662f\u600e\u4e48\u5728\u5fae\u670d\u52a1\u8c03\u7528\u94fe\u4e2d\u4f20\u64ad\u7684\u5462\uff1fFescar \u63d0\u4f9b\u4e86\u4e8b\u52a1 API \u5141\u8bb8\u7528\u6237\u624b\u52a8\u7ed1\u5b9a\u4e8b\u52a1\u7684 XID \u5e76\u52a0\u5165\u5230\u5168\u5c40\u4e8b\u52a1\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u6839\u636e\u4e0d\u540c\u7684\u670d\u52a1\u6846\u67b6\u673a\u5236\uff0c\u5c06 XID \u5728\u94fe\u8def\u4e2d\u4f20\u9012\u5373\u53ef\u5b9e\u73b0\u4e8b\u52a1\u7684\u4f20\u64ad\u3002\\n\\nRPC \u8bf7\u6c42\u8fc7\u7a0b\u5206\u4e3a\u8c03\u7528\u65b9\u4e0e\u88ab\u8c03\u7528\u65b9\u4e24\u90e8\u5206\uff0c\u6211\u4eec\u9700\u8981\u5bf9 XID \u5728\u8bf7\u6c42\u4e0e\u54cd\u5e94\u65f6\u505a\u76f8\u5e94\u7684\u5904\u7406\u3002\u5927\u81f4\u8fc7\u7a0b\u4e3a\uff1a\u8c03\u7528\u65b9\u5373\u8bf7\u6c42\u65b9\u5c06\u5f53\u524d\u4e8b\u52a1\u4e0a\u4e0b\u6587\u4e2d\u7684 XID \u53d6\u51fa\uff0c\u901a\u8fc7RPC\u534f\u8bae\u4f20\u9012\u7ed9\u88ab\u8c03\u7528\u65b9\uff1b\u88ab\u8c03\u7528\u65b9\u4ece\u8bf7\u6c42\u4e2d\u7684\u5c06 XID \u53d6\u51fa\uff0c\u5e76\u7ed1\u5b9a\u5230\u81ea\u5df1\u7684\u4e8b\u52a1\u4e0a\u4e0b\u6587\u4e2d\uff0c\u7eb3\u5165\u5168\u5c40\u4e8b\u52a1\u3002\u5fae\u670d\u52a1\u6846\u67b6\u4e00\u822c\u90fd\u6709\u76f8\u5e94\u7684 Filter \u548c Interceptor \u673a\u5236\uff0c\u6211\u4eec\u6765\u5177\u4f53\u5206\u6790\u4e0b Spring Cloud \u4e0eFescar \u7684\u6574\u5408\u8fc7\u7a0b\u3002\\n\\n### Fescar \u4e0e Spring Cloud Alibaba \u96c6\u6210\u90e8\u5206\u6e90\u7801\u89e3\u6790 \\n\\n\u672c\u90e8\u5206\u6e90\u7801\u5168\u90e8\u6765\u81ea\u4e8e spring-cloud-alibaba-fescar. \u6e90\u7801\u89e3\u6790\u90e8\u5206\u4e3b\u8981\u5305\u62ec AutoConfiguration\u3001\u5fae\u670d\u52a1\u88ab\u8c03\u7528\u65b9\u548c\u5fae\u670d\u52a1\u8c03\u7528\u65b9\u4e09\u5927\u90e8\u5206\u3002\u5bf9\u4e8e\u5fae\u670d\u52a1\u8c03\u7528\u65b9\u65b9\u5f0f\u5177\u4f53\u5206\u4e3a RestTemplate \u548c Feign\uff0c\u5176\u4e2d\u5bf9\u4e8e Feign \u8bf7\u6c42\u65b9\u5f0f\u53c8\u8fdb\u4e00\u6b65\u7ec6\u5206\u4e3a\u7ed3\u5408 Hystrix \u548c Sentinel \u7684\u4f7f\u7528\u6a21\u5f0f\u3002\\n\\n#### Fescar AutoConfiguration\\n\u5bf9\u4e8e AutoConfiguration \u7684\u89e3\u6790\u6b64\u5904\u53ea\u4ecb\u7ecd\u4e0e Fescar \u542f\u52a8\u76f8\u5173\u7684\u90e8\u5206\uff0c\u5176\u4ed6\u90e8\u5206\u7684\u89e3\u6790\u5c06\u7a7f\u63d2\u4e8e\u3010\u5fae\u670d\u52a1\u88ab\u8c03\u7528\u65b9\u3011\u548c \u3010\u5fae\u670d\u52a1\u8c03\u7528\u65b9\u3011\u7ae0\u8282\u8fdb\u884c\u4ecb\u7ecd\u3002\\n\\nFescar \u7684\u542f\u52a8\u9700\u8981\u914d\u7f6e GlobalTransactionScanner\uff0cGlobalTransactionScanner \u8d1f\u8d23\u521d\u59cb\u5316 Fescar \u7684 RM client\u3001TM  client \u548c \u81ea\u52a8\u4ee3\u7406\u6807\u6ce8 GlobalTransactional \u6ce8\u89e3\u7684\u7c7b\u3002GlobalTransactionScanner bean \u7684\u542f\u52a8\u901a\u8fc7 GlobalTransactionAutoConfiguration \u52a0\u8f7d\u5e76\u6ce8\u5165FescarProperties\u3002   \\nFescarProperties \u5305\u542b\u4e86 Fescar \u7684\u91cd\u8981\u5c5e\u6027 txServiceGroup \uff0c\u6b64\u5c5e\u6027\u7684\u53ef\u901a\u8fc7 application.properties \u6587\u4ef6\u4e2d\u7684 key: spring.cloud.alibaba.fescar.txServiceGroup \u8bfb\u53d6\uff0c\u9ed8\u8ba4\u503c\u4e3a ${spring.application.name}-fescar-service-group \u3002txServiceGroup \u8868\u793a Fescar \u7684\u903b\u8f91\u4e8b\u52a1\u5206\u7ec4\u540d\uff0c\u6b64\u5206\u7ec4\u540d\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\uff08\u76ee\u524d\u652f\u6301\u6587\u4ef6\u3001Apollo\uff09\u83b7\u53d6\u903b\u8f91\u4e8b\u52a1\u5206\u7ec4\u540d\u5bf9\u5e94\u7684 TC \u96c6\u7fa4\u540d\u79f0\uff0c\u8fdb\u4e00\u6b65\u901a\u8fc7\u96c6\u7fa4\u540d\u79f0\u6784\u9020\u51fa TC \u96c6\u7fa4\u7684\u670d\u52a1\u540d\uff0c\u901a\u8fc7\u6ce8\u518c\u4e2d\u5fc3\uff08\u76ee\u524d\u652f\u6301nacos\u3001redis\u3001zk\u548ceureka\uff09\u548c\u670d\u52a1\u540d\u627e\u5230\u53ef\u7528\u7684 TC \u670d\u52a1\u8282\u70b9\uff0c\u7136\u540e RM client\u3001TM  client \u4e0e TC \u8fdb\u884c rpc \u4ea4\u4e92\u3002\\n\\n#### \u5fae\u670d\u52a1\u88ab\u8c03\u7528\u65b9\\n\\n\u7531\u4e8e\u8c03\u7528\u65b9\u7684\u903b\u8f91\u6bd4\u8f83\u591a\u4e00\u70b9\uff0c\u6211\u4eec\u5148\u5206\u6790\u88ab\u8c03\u7528\u65b9\u7684\u903b\u8f91\u3002\u9488\u5bf9\u4e8e Spring Cloud \u9879\u76ee\uff0c\u9ed8\u8ba4\u91c7\u7528\u7684 RPC \u4f20\u8f93\u534f\u8bae\u662f HTTP \u534f\u8bae\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86 HandlerInterceptor \u673a\u5236\u6765\u5bf9HTTP\u7684\u8bf7\u6c42\u505a\u62e6\u622a\u3002\\n\\nHandlerInterceptor \u662f Spring \u63d0\u4f9b\u7684\u63a5\u53e3\uff0c \u5b83\u6709\u4ee5\u4e0b\u4e09\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u88ab\u8986\u5199\u3002\\n\\n```java\\n    /**\\n\\t * Intercept the execution of a handler. Called after HandlerMapping determined\\n\\t * an appropriate handler object, but before HandlerAdapter invokes the handler.\\n\\t */\\n\\tdefault boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)\\n\\t\\t\\tthrows Exception {\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/**\\n\\t * Intercept the execution of a handler. Called after HandlerAdapter actually\\n\\t * invoked the handler, but before the DispatcherServlet renders the view.\\n\\t * Can expose additional model objects to the view via the given ModelAndView.\\n\\t */\\n\\tdefault void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,\\n\\t\\t\\t@Nullable ModelAndView modelAndView) throws Exception {\\n\\t}\\n\\n\\t/**\\n\\t * Callback after completion of request processing, that is, after rendering\\n\\t * the view. Will be called on any outcome of handler execution, thus allows\\n\\t * for proper resource cleanup.\\n\\t */\\n\\tdefault void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler,\\n\\t\\t\\t@Nullable Exception ex) throws Exception {\\n\\t}\\n```\\n\\n\u6839\u636e\u6ce8\u91ca\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u660e\u786e\u7684\u770b\u5230\u5404\u4e2a\u65b9\u6cd5\u7684\u4f5c\u7528\u65f6\u95f4\u548c\u5e38\u7528\u7528\u9014\u3002\u5bf9\u4e8e Fescar \u96c6\u6210\u6765\u8bb2\uff0c\u5b83\u6839\u636e\u9700\u8981\u91cd\u5199\u4e86 preHandle\u3001afterCompletion \u65b9\u6cd5\u3002\\n\\nFescarHandlerInterceptor \u7684\u4f5c\u7528\u662f\u5c06\u670d\u52a1\u94fe\u8def\u4f20\u9012\u8fc7\u6765\u7684 XID\uff0c\u7ed1\u5b9a\u5230\u670d\u52a1\u8282\u70b9\u7684\u4e8b\u52a1\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5e76\u4e14\u5728\u8bf7\u6c42\u5b8c\u6210\u540e\u6e05\u7406\u76f8\u5173\u8d44\u6e90\u3002FescarHandlerInterceptorConfiguration \u4e2d\u914d\u7f6e\u4e86\u6240\u6709\u7684 url \u5747\u8fdb\u884c\u62e6\u622a\uff0c\u5bf9\u6240\u6709\u7684\u8bf7\u6c42\u8fc7\u6765\u5747\u4f1a\u6267\u884c\u8be5\u62e6\u622a\u5668\uff0c\u8fdb\u884c XID \u7684\u8f6c\u6362\u4e0e\u4e8b\u52a1\u7ed1\u5b9a\u3002\\n\\n```java\\n/**\\n * @author xiaojing\\n *\\n * Fescar HandlerInterceptor, Convert Fescar information into\\n * @see com.alibaba.fescar.core.context.RootContext from http request\'s header in\\n * {@link org.springframework.web.servlet.HandlerInterceptor#preHandle(HttpServletRequest , HttpServletResponse , Object )},\\n * And clean up Fescar information after servlet method invocation in\\n * {@link org.springframework.web.servlet.HandlerInterceptor#afterCompletion(HttpServletRequest, HttpServletResponse, Object, Exception)}\\n */\\npublic class FescarHandlerInterceptor implements HandlerInterceptor {\\n\\n\\tprivate static final Logger log = LoggerFactory\\n\\t\\t\\t.getLogger(FescarHandlerInterceptor.class);\\n\\n\\t@Override\\n\\tpublic boolean preHandle(HttpServletRequest request, HttpServletResponse response,\\n\\t\\t\\tObject handler) throws Exception {\\n\\n\\t\\tString xid = RootContext.getXID();\\n\\t\\tString rpcXid = request.getHeader(RootContext.KEY_XID);\\n\\t\\tif (log.isDebugEnabled()) {\\n\\t\\t\\tlog.debug(\\"xid in RootContext {} xid in RpcContext {}\\", xid, rpcXid);\\n\\t\\t}\\n\\n\\t\\tif (xid == null && rpcXid != null) {\\n\\t\\t\\tRootContext.bind(rpcXid);\\n\\t\\t\\tif (log.isDebugEnabled()) {\\n\\t\\t\\t\\tlog.debug(\\"bind {} to RootContext\\", rpcXid);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn true;\\n\\t}\\n\\n\\t@Override\\n\\tpublic void afterCompletion(HttpServletRequest request, HttpServletResponse response,\\n\\t\\t\\tObject handler, Exception e) throws Exception {\\n\\n\\t\\tString rpcXid = request.getHeader(RootContext.KEY_XID);\\n\\n\\t\\tif (StringUtils.isEmpty(rpcXid)) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tString unbindXid = RootContext.unbind();\\n\\t\\tif (log.isDebugEnabled()) {\\n\\t\\t\\tlog.debug(\\"unbind {} from RootContext\\", unbindXid);\\n\\t\\t}\\n\\t\\tif (!rpcXid.equalsIgnoreCase(unbindXid)) {\\n\\t\\t\\tlog.warn(\\"xid in change during RPC from {} to {}\\", rpcXid, unbindXid);\\n\\t\\t\\tif (unbindXid != null) {\\n\\t\\t\\t\\tRootContext.bind(unbindXid);\\n\\t\\t\\t\\tlog.warn(\\"bind {} back to RootContext\\", unbindXid);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n}\\n\\n```\\n\\n\\n\\npreHandle \u5728\u8bf7\u6c42\u6267\u884c\u524d\u88ab\u8c03\u7528\uff0cxid \u4e3a\u5f53\u524d\u4e8b\u52a1\u4e0a\u4e0b\u6587\u5df2\u7ecf\u7ed1\u5b9a\u7684\u5168\u5c40\u4e8b\u52a1\u7684\u552f\u4e00\u6807\u8bc6\uff0crpcXid \u4e3a\u8bf7\u6c42\u901a\u8fc7 HTTP Header \u4f20\u9012\u8fc7\u6765\u9700\u8981\u7ed1\u5b9a\u7684\u5168\u5c40\u4e8b\u52a1\u6807\u8bc6\u3002preHandle \u65b9\u6cd5\u4e2d\u5224\u65ad\u5982\u679c\u5f53\u524d\u4e8b\u52a1\u4e0a\u4e0b\u6587\u4e2d\u6ca1\u6709 XID\uff0c\u4e14 rpcXid \u4e0d\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5c31\u5c06 rpcXid \u7ed1\u5b9a\u5230\u5f53\u524d\u7684\u4e8b\u52a1\u4e0a\u4e0b\u6587\u3002\\n\\nafterCompletion \u5728\u8bf7\u6c42\u5b8c\u6210\u540e\u88ab\u8c03\u7528\uff0c\u8be5\u65b9\u6cd5\u7528\u6765\u6267\u884c\u8d44\u6e90\u7684\u76f8\u5173\u6e05\u7406\u52a8\u4f5c\u3002Fescar \u901a\u8fc7 RootContext.unbind() \u65b9\u6cd5\u5bf9\u4e8b\u52a1\u4e0a\u4e0b\u6587\u6d89\u53ca\u5230\u7684 XID \u8fdb\u884c\u89e3\u7ed1\u3002\u4e0b\u9762 if \u4e2d\u7684\u903b\u8f91\u662f\u4e3a\u4e86\u4ee3\u7801\u7684\u5065\u58ee\u6027\u8003\u8651\uff0c\u5982\u679c\u9047\u5230 rpcXid\u548c unbindXid \u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u518d\u5c06 unbindXid \u91cd\u65b0\u7ed1\u5b9a\u56de\u53bb\u3002\\n\\n\u5bf9\u4e8e Spring Cloud \u6765\u8bb2\uff0c\u9ed8\u8ba4\u91c7\u7528\u7684 RPC \u65b9\u5f0f\u662f HTTP \u7684\u65b9\u5f0f\uff0c\u6240\u4ee5\u5bf9\u88ab\u8c03\u7528\u65b9\u6765\u8bb2\uff0c\u5b83\u7684\u8bf7\u6c42\u62e6\u622a\u65b9\u5f0f\u4e0d\u7528\u505a\u4efb\u4f55\u533a\u5206\uff0c\u53ea\u9700\u8981\u4ece Header \u4e2d\u5c06 XID \u5c31\u53ef\u4ee5\u53d6\u51fa\u7ed1\u5b9a\u5230\u81ea\u5df1\u7684\u4e8b\u52a1\u4e0a\u4e0b\u6587\u4e2d\u5373\u53ef\u3002\u4f46\u662f\u5bf9\u4e8e\u8c03\u7528\u65b9\u7531\u4e8e\u8bf7\u6c42\u7ec4\u4ef6\u7684\u591a\u6837\u5316\uff0c\u5305\u62ec\u7194\u65ad\u9694\u79bb\u673a\u5236\uff0c\u6240\u4ee5\u8981\u533a\u5206\u4e0d\u540c\u7684\u60c5\u51b5\u505a\u5904\u7406\uff0c\u540e\u9762\u6211\u4eec\u6765\u5177\u4f53\u5206\u6790\u4e00\u4e0b\u3002\\n\\n#### \u5fae\u670d\u52a1\u8c03\u7528\u65b9\\n\\nFescar \u5c06\u8bf7\u6c42\u65b9\u5f0f\u5206\u4e3a\uff1aRestTemplate\u3001Feign\u3001Feign+Hystrix \u548c Feign+Sentinel \u3002\u4e0d\u540c\u7684\u7ec4\u4ef6\u901a\u8fc7 Spring Boot \u7684 Auto Configuration \u6765\u5b8c\u6210\u81ea\u52a8\u7684\u914d\u7f6e\uff0c\u5177\u4f53\u7684\u914d\u7f6e\u7c7b\u6e05\u5355\u53ef\u4ee5\u770b spring.factories \uff0c\u4e0b\u6587\u4e5f\u4f1a\u4ecb\u7ecd\u76f8\u5173\u7684\u914d\u7f6e\u7c7b\u3002\\n\\n#####  RestTemplate\\n\\n\u5148\u6765\u770b\u4e0b\u5982\u679c\u8c03\u7528\u65b9\u5982\u679c\u662f\u662f\u57fa\u4e8e RestTemplate \u7684\u8bf7\u6c42\uff0cFescar \u662f\u600e\u4e48\u4f20\u9012 XID \u7684\u3002\\n\\n```java\\npublic class FescarRestTemplateInterceptor implements ClientHttpRequestInterceptor {\\n\\t@Override\\n\\tpublic ClientHttpResponse intercept(HttpRequest httpRequest, byte[] bytes,\\n\\t\\t\\tClientHttpRequestExecution clientHttpRequestExecution) throws IOException {\\n\\t\\tHttpRequestWrapper requestWrapper = new HttpRequestWrapper(httpRequest);\\n\\n\\t\\tString xid = RootContext.getXID();\\n\\n\\t\\tif (!StringUtils.isEmpty(xid)) {\\n\\t\\t\\trequestWrapper.getHeaders().add(RootContext.KEY_XID, xid);\\n\\t\\t}\\n\\t\\treturn clientHttpRequestExecution.execute(requestWrapper, bytes);\\n\\t}\\n}\\n```\\n\\nFescarRestTemplateInterceptor \u5b9e\u73b0\u4e86 ClientHttpRequestInterceptor \u63a5\u53e3\u7684 intercept \u65b9\u6cd5\uff0c\u5bf9\u8c03\u7528\u7684\u8bf7\u6c42\u505a\u4e86\u5305\u88c5\uff0c\u5728\u53d1\u9001\u8bf7\u6c42\u65f6\u82e5\u5b58\u5728 Fescar \u4e8b\u52a1\u4e0a\u4e0b\u6587 XID \u5219\u53d6\u51fa\u5e76\u653e\u5230 HTTP Header \u4e2d\u3002\\n\\nFescarRestTemplateInterceptor \u901a\u8fc7 FescarRestTemplateAutoConfiguration \u5b9e\u73b0\u5c06 FescarRestTemplateInterceptor \u914d\u7f6e\u5230 RestTemplate \u4e2d\u53bb\u3002\\n\\n```java\\n@Configuration\\npublic class FescarRestTemplateAutoConfiguration {\\n\\n\\t@Bean\\n\\tpublic FescarRestTemplateInterceptor fescarRestTemplateInterceptor() {\\n\\t\\treturn new FescarRestTemplateInterceptor();\\n\\t}\\n\\n\\t@Autowired(required = false)\\n\\tprivate Collection<RestTemplate> restTemplates;\\n\\n\\t@Autowired\\n\\tprivate FescarRestTemplateInterceptor fescarRestTemplateInterceptor;\\n\\n\\t@PostConstruct\\n\\tpublic void init() {\\n\\t\\tif (this.restTemplates != null) {\\n\\t\\t\\tfor (RestTemplate restTemplate : restTemplates) {\\n\\t\\t\\t\\tList<ClientHttpRequestInterceptor> interceptors = new ArrayList<ClientHttpRequestInterceptor>(\\n\\t\\t\\t\\t\\t\\trestTemplate.getInterceptors());\\n\\t\\t\\t\\tinterceptors.add(this.fescarRestTemplateInterceptor);\\n\\t\\t\\t\\trestTemplate.setInterceptors(interceptors);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n}\\n```\\n\\ninit \u65b9\u6cd5\u904d\u5386\u6240\u6709\u7684 restTemplate \uff0c\u5e76\u5c06\u539f\u6765 restTemplate \u4e2d\u7684\u62e6\u622a\u5668\u53d6\u51fa\uff0c\u589e\u52a0 fescarRestTemplateInterceptor \u540e\u7f6e\u5165\u5e76\u91cd\u6392\u5e8f\u3002\\n\\n##### Feign\\n\\n![Feign \u7c7b\u5173\u7cfb\u56fe](/img/blog/20190305184812.png)\\n\\n\u63a5\u4e0b\u6765\u770b\u4e0b Feign \u7684\u76f8\u5173\u4ee3\u7801\uff0c\u8be5\u5305\u4e0b\u9762\u7684\u7c7b\u8fd8\u662f\u6bd4\u8f83\u591a\u7684\uff0c\u6211\u4eec\u5148\u4ece\u5176 AutoConfiguration \u5165\u624b\u3002\\n\\n```java\\n@Configuration\\n@ConditionalOnClass(Client.class)\\n@AutoConfigureBefore(FeignAutoConfiguration.class)\\npublic class FescarFeignClientAutoConfiguration {\\n\\n\\t@Bean\\n\\t@Scope(\\"prototype\\")\\n\\t@ConditionalOnClass(name = \\"com.netflix.hystrix.HystrixCommand\\")\\n\\t@ConditionalOnProperty(name = \\"feign.hystrix.enabled\\", havingValue = \\"true\\")\\n\\tFeign.Builder feignHystrixBuilder(BeanFactory beanFactory) {\\n\\t\\treturn FescarHystrixFeignBuilder.builder(beanFactory);\\n\\t}\\n\\n\\t@Bean\\n\\t@Scope(\\"prototype\\")\\n\\t@ConditionalOnClass(name = \\"com.alibaba.csp.sentinel.SphU\\")\\n\\t@ConditionalOnProperty(name = \\"feign.sentinel.enabled\\", havingValue = \\"true\\")\\n\\tFeign.Builder feignSentinelBuilder(BeanFactory beanFactory) {\\n\\t\\treturn FescarSentinelFeignBuilder.builder(beanFactory);\\n\\t}\\n\\n\\t@Bean\\n\\t@ConditionalOnMissingBean\\n\\t@Scope(\\"prototype\\")\\n\\tFeign.Builder feignBuilder(BeanFactory beanFactory) {\\n\\t\\treturn FescarFeignBuilder.builder(beanFactory);\\n\\t}\\n\\n\\t@Configuration\\n\\tprotected static class FeignBeanPostProcessorConfiguration {\\n\\n\\t\\t@Bean\\n\\t\\tFescarBeanPostProcessor fescarBeanPostProcessor(\\n\\t\\t\\t\\tFescarFeignObjectWrapper fescarFeignObjectWrapper) {\\n\\t\\t\\treturn new FescarBeanPostProcessor(fescarFeignObjectWrapper);\\n\\t\\t}\\n\\n\\t\\t@Bean\\n\\t\\tFescarContextBeanPostProcessor fescarContextBeanPostProcessor(\\n\\t\\t\\t\\tBeanFactory beanFactory) {\\n\\t\\t\\treturn new FescarContextBeanPostProcessor(beanFactory);\\n\\t\\t}\\n\\n\\t\\t@Bean\\n\\t\\tFescarFeignObjectWrapper fescarFeignObjectWrapper(BeanFactory beanFactory) {\\n\\t\\t\\treturn new FescarFeignObjectWrapper(beanFactory);\\n\\t\\t}\\n\\t}\\n\\n}\\n```\\n\\nFescarFeignClientAutoConfiguration \u5728\u5b58\u5728 Client.class \u65f6\u751f\u6548\uff0c\u4e14\u8981\u6c42\u4f5c\u7528\u5728 FeignAutoConfiguration \u4e4b\u524d\u3002\u7531\u4e8eFeignClientsConfiguration \u662f\u5728 FeignAutoConfiguration \u751f\u6210 FeignContext \u751f\u6548\u7684\uff0c\u6240\u4ee5\u6839\u636e\u4f9d\u8d56\u5173\u7cfb\uff0c FescarFeignClientAutoConfiguration \u540c\u6837\u65e9\u4e8e FeignClientsConfiguration\u3002\\n\\nFescarFeignClientAutoConfiguration \u81ea\u5b9a\u4e49\u4e86 Feign.Builder\uff0c\u9488\u5bf9\u4e8e feign.sentinel\uff0cfeign.hystrix  \u548c feign \u7684\u60c5\u51b5\u505a\u4e86\u9002\u914d\uff0c\u76ee\u7684\u662f\u81ea\u5b9a\u4e49 feign \u4e2d Client \u7684\u771f\u6b63\u5b9e\u73b0\u4e3a FescarFeignClient\u3002\\n\\n```java\\nHystrixFeign.builder().retryer(Retryer.NEVER_RETRY)\\n      .client(new FescarFeignClient(beanFactory))\\n```\\n\\n```java\\nSentinelFeign.builder().retryer(Retryer.NEVER_RETRY)\\n\\t\\t\\t\\t.client(new FescarFeignClient(beanFactory));\\n```\\n\\n```java\\nFeign.builder().client(new FescarFeignClient(beanFactory));\\n```\\n\\nFescarFeignClient \u662f\u5bf9\u539f\u6765\u7684 Feign \u5ba2\u6237\u7aef\u4ee3\u7406\u589e\u5f3a\uff0c\u5177\u4f53\u4ee3\u7801\u89c1\u4e0b\u56fe\uff1a\\n\\n```java\\npublic class FescarFeignClient implements Client {\\n\\n\\tprivate final Client delegate;\\n\\tprivate final BeanFactory beanFactory;\\n\\n\\tFescarFeignClient(BeanFactory beanFactory) {\\n\\t\\tthis.beanFactory = beanFactory;\\n\\t\\tthis.delegate = new Client.Default(null, null);\\n\\t}\\n\\n\\tFescarFeignClient(BeanFactory beanFactory, Client delegate) {\\n\\t\\tthis.delegate = delegate;\\n\\t\\tthis.beanFactory = beanFactory;\\n\\t}\\n\\n\\t@Override\\n\\tpublic Response execute(Request request, Request.Options options) throws IOException {\\n\\n\\t\\tRequest modifiedRequest = getModifyRequest(request);\\n\\n\\t\\ttry {\\n\\t\\t\\treturn this.delegate.execute(modifiedRequest, options);\\n\\t\\t}\\n\\t\\tfinally {\\n\\n\\t\\t}\\n\\t}\\n\\n\\tprivate Request getModifyRequest(Request request) {\\n\\n\\t\\tString xid = RootContext.getXID();\\n\\n\\t\\tif (StringUtils.isEmpty(xid)) {\\n\\t\\t\\treturn request;\\n\\t\\t}\\n\\n\\t\\tMap<String, Collection<String>> headers = new HashMap<>();\\n\\t\\theaders.putAll(request.headers());\\n\\n\\t\\tList<String> fescarXid = new ArrayList<>();\\n\\t\\tfescarXid.add(xid);\\n\\t\\theaders.put(RootContext.KEY_XID, fescarXid);\\n\\n\\t\\treturn Request.create(request.method(), request.url(), headers, request.body(),\\n\\t\\t\\t\\trequest.charset());\\n\\t}\\n\\n```\\n\\n\u4e0a\u9762\u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cFescarFeignClient \u5bf9\u539f\u6765\u7684 Request \u505a\u4e86\u4fee\u6539\uff0c\u5b83\u9996\u5148\u5c06 XID \u4ece\u5f53\u524d\u7684\u4e8b\u52a1\u4e0a\u4e0b\u6587\u4e2d\u53d6\u51fa\uff0c\u5728 XID \u4e0d\u4e3a\u7a7a\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06 XID \u653e\u5230\u4e86 Header \u4e2d\u3002\\n\\nFeignBeanPostProcessorConfiguration \u5b9a\u4e49\u4e863\u4e2a bean\uff1aFescarContextBeanPostProcessor\u3001FescarBeanPostProcessor \u548c FescarFeignObjectWrapper\u3002\u5176\u4e2d FescarContextBeanPostProcessor FescarBeanPostProcessor \u5b9e\u73b0\u4e86Spring  BeanPostProcessor \u63a5\u53e3\u3002\\n\u4ee5\u4e0b\u4e3a FescarContextBeanPostProcessor \u5b9e\u73b0\u3002\\n\\n```java\\n    @Override\\n\\tpublic Object postProcessBeforeInitialization(Object bean, String beanName)\\n\\t\\t\\tthrows BeansException {\\n\\t\\tif (bean instanceof FeignContext && !(bean instanceof FescarFeignContext)) {\\n\\t\\t\\treturn new FescarFeignContext(getFescarFeignObjectWrapper(),\\n\\t\\t\\t\\t\\t(FeignContext) bean);\\n\\t\\t}\\n\\t\\treturn bean;\\n\\t}\\n\\n\\t@Override\\n\\tpublic Object postProcessAfterInitialization(Object bean, String beanName)\\n\\t\\t\\tthrows BeansException {\\n\\t\\treturn bean;\\n\\t}\\n```\\n\\nBeanPostProcessor \u4e2d\u7684\u4e24\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u5bf9 Spring \u5bb9\u5668\u4e2d\u7684 Bean \u505a\u524d\u540e\u5904\u7406\uff0cpostProcessBeforeInitialization \u5904\u7406\u65f6\u673a\u662f\u521d\u59cb\u5316\u4e4b\u524d\uff0cpostProcessAfterInitialization \u7684\u5904\u7406\u65f6\u673a\u662f\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u8fd92\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u539f\u5148\u751f\u6210\u7684\u5b9e\u4f8b bean\uff0c\u6216\u8005\u4f7f\u7528 wrapper \u5305\u88c5\u540e\u7684\u5b9e\u4f8b\u3002\\n\\nFescarContextBeanPostProcessor  \u5c06 FeignContext \u5305\u88c5\u6210 FescarFeignContext\u3002   \\nFescarBeanPostProcessor  \u5c06 FeignClient \u6839\u636e\u662f\u5426\u7ee7\u627f\u4e86 LoadBalancerFeignClient \u5305\u88c5\u6210 FescarLoadBalancerFeignClient \u548c FescarFeignClient\u3002\\n\\nFeignAutoConfiguration \u4e2d\u7684 FeignContext \u5e76\u6ca1\u6709\u52a0 ConditionalOnXXX \u7684\u6761\u4ef6\uff0c\u6240\u4ee5 Fescar \u91c7\u7528\u9884\u7f6e\u5904\u7406\u7684\u65b9\u5f0f\u5c06 FeignContext \u5305\u88c5\u6210 FescarFeignContext\u3002\\n\\n```java\\n    @Bean\\n\\tpublic FeignContext feignContext() {\\n\\t\\tFeignContext context = new FeignContext();\\n\\t\\tcontext.setConfigurations(this.configurations);\\n\\t\\treturn context;\\n\\t}\\n```\\n\\n\u800c\u5bf9\u4e8e Feign Client\uff0cFeignClientFactoryBean \u4e2d\u4f1a\u83b7\u53d6 FeignContext \u7684\u5b9e\u4f8b\u5bf9\u8c61\u3002\u5bf9\u4e8e\u5f00\u53d1\u8005\u91c7\u7528 @Configuration \u6ce8\u89e3\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e\u7684 Feign Client \u5bf9\u8c61\uff0c\u8fd9\u91cc\u4f1a\u88ab\u914d\u7f6e\u5230 builder\uff0c\u5bfc\u81f4 FescarFeignBuilder \u4e2d\u589e\u5f3a\u540e\u7684 FescarFeignCliet \u5931\u6548\u3002FeignClientFactoryBean \u4e2d\u5173\u952e\u4ee3\u7801\u5982\u4e0b\uff1a\\n\\n```java\\n\\t/**\\n\\t * @param <T> the target type of the Feign client\\n\\t * @return a {@link Feign} client created with the specified data and the context information\\n\\t */\\n\\t<T> T getTarget() {\\n\\t\\tFeignContext context = applicationContext.getBean(FeignContext.class);\\n\\t\\tFeign.Builder builder = feign(context);\\n\\n\\t\\tif (!StringUtils.hasText(this.url)) {\\n\\t\\t\\tif (!this.name.startsWith(\\"http\\")) {\\n\\t\\t\\t\\turl = \\"http://\\" + this.name;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\turl = this.name;\\n\\t\\t\\t}\\n\\t\\t\\turl += cleanPath();\\n\\t\\t\\treturn (T) loadBalance(builder, context, new HardCodedTarget<>(this.type,\\n\\t\\t\\t\\t\\tthis.name, url));\\n\\t\\t}\\n\\t\\tif (StringUtils.hasText(this.url) && !this.url.startsWith(\\"http\\")) {\\n\\t\\t\\tthis.url = \\"http://\\" + this.url;\\n\\t\\t}\\n\\t\\tString url = this.url + cleanPath();\\n\\t\\tClient client = getOptional(context, Client.class);\\n\\t\\tif (client != null) {\\n\\t\\t\\tif (client instanceof LoadBalancerFeignClient) {\\n\\t\\t\\t\\t// not load balancing because we have a url,\\n\\t\\t\\t\\t// but ribbon is on the classpath, so unwrap\\n\\t\\t\\t\\tclient = ((LoadBalancerFeignClient)client).getDelegate();\\n\\t\\t\\t}\\n\\t\\t\\tbuilder.client(client);\\n\\t\\t}\\n\\t\\tTargeter targeter = get(context, Targeter.class);\\n\\t\\treturn (T) targeter.target(this, builder, context, new HardCodedTarget<>(\\n\\t\\t\\t\\tthis.type, this.name, url));\\n\\t}\\n```\\n\u4e0a\u8ff0\u4ee3\u7801\u6839\u636e\u662f\u5426\u6307\u5b9a\u4e86\u6ce8\u89e3\u53c2\u6570\u4e2d\u7684 URL \u6765\u9009\u62e9\u76f4\u63a5\u8c03\u7528 URL \u8fd8\u662f\u8d70\u8d1f\u8f7d\u5747\u8861\uff0ctargeter.target \u901a\u8fc7\u52a8\u6001\u4ee3\u7406\u521b\u5efa\u5bf9\u8c61\u3002\u5927\u81f4\u8fc7\u7a0b\u4e3a\uff1a\u5c06\u89e3\u6790\u51fa\u7684feign\u65b9\u6cd5\u653e\u5165map\\n\uff0c\u518d\u901a\u8fc7\u5c06\u5176\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u751f\u6210InvocationHandler\uff0c\u8fdb\u800c\u751f\u6210\u52a8\u6001\u4ee3\u7406\u5bf9\u8c61\u3002   \\nFescarContextBeanPostProcessor \u7684\u5b58\u5728\uff0c\u5373\u4f7f\u5f00\u53d1\u8005\u5bf9 FeignClient \u81ea\u5b9a\u4e49\u64cd\u4f5c\uff0c\u4f9d\u65e7\u53ef\u4ee5\u5b8c\u6210 Fescar \u6240\u9700\u7684\u5168\u5c40\u4e8b\u52a1\u7684\u589e\u5f3a\u3002\\n\\n\u5bf9\u4e8e FescarFeignObjectWrapper\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u4e0bWrapper\u65b9\u6cd5\uff1a\\n\\n```java\\n\\tObject wrap(Object bean) {\\n\\t\\tif (bean instanceof Client && !(bean instanceof FescarFeignClient)) {\\n\\t\\t\\tif (bean instanceof LoadBalancerFeignClient) {\\n\\t\\t\\t\\tLoadBalancerFeignClient client = ((LoadBalancerFeignClient) bean);\\n\\t\\t\\t\\treturn new FescarLoadBalancerFeignClient(client.getDelegate(), factory(),\\n\\t\\t\\t\\t\\t\\tclientFactory(), this.beanFactory);\\n\\t\\t\\t}\\n\\t\\t\\treturn new FescarFeignClient(this.beanFactory, (Client) bean);\\n\\t\\t}\\n\\t\\treturn bean;\\n\\t}\\n```\\n\\nwrap \u65b9\u6cd5\u4e2d\uff0c\u5982\u679c bean \u662f LoadBalancerFeignClient \u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u90a3\u4e48\u9996\u5148\u901a\u8fc7 client.getDelegate() \u65b9\u6cd5\u5c06 LoadBalancerFeignClient \u4ee3\u7406\u7684\u5b9e\u9645 Client \u5bf9\u8c61\u53d6\u51fa\u540e\u5305\u88c5\u6210 FescarFeignClient\uff0c\u518d\u751f\u6210 LoadBalancerFeignClient \u7684\u5b50\u7c7b FescarLoadBalancerFeignClient \u5bf9\u8c61\u3002\u5982\u679c bean \u662f Client \u7684\u5b9e\u4f8b\u5bf9\u8c61\u4e14\u4e0d\u662f FescarFeignClient LoadBalancerFeignClient\uff0c\u90a3\u4e48 bean \u4f1a\u76f4\u63a5\u5305\u88c5\u751f\u6210 FescarFeignClient\u3002\\n\\n\u4e0a\u9762\u7684\u6d41\u7a0b\u8bbe\u8ba1\u8fd8\u662f\u6bd4\u8f83\u5de7\u5999\u7684\uff0c\u9996\u5148\u6839\u636e Spring boot \u7684 Auto Configuration \u63a7\u5236\u4e86\u914d\u7f6e\u7684\u5148\u540e\u987a\u5e8f\uff0c\u540c\u65f6\u81ea\u5b9a\u4e49\u4e86 Feign Builder \u7684Bean\uff0c\u4fdd\u8bc1\u4e86 Client \u5747\u662f\u7ecf\u8fc7\u589e\u5f3a\u540e\u7684 FescarFeignClient \u3002\u518d\u901a\u8fc7 BeanPostProcessor \u5bf9Spring \u5bb9\u5668\u4e2d\u7684 Bean \u505a\u4e86\u4e00\u904d\u5305\u88c5\uff0c\u4fdd\u8bc1\u5bb9\u5668\u5185\u7684Bean\u5747\u662f\u589e\u5f3a\u540e FescarFeignClient \uff0c\u907f\u514d FeignClientFactoryBean getTarget \u65b9\u6cd5\u7684\u66ff\u6362\u52a8\u4f5c\u3002\\n\\n##### Hystrix \u9694\u79bb\\n\\n\u4e0b\u9762\u6211\u4eec\u518d\u6765\u770b\u4e0b Hystrix \u90e8\u5206\uff0c\u4e3a\u4ec0\u4e48\u8981\u5355\u72ec\u628a Hystrix \u62c6\u51fa\u6765\u770b\u5462\uff0c\u800c\u4e14 Fescar \u4ee3\u7801\u4e5f\u5355\u72ec\u5b9e\u73b0\u4e86\u4e2a\u7b56\u7565\u7c7b\u3002\u76ee\u524d\u4e8b\u52a1\u4e0a\u4e0b\u6587 RootContext \u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u57fa\u4e8e ThreadLocal \u65b9\u5f0f\u7684 ThreadLocalContextCore\uff0c\u4e5f\u5c31\u662f\u4e0a\u4e0b\u6587\u5176\u5b9e\u662f\u548c\u7ebf\u7a0b\u7ed1\u5b9a\u7684\u3002Hystrix \u672c\u8eab\u6709\u4e24\u79cd\u9694\u79bb\u72b6\u6001\u7684\u6a21\u5f0f\uff0c\u57fa\u4e8e\u4fe1\u53f7\u91cf\u6216\u8005\u57fa\u4e8e\u7ebf\u7a0b\u6c60\u8fdb\u884c\u9694\u79bb\u3002Hystrix \u5b98\u65b9\u5efa\u8bae\u662f\u91c7\u53d6\u7ebf\u7a0b\u6c60\u7684\u65b9\u5f0f\u6765\u5145\u5206\u9694\u79bb\uff0c\u4e5f\u662f\u4e00\u822c\u60c5\u51b5\u4e0b\u5728\u91c7\u7528\u7684\u6a21\u5f0f\uff1a \\n\\n```\\nThread or Semaphore\\nThe default, and the recommended setting, is to run HystrixCommands using thread isolation (THREAD) and HystrixObservableCommands using semaphore isolation (SEMAPHORE).\\n\\nCommands executed in threads have an extra layer of protection against latencies beyond what network timeouts can offer.\\n\\nGenerally the only time you should use semaphore isolation for HystrixCommands is when the call is so high volume (hundreds per second, per instance) that the overhead of separate threads is too high; this typically only applies to non-network calls.\\n```\\n\\nservice \u5c42\u7684\u4e1a\u52a1\u4ee3\u7801\u548c\u8bf7\u6c42\u53d1\u51fa\u7684\u7ebf\u7a0b\u80af\u5b9a\u4e0d\u662f\u540c\u4e00\u4e2a\uff0c\u90a3\u4e48 ThreadLocal \u7684\u65b9\u5f0f\u5c31\u6ca1\u529e\u6cd5\u5c06 XID \u4f20\u9012\u7ed9 Hystrix \u7684\u7ebf\u7a0b\u5e76\u4f20\u9012\u7ed9\u88ab\u8c03\u7528\u65b9\u7684\u3002\u600e\u4e48\u5904\u7406\u8fd9\u4ef6\u4e8b\u60c5\u5462\uff0cHystrix \u63d0\u4f9b\u4e86\u673a\u5236\u8ba9\u5f00\u53d1\u8005\u53bb\u81ea\u5b9a\u4e49\u5e76\u53d1\u7b56\u7565\uff0c\u53ea\u9700\u8981\u7ee7\u627f HystrixConcurrencyStrategy \u91cd\u5199 wrapCallable \u65b9\u6cd5\u5373\u53ef\u3002\\n\\n```java\\npublic class FescarHystrixConcurrencyStrategy extends HystrixConcurrencyStrategy {\\n\\n\\tprivate HystrixConcurrencyStrategy delegate;\\n\\n\\tpublic FescarHystrixConcurrencyStrategy() {\\n\\t\\tthis.delegate = HystrixPlugins.getInstance().getConcurrencyStrategy();\\n\\t\\tHystrixPlugins.reset();\\n\\t\\tHystrixPlugins.getInstance().registerConcurrencyStrategy(this);\\n\\t}\\n\\n\\t@Override\\n\\tpublic <K> Callable<K> wrapCallable(Callable<K> c) {\\n\\t\\tif (c instanceof FescarContextCallable) {\\n\\t\\t\\treturn c;\\n\\t\\t}\\n\\n\\t\\tCallable<K> wrappedCallable;\\n\\t\\tif (this.delegate != null) {\\n\\t\\t\\twrappedCallable = this.delegate.wrapCallable(c);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\twrappedCallable = c;\\n\\t\\t}\\n\\t\\tif (wrappedCallable instanceof FescarContextCallable) {\\n\\t\\t\\treturn wrappedCallable;\\n\\t\\t}\\n\\n\\t\\treturn new FescarContextCallable<>(wrappedCallable);\\n\\t}\\n\\n\\tprivate static class FescarContextCallable<K> implements Callable<K> {\\n\\n\\t\\tprivate final Callable<K> actual;\\n\\t\\tprivate final String xid;\\n\\n\\t\\tFescarContextCallable(Callable<K> actual) {\\n\\t\\t\\tthis.actual = actual;\\n\\t\\t\\tthis.xid = RootContext.getXID();\\n\\t\\t}\\n\\n\\t\\t@Override\\n\\t\\tpublic K call() throws Exception {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tRootContext.bind(xid);\\n\\t\\t\\t\\treturn actual.call();\\n\\t\\t\\t}\\n\\t\\t\\tfinally {\\n\\t\\t\\t\\tRootContext.unbind();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t}\\n}\\n```\\n\\nFescar \u4e5f\u63d0\u4f9b\u4e00\u4e2a FescarHystrixAutoConfiguration\uff0c\u5728\u5b58\u5728 HystrixCommand \u7684\u65f6\u5019\u751f\u6210FescarHystrixConcurrencyStrategy\\n\\n```java\\n@Configuration\\n@ConditionalOnClass(HystrixCommand.class)\\npublic class FescarHystrixAutoConfiguration {\\n\\n\\t@Bean\\n\\tFescarHystrixConcurrencyStrategy fescarHystrixConcurrencyStrategy() {\\n\\t\\treturn new FescarHystrixConcurrencyStrategy();\\n\\t}\\n\\n}\\n```\\n\\n### \u53c2\u8003\u6587\u732e\\n\\n- Fescar: https://github.com/alibaba/fescar\\n\\n- Spring Cloud Alibaba: https://github.com/spring-cloud-incubator/spring-cloud-alibaba\\n\\n- spring-cloud-openfeign: https://github.com/spring-cloud/spring-cloud-openfeign\\n\\n ### \u672c\u6587\u4f5c\u8005\\n\\n  \u90ed\u6811\u6297\uff0c\u793e\u533a\u6635\u79f0 ywind\uff0c\u66fe\u5c31\u804c\u4e8e\u534e\u4e3a\u7ec8\u7aef\u4e91\uff0c\u73b0\u641c\u72d0\u667a\u80fd\u5a92\u4f53\u4e2d\u5fc3Java\u5de5\u7a0b\u5e08\uff0c\u76ee\u524d\u4e3b\u8981\u8d1f\u8d23\u641c\u72d0\u53f7\u76f8\u5173\u5f00\u53d1\uff0c\u5bf9\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001\u5206\u5e03\u5f0f\u7cfb\u7edf\u548c\u5fae\u670d\u52a1\u67b6\u6784\u6709\u5f02\u5e38\u6d53\u539a\u7684\u5174\u8da3\u3002  \\n  \u5b63\u654f(\u6e05\u94ed)\uff0c\u793e\u533a\u6635\u79f0 slievrly\uff0cFescar \u5f00\u6e90\u9879\u76ee\u8d1f\u8d23\u4eba\uff0c\u963f\u91cc\u5df4\u5df4\u4e2d\u95f4\u4ef6 TXC/GTS \u6838\u5fc3\u7814\u53d1\u6210\u5458\uff0c\u957f\u671f\u4ece\u4e8b\u4e8e\u5206\u5e03\u5f0f\u4e2d\u95f4\u4ef6\u6838\u5fc3\u7814\u53d1\u5de5\u4f5c\uff0c\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u9886\u57df\u6709\u7740\u8f83\u4e30\u5bcc\u7684\u6280\u672f\u79ef\u7d2f\u3002"},{"id":"/integrate-seata-with-spring-cloud","metadata":{"permalink":"/zh-cn/blog/integrate-seata-with-spring-cloud","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/integrate-seata-with-spring-cloud.md","title":"Seata\uff08Fescar\uff09\u5206\u5e03\u5f0f\u4e8b\u52a1 \u6574\u5408 Spring Cloud","description":"\u9488\u5bf9Fescar \u76f8\u4fe1\u5f88\u591a\u5f00\u53d1\u8005\u5df2\u7ecf\u5bf9\u4ed6\u5e76\u4e0d\u964c\u751f\uff0c\u5f53\u7136Fescar \u5df2\u7ecf\u6210\u4e3a\u4e86\u8fc7\u53bb\u65f6\uff0c\u4e3a\u4ec0\u4e48\u8bf4\u5b83\u662f\u8fc7\u53bb\u65f6\uff0c\u56e0\u4e3aFescar \u5df2\u7ecf\u534e\u4e3d\u7684\u53d8\u8eab\u4e3aSeata\u3002\u5982\u679c\u8fd8\u4e0d\u77e5\u9053Seata \u7684\u670b\u53cb\uff0c\u8bf7\u767b\u5f55\u4e0b\u9762\u7f51\u5740\u67e5\u770b\u3002","date":"2019-04-15T00:00:00.000Z","formattedDate":"2019\u5e744\u670815\u65e5","tags":[],"readingTime":8.715,"hasTruncateMarker":false,"authors":[{"name":"\u5927\u83f2.Fei"}],"frontMatter":{"title":"Seata\uff08Fescar\uff09\u5206\u5e03\u5f0f\u4e8b\u52a1 \u6574\u5408 Spring Cloud","author":"\u5927\u83f2.Fei","date":"2019/04/15","keywords":["fescar\u3001seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"]},"prevItem":{"title":"Fescar \u4e0e Spring Cloud \u96c6\u6210\u6e90\u7801\u6df1\u5ea6\u5256\u6790","permalink":"/zh-cn/blog/how-to-support-spring-cloud"},"nextItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e4bSeata-Client\u539f\u7406\u53ca\u6d41\u7a0b\u8be6\u89e3","permalink":"/zh-cn/blog/seata-analysis-java-client"}},"content":"\u9488\u5bf9Fescar \u76f8\u4fe1\u5f88\u591a\u5f00\u53d1\u8005\u5df2\u7ecf\u5bf9\u4ed6\u5e76\u4e0d\u964c\u751f\uff0c\u5f53\u7136Fescar \u5df2\u7ecf\u6210\u4e3a\u4e86\u8fc7\u53bb\u65f6\uff0c\u4e3a\u4ec0\u4e48\u8bf4\u5b83\u662f\u8fc7\u53bb\u65f6\uff0c\u56e0\u4e3aFescar \u5df2\u7ecf\u534e\u4e3d\u7684\u53d8\u8eab\u4e3aSeata\u3002\u5982\u679c\u8fd8\u4e0d\u77e5\u9053Seata \u7684\u670b\u53cb\uff0c\u8bf7\u767b\u5f55\u4e0b\u9762\u7f51\u5740\u67e5\u770b\u3002\\n\\n \\n  SEATA GITHUB:[https://github.com/seata/seata]\\n\\n\u5bf9\u4e8e\u963f\u91cc\u5404\u4f4d\u540c\u5b66\u7684\u524d\u4ec6\u540e\u7ee7\uff0c\u7ed9\u6211\u4eec\u5e7f\u5927\u5f00\u53d1\u8005\u5e26\u6765\u5f88\u591a\u5f00\u6e90\u8f6f\u4ef6\uff0c\u5728\u8fd9\u91cc\u5bf9\u4ed6\u4eec\u8868\u793a\u771f\u631a\u7684\u611f\u8c22\u4e0e\u95ee\u5019\u3002\\n\\n\u4eca\u5929\u5728\u8fd9\u91cc\u548c\u5927\u5bb6\u5206\u4eab\u4e0bSpring Cloud \u6574\u5408Seata \u7684\u76f8\u5173\u5fc3\u5f97\u3002\u4e5f\u8ba9\u66f4\u591a\u7684\u670b\u53cb\u5728\u642d\u5efa\u7684\u9053\u8def\u4e0a\u5c11\u8d70\u4e00\u4e9b\u5f2f\u8def\uff0c\u5c11\u8e29\u4e00\u4e9b\u5751\u3002\\n\\n# 2.\u5de5\u7a0b\u5185\u5bb9\\n\\n\u672c\u6b21\u642d\u5efa\u6d41\u7a0b\u4e3a\uff1aclient->\u7f51\u5173->\u670d\u52a1\u6d88\u8d39\u8005->\u670d\u52a1\u63d0\u4f9b\u8005.\\n\\n```\\n                        \u6280\u672f\u6846\u67b6\uff1aspring cloud gateway\\n\\n                                spring cloud fegin\\n\\n                                nacos1.0.RC2\\n\\n                                fescar-server0.4.1(Seata)\\n```\\n\u5173\u4e8enacos\u7684\u542f\u52a8\u65b9\u5f0f\u8bf7\u53c2\u8003\uff1a[Nacos\u542f\u52a8\u53c2\u8003](https://nacos.io/zh-cn/docs/quick-start.html)       \\n\\n\u9996\u5148seata\u652f\u6301\u5f88\u591a\u79cd\u6ce8\u518c\u670d\u52a1\u65b9\u5f0f\uff0c\u5728 fescar-server-0.4.1\\\\conf \u76ee\u5f55\u4e0b\\n\\n```\\n    file.conf\\n    logback.xml\\n    nacos-config.sh\\n    nacos-config.text\\n    registry.conf\\n``` \\n\\n\u603b\u5171\u5305\u542b\u4e94\u4e2a\u6587\u4ef6\uff0c\u5176\u4e2d file.conf\u548c registry.conf \u5206\u522b\u662f\u6211\u4eec\u5728 \u670d\u52a1\u6d88\u8d39\u8005 & \u670d\u52a1\u63d0\u4f9b\u8005 \u4ee3\u7801\u6bb5\u9700\u8981\u7528\u5230\u7684\u6587\u4ef6\u3002\\n\u6ce8\uff1afile.conf\u548c registry.conf \u5fc5\u987b\u5728\u5f53\u524d\u4f7f\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5373\uff1a \u670d\u52a1\u6d88\u8d39\u8005 & \u670d\u52a1\u63d0\u4f9b\u8005 \u4e24\u4e2a\u5e94\u7528\u5728\u90fd\u9700\u8981\u5305\u542b\u3002\\n    \u5982\u679c\u4f60\u91c7\u7528\u4e86\u914d\u7f6e\u4e2d\u5fc3 \u662fnacos \u3001zk \uff0cfile.cnf \u662f\u53ef\u4ee5\u5ffd\u7565\u7684\u3002\u4f46\u662ftype=\u201cfile\u201d \u5982\u679c\u662f\u4e3afile  \u5c31\u5fc5\u987b\u5f97\u7528file.cnf\\n\\n\u4e0b\u9762\u662fregistry.conf \u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u5176\u4e2d registry \u662f\u6ce8\u518c\u670d\u52a1\u4e2d\u5fc3\u914d\u7f6e\u3002config\u4e3a\u914d\u7f6e\u4e2d\u5fc3\u7684\u914d\u7f6e\u5730\u65b9\u3002\\n\\n\u4ece\u4e0b\u9762\u53ef\u77e5\u9053\u76ee\u524dseata\u652f\u6301nacos\uff0cfile eureka redis zookeeper \u7b49\u6ce8\u518c\u914d\u7f6e\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u4e0b\u8f7d\u7684type=\u201cfile\u201d \u6587\u4ef6\u65b9\u5f0f\uff0c\u5f53\u7136\u8fd9\u91cc\u9009\u7528\u4ec0\u4e48\u65b9\u5f0f\uff0c\u53d6\u51b3\u4e8e\\n\\n\u6bcf\u4e2a\u4eba\u9879\u76ee\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u8fd9\u91cc\u6211\u9009\u7528\u7684\u662fnacos\uff0ceureka\u7684\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u6211\u8fd9\u8fb9\u5206\u522b\u5bf9\u8fd9\u4e24\u4e2a\u7248\u672c\u8fdb\u884c\u6574\u5408\u6d4b\u8bd5\u5747\u53ef\u4ee5\u901a\u8fc7\u3002\\n\\n\u6ce8\uff1a\u5982\u679c\u6574\u5408eureka\u8bf7\u9009\u7528\u5b98\u65b9\u6700\u65b0\u7248\u672c\u3002\\n\\n# 3.\u6838\u5fc3\u914d\u7f6e\\n\\n```java\\nregistry {\\n  # file \u3001nacos \u3001eureka\u3001redis\u3001zk\\n  type = \\"nacos\\"\\n\\n  nacos {\\n    serverAddr = \\"localhost\\"\\n    namespace = \\"public\\"\\n    cluster = \\"default\\"\\n  }\\n  eureka {\\n    serviceUrl = \\"http://localhost:1001/eureka\\"\\n    application = \\"default\\"\\n    weight = \\"1\\"\\n  }\\n  redis {\\n    serverAddr = \\"localhost:6379\\"\\n    db = \\"0\\"\\n  }\\n  zk {\\n    cluster = \\"default\\"\\n    serverAddr = \\"127.0.0.1:2181\\"\\n    session.timeout = 6000\\n    connect.timeout = 2000\\n  }\\n  file {\\n    name = \\"file.conf\\"\\n  }\\n}\\n\\nconfig {\\n  # file\u3001nacos \u3001apollo\u3001zk\\n  type = \\"nacos\\"\\n\\n  nacos {\\n    serverAddr = \\"localhost\\"\\n    namespace = \\"public\\"\\n    cluster = \\"default\\"\\n  }\\n  apollo {\\n    app.id = \\"fescar-server\\"\\n    apollo.meta = \\"http://192.168.1.204:8801\\"\\n  }\\n  zk {\\n    serverAddr = \\"127.0.0.1:2181\\"\\n    session.timeout = 6000\\n    connect.timeout = 2000\\n  }\\n  file {\\n    name = \\"file.conf\\"\\n  }\\n}\\n``` \\n\u8fd9\u91cc\u8981\u8bf4\u660e\u7684\u662fnacos-config.sh \u662f\u9488\u5bf9\u91c7\u7528nacos\u914d\u7f6e\u4e2d\u5fc3\u7684\u8bdd\uff0c\u9700\u8981\u6267\u884c\u7684\u4e00\u4e9b\u9ed8\u8ba4\u521d\u59cb\u5316\u9488\u5bf9nacos\u7684\u811a\u672c\u3002\\n\\nSEATA\u7684\u542f\u52a8\u65b9\u5f0f\u53c2\u8003\u5b98\u65b9\uff1a \u6ce8\u610f\uff0c\u8fd9\u91cc\u9700\u8981\u8bf4\u660e\u4e0b\uff0c\u547d\u4ee4\u542f\u52a8\u5b98\u65b9\u662f\u901a\u8fc7 \u7a7a\u683c\u533a\u5206\u53c2\u6570\uff0c\u6240\u4ee5\u8981\u6ce8\u610f\u3002\u8fd9\u91cc\u7684IP \u662f\u53ef\u9009\u53c2\u6570\uff0c\u56e0\u4e3a\u6d89\u53ca\u5230DNS\u89e3\u6790\uff0c\u5728\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u6709\u7684\u65f6\u5019\u5728\u6ce8\u518c\u4e2d\u5fc3fescar \u6ce8\u5165nacos\u7684\u65f6\u5019\u4f1a\u901a\u8fc7\u83b7\u53d6\u5730\u5740\uff0c\u5982\u679c\u542f\u52a8\u62a5\u9519\u6ce8\u518c\u53d1\u73b0\u662f\u8ba1\u7b97\u673a\u540d\u79f0\uff0c\u9700\u8981\u6307\u5b9aIP\u3002\u6216\u8005host\u914d\u7f6eIP\u6307\u5411\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u6700\u65b0\u7684SEATA\u4e2d\u5df2\u7ecf\u8fdb\u884c\u4e86\u4fee\u590d\u3002\\n\\n```shell\\nsh fescar-server.sh 8091 /home/admin/fescar/data/ IP\uff08\u53ef\u9009\uff09\\n```\\n\\n\\n\u4e0a\u9762\u63d0\u5230\u8fc7\uff0c\u5728\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\u4e5f\u662f\u9700\u8981file.conf \u548cregistry.conf \u8fd9\u91cc\u7740\u91cd\u7684\u5730\u65b9\u8981\u8bf4\u7684\u662ffile.conf,file.conf\u53ea\u6709\u5f53registry\u4e2d \\n\u914d\u7f6efile\u7684\u65f6\u5019\u624d\u4f1a\u8fdb\u884c\u52a0\u8f7d\uff0c\u5982\u679c\u91c7\u7528ZK\u3001nacos\u3001\u4f5c\u4e3a\u914d\u7f6e\u4e2d\u5fc3\uff0c\u53ef\u4ee5\u5ffd\u7565\u3002\u56e0\u4e3atype\u6307\u5b9a\u5176\u4ed6\u662f\u4e0d\u52a0\u8f7dfile.conf\u7684\uff0c\u4f46\u662f\u5bf9\u5e94\u7684 service.localRgroup.grouplist  \u548c service.vgroupMapping  \u9700\u8981\u5728\u652f\u6301\u914d\u7f6e\u4e2d\u5fc3 \u8fdb\u884c\u6307\u5b9a\uff0c\u8fd9\u6837\u4f60\u7684client \u5728\u542f\u52a8\u540e\u4f1a\u901a\u8fc7\u81ea\u52a8\u4ece\u914d\u7f6e\u4e2d\u5fc3\u83b7\u53d6\u5bf9\u5e94\u7684 SEATA \u670d\u52a1 \u548c\u5730\u5740\u3002\u5982\u679c\u4e0d\u914d\u7f6e\u4f1a\u51fa\u73b0\u65e0\u6cd5\u8fde\u63a5server\u7684\u9519\u8bef\u3002\u5f53\u7136\u5982\u679c\u4f60\u91c7\u7528\u7684eureka\u5728config\u7684\u5730\u65b9\u5c31\u9700\u8981\u91c7\u7528type=\\"file\\" \u76ee\u524dSEATA config\u6682\u65f6\u4e0d\u652f\u6301eureka\u7684\u5f62\u52bf\\n\\n```java\\ntransport {\\n  # tcp udt unix-domain-socket\\n  type = \\"TCP\\"\\n  #NIO NATIVE\\n  server = \\"NIO\\"\\n  #enable heartbeat\\n  heartbeat = true\\n  #thread factory for netty\\n  thread-factory {\\n    boss-thread-prefix = \\"NettyBoss\\"\\n    worker-thread-prefix = \\"NettyServerNIOWorker\\"\\n    server-executor-thread-prefix = \\"NettyServerBizHandler\\"\\n    share-boss-worker = false\\n    client-selector-thread-prefix = \\"NettyClientSelector\\"\\n    client-selector-thread-size = 1\\n    client-worker-thread-prefix = \\"NettyClientWorkerThread\\"\\n    # netty boss thread size,will not be used for UDT\\n    boss-thread-size = 1\\n    #auto default pin or 8\\n    worker-thread-size = 8\\n  }\\n}\\nservice {\\n  #vgroup->rgroup\\n  vgroup_mapping.service-provider-fescar-service-group = \\"default\\"\\n  #only support single node\\n  localRgroup.grouplist = \\"127.0.0.1:8091\\"\\n  #degrade current not support\\n  enableDegrade = false\\n  #disable\\n  disable = false\\n}\\n\\nclient {\\n  async.commit.buffer.limit = 10000\\n  lock {\\n    retry.internal = 10\\n    retry.times = 30\\n  }\\n}\\n```\\n\\n# 4.\u670d\u52a1\u76f8\u5173\\n \u8fd9\u91cc\u6709\u4e24\u4e2a\u5730\u65b9\u9700\u8981\u6ce8\u610f\\n\\n```java\\n    grouplist IP\uff0c\u8fd9\u91cc\u662f\u5f53\u524dfescar-sever\u7684IP\u7aef\u53e3\uff0c\\n    vgroup_mapping\u7684\u914d\u7f6e\u3002\\n```\\n vgroup_mapping.\u670d\u52a1\u540d\u79f0-fescar-service-group,\u8fd9\u91cc \u8981\u8bf4\u4e0b\u670d\u52a1\u540d\u79f0\u5176\u5b9e\u662f\u4f60\u5f53\u524d\u7684consumer \u6216\u8005provider application.properties\u7684\u914d\u7f6e\u7684\u5e94\u7528\u540d\u79f0\uff1aspring.application.name=service-provider\uff0c\u6e90\u4ee3\u7801\u4e2d\u662f \u83b7\u53d6\u5e94\u7528\u540d\u79f0\u4e0e fescar-service-group \u8fdb\u884c\u62fc\u63a5\uff0c\u505akey\u503c\u3002\u540c\u7406value\u662f\u5f53\u524dfescar\u7684\u670d\u52a1\u540d\u79f0\uff0c  cluster = \\"default\\"  / application = \\"default\\"\\n\\n```java\\n     vgroup_mapping.service-provider-fescar-service-group = \\"default\\"\\n      #only support single node\\n      localRgroup.grouplist = \\"127.0.0.1:8091\\"\\n```\\n\u540c\u7406\u65e0\u8bba\u662fprovider \u8fd8\u662fconsumer \u90fd\u9700\u8981\u8fd9\u4e24\u4e2a\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002\\n\\n\u5982\u679c\u4f60\u91c7\u7528nacos\u505a\u914d\u7f6e\u4e2d\u5fc3\uff0c\u9700\u8981\u5728nacos\u901a\u8fc7\u6dfb\u52a0\u914d\u7f6e\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\u6dfb\u52a0\u3002\\n# 5.\u4e8b\u52a1\u4f7f\u7528\\n\u6211\u8fd9\u91cc\u7684\u4ee3\u7801\u903b\u8f91\u662f\u8bf7\u6c42\u901a\u8fc7\u7f51\u5173\u8fdb\u884c\u8d1f\u8f7d\u8f6c\u53d1\u5230\u6211\u7684consumer\u4e0a\uff0c\u5728consumer \u4e2d\u901a\u8fc7fegin\u8fdb\u884cprovider\u8bf7\u6c42\u3002\u5b98\u65b9\u7684\u4f8b\u5b50\u4e2d\u662f\u901a\u8fc7fegin\u8fdb\u884c\u7684\uff0c\u800c\u6211\u4eec\u8fd9\u8fb9\u76f4\u63a5\u901a\u8fc7\u7f51\u5173\u8f6c\u53d1\uff0c\u6240\u4ee5\u5168\u5c40\u4e8b\u52a1\u540c\u5b98\u65b9\u7684demo\u4e00\u6837 \u4e5f\u90fd\u662f\u5728controller\u5c42\u3002\\n\\n```java\\n@RestController\\npublic class DemoController {\\n\\t@Autowired\\n\\tprivate DemoFeignClient demoFeignClient;\\n\\t\\n\\t@Autowired\\n\\tprivate DemoFeignClient2 demoFeignClient2;\\n\\t@GlobalTransactional(timeoutMills = 300000, name = \\"spring-cloud-demo-tx\\")\\n\\t@GetMapping(\\"/getdemo\\")\\n\\tpublic String demo() {\\n\\t\\t\\n\\t\\t// \u8c03\u7528A \u670d\u52a1  \u7b80\u5355save\\n\\t\\tResponseData<Integer> result = demoFeignClient.insertService(\\"test\\",1);\\n\\t\\tif(result.getStatus()==400) {\\n\\t\\t\\tSystem.out.println(result+\\"+++++++++++++++++++++++++++++++++++++++\\");\\n\\t\\t\\tthrow new RuntimeException(\\"this is error1\\");\\n\\t\\t}\\n\\t\\n\\t\\t// \u8c03\u7528B \u670d\u52a1\u3002\u62a5\u9519\u6d4b\u8bd5A \u670d\u52a1\u56de\u6eda\\n\\t\\tResponseData<Integer>  result2 = demoFeignClient2.saveService();\\n\\t\\n\\t\\tif(result2.getStatus()==400) {\\n\\t\\t\\tSystem.out.println(result2+\\"+++++++++++++++++++++++++++++++++++++++\\");\\n\\t\\t\\tthrow new RuntimeException(\\"this is error2\\");\\n\\t\\t}\\n\\n\\t\\treturn \\"SUCCESS\\";\\n\\t}\\n}\\n```\\n\u5230\u6b64\u4e3a\u6b62\u6838\u5fc3\u7684\u4e8b\u52a1\u6574\u5408\u57fa\u672c\u5230\u6b64\u7ed3\u675f\u4e86\uff0c\u6211\u8fd9\u91cc\u662f\u9488\u5bf9A,B \u4e24\u4e2aprovider\u8fdb\u884c\u8c03\u7528\uff0c\u5f53B\u53d1\u751f\u62a5\u9519\u540e\uff0c\u8fdb\u884c\u5168\u5c40\u4e8b\u52a1\u56de\u6eda\u3002\u5f53\u7136\u6bcf\u4e2a\u4e8b\u52a1\u5185\u90e8\u90fd\u53ef\u4ee5\u901a\u8fc7\u81ea\u5df1\u7684\u72ec\u7acb\u672c\u5730\u4e8b\u52a1\u53bb\u5904\u7406\u81ea\u5df1\u672c\u5730\u4e8b\u52a1\u65b9\u5f0f\u3002\\n\\nSEATA\u662f\u901a\u8fc7\u5168\u5c40\u7684XID\u65b9\u5f0f\u8fdb\u884c\u4e8b\u52a1\u7edf\u4e00\u6807\u8bc6\u65b9\u5f0f\u3002\u8fd9\u91cc\u5c31\u4e0d\u5217\u51faSEATA\u9700\u8981\u7528\u7684\u6570\u636e\u5e93\u8868\u3002\u5177\u4f53\u53c2\u8003\uff1a[spring-cloud-fescar \u5b98\u65b9DEMO](https://github.com/spring-cloud-incubator/spring-cloud-alibaba/tree/master/spring-cloud-alibaba-examples/fescar-example)\\n# 5.\u6570\u636e\u4ee3\u7406\\n\\n\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u8bf4\u660e\u5c31\u662f\uff0c\u5728\u5206\u5e93\u670d\u52a1\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e00\u4e2a\u6570\u636e\u5e93\u5185\u90fd\u9700\u8981\u6709\u4e00\u4e2aundo_log\u7684\u6570\u636e\u5e93\u8868\u8fdb\u884cXID\u7edf\u4e00\u5b58\u50a8\u5904\u7406\u3002\\n\\n\u540c\u4e8b\u9488\u5bf9\u6bcf\u4e2a\u63d0\u4f9b\u670d\u52a1\u7684\u9879\u76ee\uff0c\u9700\u8981\u8fdb\u884c\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7684\u4ee3\u7406\u3002\u4e5f\u5c31\u662f\uff1a\\n\\n\u76ee\u524d\u53ea\u652f\u6301Druid\u8fde\u63a5\u6c60\uff0c\u540e\u7eed\u4f1a\u7ee7\u7eed\u652f\u6301\u3002\\n\\n```java\\n@Configuration\\npublic class DatabaseConfiguration {\\n\\n\\t\\n\\t@Bean(destroyMethod = \\"close\\", initMethod = \\"init\\")\\n\\t@ConfigurationProperties(prefix=\\"spring.datasource\\")\\n\\tpublic DruidDataSource druidDataSource() {\\n\\n\\t\\treturn new DruidDataSource();\\n\\t}\\n\\t\\n\\t\\n\\t@Bean\\n\\tpublic DataSourceProxy dataSourceProxy(DruidDataSource druidDataSource) {\\n\\t\\n\\t\\treturn new DataSourceProxy(druidDataSource);\\n\\t}\\n\\t\\n\\n    @Bean\\n    public SqlSessionFactory sqlSessionFactory(DataSourceProxy dataSourceProxy) throws Exception {\\n        SqlSessionFactoryBean factoryBean = new SqlSessionFactoryBean();\\n        factoryBean.setDataSource(dataSourceProxy);    \\n        return factoryBean.getObject();\\n    }\\n}\\n```\\n\u5927\u5bb6\u8981\u6ce8\u610f\u7684\u5c31\u662f\u914d\u7f6e\u6587\u4ef6\u548c\u6570\u636e\u4ee3\u7406\u3002\u5982\u679c\u6ca1\u6709\u8fdb\u884c\u6570\u636e\u6e90\u4ee3\u7406\uff0cundo_log\u662f\u65e0\u6570\u636e\u7684\uff0c\u4e5f\u5c31\u662f\u6ca1\u529e\u8fdb\u884cXID\u7684\u7ba1\u7406\u3002\\n\\n \\n\u672c\u6587\u4f5c\u8005\uff1a\u5927\u83f2.Fei"},{"id":"/seata-analysis-java-client","metadata":{"permalink":"/zh-cn/blog/seata-analysis-java-client","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-analysis-java-client.md","title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e4bSeata-Client\u539f\u7406\u53ca\u6d41\u7a0b\u8be6\u89e3","description":"\u524d\u8a00","date":"2019-04-15T00:00:00.000Z","formattedDate":"2019\u5e744\u670815\u65e5","tags":[],"readingTime":25.585,"hasTruncateMarker":false,"authors":[{"name":"fangliangsheng"}],"frontMatter":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e4bSeata-Client\u539f\u7406\u53ca\u6d41\u7a0b\u8be6\u89e3","author":"fangliangsheng","date":"2019/04/15","keywords":["fescar\u3001seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"]},"prevItem":{"title":"Seata\uff08Fescar\uff09\u5206\u5e03\u5f0f\u4e8b\u52a1 \u6574\u5408 Spring Cloud","permalink":"/zh-cn/blog/integrate-seata-with-spring-cloud"},"nextItem":{"title":"\u6df1\u5ea6\u5256\u6790\u4e00\u7ad9\u5f0f\u5206\u5e03\u5f0f\u4e8b\u52a1\u65b9\u6848Seata-Server","permalink":"/zh-cn/blog/seata-analysis-java-server"}},"content":"## \u524d\u8a00\\n\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u5206\u5e03\u5f0f\u4e8b\u52a1\u662f\u4e00\u4e2a\u5fc5\u987b\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u76ee\u524d\u4f7f\u7528\u8f83\u591a\u7684\u662f\u6700\u7ec8\u4e00\u81f4\u6027\u65b9\u6848\u3002\u81ea\u5e74\u521d\u963f\u91cc\u5f00\u6e90\u4e86Fescar\uff08\u56db\u6708\u521d\u66f4\u540d\u4e3aSeata\uff09\u540e\uff0c\u8be5\u9879\u76ee\u53d7\u5230\u4e86\u6781\u5927\u7684\u5173\u6ce8\u5ea6\uff0c\u76ee\u524d\u5df2\u63a5\u8fd18000Star\u3002[Seata](https://github.com/seata/seata)\u4ee5\u9ad8\u6027\u80fd\u548c\u96f6\u4fb5\u5165\u7684\u65b9\u5f0f\u4e3a\u76ee\u6807\u89e3\u51b3\u5fae\u670d\u52a1\u9886\u57df\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u96be\u9898\uff0c\u76ee\u524d\u6b63\u5904\u4e8e\u5feb\u901f\u8fed\u4ee3\u4e2d\uff0c\u8fd1\u671f\u5c0f\u76ee\u6807\u662f\u751f\u4ea7\u53ef\u7528\u7684Mysql\u7248\u672c\u3002\u5173\u4e8eSeata\u7684\u603b\u4f53\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u67e5\u770b[\u5b98\u65b9WIKI](https://github.com/seata/seata/wiki/%E6%A6%82%E8%A7%88)\u83b7\u5f97\u66f4\u591a\u66f4\u5168\u9762\u7684\u5185\u5bb9\u4ecb\u7ecd\u3002\\n\\n\u672c\u6587\u4e3b\u8981\u57fa\u4e8espring cloud+spring jpa+spring cloud alibaba fescar+mysql+seata\u7684\u7ed3\u6784\uff0c\u642d\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684demo\uff0c\u901a\u8fc7seata\u7684debug\u65e5\u5fd7\u548c\u6e90\u4ee3\u7801\uff0c\u4ececlient\u7aef\uff08RM\u3001TM\uff09\u7684\u89d2\u5ea6\u5206\u6790\u8bf4\u660e\u5176\u5de5\u4f5c\u6d41\u7a0b\u53ca\u539f\u7406\u3002\\n\\n\u6587\u4e2d\u4ee3\u7801\u57fa\u4e8efescar-0.4.1\uff0c\u7531\u4e8e\u9879\u76ee\u521a\u66f4\u540d\u4e3aseata\u4e0d\u4e45\uff0c\u4f8b\u5982\u4e00\u4e9b\u5305\u540d\u3001\u7c7b\u540d\u3001jar\u5305\u540d\u79f0\u8fd8\u90fd\u662ffescar\u7684\u547d\u540d\uff0c\u6545\u4e0b\u6587\u4e2d\u4ecd\u4f7f\u7528fescar\u8fdb\u884c\u8868\u8ff0\u3002\\n\\n\u793a\u4f8b\u9879\u76ee\uff1a[https://github.com/fescar-group/fescar-samples/tree/master/springcloud-jpa-seata](https://github.com/fescar-group/fescar-samples/tree/master/springcloud-jpa-seata)\\n## \u76f8\u5173\u6982\u5ff5\\n- XID\uff1a\u5168\u5c40\u4e8b\u52a1\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u7531ip:port:sequence\u7ec4\u6210\\n- Transaction Coordinator (TC)\uff1a\u4e8b\u52a1\u534f\u8c03\u5668\uff0c\u7ef4\u62a4\u5168\u5c40\u4e8b\u52a1\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u8d1f\u8d23\u534f\u8c03\u5e76\u9a71\u52a8\u5168\u5c40\u4e8b\u52a1\u7684\u63d0\u4ea4\u6216\u56de\u6eda\\n- Transaction Manager (TM )\uff1a\u63a7\u5236\u5168\u5c40\u4e8b\u52a1\u7684\u8fb9\u754c\uff0c\u8d1f\u8d23\u5f00\u542f\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\uff0c\u5e76\u6700\u7ec8\u53d1\u8d77\u5168\u5c40\u63d0\u4ea4\u6216\u5168\u5c40\u56de\u6eda\u7684\u51b3\u8bae\\n- Resource Manager (RM)\uff1a\u63a7\u5236\u5206\u652f\u4e8b\u52a1\uff0c\u8d1f\u8d23\u5206\u652f\u6ce8\u518c\u3001\u72b6\u6001\u6c47\u62a5\uff0c\u5e76\u63a5\u6536\u4e8b\u52a1\u534f\u8c03\u5668\u7684\u6307\u4ee4\uff0c\u9a71\u52a8\u5206\u652f\uff08\u672c\u5730\uff09\u4e8b\u52a1\u7684\u63d0\u4ea4\u548c\u56de\u6eda\\n## \u5206\u5e03\u5f0f\u6846\u67b6\u652f\u6301\\nFescar\u4f7f\u7528XID\u8868\u793a\u4e00\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0cXID\u9700\u8981\u5728\u4e00\u6b21\u5206\u5e03\u5f0f\u4e8b\u52a1\u8bf7\u6c42\u6240\u6d89\u7684\u7cfb\u7edf\u4e2d\u8fdb\u884c\u4f20\u9012\uff0c\u4ece\u800c\u5411feacar-server\u53d1\u9001\u5206\u652f\u4e8b\u52a1\u7684\u5904\u7406\u60c5\u51b5\uff0c\u4ee5\u53ca\u63a5\u6536feacar-server\u7684commit\u3001rollback\u6307\u4ee4\u3002\\nFescar\u5b98\u65b9\u5df2\u652f\u6301\u5168\u7248\u672c\u7684dubbo\u534f\u8bae\uff0c\u800c\u5bf9\u4e8espring cloud\uff08spring-boot\uff09\u7684\u5206\u5e03\u5f0f\u9879\u76ee\u793e\u533a\u4e5f\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u5b9e\u73b0\\n\\n```xml\\n<dependency>\\n    <groupId>org.springframework.cloud</groupId>\\n    <artifactId>spring-cloud-alibaba-fescar</artifactId>\\n    <version>2.1.0.BUILD-SNAPSHOT</version>\\n</dependency>\\n```\\n\u8be5\u7ec4\u4ef6\u5b9e\u73b0\u4e86\u57fa\u4e8eRestTemplate\u3001Feign\u901a\u4fe1\u65f6\u7684XID\u4f20\u9012\u529f\u80fd\u3002\\n## \u4e1a\u52a1\u903b\u8f91\\n\u4e1a\u52a1\u903b\u8f91\u662f\u7ecf\u5178\u7684\u4e0b\u8ba2\u5355\u3001\u6263\u4f59\u989d\u3001\u51cf\u5e93\u5b58\u6d41\u7a0b\u3002\\n\u6839\u636e\u6a21\u5757\u5212\u5206\u4e3a\u4e09\u4e2a\u72ec\u7acb\u7684\u670d\u52a1\uff0c\u4e14\u5206\u522b\u8fde\u63a5\u5bf9\u5e94\u7684\u6570\u636e\u5e93\\n\\n - \u8ba2\u5355\uff1aorder-server\\n - \u8d26\u6237\uff1aaccount-server\\n - \u5e93\u5b58\uff1astorage-server\\n\\n\u53e6\u5916\u8fd8\u6709\u53d1\u8d77\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u4e1a\u52a1\u7cfb\u7edf\\n\\n - \u4e1a\u52a1\uff1abusiness-server\\n \\n\u9879\u76ee\u7ed3\u6784\u5982\u4e0b\u56fe\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](/img/blog/20190410114411366.png)\\n \\n**\u6b63\u5e38\u4e1a\u52a1**\\n   1. business\u53d1\u8d77\u8d2d\u4e70\u8bf7\u6c42\\n   2. storage\u6263\u51cf\u5e93\u5b58\\n   3. order\u521b\u5efa\u8ba2\u5355\\n   4. account\u6263\u51cf\u4f59\u989d\\n   \\n**\u5f02\u5e38\u4e1a\u52a1**\\n   1. business\u53d1\u8d77\u8d2d\u4e70\u8bf7\u6c42\\n   2. storage\u6263\u51cf\u5e93\u5b58\\n   3. order\u521b\u5efa\u8ba2\u5355\\n   4. account`\u6263\u51cf\u4f59\u989d\u5f02\u5e38`\\n   \\n\u6b63\u5e38\u6d41\u7a0b\u4e0b2\u30013\u30014\u6b65\u7684\u6570\u636e\u6b63\u5e38\u66f4\u65b0\u5168\u5c40commit\uff0c\u5f02\u5e38\u6d41\u7a0b\u4e0b\u7684\u6570\u636e\u5219\u7531\u4e8e\u7b2c4\u6b65\u7684\u5f02\u5e38\u62a5\u9519\u5168\u5c40\u56de\u6eda\u3002\\n\\n## \u914d\u7f6e\u6587\u4ef6\\nfescar\u7684\u914d\u7f6e\u5165\u53e3\u6587\u4ef6\u662f[registry.conf](https://github.com/seata/seata/blob/develop/config/src/main/resources/registry.conf),\u67e5\u770b\u4ee3\u7801[ConfigurationFactory](https://github.com/seata/seata/blob/develop/config/src/main/java/com/alibaba/fescar/config/ConfigurationFactory.java)\u5f97\u77e5\u76ee\u524d\u8fd8\u4e0d\u80fd\u6307\u5b9a\u8be5\u914d\u7f6e\u6587\u4ef6\uff0c\u6240\u4ee5\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\u53ea\u80fd\u4e3aregistry.conf\\n\\n```java\\nprivate static final String REGISTRY_CONF = \\"registry.conf\\";\\npublic static final Configuration FILE_INSTANCE = new FileConfiguration(REGISTRY_CONF);\\n```\\n\\n\u5728`registry`\u4e2d\u53ef\u4ee5\u6307\u5b9a\u5177\u4f53\u914d\u7f6e\u7684\u5f62\u5f0f\uff0c\u9ed8\u8ba4\u4f7f\u7528file\u7c7b\u578b\uff0c\u5728file.conf\u4e2d\u67093\u90e8\u5206\u914d\u7f6e\u5185\u5bb9\\n\\n 1. transport\\n     transport\u90e8\u5206\u7684\u914d\u7f6e\u5bf9\u5e94[NettyServerConfig](https://github.com/seata/seata/blob/develop/core/src/main/java/com/alibaba/fescar/core/rpc/netty/NettyServerConfig.java)\u7c7b\uff0c\u7528\u4e8e\u5b9a\u4e49Netty\u76f8\u5173\u7684\u53c2\u6570\uff0cTM\u3001RM\u4e0efescar-server\u4e4b\u95f4\u4f7f\u7528Netty\u8fdb\u884c\u901a\u4fe1\\n 2. service\\n\\n```js\\n\\t service {\\n\\t  #vgroup->rgroup\\n\\t  vgroup_mapping.my_test_tx_group = \\"default\\"\\n\\t  #\u914d\u7f6eClient\u8fde\u63a5TC\u7684\u5730\u5740\\n\\t  default.grouplist = \\"127.0.0.1:8091\\"\\n\\t  #degrade current not support\\n\\t  enableDegrade = false\\n\\t  #disable\\n\\t  \u662f\u5426\u542f\u7528seata\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\\n\\t  disableGlobalTransaction = false\\n\\t}\\n```\\n 3. client\\n\\n```js\\n\\tclient {\\n\\t  #RM\u63a5\u6536TC\u7684commit\u901a\u77e5\u540e\u7f13\u51b2\u4e0a\u9650\\n\\t  async.commit.buffer.limit = 10000\\n\\t  lock {\\n\\t    retry.internal = 10\\n\\t    retry.times = 30\\n\\t  }\\n\\t}\\n```\\n## \u6570\u636e\u6e90Proxy\\n\u9664\u4e86\u524d\u9762\u7684\u914d\u7f6e\u6587\u4ef6\uff0cfescar\u5728AT\u6a21\u5f0f\u4e0b\u7a0d\u5fae\u6709\u70b9\u4ee3\u7801\u91cf\u7684\u5730\u65b9\u5c31\u662f\u5bf9\u6570\u636e\u6e90\u7684\u4ee3\u7406\u6307\u5b9a\uff0c\u4e14\u76ee\u524d\u53ea\u80fd\u57fa\u4e8e`DruidDataSource`\u7684\u4ee3\u7406\u3002\\n\u6ce8\uff1a\u5728\u6700\u65b0\u53d1\u5e03\u76840.4.2\u7248\u672c\u4e2d\u5df2\u652f\u6301\u4efb\u610f\u6570\u636e\u6e90\u7c7b\u578b\\n\\n```java\\n@Bean\\n@ConfigurationProperties(prefix = \\"spring.datasource\\")\\npublic DruidDataSource druidDataSource() {\\n    DruidDataSource druidDataSource = new DruidDataSource();\\n    return druidDataSource;\\n}\\n\\n@Primary\\n@Bean(\\"dataSource\\")\\npublic DataSourceProxy dataSource(DruidDataSource druidDataSource) {\\n    return new DataSourceProxy(druidDataSource);\\n}\\n```\\n\u4f7f\u7528`DataSourceProxy`\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u5f15\u5165`ConnectionProxy`,fescar\u65e0\u4fb5\u5165\u7684\u4e00\u65b9\u9762\u5c31\u4f53\u73b0\u5728`ConnectionProxy`\u7684\u5b9e\u73b0\u4e0a\uff0c\u5373\u5206\u652f\u4e8b\u52a1\u52a0\u5165\u5168\u5c40\u4e8b\u52a1\u7684\u5207\u5165\u70b9\u662f\u5728\u672c\u5730\u4e8b\u52a1\u7684`commit`\u9636\u6bb5\uff0c\u8fd9\u6837\u8bbe\u8ba1\u53ef\u4ee5\u4fdd\u8bc1\u4e1a\u52a1\u6570\u636e\u4e0e`undo_log`\u662f\u5728\u4e00\u4e2a\u672c\u5730\u4e8b\u52a1\u4e2d\u3002\\n\\n`undo_log`\u662f\u9700\u8981\u5728\u4e1a\u52a1\u5e93\u4e0a\u521b\u5efa\u7684\u4e00\u4e2a\u8868\uff0cfescar\u4f9d\u8d56\u8be5\u8868\u8bb0\u5f55\u6bcf\u7b14\u5206\u652f\u4e8b\u52a1\u7684\u72b6\u6001\u53ca\u4e8c\u9636\u6bb5`rollback`\u7684\u56de\u653e\u6570\u636e\u3002\u4e0d\u7528\u62c5\u5fc3\u8be5\u8868\u7684\u6570\u636e\u91cf\u8fc7\u5927\u5f62\u6210\u5355\u70b9\u95ee\u9898\uff0c\u5728\u5168\u5c40\u4e8b\u52a1`commit`\u7684\u573a\u666f\u4e0b\u4e8b\u52a1\u5bf9\u5e94\u7684`undo_log`\u4f1a\u5f02\u6b65\u5220\u9664\u3002\\n\\n```sql\\nCREATE TABLE `undo_log` (\\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\\n  `branch_id` bigint(20) NOT NULL,\\n  `xid` varchar(100) NOT NULL,\\n  `rollback_info` longblob NOT NULL,\\n  `log_status` int(11) NOT NULL,\\n  `log_created` datetime NOT NULL,\\n  `log_modified` datetime NOT NULL,\\n  `ext` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `ux_undo_log` (`xid`,`branch_id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;\\n```\\n## \u542f\u52a8Server\\n\u524d\u5f80[https://github.com/seata/seata/releases](https://github.com/seata/seata/releases) \u4e0b\u8f7d\u4e0eClient\u7248\u672c\u5bf9\u5e94\u7684fescar-server,\u907f\u514d\u7531\u4e8e\u7248\u672c\u7684\u4e0d\u540c\u5bfc\u81f4\u7684\u534f\u8bae\u4e0d\u4e00\u81f4\u95ee\u9898\\n\u8fdb\u5165\u89e3\u538b\u4e4b\u540e\u7684 bin \u76ee\u5f55\uff0c\u6267\u884c\\n\\n```shell\\n./fescar-server.sh 8091 ../data\\n```\\n\u542f\u52a8\u6210\u529f\u8f93\u51fa\\n\\n```shell\\n2019-04-09 20:27:24.637 INFO [main]c.a.fescar.core.rpc.netty.AbstractRpcRemotingServer.start:152 -Server started ... \\n```\\n## \u542f\u52a8Client\\nfescar\u7684\u52a0\u8f7d\u5165\u53e3\u7c7b\u4f4d\u4e8e[GlobalTransactionAutoConfiguration](https://github.com/spring-cloud-incubator/spring-cloud-alibaba/blob/finchley/spring-cloud-alibaba-fescar/src/main/java/org/springframework/cloud/alibaba/fescar/GlobalTransactionAutoConfiguration.java)\uff0c\u5bf9\u57fa\u4e8espring boot\u7684\u9879\u76ee\u80fd\u591f\u81ea\u52a8\u52a0\u8f7d\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u793a\u4f8b\u5316`GlobalTransactionScanner`\\n\\n```java\\n@Configuration\\n@EnableConfigurationProperties({FescarProperties.class})\\npublic class GlobalTransactionAutoConfiguration {\\n    private final ApplicationContext applicationContext;\\n    private final FescarProperties fescarProperties;\\n\\n    public GlobalTransactionAutoConfiguration(ApplicationContext applicationContext, FescarProperties fescarProperties) {\\n        this.applicationContext = applicationContext;\\n        this.fescarProperties = fescarProperties;\\n    }\\n\\n\\t/**\\n\\t* \u793a\u4f8b\u5316GlobalTransactionScanner\\n\\t* scanner\u4e3aclient\u521d\u59cb\u5316\u7684\u53d1\u8d77\u7c7b\\n\\t*/\\n    @Bean\\n    public GlobalTransactionScanner globalTransactionScanner() {\\n        String applicationName = this.applicationContext.getEnvironment().getProperty(\\"spring.application.name\\");\\n        String txServiceGroup = this.fescarProperties.getTxServiceGroup();\\n        if (StringUtils.isEmpty(txServiceGroup)) {\\n            txServiceGroup = applicationName + \\"-fescar-service-group\\";\\n            this.fescarProperties.setTxServiceGroup(txServiceGroup);\\n        }\\n\\t\\t\\n        return new GlobalTransactionScanner(applicationName, txServiceGroup);\\n    }\\n}\\n```\\n\u53ef\u4ee5\u770b\u5230\u652f\u6301\u4e00\u4e2a\u914d\u7f6e\u9879FescarProperties\uff0c\u7528\u4e8e\u914d\u7f6e\u4e8b\u52a1\u5206\u7ec4\u540d\u79f0\\n\\n```json\\nspring.cloud.alibaba.fescar.tx-service-group=my_test_tx_group\\n```\\n\u5982\u679c\u4e0d\u6307\u5b9a\u670d\u52a1\u7ec4\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528spring.application.name+ -fescar-service-group\u751f\u6210\u540d\u79f0\uff0c\u6240\u4ee5\u4e0d\u6307\u5b9aspring.application.name\u542f\u52a8\u4f1a\u62a5\u9519\\n\\n```java\\n@ConfigurationProperties(\\"spring.cloud.alibaba.fescar\\")\\npublic class FescarProperties {\\n    private String txServiceGroup;\\n\\n    public FescarProperties() {\\n    }\\n\\n    public String getTxServiceGroup() {\\n        return this.txServiceGroup;\\n    }\\n\\n    public void setTxServiceGroup(String txServiceGroup) {\\n        this.txServiceGroup = txServiceGroup;\\n    }\\n}\\n```\\n\u83b7\u53d6applicationId\u548ctxServiceGroup\u540e\uff0c\u521b\u5efa[GlobalTransactionScanner](https://github.com/seata/seata/blob/develop/spring/src/main/java/com/alibaba/fescar/spring/annotation/GlobalTransactionScanner.java)\u5bf9\u8c61\uff0c\u4e3b\u8981\u770b\u7c7b\u4e2dinitClient\u65b9\u6cd5\\n\\n```java\\nprivate void initClient() {\\n    if (StringUtils.isNullOrEmpty(applicationId) || StringUtils.isNullOrEmpty(txServiceGroup)) {\\n        throw new IllegalArgumentException(\\n            \\"applicationId: \\" + applicationId + \\", txServiceGroup: \\" + txServiceGroup);\\n    }\\n    //init TM\\n    TMClient.init(applicationId, txServiceGroup);\\n\\n    //init RM\\n    RMClient.init(applicationId, txServiceGroup);\\n  \\n}\\n```\\n\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u770b\u5230\u521d\u59cb\u5316\u4e86`TMClient`\u548c`RMClient`\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u670d\u52a1\u65e2\u53ef\u4ee5\u662fTM\u89d2\u8272\u4e5f\u53ef\u4ee5\u662fRM\u89d2\u8272\uff0c\u81f3\u4e8e\u4ec0\u4e48\u65f6\u5019\u662fTM\u6216\u8005RM\u5219\u8981\u770b\u5728\u4e00\u6b21\u5168\u5c40\u4e8b\u52a1\u4e2d`@GlobalTransactional`\u6ce8\u89e3\u6807\u6ce8\u5728\u54ea\u3002\\nClient\u521b\u5efa\u7684\u7ed3\u679c\u662f\u4e0eTC\u7684\u4e00\u4e2aNetty\u8fde\u63a5\uff0c\u6240\u4ee5\u5728\u542f\u52a8\u65e5\u5fd7\u4e2d\u53ef\u4ee5\u770b\u5230\u4e24\u4e2aNetty Channel\uff0c\u5176\u4e2d\u6807\u660e\u4e86transactionRole\u5206\u522b\u4e3a`TMROLE`\u548c`RMROLE`\\n\\n```java\\n2019-04-09 13:42:57.417  INFO 93715 --- [imeoutChecker_1] c.a.f.c.rpc.netty.NettyPoolableFactory   : NettyPool create channel to {\\"address\\":\\"127.0.0.1:8091\\",\\"message\\":{\\"applicationId\\":\\"business-service\\",\\"byteBuffer\\":{\\"char\\":\\"\\\\u0000\\",\\"direct\\":false,\\"double\\":0.0,\\"float\\":0.0,\\"int\\":0,\\"long\\":0,\\"readOnly\\":false,\\"short\\":0},\\"transactionServiceGroup\\":\\"my_test_tx_group\\",\\"typeCode\\":101,\\"version\\":\\"0.4.1\\"},\\"transactionRole\\":\\"TMROLE\\"}\\n2019-04-09 13:42:57.505  INFO 93715 --- [imeoutChecker_1] c.a.f.c.rpc.netty.NettyPoolableFactory   : NettyPool create channel to {\\"address\\":\\"127.0.0.1:8091\\",\\"message\\":{\\"applicationId\\":\\"business-service\\",\\"byteBuffer\\":{\\"char\\":\\"\\\\u0000\\",\\"direct\\":false,\\"double\\":0.0,\\"float\\":0.0,\\"int\\":0,\\"long\\":0,\\"readOnly\\":false,\\"short\\":0},\\"transactionServiceGroup\\":\\"my_test_tx_group\\",\\"typeCode\\":103,\\"version\\":\\"0.4.1\\"},\\"transactionRole\\":\\"RMROLE\\"}\\n2019-04-09 13:42:57.629 DEBUG 93715 --- [lector_TMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Send:RegisterTMRequest{applicationId=\'business-service\', transactionServiceGroup=\'my_test_tx_group\'}\\n2019-04-09 13:42:57.629 DEBUG 93715 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Send:RegisterRMRequest{resourceIds=\'null\', applicationId=\'business-service\', transactionServiceGroup=\'my_test_tx_group\'}\\n2019-04-09 13:42:57.699 DEBUG 93715 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Receive:version=0.4.1,extraData=null,identified=true,resultCode=null,msg=null,messageId:1\\n2019-04-09 13:42:57.699 DEBUG 93715 --- [lector_TMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Receive:version=0.4.1,extraData=null,identified=true,resultCode=null,msg=null,messageId:2\\n2019-04-09 13:42:57.701 DEBUG 93715 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.AbstractRpcRemoting    : com.alibaba.fescar.core.rpc.netty.RmRpcClient@3b06d101 msgId:1, future :com.alibaba.fescar.core.protocol.MessageFuture@28bb1abd, body:version=0.4.1,extraData=null,identified=true,resultCode=null,msg=null\\n2019-04-09 13:42:57.701 DEBUG 93715 --- [lector_TMROLE_1] c.a.f.c.rpc.netty.AbstractRpcRemoting    : com.alibaba.fescar.core.rpc.netty.TmRpcClient@65fc3fb7 msgId:2, future :com.alibaba.fescar.core.protocol.MessageFuture@9a1e3df, body:version=0.4.1,extraData=null,identified=true,resultCode=null,msg=null\\n2019-04-09 13:42:57.710  INFO 93715 --- [imeoutChecker_1] c.a.fescar.core.rpc.netty.RmRpcClient    : register RM success. server version:0.4.1,channel:[id: 0xe6468995, L:/127.0.0.1:57397 - R:/127.0.0.1:8091]\\n2019-04-09 13:42:57.710  INFO 93715 --- [imeoutChecker_1] c.a.f.c.rpc.netty.NettyPoolableFactory   : register success, cost 114 ms, version:0.4.1,role:TMROLE,channel:[id: 0xd22fe0c5, L:/127.0.0.1:57398 - R:/127.0.0.1:8091]\\n2019-04-09 13:42:57.711  INFO 93715 --- [imeoutChecker_1] c.a.f.c.rpc.netty.NettyPoolableFactory   : register success, cost 125 ms, version:0.4.1,role:RMROLE,channel:[id: 0xe6468995, L:/127.0.0.1:57397 - R:/127.0.0.1:8091]\\n\\n```\\n\u65e5\u5fd7\u4e2d\u53ef\u4ee5\u770b\u5230\\n1. \u521b\u5efaNetty\u8fde\u63a5\\n2. \u53d1\u9001\u6ce8\u518c\u8bf7\u6c42\\n3. \u5f97\u5230\u54cd\u5e94\u7ed3\u679c\\n4. `RmRpcClient`\u3001`TmRpcClient`\u6210\u529f\u5b9e\u4f8b\u5316\\n## TM\u5904\u7406\u6d41\u7a0b\\n\u5728\u672c\u4f8b\u4e2d\uff0cTM\u7684\u89d2\u8272\u662fbusiness-service,BusinessService\u7684purchase\u65b9\u6cd5\u6807\u6ce8\u4e86`@GlobalTransactional`\u6ce8\u89e3\\n\\n```java\\n@Service\\npublic class BusinessService {\\n\\n    @Autowired\\n    private StorageFeignClient storageFeignClient;\\n    @Autowired\\n    private OrderFeignClient orderFeignClient;\\n\\n    @GlobalTransactional\\n    public void purchase(String userId, String commodityCode, int orderCount){\\n        storageFeignClient.deduct(commodityCode, orderCount);\\n\\n        orderFeignClient.create(userId, commodityCode, orderCount);\\n    }\\n}\\n```\\n\u65b9\u6cd5\u8c03\u7528\u540e\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\uff0c\u9996\u5148\u5173\u6ce8`@GlobalTransactional`\u6ce8\u89e3\u7684\u4f5c\u7528\uff0c\u5728[GlobalTransactionalInterceptor](https://github.com/seata/seata/blob/develop/spring/src/main/java/com/alibaba/fescar/spring/annotation/GlobalTransactionalInterceptor.java)\u4e2d\u88ab\u62e6\u622a\u5904\u7406\\n\\n```java\\n/**\\n * AOP\u62e6\u622a\u65b9\u6cd5\u8c03\u7528\\n */\\n@Override\\npublic Object invoke(final MethodInvocation methodInvocation) throws Throwable {\\n    Class<?> targetClass = (methodInvocation.getThis() != null ? AopUtils.getTargetClass(methodInvocation.getThis()) : null);\\n    Method specificMethod = ClassUtils.getMostSpecificMethod(methodInvocation.getMethod(), targetClass);\\n    final Method method = BridgeMethodResolver.findBridgedMethod(specificMethod);\\n\\n\\t//\u83b7\u53d6\u65b9\u6cd5GlobalTransactional\u6ce8\u89e3\\n    final GlobalTransactional globalTransactionalAnnotation = getAnnotation(method, GlobalTransactional.class);\\n    final GlobalLock globalLockAnnotation = getAnnotation(method, GlobalLock.class);\\n    \\n    //\u5982\u679c\u65b9\u6cd5\u6709GlobalTransactional\u6ce8\u89e3\uff0c\u5219\u62e6\u622a\u5230\u76f8\u5e94\u65b9\u6cd5\u5904\u7406\\n    if (globalTransactionalAnnotation != null) {\\n        return handleGlobalTransaction(methodInvocation, globalTransactionalAnnotation);\\n    } else if (globalLockAnnotation != null) {\\n        return handleGlobalLock(methodInvocation);\\n    } else {\\n        return methodInvocation.proceed();\\n    }\\n}\\n```\\n`handleGlobalTransaction`\u65b9\u6cd5\u4e2d\u5bf9[TransactionalTemplate](https://github.com/seata/seata/blob/develop/tm/src/main/java/com/alibaba/fescar/tm/api/TransactionalTemplate.java)\u7684execute\u8fdb\u884c\u4e86\u8c03\u7528\uff0c\u4ece\u7c7b\u540d\u53ef\u4ee5\u770b\u5230\u8fd9\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u6a21\u7248\u65b9\u6cd5\uff0c\u5b83\u5b9a\u4e49\u4e86TM\u5bf9\u5168\u5c40\u4e8b\u52a1\u5904\u7406\u7684\u6807\u51c6\u6b65\u9aa4\uff0c\u6ce8\u91ca\u5df2\u7ecf\u6bd4\u8f83\u6e05\u695a\u4e86\\n\\n```java\\npublic Object execute(TransactionalExecutor business) throws TransactionalExecutor.ExecutionException {\\n    // 1. get or create a transaction\\n    GlobalTransaction tx = GlobalTransactionContext.getCurrentOrCreate();\\n\\n    try {\\n        // 2. begin transaction\\n        try {\\n            triggerBeforeBegin();\\n            tx.begin(business.timeout(), business.name());\\n            triggerAfterBegin();\\n        } catch (TransactionException txe) {\\n            throw new TransactionalExecutor.ExecutionException(tx, txe,\\n                TransactionalExecutor.Code.BeginFailure);\\n        }\\n        Object rs = null;\\n        try {\\n            // Do Your Business\\n            rs = business.execute();\\n        } catch (Throwable ex) {\\n            // 3. any business exception, rollback.\\n            try {\\n                triggerBeforeRollback();\\n                tx.rollback();\\n                triggerAfterRollback();\\n                // 3.1 Successfully rolled back\\n                throw new TransactionalExecutor.ExecutionException(tx, TransactionalExecutor.Code.RollbackDone, ex);\\n            } catch (TransactionException txe) {\\n                // 3.2 Failed to rollback\\n                throw new TransactionalExecutor.ExecutionException(tx, txe,\\n                    TransactionalExecutor.Code.RollbackFailure, ex);\\n            }\\n        }\\n        // 4. everything is fine, commit.\\n        try {\\n            triggerBeforeCommit();\\n            tx.commit();\\n            triggerAfterCommit();\\n        } catch (TransactionException txe) {\\n            // 4.1 Failed to commit\\n            throw new TransactionalExecutor.ExecutionException(tx, txe,\\n                TransactionalExecutor.Code.CommitFailure);\\n        }\\n        return rs;\\n    } finally {\\n        //5. clear\\n        triggerAfterCompletion();\\n        cleanUp();\\n    }\\n}\\n```\\n\u901a\u8fc7[DefaultGlobalTransaction](https://github.com/seata/seata/blob/develop/tm/src/main/java/com/alibaba/fescar/tm/api/DefaultGlobalTransaction.java)\u7684begin\u65b9\u6cd5\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\\n\\n```java\\npublic void begin(int timeout, String name) throws TransactionException {\\n    if (role != GlobalTransactionRole.Launcher) {\\n        check();\\n        if (LOGGER.isDebugEnabled()) {\\n            LOGGER.debug(\\"Ignore Begin(): just involved in global transaction [\\" + xid + \\"]\\");\\n        }\\n        return;\\n    }\\n    if (xid != null) {\\n        throw new IllegalStateException();\\n    }\\n    if (RootContext.getXID() != null) {\\n        throw new IllegalStateException();\\n    }\\n    //\u5177\u4f53\u5f00\u542f\u4e8b\u52a1\u7684\u65b9\u6cd5\uff0c\u83b7\u53d6TC\u8fd4\u56de\u7684XID\\n    xid = transactionManager.begin(null, null, name, timeout);\\n    status = GlobalStatus.Begin;\\n    RootContext.bind(xid);\\n    if (LOGGER.isDebugEnabled()) {\\n        LOGGER.debug(\\"Begin a NEW global transaction [\\" + xid + \\"]\\");\\n    }\\n}\\n```\\n\u65b9\u6cd5\u5f00\u5934\u5904`if (role != GlobalTransactionRole.Launcher)`\u5bf9role\u7684\u5224\u65ad\u6709\u5173\u952e\u7684\u4f5c\u7528\uff0c\u8868\u660e\u5f53\u524d\u662f\u5168\u5c40\u4e8b\u52a1\u7684\u53d1\u8d77\u8005\uff08Launcher\uff09\u8fd8\u662f\u53c2\u4e0e\u8005\uff08Participant\uff09\u3002\u5982\u679c\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u4e0b\u6e38\u7cfb\u7edf\u65b9\u6cd5\u4e2d\u4e5f\u52a0\u4e0a`@GlobalTransactional`\u6ce8\u89e3\uff0c\u90a3\u4e48\u5b83\u7684\u89d2\u8272\u5c31\u662fParticipant\uff0c\u4f1a\u5ffd\u7565\u540e\u9762\u7684begin\u76f4\u63a5return\uff0c\u800c\u5224\u65ad\u662fLauncher\u8fd8\u662fParticipant\u662f\u6839\u636e\u5f53\u524d\u4e0a\u4e0b\u6587\u662f\u5426\u5df2\u5b58\u5728XID\u6765\u5224\u65ad\uff0c\u6ca1\u6709XID\u7684\u5c31\u662fLauncher\uff0c\u5df2\u7ecf\u5b58\u5728XID\u7684\u5c31\u662fParticipant.\\n\u7531\u6b64\u53ef\u89c1\uff0c\u5168\u5c40\u4e8b\u52a1\u7684\u521b\u5efa\u53ea\u80fd\u7531Launcher\u6267\u884c\uff0c\u800c\u4e00\u6b21\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u4e5f\u53ea\u6709\u4e00\u4e2aLauncher\u5b58\u5728\u3002\\n\\n[DefaultTransactionManager](https://github.com/seata/seata/blob/develop/tm/src/main/java/com/alibaba/fescar/tm/DefaultTransactionManager.java)\u8d1f\u8d23TM\u4e0eTC\u901a\u8baf\uff0c\u53d1\u9001begin\u3001commit\u3001rollback\u6307\u4ee4\\n\\n```java\\n@Override\\npublic String begin(String applicationId, String transactionServiceGroup, String name, int timeout)\\n    throws TransactionException {\\n    GlobalBeginRequest request = new GlobalBeginRequest();\\n    request.setTransactionName(name);\\n    request.setTimeout(timeout);\\n    GlobalBeginResponse response = (GlobalBeginResponse)syncCall(request);\\n    return response.getXid();\\n}\\n```\\n\u81f3\u6b64\u62ff\u5230fescar-server\u8fd4\u56de\u7684XID\u8868\u793a\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\u521b\u5efa\u6210\u529f\uff0c\u65e5\u5fd7\u4e2d\u4e5f\u53cd\u5e94\u4e86\u4e0a\u8ff0\u6d41\u7a0b\\n\\n```java\\n2019-04-09 13:46:57.417 DEBUG 31326 --- [nio-8084-exec-1] c.a.f.c.rpc.netty.AbstractRpcRemoting    : offer message: timeout=60000,transactionName=purchase(java.lang.String,java.lang.String,int)\\n2019-04-09 13:46:57.417 DEBUG 31326 --- [geSend_TMROLE_1] c.a.f.c.rpc.netty.AbstractRpcRemoting    : write message:FescarMergeMessage timeout=60000,transactionName=purchase(java.lang.String,java.lang.String,int), channel:[id: 0xa148545e, L:/127.0.0.1:56120 - R:/127.0.0.1:8091],active?true,writable?true,isopen?true\\n2019-04-09 13:46:57.418 DEBUG 31326 --- [lector_TMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Send:FescarMergeMessage timeout=60000,transactionName=purchase(java.lang.String,java.lang.String,int)\\n2019-04-09 13:46:57.421 DEBUG 31326 --- [lector_TMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Receive:MergeResultMessage com.alibaba.fescar.core.protocol.transaction.GlobalBeginResponse@2dc480dc,messageId:1196\\n2019-04-09 13:46:57.421 DEBUG 31326 --- [nio-8084-exec-1] c.a.fescar.core.context.RootContext      : bind 192.168.224.93:8091:2008502699\\n2019-04-09 13:46:57.421 DEBUG 31326 --- [nio-8084-exec-1] c.a.f.tm.api.DefaultGlobalTransaction    : Begin a NEW global transaction [192.168.224.93:8091:2008502699]\\n```\\n\u5168\u5c40\u4e8b\u52a1\u521b\u5efa\u540e\uff0c\u5c31\u5f00\u59cb\u6267\u884cbusiness.execute()\uff0c\u5373\u4e1a\u52a1\u4ee3\u7801`storageFeignClient.deduct(commodityCode, orderCount)`\u8fdb\u5165RM\u5904\u7406\u6d41\u7a0b\uff0c\u6b64\u5904\u7684\u4e1a\u52a1\u903b\u8f91\u4e3a\u8c03\u7528storage-service\u7684\u6263\u51cf\u5e93\u5b58\u63a5\u53e3\u3002\\n## RM\u5904\u7406\u6d41\u7a0b\\n\\n```java\\n@GetMapping(path = \\"/deduct\\")\\npublic Boolean deduct(String commodityCode, Integer count){\\n    storageService.deduct(commodityCode,count);\\n    return true;\\n}\\n\\n@Transactional\\npublic void deduct(String commodityCode, int count){\\n    Storage storage = storageDAO.findByCommodityCode(commodityCode);\\n    storage.setCount(storage.getCount()-count);\\n\\n    storageDAO.save(storage);\\n}\\n```\\nstorage\u7684\u63a5\u53e3\u548cservice\u65b9\u6cd5\u5e76\u672a\u51fa\u73b0fescar\u76f8\u5173\u7684\u4ee3\u7801\u548c\u6ce8\u89e3\uff0c\u4f53\u73b0\u4e86fescar\u7684\u65e0\u4fb5\u5165\u3002\u90a3\u5b83\u662f\u5982\u4f55\u52a0\u5165\u5230\u8fd9\u6b21\u5168\u5c40\u4e8b\u52a1\u4e2d\u7684\u5462\uff1f\u7b54\u6848\u5728[ConnectionProxy](https://github.com/seata/seata/blob/develop/rm-datasource/src/main/java/com/alibaba/fescar/rm/datasource/ConnectionProxy.java)\u4e2d\uff0c\u8fd9\u4e5f\u662f\u524d\u9762\u8bf4\u4e3a\u4ec0\u4e48\u5fc5\u987b\u8981\u4f7f\u7528`DataSourceProxy`\u7684\u539f\u56e0\uff0c\u901a\u8fc7DataSourceProxy\u624d\u80fd\u5728\u4e1a\u52a1\u4ee3\u7801\u7684\u672c\u5730\u4e8b\u52a1\u63d0\u4ea4\u65f6\uff0cfescar\u901a\u8fc7\u8be5\u5207\u5165\u70b9\uff0c\u5411TC\u6ce8\u518c\u5206\u652f\u4e8b\u52a1\u5e76\u53d1\u9001RM\u7684\u5904\u7406\u7ed3\u679c\u3002\\n\\n\u7531\u4e8e\u4e1a\u52a1\u4ee3\u7801\u672c\u8eab\u7684\u4e8b\u52a1\u63d0\u4ea4\u88ab`ConnectionProxy`\u4ee3\u7406\u5b9e\u73b0\uff0c\u6240\u4ee5\u5728\u63d0\u4ea4\u672c\u5730\u4e8b\u52a1\u65f6\uff0c\u5b9e\u9645\u6267\u884c\u7684\u662fConnectionProxy\u7684commit\u65b9\u6cd5\\n\\n```java\\npublic void commit() throws SQLException {\\n\\t//\u5982\u679c\u5f53\u524d\u662f\u5168\u5c40\u4e8b\u52a1\uff0c\u5219\u6267\u884c\u5168\u5c40\u4e8b\u52a1\u7684\u63d0\u4ea4\\n\\t//\u5224\u65ad\u662f\u4e0d\u662f\u5168\u5c40\u4e8b\u52a1\uff0c\u5c31\u662f\u770b\u5f53\u524d\u4e0a\u4e0b\u6587\u662f\u5426\u5b58\u5728XID\\n    if (context.inGlobalTransaction()) {\\n        processGlobalTransactionCommit();\\n    } else if (context.isGlobalLockRequire()) {\\n        processLocalCommitWithGlobalLocks();\\n    } else {\\n        targetConnection.commit();\\n    }\\n}\\n    \\nprivate void processGlobalTransactionCommit() throws SQLException {\\n    try {\\n    \\t//\u9996\u5148\u662f\u5411TC\u6ce8\u518cRM\uff0c\u62ff\u5230TC\u5206\u914d\u7684branchId\\n        register();\\n    } catch (TransactionException e) {\\n        recognizeLockKeyConflictException(e);\\n    }\\n\\n    try {\\n        if (context.hasUndoLog()) {\\n        \\t//\u5199\u5165undolog\\n            UndoLogManager.flushUndoLogs(this);\\n        }\\n\\n\\t\\t//\u63d0\u4ea4\u672c\u5730\u4e8b\u52a1\uff0c\u5199\u5165undo_log\u548c\u4e1a\u52a1\u6570\u636e\u5728\u540c\u4e00\u4e2a\u672c\u5730\u4e8b\u52a1\u4e2d\\n        targetConnection.commit();\\n    } catch (Throwable ex) {\\n    \\t//\u5411TC\u53d1\u9001RM\u7684\u4e8b\u52a1\u5904\u7406\u5931\u8d25\u7684\u901a\u77e5\\n        report(false);\\n        if (ex instanceof SQLException) {\\n            throw new SQLException(ex);\\n        }\\n    }\\n\\t//\u5411TC\u53d1\u9001RM\u7684\u4e8b\u52a1\u5904\u7406\u6210\u529f\u7684\u901a\u77e5\\n    report(true);\\n    context.reset();\\n}\\n    \\nprivate void register() throws TransactionException {\\n\\t//\u6ce8\u518cRM\uff0c\u6784\u5efarequest\u901a\u8fc7netty\u5411TC\u53d1\u9001\u6ce8\u518c\u6307\u4ee4\\n    Long branchId = DefaultResourceManager.get().branchRegister(BranchType.AT, getDataSourceProxy().getResourceId(),\\n            null, context.getXid(), null, context.buildLockKeys());\\n    //\u5c06\u8fd4\u56de\u7684branchId\u5b58\u5728\u4e0a\u4e0b\u6587\u4e2d\\n    context.setBranchId(branchId);\\n}\\n```\\n\u901a\u8fc7\u65e5\u5fd7\u5370\u8bc1\u4e00\u4e0b\u4e0a\u9762\u7684\u6d41\u7a0b\\n\\n```java\\n2019-04-09 21:57:48.341 DEBUG 38933 --- [nio-8081-exec-1] o.s.c.a.f.web.FescarHandlerInterceptor   : xid in RootContext null xid in RpcContext 192.168.0.2:8091:2008546211\\n2019-04-09 21:57:48.341 DEBUG 38933 --- [nio-8081-exec-1] c.a.fescar.core.context.RootContext      : bind 192.168.0.2:8091:2008546211\\n2019-04-09 21:57:48.341 DEBUG 38933 --- [nio-8081-exec-1] o.s.c.a.f.web.FescarHandlerInterceptor   : bind 192.168.0.2:8091:2008546211 to RootContext\\n2019-04-09 21:57:48.386  INFO 38933 --- [nio-8081-exec-1] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory\\nHibernate: select storage0_.id as id1_0_, storage0_.commodity_code as commodit2_0_, storage0_.count as count3_0_ from storage_tbl storage0_ where storage0_.commodity_code=?\\nHibernate: update storage_tbl set count=? where id=?\\n2019-04-09 21:57:48.673  INFO 38933 --- [nio-8081-exec-1] c.a.fescar.core.rpc.netty.RmRpcClient    : will connect to 192.168.0.2:8091\\n2019-04-09 21:57:48.673  INFO 38933 --- [nio-8081-exec-1] c.a.fescar.core.rpc.netty.RmRpcClient    : RM will register :jdbc:mysql://127.0.0.1:3306/db_storage?useSSL=false\\n2019-04-09 21:57:48.673  INFO 38933 --- [nio-8081-exec-1] c.a.f.c.rpc.netty.NettyPoolableFactory   : NettyPool create channel to {\\"address\\":\\"192.168.0.2:8091\\",\\"message\\":{\\"applicationId\\":\\"storage-service\\",\\"byteBuffer\\":{\\"char\\":\\"\\\\u0000\\",\\"direct\\":false,\\"double\\":0.0,\\"float\\":0.0,\\"int\\":0,\\"long\\":0,\\"readOnly\\":false,\\"short\\":0},\\"resourceIds\\":\\"jdbc:mysql://127.0.0.1:3306/db_storage?useSSL=false\\",\\"transactionServiceGroup\\":\\"hello-service-fescar-service-group\\",\\"typeCode\\":103,\\"version\\":\\"0.4.0\\"},\\"transactionRole\\":\\"RMROLE\\"}\\n2019-04-09 21:57:48.677 DEBUG 38933 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Send:RegisterRMRequest{resourceIds=\'jdbc:mysql://127.0.0.1:3306/db_storage?useSSL=false\', applicationId=\'storage-service\', transactionServiceGroup=\'hello-service-fescar-service-group\'}\\n2019-04-09 21:57:48.680 DEBUG 38933 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Receive:version=0.4.1,extraData=null,identified=true,resultCode=null,msg=null,messageId:9\\n2019-04-09 21:57:48.680 DEBUG 38933 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.AbstractRpcRemoting    : com.alibaba.fescar.core.rpc.netty.RmRpcClient@7d61f5d4 msgId:9, future :com.alibaba.fescar.core.protocol.MessageFuture@186cd3e0, body:version=0.4.1,extraData=null,identified=true,resultCode=null,msg=null\\n2019-04-09 21:57:48.680  INFO 38933 --- [nio-8081-exec-1] c.a.fescar.core.rpc.netty.RmRpcClient    : register RM success. server version:0.4.1,channel:[id: 0xd40718e3, L:/192.168.0.2:62607 - R:/192.168.0.2:8091]\\n2019-04-09 21:57:48.680  INFO 38933 --- [nio-8081-exec-1] c.a.f.c.rpc.netty.NettyPoolableFactory   : register success, cost 3 ms, version:0.4.1,role:RMROLE,channel:[id: 0xd40718e3, L:/192.168.0.2:62607 - R:/192.168.0.2:8091]\\n2019-04-09 21:57:48.680 DEBUG 38933 --- [nio-8081-exec-1] c.a.f.c.rpc.netty.AbstractRpcRemoting    : offer message: transactionId=2008546211,branchType=AT,resourceId=jdbc:mysql://127.0.0.1:3306/db_storage?useSSL=false,lockKey=storage_tbl:1\\n2019-04-09 21:57:48.681 DEBUG 38933 --- [geSend_RMROLE_1] c.a.f.c.rpc.netty.AbstractRpcRemoting    : write message:FescarMergeMessage transactionId=2008546211,branchType=AT,resourceId=jdbc:mysql://127.0.0.1:3306/db_storage?useSSL=false,lockKey=storage_tbl:1, channel:[id: 0xd40718e3, L:/192.168.0.2:62607 - R:/192.168.0.2:8091],active?true,writable?true,isopen?true\\n2019-04-09 21:57:48.681 DEBUG 38933 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Send:FescarMergeMessage transactionId=2008546211,branchType=AT,resourceId=jdbc:mysql://127.0.0.1:3306/db_storage?useSSL=false,lockKey=storage_tbl:1\\n2019-04-09 21:57:48.687 DEBUG 38933 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Receive:MergeResultMessage BranchRegisterResponse: transactionId=2008546211,branchId=2008546212,result code =Success,getMsg =null,messageId:11\\n2019-04-09 21:57:48.702 DEBUG 38933 --- [nio-8081-exec-1] c.a.f.rm.datasource.undo.UndoLogManager  : Flushing UNDO LOG: {\\"branchId\\":2008546212,\\"sqlUndoLogs\\":[{\\"afterImage\\":{\\"rows\\":[{\\"fields\\":[{\\"keyType\\":\\"PrimaryKey\\",\\"name\\":\\"id\\",\\"type\\":4,\\"value\\":1},{\\"keyType\\":\\"NULL\\",\\"name\\":\\"count\\",\\"type\\":4,\\"value\\":993}]}],\\"tableName\\":\\"storage_tbl\\"},\\"beforeImage\\":{\\"rows\\":[{\\"fields\\":[{\\"keyType\\":\\"PrimaryKey\\",\\"name\\":\\"id\\",\\"type\\":4,\\"value\\":1},{\\"keyType\\":\\"NULL\\",\\"name\\":\\"count\\",\\"type\\":4,\\"value\\":994}]}],\\"tableName\\":\\"storage_tbl\\"},\\"sqlType\\":\\"UPDATE\\",\\"tableName\\":\\"storage_tbl\\"}],\\"xid\\":\\"192.168.0.2:8091:2008546211\\"}\\n2019-04-09 21:57:48.755 DEBUG 38933 --- [nio-8081-exec-1] c.a.f.c.rpc.netty.AbstractRpcRemoting    : offer message: transactionId=2008546211,branchId=2008546212,resourceId=null,status=PhaseOne_Done,applicationData=null\\n2019-04-09 21:57:48.755 DEBUG 38933 --- [geSend_RMROLE_1] c.a.f.c.rpc.netty.AbstractRpcRemoting    : write message:FescarMergeMessage transactionId=2008546211,branchId=2008546212,resourceId=null,status=PhaseOne_Done,applicationData=null, channel:[id: 0xd40718e3, L:/192.168.0.2:62607 - R:/192.168.0.2:8091],active?true,writable?true,isopen?true\\n2019-04-09 21:57:48.756 DEBUG 38933 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Send:FescarMergeMessage transactionId=2008546211,branchId=2008546212,resourceId=null,status=PhaseOne_Done,applicationData=null\\n2019-04-09 21:57:48.758 DEBUG 38933 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Receive:MergeResultMessage com.alibaba.fescar.core.protocol.transaction.BranchReportResponse@582a08cf,messageId:13\\n2019-04-09 21:57:48.799 DEBUG 38933 --- [nio-8081-exec-1] c.a.fescar.core.context.RootContext      : unbind 192.168.0.2:8091:2008546211\\n2019-04-09 21:57:48.799 DEBUG 38933 --- [nio-8081-exec-1] o.s.c.a.f.web.FescarHandlerInterceptor   : unbind 192.168.0.2:8091:2008546211 from RootContext\\n```\\n\\n 1. \u83b7\u53d6business-service\u4f20\u6765\u7684XID\\n 2. \u7ed1\u5b9aXID\u5230\u5f53\u524d\u4e0a\u4e0b\u6587\u4e2d\\n 3. \u6267\u884c\u4e1a\u52a1\u903b\u8f91sql\\n 4. \u5411TC\u521b\u5efa\u672c\u6b21RM\u7684Netty\u8fde\u63a5\\n 5. \u5411TC\u53d1\u9001\u5206\u652f\u4e8b\u52a1\u7684\u76f8\u5173\u4fe1\u606f\\n 6. \u83b7\u5f97TC\u8fd4\u56de\u7684branchId\\n 7. \u8bb0\u5f55Undo Log\u6570\u636e\\n 8. \u5411TC\u53d1\u9001\u672c\u6b21\u4e8b\u52a1PhaseOne\u9636\u6bb5\u7684\u5904\u7406\u7ed3\u679c\\n 9. \u4ece\u5f53\u524d\u4e0a\u4e0b\u6587\u4e2d\u89e3\u7ed1XID\\n\\n\u5176\u4e2d\u7b2c1\u6b65\u548c\u7b2c9\u6b65\uff0c\u662f\u5728[FescarHandlerInterceptor](https://github.com/dongsheep/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-fescar/src/main/java/org/springframework/cloud/alibaba/fescar/web/FescarHandlerInterceptor.java)\u4e2d\u5b8c\u6210\u7684\uff0c\u8be5\u7c7b\u5e76\u4e0d\u5c5e\u4e8efescar\uff0c\u662f\u524d\u9762\u63d0\u5230\u7684spring-cloud-alibaba-fescar,\u5b83\u5b9e\u73b0\u4e86\u57fa\u4e8efeign\u3001rest\u901a\u4fe1\u65f6\u5c06xid bind\u548cunbind\u5230\u5f53\u524d\u8bf7\u6c42\u4e0a\u4e0b\u6587\u4e2d\u3002\u5230\u8fd9\u91ccRM\u5b8c\u6210\u4e86PhaseOne\u9636\u6bb5\u7684\u5de5\u4f5c\uff0c\u63a5\u7740\u770bPhaseTwo\u9636\u6bb5\u7684\u5904\u7406\u903b\u8f91\u3002\\n## \u4e8b\u52a1\u63d0\u4ea4\\n\u5404\u5206\u652f\u4e8b\u52a1\u6267\u884c\u5b8c\u6210\u540e\uff0cTC\u5bf9\u5404RM\u7684\u6c47\u62a5\u7ed3\u679c\u8fdb\u884c\u6c47\u603b\uff0c\u7ed9\u5404RM\u53d1\u9001commit\u6216rollback\u7684\u6307\u4ee4\\n\\n```java\\n2019-04-09 21:57:49.813 DEBUG 38933 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Receive:xid=192.168.0.2:8091:2008546211,branchId=2008546212,branchType=AT,resourceId=jdbc:mysql://127.0.0.1:3306/db_storage?useSSL=false,applicationData=null,messageId:1\\n2019-04-09 21:57:49.813 DEBUG 38933 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.AbstractRpcRemoting    : com.alibaba.fescar.core.rpc.netty.RmRpcClient@7d61f5d4 msgId:1, body:xid=192.168.0.2:8091:2008546211,branchId=2008546212,branchType=AT,resourceId=jdbc:mysql://127.0.0.1:3306/db_storage?useSSL=false,applicationData=null\\n2019-04-09 21:57:49.814  INFO 38933 --- [atch_RMROLE_1_8] c.a.f.core.rpc.netty.RmMessageListener   : onMessage:xid=192.168.0.2:8091:2008546211,branchId=2008546212,branchType=AT,resourceId=jdbc:mysql://127.0.0.1:3306/db_storage?useSSL=false,applicationData=null\\n2019-04-09 21:57:49.816  INFO 38933 --- [atch_RMROLE_1_8] com.alibaba.fescar.rm.AbstractRMHandler  : Branch committing: 192.168.0.2:8091:2008546211 2008546212 jdbc:mysql://127.0.0.1:3306/db_storage?useSSL=false null\\n2019-04-09 21:57:49.816  INFO 38933 --- [atch_RMROLE_1_8] com.alibaba.fescar.rm.AbstractRMHandler  : Branch commit result: PhaseTwo_Committed\\n2019-04-09 21:57:49.817  INFO 38933 --- [atch_RMROLE_1_8] c.a.fescar.core.rpc.netty.RmRpcClient    : RmRpcClient sendResponse branchStatus=PhaseTwo_Committed,result code =Success,getMsg =null\\n2019-04-09 21:57:49.817 DEBUG 38933 --- [atch_RMROLE_1_8] c.a.f.c.rpc.netty.AbstractRpcRemoting    : send response:branchStatus=PhaseTwo_Committed,result code =Success,getMsg =null,channel:[id: 0xd40718e3, L:/192.168.0.2:62607 - R:/192.168.0.2:8091]\\n2019-04-09 21:57:49.817 DEBUG 38933 --- [lector_RMROLE_1] c.a.f.c.rpc.netty.MessageCodecHandler    : Send:branchStatus=PhaseTwo_Committed,result code =Success,getMsg =null\\n```\\n\u4ece\u65e5\u5fd7\u4e2d\u53ef\u4ee5\u770b\u5230\\n1. RM\u6536\u5230XID=192.168.0.2:8091:2008546211,branchId=2008546212\u7684commit\u901a\u77e5\\n2. \u6267\u884ccommit\u52a8\u4f5c\\n3. \u5c06commit\u7ed3\u679c\u53d1\u9001\u7ed9TC\uff0cbranchStatus\u4e3aPhaseTwo_Committed\\n\\n\u5177\u4f53\u770b\u4e0b\u4e8c\u9636\u6bb5commit\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u5728[AbstractRMHandler](https://github.com/seata/seata/blob/develop/rm/src/main/java/com/alibaba/fescar/rm/AbstractRMHandler.java)\u7c7b\u7684doBranchCommit\u65b9\u6cd5\\n\\n```java\\n/**\\n * \u62ff\u5230\u901a\u77e5\u7684xid\u3001branchId\u7b49\u5173\u952e\u53c2\u6570\\n * \u7136\u540e\u8c03\u7528RM\u7684branchCommit\\n */\\nprotected void doBranchCommit(BranchCommitRequest request, BranchCommitResponse response) throws TransactionException {\\n    String xid = request.getXid();\\n    long branchId = request.getBranchId();\\n    String resourceId = request.getResourceId();\\n    String applicationData = request.getApplicationData();\\n    LOGGER.info(\\"Branch committing: \\" + xid + \\" \\" + branchId + \\" \\" + resourceId + \\" \\" + applicationData);\\n    BranchStatus status = getResourceManager().branchCommit(request.getBranchType(), xid, branchId, resourceId, applicationData);\\n    response.setBranchStatus(status);\\n    LOGGER.info(\\"Branch commit result: \\" + status);\\n}\\n```\\n\u6700\u7ec8\u4f1a\u5c06branchCommit\u7684\u8bf7\u6c42\u8c03\u7528\u5230[AsyncWorker](https://github.com/seata/seata/blob/develop/rm-datasource/src/main/java/com/alibaba/fescar/rm/datasource/AsyncWorker.java)\u7684branchCommit\u65b9\u6cd5\u3002AsyncWorker\u7684\u5904\u7406\u65b9\u5f0f\u662ffescar\u67b6\u6784\u7684\u4e00\u4e2a\u5173\u952e\u90e8\u5206\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u4e8b\u52a1\u90fd\u662f\u4f1a\u6b63\u5e38\u63d0\u4ea4\u7684\uff0c\u6240\u4ee5\u5728PhaseOne\u9636\u6bb5\u5c31\u5df2\u7ecf\u7ed3\u675f\u4e86\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u9501\u6700\u5feb\u7684\u91ca\u653e\u3002PhaseTwo\u9636\u6bb5\u63a5\u6536commit\u7684\u6307\u4ee4\u540e\uff0c\u5f02\u6b65\u5904\u7406\u5373\u53ef\u3002\u5c06PhaseTwo\u7684\u65f6\u95f4\u6d88\u8017\u6392\u9664\u5728\u4e00\u6b21\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e4b\u5916\u3002\\n\\n```java\\nprivate static final List<Phase2Context> ASYNC_COMMIT_BUFFER = Collections.synchronizedList( new ArrayList<Phase2Context>());\\n        \\n/**\\n * \u5c06\u9700\u8981\u63d0\u4ea4\u7684XID\u52a0\u5165list\\n */\\n@Override\\npublic BranchStatus branchCommit(BranchType branchType, String xid, long branchId, String resourceId, String applicationData) throws TransactionException {\\n    if (ASYNC_COMMIT_BUFFER.size() < ASYNC_COMMIT_BUFFER_LIMIT) {\\n        ASYNC_COMMIT_BUFFER.add(new Phase2Context(branchType, xid, branchId, resourceId, applicationData));\\n    } else {\\n        LOGGER.warn(\\"Async commit buffer is FULL. Rejected branch [\\" + branchId + \\"/\\" + xid + \\"] will be handled by housekeeping later.\\");\\n    }\\n    return BranchStatus.PhaseTwo_Committed;\\n}\\n\\t\\n/**\\n * \u901a\u8fc7\u5b9a\u65f6\u4efb\u52a1\u6d88\u8d39list\u4e2d\u7684XID\\n */\\npublic synchronized void init() {\\n    LOGGER.info(\\"Async Commit Buffer Limit: \\" + ASYNC_COMMIT_BUFFER_LIMIT);\\n    timerExecutor = new ScheduledThreadPoolExecutor(1,\\n        new NamedThreadFactory(\\"AsyncWorker\\", 1, true));\\n    timerExecutor.scheduleAtFixedRate(new Runnable() {\\n        @Override\\n        public void run() {\\n            try {\\n                doBranchCommits();\\n            } catch (Throwable e) {\\n                LOGGER.info(\\"Failed at async committing ... \\" + e.getMessage());\\n            }\\n        }\\n    }, 10, 1000 * 1, TimeUnit.MILLISECONDS);\\n}\\n\\t\\nprivate void doBranchCommits() {\\n    if (ASYNC_COMMIT_BUFFER.size() == 0) {\\n        return;\\n    }\\n    Map<String, List<Phase2Context>> mappedContexts = new HashMap<>();\\n    Iterator<Phase2Context> iterator = ASYNC_COMMIT_BUFFER.iterator();\\n    \\n    //\u4e00\u6b21\u5b9a\u65f6\u5faa\u73af\u53d6\u51faASYNC_COMMIT_BUFFER\u4e2d\u7684\u6240\u6709\u5f85\u529e\u6570\u636e\\n    //\u4ee5resourceId\u4f5c\u4e3akey\u5206\u7ec4\u5f85commit\u6570\u636e\uff0cresourceId\u662f\u4e00\u4e2a\u6570\u636e\u5e93\u7684\u8fde\u63a5url\\n    //\u5728\u524d\u9762\u7684\u65e5\u5fd7\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u8986\u76d6\u5e94\u7528\u7684\u591a\u6570\u636e\u6e90\u521b\u5efa\\n    while (iterator.hasNext()) {\\n        Phase2Context commitContext = iterator.next();\\n        List<Phase2Context> contextsGroupedByResourceId = mappedContexts.get(commitContext.resourceId);\\n        if (contextsGroupedByResourceId == null) {\\n            contextsGroupedByResourceId = new ArrayList<>();\\n            mappedContexts.put(commitContext.resourceId, contextsGroupedByResourceId);\\n        }\\n        contextsGroupedByResourceId.add(commitContext);\\n\\n        iterator.remove();\\n\\n    }\\n\\n    for (Map.Entry<String, List<Phase2Context>> entry : mappedContexts.entrySet()) {\\n        Connection conn = null;\\n        try {\\n            try {\\n            \\t//\u6839\u636eresourceId\u83b7\u53d6\u6570\u636e\u6e90\u4ee5\u53ca\u8fde\u63a5\\n                DataSourceProxy dataSourceProxy = DataSourceManager.get().get(entry.getKey());\\n                conn = dataSourceProxy.getPlainConnection();\\n            } catch (SQLException sqle) {\\n                LOGGER.warn(\\"Failed to get connection for async committing on \\" + entry.getKey(), sqle);\\n                continue;\\n            }\\n            List<Phase2Context> contextsGroupedByResourceId = entry.getValue();\\n            for (Phase2Context commitContext : contextsGroupedByResourceId) {\\n                try {\\n                \\t//\u6267\u884cundolog\u7684\u5904\u7406\uff0c\u5373\u5220\u9664xid\u3001branchId\u5bf9\u5e94\u7684\u8bb0\u5f55\\n                    UndoLogManager.deleteUndoLog(commitContext.xid, commitContext.branchId, conn);\\n                } catch (Exception ex) {\\n                    LOGGER.warn(\\n                        \\"Failed to delete undo log [\\" + commitContext.branchId + \\"/\\" + commitContext.xid + \\"]\\", ex);\\n                }\\n            }\\n\\n        } finally {\\n            if (conn != null) {\\n                try {\\n                    conn.close();\\n                } catch (SQLException closeEx) {\\n                    LOGGER.warn(\\"Failed to close JDBC resource while deleting undo_log \\", closeEx);\\n                }\\n            }\\n        }\\n    }\\n}\\n```\\n\u6240\u4ee5\u5bf9\u4e8ecommit\u52a8\u4f5c\u7684\u5904\u7406\uff0cRM\u53ea\u9700\u5220\u9664xid\u3001branchId\u5bf9\u5e94\u7684undo_log\u5373\u53ef\u3002\\n## \u4e8b\u52a1\u56de\u6eda\\n\u5bf9\u4e8erollback\u573a\u666f\u7684\u89e6\u53d1\u6709\u4e24\u79cd\u60c5\u51b5\\n 1. \u5206\u652f\u4e8b\u52a1\u5904\u7406\u5f02\u5e38\uff0c\u5373[ConnectionProxy](https://github.com/seata/seata/blob/develop/rm-datasource/src/main/java/com/alibaba/fescar/rm/datasource/ConnectionProxy.java)\u4e2d`report(false)`\u7684\u60c5\u51b5\\n 2. TM\u6355\u83b7\u5230\u4e0b\u6e38\u7cfb\u7edf\u4e0a\u629b\u7684\u5f02\u5e38\uff0c\u5373\u53d1\u8d77\u5168\u5c40\u4e8b\u52a1\u6807\u6709`@GlobalTransactional`\u6ce8\u89e3\u7684\u65b9\u6cd5\u6355\u83b7\u5230\u7684\u5f02\u5e38\u3002\u5728\u524d\u9762[TransactionalTemplate](https://github.com/seata/seata/blob/develop/tm/src/main/java/com/alibaba/fescar/tm/api/TransactionalTemplate.java)\u7c7b\u7684execute\u6a21\u7248\u65b9\u6cd5\u4e2d\uff0c\u5bf9business.execute()\u7684\u8c03\u7528\u8fdb\u884c\u4e86catch\uff0ccatch\u540e\u4f1a\u8c03\u7528rollback\uff0c\u7531TM\u901a\u77e5TC\u5bf9\u5e94XID\u9700\u8981\u56de\u6eda\u4e8b\u52a1\\n\\n```java\\n public void rollback() throws TransactionException {\\n    //\u53ea\u6709Launcher\u80fd\u53d1\u8d77\u8fd9\u4e2arollback\\n    if (role == GlobalTransactionRole.Participant) {\\n        // Participant has no responsibility of committing\\n        if (LOGGER.isDebugEnabled()) {\\n            LOGGER.debug(\\"Ignore Rollback(): just involved in global transaction [\\" + xid + \\"]\\");\\n        }\\n        return;\\n    }\\n    if (xid == null) {\\n        throw new IllegalStateException();\\n    }\\n\\n    status = transactionManager.rollback(xid);\\n    if (RootContext.getXID() != null) {\\n        if (xid.equals(RootContext.getXID())) {\\n            RootContext.unbind();\\n        }\\n    }\\n}\\n```\\nTC\u6c47\u603b\u540e\u5411\u53c2\u4e0e\u8005\u53d1\u9001rollback\u6307\u4ee4\uff0cRM\u5728[AbstractRMHandler](https://github.com/seata/seata/blob/develop/rm/src/main/java/com/alibaba/fescar/rm/AbstractRMHandler.java)\u7c7b\u7684doBranchRollback\u65b9\u6cd5\u4e2d\u63a5\u6536\u8fd9\u4e2arollback\u7684\u901a\u77e5\\n\\n```java\\nprotected void doBranchRollback(BranchRollbackRequest request, BranchRollbackResponse response) throws TransactionException {\\n    String xid = request.getXid();\\n    long branchId = request.getBranchId();\\n    String resourceId = request.getResourceId();\\n    String applicationData = request.getApplicationData();\\n    LOGGER.info(\\"Branch rolling back: \\" + xid + \\" \\" + branchId + \\" \\" + resourceId);\\n    BranchStatus status = getResourceManager().branchRollback(request.getBranchType(), xid, branchId, resourceId, applicationData);\\n    response.setBranchStatus(status);\\n    LOGGER.info(\\"Branch rollback result: \\" + status);\\n}\\n```\\n\u7136\u540e\u5c06rollback\u8bf7\u6c42\u4f20\u9012\u5230`DataSourceManager`\u7c7b\u7684branchRollback\u65b9\u6cd5\\n\\n```java\\npublic BranchStatus branchRollback(BranchType branchType, String xid, long branchId, String resourceId, String applicationData) throws TransactionException {\\n    //\u6839\u636eresourceId\u83b7\u53d6\u5bf9\u5e94\u7684\u6570\u636e\u6e90\\n    DataSourceProxy dataSourceProxy = get(resourceId);\\n    if (dataSourceProxy == null) {\\n        throw new ShouldNeverHappenException();\\n    }\\n    try {\\n        UndoLogManager.undo(dataSourceProxy, xid, branchId);\\n    } catch (TransactionException te) {\\n        if (te.getCode() == TransactionExceptionCode.BranchRollbackFailed_Unretriable) {\\n            return BranchStatus.PhaseTwo_RollbackFailed_Unretryable;\\n        } else {\\n            return BranchStatus.PhaseTwo_RollbackFailed_Retryable;\\n        }\\n    }\\n    return BranchStatus.PhaseTwo_Rollbacked;\\n}\\n```\\n\u6700\u7ec8\u4f1a\u6267\u884c[UndoLogManager](https://github.com/seata/seata/blob/develop/rm-datasource/src/main/java/com/alibaba/fescar/rm/datasource/undo/UndoLogManager.java)\u7c7b\u7684undo\u65b9\u6cd5\uff0c\u56e0\u4e3a\u662f\u7eafjdbc\u64cd\u4f5c\u4ee3\u7801\u6bd4\u8f83\u957f\u5c31\u4e0d\u8d34\u51fa\u6765\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fde\u63a5\u5230github\u67e5\u770b\u6e90\u7801\uff0c\u8bf4\u4e00\u4e0bundo\u7684\u5177\u4f53\u6d41\u7a0b\\n\\n 1. \u6839\u636exid\u548cbranchId\u67e5\u627ePhaseOne\u9636\u6bb5\u63d0\u4ea4\u7684undo_log\\n 2. \u5982\u679c\u627e\u5230\u4e86\u5c31\u6839\u636eundo_log\u4e2d\u8bb0\u5f55\u7684\u6570\u636e\u751f\u6210\u56de\u653esql\u5e76\u6267\u884c\uff0c\u5373\u8fd8\u539fPhaseOne\u9636\u6bb5\u4fee\u6539\u7684\u6570\u636e\\n 3. \u7b2c2\u6b65\u5904\u7406\u5b8c\u540e\uff0c\u5220\u9664\u8be5\u6761undo_log\u6570\u636e\\n 4. \u5982\u679c\u7b2c1\u6b65\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684undo_log\uff0c\u5c31\u63d2\u5165\u4e00\u6761\u72b6\u6001\u4e3a`GlobalFinished`\u7684undo_log.\\n \u51fa\u73b0\u6ca1\u627e\u5230\u7684\u539f\u56e0\u53ef\u80fd\u662fPhaseOne\u9636\u6bb5\u7684\u672c\u5730\u4e8b\u52a1\u5f02\u5e38\u4e86\uff0c\u5bfc\u81f4\u6ca1\u6709\u6b63\u5e38\u5199\u5165\u3002\\n \u56e0\u4e3axid\u548cbranchId\u662f\u552f\u4e00\u7d22\u5f15\uff0c\u6240\u4ee5\u7b2c4\u6b65\u7684\u63d2\u5165\uff0c\u53ef\u4ee5\u9632\u6b62PhaseOne\u9636\u6bb5\u6062\u590d\u540e\u7684\u6210\u529f\u5199\u5165\uff0c\u90a3\u4e48PhaseOne\u9636\u6bb5\u5c31\u4f1a\u5f02\u5e38\uff0c\u8fd9\u6837\u4e00\u6765\u4e1a\u52a1\u6570\u636e\u4e5f\u5c31\u4e0d\u4f1a\u63d0\u4ea4\u6210\u529f\uff0c\u6570\u636e\u8fbe\u5230\u4e86\u6700\u7ec8\u56de\u6eda\u4e86\u7684\u6548\u679c\\n## \u603b\u7ed3\\n\u672c\u5730\u7ed3\u5408\u5206\u5e03\u5f0f\u4e1a\u52a1\u573a\u666f\uff0c\u5206\u6790\u4e86fescar client\u4fa7\u7684\u4e3b\u8981\u5904\u7406\u6d41\u7a0b\uff0c\u5bf9TM\u548cRM\u89d2\u8272\u7684\u4e3b\u8981\u6e90\u7801\u8fdb\u884c\u4e86\u89e3\u6790\uff0c\u5e0c\u671b\u80fd\u5bf9\u5927\u5bb6\u7406\u89e3fescar\u7684\u5de5\u4f5c\u539f\u7406\u6709\u6240\u5e2e\u52a9\u3002\\n\\n\u968f\u7740fescar\u7684\u5feb\u901f\u8fed\u4ee3\u4ee5\u53ca\u540e\u671f\u7684Roadmap\u89c4\u5212\uff0c\u5047\u4ee5\u65f6\u65e5\u76f8\u4fe1fescar\u80fd\u591f\u6210\u4e3a\u5f00\u6e90\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u6807\u6746\u89e3\u51b3\u65b9\u6848\u3002"},{"id":"/seata-analysis-java-server","metadata":{"permalink":"/zh-cn/blog/seata-analysis-java-server","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-analysis-java-server.md","title":"\u6df1\u5ea6\u5256\u6790\u4e00\u7ad9\u5f0f\u5206\u5e03\u5f0f\u4e8b\u52a1\u65b9\u6848Seata-Server","description":"\u518d\u524d\u4e0d\u4e45\uff0c\u6211\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u95f4\u4ef6Fescar\u7684\u89e3\u6790\uff0c\u6ca1\u8fc7\u51e0\u5929Fescar\u56e2\u961f\u5bf9\u5176\u8fdb\u884c\u4e86\u54c1\u724c\u5347\u7ea7\uff0c\u53d6\u540d\u4e3aSeata(Simpe Extensible Autonomous Transcaction Architecture)\uff0c\u800c\u4ee5\u524d\u7684Fescar\u7684\u82f1\u6587\u5168\u79f0\u4e3aFast & EaSy Commit And Rollback\u3002\u53ef\u4ee5\u770b\u89c1Fescar\u4ece\u540d\u5b57\u4e0a\u6765\u770b\u66f4\u52a0\u5c40\u9650\u4e8eCommit\u548cRollback\uff0c\u800c\u65b0\u7684\u54c1\u724c\u540d\u5b57Seata\u65e8\u5728\u6253\u9020\u4e00\u5957\u4e00\u7ad9\u5f0f\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u3002\u66f4\u6362\u540d\u5b57\u4e4b\u540e\uff0c\u6211\u5bf9\u5176\u672a\u6765\u7684\u53d1\u5c55\u66f4\u6709\u4fe1\u5fc3\u3002","date":"2019-04-08T00:00:00.000Z","formattedDate":"2019\u5e744\u67088\u65e5","tags":[],"readingTime":29.73,"hasTruncateMarker":false,"authors":[{"name":"\u674e\u948a,\u5b63\u654f"}],"frontMatter":{"title":"\u6df1\u5ea6\u5256\u6790\u4e00\u7ad9\u5f0f\u5206\u5e03\u5f0f\u4e8b\u52a1\u65b9\u6848Seata-Server","author":"\u674e\u948a,\u5b63\u654f","date":"2019/04/08","keywords":["fescar\u3001seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"]},"prevItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e4bSeata-Client\u539f\u7406\u53ca\u6d41\u7a0b\u8be6\u89e3","permalink":"/zh-cn/blog/seata-analysis-java-client"},"nextItem":{"title":"TCC\u9002\u7528\u6a21\u578b\u4e0e\u9002\u7528\u573a\u666f\u5206\u6790","permalink":"/zh-cn/blog/tcc-mode-applicable-scenario-analysis"}},"content":"\u518d\u524d\u4e0d\u4e45\uff0c\u6211\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u95f4\u4ef6Fescar\u7684\u89e3\u6790\uff0c\u6ca1\u8fc7\u51e0\u5929Fescar\u56e2\u961f\u5bf9\u5176\u8fdb\u884c\u4e86\u54c1\u724c\u5347\u7ea7\uff0c\u53d6\u540d\u4e3aSeata(Simpe Extensible Autonomous Transcaction Architecture)\uff0c\u800c\u4ee5\u524d\u7684Fescar\u7684\u82f1\u6587\u5168\u79f0\u4e3aFast & EaSy Commit And Rollback\u3002\u53ef\u4ee5\u770b\u89c1Fescar\u4ece\u540d\u5b57\u4e0a\u6765\u770b\u66f4\u52a0\u5c40\u9650\u4e8eCommit\u548cRollback\uff0c\u800c\u65b0\u7684\u54c1\u724c\u540d\u5b57Seata\u65e8\u5728\u6253\u9020\u4e00\u5957\u4e00\u7ad9\u5f0f\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u3002\u66f4\u6362\u540d\u5b57\u4e4b\u540e\uff0c\u6211\u5bf9\u5176\u672a\u6765\u7684\u53d1\u5c55\u66f4\u6709\u4fe1\u5fc3\u3002\\n\\n\u8fd9\u91cc\u5148\u5927\u6982\u56de\u5fc6\u4e00\u4e0bSeata\u7684\u6574\u4e2a\u8fc7\u7a0b\u6a21\u578b:\\n\\n![](/img/blog/20190327000119.png)\\n\\n- TM:\u4e8b\u52a1\u7684\u53d1\u8d77\u8005\u3002\u7528\u6765\u544a\u8bc9TC\uff0c\u5168\u5c40\u4e8b\u52a1\u7684\u5f00\u59cb\uff0c\u63d0\u4ea4\uff0c\u56de\u6eda\u3002\\n- RM:\u5177\u4f53\u7684\u4e8b\u52a1\u8d44\u6e90\uff0c\u6bcf\u4e00\u4e2aRM\u90fd\u4f1a\u4f5c\u4e3a\u4e00\u4e2a\u5206\u652f\u4e8b\u52a1\u6ce8\u518c\u5728TC\u3002\\n- TC:\u4e8b\u52a1\u7684\u534f\u8c03\u8005\u3002\u4e5f\u53ef\u4ee5\u770b\u505a\u662fFescar-server\uff0c\u7528\u4e8e\u63a5\u6536\u6211\u4eec\u7684\u4e8b\u52a1\u7684\u6ce8\u518c\uff0c\u63d0\u4ea4\u548c\u56de\u6eda\u3002\\n\\n\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u5bf9\u6574\u4e2a\u89d2\u8272\u6709\u4e2a\u5927\u4f53\u7684\u4ecb\u7ecd\uff0c\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u6211\u5c06\u91cd\u70b9\u4ecb\u7ecd\u5176\u4e2d\u7684\u6838\u5fc3\u89d2\u8272TC\uff0c\u4e5f\u5c31\u662f\u4e8b\u52a1\u534f\u8c03\u5668\u3002\\n\\n# 2.Transcation Coordinator\\n\u4e3a\u4ec0\u4e48\u4e4b\u524d\u4e00\u76f4\u5f3a\u8c03 TC \u662f\u6838\u5fc3\u5462\uff1f\u90a3\u56e0\u4e3aTC\u8fd9\u4e2a\u89d2\u8272\u5c31\u597d\u50cf\u4e0a\u5e1d\u4e00\u6837\uff0c\u7ba1\u63a7\u7740\u4e91\u4e91\u4f17\u751f\u7684RM\u548cTM\u3002\u5982\u679cTC\u4e00\u65e6\u4e0d\u597d\u4f7f\uff0c\u90a3\u4e48RM\u548cTM\u4e00\u65e6\u51fa\u73b0\u5c0f\u95ee\u9898\uff0c\u90a3\u5fc5\u5b9a\u4f1a\u4e71\u7684\u4e00\u584c\u7cca\u6d82\u3002\u6240\u4ee5\u8981\u60f3\u4e86\u89e3Seata\uff0c\u90a3\u4e48\u5fc5\u987b\u8981\u4e86\u89e3\u5b83\u7684TC\u3002\\n\\n\u90a3\u4e48\u4e00\u4e2a\u4f18\u79c0\u7684\u4e8b\u52a1\u534f\u8c03\u8005\u5e94\u8be5\u5177\u5907\u54ea\u4e9b\u80fd\u529b\u5462\uff1f\u6211\u89c9\u5f97\u5e94\u8be5\u6709\u4ee5\u4e0b\u51e0\u4e2a:\\n- \u6b63\u786e\u7684\u534f\u8c03\uff1a\u80fd\u6b63\u786e\u7684\u534f\u8c03RM\u548cTM\u63a5\u4e0b\u6765\u5e94\u8be5\u505a\u4ec0\u4e48\uff0c\u505a\u9519\u4e86\u5e94\u8be5\u600e\u4e48\u529e\uff0c\u505a\u5bf9\u4e86\u5e94\u8be5\u600e\u4e48\u529e\u3002\\n- \u9ad8\u53ef\u7528: \u4e8b\u52a1\u534f\u8c03\u5668\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u5f88\u91cd\u8981\uff0c\u5982\u679c\u4e0d\u80fd\u4fdd\u8bc1\u9ad8\u53ef\u7528\uff0c\u90a3\u4e48\u5b83\u4e5f\u6ca1\u6709\u5b58\u5728\u7684\u5fc5\u8981\u4e86\u3002\\n- \u9ad8\u6027\u80fd\uff1a\u4e8b\u52a1\u534f\u8c03\u5668\u7684\u6027\u80fd\u4e00\u5b9a\u8981\u9ad8\uff0c\u5982\u679c\u4e8b\u52a1\u534f\u8c03\u5668\u6027\u80fd\u6709\u74f6\u9888\u90a3\u4e48\u5b83\u6240\u7ba1\u7406\u7684RM\u548cTM\u90a3\u4e48\u4f1a\u7ecf\u5e38\u9047\u5230\u8d85\u65f6\uff0c\u4ece\u800c\u5f15\u8d77\u56de\u6eda\u9891\u7e41\u3002\\n- \u9ad8\u6269\u5c55\u6027\uff1a\u8fd9\u4e2a\u7279\u70b9\u662f\u5c5e\u4e8e\u4ee3\u7801\u5c42\u9762\u7684\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u4f18\u79c0\u7684\u6846\u67b6\uff0c\u90a3\u4e48\u9700\u8981\u7ed9\u4f7f\u7528\u65b9\u5f88\u591a\u81ea\u5b9a\u4e49\u6269\u5c55\uff0c\u6bd4\u5982\u670d\u52a1\u6ce8\u518c/\u53d1\u73b0\uff0c\u8bfb\u53d6\u914d\u7f6e\u7b49\u7b49\u3002\\n\\n\u4e0b\u9762\u6211\u4e5f\u5c06\u9010\u6b65\u9610\u8ff0Seata\u662f\u5982\u4f55\u505a\u5230\u4e0a\u9762\u56db\u70b9\u3002\\n\\n## 2.1 Seata-Server\u7684\u8bbe\u8ba1\\n\\n\\n![](/img/seata-server/design.png)\\n\\nSeata-Server\u6574\u4f53\u7684\u6a21\u5757\u56fe\u5982\u4e0a\u6240\u793a:\\n- Coordinator Core: \u5728\u6700\u4e0b\u9762\u7684\u6a21\u5757\u662f\u4e8b\u52a1\u534f\u8c03\u5668\u6838\u5fc3\u4ee3\u7801\uff0c\u4e3b\u8981\u7528\u6765\u5904\u7406\u4e8b\u52a1\u534f\u8c03\u7684\u903b\u8f91\uff0c\u5982\u662f\u5426commit,rollback\u7b49\u534f\u8c03\u6d3b\u52a8\u3002\\n- Store:\u5b58\u50a8\u6a21\u5757\uff0c\u7528\u6765\u5c06\u6211\u4eec\u7684\u6570\u636e\u6301\u4e45\u5316\uff0c\u9632\u6b62\u91cd\u542f\u6216\u8005\u5b95\u673a\u6570\u636e\u4e22\u5931\u3002\\n- Discovery: \u670d\u52a1\u6ce8\u518c/\u53d1\u73b0\u6a21\u5757\uff0c\u7528\u4e8e\u5c06Server\u5730\u5740\u66b4\u9732\u7ed9\u6211\u4eecClient\u3002\\n- Config: \u7528\u6765\u5b58\u50a8\u548c\u67e5\u627e\u6211\u4eec\u670d\u52a1\u7aef\u7684\u914d\u7f6e\u3002\\n- Lock: \u9501\u6a21\u5757\uff0c\u7528\u4e8e\u7ed9Seata\u63d0\u4f9b\u5168\u5c40\u9501\u7684\u529f\u80fd\u3002\\n- RPC:\u7528\u4e8e\u548c\u5176\u5b83\u7aef\u901a\u4fe1\u3002\\n- HA-Cluster:\u9ad8\u53ef\u7528\u96c6\u7fa4\uff0c\u76ee\u524d\u8fd8\u6ca1\u5f00\u6e90\uff0c\u4e3aSeata\u63d0\u4f9b\u53ef\u9760\u7684\u9ad8\u53ef\u7528\u670d\u52a1\uff0c\u9884\u8ba1\u5c06\u4f1a\u57280.6\u7248\u672c\u5f00\u6e90\u3002\\n\\n## 2.2 Discovery\\n\\n\u9996\u5148\u6765\u8bb2\u8bb2\u6bd4\u8f83\u57fa\u7840\u7684Discovery\u6a21\u5757\uff0c\u53c8\u79f0\u670d\u52a1\u6ce8\u518c/\u53d1\u73b0\u6a21\u5757\u3002\u6211\u4eec\u5c06Seata-Sever\u542f\u52a8\u4e4b\u540e\uff0c\u9700\u8981\u5c06\u81ea\u5df1\u7684\u5730\u5740\u66b4\u9732\u7ed9\u5176\u5b83\u4f7f\u7528\u8005\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6211\u4eec\u8fd9\u4e2a\u6a21\u5757\u5e2e\u5fd9\u3002\\n\\n![](/img/seata-server/discover.png)\\n\\n\u8fd9\u4e2a\u6a21\u5757\u6709\u4e2a\u6838\u5fc3\u63a5\u53e3RegistryService\uff0c\u5982\u4e0a\u56fe\u6240\u793a:\\n- register\uff1a\u670d\u52a1\u7aef\u4f7f\u7528\uff0c\u8fdb\u884c\u670d\u52a1\u6ce8\u518c\u3002\\n- unregister\uff1a\u670d\u52a1\u7aef\u4f7f\u7528\uff0c\u4e00\u822c\u5728JVM\u5173\u95ed\u94a9\u5b50\uff0cShutdownHook\u4e2d\u8c03\u7528\u3002\\n- subscribe\uff1a\u5ba2\u6237\u7aef\u4f7f\u7528\uff0c\u6ce8\u518c\u76d1\u542c\u4e8b\u4ef6\uff0c\u7528\u6765\u76d1\u542c\u5730\u5740\u7684\u53d8\u5316\u3002\\n- unsubscribe\uff1a\u5ba2\u6237\u7aef\u4f7f\u7528\uff0c\u53d6\u6d88\u6ce8\u518c\u76d1\u542c\u4e8b\u4ef6\u3002\\n- lookup\uff1a\u5ba2\u6237\u7aef\u4f7f\u7528\uff0c\u6839\u636ekey\u67e5\u627e\u670d\u52a1\u5730\u5740\u5217\u8868\u3002\\n- close\uff1a\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u7528\u4e8e\u5173\u95edRegistry\u8d44\u6e90\u3002\\n\\n\u5982\u679c\u9700\u8981\u6dfb\u52a0\u81ea\u5df1\u5b9a\u4e49\u7684\u670d\u52a1\u6ce8\u518c/\u53d1\u73b0\uff0c\u90a3\u4e48\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u5373\u53ef\u3002\u622a\u6b62\u76ee\u524d\u5728\u793e\u533a\u7684\u4e0d\u65ad\u5f00\u53d1\u63a8\u52a8\u4e0b\uff0c\u5df2\u7ecf\u6709\u4e94\u79cd\u670d\u52a1\u6ce8\u518c/\u53d1\u73b0\uff0c\u5206\u522b\u662fredis\u3001zk\u3001nacos\u3001eruka \u548c consul\u3002\u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u4e0bNacos\u7684\u5b9e\u73b0\uff1a\\n\\n#### 2.2.1 register\u63a5\u53e3\uff1a\\n![](/img/seata-server/register.png)\\n\\n\\nstep1:\u6821\u9a8c\u5730\u5740\u662f\u5426\u5408\u6cd5\\n\\nstep2:\u83b7\u53d6Nacos\u7684 Naming \u5b9e\u4f8b\uff0c\u7136\u540e\u5c06\u5730\u5740\u6ce8\u518c\u5230\u670d\u52a1\u540d\u4e3a serverAddr\uff08\u56fa\u5b9a\u670d\u52a1\u540d\uff09 \u7684\u5bf9\u5e94\u96c6\u7fa4\u5206\u7ec4\uff08registry.conf \u6587\u4ef6\u914d\u7f6e\uff09\u4e0a\u9762\u3002\\n\\nunregister\u63a5\u53e3\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u4e0d\u505a\u8be6\u89e3\u3002\\n\\n#### 2.2.2 lookup\u63a5\u53e3\uff1a\\n![](/img/seata-server/lookup.png)\\n\\nstep1\uff1a\u83b7\u53d6\u5f53\u524dclusterName\u540d\u5b57\u3002\\n\\nstep2\uff1a\u5224\u65ad\u5f53\u524d\u96c6\u7fa4\u540d\u5bf9\u5e94\u7684\u670d\u52a1\u662f\u5426\u5df2\u7ecf\u8ba2\u9605\u8fc7\u4e86\uff0c\u5982\u679c\u662f\u76f4\u63a5\u4ecemap\u4e2d\u53d6\u8ba2\u9605\u8fd4\u56de\u7684\u6570\u636e\u3002\\n\\nstep3\uff1a\u5982\u679c\u6ca1\u6709\u8ba2\u9605\u5148\u4e3b\u52a8\u67e5\u8be2\u4e00\u6b21\u670d\u52a1\u5b9e\u4f8b\u5217\u8868\uff0c\u7136\u540e\u6dfb\u52a0\u8ba2\u9605\u5e76\u5c06\u8ba2\u9605\u8fd4\u56de\u7684\u6570\u636e\u5b58\u653e\u5230map\u4e2d\uff0c\u4e4b\u540e\u76f4\u63a5\u4ecemap\u83b7\u53d6\u6700\u65b0\u6570\u636e\u3002\\n\\n\\n#### 2.2.3 subscribe\u63a5\u53e3\\n\\n![](/img/seata-server/subscribe.png)\\n\\n\u8fd9\u4e2a\u63a5\u53e3\u6bd4\u8f83\u7b80\u5355\uff0c\u5177\u4f53\u5206\u4e24\u6b65:\\n\\nstep1\uff1a\u5bf9\u5c06\u8981\u8ba2\u9605\u7684cluster-> listener \u5b58\u653e\u5230map\u4e2d\uff0c\u6b64\u5904nacos\u672a\u63d0\u4ea4\u5355\u673a\u5df2\u8ba2\u9605\u5217\u8868\uff0c\u6240\u4ee5\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u3002\\n\\nstep2\uff1a\u4f7f\u7528Nacos api \u8ba2\u9605\u3002\\n## 2.3 Config\\n\u914d\u7f6e\u6a21\u5757\u4e5f\u662f\u4e00\u4e2a\u6bd4\u8f83\u57fa\u7840\uff0c\u6bd4\u8f83\u7b80\u5355\u7684\u6a21\u5757\u3002\u6211\u4eec\u9700\u8981\u914d\u7f6e\u4e00\u4e9b\u5e38\u7528\u7684\u53c2\u6570\u6bd4\u5982:Netty\u7684select\u7ebf\u7a0b\u6570\u91cf\uff0cwork\u7ebf\u7a0b\u6570\u91cf\uff0csession\u5141\u8bb8\u6700\u5927\u4e3a\u591a\u5c11\u7b49\u7b49\uff0c\u5f53\u7136\u8fd9\u4e9b\u53c2\u6570\u518dSeata\u4e2d\u90fd\u6709\u81ea\u5df1\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u3002\\n\\n\u540c\u6837\u7684\u5728Seata\u4e2d\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3Configuration\uff0c\u7528\u6765\u81ea\u5b9a\u4e49\u6211\u4eec\u9700\u8981\u7684\u83b7\u53d6\u914d\u7f6e\u7684\u5730\u65b9:\\n\\n![](/img/seata-server/config.png)\\n\\n- getInt/Long/Boolean/getConfig()\uff1a\u901a\u8fc7dataId\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\uff0c\u8bfb\u53d6\u4e0d\u5230\u914d\u7f6e\u3001\u5f02\u5e38\u6216\u8d85\u65f6\u5c06\u8fd4\u56de\u53c2\u6570\u4e2d\u7684\u9ed8\u8ba4\u503c\u3002\\n- putConfig\uff1a\u7528\u4e8e\u6dfb\u52a0\u914d\u7f6e\u3002\\n- removeConfig\uff1a\u5220\u9664\u4e00\u4e2a\u914d\u7f6e\u3002\\n- add/remove/get ConfigListener\uff1a\u6dfb\u52a0/\u5220\u9664/\u83b7\u53d6 \u914d\u7f6e\u76d1\u542c\u5668\uff0c\u4e00\u822c\u7528\u6765\u76d1\u542c\u914d\u7f6e\u7684\u53d8\u66f4\u3002\\n\\n\u76ee\u524d\u4e3a\u6b62\u6709\u56db\u79cd\u65b9\u5f0f\u83b7\u53d6Config\uff1aFile(\u6587\u4ef6\u83b7\u53d6)\u3001Nacos\u3001Apollo \u548c ZK\uff08\u4e0d\u63a8\u8350\uff09\u3002\u5728Seata\u4e2d\u9996\u5148\u9700\u8981\u914d\u7f6eregistry.conf\uff0c\u6765\u914d\u7f6econfig.type \u3002\u5b9e\u73b0conf\u6bd4\u8f83\u7b80\u5355\u8fd9\u91cc\u5c31\u4e0d\u6df1\u5165\u5206\u6790\u3002\\n## 2.4 Store\\n\u5b58\u50a8\u5c42\u7684\u5b9e\u73b0\u5bf9\u4e8eSeata\u662f\u5426\u9ad8\u6027\u80fd\uff0c\u662f\u5426\u53ef\u9760\u975e\u5e38\u5173\u952e\u3002\\n\u5982\u679c\u5b58\u50a8\u5c42\u6ca1\u6709\u5b9e\u73b0\u597d\uff0c\u90a3\u4e48\u5982\u679c\u53d1\u751f\u5b95\u673a\uff0c\u5728TC\u4e2d\u6b63\u5728\u8fdb\u884c\u5206\u5e03\u5f0f\u4e8b\u52a1\u5904\u7406\u7684\u6570\u636e\u5c06\u4f1a\u88ab\u4e22\u5931\uff0c\u65e2\u7136\u4f7f\u7528\u4e86\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u90a3\u4e48\u5176\u80af\u5b9a\u4e0d\u80fd\u5bb9\u5fcd\u4e22\u5931\u3002\u5982\u679c\u5b58\u50a8\u5c42\u5b9e\u73b0\u597d\u4e86\uff0c\u4f46\u662f\u5176\u6027\u80fd\u6709\u5f88\u5927\u95ee\u9898\uff0cRM\u53ef\u80fd\u4f1a\u53d1\u751f\u9891\u7e41\u56de\u6eda\u90a3\u4e48\u5176\u5b8c\u5168\u65e0\u6cd5\u5e94\u5bf9\u9ad8\u5e76\u53d1\u7684\u573a\u666f\u3002\\n\\n\u5728Seata\u4e2d\u9ed8\u8ba4\u63d0\u4f9b\u4e86\u6587\u4ef6\u65b9\u5f0f\u7684\u5b58\u50a8\uff0c\u4e0b\u9762\u6211\u4eec\u5b9a\u4e49\u6211\u4eec\u5b58\u50a8\u7684\u6570\u636e\u4e3aSession\uff0c\u800c\u6211\u4eec\u7684TM\u521b\u9020\u7684\u5168\u5c40\u4e8b\u52a1\u64cd\u4f5c\u6570\u636e\u53ebGloabSession\uff0cRM\u521b\u9020\u7684\u5206\u652f\u4e8b\u52a1\u64cd\u4f5c\u6570\u636e\u53ebBranchSession\uff0c\u4e00\u4e2aGloabSession\u53ef\u4ee5\u62e5\u6709\u591a\u4e2aBranchSession\u3002\u6211\u4eec\u7684\u76ee\u7684\u5c31\u662f\u8981\u5c06\u8fd9\u4e48\u591aSession\u5b58\u50a8\u4e0b\u6765\u3002\\n\\n\u5728FileTransactionStoreManager#writeSession\u4ee3\u7801\u4e2d:\\n\\n![](/img/seata-server/store.png)\\n\\n\u4e0a\u9762\u7684\u4ee3\u7801\u4e3b\u8981\u5206\u4e3a\u4e0b\u9762\u51e0\u6b65\uff1a\\n- step1\uff1a\u751f\u6210\u4e00\u4e2aTransactionWriteFuture\u3002\\n- step2\uff1a\u5c06\u8fd9\u4e2afutureRequest\u4e22\u8fdb\u4e00\u4e2aLinkedBlockingQueue\u4e2d\u3002\u4e3a\u4ec0\u4e48\u9700\u8981\u5c06\u6240\u6709\u6570\u636e\u90fd\u4e22\u8fdb\u961f\u5217\u4e2d\u5462\uff1f\u5f53\u7136\u8fd9\u91cc\u5176\u5b9e\u4e5f\u53ef\u4ee5\u7528\u9501\u6765\u5b9e\u73b0\uff0c\u518d\u53e6\u5916\u4e00\u4e2a\u963f\u91cc\u5f00\u6e90\u7684RocketMQ\u4e2d\uff0c\u4f7f\u7528\u7684\u9501\u3002\u4e0d\u8bba\u662f\u961f\u5217\u8fd8\u662f\u9501\u5b83\u4eec\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5355\u7ebf\u7a0b\u5199\uff0c\u8fd9\u53c8\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u6709\u4eba\u4f1a\u89e3\u91ca\u8bf4\uff0c\u9700\u8981\u4fdd\u8bc1\u987a\u5e8f\u5199\uff0c\u8fd9\u6837\u901f\u5ea6\u5c31\u5f88\u5feb\uff0c\u8fd9\u4e2a\u7406\u89e3\u662f\u9519\u8bef\u7684\uff0c\u6211\u4eec\u7684FileChannel\u7684\u5199\u65b9\u6cd5\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5df2\u7ecf\u80fd\u4fdd\u8bc1\u987a\u5e8f\u5199\u4e86\u3002\u4fdd\u8bc1\u5355\u7ebf\u7a0b\u5199\u5176\u5b9e\u662f\u4e3a\u4e86\u8ba9\u6211\u4eec\u8fd9\u4e2a\u5199\u903b\u8f91\u90fd\u662f\u5355\u7ebf\u7a0b\u7684\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u4e9b\u6587\u4ef6\u5199\u6ee1\u6216\u8005\u8bb0\u5f55\u5199\u6570\u636e\u4f4d\u7f6e\u7b49\u7b49\u903b\u8f91\uff0c\u5f53\u7136\u8fd9\u4e9b\u903b\u8f91\u90fd\u53ef\u4ee5\u4e3b\u52a8\u52a0\u9501\u53bb\u505a\uff0c\u4f46\u662f\u4e3a\u4e86\u5b9e\u73b0\u7b80\u5355\u65b9\u4fbf\uff0c\u76f4\u63a5\u518d\u6574\u4e2a\u5199\u903b\u8f91\u6392\u961f\u5904\u7406\u662f\u6700\u4e3a\u5408\u9002\u7684\u3002\\n- step3\uff1a\u8c03\u7528future.get\uff0c\u7b49\u5f85\u6211\u4eec\u8be5\u6761\u6570\u636e\u5199\u903b\u8f91\u5b8c\u6210\u901a\u77e5\u3002\\n\\n\u6211\u4eec\u5c06\u6570\u636e\u63d0\u4ea4\u5230\u961f\u5217\u4e4b\u540e\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6d88\u8d39\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\n\\n![](/img/seata-server/storewrite.png)\\n\\n\u8fd9\u91cc\u5c06\u4e00\u4e2aWriteDataFileRunnable()\u63d0\u4ea4\u8fdb\u6211\u4eec\u7684\u7ebf\u7a0b\u6c60\uff0c\u8fd9\u4e2aRunnable\u7684run()\u65b9\u6cd5\u5982\u4e0b:\\n\\n![](/img/seata-server/storerun.png)\\n\\n\u5206\u4e3a\u4e0b\u9762\u51e0\u6b65:\\n\\nstep1\uff1a \u5224\u65ad\u662f\u5426\u505c\u6b62\uff0c\u5982\u679cstopping\u4e3atrue\u5219\u8fd4\u56denull\u3002\\n\\nstep2\uff1a\u4ece\u6211\u4eec\u7684\u961f\u5217\u4e2d\u83b7\u53d6\u6570\u636e\u3002\\n\\nstep3\uff1a\u5224\u65adfuture\u662f\u5426\u5df2\u7ecf\u8d85\u65f6\u4e86\uff0c\u5982\u679c\u8d85\u65f6\uff0c\u5219\u8bbe\u7f6e\u7ed3\u679c\u4e3afalse\uff0c\u6b64\u65f6\u6211\u4eec\u751f\u4ea7\u8005get()\u65b9\u6cd5\u4f1a\u63a5\u89e6\u963b\u585e\u3002\\n\\nstep4\uff1a\u5c06\u6211\u4eec\u7684\u6570\u636e\u5199\u8fdb\u6587\u4ef6\uff0c\u6b64\u65f6\u6570\u636e\u8fd8\u5728pageCahce\u5c42\u5e76\u6ca1\u6709\u5237\u65b0\u5230\u78c1\u76d8\uff0c\u5982\u679c\u5199\u6210\u529f\u7136\u540e\u6839\u636e\u6761\u4ef6\u5224\u65ad\u662f\u5426\u8fdb\u884c\u5237\u76d8\u64cd\u4f5c\u3002\\n\\nstep5\uff1a\u5f53\u5199\u5165\u6570\u91cf\u5230\u8fbe\u4e00\u5b9a\u7684\u65f6\u5019\uff0c\u6216\u8005\u5199\u5165\u65f6\u95f4\u5230\u8fbe\u4e00\u5b9a\u7684\u65f6\u5019\uff0c\u9700\u8981\u5c06\u6211\u4eec\u5f53\u524d\u7684\u6587\u4ef6\u4fdd\u5b58\u4e3a\u5386\u53f2\u6587\u4ef6\uff0c\u5220\u9664\u4ee5\u524d\u7684\u5386\u53f2\u6587\u4ef6\uff0c\u7136\u540e\u521b\u5efa\u65b0\u7684\u6587\u4ef6\u3002\u8fd9\u4e00\u6b65\u662f\u4e3a\u4e86\u9632\u6b62\u6211\u4eec\u6587\u4ef6\u65e0\u9650\u589e\u957f\uff0c\u5927\u91cf\u65e0\u6548\u6570\u636e\u6d6a\u8d39\u78c1\u76d8\u8d44\u6e90\u3002\\n\\n\u5728\u6211\u4eec\u7684writeDataFile\u4e2d\u6709\u5982\u4e0b\u4ee3\u7801:\\n\\n![](/img/seata-server/writedatafile.png)\\n\\nstep1\uff1a\u9996\u5148\u83b7\u53d6\u6211\u4eec\u7684ByteBuffer\uff0c\u5982\u679c\u8d85\u51fa\u6700\u5927\u5faa\u73afBufferSize\u5c31\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\uff0c\u5426\u5219\u5c31\u4f7f\u7528\u6211\u4eec\u7f13\u5b58\u7684Buffer\u3002\u8fd9\u4e00\u6b65\u53ef\u4ee5\u5f88\u5927\u7684\u51cf\u5c11GC\u3002\\n\\nstep2\uff1a\u7136\u540e\u5c06\u6570\u636e\u6dfb\u52a0\u8fdb\u5165ByteBuffer\u3002\\n\\nstep3\uff1a\u6700\u540e\u5c06ByteBuffer\u5199\u5165\u6211\u4eec\u7684fileChannel,\u8fd9\u91cc\u4f1a\u91cd\u8bd5\u4e09\u6b21\u3002\u6b64\u65f6\u7684\u6570\u636e\u8fd8\u5728pageCache\u5c42\uff0c\u53d7\u4e24\u65b9\u9762\u7684\u5f71\u54cd\uff0cOS\u6709\u81ea\u5df1\u7684\u5237\u65b0\u7b56\u7565\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e1a\u52a1\u7a0b\u5e8f\u4e0d\u80fd\u63a7\u5236\uff0c\u4e3a\u4e86\u9632\u6b62\u5b95\u673a\u7b49\u4e8b\u4ef6\u51fa\u73b0\u9020\u6210\u5927\u91cf\u6570\u636e\u4e22\u5931\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u4e1a\u52a1\u81ea\u5df1\u63a7\u5236flush\u3002\u4e0b\u9762\u662fflush\u7684\u4ee3\u7801:\\n\\n![](/img/seata-server/flush.png)\\n\\n\u8fd9\u91ccflush\u7684\u6761\u4ef6\u5199\u5165\u4e00\u5b9a\u6570\u91cf\u6216\u8005\u5199\u7684\u65f6\u95f4\u8d85\u8fc7\u4e00\u5b9a\u65f6\u95f4\uff0c\u8fd9\u6837\u4e5f\u4f1a\u6709\u4e2a\u5c0f\u95ee\u9898\u5982\u679c\u662f\u505c\u7535\uff0c\u90a3\u4e48pageCache\u4e2d\u6709\u53ef\u80fd\u8fd8\u6709\u6570\u636e\u5e76\u6ca1\u6709\u88ab\u5237\u76d8\uff0c\u4f1a\u5bfc\u81f4\u5c11\u91cf\u7684\u6570\u636e\u4e22\u5931\u3002\u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u540c\u6b65\u6a21\u5f0f\uff0c\u4e5f\u5c31\u662f\u6bcf\u6761\u6570\u636e\u90fd\u9700\u8981\u505a\u5237\u76d8\u64cd\u4f5c\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u6761\u6d88\u606f\u90fd\u843d\u76d8\uff0c\u4f46\u662f\u6027\u80fd\u4e5f\u4f1a\u53d7\u5230\u6781\u5927\u7684\u5f71\u54cd\uff0c\u5f53\u7136\u540e\u7eed\u4f1a\u4e0d\u65ad\u7684\u6f14\u8fdb\u652f\u6301\u3002\\n\\n\u6211\u4eec\u7684store\u6838\u5fc3\u6d41\u7a0b\u4e3b\u8981\u662f\u4e0a\u9762\u51e0\u4e2a\u65b9\u6cd5\uff0c\u5f53\u7136\u8fd8\u6709\u4e00\u4e9b\u6bd4\u5982\uff0csession\u91cd\u5efa\u7b49\uff0c\u8fd9\u4e9b\u6bd4\u8f83\u7b80\u5355\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u3002\\n\\n## 2.5 Lock\\n\u5927\u5bb6\u77e5\u9053\u6570\u636e\u5e93\u5b9e\u73b0\u9694\u79bb\u7ea7\u522b\u4e3b\u8981\u662f\u901a\u8fc7\u9501\u6765\u5b9e\u73b0\u7684\uff0c\u540c\u6837\u7684\u518d\u5206\u5e03\u5f0f\u4e8b\u52a1\u6846\u67b6Seata\u4e2d\u8981\u5b9e\u73b0\u9694\u79bb\u7ea7\u522b\u4e5f\u9700\u8981\u901a\u8fc7\u9501\u3002\u4e00\u822c\u5728\u6570\u636e\u5e93\u4e2d\u6570\u636e\u5e93\u7684\u9694\u79bb\u7ea7\u522b\u4e00\u5171\u6709\u56db\u79cd:\u8bfb\u672a\u63d0\u4ea4\uff0c\u8bfb\u5df2\u63d0\u4ea4\uff0c\u53ef\u91cd\u590d\u8bfb\uff0c\u4e32\u884c\u5316\u3002\u5728Seata\u4e2d\u53ef\u4ee5\u4fdd\u8bc1\u9694\u79bb\u7ea7\u522b\u662f\u8bfb\u5df2\u63d0\u4ea4\uff0c\u4f46\u662f\u63d0\u4f9b\u4e86\u8fbe\u5230\u8bfb\u5df2\u63d0\u4ea4\u9694\u79bb\u7684\u624b\u6bb5\u3002\\n\\nLock\u6a21\u5757\u4e5f\u5c31\u662fSeata\u5b9e\u73b0\u9694\u79bb\u7ea7\u522b\u7684\u6838\u5fc3\u6a21\u5757\u3002\u5728Lock\u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3\u7528\u4e8e\u7ba1\u7406\u6211\u4eec\u7684\u9501:\\n![](/img/seata-server/lockManager.png)\\n\\n\u5176\u4e2d\u6709\u4e09\u4e2a\u65b9\u6cd5:\\n- acquireLock\uff1a\u7528\u4e8e\u5bf9\u6211\u4eec\u7684BranchSession\u52a0\u9501\uff0c\u8fd9\u91cc\u867d\u7136\u662f\u4f20\u7684\u5206\u652f\u4e8b\u52a1Session\uff0c\u5b9e\u9645\u4e0a\u662f\u5bf9\u5206\u652f\u4e8b\u52a1\u7684\u8d44\u6e90\u52a0\u9501\uff0c\u6210\u529f\u8fd4\u56detrue\u3002\\n- isLockable\uff1a\u6839\u636e\u4e8b\u52a1ID\uff0c\u8d44\u6e90Id\uff0c\u9501\u4f4f\u7684Key\u6765\u67e5\u8be2\u662f\u5426\u5df2\u7ecf\u52a0\u9501\u3002\\n- cleanAllLocks\uff1a\u6e05\u9664\u6240\u6709\u7684\u9501\u3002\\n\u5bf9\u4e8e\u9501\u6211\u4eec\u53ef\u4ee5\u5728\u672c\u5730\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7redis\u6216\u8005mysql\u6765\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u3002\u5b98\u65b9\u9ed8\u8ba4\u63d0\u4f9b\u4e86\u672c\u5730\u5168\u5c40\u9501\u7684\u5b9e\u73b0\uff1a\\n![](/img/seata-server/defaultLock.png)\\n\\n\u5728\u672c\u5730\u9501\u7684\u5b9e\u73b0\u4e2d\u6709\u4e24\u4e2a\u5e38\u91cf\u9700\u8981\u5173\u6ce8:\\n- BUCKET_PER_TABLE\uff1a\u7528\u6765\u5b9a\u4e49\u6bcf\u4e2atable\u6709\u591a\u5c11\u4e2abucket\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u540e\u7eed\u5bf9\u540c\u4e00\u4e2a\u8868\u52a0\u9501\u7684\u65f6\u5019\u51cf\u5c11\u7ade\u4e89\u3002\\n- LOCK_MAP\uff1a\u8fd9\u4e2amap\u4ece\u5b9a\u4e49\u4e0a\u6765\u770b\u975e\u5e38\u590d\u6742\uff0c\u91cc\u91cc\u5916\u5916\u5957\u4e86\u5f88\u591a\u5c42Map\uff0c\u8fd9\u91cc\u7528\u4e2a\u8868\u683c\u5177\u4f53\u8bf4\u660e\u4e00\u4e0b\uff1a\\n\\n\u5c42\u6570 | key| value\\n---|---|---\\n1-LOCK_MAP | resourceId\uff08jdbcUrl\uff09 | dbLockMap\\n2- dbLockMap | tableName \uff08\u8868\u540d\uff09 | tableLockMap\\n3- tableLockMap | PK.hashcode%Bucket \uff08\u4e3b\u952e\u503c\u7684hashcode%bucket\uff09 | bucketLockMap\\n4- bucketLockMap | PK | trascationId\\n\\n\u53ef\u4ee5\u770b\u89c1\u5b9e\u9645\u4e0a\u7684\u52a0\u9501\u5728bucketLockMap\u8fd9\u4e2amap\u4e2d\uff0c\u8fd9\u91cc\u5177\u4f53\u7684\u52a0\u9501\u65b9\u6cd5\u6bd4\u8f83\u7b80\u5355\u5c31\u4e0d\u4f5c\u8be6\u7ec6\u9610\u8ff0\uff0c\u4e3b\u8981\u662f\u9010\u6b65\u7684\u627e\u5230bucketLockMap,\u7136\u540e\u5c06\u5f53\u524dtrascationId\u585e\u8fdb\u53bb\uff0c\u5982\u679c\u8fd9\u4e2a\u4e3b\u952e\u5f53\u524d\u6709TranscationId\uff0c\u90a3\u4e48\u6bd4\u8f83\u662f\u5426\u662f\u81ea\u5df1\uff0c\u5982\u679c\u4e0d\u662f\u5219\u52a0\u9501\u5931\u8d25\u3002\\n\\n## 2.6 RPC\\n\u4fdd\u8bc1Seata\u9ad8\u6027\u80fd\u7684\u5173\u952e\u4e4b\u4e00\u4e5f\u662f\u4f7f\u7528\u4e86Netty\u4f5c\u4e3aRPC\u6846\u67b6\uff0c\u91c7\u7528\u9ed8\u8ba4\u914d\u7f6e\u7684\u7ebf\u7a0b\u6a21\u578b\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![](/img/seata-server/reactor.png)\\n\\n\u5982\u679c\u91c7\u7528\u9ed8\u8ba4\u7684\u57fa\u672c\u914d\u7f6e\u90a3\u4e48\u4f1a\u6709\u4e00\u4e2aAcceptor\u7ebf\u7a0b\u7528\u4e8e\u5904\u7406\u5ba2\u6237\u7aef\u7684\u94fe\u63a5\uff0c\u4f1a\u6709cpu*2\u6570\u91cf\u7684NIO-Thread\uff0c\u518d\u8fd9\u4e2a\u7ebf\u7a0b\u4e2d\u4e0d\u4f1a\u505a\u4e1a\u52a1\u592a\u91cd\u7684\u4e8b\u60c5\uff0c\u53ea\u4f1a\u505a\u4e00\u4e9b\u901f\u5ea6\u6bd4\u8f83\u5feb\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u7f16\u89e3\u7801\uff0c\u5fc3\u8df3\u4e8b\u4ef6\uff0c\u548cTM\u6ce8\u518c\u3002\u4e00\u4e9b\u6bd4\u8f83\u8d39\u65f6\u95f4\u7684\u4e1a\u52a1\u64cd\u4f5c\u5c06\u4f1a\u4ea4\u7ed9\u4e1a\u52a1\u7ebf\u7a0b\u6c60\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e1a\u52a1\u7ebf\u7a0b\u6c60\u914d\u7f6e\u4e3a\u6700\u5c0f\u7ebf\u7a0b\u4e3a100\uff0c\u6700\u5927\u4e3a500\u3002\\n\\nSeata \u76ee\u524d\u5141\u8bb8\u914d\u7f6e\u7684\u4f20\u8f93\u5c42\u914d\u7f6e\u5982\u56fe\u6240\u793a\uff0c\u7528\u6237\u53ef\u6839\u636e\u9700\u8981\u8fdb\u884cNetty\u4f20\u8f93\u5c42\u9762\u7684\u8c03\u4f18\uff0c\u914d\u7f6e\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\u914d\u7f6e\uff0c\u9996\u6b21\u52a0\u8f7d\u65f6\u751f\u6548\u3002  \\n\\n![](/img/seata-server/transport.png)\\n\\n\u8fd9\u91cc\u9700\u8981\u63d0\u4e00\u4e0b\u7684\u662fSeata\u7684\u5fc3\u8df3\u673a\u5236\uff0c\u8fd9\u91cc\u662f\u4f7f\u7528Netty\u7684IdleStateHandler\u5b8c\u6210\u7684\uff0c\u5982\u4e0b:\\n\\n![](/img/seata-server/idleStateHandler.png)\\n\\n\u5728Sever\u7aef\u5bf9\u4e8e\u5199\u6ca1\u6709\u8bbe\u7f6e\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\uff0c\u5bf9\u4e8e\u8bfb\u8bbe\u7f6e\u4e86\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\uff0c\u9ed8\u8ba4\u4e3a15s(\u5ba2\u6237\u7aef\u9ed8\u8ba4\u5199\u7a7a\u95f2\u4e3a5s\uff0c\u53d1\u9001ping\u6d88\u606f)\uff0c\u5982\u679c\u8d85\u8fc715s\u5219\u4f1a\u5c06\u94fe\u63a5\u65ad\u5f00\uff0c\u5173\u95ed\u8d44\u6e90\u3002\\n\\n\\n![](/img/seata-server/userEventTriggered.png)\\n\\nstep1\uff1a\u5224\u65ad\u662f\u5426\u662f\u8bfb\u7a7a\u95f2\u7684\u68c0\u6d4b\u4e8b\u4ef6\u3002\\n\\nstep2\uff1a\u5982\u679c\u662f\u5219\u65ad\u5f00\u94fe\u63a5\uff0c\u5173\u95ed\u8d44\u6e90\u3002   \\n\u53e6\u5916Seata \u505a\u4e86\u5185\u5b58\u6c60\u3001\u5ba2\u6237\u7aef\u505a\u4e86\u6279\u91cf\u5c0f\u5305\u5408\u5e76\u53d1\u9001\u3001Netty\u8fde\u63a5\u6c60\uff08\u51cf\u5c11\u8fde\u63a5\u521b\u5efa\u65f6\u7684\u670d\u52a1\u4e0d\u53ef\u7528\u65f6\u95f4\uff09\u7b49\u529f\u80fd\uff0c\u4ee5\u4e0b\u4e3a\u6279\u91cf\u5c0f\u5305\u5408\u5e76\u529f\u80fd\u3002   \\n\\n![](/img/seata-server/send.png)\\n\\n\u5ba2\u6237\u7aef\u7684\u6d88\u606f\u53d1\u9001\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u6d88\u606f\u53d1\u9001\u901a\u8fc7 AbstractRpcRemoting#sendAsyncRequest \u5305\u88c5\u6210 RpcMessage \u5b58\u50a8\u81f3 basket \u4e2d\u5e76\u5524\u9192\u5408\u5e76\u53d1\u9001\u7ebf\u7a0b\u3002\u5408\u5e76\u53d1\u9001\u7ebf\u7a0b\u901a\u8fc7 while true \u7684\u5f62\u5f0f\\n\u6700\u957f\u7b49\u5f851ms\u5bf9basket\u7684\u6d88\u606f\u53d6\u51fa\u5305\u88c5\u6210 merge \u6d88\u606f\u8fdb\u884c\u771f\u6b63\u53d1\u9001\uff0c\u6b64\u65f6\u82e5 channel \u51fa\u73b0\u5f02\u5e38\u5219\u4f1a\u901a\u8fc7 fail-fast \u5feb\u901f\u5931\u8d25\u8fd4\u56de\u7ed3\u679c\u3002merge\u6d88\u606f\u53d1\u9001\u524d\u5728 map \u4e2d\u6807\u8bc6\uff0c\u6536\u5230\u7ed3\u679c\u540e\u6279\u91cf\u786e\u8ba4\uff08AbstractRpcRemotingClient#channelRead\uff09\uff0c\u5e76\u901a\u8fc7 dispatch \u5206\u53d1\u81f3 messageListener \u548c handler \u53bb\u5904\u7406\u3002\u540c\u65f6\uff0ctimerExecutor \u5b9a\u65f6\u5bf9\u5df2\u53d1\u9001\u6d88\u606f\u8fdb\u884c\u8d85\u65f6\u68c0\u6d4b\uff0c\u82e5\u8d85\u65f6\u7f6e\u4e3a\u5931\u8d25\u3002\u5177\u4f53\u6d88\u606f\u534f\u8bae\u8bbe\u8ba1\u5c06\u4f1a\u5728\u540e\u7eed\u7684\u6587\u7ae0\u4e2d\u7ed9\u51fa\uff0c\u656c\u8bf7\u5173\u6ce8\u3002   \\nSeata \u7684 Netty Client\u7531 TMClient\u548cRMClient \u7ec4\u6210\uff0c\u6839\u636e\u4e8b\u52a1\u89d2\u8272\u529f\u80fd\u533a\u5206\uff0c\u90fd\u7ee7\u627f AbstractRpcRemotingClient\uff0cAbstractRpcRemotingClient \u5b9e\u73b0\u4e86 RemotingService\uff08\u670d\u52a1\u542f\u505c\uff09, RegisterMsgListener\uff08netty \u8fde\u63a5\u6c60\u8fde\u63a5\u521b\u5efa\u56de\u8c03\uff09\u548c ClientMessageSender\uff08\u6d88\u606f\u53d1\u9001\uff09\u7ee7\u627f\u4e86 AbstractRpcRemoting\uff08 Client\u548cServer \u9876\u5c42\u6d88\u606f\u53d1\u9001\u548c\u5904\u7406\u7684\u6a21\u677f\uff09\u3002    \\nRMClient\u7c7b\u5173\u7cfb\u56fe\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n![](/img/seata-server/class.png)\\nTMClient \u548c RMClient \u53c8\u4f1a\u6839\u636e\u81ea\u8eab\u7684 poolConfig \u914d\u7f6e\u4e0e NettyPoolableFactory implements KeyedPoolableObjectFactory<NettyPoolKey, Channel> \u8fdb\u884c channel \u8fde\u63a5\u7684\u4ea4\u4e92\uff0cchannel \u8fde\u63a5\u6c60\u6839\u636e\u89d2\u8272 key+ip \u4f5c\u4e3a\u8fde\u63a5\u6c60\u7684 key \u6765\u5b9a\u4f4d\u5404\u4e2a\u8fde\u63a5\u6c60\\n\uff0c\u8fde\u63a5\u6c60\u5bf9 channel \u8fdb\u884c\u7edf\u4e00\u7684\u7ba1\u7406\u3002TMClient \u548c RMClient \u5728\u53d1\u9001\u8fc7\u7a0b\u4e2d\u5bf9\u4e8e\u6bcf\u4e2a ip \u53ea\u4f1a\u4f7f\u7528\u4e00\u4e2a\u957f\u8fde\u63a5\uff0c\u4f46\u8fde\u63a5\u4e0d\u53ef\u7528\u65f6\uff0c\u4f1a\u4ece\u8fde\u63a5\u6c60\u4e2d\u5feb\u901f\u53d6\u51fa\u5df2\u7ecf\u521b\u5efa\u597d\u5e76\u53ef\u7528\u7684\u8fde\u63a5\uff0c\u51cf\u5c11\u670d\u52a1\u7684\u4e0d\u53ef\u7528\u65f6\u95f4\u3002\\n\\n## 2.7 HA-Cluster\\n\u76ee\u524d\u5b98\u65b9\u6ca1\u6709\u516c\u5e03HA-Cluster,\u4f46\u662f\u901a\u8fc7\u4e00\u4e9b\u5176\u5b83\u4e2d\u95f4\u4ef6\u548c\u5b98\u65b9\u7684\u4e00\u4e9b\u900f\u9732\uff0c\u53ef\u4ee5\u5c06HA-Cluster\u7528\u5982\u4e0b\u65b9\u5f0f\u8bbe\u8ba1:\\n![](/img/seata-server/hacluster.png)\\n\\n\u5177\u4f53\u7684\u6d41\u7a0b\u5982\u4e0b:\\n\\nstep1\uff1a\u5ba2\u6237\u7aef\u53d1\u5e03\u4fe1\u606f\u7684\u65f6\u5019\u6839\u636etranscationId\u4fdd\u8bc1\u540c\u4e00\u4e2atranscation\u662f\u5728\u540c\u4e00\u4e2amaster\u4e0a\uff0c\u901a\u8fc7\u591a\u4e2aMaster\u6c34\u5e73\u6269\u5c55\uff0c\u63d0\u4f9b\u5e76\u53d1\u5904\u7406\u6027\u80fd\u3002\\n\\nstep2\uff1a\u5728server\u7aef\u4e2d\u4e00\u4e2amaster\u6709\u591a\u4e2aslave\uff0cmaster\u4e2d\u7684\u6570\u636e\u8fd1\u5b9e\u65f6\u540c\u6b65\u5230slave\u4e0a\uff0c\u4fdd\u8bc1\u5f53master\u5b95\u673a\u7684\u65f6\u5019\uff0c\u8fd8\u80fd\u6709\u5176\u5b83slave\u9876\u4e0a\u6765\u53ef\u4ee5\u7528\u3002\\n\\n\u5f53\u7136\u4e0a\u8ff0\u4e00\u5207\u90fd\u662f\u731c\u6d4b\uff0c\u5177\u4f53\u7684\u8bbe\u8ba1\u5b9e\u73b0\u8fd8\u5f97\u7b490.5\u7248\u672c\u4e4b\u540e\u3002\u76ee\u524d\u6709\u4e00\u4e2aGo\u7248\u672c\u7684Seata-Server\u4e5f\u6350\u8d60\u7ed9\u4e86Seata(\u8fd8\u5728\u6d41\u7a0b\u4e2d)\uff0c\u5176\u901a\u8fc7raft\u5b9e\u73b0\u526f\u672c\u4e00\u81f4\u6027\uff0c\u5176\u5b83\u7ec6\u8282\u4e0d\u662f\u592a\u6e05\u695a\u3002\\n\\n## 2.8 Metrics  \\n\u8fd9\u4e2a\u6a21\u5757\u4e5f\u662f\u4e00\u4e2a\u6ca1\u6709\u5177\u4f53\u516c\u5e03\u5b9e\u73b0\u7684\u6a21\u5757\uff0c\u5f53\u7136\u6709\u53ef\u80fd\u4f1a\u63d0\u4f9b\u63d2\u4ef6\u53e3\uff0c\u8ba9\u5176\u5b83\u7b2c\u4e09\u65b9metric\u63a5\u5165\u8fdb\u6765\uff0c\u6700\u8fd1Apache SkyWalking \u6b63\u5728\u548cSeata\u5c0f\u7ec4\u5546\u8ba8\u5982\u4f55\u63a5\u5165\u8fdb\u6765\u3002\\n\\n# 3.Coordinator Core\\n\u4e0a\u9762\u6211\u4eec\u8bb2\u4e86\u5f88\u591aServer\u57fa\u7840\u6a21\u5757\uff0c\u60f3\u5fc5\u5927\u5bb6\u5bf9Seata\u7684\u5b9e\u73b0\u5df2\u7ecf\u6709\u4e2a\u5927\u6982\uff0c\u63a5\u4e0b\u6765\u6211\u4f1a\u8bb2\u89e3\u4e8b\u52a1\u534f\u8c03\u5668\u5177\u4f53\u903b\u8f91\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u8ba9\u5927\u5bb6\u66f4\u52a0\u4e86\u89e3Seata\u7684\u5b9e\u73b0\u5185\u5e55\u3002\\n\\n## 3.1 \u542f\u52a8\u6d41\u7a0b\\n\u542f\u52a8\u65b9\u6cd5\u5728Server\u7c7b\u6709\u4e2amain\u65b9\u6cd5\uff0c\u5b9a\u4e49\u4e86\u6211\u4eec\u542f\u52a8\u6d41\u7a0b\uff1a\\n\\n![](/img/seata-server/main.png)\\n\\nstep1\uff1a\u521b\u5efa\u4e00\u4e2aRpcServer\uff0c\u518d\u8fd9\u4e2a\u91cc\u9762\u5305\u542b\u4e86\u6211\u4eec\u7f51\u7edc\u7684\u64cd\u4f5c\uff0c\u7528Netty\u5b9e\u73b0\u4e86\u670d\u52a1\u7aef\u3002\\n\\nstep2\uff1a\u89e3\u6790\u7aef\u53e3\u53f7\u3001\u672c\u5730\u6587\u4ef6\u5730\u5740\uff08\u7528\u6237Server\u5b95\u673a\u672a\u5904\u7406\u5b8c\u6210\u4e8b\u52a1\u6062\u590d)\u3001IP(\u53ef\u9009\uff0c\u672c\u673a\u53ea\u80fd\u83b7\u53d6\u5185\u7f51ip\uff0c\u5728\u8de8\u7f51\u7edc\u65f6\u9700\u8981\u4e00\u4e2a\u5bf9\u5916\u7684vip\u6ce8\u518c\u670d\u52a1)\u3002\\n\\nstep3\uff1a\u521d\u59cb\u5316SessionHoler,\u5176\u4e2d\u6700\u91cd\u8981\u7684\u91cd\u8981\u5c31\u662f\u91cd\u6211\u4eecdataDir\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u6062\u590d\u6211\u4eec\u7684\u6570\u636e\uff0c\u91cd\u5efa\u6211\u4eec\u7684Session\u3002\\n\\nstep4\uff1a\u521b\u5efa\u4e00\u4e2aCoorDinator,\u8fd9\u4e2a\u4e5f\u662f\u6211\u4eec\u4e8b\u52a1\u534f\u8c03\u5668\u7684\u903b\u8f91\u6838\u5fc3\u4ee3\u7801\uff0c\u7136\u540e\u5c06\u5176\u521d\u59cb\u5316\uff0c\u5176\u5185\u90e8\u521d\u59cb\u5316\u7684\u903b\u8f91\u4f1a\u521b\u5efa\u56db\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff1a\\n- retryRollbacking\uff1a\u91cd\u8bd5rollback\u5b9a\u65f6\u4efb\u52a1\uff0c\u7528\u4e8e\u5c06\u90a3\u4e9b\u5931\u8d25\u7684rollback\u8fdb\u884c\u91cd\u8bd5\u7684\uff0c\u6bcf\u96945ms\u6267\u884c\u4e00\u6b21\u3002\\n- retryCommitting\uff1a\u91cd\u8bd5commit\u5b9a\u65f6\u4efb\u52a1\uff0c\u7528\u4e8e\u5c06\u90a3\u4e9b\u5931\u8d25\u7684commit\u8fdb\u884c\u91cd\u8bd5\u7684\uff0c\u6bcf\u96945ms\u6267\u884c\u4e00\u6b21\u3002\\n- asyncCommitting\uff1a\u5f02\u6b65commit\u5b9a\u65f6\u4efb\u52a1\uff0c\u7528\u4e8e\u6267\u884c\u5f02\u6b65\u7684commit\uff0c\u6bcf\u969410ms\u4e00\u6b21\u3002\\n- timeoutCheck\uff1a\u8d85\u65f6\u5b9a\u65f6\u4efb\u52a1\u68c0\u6d4b\uff0c\u7528\u4e8e\u68c0\u6d4b\u8d85\u65f6\u7684\u4efb\u52a1\uff0c\u7136\u540e\u6267\u884c\u8d85\u65f6\u7684\u903b\u8f91\uff0c\u6bcf\u96942ms\u6267\u884c\u4e00\u6b21\u3002\\n\\nstep5\uff1a \u521d\u59cb\u5316UUIDGenerator\u8fd9\u4e2a\u4e5f\u662f\u6211\u4eec\u751f\u6210\u5404\u79cdID(transcationId,branchId)\u7684\u57fa\u672c\u7c7b\u3002\\n\\nstep6\uff1a\u5c06\u672c\u5730IP\u548c\u76d1\u542c\u7aef\u53e3\u8bbe\u7f6e\u5230XID\u4e2d\uff0c\u521d\u59cb\u5316rpcServer\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u3002\\n\\n\u542f\u52a8\u6d41\u7a0b\u6bd4\u8f83\u7b80\u5355\uff0c\u4e0b\u9762\u6211\u4f1a\u4ecb\u7ecd\u5206\u5e03\u5f0f\u4e8b\u52a1\u6846\u67b6\u4e2d\u7684\u5e38\u89c1\u7684\u4e00\u4e9b\u4e1a\u52a1\u903b\u8f91Seata\u662f\u5982\u4f55\u5904\u7406\u7684\u3002\\n## 3.2 Begin-\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\\n\u4e00\u6b21\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u8d77\u59cb\u70b9\u4e00\u5b9a\u662f\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\uff0c\u9996\u5148\u6211\u4eec\u770b\u770b\u5168\u5c40\u4e8b\u52a1Seata\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1a\\n\\n![](/img/seata-server/begin.png)\\n\\nstep1\uff1a \u6839\u636e\u5e94\u7528ID\uff0c\u4e8b\u52a1\u5206\u7ec4\uff0c\u540d\u5b57\uff0c\u8d85\u65f6\u65f6\u95f4\u521b\u5efa\u4e00\u4e2aGloabSession\uff0c\u8fd9\u4e2a\u5728\u524d\u9762\u4e5f\u63d0\u5230\u8fc7\u5b83\u548cbranchSession\u5206\u522b\u662f\u4ec0\u4e48\u3002\\n\\nstep2\uff1a\u5bf9\u5176\u6dfb\u52a0\u4e00\u4e2aRootSessionManager\u7528\u4e8e\u76d1\u542c\u4e00\u4e9b\u4e8b\u4ef6\uff0c\u8fd9\u91cc\u8981\u8bf4\u4e00\u4e0b\u76ee\u524d\u5728Seata\u91cc\u9762\u6709\u56db\u79cd\u7c7b\u578b\u7684Listener(\u8fd9\u91cc\u8981\u8bf4\u660e\u7684\u662f\u6240\u6709\u7684sessionManager\u90fd\u5b9e\u73b0\u4e86SessionLifecycleListener)\uff1a\\n- ROOT_SESSION_MANAGER\uff1a\u6700\u5168\uff0c\u6700\u5927\u7684\uff0c\u62e5\u6709\u6240\u6709\u7684Session\u3002\\n- ASYNC_COMMITTING_SESSION_MANAGER\uff1a\u7528\u4e8e\u7ba1\u7406\u9700\u8981\u505a\u5f02\u6b65commit\u7684Session\u3002\\n- RETRY_COMMITTING_SESSION_MANAGER\uff1a\u7528\u4e8e\u7ba1\u7406\u91cd\u8bd5commit\u7684Session\u3002\\n- RETRY_ROLLBACKING_SESSION_MANAGER\uff1a\u7528\u4e8e\u7ba1\u7406\u91cd\u8bd5\u56de\u6eda\u7684Session\u3002\\n\u7531\u4e8e\u8fd9\u91cc\u662f\u5f00\u542f\u4e8b\u52a1\uff0c\u5176\u5b83SessionManager\u4e0d\u9700\u8981\u5173\u6ce8\uff0c\u6211\u4eec\u53ea\u6dfb\u52a0RootSessionManager\u5373\u53ef\u3002\\n\\nstep3\uff1a\u5f00\u542fGlobalsession\\n\\n![](/img/seata-server/begin2.png)\\n\\n\u8fd9\u4e00\u6b65\u4f1a\u628a\u72b6\u6001\u53d8\u4e3aBegin,\u8bb0\u5f55\u5f00\u59cb\u65f6\u95f4,\u5e76\u4e14\u8c03\u7528RootSessionManager\u7684onBegin\u76d1\u542c\u65b9\u6cd5\uff0c\u5c06Session\u4fdd\u5b58\u5230map\u5e76\u5199\u5165\u5230\u6211\u4eec\u7684\u6587\u4ef6\u3002\\n\\nstep4\uff1a\u6700\u540e\u8fd4\u56deXID\uff0c\u8fd9\u4e2aXID\u662f\u7531 ip+port+transactionId \u7ec4\u6210\u7684\uff0c\u975e\u5e38\u91cd\u8981\uff0c\u5f53TM\u7533\u8bf7\u5230\u4e4b\u540e\u9700\u8981\u5c06\u8fd9\u4e2aID\u4f20\u5230RM\u4e2d\uff0cRM\u901a\u8fc7XID\u6765\u51b3\u5b9a\u5230\u5e95\u5e94\u8be5\u8bbf\u95ee\u54ea\u4e00\u53f0Server\u3002\\n\\n## 3.3 BranchRegister-\u5206\u652f\u4e8b\u52a1\u6ce8\u518c\\n\u5f53\u6211\u4eec\u5168\u5c40\u4e8b\u52a1\u5728TM\u5f00\u542f\u4e4b\u540e\uff0c\u6211\u4eecRM\u7684\u5206\u652f\u4e8b\u52a1\u4e5f\u9700\u8981\u6ce8\u518c\u5230\u6211\u4eec\u7684\u5168\u5c40\u4e8b\u52a1\u4e4b\u4e0a\uff0c\u8fd9\u91cc\u770b\u770b\u662f\u5982\u4f55\u5904\u7406\u7684\uff1a\\n\\n![](/img/seata-server/branchRegister.png)\\n\\nstep1\uff1a\u901a\u8fc7transactionId\u83b7\u53d6\u5e76\u6821\u9a8c\u5168\u5c40\u4e8b\u52a1\u662f\u5426\u662f\u5f00\u542f\u72b6\u6001\u3002\\n\\nstep2\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\u4e8b\u52a1\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u7684BranchSession\u3002\\n\\nstep3\uff1a\u5bf9\u5206\u652f\u4e8b\u52a1\u8fdb\u884c\u52a0\u5168\u5c40\u9501\uff0c\u8fd9\u91cc\u7684\u903b\u8f91\u5c31\u662f\u4f7f\u7528\u7684\u6211\u4eec\u9501\u6a21\u5757\u7684\u903b\u8f91\u3002\\n\\nstep4\uff1a\u6dfb\u52a0branchSession\uff0c\u4e3b\u8981\u662f\u5c06\u5176\u6dfb\u52a0\u5230globalSession\u5bf9\u8c61\u4e2d\uff0c\u5e76\u5199\u5165\u5230\u6211\u4eec\u7684\u6587\u4ef6\u4e2d\u3002\\n\\nstep5\uff1a\u8fd4\u56debranchId,\u8fd9\u4e2aID\u4e5f\u5f88\u91cd\u8981\uff0c\u6211\u4eec\u540e\u7eed\u9700\u8981\u7528\u5b83\u6765\u56de\u6eda\u6211\u4eec\u7684\u4e8b\u52a1\uff0c\u6216\u8005\u5bf9\u6211\u4eec\u5206\u652f\u4e8b\u52a1\u72b6\u6001\u66f4\u65b0\u3002\\n\\n\u5206\u652f\u4e8b\u52a1\u6ce8\u518c\u4e4b\u540e\uff0c\u8fd8\u9700\u8981\u6c47\u62a5\u5206\u652f\u4e8b\u52a1\u7684\u672c\u5730\u4e8b\u52a1\u7684\u6267\u884c\u5230\u5e95\u662f\u6210\u529f\u8fd8\u662f\u5931\u8d25\uff0c\u5728Server\u76ee\u524d\u53ea\u662f\u7b80\u5355\u7684\u505a\u4e00\u4e0b\u4fdd\u5b58\u8bb0\u5f55\uff0c\u6c47\u62a5\u7684\u76ee\u7684\u662f\uff0c\u5c31\u7b97\u8fd9\u4e2a\u5206\u652f\u4e8b\u52a1\u5931\u8d25\uff0c\u5982\u679cTM\u8fd8\u662f\u6267\u610f\u8981\u63d0\u4ea4\u5168\u5c40\u4e8b\u52a1\uff08catch \u5f02\u5e38\u4e0d\u629b\u51fa\uff09\uff0c\u90a3\u4e48\u518d\u904d\u5386\u63d0\u4ea4\u5206\u652f\u4e8b\u52a1\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u5931\u8d25\u7684\u5206\u652f\u4e8b\u52a1\u5c31\u4e0d\u9700\u8981\u63d0\u4ea4\uff08\u7528\u6237\u9009\u62e9\u6027\u8df3\u8fc7\uff09\u3002\\n\\n## 3.4 GlobalCommit - \u5168\u5c40\u63d0\u4ea4\\n\\n\u5f53\u6211\u4eec\u5206\u652f\u4e8b\u52a1\u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u5c31\u8f6e\u5230\u6211\u4eec\u7684TM-\u4e8b\u52a1\u7ba1\u7406\u5668\u6765\u51b3\u5b9a\u662f\u63d0\u4ea4\u8fd8\u662f\u56de\u6eda\uff0c\u5982\u679c\u662f\u63d0\u4ea4\uff0c\u90a3\u4e48\u5c31\u4f1a\u8d70\u5230\u4e0b\u9762\u7684\u903b\u8f91:\\n\\n\\n![](/img/seata-server/commit.png)\\n\\nstep1\uff1a\u9996\u5148\u627e\u5230\u6211\u4eec\u7684globalSession\u3002\u5982\u679c\u5b83\u4e3anull\u8bc1\u660e\u5df2\u7ecf\u88abcommit\u8fc7\u4e86\uff0c\u90a3\u4e48\u76f4\u63a5\u5e42\u7b49\u64cd\u4f5c\uff0c\u8fd4\u56de\u6210\u529f\u3002\\n\\nstep2\uff1a\u5173\u95ed\u6211\u4eec\u7684GloabSession\u9632\u6b62\u518d\u6b21\u6709\u65b0\u7684branch\u8fdb\u6765(\u8de8\u670d\u52a1\u8c03\u7528\u8d85\u65f6\u56de\u6eda\uff0cprovider\u5728\u7ee7\u7eed\u6267\u884c)\u3002\\n\\nstep3\uff1a\u5982\u679cstatus\u662f\u7b49\u4e8eBegin\uff0c\u90a3\u4e48\u4e45\u8bc1\u660e\u8fd8\u6ca1\u6709\u63d0\u4ea4\u8fc7\uff0c\u6539\u53d8\u5176\u72b6\u6001\u4e3aCommitting\u4e5f\u5c31\u662f\u6b63\u5728\u63d0\u4ea4\u3002\\n\\nstep4\uff1a\u5224\u65ad\u662f\u5426\u662f\u53ef\u4ee5\u5f02\u6b65\u63d0\u4ea4\uff0c\u76ee\u524d\u53ea\u6709AT\u6a21\u5f0f\u53ef\u4ee5\u5f02\u6b65\u63d0\u4ea4\uff0c\u4e8c\u9636\u6bb5\u5168\u5c40\u63d0\u4ea4\u65f6\u53ea\u662f\u5220\u9664undolog\u5e76\u65e0\u4e25\u683c\u987a\u5e8f\uff0c\u6b64\u5904\u4f7f\u7528\u5b9a\u65f6\u4efb\u52a1\uff0c\u5ba2\u6237\u7aef\u6536\u5230\u540e\u6279\u91cf\u5408\u5e76\u5220\u9664\u3002\\n\\nstep5\uff1a\u5982\u679c\u662f\u5f02\u6b65\u63d0\u4ea4\uff0c\u76f4\u63a5\u5c06\u5176\u653e\u8fdb\u6211\u4eecASYNC_COMMITTING_SESSION_MANAGER\uff0c\u8ba9\u5176\u518d\u540e\u53f0\u7ebf\u7a0b\u5f02\u6b65\u53bb\u505a\u6211\u4eec\u7684step6\uff0c\u5982\u679c\u662f\u540c\u6b65\u7684\u90a3\u4e48\u76f4\u63a5\u6267\u884c\u6211\u4eec\u7684step6\u3002\\n\\nstep6\uff1a\u904d\u5386\u6211\u4eec\u7684BranchSession\u8fdb\u884c\u63d0\u4ea4\uff0c\u5982\u679c\u67d0\u4e2a\u5206\u652f\u4e8b\u52a1\u5931\u8d25\uff0c\u6839\u636e\u4e0d\u540c\u7684\u6761\u4ef6\u6765\u5224\u65ad\u662f\u5426\u8fdb\u884c\u91cd\u8bd5\uff0c\u53ef\u5f02\u6b65\u6267\u884c\u6b64branchSession\u4e0d\u6210\u529f\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a\uff0c\u56e0\u4e3a\u5176\u672c\u8eab\u90fd\u5728manager\u4e2d\uff0c\u53ea\u8981\u6ca1\u6709\u6210\u529f\u5c31\u4e0d\u4f1a\u88ab\u5220\u9664\u4f1a\u4e00\u76f4\u91cd\u8bd5\uff0c\u5982\u679c\u662f\u540c\u6b65\u63d0\u4ea4\u7684\u4f1a\u653e\u8fdb\u91cd\u8bd5\u961f\u5217\u8fdb\u884c\u5b9a\u65f6\u91cd\u8bd5\u5e76\u5361\u4f4f\u6309\u7167\u987a\u5e8f\u63d0\u4ea4\u3002\\n\\n## 3.5 GlobalRollback - \u5168\u5c40\u56de\u6eda\\n\\n\u5982\u679c\u6211\u4eec\u7684TM\u51b3\u5b9a\u5168\u5c40\u56de\u6eda\uff0c\u90a3\u4e48\u4f1a\u8d70\u5230\u4e0b\u9762\u7684\u903b\u8f91\uff1a\\n\\n![](/img/seata-server/rollback.png)\\n\\n\u8fd9\u4e2a\u903b\u8f91\u548c\u63d0\u4ea4\u6d41\u7a0b\u57fa\u672c\u4e00\u81f4\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u5b83\u7684\u53cd\u5411\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u8bb2\u4e86\u3002\\n\\n# 4.\u603b\u7ed3\\n\u6700\u540e\u5728\u603b\u7ed3\u4e00\u4e0b\u5f00\u59cb\u6211\u4eec\u63d0\u51fa\u4e86\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u5173\u952e4\u70b9\uff0cSeata\u5230\u5e95\u662f\u600e\u4e48\u89e3\u51b3\u7684\uff1a\\n- \u6b63\u786e\u7684\u534f\u8c03\uff1a\u901a\u8fc7\u540e\u53f0\u5b9a\u65f6\u4efb\u52a1\u5404\u79cd\u6b63\u786e\u7684\u91cd\u8bd5\uff0c\u5e76\u4e14\u672a\u6765\u4f1a\u63a8\u51fa\u76d1\u63a7\u5e73\u53f0\u6709\u53ef\u80fd\u53ef\u4ee5\u624b\u52a8\u56de\u6eda\u3002\\n- \u9ad8\u53ef\u7528: \u901a\u8fc7HA-Cluster\u4fdd\u8bc1\u9ad8\u53ef\u7528\u3002\\n- \u9ad8\u6027\u80fd\uff1a\u6587\u4ef6\u987a\u5e8f\u5199\uff0cRPC\u901a\u8fc7netty\u5b9e\u73b0\uff0cSeata\u672a\u6765\u53ef\u4ee5\u6c34\u5e73\u6269\u5c55\uff0c\u63d0\u9ad8\u5904\u7406\u6027\u80fd\u3002\\n- \u9ad8\u6269\u5c55\u6027\uff1a\u63d0\u4f9b\u7ed9\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u5b9e\u73b0\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u914d\u7f6e\uff0c\u670d\u52a1\u53d1\u73b0\u548c\u6ce8\u518c\uff0c\u5168\u5c40\u9501\u7b49\u7b49\u3002\\n\\n\u6700\u540e\u5e0c\u671b\u5927\u5bb6\u80fd\u4ece\u8fd9\u7bc7\u6587\u7ae0\u80fd\u4e86\u89e3Seata-Server\u7684\u6838\u5fc3\u8bbe\u8ba1\u539f\u7406\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u60f3\u8c61\u5982\u679c\u4f60\u81ea\u5df1\u53bb\u5b9e\u73b0\u4e00\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684Server\u5e94\u8be5\u600e\u6837\u53bb\u8bbe\u8ba1\uff1f\\n\\nSeata GitHub\u5730\u5740\uff1ahttps://github.com/seata/seata   \\n\\n\u672c\u6587\u4f5c\u8005\uff1a\\n\\n\u674e\u948a\uff0cGitHub ID @CoffeeLatte007\uff0c\u516c\u4f17\u53f7\u300c\u5496\u5561\u62ff\u94c1\u300d\u4f5c\u8005\uff0cSeata\u793e\u533a Committer\uff0c\u733f\u8f85\u5bfcJava\u5de5\u7a0b\u5e08\uff0c\u66fe\u5c31\u804c\u4e8e\u7f8e\u56e2\u3002\u5bf9\u5206\u5e03\u5f0f\u4e2d\u95f4\u4ef6\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u6709\u6d53\u539a\u7684\u5174\u8da3\u3002   \\n\u5b63\u654f(\u6e05\u94ed)\uff0cGitHub ID @slievrly\uff0cSeata \u5f00\u6e90\u9879\u76ee\u8d1f\u8d23\u4eba\uff0c\u963f\u91cc\u5df4\u5df4\u4e2d\u95f4\u4ef6 TXC/GTS \u6838\u5fc3\u7814\u53d1\u6210\u5458\uff0c\u957f\u671f\u4ece\u4e8b\u4e8e\u5206\u5e03\u5f0f\u4e2d\u95f4\u4ef6\u6838\u5fc3\u7814\u53d1\u5de5\u4f5c\uff0c\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u9886\u57df\u6709\u7740\u8f83\u4e30\u5bcc\u7684\u6280\u672f\u79ef\u7d2f\u3002"},{"id":"/tcc-mode-applicable-scenario-analysis","metadata":{"permalink":"/zh-cn/blog/tcc-mode-applicable-scenario-analysis","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/tcc-mode-applicable-scenario-analysis.md","title":"TCC\u9002\u7528\u6a21\u578b\u4e0e\u9002\u7528\u573a\u666f\u5206\u6790","description":"Fescar 0.4.0 \u7248\u672c\u53d1\u5e03\u4e86 TCC \u6a21\u5f0f\uff0c\u7531\u8682\u8681\u91d1\u670d\u56e2\u961f\u8d21\u732e\uff0c\u6b22\u8fce\u5927\u5bb6\u8bd5\u7528\uff0c\u6587\u672b\u4e5f\u63d0\u4f9b\u4e86\u9879\u76ee\u540e\u7eed\u7684 Roadmap\uff0c\u6b22\u8fce\u5173\u6ce8\u3002","date":"2019-03-27T00:00:00.000Z","formattedDate":"2019\u5e743\u670827\u65e5","tags":[],"readingTime":16.635,"hasTruncateMarker":false,"authors":[{"name":"zhangthen"}],"frontMatter":{"title":"TCC\u9002\u7528\u6a21\u578b\u4e0e\u9002\u7528\u573a\u666f\u5206\u6790","author":"zhangthen","date":"2019/03/27","keywords":["seata\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001TCC\u3001roadmap"]},"prevItem":{"title":"\u6df1\u5ea6\u5256\u6790\u4e00\u7ad9\u5f0f\u5206\u5e03\u5f0f\u4e8b\u52a1\u65b9\u6848Seata-Server","permalink":"/zh-cn/blog/seata-analysis-java-server"},"nextItem":{"title":"TCC \u7406\u8bba\u53ca\u8bbe\u8ba1\u5b9e\u73b0\u6307\u5357\u4ecb\u7ecd","permalink":"/zh-cn/blog/tcc-mode-design-principle"}},"content":"Fescar 0.4.0 \u7248\u672c\u53d1\u5e03\u4e86 TCC \u6a21\u5f0f\uff0c\u7531\u8682\u8681\u91d1\u670d\u56e2\u961f\u8d21\u732e\uff0c\u6b22\u8fce\u5927\u5bb6\u8bd5\u7528\uff0c\u6587\u672b\u4e5f\u63d0\u4f9b\u4e86\u9879\u76ee\u540e\u7eed\u7684 Roadmap\uff0c\u6b22\u8fce\u5173\u6ce8\u3002\\n<a name=\\"2143093f\\"></a>\\n\\n## \u524d\u8a00\uff1a\u57fa\u4e8e TCC \u6a21\u578b\u7684\u5e94\u7528\u573a\u666f\\n\xa0<br /> \\n![1.png](/img/blog/TCC1.png)<br />\\n\\nTCC \u5206\u5e03\u5f0f\u4e8b\u52a1\u6a21\u578b\u76f4\u63a5\u4f5c\u7528\u4e8e\u670d\u52a1\u5c42\u3002\u4e0d\u4e0e\u5177\u4f53\u7684\u670d\u52a1\u6846\u67b6\u8026\u5408\uff0c\u4e0e\u5e95\u5c42 RPC \u534f\u8bae\u65e0\u5173\uff0c\u4e0e\u5e95\u5c42\u5b58\u50a8\u4ecb\u8d28\u65e0\u5173\uff0c\u53ef\u4ee5\u7075\u6d3b\u9009\u62e9\u4e1a\u52a1\u8d44\u6e90\u7684\u9501\u5b9a\u7c92\u5ea6\uff0c\u51cf\u5c11\u8d44\u6e90\u9501\u6301\u6709\u65f6\u95f4\uff0c\u53ef\u6269\u5c55\u6027\u597d\uff0c\u53ef\u4ee5\u8bf4\u662f\u4e3a\u72ec\u7acb\u90e8\u7f72\u7684 SOA \u670d\u52a1\u800c\u8bbe\u8ba1\u7684\u3002\\n\\n\\n<a name=\\"d9b462de\\"></a>\\n\\n## \u4e00\u3001TCC \u6a21\u578b\u4f18\u52bf\\n\\n\u5bf9\u4e8e TCC \u5206\u5e03\u5f0f\u4e8b\u52a1\u6a21\u578b\uff0c\u7b14\u8005\u8ba4\u4e3a\u5176\u5728\u4e1a\u52a1\u573a\u666f\u5e94\u7528\u4e0a\uff0c\u6709\u4e24\u65b9\u9762\u7684\u610f\u4e49\u3002\\n\\n<a name=\\"95179108\\"></a>\\n\\n### 1.1 \u8de8\u670d\u52a1\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\\n\\n\u670d\u52a1\u7684\u62c6\u5206\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8d44\u6e90\u7684\u6a2a\u5411\u6269\u5c55\uff0c\u53ea\u4e0d\u8fc7\u65b9\u5411\u4e0d\u540c\u800c\u5df2\u3002\\n\\n\u6a2a\u5411\u6269\u5c55\u53ef\u80fd\u6cbf\u7740\u4e24\u4e2a\u65b9\u5411\u53d1\u5c55\uff1a\\n\\n1. \u529f\u80fd\u6269\u5c55\uff0c\u6839\u636e\u529f\u80fd\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7ec4\uff0c\u5e76\u5c06\u4e0d\u540c\u7684\u529f\u80fd\u7ec4\u5206\u5e03\u5728\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u5e93\u4e0a\uff0c\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f SOA \u67b6\u6784\u4e0b\u7684\u670d\u52a1\u5316\u3002\\n1. \u6570\u636e\u5206\u7247\uff0c\u5728\u529f\u80fd\u7ec4\u5185\u90e8\u5c06\u6570\u636e\u62c6\u5206\u5230\u591a\u4e2a\u6570\u636e\u5e93\u4e0a\uff0c\u4e3a\u6a2a\u5411\u6269\u5c55\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u7ef4\u5ea6\u3002\\n\\n\u4e0b\u56fe\u7b80\u8981\u9610\u91ca\u4e86\u6a2a\u5411\u6570\u636e\u6269\u5c55\u7b56\u7565\uff1a\\n\\n![2.png](/img/blog/TCC2.png)\\n\\n\u56e0\u6b64\uff0cTCC \u7684\u5176\u4e2d\u4e00\u4e2a\u4f5c\u7528\u5c31\u662f\u5728\u6309\u7167\u529f\u80fd\u6a2a\u5411\u6269\u5c55\u8d44\u6e90\u65f6\uff0c\u4fdd\u8bc1\u591a\u8d44\u6e90\u8bbf\u95ee\u7684\u4e8b\u52a1\u5c5e\u6027\u3002\\n\\n<a name=\\"240e4d15\\"></a>\\n\\n### 1.2 \u4e24\u9636\u6bb5\u62c6\u5206\\n\\nTCC \u53e6\u4e00\u4e2a\u4f5c\u7528\u5c31\u662f\u628a\u4e24\u9636\u6bb5\u62c6\u5206\u6210\u4e86\u4e24\u4e2a\u72ec\u7acb\u7684\u9636\u6bb5\uff0c\u901a\u8fc7\u8d44\u6e90\u4e1a\u52a1\u9501\u5b9a\u7684\u65b9\u5f0f\u8fdb\u884c\u5173\u8054\u3002\u8d44\u6e90\u4e1a\u52a1\u9501\u5b9a\u65b9\u5f0f\u7684\u597d\u5904\u5728\u4e8e\uff0c\u65e2\u4e0d\u4f1a\u963b\u585e\u5176\u4ed6\u4e8b\u52a1\u5728\u7b2c\u4e00\u9636\u6bb5\u5bf9\u4e8e\u76f8\u540c\u8d44\u6e90\u7684\u7ee7\u7eed\u4f7f\u7528\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u672c\u4e8b\u52a1\u7b2c\u4e8c\u9636\u6bb5\u7684\u6b63\u786e\u6267\u884c\u3002\\n\\n**\u4f20\u7edf\u6a21\u578b\u7684\u5e76\u53d1\u4e8b\u52a1\uff1a**<br />\\n![3.png](/img/blog/TCC3.png)\\n\\n**TCC \u6a21\u578b\u7684\u5e76\u53d1\u4e8b\u52a1\uff1a**<br />\\n![4.png](/img/blog/TCC4.png)\\n\\n\u8fd9\u5bf9\u4e1a\u52a1\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\u62ff\u652f\u4ed8\u5b9d\u7684\u62c5\u4fdd\u4ea4\u6613\u573a\u666f\u6765\u8bf4\uff0c\u7b80\u5316\u60c5\u51b5\u4e0b\uff0c\u53ea\u9700\u8981\u6d89\u53ca\u4e24\u4e2a\u670d\u52a1\uff0c\u4ea4\u6613\u670d\u52a1\u548c\u8d26\u52a1\u670d\u52a1\u3002\u4ea4\u6613\u4f5c\u4e3a\u4e3b\u4e1a\u52a1\u670d\u52a1\uff0c\u8d26\u52a1\u4f5c\u4e3a\u4ece\u4e1a\u52a1\u670d\u52a1\uff0c\u63d0\u4f9b Try\u3001Commit\u3001Cancel \u63a5\u53e3\uff1a\\n\\n1. Try \u63a5\u53e3\u6263\u9664\u7528\u6237\u53ef\u7528\u8d44\u91d1\uff0c\u8f6c\u79fb\u5230\u9884\u51bb\u7ed3\u8d44\u91d1\u3002\u9884\u51bb\u7ed3\u8d44\u91d1\u5c31\u662f\u4e1a\u52a1\u9501\u5b9a\u65b9\u6848\uff0c\u6bcf\u4e2a\u4e8b\u52a1\u7b2c\u4e8c\u9636\u6bb5\u53ea\u80fd\u4f7f\u7528\u672c\u4e8b\u52a1\u7684\u9884\u51bb\u7ed3\u8d44\u91d1\uff0c\u5728\u7b2c\u4e00\u9636\u6bb5\u6267\u884c\u7ed3\u675f\u540e\uff0c\u5176\u4ed6\u5e76\u53d1\u4e8b\u52a1\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u5904\u7406\u7528\u6237\u7684\u53ef\u7528\u8d44\u91d1\u3002\\n1. Commit \u63a5\u53e3\u6263\u9664\u9884\u51bb\u7ed3\u8d44\u91d1\uff0c\u589e\u52a0\u4e2d\u95f4\u8d26\u6237\u53ef\u7528\u8d44\u91d1\uff08\u62c5\u4fdd\u4ea4\u6613\u4e0d\u80fd\u7acb\u5373\u628a\u94b1\u6253\u7ed9\u5546\u6237\uff0c\u9700\u8981\u6709\u4e00\u4e2a\u4e2d\u95f4\u8d26\u6237\u6765\u6682\u5b58\uff09\u3002\\n\\n\u5047\u8bbe\u53ea\u6709\u4e00\u4e2a\u4e2d\u95f4\u8d26\u6237\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6b21\u8c03\u7528\u652f\u4ed8\u670d\u52a1\u7684 Commit \u63a5\u53e3\uff0c\u90fd\u4f1a\u9501\u5b9a\u4e2d\u95f4\u8d26\u6237\uff0c\u4e2d\u95f4\u8d26\u6237\u5b58\u5728\u70ed\u70b9\u6027\u80fd\u95ee\u9898\u3002 \u4f46\u662f\uff0c\u5728\u62c5\u4fdd\u4ea4\u6613\u573a\u666f\u4e2d\uff0c\u4e03\u5929\u4ee5\u540e\u624d\u9700\u8981\u5c06\u8d44\u91d1\u4ece\u4e2d\u95f4\u8d26\u6237\u5212\u62e8\u7ed9\u5546\u6237\uff0c\u4e2d\u95f4\u8d26\u6237\u5e76\u4e0d\u9700\u8981\u5bf9\u5916\u5c55\u793a\u3002\u56e0\u6b64\uff0c\u5728\u6267\u884c\u5b8c\u652f\u4ed8\u670d\u52a1\u7684\u7b2c\u4e00\u9636\u6bb5\u540e\uff0c\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u672c\u6b21\u4ea4\u6613\u7684\u652f\u4ed8\u73af\u8282\u5df2\u7ecf\u5b8c\u6210\uff0c\u5e76\u5411\u7528\u6237\u548c\u5546\u6237\u8fd4\u56de\u652f\u4ed8\u6210\u529f\u7684\u7ed3\u679c\uff0c\u5e76\u4e0d\u9700\u8981\u9a6c\u4e0a\u6267\u884c\u652f\u4ed8\u670d\u52a1\u4e8c\u9636\u6bb5\u7684 Commit \u63a5\u53e3\uff0c\u7b49\u5230\u4f4e\u950b\u671f\u65f6\uff0c\u518d\u6162\u6162\u6d88\u5316\uff0c\u5f02\u6b65\u5730\u6267\u884c\u3002<br />\\n![5.png](/img/blog/TCC5.png)\\n\\n\u8fd9\u5c31\u662f TCC \u5206\u5e03\u5f0f\u4e8b\u52a1\u6a21\u578b\u7684\u4e8c\u9636\u6bb5\u5f02\u6b65\u5316\u529f\u80fd\uff0c\u4ece\u4e1a\u52a1\u670d\u52a1\u7684\u7b2c\u4e00\u9636\u6bb5\u6267\u884c\u6210\u529f\uff0c\u4e3b\u4e1a\u52a1\u670d\u52a1\u5c31\u53ef\u4ee5\u63d0\u4ea4\u5b8c\u6210\uff0c\u7136\u540e\u518d\u7531\u6846\u67b6\u5f02\u6b65\u7684\u6267\u884c\u5404\u4ece\u4e1a\u52a1\u670d\u52a1\u7684\u7b2c\u4e8c\u9636\u6bb5\u3002\\n\\n<a name=\\"ad5fc026\\"></a>\\n\\n## \u4e8c\u3001\u901a\u7528\u578b TCC \u89e3\u51b3\u65b9\u6848\\n\\n\u901a\u7528\u578b TCC \u89e3\u51b3\u65b9\u6848\u5c31\u662f\u6700\u5178\u578b\u7684 TCC \u5206\u5e03\u5f0f\u4e8b\u52a1\u6a21\u578b\u5b9e\u73b0\uff0c\u6240\u6709\u4ece\u4e1a\u52a1\u670d\u52a1\u90fd\u9700\u8981\u53c2\u4e0e\u5230\u4e3b\u4e1a\u52a1\u670d\u52a1\u7684\u51b3\u7b56\u5f53\u4e2d\u3002<br />\\n![6.png](/img/blog/TCC6.png)<br />\xa0\\n<a name=\\"62b37e99\\"></a>\\n\\n### \u9002\u7528\u573a\u666f\\n\\n\u7531\u4e8e\u4ece\u4e1a\u52a1\u670d\u52a1\u662f\u540c\u6b65\u8c03\u7528\uff0c\u5176\u7ed3\u679c\u4f1a\u5f71\u54cd\u5230\u4e3b\u4e1a\u52a1\u670d\u52a1\u7684\u51b3\u7b56\uff0c\u56e0\u6b64\u901a\u7528\u578b TCC \u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u9002\u7528\u4e8e\u6267\u884c\u65f6\u95f4\u786e\u5b9a\u4e14\u8f83\u77ed\u7684\u4e1a\u52a1\uff0c\u6bd4\u5982\u4e92\u8054\u7f51\u91d1\u878d\u4f01\u4e1a\u6700\u6838\u5fc3\u7684\u4e09\u4e2a\u670d\u52a1\uff1a\u4ea4\u6613\u3001\u652f\u4ed8\u3001\u8d26\u52a1\uff1a<br />\\n![7.png](/img/blog/TCC7.png)<br />\xa0<br />\u5f53\u7528\u6237\u53d1\u8d77\u4e00\u7b14\u4ea4\u6613\u65f6\uff0c\u9996\u5148\u8bbf\u95ee\u4ea4\u6613\u670d\u52a1\uff0c\u521b\u5efa\u4ea4\u6613\u8ba2\u5355\uff1b\u7136\u540e\u4ea4\u6613\u670d\u52a1\u8c03\u7528\u652f\u4ed8\u670d\u52a1\u4e3a\u8be5\u4ea4\u6613\u521b\u5efa\u652f\u4ed8\u8ba2\u5355\uff0c\u6267\u884c\u6536\u6b3e\u52a8\u4f5c\uff0c\u6700\u540e\u652f\u4ed8\u670d\u52a1\u8c03\u7528\u8d26\u52a1\u670d\u52a1\u8bb0\u5f55\u8d26\u6237\u6d41\u6c34\u548c\u8bb0\u8d26\u3002\\n\\n\u4e3a\u4e86\u4fdd\u8bc1\u4e09\u4e2a\u670d\u52a1\u4e00\u8d77\u5b8c\u6210\u4e00\u7b14\u4ea4\u6613\uff0c\u8981\u4e48\u540c\u65f6\u6210\u529f\uff0c\u8981\u4e48\u540c\u65f6\u5931\u8d25\uff0c\u53ef\u4ee5\u4f7f\u7528\u901a\u7528\u578b TCC \u89e3\u51b3\u65b9\u6848\uff0c\u5c06\u8fd9\u4e09\u4e2a\u670d\u52a1\u653e\u5728\u4e00\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\uff0c\u4ea4\u6613\u4f5c\u4e3a\u4e3b\u4e1a\u52a1\u670d\u52a1\uff0c\u652f\u4ed8\u4f5c\u4e3a\u4ece\u4e1a\u52a1\u670d\u52a1\uff0c\u8d26\u52a1\u4f5c\u4e3a\u652f\u4ed8\u670d\u52a1\u7684\u5d4c\u5957\u4ece\u4e1a\u52a1\u670d\u52a1\uff0c\u7531 TCC \u6a21\u578b\u4fdd\u8bc1\u4e8b\u52a1\u7684\u539f\u5b50\u6027\u3002<br />\\n![8.png](/img/blog/TCC8.png)\\n\\n\u652f\u4ed8\u670d\u52a1\u7684 Try \u63a5\u53e3\u521b\u5efa\u652f\u4ed8\u8ba2\u5355\uff0c\u5f00\u542f\u5d4c\u5957\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u5e76\u8c03\u7528\u8d26\u52a1\u670d\u52a1\u7684 Try \u63a5\u53e3\uff1b\u8d26\u52a1\u670d\u52a1\u5728 Try \u63a5\u53e3\u4e2d\u51bb\u7ed3\u4e70\u5bb6\u8d44\u91d1\u3002\u4e00\u9636\u6bb5\u8c03\u7528\u5b8c\u6210\u540e\uff0c\u4ea4\u6613\u5b8c\u6210\uff0c\u63d0\u4ea4\u672c\u5730\u4e8b\u52a1\uff0c\u7531 TCC \u6846\u67b6\u5b8c\u6210\u5206\u5e03\u5f0f\u4e8b\u52a1\u5404\u4ece\u4e1a\u52a1\u670d\u52a1\u4e8c\u9636\u6bb5\u7684\u8c03\u7528\u3002\\n\\n\u652f\u4ed8\u670d\u52a1\u4e8c\u9636\u6bb5\u5148\u8c03\u7528\u8d26\u52a1\u670d\u52a1\u7684 Confirm \u63a5\u53e3\uff0c\u6263\u9664\u4e70\u5bb6\u51bb\u7ed3\u8d44\u91d1\uff1b\u589e\u52a0\u5356\u5bb6\u53ef\u7528\u8d44\u91d1\u3002\u8c03\u7528\u6210\u529f\u540e\uff0c\u652f\u4ed8\u670d\u52a1\u4fee\u6539\u652f\u4ed8\u8ba2\u5355\u4e3a\u5b8c\u6210\u72b6\u6001\uff0c\u5b8c\u6210\u652f\u4ed8\u3002\\n\\n\u5f53\u652f\u4ed8\u548c\u8d26\u52a1\u670d\u52a1\u4e8c\u9636\u6bb5\u90fd\u8c03\u7528\u5b8c\u6210\u540e\uff0c\u6574\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u7ed3\u675f\u3002\\n\\n<a name=\\"827f0f82\\"></a>\\n\\n## \u4e09\u3001\u5f02\u6b65\u786e\u4fdd\u578b TCC \u89e3\u51b3\u65b9\u6848\\n\\n\u5f02\u6b65\u786e\u4fdd\u578b TCC \u89e3\u51b3\u65b9\u6848\u7684\u76f4\u63a5\u4ece\u4e1a\u52a1\u670d\u52a1\u662f\u53ef\u9760\u6d88\u606f\u670d\u52a1\uff0c\u800c\u771f\u6b63\u7684\u4ece\u4e1a\u52a1\u670d\u52a1\u5219\u901a\u8fc7\u6d88\u606f\u670d\u52a1\u89e3\u8026\uff0c\u4f5c\u4e3a\u6d88\u606f\u670d\u52a1\u7684\u6d88\u8d39\u7aef\uff0c\u5f02\u6b65\u5730\u6267\u884c\u3002<br />\\n![9.png](/img/blog/TCC9.png)<br />\xa0<br />\u53ef\u9760\u6d88\u606f\u670d\u52a1\u9700\u8981\u63d0\u4f9b Try\uff0cConfirm\uff0cCancel \u4e09\u4e2a\u63a5\u53e3\u3002Try \u63a5\u53e3\u9884\u53d1\u9001\uff0c\u53ea\u8d1f\u8d23\u6301\u4e45\u5316\u5b58\u50a8\u6d88\u606f\u6570\u636e\uff1bConfirm \u63a5\u53e3\u786e\u8ba4\u53d1\u9001\uff0c\u8fd9\u65f6\u624d\u5f00\u59cb\u771f\u6b63\u7684\u6295\u9012\u6d88\u606f\uff1bCancel \u63a5\u53e3\u53d6\u6d88\u53d1\u9001\uff0c\u5220\u9664\u6d88\u606f\u6570\u636e\u3002\\n\\n\u6d88\u606f\u670d\u52a1\u7684\u6d88\u606f\u6570\u636e\u72ec\u7acb\u5b58\u50a8\uff0c\u72ec\u7acb\u4f38\u7f29\uff0c\u964d\u4f4e\u4ece\u4e1a\u52a1\u670d\u52a1\u4e0e\u6d88\u606f\u7cfb\u7edf\u95f4\u7684\u8026\u5408\uff0c\u5728\u6d88\u606f\u670d\u52a1\u53ef\u9760\u7684\u524d\u63d0\u4e0b\uff0c\u5b9e\u73b0\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u6700\u7ec8\u4e00\u81f4\u6027\u3002\\n\\n\u6b64\u89e3\u51b3\u65b9\u6848\u867d\u7136\u589e\u52a0\u4e86\u6d88\u606f\u670d\u52a1\u7684\u7ef4\u62a4\u6210\u672c\uff0c\u4f46\u7531\u4e8e\u6d88\u606f\u670d\u52a1\u4ee3\u66ff\u4ece\u4e1a\u52a1\u670d\u52a1\u5b9e\u73b0\u4e86 TCC \u63a5\u53e3\uff0c\u4ece\u4e1a\u52a1\u670d\u52a1\u4e0d\u9700\u8981\u4efb\u4f55\u6539\u9020\uff0c\u63a5\u5165\u6210\u672c\u975e\u5e38\u4f4e\u3002\\n\\n<a name=\\"62b37e99-1\\"></a>\\n\\n### \u9002\u7528\u573a\u666f\\n\\n\u7531\u4e8e\u4ece\u4e1a\u52a1\u670d\u52a1\u6d88\u8d39\u6d88\u606f\u662f\u4e00\u4e2a\u5f02\u6b65\u7684\u8fc7\u7a0b\uff0c\u6267\u884c\u65f6\u95f4\u4e0d\u786e\u5b9a\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u4e00\u81f4\u65f6\u95f4\u7a97\u53e3\u589e\u52a0\u3002\u56e0\u6b64\uff0c\u5f02\u6b65\u786e\u4fdd\u6027 TCC \u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u53ea\u9002\u7528\u4e8e\u5bf9\u6700\u7ec8\u4e00\u81f4\u6027\u65f6\u95f4\u654f\u611f\u5ea6\u8f83\u4f4e\u7684\u4e00\u4e9b\u88ab\u52a8\u578b\u4e1a\u52a1\uff08\u4ece\u4e1a\u52a1\u670d\u52a1\u7684\u5904\u7406\u7ed3\u679c\u4e0d\u5f71\u54cd\u4e3b\u4e1a\u52a1\u670d\u52a1\u7684\u51b3\u7b56\uff0c\u53ea\u88ab\u52a8\u7684\u63a5\u6536\u4e3b\u4e1a\u52a1\u670d\u52a1\u7684\u51b3\u7b56\u7ed3\u679c\uff09\u3002\u6bd4\u5982\u4f1a\u5458\u6ce8\u518c\u670d\u52a1\u548c\u90ae\u4ef6\u53d1\u9001\u670d\u52a1\uff1a<br />\\n![10.png](/img/blog/TCC10.png)<br />\xa0<br />\u5f53\u7528\u6237\u6ce8\u518c\u4f1a\u5458\u6210\u529f\uff0c\u9700\u8981\u7ed9\u7528\u6237\u53d1\u9001\u4e00\u5c01\u90ae\u4ef6\uff0c\u544a\u8bc9\u7528\u6237\u6ce8\u518c\u6210\u529f\uff0c\u5e76\u63d0\u793a\u7528\u6237\u6fc0\u6d3b\u8be5\u4f1a\u5458\u3002\u4f46\u8981\u6ce8\u610f\u4e24\u70b9\uff1a\\n\\n1. \u5982\u679c\u7528\u6237\u6ce8\u518c\u6210\u529f\uff0c\u4e00\u5b9a\u8981\u7ed9\u7528\u6237\u53d1\u9001\u4e00\u5c01\u90ae\u4ef6\uff1b\\n1. \u5982\u679c\u7528\u6237\u6ce8\u518c\u5931\u8d25\uff0c\u4e00\u5b9a\u4e0d\u80fd\u7ed9\u7528\u6237\u53d1\u9001\u90ae\u4ef6\u3002\\n\\n\u56e0\u6b64\uff0c\u8fd9\u540c\u6837\u9700\u8981\u4f1a\u5458\u670d\u52a1\u548c\u90ae\u4ef6\u670d\u52a1\u4fdd\u8bc1\u539f\u5b50\u6027\uff0c\u8981\u4e48\u90fd\u6267\u884c\uff0c\u8981\u4e48\u90fd\u4e0d\u6267\u884c\u3002\u4e0d\u4e00\u6837\u7684\u662f\uff0c\u90ae\u4ef6\u670d\u52a1\u53ea\u662f\u4e00\u79cd\u88ab\u52a8\u578b\u7684\u4e1a\u52a1\uff0c\u5e76\u4e0d\u5f71\u54cd\u7528\u6237\u662f\u5426\u80fd\u591f\u6ce8\u518c\u6210\u529f\uff0c\u5b83\u53ea\u9700\u8981\u5728\u7528\u6237\u6ce8\u518c\u6210\u529f\u4ee5\u540e\u53d1\u9001\u90ae\u4ef6\u7ed9\u7528\u6237\u5373\u53ef\uff0c\u90ae\u4ef6\u670d\u52a1\u4e0d\u9700\u8981\u53c2\u4e0e\u5230\u4f1a\u5458\u670d\u52a1\u7684\u6d3b\u52a8\u51b3\u7b56\u4e2d\u3002\\n\\n\u5bf9\u4e8e\u6b64\u79cd\u4e1a\u52a1\u573a\u666f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5f02\u6b65\u786e\u4fdd\u578bTCC\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u5982\u4e0b\uff1a<br />\\n![11.png](/img/blog/TCC11.png)<br />\xa0<br />\xa0<br />\u7531\u53ef\u9760\u6d88\u606f\u670d\u52a1\u6765\u89e3\u8026\u4f1a\u5458\u548c\u90ae\u4ef6\u670d\u52a1\uff0c\u4f1a\u5458\u670d\u52a1\u4e0e\u6d88\u606f\u670d\u52a1\u7ec4\u6210 TCC \u4e8b\u52a1\u6a21\u578b\uff0c\u4fdd\u8bc1\u4e8b\u52a1\u539f\u5b50\u6027\u3002\u7136\u540e\u901a\u8fc7\u6d88\u606f\u670d\u52a1\u7684\u53ef\u9760\u7279\u6027\uff0c\u786e\u4fdd\u6d88\u606f\u4e00\u5b9a\u80fd\u591f\u88ab\u90ae\u4ef6\u670d\u52a1\u6d88\u8d39\uff0c\u4ece\u800c\u4f7f\u5f97\u4f1a\u5458\u4e0e\u90ae\u4ef6\u670d\u52a1\u5728\u540c\u4e00\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\u3002\u540c\u65f6\uff0c\u90ae\u4ef6\u670d\u52a1\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u4f1a\u5458\u670d\u52a1\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u53ea\u5728\u4f1a\u5458\u670d\u52a1\u6267\u884c\u6210\u529f\u540e\u88ab\u52a8\u63a5\u6536\u53d1\u9001\u90ae\u4ef6\u7684\u8bf7\u6c42\u3002\\n\\n<a name=\\"69910d05\\"></a>\\n\\n## \u56db\u3001\u8865\u507f\u578b TCC \u89e3\u51b3\u65b9\u6848\\n\\n\u8865\u507f\u578b TCC \u89e3\u51b3\u65b9\u6848\u4e0e\u901a\u7528\u578b TCC \u89e3\u51b3\u65b9\u6848\u7684\u7ed3\u6784\u76f8\u4f3c\uff0c\u5176\u4ece\u4e1a\u52a1\u670d\u52a1\u4e5f\u9700\u8981\u53c2\u4e0e\u5230\u4e3b\u4e1a\u52a1\u670d\u52a1\u7684\u6d3b\u52a8\u51b3\u7b56\u5f53\u4e2d\u3002\u4f46\u4e0d\u4e00\u6837\u7684\u662f\uff0c\u524d\u8005\u7684\u4ece\u4e1a\u52a1\u670d\u52a1\u53ea\u9700\u8981\u63d0\u4f9b Do \u548c Compensate \u4e24\u4e2a\u63a5\u53e3\uff0c\u800c\u540e\u8005\u9700\u8981\u63d0\u4f9b\u4e09\u4e2a\u63a5\u53e3\u3002<br />\\n![12.png](/img/blog/TCC12.png)<br />\xa0<br />Do \u63a5\u53e3\u76f4\u63a5\u6267\u884c\u771f\u6b63\u7684\u5b8c\u6574\u4e1a\u52a1\u903b\u8f91\uff0c\u5b8c\u6210\u4e1a\u52a1\u5904\u7406\uff0c\u4e1a\u52a1\u6267\u884c\u7ed3\u679c\u5916\u90e8\u53ef\u89c1\uff1bCompensate \u64cd\u4f5c\u7528\u4e8e\u4e1a\u52a1\u8865\u507f\uff0c\u62b5\u6d88\u6216\u90e8\u5206\u62b5\u6d88\u6b63\u5411\u4e1a\u52a1\u64cd\u4f5c\u7684\u4e1a\u52a1\u7ed3\u679c\uff0cCompensate\u64cd\u4f5c\u9700\u6ee1\u8db3\u5e42\u7b49\u6027\u3002<br />\u4e0e\u901a\u7528\u578b\u89e3\u51b3\u65b9\u6848\u76f8\u6bd4\uff0c\u8865\u507f\u578b\u89e3\u51b3\u65b9\u6848\u7684\u4ece\u4e1a\u52a1\u670d\u52a1\u4e0d\u9700\u8981\u6539\u9020\u539f\u6709\u4e1a\u52a1\u903b\u8f91\uff0c\u53ea\u9700\u8981\u989d\u5916\u589e\u52a0\u4e00\u4e2a\u8865\u507f\u56de\u6eda\u903b\u8f91\u5373\u53ef\uff0c\u4e1a\u52a1\u6539\u9020\u91cf\u8f83\u5c0f\u3002\u4f46\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e1a\u52a1\u5728\u4e00\u9636\u6bb5\u5c31\u6267\u884c\u5b8c\u6574\u4e2a\u4e1a\u52a1\u903b\u8f91\uff0c\u65e0\u6cd5\u505a\u5230\u6709\u6548\u7684\u4e8b\u52a1\u9694\u79bb\uff0c\u5f53\u9700\u8981\u56de\u6eda\u65f6\uff0c\u53ef\u80fd\u5b58\u5728\u8865\u507f\u5931\u8d25\u7684\u60c5\u51b5\uff0c\u8fd8\u9700\u8981\u989d\u5916\u7684\u5f02\u5e38\u5904\u7406\u673a\u5236\uff0c\u6bd4\u5982\u4eba\u5de5\u4ecb\u5165\u3002\\n\\n<a name=\\"62b37e99-2\\"></a>\\n\\n### \u9002\u7528\u573a\u666f\\n\\n\u7531\u4e8e\u5b58\u5728\u56de\u6eda\u8865\u507f\u5931\u8d25\u7684\u60c5\u51b5\uff0c\u8865\u507f\u578b TCC \u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u53ea\u9002\u7528\u4e8e\u4e00\u4e9b\u5e76\u53d1\u51b2\u7a81\u8f83\u5c11\u6216\u8005\u9700\u8981\u4e0e\u5916\u90e8\u4ea4\u4e92\u7684\u4e1a\u52a1\uff0c\u8fd9\u4e9b\u5916\u90e8\u4e1a\u52a1\u4e0d\u5c5e\u4e8e\u88ab\u52a8\u578b\u4e1a\u52a1\uff0c\u5176\u6267\u884c\u7ed3\u679c\u4f1a\u5f71\u54cd\u4e3b\u4e1a\u52a1\u670d\u52a1\u7684\u51b3\u7b56\uff0c\u6bd4\u5982\u673a\u7968\u4ee3\u7406\u5546\u7684\u673a\u7968\u9884\u8ba2\u670d\u52a1\uff1a<br />\\n![13.png](/img/blog/TCC13.png)<br />\xa0<br />\u8be5\u673a\u7968\u670d\u52a1\u63d0\u4f9b\u591a\u7a0b\u673a\u7968\u9884\u8ba2\u670d\u52a1\uff0c\u53ef\u4ee5\u540c\u65f6\u9884\u8ba2\u591a\u8d9f\u884c\u7a0b\u822a\u73ed\u673a\u7968\uff0c\u6bd4\u5982\u4ece\u5317\u4eac\u5230\u5723\u5f7c\u5f97\u5821\uff0c\u9700\u8981\u7b2c\u4e00\u7a0b\u4ece\u5317\u4eac\u5230\u83ab\u65af\u79d1\uff0c\u4ee5\u53ca\u7b2c\u4e8c\u7a0b\u4ece\u83ab\u65af\u79d1\u5230\u5723\u5f7c\u5f97\u5821\u3002\\n\\n\u5f53\u7528\u6237\u9884\u8ba2\u673a\u7968\u65f6\uff0c\u80af\u5b9a\u5e0c\u671b\u80fd\u540c\u65f6\u9884\u8ba2\u8fd9\u4e24\u8d9f\u822a\u73ed\u7684\u673a\u7968\uff0c\u53ea\u9884\u8ba2\u4e00\u8d9f\u822a\u73ed\u5bf9\u7528\u6237\u6765\u8bf4\u6ca1\u6709\u610f\u4e49\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u4e1a\u52a1\u670d\u52a1\u540c\u6837\u63d0\u51fa\u4e86\u539f\u5b50\u6027\u8981\u6c42\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u8d9f\u822a\u73ed\u7684\u673a\u7968\u9884\u8ba2\u5931\u8d25\uff0c\u53e6\u5916\u4e00\u8d9f\u9700\u8981\u80fd\u591f\u53d6\u6d88\u9884\u8ba2\u3002\\n\\n\u4f46\u662f\uff0c\u7531\u4e8e\u822a\u7a7a\u516c\u53f8\u76f8\u5bf9\u4e8e\u673a\u7968\u4ee3\u7406\u5546\u6765\u8bf4\u5c5e\u4e8e\u5916\u90e8\u4e1a\u52a1\uff0c\u53ea\u63d0\u4f9b\u8ba2\u7968\u63a5\u53e3\u548c\u53d6\u6d88\u9884\u8ba2\u63a5\u53e3\uff0c\u60f3\u8981\u63a8\u52a8\u822a\u7a7a\u516c\u53f8\u6539\u9020\u662f\u6781\u5176\u56f0\u96be\u7684\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6b64\u7c7b\u4e1a\u52a1\u670d\u52a1\uff0c\u53ef\u4ee5\u4f7f\u7528\u8865\u507f\u578b TCC \u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u5982\u4e0b\uff1a<br />\\n![14.png](/img/blog/TCC14.png)\\n\\n\u7f51\u5173\u670d\u52a1\u5728\u539f\u6709\u903b\u8f91\u57fa\u7840\u4e0a\u589e\u52a0 Compensate \u63a5\u53e3\uff0c\u8d1f\u8d23\u8c03\u7528\u5bf9\u5e94\u822a\u7a7a\u516c\u53f8\u7684\u53d6\u6d88\u9884\u8ba2\u63a5\u53e3\u3002\\n\\n\u5728\u7528\u6237\u53d1\u8d77\u673a\u7968\u9884\u8ba2\u8bf7\u6c42\u65f6\uff0c\u673a\u7968\u670d\u52a1\u5148\u901a\u8fc7\u7f51\u5173 Do \u63a5\u53e3\uff0c\u8c03\u7528\u5404\u822a\u7a7a\u516c\u53f8\u7684\u9884\u8ba2\u63a5\u53e3\uff0c\u5982\u679c\u6240\u6709\u822a\u73ed\u90fd\u9884\u8ba2\u6210\u529f\uff0c\u5219\u6574\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u76f4\u63a5\u6267\u884c\u6210\u529f\uff1b\u4e00\u65e6\u67d0\u8d9f\u822a\u73ed\u673a\u7968\u9884\u8ba2\u5931\u8d25\uff0c\u5219\u5206\u5e03\u5f0f\u4e8b\u52a1\u56de\u6eda\uff0c\u7531 TCC \u4e8b\u52a1\u6846\u67b6\u8c03\u7528\u5404\u7f51\u5173\u7684 Compensate \u8865\u507f\u63a5\u53e3\uff0c\u5176\u518d\u8c03\u7528\u5bf9\u5e94\u822a\u7a7a\u516c\u53f8\u7684\u53d6\u6d88\u9884\u8ba2\u63a5\u53e3\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u4fdd\u8bc1\u591a\u7a0b\u673a\u7968\u9884\u8ba2\u670d\u52a1\u7684\u539f\u5b50\u6027\u3002\\n\\n<a name=\\"acfe75a0\\"></a>\\n\\n## \u4e94. \u603b\u7ed3\\n\\n\u5bf9\u4e8e\u73b0\u5728\u7684\u4e92\u8054\u7f51\u5e94\u7528\u6765\u8bf4\uff0c\u8d44\u6e90\u6a2a\u5411\u6269\u5c55\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u7075\u6d3b\u6027\uff0c\u662f\u4e00\u79cd\u6bd4\u8f83\u5bb9\u6613\u5b9e\u73b0\u7684\u5411\u5916\u6269\u5c55\u65b9\u6848\uff0c\u4f46\u662f\u540c\u65f6\u4e5f\u660e\u663e\u589e\u52a0\u4e86\u590d\u6742\u5ea6\uff0c\u5f15\u5165\u4e00\u4e9b\u65b0\u7684\u6311\u6218\uff0c\u6bd4\u5982\u8d44\u6e90\u4e4b\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898\u3002\\n\\n\u6a2a\u5411\u6570\u636e\u6269\u5c55\u65e2\u53ef\u4ee5\u6309\u6570\u636e\u5206\u7247\u6269\u5c55\uff0c\u4e5f\u53ef\u4ee5\u6309\u529f\u80fd\u6269\u5c55\u3002TCC \u6a21\u578b\u80fd\u5728\u529f\u80fd\u6a2a\u5411\u6269\u5c55\u8d44\u6e90\u7684\u540c\u65f6\uff0c\u4fdd\u8bc1\u591a\u8d44\u6e90\u8bbf\u95ee\u7684\u4e8b\u52a1\u5c5e\u6027\u3002\\n\\nTCC \u6a21\u578b\u9664\u4e86\u8de8\u670d\u52a1\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u8fd9\u4e00\u5c42\u4f5c\u7528\u4e4b\u5916\uff0c\u8fd8\u5177\u6709\u4e24\u9636\u6bb5\u5212\u5206\u7684\u529f\u80fd\uff0c\u901a\u8fc7\u4e1a\u52a1\u8d44\u6e90\u9501\u5b9a\uff0c\u5141\u8bb8\u7b2c\u4e8c\u9636\u6bb5\u7684\u5f02\u6b65\u6267\u884c\uff0c\u800c\u5f02\u6b65\u5316\u601d\u60f3\u6b63\u662f\u89e3\u51b3\u70ed\u70b9\u6570\u636e\u5e76\u53d1\u6027\u80fd\u95ee\u9898\u7684\u5229\u5668\u4e4b\u4e00\u3002<br />\xa0\\n<a name=\\"Roadmap\\"></a>\\n\\n## Roadmap\\n\\n\u5f53\u524d\u5df2\u7ecf\u53d1\u5e03\u5230 0.4.0\uff0c\u540e\u7eed\u6211\u4eec\u4f1a\u53d1\u5e03 0.5 ~ 1.0 \u7248\u672c\uff0c\u7ee7\u7eed\u5bf9 AT\u3001TCC \u6a21\u5f0f\u8fdb\u884c\u529f\u80fd\u5b8c\u5584\u548c\u548c\u4e30\u5bcc\uff0c\u5e76\u89e3\u51b3\u670d\u52a1\u7aef\u9ad8\u53ef\u7528\u95ee\u9898\uff0c\u5728 1.0 \u7248\u672c\u4e4b\u540e\uff0c\u672c\u5f00\u6e90\u4ea7\u54c1\u5c06\u8fbe\u5230\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u7684\u6807\u51c6\u3002<br /><br /><br />![\u56fe\u72471.png](/img/blog/roadmap.png)<br />"},{"id":"/tcc-mode-design-principle","metadata":{"permalink":"/zh-cn/blog/tcc-mode-design-principle","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/tcc-mode-design-principle.md","title":"TCC \u7406\u8bba\u53ca\u8bbe\u8ba1\u5b9e\u73b0\u6307\u5357\u4ecb\u7ecd","description":"Fescar 0.4.0 \u7248\u672c\u53d1\u5e03\u4e86 TCC \u6a21\u5f0f\uff0c\u7531\u8682\u8681\u91d1\u670d\u56e2\u961f\u8d21\u732e\uff0c\u6b22\u8fce\u5927\u5bb6\u8bd5\u7528\uff0cSample \u5730\u5740\uff1ahttps://github.com/fescar-group/fescar-samples/tree/master/tcc\uff0c\u6587\u672b\u4e5f\u63d0\u4f9b\u4e86\u9879\u76ee\u540e\u7eed\u7684 Roadmap\uff0c\u6b22\u8fce\u5173\u6ce8\u3002","date":"2019-03-26T00:00:00.000Z","formattedDate":"2019\u5e743\u670826\u65e5","tags":[],"readingTime":8.24,"hasTruncateMarker":false,"authors":[{"name":"zhangthen"}],"frontMatter":{"title":"TCC \u7406\u8bba\u53ca\u8bbe\u8ba1\u5b9e\u73b0\u6307\u5357\u4ecb\u7ecd","author":"zhangthen","date":"2019/03/26","keywords":["fescar\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001TCC\u3001roadmap"]},"prevItem":{"title":"TCC\u9002\u7528\u6a21\u578b\u4e0e\u9002\u7528\u573a\u666f\u5206\u6790","permalink":"/zh-cn/blog/tcc-mode-applicable-scenario-analysis"},"nextItem":{"title":"\u5982\u4f55\u4f7f\u7528Seata\u4fdd\u8bc1Dubbo\u5fae\u670d\u52a1\u95f4\u7684\u4e00\u81f4\u6027","permalink":"/zh-cn/blog/quick-start-use-seata-and-dubbo-services"}},"content":"Fescar 0.4.0 \u7248\u672c\u53d1\u5e03\u4e86 TCC \u6a21\u5f0f\uff0c\u7531\u8682\u8681\u91d1\u670d\u56e2\u961f\u8d21\u732e\uff0c\u6b22\u8fce\u5927\u5bb6\u8bd5\u7528\uff0c<br />Sample \u5730\u5740\uff1a[https://github.com/fescar-group/fescar-samples/tree/master/tcc](https://github.com/fescar-group/fescar-samples/tree/master/tcc)\uff0c<br />\u6587\u672b\u4e5f\u63d0\u4f9b\u4e86\u9879\u76ee\u540e\u7eed\u7684 Roadmap\uff0c\u6b22\u8fce\u5173\u6ce8\u3002\\n\\n<a name=\\"f1d2fc6a\\"></a>\\n\\n### \u4e00\u3001TCC \u7b80\u4ecb\\n\\n\u5728\u4e24\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae\uff082PC\uff0cTwo Phase Commitment Protocol\uff09\u4e2d\uff0c\u8d44\u6e90\u7ba1\u7406\u5668\uff08RM, resource manager\uff09\u9700\u8981\u63d0\u4f9b\u201c\u51c6\u5907\u201d\u3001\u201c\u63d0\u4ea4\u201d\u548c\u201c\u56de\u6eda\u201d 3 \u4e2a\u64cd\u4f5c\uff1b\u800c\u4e8b\u52a1\u7ba1\u7406\u5668\uff08TM, transaction manager\uff09\u5206 2 \u9636\u6bb5\u534f\u8c03\u6240\u6709\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u5728\u7b2c\u4e00\u9636\u6bb5\u8be2\u95ee\u6240\u6709\u8d44\u6e90\u7ba1\u7406\u5668\u201c\u51c6\u5907\u201d\u662f\u5426\u6210\u529f\uff0c\u5982\u679c\u6240\u6709\u8d44\u6e90\u5747\u201c\u51c6\u5907\u201d\u6210\u529f\u5219\u5728\u7b2c\u4e8c\u9636\u6bb5\u6267\u884c\u6240\u6709\u8d44\u6e90\u7684\u201c\u63d0\u4ea4\u201d\u64cd\u4f5c\uff0c\u5426\u5219\u5728\u7b2c\u4e8c\u9636\u6bb5\u6267\u884c\u6240\u6709\u8d44\u6e90\u7684\u201c\u56de\u6eda\u201d\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u6240\u6709\u8d44\u6e90\u7684\u6700\u7ec8\u72b6\u6001\u662f\u4e00\u81f4\u7684\uff0c\u8981\u4e48\u5168\u90e8\u63d0\u4ea4\u8981\u4e48\u5168\u90e8\u56de\u6eda\u3002\\n\\n\u8d44\u6e90\u7ba1\u7406\u5668\u6709\u5f88\u591a\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5176\u4e2d TCC\uff08Try-Confirm-Cancel\uff09\u662f\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u4e00\u79cd\u670d\u52a1\u5316\u7684\u5b9e\u73b0\uff1bTCC \u662f\u4e00\u79cd\u6bd4\u8f83\u6210\u719f\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u7528\u4e8e\u89e3\u51b3\u8de8\u6570\u636e\u5e93\u3001\u8de8\u670d\u52a1\u4e1a\u52a1\u64cd\u4f5c\u7684\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898\uff1bTCC \u5176 Try\u3001Confirm\u3001Cancel 3 \u4e2a\u65b9\u6cd5\u5747\u7531\u4e1a\u52a1\u7f16\u7801\u5b9e\u73b0\uff0c\u6545 TCC \u53ef\u4ee5\u88ab\u79f0\u4e3a\u662f\u670d\u52a1\u5316\u7684\u8d44\u6e90\u7ba1\u7406\u5668\u3002\\n\\nTCC \u7684 Try \u64cd\u4f5c\u4f5c\u4e3a\u4e00\u9636\u6bb5\uff0c\u8d1f\u8d23\u8d44\u6e90\u7684\u68c0\u67e5\u548c\u9884\u7559\uff1bConfirm \u64cd\u4f5c\u4f5c\u4e3a\u4e8c\u9636\u6bb5\u63d0\u4ea4\u64cd\u4f5c\uff0c\u6267\u884c\u771f\u6b63\u7684\u4e1a\u52a1\uff1bCancel \u662f\u4e8c\u9636\u6bb5\u56de\u6eda\u64cd\u4f5c\uff0c\u6267\u884c\u9884\u7559\u8d44\u6e90\u7684\u53d6\u6d88\uff0c\u4f7f\u8d44\u6e90\u56de\u5230\u521d\u59cb\u72b6\u6001\u3002\\n\\n\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u7528\u6237\u5b9e\u73b0 TCC \u670d\u52a1\u4e4b\u540e\uff0c\u8be5 TCC \u670d\u52a1\u5c06\u4f5c\u4e3a\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u5176\u4e2d\u4e00\u4e2a\u8d44\u6e90\uff0c\u53c2\u4e0e\u5230\u6574\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\uff1b\u4e8b\u52a1\u7ba1\u7406\u5668\u5206 2 \u9636\u6bb5\u534f\u8c03 TCC \u670d\u52a1\uff0c\u5728\u7b2c\u4e00\u9636\u6bb5\u8c03\u7528\u6240\u6709 TCC \u670d\u52a1\u7684 Try \u65b9\u6cd5\uff0c\u5728\u7b2c\u4e8c\u9636\u6bb5\u6267\u884c\u6240\u6709 TCC \u670d\u52a1\u7684 Confirm \u6216\u8005 Cancel \u65b9\u6cd5\uff1b\u6700\u7ec8\u6240\u6709 TCC \u670d\u52a1\u8981\u4e48\u5168\u90e8\u90fd\u662f\u63d0\u4ea4\u7684\uff0c\u8981\u4e48\u5168\u90e8\u90fd\u662f\u56de\u6eda\u7684\u3002\\n\\n![image.png](/img/blog/tcc.png)\\n\\n<a name=\\"48153343\\"></a>\\n\\n### \u4e8c\u3001TCC \u8bbe\u8ba1\\n\\n\u7528\u6237\u5728\u63a5\u5165 TCC \u65f6\uff0c\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u96c6\u4e2d\u5728\u5982\u4f55\u5b9e\u73b0 TCC \u670d\u52a1\u4e0a\uff0c\u7ecf\u8fc7\u8682\u8681\u91d1\u670d\u591a\u5e74\u7684 TCC \u5e94\u7528\uff0c\u603b\u7ed3\u5982\u4e0b\u4e3b\u8981\u7684TCC \u8bbe\u8ba1\u548c\u5b9e\u73b0\u4e3b\u8981\u4e8b\u9879\uff1a\\n\\n<a name=\\"4226dc7c\\"></a>\\n\\n#### 1\u3001**\u4e1a\u52a1\u64cd\u4f5c\u5206\u4e24\u9636\u6bb5\u5b8c\u6210**\\n\\n\u63a5\u5165 TCC \u524d\uff0c\u4e1a\u52a1\u64cd\u4f5c\u53ea\u9700\u8981\u4e00\u6b65\u5c31\u80fd\u5b8c\u6210\uff0c\u4f46\u662f\u5728\u63a5\u5165 TCC \u4e4b\u540e\uff0c\u9700\u8981\u8003\u8651\u5982\u4f55\u5c06\u5176\u5206\u6210 2 \u9636\u6bb5\u5b8c\u6210\uff0c\u628a\u8d44\u6e90\u7684\u68c0\u67e5\u548c\u9884\u7559\u653e\u5728\u4e00\u9636\u6bb5\u7684 Try \u64cd\u4f5c\u4e2d\u8fdb\u884c\uff0c\u628a\u771f\u6b63\u7684\u4e1a\u52a1\u64cd\u4f5c\u7684\u6267\u884c\u653e\u5728\u4e8c\u9636\u6bb5\u7684 Confirm \u64cd\u4f5c\u4e2d\u8fdb\u884c\u3002\\n\\n\u4ee5\u4e0b\u4e3e\u4f8b\u8bf4\u660e\u4e1a\u52a1\u6a21\u5f0f\u5982\u4f55\u5206\u6210\u4e24\u9636\u6bb5\u8fdb\u884c\u8bbe\u8ba1\uff0c\u4e3e\u4f8b\u573a\u666f\uff1a\u201c\u8d26\u6237A\u7684\u4f59\u989d\u4e2d\u6709 100 \u5143\uff0c\u9700\u8981\u6263\u9664\u5176\u4e2d 30 \u5143\u201d\uff1b\\n\\n\u5728\u63a5\u5165 TCC \u4e4b\u524d\uff0c\u7528\u6237\u7f16\u5199 SQL\uff1a\u201cupdate \u8d26\u6237\u8868 set \u4f59\u989d = \u4f59\u989d - 30 where \u8d26\u6237 = A\u201d\uff0c\u4fbf\u80fd\u4e00\u6b65\u5b8c\u6210\u6263\u6b3e\u64cd\u4f5c\u3002\\n\\n\u5728\u63a5\u5165 TCC \u4e4b\u540e\uff0c\u5c31\u9700\u8981\u8003\u8651\u5982\u4f55\u5c06\u6263\u6b3e\u64cd\u4f5c\u5206\u6210 2 \u6b65\u5b8c\u6210\uff1a\\n\\n* Try \u64cd\u4f5c\uff1a\u8d44\u6e90\u7684\u68c0\u67e5\u548c\u9884\u7559\uff1b\\n\\n\u5728\u6263\u6b3e\u573a\u666f\uff0cTry \u64cd\u4f5c\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u5148\u68c0\u67e5 A \u8d26\u6237\u4f59\u989d\u662f\u5426\u8db3\u591f\uff0c\u518d\u51bb\u7ed3\u8981\u6263\u6b3e\u7684 30 \u5143\uff08\u9884\u7559\u8d44\u6e90\uff09\uff1b\u6b64\u9636\u6bb5\u4e0d\u4f1a\u53d1\u751f\u771f\u6b63\u7684\u6263\u6b3e\u3002\\n\\n* Confirm \u64cd\u4f5c\uff1a\u6267\u884c\u771f\u6b63\u4e1a\u52a1\u7684\u63d0\u4ea4\uff1b\\n\\n\u5728\u6263\u6b3e\u573a\u666f\u4e0b\uff0cConfirm \u9636\u6bb5\u8d70\u7684\u4e8b\u60c5\u5c31\u662f\u53d1\u751f\u771f\u6b63\u7684\u6263\u6b3e\uff0c\u628aA\u8d26\u6237\u4e2d\u5df2\u7ecf\u51bb\u7ed3\u7684 30 \u5143\u94b1\u6263\u6389\u3002\\n\\n* Cancel \u64cd\u4f5c\uff1a\u9884\u7559\u8d44\u6e90\u7684\u662f\u5426\u91ca\u653e\uff1b\\n\\n\u5728\u6263\u6b3e\u573a\u666f\u4e0b\uff0c\u6263\u6b3e\u53d6\u6d88\uff0cCancel \u64cd\u4f5c\u6267\u884c\u7684\u4efb\u52a1\u662f\u91ca\u653e Try \u64cd\u4f5c\u51bb\u7ed3\u7684 30 \u5143\u94b1\uff0c\u662f A \u8d26\u6237\u56de\u5230\u521d\u59cb\u72b6\u6001\u3002\\n\\n![image.png](/img/blog/tow_step.png)\\n\\n\\n<a name=\\"bce861f1\\"></a>\\n\\n#### 2\u3001**\u5e76\u53d1\u63a7\u5236**\\n\\n\u7528\u6237\u5728\u5b9e\u73b0 TCC \u65f6\uff0c\u5e94\u5f53\u8003\u8651\u5e76\u53d1\u6027\u95ee\u9898\uff0c\u5c06\u9501\u7684\u7c92\u5ea6\u964d\u5230\u6700\u4f4e\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u7684\u63d0\u9ad8\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u5e76\u53d1\u6027\u3002\\n\\n\u4ee5\u4e0b\u8fd8\u662f\u4ee5A\u8d26\u6237\u6263\u6b3e\u4e3a\u4f8b\uff0c\u201c\u8d26\u6237 A \u4e0a\u6709 100 \u5143\uff0c\u4e8b\u52a1 T1 \u8981\u6263\u9664\u5176\u4e2d\u7684 30 \u5143\uff0c\u4e8b\u52a1 T2 \u4e5f\u8981\u6263\u9664 30 \u5143\uff0c\u51fa\u73b0\u5e76\u53d1\u201d\u3002\\n\\n\u5728\u4e00\u9636\u6bb5 Try \u64cd\u4f5c\u4e2d\uff0c\u5206\u5e03\u5f0f\u4e8b\u52a1 T1 \u548c\u5206\u5e03\u5f0f\u4e8b\u52a1 T2 \u5206\u522b\u51bb\u7ed3\u8d44\u91d1\u7684\u90a3\u4e00\u90e8\u5206\u8d44\u91d1\uff0c\u76f8\u4e92\u4e4b\u95f4\u65e0\u5e72\u6270\uff1b\u8fd9\u6837\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u4e8c\u9636\u6bb5\uff0c\u65e0\u8bba T1 \u662f\u63d0\u4ea4\u8fd8\u662f\u56de\u6eda\uff0c\u90fd\u4e0d\u4f1a\u5bf9 T2 \u4ea7\u751f\u5f71\u54cd\uff0c\u8fd9\u6837 T1 \u548c T2 \u5728\u540c\u4e00\u7b14\u4e1a\u52a1\u6570\u636e\u4e0a\u5e76\u884c\u6267\u884c\u3002\\n\\n![image.png](/img/blog/conc.png) <br />\\n\\n<a name=\\"e945e352\\"></a>\\n\\n#### 3\u3001**\u5141\u8bb8\u7a7a\u56de\u6eda**\\n\\n\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e8b\u52a1\u534f\u8c03\u5668\u5728\u8c03\u7528 TCC \u670d\u52a1\u7684\u4e00\u9636\u6bb5 Try \u64cd\u4f5c\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u56e0\u4e3a\u4e22\u5305\u800c\u5bfc\u81f4\u7684\u7f51\u7edc\u8d85\u65f6\uff0c\u6b64\u65f6\u4e8b\u52a1\u7ba1\u7406\u5668\u4f1a\u89e6\u53d1\u4e8c\u9636\u6bb5\u56de\u6eda\uff0c\u8c03\u7528 TCC \u670d\u52a1\u7684 Cancel \u64cd\u4f5c\uff0c\u800c Cancel \u64cd\u4f5c\u8c03\u7528\u672a\u51fa\u73b0\u8d85\u65f6\u3002\\n\\nTCC \u670d\u52a1\u5728\u672a\u6536\u5230 Try \u8bf7\u6c42\u7684\u60c5\u51b5\u4e0b\u6536\u5230 Cancel \u8bf7\u6c42\uff0c\u8fd9\u79cd\u573a\u666f\u88ab\u79f0\u4e3a\u7a7a\u56de\u6eda\uff1b\u7a7a\u56de\u6eda\u5728\u751f\u4ea7\u73af\u5883\u7ecf\u5e38\u51fa\u73b0\uff0c\u7528\u6237\u5728\u5b9e\u73b0TCC\u670d\u52a1\u65f6\uff0c\u5e94\u5141\u8bb8\u5141\u8bb8\u7a7a\u56de\u6eda\u7684\u6267\u884c\uff0c\u5373\u6536\u5230\u7a7a\u56de\u6eda\u65f6\u8fd4\u56de\u6210\u529f\u3002\\n\\n![image.png](/img/blog/empty_rollback.png)\\n\\n<a name=\\"e02f3ee9\\"></a>\\n\\n#### 4\u3001\u9632\u60ac\u6302\u63a7\u5236\\n\\n\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e8b\u52a1\u534f\u8c03\u5668\u5728\u8c03\u7528 TCC \u670d\u52a1\u7684\u4e00\u9636\u6bb5 Try \u64cd\u4f5c\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u56e0\u7f51\u7edc\u62e5\u5835\u800c\u5bfc\u81f4\u7684\u8d85\u65f6\uff0c\u6b64\u65f6\u4e8b\u52a1\u7ba1\u7406\u5668\u4f1a\u89e6\u53d1\u4e8c\u9636\u6bb5\u56de\u6eda\uff0c\u8c03\u7528 TCC \u670d\u52a1\u7684 Cancel \u64cd\u4f5c\uff0cCancel \u8c03\u7528\u672a\u8d85\u65f6\uff1b\u5728\u6b64\u4e4b\u540e\uff0c\u62e5\u5835\u5728\u7f51\u7edc\u4e0a\u7684\u4e00\u9636\u6bb5 Try \u6570\u636e\u5305\u88ab TCC \u670d\u52a1\u6536\u5230\uff0c\u51fa\u73b0\u4e86\u4e8c\u9636\u6bb5 Cancel \u8bf7\u6c42\u6bd4\u4e00\u9636\u6bb5 Try \u8bf7\u6c42\u5148\u6267\u884c\u7684\u60c5\u51b5\uff0c\u6b64 TCC \u670d\u52a1\u5728\u6267\u884c\u665a\u5230\u7684 Try \u4e4b\u540e\uff0c\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u518d\u6536\u5230\u4e8c\u9636\u6bb5\u7684 Confirm \u6216\u8005 Cancel \uff0c\u9020\u6210 TCC \u670d\u52a1\u60ac\u6302\u3002\\n\\n\u7528\u6237\u5728\u5b9e\u73b0\xa0 TCC \u670d\u52a1\u65f6\uff0c\u8981\u5141\u8bb8\u7a7a\u56de\u6eda\uff0c\u4f46\u662f\u8981\u62d2\u7edd\u6267\u884c\u7a7a\u56de\u6eda\u4e4b\u540e Try \u8bf7\u6c42\uff0c\u8981\u907f\u514d\u51fa\u73b0\u60ac\u6302\u3002\\n\\n![image.png](/img/blog/susp.png)\\n\\n\\n<a name=\\"5322a3d5\\"></a>\\n\\n#### 5\u3001\u5e42\u7b49\u63a7\u5236\\n\\n\u65e0\u8bba\u662f\u7f51\u7edc\u6570\u636e\u5305\u91cd\u4f20\uff0c\u8fd8\u662f\u5f02\u5e38\u4e8b\u52a1\u7684\u8865\u507f\u6267\u884c\uff0c\u90fd\u4f1a\u5bfc\u81f4 TCC \u670d\u52a1\u7684 Try\u3001Confirm \u6216\u8005 Cancel \u64cd\u4f5c\u88ab\u91cd\u590d\u6267\u884c\uff1b\u7528\u6237\u5728\u5b9e\u73b0 TCC \u670d\u52a1\u65f6\uff0c\u9700\u8981\u8003\u8651\u5e42\u7b49\u63a7\u5236\uff0c\u5373 Try\u3001Confirm\u3001Cancel \u6267\u884c\u4e00\u6b21\u548c\u6267\u884c\u591a\u6b21\u7684\u4e1a\u52a1\u7ed3\u679c\u662f\u4e00\u6837\u7684\u3002<br />![image.png](/img/blog/miden.png)<br /><br />\\n\\n<a name=\\"Roadmap\\"></a>\\n\\n### Roadmap\\n\\n\u5f53\u524d\u5df2\u7ecf\u53d1\u5e03\u5230 0.4.0 \u7248\u672c\uff0c\u540e\u7eed\u6211\u4eec\u4f1a\u53d1\u5e03 0.5 ~ 1.0 \u7248\u672c\uff0c\u7ee7\u7eed\u5bf9 AT\u3001TCC \u6a21\u5f0f\u8fdb\u884c\u529f\u80fd\u5b8c\u5584\u548c\u548c\u4e30\u5bcc\uff0c\u5e76\u89e3\u51b3\u670d\u52a1\u7aef\u9ad8\u53ef\u7528\u95ee\u9898\uff0c\u5728 1.0 \u7248\u672c\u4e4b\u540e\uff0c\u672c\u5f00\u6e90\u4ea7\u54c1\u5c06\u8fbe\u5230\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u7684\u6807\u51c6\u3002\\n\\n\\n![\u56fe\u72471.png](/img/blog/roadmap.png)"},{"id":"/quick-start-use-seata-and-dubbo-services","metadata":{"permalink":"/zh-cn/blog/quick-start-use-seata-and-dubbo-services","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/quick-start-use-seata-and-dubbo-services.md","title":"\u5982\u4f55\u4f7f\u7528Seata\u4fdd\u8bc1Dubbo\u5fae\u670d\u52a1\u95f4\u7684\u4e00\u81f4\u6027","description":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528Seata\u4fdd\u8bc1Dubbo\u5fae\u670d\u52a1\u95f4\u7684\u4e00\u81f4\u6027","date":"2019-03-07T00:00:00.000Z","formattedDate":"2019\u5e743\u67087\u65e5","tags":[],"readingTime":3.345,"hasTruncateMarker":false,"authors":[{"name":"slievrly"}],"frontMatter":{"title":"\u5982\u4f55\u4f7f\u7528Seata\u4fdd\u8bc1Dubbo\u5fae\u670d\u52a1\u95f4\u7684\u4e00\u81f4\u6027","keywords":["Dubbo","Seata","\u4e00\u81f4\u6027"],"description":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528Seata\u4fdd\u8bc1Dubbo\u5fae\u670d\u52a1\u95f4\u7684\u4e00\u81f4\u6027","author":"slievrly","date":"2019-03-07T00:00:00.000Z"},"prevItem":{"title":"TCC \u7406\u8bba\u53ca\u8bbe\u8ba1\u5b9e\u73b0\u6307\u5357\u4ecb\u7ecd","permalink":"/zh-cn/blog/tcc-mode-design-principle"},"nextItem":{"title":"Fescar\u5206\u5e03\u5f0f\u4e8b\u52a1\u539f\u7406\u89e3\u6790\u63a2\u79d8","permalink":"/zh-cn/blog/seata-analysis-simple"}},"content":"## \u6848\u4f8b\\n\\n\u7528\u6237\u91c7\u8d2d\u5546\u54c1\u4e1a\u52a1\uff0c\u6574\u4e2a\u4e1a\u52a1\u5305\u542b3\u4e2a\u5fae\u670d\u52a1:\\n\\n- \u5e93\u5b58\u670d\u52a1: \u6263\u51cf\u7ed9\u5b9a\u5546\u54c1\u7684\u5e93\u5b58\u6570\u91cf\u3002\\n- \u8ba2\u5355\u670d\u52a1: \u6839\u636e\u91c7\u8d2d\u8bf7\u6c42\u751f\u6210\u8ba2\u5355\u3002\\n- \u8d26\u6237\u670d\u52a1: \u7528\u6237\u8d26\u6237\u91d1\u989d\u6263\u51cf\u3002\\n\\n### \u4e1a\u52a1\u7ed3\u6784\u56fe\\n\\n![Architecture](/img/blog/seata/seata-1.png) \\n\\n\\n### StorageService\\n\\n```java\\npublic interface StorageService {\\n\\n    /**\\n     * deduct storage count\\n     */\\n    void deduct(String commodityCode, int count);\\n}\\n```\\n\\n### OrderService\\n\\n```java\\npublic interface OrderService {\\n\\n    /**\\n     * create order\\n     */\\n    Order create(String userId, String commodityCode, int orderCount);\\n}\\n```\\n\\n### AccountService\\n\\n```java\\npublic interface AccountService {\\n\\n    /**\\n     * debit balance of user\'s account\\n     */\\n    void debit(String userId, int money);\\n}\\n```\\n\\n### \u4e3b\u8981\u7684\u4e1a\u52a1\u903b\u8f91\uff1a\\n\\n```java\\npublic class BusinessServiceImpl implements BusinessService {\\n\\n    private StorageService storageService;\\n\\n    private OrderService orderService;\\n\\n    /**\\n     * purchase\\n     */\\n    public void purchase(String userId, String commodityCode, int orderCount) {\\n\\n        storageService.deduct(commodityCode, orderCount);\\n\\n        orderService.create(userId, commodityCode, orderCount);\\n    }\\n}\\n```\\n\\n```java\\npublic class StorageServiceImpl implements StorageService {\\n\\n  private StorageDAO storageDAO;\\n  \\n    @Override\\n    public void deduct(String commodityCode, int count) {\\n        Storage storage = new Storage();\\n        storage.setCount(count);\\n        storage.setCommodityCode(commodityCode);\\n        storageDAO.update(storage);\\n    }\\n}\\n```\\n\\n```java\\npublic class OrderServiceImpl implements OrderService {\\n\\n    private OrderDAO orderDAO;\\n\\n    private AccountService accountService;\\n\\n    public Order create(String userId, String commodityCode, int orderCount) {\\n\\n        int orderMoney = calculate(commodityCode, orderCount);\\n\\n        accountService.debit(userId, orderMoney);\\n\\n        Order order = new Order();\\n        order.userId = userId;\\n        order.commodityCode = commodityCode;\\n        order.count = orderCount;\\n        order.money = orderMoney;\\n\\n        return orderDAO.insert(order);\\n    }\\n}\\n```\\n\\n## Seata \u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\\n\\n![undefined](/img/blog/seata/seata-2.png) \\n\\n\u6b64\u5904\u4ec5\u4ec5\u9700\u8981\u4e00\u884c\u6ce8\u89e3 `@GlobalTransactional` \u5199\u5728\u4e1a\u52a1\u53d1\u8d77\u65b9\u7684\u65b9\u6cd5\u4e0a: \\n\\n```java\\n\\n    @GlobalTransactional\\n    public void purchase(String userId, String commodityCode, int orderCount) {\\n        ......\\n    }\\n```\\n\\n##  Dubbo \u4e0e Seata \u7ed3\u5408\u7684\u4f8b\u5b50\\n\\n### Step 1: \u5b89\u88c5\u6570\u636e\u5e93\\n\\n- \u8981\u6c42: MySQL (InnoDB \u5b58\u50a8\u5f15\u64ce)\u3002\\n\\n**\u63d0\u793a:** \u4e8b\u5b9e\u4e0a\u4f8b\u5b50\u4e2d3\u4e2a\u5fae\u670d\u52a1\u9700\u89813\u4e2a\u72ec\u7acb\u7684\u6570\u636e\u5e93\uff0c\u4f46\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u4f7f\u7528\u540c\u4e00\u7269\u7406\u5e93\u5e76\u914d\u7f6e3\u4e2a\u903b\u8f91\u8fde\u63a5\u4e32\u3002 \\n\\n\u66f4\u6539\u4ee5\u4e0bxml\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u5e93url\u3001username\u548cpassword\\n\\ndubbo-account-service.xml\\ndubbo-order-service.xml\\ndubbo-storage-service.xml\\n\\n```xml\\n    <property name=\\"url\\" value=\\"jdbc:mysql://x.x.x.x:3306/xxx\\" />\\n    <property name=\\"username\\" value=\\"xxx\\" />\\n    <property name=\\"password\\" value=\\"xxx\\" />\\n```\\n### Step 2: \u4e3a Seata \u521b\u5efa UNDO_LOG \u8868\\n\\n`UNDO_LOG` \u6b64\u8868\u7528\u4e8e Seata \u7684AT\u6a21\u5f0f\u3002\\n\\n```sql\\nCREATE TABLE `undo_log` (\\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\\n  `branch_id` bigint(20) NOT NULL,\\n  `xid` varchar(100) NOT NULL,\\n  `rollback_info` longblob NOT NULL,\\n  `log_status` int(11) NOT NULL,\\n  `log_created` datetime NOT NULL,\\n  `log_modified` datetime NOT NULL,\\n  `ext` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `idx_unionkey` (`xid`,`branch_id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=159 DEFAULT CHARSET=utf8\\n```\\n\\n### Step 3: \u521b\u5efa\u76f8\u5173\u4e1a\u52a1\u8868\\n\\n```sql\\n\\nDROP TABLE IF EXISTS `storage_tbl`;\\nCREATE TABLE `storage_tbl` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT,\\n  `commodity_code` varchar(255) DEFAULT NULL,\\n  `count` int(11) DEFAULT 0,\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY (`commodity_code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\\n\\n\\nDROP TABLE IF EXISTS `order_tbl`;\\nCREATE TABLE `order_tbl` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT,\\n  `user_id` varchar(255) DEFAULT NULL,\\n  `commodity_code` varchar(255) DEFAULT NULL,\\n  `count` int(11) DEFAULT 0,\\n  `money` int(11) DEFAULT 0,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\\n\\n\\nDROP TABLE IF EXISTS `account_tbl`;\\nCREATE TABLE `account_tbl` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT,\\n  `user_id` varchar(255) DEFAULT NULL,\\n  `money` int(11) DEFAULT 0,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\\n```\\n### Step 4: \u542f\u52a8 Seata-Server \u670d\u52a1\\n\\n- \u4e0b\u8f7dServer [package](https://github.com/seata/seata/releases), \u5e76\u89e3\u538b\u3002\\n- \u8fd0\u884cbin\u76ee\u5f55\u4e0b\u7684\u542f\u52a8\u811a\u672c\u3002\\n\\n```shell\\nsh seata-server.sh $LISTEN_PORT $PATH_FOR_PERSISTENT_DATA\\n\\ne.g.\\n\\nsh seata-server.sh 8091 /home/admin/seata/data/\\n```\\n\\n### Step 5: \u8fd0\u884c\u4f8b\u5b50\\n\\n- \u542f\u52a8\u8d26\u6237\u670d\u52a1 ([DubboAccountServiceStarter](https://github.com/seata/seata-samples/blob/master/dubbo/src/main/java/com/seata/seata/samples/dubbo/starter/DubboAccountServiceStarter.java))\u3002\\n- \u542f\u52a8\u5e93\u5b58\u670d\u52a1 ([DubboStorageServiceStarter](https://github.com/seata/seata-samples/blob/master/dubbo/src/main/java/com/seata/seata/samples/dubbo/starter/DubboStorageServiceStarter.java))\u3002\\n- \u542f\u52a8\u8ba2\u5355\u670d\u52a1 ([DubboOrderServiceStarter](https://github.com/seata/seata-samples/blob/master/dubbo/src/main/java/com/seata/seata/samples/dubbo/starter/DubboOrderServiceStarter.java))\u3002\\n- \u8fd0\u884cBusinessService\u5165\u53e3 ([DubboBusinessTester](https://github.com/seata/seata-samples/blob/master/dubbo/src/main/java/com/seata/seata/samples/dubbo/starter/DubboBusinessTester.java))\u3002\\n\\n### \u76f8\u5173\u9879\u76ee\\n* seata:          https://github.com/seata/seata/\\n* seata-samples : https://github.com/seata/seata-samples"},{"id":"/seata-analysis-simple","metadata":{"permalink":"/zh-cn/blog/seata-analysis-simple","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/seata-analysis-simple.md","title":"Fescar\u5206\u5e03\u5f0f\u4e8b\u52a1\u539f\u7406\u89e3\u6790\u63a2\u79d8","description":"fescar\u53d1\u5e03\u5df2\u6709\u65f6\u65e5\uff0c\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e00\u76f4\u662f\u4e1a\u754c\u5907\u53d7\u5173\u6ce8\u7684\u9886\u57df\uff0cfescar\u53d1\u5e03\u4e00\u4e2a\u6708\u5de6\u53f3\u4fbf\u53d7\u5230\u4e86\u8fd15000\u4e2astar\u8db3\u4ee5\u8bf4\u660e\u5176\u70ed\u5ea6\u3002\u5f53\u7136\uff0c\u5728fescar\u51fa\u6765\u4e4b\u524d\uff0c","date":"2019-02-18T00:00:00.000Z","formattedDate":"2019\u5e742\u670818\u65e5","tags":[],"readingTime":22.81,"hasTruncateMarker":false,"authors":[{"name":"\u9648\u51ef\u73b2"}],"frontMatter":{"title":"Fescar\u5206\u5e03\u5f0f\u4e8b\u52a1\u539f\u7406\u89e3\u6790\u63a2\u79d8","author":"\u9648\u51ef\u73b2","keywords":["Fescar\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1"],"date":"2019/02/18"},"prevItem":{"title":"\u5982\u4f55\u4f7f\u7528Seata\u4fdd\u8bc1Dubbo\u5fae\u670d\u52a1\u95f4\u7684\u4e00\u81f4\u6027","permalink":"/zh-cn/blog/quick-start-use-seata-and-dubbo-services"},"nextItem":{"title":"MT \u6a21\u5f0f","permalink":"/zh-cn/blog/manual-transaction-mode"}},"content":"fescar\u53d1\u5e03\u5df2\u6709\u65f6\u65e5\uff0c\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e00\u76f4\u662f\u4e1a\u754c\u5907\u53d7\u5173\u6ce8\u7684\u9886\u57df\uff0cfescar\u53d1\u5e03\u4e00\u4e2a\u6708\u5de6\u53f3\u4fbf\u53d7\u5230\u4e86\u8fd15000\u4e2astar\u8db3\u4ee5\u8bf4\u660e\u5176\u70ed\u5ea6\u3002\u5f53\u7136\uff0c\u5728fescar\u51fa\u6765\u4e4b\u524d\uff0c\\n\u5df2\u7ecf\u6709\u6bd4\u8f83\u6210\u719f\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u5f00\u6e90\u4e86\uff0c\u6bd4\u8f83\u5178\u578b\u7684\u65b9\u6848\u5982 [LCN](https://github.com/codingapi/tx-lcn) \u76842pc\u578b\u65e0\u4fb5\u5165\u4e8b\u52a1\uff0c\\n\u76ee\u524dlcn\u5df2\u53d1\u5c55\u52305.0\uff0c\u5df2\u652f\u6301\u548cfescar\u4e8b\u52a1\u6a21\u578b\u7c7b\u4f3c\u7684TCX\u578b\u4e8b\u52a1\u3002\u8fd8\u6709\u5982TCC\u578b\u4e8b\u52a1\u5b9e\u73b0 [hmily](https://github.com/yu199195/hmily) [tcc-transaction](https://github.com/changmingxie/tcc-transaction) \u7b49\u3002\\n\u5728\u5fae\u670d\u52a1\u67b6\u6784\u6d41\u884c\u7684\u5f53\u4e0b\u3001\u963f\u91cc\u8fd9\u79cd\u5f00\u6e90\u5927\u6237\u80cc\u666f\u4e0b\uff0cfescar\u7684\u53d1\u5e03\u65e0\u7591\u53c8\u6380\u8d77\u4e86\u7814\u7a76\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u70ed\u6f6e\u3002fescar\u8131\u80ce\u4e8e\u963f\u91cc\u4e91\u5546\u4e1a\u5206\u5e03\u5f0f\u4e8b\u52a1\u670d\u52a1GTS\uff0c\u5728\u7ebf\u4e0a\u73af\u5883\u63d0\u4f9b\u8fd9\u79cd\u516c\u5171\u670d\u52a1\u5176\u6a21\u5f0f\u80af\u5b9a\u7ecf\u53d7\u4e86\u975e\u5e38\u4e25\u82db\u7684\u8003\u9a8c\u3002\u5176\u5206\u5e03\u5f0f\u4e8b\u52a1\u6a21\u578bTXC\u53c8\u4eff\u4e8e\u4f20\u7edf\u4e8b\u52a1\u6a21\u578bXA\u65b9\u6848\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u5b9a\u4f4d\u4e00\u4e2a\u5728\u5e94\u7528\u5c42\u4e00\u4e2a\u5728\u6570\u636e\u5e93\u5c42\u3002\u535a\u4e3b\u89c9\u5f97fescar\u7684txc\u6a21\u578b\u5b9e\u73b0\u975e\u5e38\u6709\u7814\u7a76\u7684\u4ef7\u503c\uff0c\u6240\u4ee5\u4eca\u5929\u6211\u4eec\u6765\u597d\u597d\u7ffb\u4e00\u7ffbfescar\u9879\u76ee\u7684\u4ee3\u7801\u3002\u672c\u6587\u7bc7\u5e45\u8f83\u957f\uff0c\u6d4f\u89c8\u5e76\u7406\u89e3\u672c\u6587\u5927\u6982\u8017\u65f630~60\u5206\u949f\u5de6\u53f3\u3002\\n\\n# \u9879\u76ee\u5730\u5740\\n\\nfescar\uff1ahttps://github.com/alibaba/fescar\\n\\n\u672c\u535a\u6587\u6240\u8ff0\u4ee3\u7801\u4e3afescar\u76840.1.2-SNAPSHOT\u7248\u672c\uff0c\u6839\u636efescar\u540e\u671f\u7684\u8fed\u4ee3\u8ba1\u5212\uff0c\u5176\u9879\u76ee\u7ed3\u6784\u548c\u6a21\u5757\u5b9e\u73b0\u90fd\u53ef\u80fd\u6709\u5f88\u5927\u7684\u6539\u53d8\uff0c\u7279\u6b64\u8bf4\u660e\u3002\\n\\n# fescar\u7684TXC\u6a21\u578b\\n\\n![](/img/blog/c45496461bca15ecd522e497d98ba954f95.jpg)\\n\\n\u4e0a\u56fe\u4e3afescar\u5b98\u65b9\u9488\u5bf9TXC\u6a21\u578b\u5236\u4f5c\u7684\u793a\u610f\u56fe\u3002\u4e0d\u5f97\u4e0d\u8bf4\u5927\u5382\u7684\u56fe\u5236\u4f5c\u7684\u771f\u7684\u4e0d\u9519\uff0c\u7ed3\u5408\u793a\u610f\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230TXC\u5b9e\u73b0\u7684\u5168\u8c8c\u3002TXC\u7684\u5b9e\u73b0\u901a\u8fc7\u4e09\u4e2a\u7ec4\u4ef6\u6765\u5b8c\u6210\u3002\u4e5f\u5c31\u662f\u4e0a\u56fe\u7684\u4e09\u4e2a\u6df1\u9ec4\u8272\u90e8\u5206\uff0c\u5176\u4f5c\u7528\u5982\u4e0b\uff1a\\n\\n1.  TM\uff1a\u5168\u5c40\u4e8b\u52a1\u7ba1\u7406\u5668\uff0c\u5728\u6807\u6ce8\u5f00\u542ffescar\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u670d\u52a1\u7aef\u5f00\u542f\uff0c\u5e76\u5c06\u5168\u5c40\u4e8b\u52a1\u53d1\u9001\u5230TC\u4e8b\u52a1\u63a7\u5236\u7aef\u7ba1\u7406\\n2.  TC\uff1a\u4e8b\u52a1\u63a7\u5236\u4e2d\u5fc3\uff0c\u63a7\u5236\u5168\u5c40\u4e8b\u52a1\u7684\u63d0\u4ea4\u6216\u8005\u56de\u6eda\u3002\u8fd9\u4e2a\u7ec4\u4ef6\u9700\u8981\u72ec\u7acb\u90e8\u7f72\u7ef4\u62a4\uff0c\u76ee\u524d\u53ea\u652f\u6301\u5355\u673a\u7248\u672c\uff0c\u540e\u7eed\u8fed\u4ee3\u8ba1\u5212\u4f1a\u6709\u96c6\u7fa4\u7248\u672c\\n3.  RM\uff1a\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u4e3b\u8981\u8d1f\u8d23\u5206\u652f\u4e8b\u52a1\u7684\u4e0a\u62a5\uff0c\u672c\u5730\u4e8b\u52a1\u7684\u7ba1\u7406\\n\\n\u4e00\u6bb5\u8bdd\u7b80\u8ff0\u5176\u5b9e\u73b0\u8fc7\u7a0b\uff1a\u670d\u52a1\u8d77\u59cb\u65b9\u53d1\u8d77\u5168\u5c40\u4e8b\u52a1\u5e76\u6ce8\u518c\u5230TC\u3002\u5728\u8c03\u7528\u534f\u540c\u670d\u52a1\u65f6\uff0c\u534f\u540c\u670d\u52a1\u7684\u4e8b\u52a1\u5206\u652f\u4e8b\u52a1\u4f1a\u5148\u5b8c\u6210\u9636\u6bb5\u4e00\u7684\u4e8b\u52a1\u63d0\u4ea4\u6216\u56de\u6eda\uff0c\u5e76\u751f\u6210\u4e8b\u52a1\u56de\u6eda\u7684undo_log\u65e5\u5fd7\uff0c\u540c\u65f6\u6ce8\u518c\u5f53\u524d\u534f\u540c\u670d\u52a1\u5230TC\u5e76\u4e0a\u62a5\u5176\u4e8b\u52a1\u72b6\u6001\uff0c\u5f52\u5e76\u5230\u540c\u4e00\u4e2a\u4e1a\u52a1\u7684\u5168\u5c40\u4e8b\u52a1\u4e2d\u3002\u6b64\u65f6\u82e5\u6ca1\u6709\u95ee\u9898\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u534f\u540c\u670d\u52a1\u7684\u8c03\u7528\uff0c\u671f\u95f4\u4efb\u4f55\u534f\u540c\u670d\u52a1\u7684\u5206\u652f\u4e8b\u52a1\u56de\u6eda\uff0c\u90fd\u4f1a\u901a\u77e5\u5230TC\uff0cTC\u5728\u901a\u77e5\u5168\u5c40\u4e8b\u52a1\u5305\u542b\u7684\u6240\u6709\u5df2\u5b8c\u6210\u4e00\u9636\u6bb5\u63d0\u4ea4\u7684\u5206\u652f\u4e8b\u52a1\u56de\u6eda\u3002\u5982\u679c\u6240\u6709\u5206\u652f\u4e8b\u52a1\u90fd\u6b63\u5e38\uff0c\u6700\u540e\u56de\u5230\u5168\u5c40\u4e8b\u52a1\u53d1\u8d77\u65b9\u65f6\uff0c\u4e5f\u4f1a\u901a\u77e5\u5230TC\uff0cTC\u5728\u901a\u77e5\u5168\u5c40\u4e8b\u52a1\u5305\u542b\u7684\u6240\u6709\u5206\u652f\u5220\u9664\u56de\u6eda\u65e5\u5fd7\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e3a\u4e86\u89e3\u51b3\u5199\u9694\u79bb\u548c\u5ea6\u9694\u79bb\u7684\u95ee\u9898\u4f1a\u6d89\u53ca\u5230TC\u7ba1\u7406\u7684\u5168\u5c40\u9501\u3002\\n\\n\u672c\u535a\u6587\u7684\u76ee\u6807\u662f\u6df1\u5165\u4ee3\u7801\u7ec6\u8282\uff0c\u63a2\u7a76\u5176\u57fa\u672c\u601d\u8def\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002\u9996\u5148\u4f1a\u4ece\u9879\u76ee\u7684\u7ed3\u6784\u6765\u7b80\u8ff0\u6bcf\u4e2a\u6a21\u5757\u7684\u4f5c\u7528\uff0c\u7ee7\u800c\u7ed3\u5408\u5b98\u65b9\u81ea\u5e26\u7684examples\u5b9e\u4f8b\u6765\u63a2\u7a76\u6574\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u5b9e\u73b0\u8fc7\u7a0b\u3002\\n\\n# \u9879\u76ee\u7ed3\u6784\u89e3\u6790\\n\\n\u9879\u76ee\u62c9\u4e0b\u6765\uff0c\u7528IDE\u6253\u5f00\u540e\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff0c\u4e0b\u9762\u5148\u5927\u81f4\u7684\u770b\u4e0b\u6bcf\u4e2a\u6a21\u5757\u7684\u5b9e\u73b0\\n\\n![](/img/blog/a88cf147f489f913886ef1785d94183bf09.jpg)\\n\\n-   common \uff1a\u516c\u5171\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u5e38\u7528\u8f85\u52a9\u7c7b\uff0c\u9759\u6001\u53d8\u91cf\u3001\u6269\u5c55\u673a\u5236\u7c7b\u52a0\u8f7d\u5668\u3001\u4ee5\u53ca\u5b9a\u4e49\u5168\u5c40\u7684\u5f02\u5e38\u7b49\\n-   config : \u914d\u7f6e\u52a0\u8f7d\u89e3\u6790\u6a21\u5757\uff0c\u63d0\u4f9b\u4e86\u914d\u7f6e\u7684\u57fa\u7840\u63a5\u53e3\uff0c\u76ee\u524d\u53ea\u6709\u6587\u4ef6\u914d\u7f6e\u5b9e\u73b0\uff0c\u540e\u7eed\u4f1a\u6709nacos\u7b49\u914d\u7f6e\u4e2d\u5fc3\u7684\u5b9e\u73b0\\n-   core : \u6838\u5fc3\u6a21\u5757\u4e3b\u8981\u5c01\u88c5\u4e86TM\u3001RM\u548cTC\u901a\u8baf\u7528RPC\u76f8\u5173\u5185\u5bb9\\n-   dubbo \uff1adubbo\u6a21\u5757\u4e3b\u8981\u9002\u914ddubbo\u901a\u8baf\u6846\u67b6\uff0c\u4f7f\u7528dubbo\u7684filter\u673a\u5236\u6765\u4f20\u7edf\u5168\u5c40\u4e8b\u52a1\u7684\u4fe1\u606f\u5230\u5206\u652f\\n-   examples \uff1a\u7b80\u5355\u7684\u6f14\u793a\u5b9e\u4f8b\u6a21\u5757\uff0c\u7b49\u4e0b\u4ece\u8fd9\u4e2a\u6a21\u5757\u5165\u624b\u63a2\u7d22\\n-   rm-datasource :\u8d44\u6e90\u7ba1\u7406\u6a21\u5757\uff0c\u6bd4\u8f83\u6838\u5fc3\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u4e2a\u6a21\u5757\u547d\u540d\u4e3acore\u8981\u66f4\u5408\u7406\u4e00\u70b9\u3002\u4ee3\u7406\u4e86JDBC\u7684\u4e00\u4e9b\u7c7b\uff0c\u7528\u6765\u89e3\u6790sql\u751f\u6210\u56de\u6eda\u65e5\u5fd7\u3001\u534f\u8c03\u7ba1\u7406\u672c\u5730\u4e8b\u52a1\\n-   server : TC\u7ec4\u4ef6\u6240\u5728\uff0c\u4e3b\u8981\u534f\u8c03\u7ba1\u7406\u5168\u5c40\u4e8b\u52a1\uff0c\u8d1f\u8d23\u5168\u5c40\u4e8b\u52a1\u7684\u63d0\u4ea4\u6216\u8005\u56de\u6eda\uff0c\u540c\u65f6\u7ba1\u7406\u7ef4\u62a4\u5168\u5c40\u9501\u3002\\n-   spring \uff1a\u548cspring\u96c6\u6210\u7684\u6a21\u5757\uff0c\u4e3b\u8981\u662faop\u903b\u8f91\uff0c\u662f\u6574\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u5165\u53e3\uff0c\u7814\u7a76fescar\u7684\u7a81\u7834\u53e3\\n-   tm : \u5168\u5c40\u4e8b\u52a1\u4e8b\u52a1\u7ba1\u7406\u6a21\u5757\uff0c\u7ba1\u7406\u5168\u5c40\u4e8b\u52a1\u7684\u8fb9\u754c\uff0c\u5168\u5c40\u4e8b\u52a1\u5f00\u542f\u56de\u6eda\u70b9\u90fd\u5728\u8fd9\u4e2a\u6a21\u5757\u63a7\u5236\\n\\n# \u901a\u8fc7\u3010examples\u3011\u6a21\u5757\u7684\u5b9e\u4f8b\u770b\u4e0b\u6548\u679c\\n\\n\u7b2c\u4e00\u6b65\u3001\u5148\u542f\u52a8TC\u4e5f\u5c31\u662f\u3010Server\u3011\u6a21\u5757\uff0cmain\u65b9\u6cd5\u76f4\u63a5\u542f\u52a8\u5c31\u597d\uff0c\u9ed8\u8ba4\u670d\u52a1\u7aef\u53e38091\\n\\n\u7b2c\u4e8c\u6b65\u3001\u56de\u5230examples\u6a21\u5757\uff0c\u5c06\u8ba2\u5355\uff0c\u4e1a\u52a1\uff0c\u8d26\u6237\u3001\u4ed3\u5e93\u56db\u4e2a\u670d\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u597d\uff0c\u4e3b\u8981\u662fmysql\u6570\u636e\u6e90\u548czookeeper\u8fde\u63a5\u5730\u5740\uff0c\u8fd9\u91cc\u8981\u6ce8\u610f\u4e0b\uff0c\u9ed8\u8ba4dubbo\u7684zk\u6ce8\u518c\u4e2d\u5fc3\u4f9d\u8d56\u6ca1\u6709\uff0c\u542f\u52a8\u7684\u65f6\u5019\u56de\u629b\u627e\u4e0d\u5230class\u7684\u5f02\u5e38\uff0c\u9700\u8981\u6dfb\u52a0\u5982\u4e0b\u7684\u4f9d\u8d56\uff1a\\n\\n```xml\\n<dependency>\\n    <groupId>com.101tec</groupId>\\n    <artifactId>zkclient</artifactId>\\n    <version>0.10</version>\\n    <exclusions>\\n        <exclusion>\\n            <artifactId>slf4j-log4j12</artifactId>\\n            <groupId>org.slf4j</groupId>\\n        </exclusion>\\n    </exclusions>\\n</dependency>\\n```\\n\u7b2c\u4e09\u6b65\u3001\u5728BusinessServiceImpl\u4e2d\u7684\u6a21\u62df\u629b\u5f02\u5e38\u7684\u5730\u65b9\u6253\u4e2a\u65ad\u70b9\uff0c\u4f9d\u6b21\u542f\u52a8OrderServiceImpl\u3001StorageServiceImpl\u3001AccountServiceImpl\u3001BusinessServiceImpl\u56db\u4e2a\u670d\u52a1\u3001\u7b49\u8fdb\u65ad\u70b9\u540e\uff0c\u67e5\u770b\u6570\u636e\u5e93account\\\\_tbl\u8868\uff0c\u91d1\u989d\u5df2\u51cf\u53bb400\u5143\uff0c\u53d8\u6210\u4e86599\u5143\u3002\u7136\u540e\u653e\u5f00\u65ad\u70b9\u3001BusinessServiceImpl\u6a21\u5757\u6a21\u62df\u7684\u5f02\u5e38\u89e6\u53d1\uff0c\u5168\u5c40\u4e8b\u52a1\u56de\u6eda\uff0caccount\\\\_tbl\u8868\u7684\u91d1\u989d\u5c31\u53c8\u56de\u6eda\u5230999\u5143\u4e86\\n\\n\u5982\u4e0a\uff0c\u6211\u4eec\u5df2\u7ecf\u4f53\u9a8c\u5230fescar\u4e8b\u52a1\u7684\u63a7\u5236\u80fd\u529b\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u5177\u4f53\u770b\u4e0b\u5b83\u662f\u600e\u4e48\u63a7\u5236\u7684\u3002\\n\\n# fescar\u4e8b\u52a1\u8fc7\u7a0b\u5206\u6790\\n\\n## \u9996\u5148\u5206\u6790\u914d\u7f6e\u6587\u4ef6\\n\\n\u8fd9\u4e2a\u662f\u4e00\u4e2a\u94c1\u5f8b\uff0c\u4efb\u4f55\u4e00\u4e2a\u6280\u672f\u6216\u6846\u67b6\u8981\u96c6\u6210\uff0c\u914d\u7f6e\u6587\u4ef6\u80af\u5b9a\u662f\u4e00\u4e2a\u7a81\u7834\u53e3\u3002\u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u4e86\u89e3\u5230\uff0c\u5b9e\u4f8b\u6a21\u5757\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u4e86\u4e00\u4e2a\u5168\u5c40\u4e8b\u52a1\u626b\u63cf\u5668\u5b9e\u4f8b\uff0c\u5982\uff1a\\n\\n```xml\\n<bean class=\\"com.alibaba.fescar.spring.annotation.GlobalTransactionScanner\\">\\n    <constructor-arg value=\\"dubbo-demo-app\\"/>\\n    <constructor-arg value=\\"my\\\\_test\\\\_tx_group\\"/>\\n</bean>\\n```\\n\u8fd9\u4e2a\u5b9e\u4f8b\u5728\u9879\u76ee\u542f\u52a8\u65f6\u4f1a\u626b\u63cf\u6240\u6709\u5b9e\u4f8b\uff0c\u5177\u4f53\u5b9e\u73b0\u89c1\u3010spring\u3011\u6a21\u5757\u3002\u5e76\u5c06\u6807\u6ce8\u4e86@GlobalTransactional\u6ce8\u89e3\u7684\u65b9\u6cd5\u7ec7\u5165GlobalTransactionalInterceptor\u7684invoke\u65b9\u6cd5\u903b\u8f91\u3002\u540c\u65f6\u5e94\u7528\u542f\u52a8\u65f6\uff0c\u4f1a\u521d\u59cb\u5316TM\uff08TmRpcClient\uff09\u548cRM\uff08RmRpcClient\uff09\u7684\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u670d\u52a1\u5df2\u7ecf\u548cTC\u4e8b\u52a1\u63a7\u5236\u4e2d\u5fc3\u52fe\u642d\u4e0a\u4e86\u3002\u5728\u5f80\u4e0b\u770b\u5c31\u6d89\u53ca\u5230TM\u6a21\u5757\u7684\u4e8b\u52a1\u6a21\u677f\u7c7bTransactionalTemplate\u3002\\n\\n## \u3010TM\u3011\u6a21\u5757\u542f\u52a8\u5168\u5c40\u4e8b\u52a1\\n\\n\u5168\u5c40\u4e8b\u52a1\u7684\u5f00\u542f\uff0c\u63d0\u4ea4\u3001\u56de\u6eda\u90fd\u88ab\u5c01\u88c5\u5728TransactionalTemplate\u4e2d\u5b8c\u6210\u4e86\uff0c\u4ee3\u7801\u5982\uff1a\\n\\n```java\\n\\npublic Object execute(TransactionalExecutor business) throws TransactionalExecutor.ExecutionException {\\n    // 1. get or create a transaction\\n    GlobalTransaction tx = GlobalTransactionContext.getCurrentOrCreate();\\n    // 2. begin transaction\\n    try {\\n        tx.begin(business.timeout(), business.name());\\n    } catch (TransactionException txe) {\\n        throw new TransactionalExecutor.ExecutionException(tx, txe,\\n            TransactionalExecutor.Code.BeginFailure);\\n    }\\n    Object rs = null;\\n    try {\\n        // Do Your Business\\n        rs = business.execute();\\n    } catch (Throwable ex) {\\n        // 3. any business exception, rollback.\\n        try {\\n            tx.rollback();\\n            // 3.1 Successfully rolled back\\n            throw new TransactionalExecutor.ExecutionException(tx, TransactionalExecutor.Code.RollbackDone, ex);\\n        } catch (TransactionException txe) {\\n            // 3.2 Failed to rollback\\n            throw new TransactionalExecutor.ExecutionException(tx, txe,\\n                TransactionalExecutor.Code.RollbackFailure, ex);\\n        }\\n    }\\n    // 4. everything is fine, commit.\\n    try {\\n        tx.commit();\\n    } catch (TransactionException txe) {\\n        // 4.1 Failed to commit\\n        throw new TransactionalExecutor.ExecutionException(tx, txe,\\n            TransactionalExecutor.Code.CommitFailure);\\n    }\\n    return rs;\\n}\\n```\\n\u66f4\u8be6\u7ec6\u7684\u5b9e\u73b0\u5728\u3010TM\u3011\u6a21\u5757\u4e2d\u88ab\u5206\u6210\u4e86\u4e24\u4e2aClass\u5b9e\u73b0\uff0c\u5982\u4e0b\uff1a\\n\\nDefaultGlobalTransaction \uff1a\u5168\u5c40\u4e8b\u52a1\u5177\u4f53\u7684\u5f00\u542f\uff0c\u63d0\u4ea4\u3001\u56de\u6eda\u52a8\u4f5c\\n\\nDefaultTransactionManager \uff1a\u8d1f\u8d23\u4f7f\u7528TmRpcClient\u5411TC\u63a7\u5236\u4e2d\u5fc3\u53d1\u9001\u6307\u4ee4\uff0c\u5982\u5f00\u542f\u5168\u5c40\u4e8b\u52a1\uff08GlobalBeginRequest\uff09\u3001\u63d0\u4ea4\uff08GlobalCommitRequest\uff09\u3001\u56de\u6eda\uff08GlobalRollbackRequest\uff09\u3001\u67e5\u8be2\u72b6\u6001\uff08GlobalStatusRequest\uff09\u7b49\u3002\\n\\n\u4ee5\u4e0a\u662fTM\u6a21\u5757\u6838\u5fc3\u5185\u5bb9\u70b9\uff0cTM\u6a21\u5757\u5b8c\u6210\u5168\u5c40\u4e8b\u52a1\u5f00\u542f\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u5f00\u59cb\u770b\u770b\u5168\u5c40\u4e8b\u52a1iD\uff0cxid\u662f\u5982\u4f55\u4f20\u9012\u3001RM\u7ec4\u4ef6\u662f\u5982\u4f55\u4ecb\u5165\u7684\\n\\n## \u3010dubbo\u3011\u5168\u5c40\u4e8b\u52a1xid\u7684\u4f20\u9012\\n\\n\u9996\u5148\u662fxid\u7684\u4f20\u9012\uff0c\u76ee\u524d\u5df2\u7ecf\u5b9e\u73b0\u4e86dubbo\u6846\u67b6\u5b9e\u73b0\u7684\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u7684\u4f20\u9012\uff0c\u5176\u4ed6\u7684\u50cfspring cloud\u548cmotan\u7b49\u7684\u60f3\u8981\u5b9e\u73b0\u4e5f\u5f88\u5bb9\u6613\uff0c\u901a\u8fc7\u4e00\u822cRPC\u901a\u8baf\u6846\u67b6\u90fd\u6709\u7684filter\u673a\u5236\uff0c\u5c06xid\u4ece\u5168\u5c40\u4e8b\u52a1\u7684\u53d1\u8d77\u8282\u70b9\u4f20\u9012\u5230\u670d\u52a1\u534f\u4ece\u8282\u70b9\uff0c\u4ece\u8282\u70b9\u63a5\u6536\u5230\u540e\u7ed1\u5b9a\u5230\u5f53\u524d\u7ebf\u7a0b\u4e0a\u7ebf\u6587\u73af\u5883\u4e2d\uff0c\u7528\u4e8e\u5728\u5206\u652f\u4e8b\u52a1\u6267\u884csql\u65f6\u5224\u65ad\u662f\u5426\u52a0\u5165\u5168\u5c40\u4e8b\u52a1\u3002fescar\u7684\u5b9e\u73b0\u89c1\u3010dubbo\u3011\u6a21\u5757\u5982\u4e0b\uff1a\\n\\n```java\\n@Activate(group = { Constants.PROVIDER, Constants.CONSUMER }, order = 100)\\npublic class TransactionPropagationFilter implements Filter {\\n\\n    private static final Logger LOGGER = LoggerFactory.getLogger(TransactionPropagationFilter.class);\\n\\n    @Override\\n    public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcException {\\n        String xid = RootContext.getXID();\\n        String rpcXid = RpcContext.getContext().getAttachment(RootContext.KEY_XID);\\n        if (LOGGER.isDebugEnabled()) {\\n            LOGGER.debug(\\"xid in RootContext\\\\[\\" + xid + \\"\\\\] xid in RpcContext\\\\[\\" + rpcXid + \\"\\\\]\\");\\n        }\\n        boolean bind = false;\\n        if (xid != null) {\\n            RpcContext.getContext().setAttachment(RootContext.KEY_XID, xid);\\n        } else {\\n            if (rpcXid != null) {\\n                RootContext.bind(rpcXid);\\n                bind = true;\\n                if (LOGGER.isDebugEnabled()) {\\n                    LOGGER.debug(\\"bind\\\\[\\" + rpcXid + \\"\\\\] to RootContext\\");\\n                }\\n            }\\n        }\\n        try {\\n            return invoker.invoke(invocation);\\n\\n        } finally {\\n            if (bind) {\\n                String unbindXid = RootContext.unbind();\\n                if (LOGGER.isDebugEnabled()) {\\n                    LOGGER.debug(\\"unbind\\\\[\\" + unbindXid + \\"\\\\] from RootContext\\");\\n                }\\n                if (!rpcXid.equalsIgnoreCase(unbindXid)) {\\n                    LOGGER.warn(\\"xid in change during RPC from \\" + rpcXid + \\" to \\" + unbindXid);\\n                    if (unbindXid != null) {\\n                        RootContext.bind(unbindXid);\\n                        LOGGER.warn(\\"bind \\\\[\\" + unbindXid + \\"\\\\] back to RootContext\\");\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n```\\n\u4e0a\u9762\u4ee3\u7801rpcXid\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5c31\u52a0\u5165\u5230\u4e86RootContext\u7684ContextCore\u4e2d\uff0c\u8fd9\u91cc\u7a0d\u5fae\u6df1\u5165\u8bb2\u4e0b\u3002ContextCore\u662f\u4e00\u4e2a\u53ef\u6269\u5c55\u5b9e\u73b0\u7684\u63a5\u53e3\uff0c\u76ee\u524d\u9ed8\u8ba4\u7684\u5b9e\u73b0\u662fThreadLocalContextCore\uff0c\u57fa\u4e8eThreadLocal\u6765\u4fdd\u5b58\u7ef4\u62a4\u5f53\u524d\u7684xid\u3002\u8fd9\u91ccfescar\u63d0\u4f9b\u4e86\u53ef\u6269\u5c55\u7684\u673a\u5236\uff0c\u5b9e\u73b0\u5728\u3010common\u3011\u6a21\u5757\u4e2d\uff0c\u901a\u8fc7\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u7c7b\u52a0\u8f7d\u5668EnhancedServiceLoader\u52a0\u8f7d\u9700\u8981\u6269\u5c55\u7684\u670d\u52a1\u7c7b\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u5728\u6269\u5c55\u7c7b\u52a0\u4e0a@LoadLevel\u6ce8\u89e3\u3002\u6807\u8bb0order\u5c5e\u6027\u58f0\u660e\u9ad8\u4f18\u5148\u7ea7\u522b\uff0c\u5c31\u53ef\u4ee5\u8fbe\u5230\u6269\u5c55\u5b9e\u73b0\u7684\u76ee\u7684\u3002\\n\\n## \u3010RM\u3011\u6a21\u5757\u672c\u5730\u8d44\u6e90\u7ba1\u7406\u7684\u4ecb\u5165\\n\\nfescar\u9488\u5bf9\u672c\u5730\u4e8b\u52a1\u76f8\u5173\u7684\u63a5\u53e3\uff0c\u901a\u8fc7\u4ee3\u7406\u673a\u5236\u90fd\u5b9e\u73b0\u4e86\u4e00\u904d\u4ee3\u7406\u7c7b\uff0c\u5982\u6570\u636e\u6e90\uff08DataSourceProxy\uff09\u3001ConnectionProxy\u3001StatementProxy\u7b49\u3002\u8fd9\u4e2a\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u4e5f\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u4f7f\u7528fescar\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u4e00\u5b9a\u8981\u914d\u7f6efescar\u63d0\u4f9b\u7684\u4ee3\u7406\u6570\u636e\u6e90\u3002\u5982\uff1a\\n\\n![](/img/blog/af317255c71a5c1bf46f7140387acf365f8.jpg)\\n\\n\u914d\u7f6e\u597d\u4ee3\u7406\u6570\u636e\u6e90\u540e\uff0c\u4eceDataSourceProxy\u51fa\u53d1\uff0c\u672c\u5730\u9488\u5bf9\u6570\u636e\u5e93\u7684\u6240\u6709\u64cd\u4f5c\u8fc7\u7a0b\u6211\u4eec\u5c31\u53ef\u4ee5\u968f\u610f\u63a7\u5236\u4e86\u3002\u4ece\u4e0a\u9762xid\u4f20\u9012\uff0c\u5df2\u7ecf\u77e5\u9053\u4e86xid\u88ab\u4fdd\u5b58\u5728RootContext\u4e2d\u4e86\uff0c\u90a3\u4e48\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5c31\u975e\u5e38\u6e05\u695a\u4e86\uff1a\\n\\n\u9996\u5148\u770bStatementProxy\u7684\u4e00\u6bb5\u4ee3\u7801\\n\\n![](/img/blog/17896deea47b9aee518812b039c39101d8f.jpg)\\n\\n\u5728\u770bExecuteTemplate\u4e2d\u7684\u4ee3\u7801\\n\\n![](/img/blog/04488a2745a5d564498462ed64c506174d2.jpg)\\n\\n\u548c\u3010TM\u3011\u6a21\u5757\u4e2d\u7684\u4e8b\u52a1\u7ba1\u7406\u6a21\u677f\u7c7bTransactionlTemplate\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u975e\u5e38\u5173\u952e\u7684\u903b\u8f91\u4ee3\u7406\u4e5f\u88ab\u5c01\u88c5\u5728\u4e86ExecuteTemplate\u6a21\u677f\u7c7b\u4e2d\u3002\u56e0\u91cd\u5199\u4e86Statement\u6709\u4e86StatementProxy\u5b9e\u73b0\uff0c\u5728\u6267\u884c\u539fJDBC\u7684executeUpdate\u65b9\u6cd5\u65f6\uff0c\u4f1a\u8c03\u7528\u5230ExecuteTemplate\u7684execute\u903b\u8f91\u3002\u5728sql\u771f\u6b63\u6267\u884c\u524d\uff0c\u4f1a\u5224\u65adRootCOntext\u5f53\u524d\u4e0a\u4e0b\u6587\u4e2d\u662f\u5426\u5305\u542bxid\uff0c\u4e5f\u5c31\u662f\u5224\u65ad\u5f53\u524d\u662f\u5426\u662f\u5168\u5c40\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002\u5982\u679c\u4e0d\u662f\uff0c\u5c31\u76f4\u63a5\u4f7f\u7528\u672c\u5730\u4e8b\u52a1\uff0c\u5982\u679c\u662f\uff0c\u8fd9\u91ccRM\u5c31\u4f1a\u589e\u52a0\u4e00\u4e9b\u5206\u5e03\u5f0f\u4e8b\u52a1\u76f8\u5173\u7684\u903b\u8f91\u4e86\u3002\u8fd9\u91cc\u6839\u636esql\u7684\u4e0d\u540c\u7684\u7c7b\u578b\uff0cfescar\u5c01\u88c5\u4e86\u4e94\u4e2a\u4e0d\u540c\u7684\u6267\u884c\u5668\u6765\u5904\u7406\uff0c\u5206\u522b\u662fUpdateExecutor\u3001DeleteExecutor\u3001InsertExecutor\u3001SelectForUpdateExecutor\u3001PlainExecutor\uff0c\u7ed3\u6784\u5982\u4e0b\u56fe\uff1a\\n\\n![](/img/blog/bb9a2f07054f19bc21adc332671de4f7b75.jpg)\\n\\n### PlainExecutor\uff1a\\n\\n\u539f\u751f\u7684JDBC\u63a5\u53e3\u5b9e\u73b0\uff0c\u672a\u505a\u4efb\u4f55\u5904\u7406\uff0c\u63d0\u4f9b\u7ed9\u5168\u5c40\u4e8b\u52a1\u4e2d\u7684\u666e\u901a\u7684select\u67e5\u8be2\u4f7f\u7528\\n\\n### UpdateExecutor\u3001DeleteExecutor\u3001InsertExecutor\uff1a\\n\\n\u4e09\u4e2aDML\u589e\u5220\u6539\u6267\u884c\u5668\u5b9e\u73b0\uff0c\u4e3b\u8981\u5728sql\u6267\u884c\u7684\u524d\u540e\u5bf9sql\u8bed\u53e5\u8fdb\u884c\u4e86\u89e3\u6790\uff0c\u5b9e\u73b0\u4e86\u5982\u4e0b\u4e24\u4e2a\u62bd\u8c61\u63a5\u53e3\u65b9\u6cd5\uff1a\\n\\n```java\\nprotected abstract TableRecords beforeImage() throws SQLException;\\n\\nprotected abstract TableRecords afterImage(TableRecords beforeImage) throws SQLException;\\n```\\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u901a\u8fc7\u89e3\u6790sql\u751f\u6210\u4e86\u63d0\u4f9b\u56de\u6eda\u64cd\u4f5c\u7684undo_log\u65e5\u5fd7\uff0c\u65e5\u5fd7\u76ee\u524d\u662f\u4fdd\u5b58\u5728msyql\u4e2d\u7684\uff0c\u548c\u4e1a\u52a1sql\u64cd\u4f5c\u5171\u7528\u540c\u4e00\u4e2a\u4e8b\u52a1\u3002\u8868\u7684\u7ed3\u6784\u5982\u4e0b\uff1a\\n\\n![](/img/blog/fd5c423815d3b84bdbc70d7efeb9cd16757.jpg)\\n\\nrollback\\\\_info\u4fdd\u5b58\u7684undo\\\\_log\u8be6\u7ec6\u4fe1\u606f\uff0c\u662flongblob\u7c7b\u578b\u7684\uff0c\u7ed3\u6784\u5982\u4e0b\uff1a\\n\\n```json\\n{\\n\xa0\xa0\xa0\xa0\\"branchId\\":3958194,\\n\xa0\xa0\xa0\xa0\\"sqlUndoLogs\\":[\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0{\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"afterImage\\":{\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"rows\\":[\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0{\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"fields\\":[\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0{\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"keyType\\":\\"PrimaryKey\\",\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"name\\":\\"ID\\",\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"type\\":4,\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"value\\":10\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0},\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0{\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"keyType\\":\\"NULL\\",\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"name\\":\\"COUNT\\",\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"type\\":4,\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"value\\":98\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0}\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0]\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0}\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0],\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"tableName\\":\\"storage_tbl\\"\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0},\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"beforeImage\\":{\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"rows\\":[\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0{\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"fields\\":[\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0{\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"keyType\\":\\"PrimaryKey\\",\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"name\\":\\"ID\\",\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"type\\":4,\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"value\\":10\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0},\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0{\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"keyType\\":\\"NULL\\",\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"name\\":\\"COUNT\\",\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"type\\":4,\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"value\\":100\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0}\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0]\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0}\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0],\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"tableName\\":\\"storage_tbl\\"\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0},\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"sqlType\\":\\"UPDATE\\",\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\\"tableName\\":\\"storage_tbl\\"\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0}\\n\xa0\xa0\xa0\xa0],\\n\xa0\xa0\xa0\xa0\\"xid\\":\\"192.168.7.77:8091:3958193\\"\\n}\\n\\n\\n```\\n\\n\u8fd9\u91cc\u8d34\u7684\u662f\u4e00\u4e2aupdate\u7684\u64cd\u4f5c\uff0cundo\\\\_log\u8bb0\u5f55\u7684\u975e\u5e38\u7684\u8be6\u7ec6\uff0c\u901a\u8fc7\u5168\u5c40\u4e8b\u52a1xid\u5173\u8054branchid\uff0c\u8bb0\u5f55\u6570\u636e\u64cd\u4f5c\u7684\u8868\u540d\uff0c\u64cd\u4f5c\u5b57\u6bb5\u540d\uff0c\u4ee5\u53casql\u6267\u884c\u524d\u540e\u7684\u8bb0\u5f55\u6570\uff0c\u5982\u8fd9\u4e2a\u8bb0\u5f55\uff0c\u8868\u540d=storage\\\\_tbl,sql\u6267\u884c\u524dID=10\uff0ccount=100\uff0csql\u6267\u884c\u540eid=10\uff0ccount=98\u3002\u5982\u679c\u6574\u4e2a\u5168\u5c40\u4e8b\u52a1\u5931\u8d25\uff0c\u9700\u8981\u56de\u6eda\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u751f\u6210\uff1a\\n\\n```sql\\nupdate storage_tbl set count = 100 where id = 10;\\n```\\n\u8fd9\u6837\u7684\u56de\u6edasql\u8bed\u53e5\u6267\u884c\u4e86\u3002\\n\\n### SelectForUpdateExecutor\uff1a\\n\\nfescar\u7684AT\u6a21\u5f0f\u5728\u672c\u5730\u4e8b\u52a1\u4e4b\u4e0a\u9ed8\u8ba4\u652f\u6301\u8bfb\u672a\u63d0\u4ea4\u7684\u9694\u79bb\u7ea7\u522b\uff0c\u4f46\u662f\u901a\u8fc7SelectForUpdateExecutor\u6267\u884c\u5668\uff0c\u53ef\u4ee5\u652f\u6301\u8bfb\u5df2\u63d0\u4ea4\u7684\u9694\u79bb\u7ea7\u522b\u3002\u4ee3\u7801\u5982\uff1a\\n\\n```java\\n@Override\\npublic Object doExecute(Object... args) throws Throwable {\\n    SQLSelectRecognizer recognizer = (SQLSelectRecognizer) sqlRecognizer;\\n\\n    Connection conn = statementProxy.getConnection();\\n    ResultSet rs = null;\\n    Savepoint sp = null;\\n    LockRetryController lockRetryController = new LockRetryController();\\n    boolean originalAutoCommit = conn.getAutoCommit();\\n\\n    StringBuffer selectSQLAppender = new StringBuffer(\\"SELECT \\");\\n    selectSQLAppender.append(getTableMeta().getPkName());\\n    selectSQLAppender.append(\\" FROM \\" + getTableMeta().getTableName());\\n    String whereCondition = null;\\n    ArrayList<Object> paramAppender = new ArrayList<>();\\n    if (statementProxy instanceof ParametersHolder) {\\n        whereCondition = recognizer.getWhereCondition((ParametersHolder) statementProxy, paramAppender);\\n    } else {\\n        whereCondition = recognizer.getWhereCondition();\\n    }\\n    if (!StringUtils.isEmpty(whereCondition)) {\\n        selectSQLAppender.append(\\" WHERE \\" + whereCondition);\\n    }\\n    selectSQLAppender.append(\\" FOR UPDATE\\");\\n    String selectPKSQL = selectSQLAppender.toString();\\n\\n    try {\\n        if (originalAutoCommit) {\\n            conn.setAutoCommit(false);\\n        }\\n        sp = conn.setSavepoint();\\n        rs = statementCallback.execute(statementProxy.getTargetStatement(), args);\\n\\n        while (true) {\\n            // Try to get global lock of those rows selected\\n            Statement stPK = null;\\n            PreparedStatement pstPK = null;\\n            ResultSet rsPK = null;\\n            try {\\n                if (paramAppender.isEmpty()) {\\n                    stPK = statementProxy.getConnection().createStatement();\\n                    rsPK = stPK.executeQuery(selectPKSQL);\\n                } else {\\n                    pstPK = statementProxy.getConnection().prepareStatement(selectPKSQL);\\n                    for (int i = 0; i < paramAppender.size(); i++) {\\n                        pstPK.setObject(i + 1, paramAppender.get(i));\\n                    }\\n                    rsPK = pstPK.executeQuery();\\n                }\\n\\n                TableRecords selectPKRows = TableRecords.buildRecords(getTableMeta(), rsPK);\\n                statementProxy.getConnectionProxy().checkLock(selectPKRows);\\n                break;\\n\\n            } catch (LockConflictException lce) {\\n                conn.rollback(sp);\\n                lockRetryController.sleep(lce);\\n\\n            } finally {\\n                if (rsPK != null) {\\n                    rsPK.close();\\n                }\\n                if (stPK != null) {\\n                    stPK.close();\\n                }\\n                if (pstPK != null) {\\n                    pstPK.close();\\n                }\\n            }\\n        }\\n\\n    } finally {\\n        if (sp != null) {\\n            conn.releaseSavepoint(sp);\\n        }\\n        if (originalAutoCommit) {\\n            conn.setAutoCommit(true);\\n        }\\n    }\\n    return rs;\\n}\\n```\\n\u5173\u952e\u4ee3\u7801\u89c1\uff1a\\n\\n```java\\nTableRecords selectPKRows = TableRecords.buildRecords(getTableMeta(), rsPK);\\nstatementProxy.getConnectionProxy().checkLock(selectPKRows);\\n```\\n\u901a\u8fc7selectPKRows\u8868\u64cd\u4f5c\u8bb0\u5f55\u62ff\u5230lockKeys\uff0c\u7136\u540e\u5230TC\u63a7\u5236\u5668\u7aef\u67e5\u8be2\u662f\u5426\u88ab\u5168\u5c40\u9501\u5b9a\u4e86\uff0c\u5982\u679c\u88ab\u9501\u5b9a\u4e86\uff0c\u5c31\u91cd\u65b0\u5c1d\u8bd5\uff0c\u76f4\u5230\u9501\u91ca\u653e\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u3002\\n\\n## \u5206\u652f\u4e8b\u52a1\u7684\u6ce8\u518c\u548c\u4e0a\u62a5\\n\\n\u5728\u672c\u5730\u4e8b\u52a1\u63d0\u4ea4\u524d\uff0cfescar\u4f1a\u6ce8\u518c\u548c\u4e0a\u62a5\u5206\u652f\u4e8b\u52a1\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u89c1ConnectionProxy\u7c7b\u7684commit\u90e8\u5206\u4ee3\u7801\uff1a\\n\\n```java\\n@Override\\npublic void commit() throws SQLException {\\n    if (context.inGlobalTransaction()) {\\n        try {\\n            register();\\n        } catch (TransactionException e) {\\n            recognizeLockKeyConflictException(e);\\n        }\\n\\n        try {\\n            if (context.hasUndoLog()) { \\n                UndoLogManager.flushUndoLogs(this);\\n            }\\n            targetConnection.commit();\\n        } catch (Throwable ex) {\\n            report(false);\\n            if (ex instanceof SQLException) {\\n                throw (SQLException) ex;\\n            } else {\\n                throw new SQLException(ex);\\n            }\\n        }\\n        report(true);\\n        context.reset();\\n       \\n    } else {\\n        targetConnection.commit();\\n    }\\n}\\n```\\n\u4ece\u8fd9\u6bb5\u4ee3\u7801\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u9996\u5148\u662f\u5224\u65ad\u662f\u4e86\u662f\u5426\u662f\u5168\u5c40\u4e8b\u52a1\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5c31\u76f4\u63a5\u63d0\u4ea4\u4e86\uff0c\u5982\u679c\u662f\uff0c\u5c31\u5148\u5411TC\u63a7\u5236\u5668\u6ce8\u518c\u5206\u652f\u4e8b\u52a1\uff0c\u4e3a\u4e86\u5199\u9694\u79bb\uff0c\u5728TC\u7aef\u4f1a\u6d89\u53ca\u5230\u5168\u5c40\u9501\u7684\u83b7\u53d6\u3002\u7136\u540e\u4fdd\u5b58\u4e86\u7528\u4e8e\u56de\u6eda\u64cd\u4f5c\u7684undo_log\u65e5\u5fd7\uff0c\u7ee7\u800c\u771f\u6b63\u63d0\u4ea4\u672c\u5730\u4e8b\u52a1\uff0c\u6700\u540e\u5411TC\u63a7\u5236\u5668\u4e0a\u62a5\u4e8b\u52a1\u72b6\u6001\u3002\u6b64\u65f6\uff0c\u9636\u6bb5\u4e00\u7684\u672c\u5730\u4e8b\u52a1\u5df2\u5b8c\u6210\u4e86\u3002\\n\\n## \u3010server\u3011\u6a21\u5757\u534f\u8c03\u5168\u5c40\\n\\n\u5173\u4e8eserver\u6a21\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u805a\u7126\u5728DefaultCoordinator\u8fd9\u4e2a\u7c7b\uff0c\u8fd9\u4e2a\u662fAbstractTCInboundHandler\u63a7\u5236\u5904\u7406\u5668\u9ed8\u8ba4\u5b9e\u73b0\u3002\u4e3b\u8981\u5b9e\u73b0\u4e86\u5168\u5c40\u4e8b\u52a1\u5f00\u542f\uff0c\u63d0\u4ea4\uff0c\u56de\u6eda\uff0c\u72b6\u6001\u67e5\u8be2\uff0c\u5206\u652f\u4e8b\u52a1\u6ce8\u518c\uff0c\u4e0a\u62a5\uff0c\u9501\u68c0\u67e5\u7b49\u63a5\u53e3\uff0c\u5982\uff1a\\n\\n![](/img/blog/3da6fd82debb9470eb4a5feb1eecac6d6a2.jpg)\\n\\n\u56de\u5230\u4e00\u5f00\u59cb\u7684TransactionlTemplate\uff0c\u5982\u679c\u6574\u4e2a\u5206\u5e03\u5f0f\u4e8b\u52a1\u5931\u8d25\u9700\u8981\u56de\u6eda\u4e86\uff0c\u9996\u5148\u662fTM\u5411TC\u53d1\u8d77\u56de\u6eda\u7684\u6307\u4ee4\uff0c\u7136\u540eTC\u63a5\u6536\u5230\u540e\uff0c\u89e3\u6790\u8bf7\u6c42\u540e\u4f1a\u88ab\u8def\u7531\u5230\u9ed8\u8ba4\u63a7\u5236\u5668\u7c7b\u7684doGlobalRollback\u65b9\u6cd5\u5185\uff0c\u6700\u7ec8\u5728TC\u63a7\u5236\u5668\u7aef\u6267\u884c\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\\n\\n```java\\n@Override\\npublic void doGlobalRollback(GlobalSession globalSession, boolean retrying) throws TransactionException {\\n    for (BranchSession branchSession : globalSession.getReverseSortedBranches()) {\\n        BranchStatus currentBranchStatus = branchSession.getStatus();\\n        if (currentBranchStatus == BranchStatus.PhaseOne_Failed) {\\n            continue;\\n        }\\n        try {\\n            BranchStatus branchStatus = resourceManagerInbound.branchRollback(XID.generateXID(branchSession.getTransactionId()), branchSession.getBranchId(),\\n                    branchSession.getResourceId(), branchSession.getApplicationData());\\n\\n            switch (branchStatus) {\\n                case PhaseTwo_Rollbacked:\\n                    globalSession.removeBranch(branchSession);\\n                    LOGGER.error(\\"Successfully rolled back branch \\" + branchSession);\\n                    continue;\\n                case PhaseTwo\\\\_RollbackFailed\\\\_Unretryable:\\n                    GlobalStatus currentStatus = globalSession.getStatus();\\n                    if (currentStatus.name().startsWith(\\"Timeout\\")) {\\n                        globalSession.changeStatus(GlobalStatus.TimeoutRollbackFailed);\\n                    } else {\\n                        globalSession.changeStatus(GlobalStatus.RollbackFailed);\\n                    }\\n                    globalSession.end();\\n                    LOGGER.error(\\"Failed to rollback global\\\\[\\" + globalSession.getTransactionId() + \\"\\\\] since branch\\\\[\\" + branchSession.getBranchId() + \\"\\\\] rollback failed\\");\\n                    return;\\n                default:\\n                    LOGGER.info(\\"Failed to rollback branch \\" + branchSession);\\n                    if (!retrying) {\\n                        queueToRetryRollback(globalSession);\\n                    }\\n                    return;\\n\\n            }\\n        } catch (Exception ex) {\\n            LOGGER.info(\\"Exception rollbacking branch \\" + branchSession, ex);\\n            if (!retrying) {\\n                queueToRetryRollback(globalSession);\\n                if (ex instanceof TransactionException) {\\n                    throw (TransactionException) ex;\\n                } else {\\n                    throw new TransactionException(ex);\\n                }\\n            }\\n\\n        }\\n\\n    }\\n    GlobalStatus currentStatus = globalSession.getStatus();\\n    if (currentStatus.name().startsWith(\\"Timeout\\")) {\\n        globalSession.changeStatus(GlobalStatus.TimeoutRollbacked);\\n    } else {\\n        globalSession.changeStatus(GlobalStatus.Rollbacked);\\n    }\\n    globalSession.end();\\n}\\n```\\n\u5982\u4e0a\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\uff0c\u56de\u6eda\u65f6\u4ece\u5168\u5c40\u4e8b\u52a1\u4f1a\u8bdd\u4e2d\u8fed\u4ee3\u6bcf\u4e2a\u5206\u652f\u4e8b\u52a1\uff0c\u7136\u540e\u901a\u77e5\u6bcf\u4e2a\u5206\u652f\u4e8b\u52a1\u56de\u6eda\u3002\u5206\u652f\u670d\u52a1\u63a5\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u9996\u5148\u4f1a\u88ab\u8def\u7531\u5230RMHandlerAT\u4e2d\u7684doBranchRollback\u65b9\u6cd5\uff0c\u7ee7\u800c\u8c03\u7528\u4e86RM\u4e2d\u7684branchRollback\u65b9\u6cd5\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\n\\n```java\\n@Override\\npublic BranchStatus branchRollback(String xid, long branchId, String resourceId, String applicationData) throws TransactionException {\\n    DataSourceProxy dataSourceProxy = get(resourceId);\\n    if (dataSourceProxy == null) {\\n        throw new ShouldNeverHappenException();\\n    }\\n    try {\\n        UndoLogManager.undo(dataSourceProxy, xid, branchId);\\n    } catch (TransactionException te) {\\n        if (te.getCode() == TransactionExceptionCode.BranchRollbackFailed_Unretriable) {\\n            return BranchStatus.PhaseTwo\\\\_RollbackFailed\\\\_Unretryable;\\n        } else {\\n            return BranchStatus.PhaseTwo\\\\_RollbackFailed\\\\_Retryable;\\n        }\\n    }\\n    return BranchStatus.PhaseTwo_Rollbacked;\\n}\\n```\\nRM\u5206\u652f\u4e8b\u52a1\u7aef\u6700\u540e\u6267\u884c\u7684\u662fUndoLogManager\u7684undo\u65b9\u6cd5\uff0c\u901a\u8fc7xid\u548cbranchid\u4ece\u6570\u636e\u5e93\u67e5\u8be2\u51fa\u56de\u6eda\u65e5\u5fd7\uff0c\u5b8c\u6210\u6570\u636e\u56de\u6eda\u64cd\u4f5c\uff0c\u6574\u4e2a\u8fc7\u7a0b\u90fd\u662f\u540c\u6b65\u5b8c\u6210\u7684\u3002\u5982\u679c\u5168\u5c40\u4e8b\u52a1\u662f\u6210\u529f\u7684\uff0cTC\u4e5f\u4f1a\u6709\u7c7b\u4f3c\u7684\u4e0a\u8ff0\u534f\u8c03\u8fc7\u7a0b\uff0c\u53ea\u4e0d\u8fc7\u662f\u5f02\u6b65\u7684\u5c06\u672c\u6b21\u5168\u5c40\u4e8b\u52a1\u76f8\u5173\u7684undo_log\u6e05\u9664\u4e86\u800c\u5df2\u3002\u81f3\u6b64\uff0c\u5c31\u5b8c\u6210\u4e862\u9636\u6bb5\u7684\u63d0\u4ea4\u6216\u56de\u6eda\uff0c\u4e5f\u5c31\u5b8c\u6210\u4e86\u5b8c\u6574\u7684\u5168\u5c40\u4e8b\u52a1\u4e8b\u52a1\u7684\u63a7\u5236\u3002\\n\\n# \u7ed3\u8bed\\n\\n\u5982\u679c\u4f60\u770b\u5230\u8fd9\u91cc\uff0c\u90a3\u4e48\u975e\u5e38\u611f\u8c22\u4f60\uff0c\u5728\u7e41\u5fd9\u5de5\u4f5c\u4e4b\u4f59\u8010\u5fc3\u7684\u82b1\u65f6\u95f4\u6765\u5b66\u4e60\u3002\u540c\u65f6\uff0c\u6211\u76f8\u4fe1\u82b1\u7684\u65f6\u95f4\u6ca1\u767d\u8d39\uff0c\u5b8c\u6574\u7684\u6d4f\u89c8\u7406\u89e3\u4f30\u8ba1\u5bf9fescar\u5b9e\u73b0\u7684\u5927\u81f4\u6d41\u7a0b\u4e86\u89e3\u7684\u5341\u4e4b\u516b\u4e5d\u4e86\u3002\u672c\u6587\u4ece\u6784\u601d\u7acb\u9898\u5230\u5b8c\u6210\u5927\u6982\u8017\u65f61\u4eba\u5929\u5de6\u53f3\uff0c\u535a\u4e3b\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5bf9fescar\u7684\u5b9e\u73b0\u4e5f\u6709\u4e86\u66f4\u52a0\u6df1\u5165\u7684\u4e86\u89e3\u3002\u7531\u4e8e\u7bc7\u5e45\u539f\u56e0\uff0c\u5e76\u6ca1\u6709\u9762\u9762\u4ff1\u5230\u7684\u5bf9\u6bcf\u4e2a\u5b9e\u73b0\u7684\u7ec6\u8282\u53bb\u6df1\u7a76\uff0c\u5982sql\u662f\u5982\u4f55\u89e3\u6790\u7684\u7b49\uff0c\u66f4\u591a\u7684\u662f\u5728fescar\u7684TXC\u6a21\u578b\u7684\u5b9e\u73b0\u8fc7\u7a0b\u7684\u5173\u952e\u70b9\u505a\u4e86\u8be6\u7ec6\u9610\u8ff0\u3002\u672c\u6587\u5df2\u6821\u5bf9\uff0c\u4f46\u7531\u4e8e\u4e2a\u4eba\u77e5\u8bc6\u6c34\u5e73\u53ca\u7cbe\u529b\u6709\u9650\uff0c\u6587\u4e2d\u4e0d\u514d\u51fa\u73b0\u9519\u8bef\u6216\u7406\u89e3\u4e0d\u5f53\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u6307\u6b63\u3002\\n\\n### \u4f5c\u8005\u7b80\u4ecb\uff1a\\n\\n\u9648\u51ef\u73b2\uff0c2016\u5e745\u6708\u52a0\u5165\u51ef\u4eac\u79d1\u6280\u3002\u66fe\u4efb\u804c\u9ad8\u7ea7\u7814\u53d1\u548c\u9879\u76ee\u7ecf\u7406\uff0c\u73b0\u4efb\u51ef\u4eac\u79d1\u6280\u7814\u53d1\u4e2d\u5fc3\u67b6\u6784&\u8fd0\u7ef4\u90e8\u8d1f\u8d23\u4eba\u3002pmp\u9879\u76ee\u7ba1\u7406\u8ba4\u8bc1\uff0c\u963f\u91cc\u4e91MVP\u3002\u70ed\u7231\u5f00\u6e90\uff0c\u5148\u540e\u5f00\u6e90\u8fc7\u591a\u4e2a\u70ed\u95e8\u9879\u76ee\u3002\u70ed\u7231\u5206\u4eab\u6280\u672f\u70b9\u6ef4\uff0c\u72ec\u7acb\u535a\u5ba2KL\u535a\u5ba2\uff08[http://www.kailing.pub](http://www.kailing.pub/)\uff09\u535a\u4e3b\u3002"},{"id":"/manual-transaction-mode","metadata":{"permalink":"/zh-cn/blog/manual-transaction-mode","source":"@site/i18n/zh-cn/docusaurus-plugin-content-blog/manual-transaction-mode.md","title":"MT \u6a21\u5f0f","description":"\u4ecb\u7ecd MT \u6a21\u5f0f","date":"2019-02-13T00:00:00.000Z","formattedDate":"2019\u5e742\u670813\u65e5","tags":[],"readingTime":1.605,"hasTruncateMarker":false,"authors":[{"name":"kmmshmily"}],"frontMatter":{"title":"MT \u6a21\u5f0f","keywords":["MT \u6a21\u5f0f"],"description":"\u4ecb\u7ecd MT \u6a21\u5f0f","author":"kmmshmily","date":"2019-02-13T00:00:00.000Z"},"prevItem":{"title":"Fescar\u5206\u5e03\u5f0f\u4e8b\u52a1\u539f\u7406\u89e3\u6790\u63a2\u79d8","permalink":"/zh-cn/blog/seata-analysis-simple"}},"content":"\u56de\u987e\u603b\u89c8\u4e2d\u7684\u63cf\u8ff0\uff1a\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u5168\u5c40\u4e8b\u52a1\uff0c\u6574\u4f53\u662f **\u4e24\u9636\u6bb5\u63d0\u4ea4** \u7684\u6a21\u578b\u3002\u5168\u5c40\u4e8b\u52a1\u662f\u7531\u82e5\u5e72\u5206\u652f\u4e8b\u52a1\u7ec4\u6210\u7684\uff0c\u5206\u652f\u4e8b\u52a1\u8981\u6ee1\u8db3 **\u4e24\u9636\u6bb5\u63d0\u4ea4** \u7684\u6a21\u578b\u8981\u6c42\uff0c\u5373\u9700\u8981\u6bcf\u4e2a\u5206\u652f\u4e8b\u52a1\u90fd\u5177\u5907\u81ea\u5df1\u7684\uff1a\\n\\n- \u4e00\u9636\u6bb5 prepare \u884c\u4e3a\\n- \u4e8c\u9636\u6bb5 commit \u6216 rollback \u884c\u4e3a\\n\\n![Overview of a global transaction](https://upload-images.jianshu.io/upload_images/4420767-e48f0284a037d1df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\\n\\n\u6839\u636e\u4e24\u9636\u6bb5\u884c\u4e3a\u6a21\u5f0f\u7684\u4e0d\u540c\uff0c\u6211\u4eec\u5c06\u5206\u652f\u4e8b\u52a1\u5212\u5206\u4e3a **Automatic (Branch) Transaction Mode** \u548c **Manual (Branch) Transaction Mode**.\\n\\nAT \u6a21\u5f0f\u57fa\u4e8e **\u652f\u6301\u672c\u5730 ACID \u4e8b\u52a1** \u7684 **\u5173\u7cfb\u578b\u6570\u636e\u5e93**\uff1a\\n\\n- \u4e00\u9636\u6bb5 prepare \u884c\u4e3a\uff1a\u5728\u672c\u5730\u4e8b\u52a1\u4e2d\uff0c\u4e00\u5e76\u63d0\u4ea4\u4e1a\u52a1\u6570\u636e\u66f4\u65b0\u548c\u76f8\u5e94\u56de\u6eda\u65e5\u5fd7\u8bb0\u5f55\u3002\\n- \u4e8c\u9636\u6bb5 commit \u884c\u4e3a\uff1a\u9a6c\u4e0a\u6210\u529f\u7ed3\u675f\uff0c**\u81ea\u52a8** \u5f02\u6b65\u6279\u91cf\u6e05\u7406\u56de\u6eda\u65e5\u5fd7\u3002\\n- \u4e8c\u9636\u6bb5 rollback \u884c\u4e3a\uff1a\u901a\u8fc7\u56de\u6eda\u65e5\u5fd7\uff0c**\u81ea\u52a8** \u751f\u6210\u8865\u507f\u64cd\u4f5c\uff0c\u5b8c\u6210\u6570\u636e\u56de\u6eda\u3002\\n\\n\u76f8\u5e94\u7684\uff0cMT \u6a21\u5f0f\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u5e95\u5c42\u6570\u636e\u8d44\u6e90\u7684\u4e8b\u52a1\u652f\u6301\uff1a\\n\\n- \u4e00\u9636\u6bb5 prepare \u884c\u4e3a\uff1a\u8c03\u7528 **\u81ea\u5b9a\u4e49** \u7684 prepare \u903b\u8f91\u3002\\n- \u4e8c\u9636\u6bb5 commit \u884c\u4e3a\uff1a\u8c03\u7528 **\u81ea\u5b9a\u4e49** \u7684 commit \u903b\u8f91\u3002\\n- \u4e8c\u9636\u6bb5 rollback \u884c\u4e3a\uff1a\u8c03\u7528 **\u81ea\u5b9a\u4e49** \u7684 rollback \u903b\u8f91\u3002\\n\\n\u6240\u8c13 MT \u6a21\u5f0f\uff0c\u662f\u6307\u652f\u6301\u628a **\u81ea\u5b9a\u4e49** \u7684\u5206\u652f\u4e8b\u52a1\u7eb3\u5165\u5230\u5168\u5c40\u4e8b\u52a1\u7684\u7ba1\u7406\u4e2d\u3002"}]}')}}]);